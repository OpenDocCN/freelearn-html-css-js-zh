- en: Chapter 8. Experimenting with Web Push
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章. 尝试 Web 推送
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Implementing a simple push notification
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现简单的推送通知
- en: Showing rich push notifications
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示丰富的推送通知
- en: Using the notification tag
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用通知标签
- en: Implementing push clients
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现推送客户端
- en: Subscribing to push notifications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订阅推送通知
- en: Managing push notification quotas
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理推送通知配额
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Push notifications have been popular with the features in mobile phone applications
    for the last few years. Regardless of whether you have an app opened, running
    in the foreground, or not running at all, push notifications will pop a message
    on your mobile phone. Similar to this, there is a new API available for the web
    called **Push API**, which is an experimental technology at the time of writing.
    In order to make Push API work, we need to have an active service worker running
    and must have subscribed to push notifications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，推送通知因其手机应用程序中的功能而受到欢迎。无论你是否打开了应用程序，在前台运行，或者根本未运行，推送通知都会在你的手机上弹出一个消息。类似地，在编写本文时，有一个新的
    Web API 可用，称为 **Push API**，它是一种实验性技术。为了使 Push API 工作，我们需要有一个活跃的服务工作者运行，并且必须已订阅推送通知。
- en: Let's start off this chapter by looking at how to implement a simple push notification.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从本章开始，看看如何实现一个简单的推送通知。
- en: Implementing a simple push notification
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现简单的推送通知
- en: Fetching remote resources can be done in different ways. In this recipe, we
    are going to look at two standard ways of fetching a remote resource using a service
    worker with and without **cross-origin HTTP requests** (**CORS**).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 获取远程资源可以通过不同的方式完成。在这个菜谱中，我们将探讨使用服务工作者获取远程资源的两种标准方式，包括带有和不带有 **跨源 HTTP 请求**（**CORS**）。
- en: 'If you want to learn more about CORS, follow this link:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于 CORS 的信息，请点击以下链接：
- en: '[https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)'
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考 [第 1 章](ch01.html "第 1 章. 学习服务工作者基础")
    的 *设置服务工作者* 菜谱，*学习服务工作者基础*。服务工作者仅在 HTTPS 上运行。要了解如何设置支持此功能的发展环境，请参考 [第 1 章](ch01.html
    "第 1 章. 学习服务工作者基础") 的 *设置 GitHub pages for SSL* 菜谱，*学习服务工作者基础*。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制 `index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`
    和 `style.css` 文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/01/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/01/)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/01/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/01/)'
- en: Run `npm install` from the command line.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行中运行 `npm install`。
- en: Go to [https://console.developers.google.com/project](https://console.developers.google.com/project)
    and create an API project. Obtain a sender ID (project number) and replace `gcm_sender_id`
    in the `manifest.json` file. Also replace the `<GCM API KEY>` placeholder in the
    `server.js` file.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [https://console.developers.google.com/project](https://console.developers.google.com/project)
    创建一个 API 项目。获取一个发送者 ID（项目编号）并在 `manifest.json` 文件中替换 `gcm_sender_id`。同时替换 `server.js`
    文件中的 `<GCM API KEY>` 占位符。
- en: '[PRE0]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Run `npm start` to kick off a server.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `npm start` 以启动服务器。
- en: Open a browser and go to `index.html`. Make sure that you don't open the browser
    in the incognito mode. Click on the **Send Notification!** button to send a notification.![How
    to do it...](img/B05381_08_01.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并前往 `index.html`。确保你不在隐身模式下打开浏览器。点击 **发送通知！** 按钮发送通知。![如何实现...](img/B05381_08_01.jpg)
- en: Open the Developer Toolbar (*Cmd* + *Alt* + *I* or *F12*). Now refresh the page
    and look at the messages in the console. You will see that the fetch requests
    are logged out into the console.![How to do it...](img/B05381_08_02.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面并查看控制台中的消息。你会看到fetch请求被记录到控制台中。![如何操作...](img/B05381_08_02.jpg)
- en: You will be prompted by your browser to allow notifications.![How to do it...](img/B05381_08_03.jpg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器会提示你允许通知。![如何操作...](img/B05381_08_03.jpg)
- en: Soon you will receive the notification. (It might also take some time depending
    on your configuration.)![How to do it...](img/B05381_08_04.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很快你就会收到通知。（这可能会根据你的配置需要一些时间。）![如何操作...](img/B05381_08_04.jpg)
- en: How it works...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: At the beginning of the `index.js` file, we specify the base URL we use for
    the server.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.js`文件的开始处，我们指定用于服务器的基准URL。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, in order to get the user subscription to the push service, we use `pushManager`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了获取用户的推送服务订阅，我们使用`pushManager`。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If a subscription was found, it will be returned. Otherwise, the user is subscribed.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到了订阅，它将被返回。否则，用户将被订阅。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, we will send subscription details to the server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向服务器发送订阅详情。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will make the server send a notification to the client.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使服务器向客户端发送通知。
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We will add a section to the `index.html` file for the input fields for the
    delay as well as the active time.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`index.html`文件中添加一个用于延迟时间和活动时间的输入字段部分。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We will use a `manifest.json` file for Google Chrome support.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`manifest.json`文件以支持Google Chrome。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the `service-worker.js` file, we will add an event listener for registering
    the push event.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们将添加一个用于注册推送事件的监听器。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Showing rich notifications
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示丰富通知
- en: Rich push notifications can send images, vibration patterns, and localized notifications.
    Let's look at how we can achieve this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 丰富的推送通知可以发送图片、振动模式和本地化通知。让我们看看我们如何实现这一点。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")中的*设置服务工作者*配方，*学习服务工作者基础*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html
    "第1章. 学习服务工作者基础")中的*设置GitHub页面以支持SSL*配方，*学习服务工作者基础*。
- en: How to do it...
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, `amazon-logo.png`, and `style.css` files from the following location:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制`index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`、`amazon-logo.png`和`style.css`文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/03/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/03/)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/03/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/03/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_08_05.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到`index.html`。![如何操作...](img/B05381_08_05.jpg)
- en: You can change the delay time as well as the active time by changing them in
    the input fields.![How to do it...](img/B05381_08_06.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过更改输入字段来更改延迟时间和活动时间。![如何操作...](img/B05381_08_06.jpg)
- en: You may be prompted to allow push notifications.![How to do it...](img/B05381_08_07.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能会被提示允许推送通知。![如何操作...](img/B05381_08_07.jpg)
- en: Soon you will receive the notification. (It might also take some time depending
    on your configuration.)![How to do it...](img/B05381_08_08.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很快你就会收到通知。（这可能会根据你的配置需要一些时间。）![如何操作...](img/B05381_08_08.jpg)
- en: Open the Developer Toolbar (*Cmd* + *Alt* + *I* or *F12*). Now refresh the page
    and look at the messages in the console.![How to do it...](img/B05381_08_09.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面并查看控制台中的消息。![如何操作...](img/B05381_08_09.jpg)
- en: How it works...
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the `index.js` file, we will handle the click event when the user clicks
    on the button.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.js`文件中，我们将处理用户点击按钮时的点击事件。
- en: This will make the server send a notification to the client.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使服务器向客户端发送通知。
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the `service-worker.js` file, we will add an event listener to register the
    push event.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们将添加一个事件监听器来注册推送事件。
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Using the notification tag
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用通知标签
- en: In order to replace old notifications, we can use the notification tag. This
    will help us show up-to-date information to the user.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了替换旧的通知，我们可以使用通知标签。这将帮助我们向用户展示最新的信息。
- en: This recipe will show you how to manage a queue of notifications and discard
    previous notifications or merge them into a single notification.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱将展示如何管理通知队列，并丢弃之前的通知或将它们合并为一个单一的通知。
- en: Getting ready
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the first recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service
    Worker Basics"), *Learning Service Worker Basics*: *Setting up service workers*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")的第一个食谱，*学习服务工作者基础*：*设置服务工作者*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的开发生态系统，请参考[第1章](ch01.html
    "第1章. 学习服务工作者基础")的*设置GitHub页面以支持SSL*食谱。
- en: How to do it...
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制`index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`和`style.css`文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/04/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/04/)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/04/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/04/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_08_10.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到`index.html`。[如何操作...](img/B05381_08_10.jpg)
- en: Soon you will receive the notification. (It might also take some time depending
    on your configuration.)![How to do it...](img/B05381_08_13.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很快你将收到通知。（这可能会根据你的配置需要一些时间。）[如何操作...](img/B05381_08_13.jpg)
- en: How it works...
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the `service-worker.js` file, we will add an event listener to register the
    push event. Note the `tag` element passed into the `showNotification` method.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们将添加一个事件监听器来注册推送事件。注意传递给`showNotification`方法的`tag`元素。
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Implementing push clients
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现推送客户端
- en: Push clients enables us to focus on the tab that our app is running on when
    the user clicks on a notification message. We can even reopen our app if it was
    closed.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 推送客户端使我们能够在用户点击通知消息时专注于我们的应用程序正在运行的标签页。我们甚至可以在应用程序关闭后重新打开它。
- en: Getting ready
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the first recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service
    Worker Basics"), *Learning Service Worker Basics*, *Setting up service workers*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the following recipes of [Chapter
    1](ch01.html "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker
    Basics*: *Setting up GitHub pages for SSL*, *Setting up SSL for Windows*, and
    *Setting up SSL for Mac*.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")的第一个食谱，*学习服务工作者基础*，*设置服务工作者*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的开发生态系统，请参考[第1章](ch01.html
    "第1章. 学习服务工作者基础")的以下食谱：*设置GitHub页面以支持SSL*、*在Windows上设置SSL*和*在Mac上设置SSL*。
- en: How to do it...
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制`index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`和`style.css`文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/)'
- en: Run `npm install` from the command line.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行运行`npm install`。
- en: Go to [https://console.developers.google.com/project](https://console.developers.google.com/project)
    and create an API project. Obtain a sender ID (project number) and replace `gcm_sender_id`
    in the `manifest.json` file. Also replace the `<GCM API KEY>` placeholder in the
    `server.js` file.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[https://console.developers.google.com/project](https://console.developers.google.com/project)并创建一个API项目。获取一个发送者ID（项目编号）并在`manifest.json`文件中替换`gcm_sender_id`。同时替换`server.js`文件中的`<GCM
    API KEY>`占位符。
- en: '[PRE12]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Run `npm start` to kick off a server.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`npm start`以启动服务器。
- en: Open a browser and go to `index.html`. Make sure that you don't open the browser
    in the incognito mode. Insert some text in the **Payload** field and click on
    the **Send Notification!** button to send a notification.![How to do it...](img/B05381_08_14.jpg)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并前往`index.html`。确保您没有在隐身模式下打开浏览器。在**有效载荷**字段中输入一些文本，然后点击**发送通知**按钮以发送通知。![如何操作...](img/B05381_08_14.jpg)
- en: Open the Developer Toolbar (*Cmd* + *Alt* + *I* or *F12*). Now refresh the page
    and look at the messages in the console. You will see that the fetch requests
    are logged out into the console.![How to do it...](img/B05381_08_11.jpg)
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面并查看控制台中的消息。您将看到fetch请求被记录到控制台中。![如何操作...](img/B05381_08_11.jpg)
- en: You will be prompted by your browser to allow notifications.![How to do it...](img/B05381_08_12.jpg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器将提示您允许通知。![如何操作...](img/B05381_08_12.jpg)
- en: Soon you will start to receive notifications. (It might also take some time
    depending on your configuration.)![How to do it...](img/B05381_08_17.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很快您将开始收到通知。（这可能会根据您的配置需要一些时间。）![如何操作...](img/B05381_08_17.jpg)
- en: Clicking on this first notification will take you to the page your app is running.![How
    to do it...](img/B05381_08_18.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击这个第一个通知将带您到应用程序运行所在的页面。![如何操作...](img/B05381_08_18.jpg)
- en: Clicking on the second notification will not do anything.![How to do it...](img/B05381_08_19.jpg)
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第二个通知将不会执行任何操作。![如何操作...](img/B05381_08_19.jpg)
- en: Clicking on the third notification will open a new page with your app running.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第三个通知将打开一个新页面，其中包含运行中的应用程序。
- en: How it works...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: At the beginning of the `index.js` file, we will specify the base URL we use
    for the server.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.js`文件的开始处，我们将指定我们用于服务器的基准URL。
- en: '[PRE13]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, in order to get the user subscription to the push service, we use `pushManager`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了获取用户对推送服务的订阅，我们使用`pushManager`。
- en: '[PRE14]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: If a subscription was found, this will be returned. Otherwise the user will
    be subscribed.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到订阅，这将返回。否则，用户将被订阅。
- en: '[PRE15]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Next, we will send subscription details to the server.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将发送订阅详情到服务器。
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `send` button enables the server to send a notification to the client with
    the payload we specified in the form.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**发送**按钮使服务器能够向客户端发送我们在表单中指定的有效载荷的通知。'
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We will add a section to the `index.html` file for instructing the user about
    the notification messages.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`index.html`文件中添加一个部分，用于指导用户关于通知消息。
- en: '[PRE18]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We use a `manifest.json` file for Google Chrome support.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`manifest.json`文件以支持Google Chrome。
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In the `service-worker.js` file, we will receive the payload and add an event
    listener for registering the push event.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们将接收有效载荷并为注册推送事件添加事件监听器。
- en: '[PRE20]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Subscribing to push notifications
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 订阅推送通知
- en: This recipe will teach you how to use push notifications with subscription management,
    enabling users to subscribe for features that your app will expose to keep in
    touch.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱将教会您如何使用带有订阅管理的推送通知，使用户能够订阅应用程序将公开的功能，以保持联系。
- en: Getting ready
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the first recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service
    Worker Basics"), *Learning Service Worker Basics*, *Setting up service workers*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the following recipes of [Chapter
    1](ch01.html "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker
    Basics*: *Setting up GitHub pages for SSL*, *Setting up SSL for Windows*, and
    *Setting up SSL for Mac*.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章。学习服务工作者基础")的第一个食谱，*学习服务工作者基础*，*设置服务工作者*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html
    "第1章。学习服务工作者基础")的以下食谱，*学习服务工作者基础*：*设置GitHub页面以支持SSL*，*在Windows上设置SSL*，和*在Mac上设置SSL*。
- en: How to do it...
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制`index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`和`style.css`文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/06/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/06/)'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/06/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/06/)'
- en: Run `npm install` from the command line.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行运行`npm install`。
- en: Go to [https://console.developers.google.com/project](https://console.developers.google.com/project)
    and create an API project. Obtain a sender ID (project number) and replace `gcm_sender_id`
    in the `manifest.json` file. Also replace the `<GCM API KEY>` placeholder in the
    `server.js` file.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[https://console.developers.google.com/project](https://console.developers.google.com/project)创建一个API项目。获取一个发送者ID（项目编号）并在`manifest.json`文件中替换`gcm_sender_id`。同时替换`server.js`文件中的`<GCM
    API KEY>`占位符。
- en: '[PRE21]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Run `npm start` to kick off a server.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`npm start`以启动服务器。
- en: Open a browser and go to `index.html`. Make sure that you don't open the browser
    in the incognito mode. Click on the **Subscribe** button. The button will change
    into **Unsubscribe**.![How to do it...](img/B05381_08_20.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到`index.html`。确保你不在隐身模式下打开浏览器。点击**订阅**按钮。按钮将变为**取消订阅**。![如何操作...](img/B05381_08_20.jpg)
- en: Open the Developer Toolbar (*Cmd* + *Alt* + *I* or *F12*). Now refresh the page
    and look at the messages in the console. You will see that the fetch requests
    are logged out into the console.![How to do it...](img/B05381_08_21.jpg)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面并查看控制台中的消息。你会看到fetch请求被记录到控制台中。![如何操作...](img/B05381_08_21.jpg)
- en: You might be prompted by your browser to allow notifications.![How to do it...](img/B05381_08_22.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器可能会提示你允许通知。![如何操作...](img/B05381_08_22.jpg)
- en: Soon you will receive notifications. (It might also take some time depending
    on your configuration.) Once you click on the **Unsubscribe** button, the notifications
    will no longer appear.![How to do it...](img/B05381_08_23.jpg)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很快你就会收到通知。（这可能会根据你的配置需要一些时间。）一旦你点击**取消订阅**按钮，通知将不再显示。![如何操作...](img/B05381_08_23.jpg)
- en: How it works...
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: At the beginning of the `index.js` file, we will specify the base URL we use
    for the server.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.js`文件的开始处，我们将指定我们用于服务器的基准URL。
- en: '[PRE22]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Next, in order to get the user subscription to the push service, we use `pushManager`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了获取用户对推送服务的订阅，我们使用`pushManager`。
- en: '[PRE23]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If a subscription was found, it will be returned. Otherwise the user is subscribed.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到了订阅，它将被返回。否则，用户将被订阅。
- en: '[PRE24]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Next, we will send subscription details to the server.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向服务器发送订阅详情。
- en: '[PRE25]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The button enables the server to send a notification to the client with the
    payload we specified in the form.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 该按钮使服务器能够向客户端发送我们以表单形式指定的有效载荷的通知。
- en: '[PRE26]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In order to manage subscriptions we will add toggle logic.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理订阅，我们将添加切换逻辑。
- en: '[PRE27]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: We will add a section to the `index.html` file for instructing the user about
    the notification messages.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`index.html`文件中添加一个部分，用于指导用户了解通知消息。
- en: '[PRE28]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: We will use a `manifest.json` file for Google Chrome support.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`manifest.json`文件以支持Google Chrome。
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In the `service-worker.js` file, we will receive the payload and add an event
    listener for registering the push event.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们将接收有效载荷并为注册推送事件添加事件监听器。
- en: '[PRE30]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: In the `server.js` file, we will send notifications to the push service.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在`server.js`文件中，我们将向推送服务发送通知。
- en: '[PRE31]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: For the purpose of demonstration, we will simulate the event that has occurred
    by sending a notification in every `pushInterval` to the registered end point.
    So, you will see notifications coming in rapidly.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，我们将通过在每`pushInterval`内向注册的端点发送通知来模拟已发生的事件。因此，您将看到通知快速到来。
- en: '[PRE32]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Managing push notification quotas
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理推送通知配额
- en: In this recipe, we are going to experiment with the quota management policies
    of different browsers. We will attempt to send as many notifications as possible
    to test against opened and closed tabs, clicking on notifications as well as ignoring
    them.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将对不同浏览器的配额管理策略进行实验。我们将尝试发送尽可能多的通知来测试打开和关闭标签页、点击通知以及忽略通知的情况。
- en: Getting ready
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the following recipes of [Chapter
    1](ch01.html "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker
    Basics*: *Setting up GitHub pages for SSL*, *Setting up SSL for Windows*, and
    *Setting up SSL for Mac*.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作线程，您需要在浏览器设置中开启服务工作线程实验功能。如果您还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作线程基础")的*设置服务工作线程*配方，*学习服务工作线程基础*。服务工作线程仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考以下[第1章](ch01.html
    "第1章. 学习服务工作线程基础")的配方，*学习服务工作线程基础*：*设置GitHub页面以支持SSL*，*在Windows上设置SSL*，和*在Mac上设置SSL*。
- en: How to do it...
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置您的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制`index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`和`style.css`文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/07/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/07/)'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/07/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/07/)'
- en: Run `npm install` from the command line.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行运行`npm install`。
- en: Go to [https://console.developers.google.com/project](https://console.developers.google.com/project)
    and create an API project. Obtain a sender ID (project number) and replace `gcm_sender_id`
    in the `manifest.json` file. Also, replace the `<GCM API KEY>` placeholder in
    the `server.js` file.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[https://console.developers.google.com/project](https://console.developers.google.com/project)并创建一个API项目。获取一个发送者ID（项目编号）并在`manifest.json`文件中替换`gcm_sender_id`。同时，在`server.js`文件中替换`<GCM
    API KEY>`占位符。
- en: '[PRE33]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Run `npm start` to kick off a server.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`npm start`以启动服务器。
- en: Open a browser and go to `index.html`. Make sure that you don't open the browser
    in the incognito mode. Click on either the **Visible notifications** or **Invisible
    notifications** button.![How to do it...](img/B05381_08_24.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到`index.html`。确保您没有在隐身模式下打开浏览器。点击**可见通知**或**不可见通知**按钮。![如何操作...](img/B05381_08_24.jpg)
- en: Open the Developer Toolbar (*Cmd* + *Alt* + *I* or *F12*). Now refresh the page
    and look at the messages in the console. You will see that the fetch requests
    are logged out into the console.![How to do it...](img/B05381_08_25.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面并查看控制台中的消息。您将看到fetch请求被记录到控制台中。![如何操作...](img/B05381_08_25.jpg)
- en: You may be prompted by your browser to allow notifications.![How to do it...](img/B05381_08_26.jpg)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器可能会提示您允许通知。![如何操作...](img/B05381_08_26.jpg)
- en: How it works...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: At the beginning of the `index.js` file, we will specify the base URL we use
    for the server.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.js`文件的开始处，我们将指定我们用于服务器的基准URL。
- en: '[PRE34]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Next, in order to get the user subscription to the push service, we use `pushManager`.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了获取用户对推送服务的订阅，我们使用`pushManager`。
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If a subscription was found, that will be returned. Otherwise the user is subscribed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到订阅，则将其返回。否则，用户将被订阅。
- en: '[PRE36]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: We will also retrieve the user's public key.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将检索用户的公钥。
- en: '[PRE37]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Next, we will send subscription details to the server.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将发送订阅详情到服务器。
- en: '[PRE38]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: We will ask the server to send the client a notification for testing purposes.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将请求服务器向客户端发送通知以进行测试。
- en: '[PRE39]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The `clear` button clears the notification cache, which stores the number of
    notifications received.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`清除`按钮清除通知缓存，该缓存存储收到的通知数量。'
- en: '[PRE40]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Update the UI by reading the number of notifications received.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 通过读取收到的通知数量来更新用户界面。
- en: '[PRE41]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Also, update the number of notifications received periodically.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，定期更新收到的通知数量。
- en: '[PRE42]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: We will add a section to the `index.html` file for instructing the user about
    the notification messages.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`index.html`文件中添加一个部分，用于指导用户关于通知消息。
- en: '[PRE43]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: We will use a `manifest.json` file for Google Chrome support.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`manifest.json`文件以支持Google Chrome。
- en: '[PRE44]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: In the `service-worker.js` file, we keep the service worker alive until the
    notifications cache is updated.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们保持服务工作者（service worker）处于活跃状态，直到通知缓存更新。
- en: '[PRE45]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: We will create a notifications cache to store the notifications received.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个通知缓存来存储收到的通知。
- en: '[PRE46]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In the `server.js` file, we will send notifications to the push service.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在`server.js`文件中，我们将向推送服务发送通知。
- en: '[PRE47]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
