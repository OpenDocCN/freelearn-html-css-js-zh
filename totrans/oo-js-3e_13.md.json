["```js\n    var arr = [1,1,13,'Rx',0,0]; \n    console.log(arr); \n    >>> [1, 1, 13, \"Rx\", 0, 0] \n\n```", "```js\n    var arr = Rx.Observable.interval(500).take(9).map(\n      a=>[1,1,13,'Rx',0,0][a]); \n    var result = arr; \n    result.subscribe(x=>console.log(x)); \n\n```", "```js\n    var arr = [1,1,13,'Rx',0,0]; \n    var result = arr.map(x => parseInt(x)).filter(x => !isNan(x)); \n    console.log(result); \n\n```", "```js\n    var arr = Rx.Observable.interval(500).take(9).map(\n      a=>[1,1,13,'Rx',0,0][a]); \n    var result = arr.map(x => parseInt(x)).filter(x => !isNaN(x)); \n    result.subscribe(x=>console.log(x)); \n\n```", "```js\n    let a = 3; \n    let b = a * 10; \n    console.log(b); //30 \n    a = 4; \n    console.log(b); // Still 30 \n\n```", "```js\n    var streamA = Rx.Observable.of(3, 4); \n    var streamB = streamA.map(a => 10 * a); \n    streamB.subscribe(b => console.log(b)); \n\n```", "```js\n    npm install -g create-react-app \n\n```", "```js\n    create-react-app react-app \n    cd react-app/ \n    npm start \n\n```", "```js\n    <!doctype html> \n    <html lang=\"en\"> \n      <head> \n        <title>React App</title> \n      </head> \n      <body> \n <div id=\"root\"></div> \n      </body> \n    </html> \n\n```", "```js\n    import React from 'react'; \n    const App = () => <h1>Hello React</h1> \n    export default App \n\n```", "```js\n    import React from 'react'; \n    import ReactDOM from 'react-dom'; \n\n```", "```js\n    const App = () => <h1>Hello React</h1> \n\n```", "```js\n    class App extends React.Component { \n      render(){ \n        return <h1>Hello World</h1> \n      } \n    } \n\n```", "```js\n    return React.createElement('h1', null, 'Hello World'); \n\n```", "```js\n    return <h1>Hello World</h1><p>React Rocks</p> \n\n```", "```js\n    Error in ./src/App.js \n    Syntax error: Adjacent JSX elements must be wrapped in \n      an enclosing tag (4:31) \n\n```", "```js\n    render(){ \n        return ( \n          <div> \n            <h1>Hello World</h1> \n            <p>React Rocks</p> \n          </div> \n          ) \n    } \n\n```", "```js\n    function Greet(props) { \n      return <h1>Hello, {props.name}</h1>; \n    } \n\n```", "```js\n    render(){ \n      return ( \n       return <Greet name=\"Joe\"/> \n      ) \n    } \n\n```", "```js\n    class Greet extends React.Component { \n      render(){ \n          return <h1>Hello, {this.props.name}</h1> \n      } \n    } \n\n```", "```js\n    class Greet extends React.Component { \n constructor(props) {\n super(props); \n this.state = { \ngreeting: \"this is default greeting text\" \n} \n } \n      render(){ \n          return <h1>{this.state.greeting}, {this.props.name} </h1> \n      } \n    } \n\n```", "```js\n    class Greet extends React.Component { \n      constructor(props) { \n        super(props); \n        this.state = { \n          greeting: \"this is default greeting text\" \n        } \n      } \n updateGreeting(event){ \nthis.setState({ \ngreeting:\n      event.target.value,\n })\n } \n      render(){ \n          return ( \n          <div>   \n <input type=\"text\" onChange={this.updateGreeting.bind(this)}/> \n            <h1>{this.state.greeting}, {this.props.name} </h1> \n           </div>  \n          ) \n        } \n    } \n\n```", "```js\n    render(){ \n        return ( \n          <div>   \n <Widget update={this.updateGreeting.bind(this)} /> \n <Widget update={this.updateGreeting.bind(this)} /> \n <Widget update={this.updateGreeting.bind(this)} /> \n          <h1>{this.state.greeting}, {this.props.name} </h1> \n          </div>  \n        ) \n      } \n    } \n    const Widget = (props) => <input type=\"text\" \n      onChange={props.update}/> \n\n```"]