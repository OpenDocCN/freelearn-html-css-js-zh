["```js\n    $ bower install moment –save\n    $ ember g initializer application\n\n    ```", "```js\n    // ember-cli-build.js\n    /*jshint node:true*/\n    /* global require, module */\n    var EmberApp = require('ember-cli/lib/broccoli/ember-app');\n\n    module.exports = function(defaults) {\n        var app = new EmberApp(defaults, {\n          // Add options here\n        });\n\n        app.import('bower_components/moment/min/moment.min.js');\n          return app.toTree();\n    };\n    ```", "```js\n    // app/initializers/application.js\n    /* global moment */\n    import Ember from 'ember';\n\n    export function initialize( application) {\n        let MyLogger = Ember.Object.extend({\n          log(info){\n            let time = moment().format();\n            Ember.Logger.debug(`(${time}):`,info);\n          }\n        });\n        application.register('myLogger:zzz', MyLogger);\n        application.inject('controller','myLogger','myLogger:zzz');\n    }\n\n    export default {\n        name: 'application',\n        initialize\n    };\n    ```", "```js\n        application.register('myLogger:zzz', MyLogger);\n    ```", "```js\n        application.inject('controller','myLogger','myLogger:zzz');\n    ```", "```js\n    // app/controllers/application.js\n    import Ember from 'ember';\n\n    export default Ember.Controller.extend({\n        actions: {\n          press(){\n            this.myLogger.log('Hello World!');\n\n        }\n    });\n    ```", "```js\n    <h2 id=\"title\">Welcome to Ember</h2>\n\n    {{outlet}}\n    <button {{action 'press'}}>Button</button>\n    ```", "```js\n    $ ember g initializer application\n\n    ```", "```js\n    // app/initializers/application.js\n    export function initialize( application ) {\n        alert('loading application');\n    }\n\n    export default {\n        name: 'application',\n        initialize\n    };\n    ```", "```js\n    // app/initializer/application.js\n    export function initialize(app) {\n        app.inject('component', 'start', 'service:start');\n    }\n\n    export default {\n        name: 'init',\n        initialize\n    };\n    ```", "```js\n    $ ember g service sockjs\n    $ ember g component chat-room\n    $ ember g initializer application\n    $ bower install sockjs --save\n\n    ```", "```js\n    // ember-cli-build.js\n    …\n    app.import('bower_components/sockjs/sockjs.min.js');\n    …\n    ```", "```js\n    // app/services/sockjs.js\n    /* global SockJS */\n    import Ember from 'ember';\n    const {run} = Ember;\n\n    export default Ember.Service.extend(Ember.Evented,{\n        socket: null,\n        init() {\n          this._super();\n          let socket = new SockJS('http://localhost:7000');\n          socket.addEventListener('message', run.bind(this, (event)=> {\n            this.trigger('messageReceived', event.data);\n            console.log(event.data);\n          }));\n          this.set('socket',socket);\n        },\n        sendInfo(message) {\n          this.get('socket').send(message);\n\n        }\n\n    });\n    ```", "```js\n    /* global SockJS */\n    ```", "```js\n    export default Ember.Service.extend(Ember.Evented,{\n    ```", "```js\n    init() {\n        this._super(…arguments);\n    },\n    ```", "```js\n    let socket = new SockJS('http://localhost:7000');\n    ```", "```js\n    socket.addEventListener('message', run.bind(this, (event)=> {\n        this.trigger('messageReceived', event.data);\n        console.log(event.data);\n    }));\n    this.set('socket',socket);\n    ```", "```js\n        sendInfo(message) {\n          this.get('socket').send(message);\n        }\n    ```", "```js\n    // app/initializers/application.js\n    export function initialize( application ) {\n        application.inject('component', 'sockjs', 'service:sockjs');\n    }\n\n    export default {\n        name: 'websockets',\n        initialize\n    };\n    ```", "```js\n    // app/components/chat-room.js\n    import Ember from 'ember';\n    const {$} = Ember;\n\n    export default Ember.Component.extend({\n        message: '',\n\n        init() {\n          this._super(…arguments);\n          this.sockjs.on('messageReceived',this, 'messageReceived');\n        },\n\n        messageReceived(message){\n          $('#chat-content').val((i, text)=>\n          `${text}${message}\\n`;\n          );\n          this.set('message',message);\n        },\n        actions: {\n          enter(info,username) {\n            this.sockjs.sendInfo(`${username}: ${info}`);\n\n          }\n        }\n\n    });\n    ```", "```js\n        init() {\n          this._super(…arguments);\n          this.sockjs.on('messageReceived',this, 'messageReceived');\n        },\n    ```", "```js\n        messageReceived(message){\n          $('#chat-content').val((i, text)=>\n          `${text}${message}\\n`\n          );\n          this.set('message',message);\n    ```", "```js\n        actions: {\n          enter(info,username) {\n            this.sockjs.sendInfo(`${username}: ${info}`);\n\n          }\n        }\n    ```", "```js\n    // app/templates/components/chat-room.hbs\n\n        <textarea id=\"chat-content\" style=\"width:500px;height:300px\" ></textarea><br/>\n        {{input type='text' placeholder='User Name' value=uname}}\n        {{input type='text' placeholder='Chat Message' value=mess}}\n        <button {{action 'enter' mess uname}}>Send</button><br>\n\n    Message received:{{message}}\n    ```", "```js\n    // app/templates/application.hbs\n    <h2 id=\"title\">Welcome to Ember</h2>\n\n    {{outlet}}\n    {{chat-room}}\n    ```", "```js\n    $ npm init\n    $ npm install sockjs –save\n\n    ```", "```js\n    // app.js\n    var http = require('http');\n    var sockjs = require('sockjs');\n\n    var clients = {};\n\n    function broadcast(message){\n        for (var client in clients){\n          clients[client].write(message);\n        }\n    }\n\n    var socketServer = sockjs.createServer({ sockjs_url: 'http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js' });\n    socketServer.on('connection', (conn)=> {\n        clients[conn.id] = conn;\n\n        conn.on('data', (message)=> {\n          console.log('received ' + message);\n          broadcast(message);\n        });\n        conn.write(\"hello from the server thanks for connecting!\");\n        conn.on('close', ()=> {\n          delete clients[conn.id];\n        });\n        console.log(\"connected\");\n    });\n\n    var server = http.createServer();\n    socketServer.installHandlers(server);\n    server.listen(7000, '0.0.0.0');\n    ```", "```js\n    function broadcast(message){\n        for (var client in clients){\n          clients[client].write(message);\n        }\n    }\n    ```", "```js\n    $ ember addon sockjs-chat\n    $ cd sockjs-chat\n    $ ember g component sockjs-chat\n    $ ember g service sockjs\n    $ ember g blueprint sockjs-chat\n    $ npm install ember-cli-htmlbars --save\n\n    ```", "```js\n    // blueprints/sockjs-chat/index.js\n    /*jshint node:true*/\n    module.exports = {\n        normalizeEntityName() {\n    },\n\n        afterInstall() {\n          return this.addBowerPackageToProject('sockjs-client', '~1.0.3');\n        }\n    };\n    ```", "```js\n    // index.js\n    /* jshint node: true */\n    'use strict';\n\n    module.exports = {\n        name: 'sockjs-chat',\n          included(app) {\n            this._super.included(app);\n            app.import(app.bowerDirectory + '/sockjs-client/dist/sockjs.min.js');\n          }\n    };\n    ```", "```js\n    // package.json\n    {\n        \"name\": \"sockjs-chat\",\n        \"version\": \"1.0.0\",\n        \"description\": \"EmberJS Sockjs Chat Addon\",\n    …\n    \"repository\": \"https://github.com/ErikCH/sockjs-chat\",\n    …\n    \"author\": \"Erik Hanchett\",\n    …\n        \"keywords\": [\n          \"ember-addon\",\n          \"sockjs\",\n          \"ember websockets\"\n    …\n    ```", "```js\n    // addon/services/sockjs.js\n    /* global SockJS */\n    import Ember from 'ember';\n    var {run} = Ember;\n\n    export default Ember.Service.extend(Ember.Evented,{\n        socket: null,\n        setupSockjs(url) {\n          let socket = new SockJS(url);\n          socket.addEventListener('message', run.bind(this, (event)=> {\n            this.trigger('messageReceived', event.data);\n            console.log(event.data);\n          }));\n          this.set('socket',socket);\n        },\n        sendInfo(message) {\n          let socket= this.get('socket');\n          if(socket != null){\n            socket.send(message);\n          }\n        }\n\n    });\n    ```", "```js\n          socket.addEventListener('message', run.bind(this,(event)=> {\n            this.trigger('messageReceived', event.data);\n            console.log(event.data);\n          }));\n    ```", "```js\n        sendInfo(message) {\n          let socket= this.get('socket');\n          if(socket != null){\n            socket.send(message);\n          }\n    ```", "```js\n    // addon/components/sockjs-chat.js\n    import Ember from 'ember';\n    import layout from '../templates/components/sockjs-chat';\n    const {typeOf} = Ember;\n    export default Ember.Component.extend({\n\n        sockjs: Ember.inject.service('sockjs'),\n        layout,\n        message:'',\n\n        init() {\n          this._super(...arguments);\n          this.get('sockjs').setupSockjs(this.attrs.url);\n          this.get('sockjs').on('messageReceived',this,(message)=>{\n            this.set('message',message);\n            this._actionHandler('receiveAction',message);\n          });\n        },\n        _actionHandler(actionName, ...args) {\n\n          if(this.attrs && typeOf(this.attrs[actionName]) === 'function'){\n            this.attrs[actionName](...args);\n          } else {\n            this.sendAction(actionName,...args);\n\n          },\n\n          actions: {\n            enter(info,username) {\n              this._actionHandler('sendAction',info,username);\n\n            }\n          }\n\n    });\n    ```", "```js\n    {{sockjs-chat\n    url='http://localhost:7000'\n    receiveAction=(action 'receiveMessage')\n    sendAction=(action 'sendMessage') }}\n    ```", "```js\n        layout,\n        message:'',\n        init() {\n          this._super(...arguments);\n          this.get('sockjs').setupSockjs(this.attrs.url);\n          this.get('sockjs').on('messageReceived',this,(message)=>{\n            this.set('message',message);\n            this._actionHandler('receiveAction',message);\n          });\n        },\n    ```", "```js\n        _actionHandler(actionName, ...args) {\n\n          if(this.attrs && typeOf(this.attrs[actionName]) === 'function'){\n            this.attrs[actionName](...args);\n          } else {\n            this.sendAction(actionName,...args);\n          }\n        },\n    ```", "```js\n        actions: {\n          enter(info,username) {\n            this._actionHandler('sendAction',info,username);\n\n          }\n        }\n    ```", "```js\n    // addon/templates/components/sockjs-chat.hbs\n    {{#if hasBlock}}\n        {{yield this}}\n    {{else}}\n\n        <textarea id=\"chat-content\" style=\"width:500px;height:300px\" ></textarea><br/>\n        {{input type='text' placeholder='User Name' value=uname}}\n        {{input type='text' placeholder='Chat Message' value=mess}}\n        <button {{action 'enter' mess uname}}>Send</button><br>\n\n    {{/if}}\n    ```", "```js\n    $ bower install sockjs-client –-save-dev\n\n    ```", "```js\n    // ember-cli-build.js\n    /*jshint node:true*/\n    /* global require, module */\n    var EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n\n    module.exports = function(defaults) {\n        var app = new EmberAddon(defaults, {\n          // Add options here\n        });\n\n    /*\n    This build file specifes the options for the dummy test app of this\n    addon, located in `/tests/dummy`\n    This build file does *not* influence how the addon or the app using it\n    behave. You most likely want to be modifying `./index.js` or app's build file\n    */\n\n        app.import('bower_components/sockjs-client/dist/sockjs-0.3.4.js');\n        return app.toTree();\n    };\n    ```", "```js\n    // tests/dummy/app/templates/application.hbs\n    <h2 id=\"title\">Welcome to Ember</h2>\n\n    {{sockjs-chat\n    url='http://localhost:7000'\n    receiveAction=(action 'receiveMessage')\n    sendAction=(action 'sendMessage') }}\n    ```", "```js\n    // tests/dummy/app/controllers/application.js\n\n    import Ember from 'ember';\n    const {$} = Ember;\n    export default Ember.Controller.extend({\n        sockjs: Ember.inject.service('sockjs'),\n        actions:{\n          receiveMessage(message){\n            $('#chat-content').val((i, text)=>\n            `${text}${message}\\n`\n            );\n            this.set('message',message);\n\n          },\n          sendMessage(message, username){\n            console.log(username);\n            console.log(message);\n            var send = this.get('sockjs');\n            send.sendInfo(`${username}: ${message}`);\n\n           }\n        }\n    });\n    ```", "```js\n    $ ember server\n\n    ```", "```js\n    // tests/dummy/app/templates/application.hbs\n    <h2 id=\"title\">Welcome to Ember</h2>\n\n    {{outlet}}\n\n    <h2>Alternative</h2>\n    {{#sockjs-chat\n    url='http://localhost:7000'\n    receiveAction=(action 'receiveMessage')\n    sendAction=(action 'sendMessage') as |sockjs|}}\n\n        <textarea id=\"chat-content\" style=\"width:300px;height:300px\"></textarea><br/>\n        {{input type='text' placeholder='User Name' value=uname}}\n        {{input type='text' placeholder='Chat Message' value=mess}}\n        <button {{action 'enter' mess uname target=sockjs}}>Send</button><br>\n        {{sockjs.message}}\n\n    {{/sockjs-chat}}\n    ```", "```js\n    {{#sockjs-chat\n    url='http://localhost:7000'\n    receiveAction=(action 'receiveMessage')\n    sendAction=(action 'sendMessage') as |sockjs|}}\n    ```", "```js\n    <button {{action 'enter' mess uname target=sockjs}}>Send</button><br>\n    ```", "```js\n        {{sockjs.message}}\n    ```", "```js\n    $ cd sockjs-chat\n    $ npm link\n    $ cd ..\n    $ ember new chat \n    $ cd chat\n    $ npm link sockjs-chat\n\n    ```", "```js\n    // chat/package.json\n    …\n        \"devDependencies\": {\n        \"sockjs-chat\": \"*\"\n    …\n    ```", "```js\n    $ npm install\n    $ ember g sockjs-chat\n\n    ```", "```js\n    $ cd sockjs-chat\n    $ git add .\n    $ git commit –m \"first commit\"\n    $ git remote add origin git@yourserver:username/sockjs-chat.git\n    $ git push origin master\n\n    ```", "```js\n    $ cd my-app\n    $ ember install git+ssh://git@yourserver:username/sockjs-chat.git \n\n    ```", "```js\n    $ cd sockjs-chat\n    $ npm adduser\n    $ npm publish\n\n    ```", "```js\n    $ cd my-app2\n    $ ember install sockjs-chat\n\n    ```", "```js\n    $ ember g component time-checker\n    $ bower install moment –save\n\n    ```", "```js\n    // ember-cli-build.js\n    /*jshint node:true*/\n    /* global require, module */\n    var EmberApp = require('ember-cli/lib/broccoli/ember-app');\n\n    module.exports = function(defaults) {\n        var app = new EmberApp(defaults, {\n          // Add options here\n        });\n\n        app.import('bower_components/moment/min/moment.min.js');\n\n        return app.toTree();\n    };\n    ```", "```js\n    // app/components/time-checker.js\n    /* global moment */\n    import Ember from 'ember';\n\n    export default Ember.Component.extend({\n        startTime: null,\n        currentTime:null,\n        init(){\n          this._super(...arguments);\n          this.set('startTime',moment());\n          this.startWatchingTime();\n\n        },\n        startWatchingTime(){\n          this.set('currentTime', moment());\n          Ember.run.later(()=>{\n            this.startWatchingTime();\n          }, 1000);\n        },\n        diff: Ember.computed('startTime','currentTime', function(){\n          return this.get('currentTime').diff(this.get('startTime'),'seconds');\n\n        })\n    });\n    ```", "```js\n        init(){\n          this._super(...arguments);\n          this.set('startTime',moment());\n          this.startWatchingTime();\n\n        },\n          startWatchingTime(){\n            this.set('currentTime', moment());\n            Ember.run.later(()=>{\n              this.startWatchingTime();\n            }, 1000);\n    ```", "```js\n        diff: Ember.computed('startTime','currentTime', function(){\n          return  this.get('currentTime').diff(this.get('startTime'),'seconds');\n\n        })\n    ```", "```js\n    // app/templates/components/time-checker.hbs\n    Startup time: {{startTime}}<br>\n    Current time: {{currentTime}}<br>\n    Difference: {{diff}}\n    ```", "```js\n    <h2 id=\"title\">Welcome to Ember</h2>\n\n    {{time-checker}}\n    ```"]