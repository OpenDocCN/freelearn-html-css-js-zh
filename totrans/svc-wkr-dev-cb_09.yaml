- en: Chapter 9. Looking at General Usage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章. 查看通用用法
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Taking immediate control of the page
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立即控制页面
- en: Working with slow responses
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理缓慢的响应
- en: Relaying messages
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递消息
- en: Using a service worker as a proxy middleware
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用服务工作者作为代理中间件
- en: Using a service worker with a live flowchart
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用带有实时流程图的服务工作者
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will look into some of the scenarios where the service worker
    can become useful. These scenarios may fall into the general-use category. The
    examples we will look at here can be used as the foundation to build other service
    worker features.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨一些服务工作者可能变得有用的场景。这些场景可能属于通用类别。我们将在此处查看的示例可以用作构建其他服务工作者功能的基础。
- en: Taking immediate control of the page
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 立即控制页面
- en: This simple recipe will demonstrate how to have the service worker immediately
    take control of the page without having to wait for a navigation event.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的配方将演示如何让服务工作者立即控制页面，而无需等待导航事件。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")中的*设置服务工作者*配方，*学习服务工作者基础*。服务工作者仅在
    HTTPS 上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")中的*设置GitHub页面以支持SSL*配方，*学习服务工作者基础*。
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, and `style.css` files
    from the following location:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制 `index.html`、`index.js`、`service-worker.js` 和 `style.css` 文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/01/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/01/)'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/01/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/01/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_09_01.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并访问 `index.html`。![如何操作...](img/B05381_09_01.jpg)
- en: Refresh the page. The status of the service worker will be displayed on the
    screen.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新页面。服务工作者的状态将显示在屏幕上。
- en: How it works...
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In our `index.html` file, we will add a section to display the service worker
    status.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 `index.html` 文件中，我们将添加一个部分来显示服务工作者的状态。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: At the beginning of the `index.js` file, we will inspect the registration status
    and print it to the screen.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `index.js` 文件的开始处，我们将检查注册状态并将其打印到屏幕上。
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, in the `service-worker.js` file, we will call `skipWaiting()` to enable
    an updated service worker to be immediately active when there is an existing service
    worker that differs from the updated version.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 `service-worker.js` 文件中，我们将调用 `skipWaiting()` 以启用更新的服务工作者在存在与更新版本不同的现有服务工作者时立即激活。
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Working with slow responses
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理缓慢的响应
- en: Slow updates from the service worker are a good way to mock slow response times
    from the servers. In this recipe, we are going to use a timeout to mock slow responses.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 服务工作者缓慢的更新是模拟服务器缓慢响应时间的好方法。在这个配方中，我们将使用超时来模拟缓慢的响应。
- en: Getting ready
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the first recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service
    Worker Basics"), *Learning Service Worker Basics*: *Setting up service workers*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the following recipes in [Chapter
    1](ch01.html "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker
    Basics*: *Setting up GitHub pages for SSL*, *Setting up SSL for Windows*, and
    *Setting up SSL for Mac*.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")中的第一个配方，*学习服务工作者基础*：*设置服务工作者*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html
    "第1章. 学习服务工作者基础")中的以下配方：*为GitHub页面设置SSL*、*为Windows设置SSL*和*为Mac设置SSL*。
- en: How to do it...
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `server.js`,
    `package.json`, and `style.css` files from the following location:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制 `index.html`、`index.js`、`service-worker.js`、`manifest.json`、`server.js`、`package.json`
    和 `style.css` 文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/02/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/02/)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/02/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/02/)'
- en: Open a browser and go to index.html.![How to do it...](img/B05381_09_02.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到 index.html。![如何做...](img/B05381_09_02.jpg)
- en: Open the Developer Toolbars (*Cmd* + *Alt* + *I* or *F12*). Now refresh the
    page and look at the messages in the console. You will see the service worker
    life cycle methods are logged out into the console.![How to do it...](img/B05381_09_03.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具栏（*Cmd* + *Alt* + *I* 或 *F12*）。现在刷新页面，查看控制台中的消息。你会看到服务工作者生命周期方法被记录到控制台中。![如何做...](img/B05381_09_03.jpg)
- en: Refresh the page. A message from the service worker will be displayed on the
    screen.![How to do it...](img/B05381_09_04.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新页面。服务工作者将显示在屏幕上的消息。![如何做...](img/B05381_09_04.jpg)
- en: How it works...
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the `index.js` file, we will append the console message to the screen at
    the point of service worker registration.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `index.js` 文件中，我们将在服务工作者注册的点将控制台消息附加到屏幕上。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, in the `service-worker.js` file we will create a function to delay any
    new promise we receive.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 `service-worker.js` 文件中，我们将创建一个函数来延迟我们接收到的任何新承诺。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The usual lifecycle methods will call the `wait` function in order to delay
    the `install`, `activate`, and `fetch` statuses.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 常规的生命周期方法将调用 `wait` 函数来延迟 `install`、`activate` 和 `fetch` 状态。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Relaying messages
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中继消息
- en: Service workers can be used to build a small chat message feature into your
    browser. This recipe demonstrates how to communicate between a page and the service
    worker by relaying messages between pages we are going to use to build our little
    chat app.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 服务工作者可以用来在你的浏览器中构建一个小型聊天消息功能。这个配方展示了如何通过在将要用于构建我们的小型聊天应用之间的页面中中继消息，通过页面和服务工作者之间进行通信。
- en: Getting ready
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工作者基础")中的*设置服务工作者*配方，*学习服务工作者基础*。服务工作者仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html
    "第1章. 学习服务工作者基础")中的*为GitHub页面设置SSL*配方，*学习服务工作者基础*。
- en: How to do it...
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Copy the `index.html`, `index.js`, `service-worker.js`, `manifest.json`, `package.json`,
    and `style.css` files from the following location:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置复制 `index.html`、`index.js`、`service-worker.js`、`manifest.json`、`package.json`
    和 `style.css` 文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/03/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/03/)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/03/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/03/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_09_05.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并访问 `index.html`。![如何操作...](img/B05381_09_05.jpg)
- en: Now open another browser and go to `index.html`. Type something in the text
    area.![How to do it...](img/B05381_09_06.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开另一个浏览器并访问 `index.html`。在文本区域中输入一些内容。![如何操作...](img/B05381_09_06.jpg)
- en: Now open another browser and go to `index.html`. Type something in the text
    area.![How to do it...](img/B05381_09_07.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开另一个浏览器并访问 `index.html`。在文本区域中输入一些内容。![如何操作...](img/B05381_09_07.jpg)
- en: How it works...
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: At the beginning of the `index.js` file, we query the DOM nodes for the UI.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `index.js` 文件的开始处，我们查询 UI 的 DOM 节点。
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We then listen to any service worker messages. When a message is received, we
    specify a DOM element to display it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后监听任何服务工作者消息。当收到消息时，我们指定一个 DOM 元素来显示它。
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When a page is force-reloaded, for example, the service worker will not send
    any messages.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面强制重新加载时，例如，服务工作者将不会发送任何消息。
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `service-worker.js` file has the event handler for the message.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`service-worker.js` 文件包含消息的事件处理器。'
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: An immediate claim will make sure that the user doesn't have to refresh the
    page.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 立即声明将确保用户不必刷新页面。
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the `index.html` file, we add a div, a text area, and a paragraph tag for
    the messages.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `index.html` 文件中，我们添加一个 div、一个文本区域和一个段落标签用于消息。
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using a service worker as a proxy middleware
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用服务工作者作为代理中间件
- en: A proxy is an intermediary between a web browser and the Internet. In this recipe,
    you will learn how to use a service worker as a proxy middleware.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 代理是网络浏览器和互联网之间的中介。在这个菜谱中，你将学习如何使用服务工作者作为代理中间件。
- en: Getting ready
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the first recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service
    Worker Basics"), *Learning Service Worker Basics*: *Setting up service workers*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the following recipes in [Chapter
    1](ch01.html "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker
    Basics*: *Setting up GitHub pages for SSL*, *Setting up SSL for Windows*, and
    *Setting up SSL for Mac*.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工作者，你需要在浏览器设置中开启服务工作者实验功能。如果你还没有这样做，请参考 [第 1 章](ch01.html "第 1 章。学习服务工作者基础")
    的第一个菜谱，*学习服务工作者基础*：*设置服务工作者*。服务工作者仅在 HTTPS 上运行。要了解如何设置支持此功能的发展环境，请参考 [第 1 章](ch01.html
    "第 1 章。学习服务工作者基础") 中的以下菜谱，*学习服务工作者基础*：*设置 GitHub pages for SSL*、*设置 Windows 的
    SSL* 和 *设置 Mac 的 SSL*。
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Download all the files from the following location:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置下载所有文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/04/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/04/)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/04/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/09/04/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_09_08.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并访问 `index.html`。![如何操作...](img/B05381_09_08.jpg)
- en: Now click on the first link to navigate to the `/hello` link.![How to do it...](img/B05381_09_09.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击第一个链接以导航到 `/hello` 链接。![如何操作...](img/B05381_09_09.jpg)
- en: Now open DevTools (*Cmd* + *Alt* + *I* or *F12*) to see the log messages on
    the **Console** tab.![How to do it...](img/B05381_09_10.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开开发者工具 (*Cmd* + *Alt* + *I* 或 *F12*)，在 **控制台** 选项卡上查看日志消息。![如何操作...](img/B05381_09_10.jpg)
- en: Now click on the first link to navigate to the `/hello/world` link.![How to
    do it...](img/B05381_09_11.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击第一个链接以导航到 `/hello/world` 链接。![如何操作...](img/B05381_09_11.jpg)
- en: How it works...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We will add two links to the `index.html` file where we are planning to create
    a proxy.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在计划创建代理的 `index.html` 文件中添加两个链接。
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We will create a proxy for requests to the local URLs inside the `service-worker.js`
    file containing a `hello` string as well as `hello/world`. The client will recognize
    this as a local resource.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 `service-worker.js` 文件中创建一个代理，该文件包含一个 `hello` 字符串以及 `hello/world`。客户端将将其识别为本地资源。
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We will pass these handlers into the fetch event listener as callbacks.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将这些处理程序作为回调传递给fetch事件监听器。
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Using a service worker with a live flowchart
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用带有实时流程图的服务工人
- en: In this recipe, you will learn how to use a service worker by demonstrating
    the workflow and logging the steps so we can follow the flow.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，你将通过演示工作流程并记录步骤来学习如何使用服务工人，以便我们可以跟随流程。
- en: 'The features we are going to implement are as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要实现的功能如下：
- en: A button to register a service worker
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于注册服务工人的按钮
- en: A button to reload the document
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于重新加载文档的按钮
- en: A button to unregister the service worker
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于注销服务工人的按钮
- en: The buttons can be pressed in any order. You can also specify the service worker
    script URL and scope to simulate different test cases.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮可以按任何顺序按下。你也可以指定服务工人脚本URL和作用域来模拟不同的测试用例。
- en: Getting ready
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with service workers, you will need to have the service worker
    experiment feature turned on in your browser settings. If you have not done this
    yet, refer to the *Setting up service workers* recipe of [Chapter 1](ch01.html
    "Chapter 1. Learning Service Worker Basics"), *Learning Service Worker Basics*.
    Service workers only run across HTTPS. To find out how to set up a development
    environment to support this feature, refer to the *Setting up GitHub pages for
    SSL* recipe of [Chapter 1](ch01.html "Chapter 1. Learning Service Worker Basics"),
    *Learning Service Worker Basics*.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用服务工人，你需要在浏览器设置中开启服务工人实验功能。如果你还没有这样做，请参考[第1章](ch01.html "第1章. 学习服务工人基础")的*设置服务工人*配方，*学习服务工人基础*。服务工人仅在HTTPS上运行。要了解如何设置支持此功能的发展环境，请参考[第1章](ch01.html
    "第1章. 学习服务工人基础")的*设置GitHub页面以支持SSL*配方，*学习服务工人基础*。
- en: How to do it...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these instructions to set up your file structure:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明设置你的文件结构：
- en: 'Download files from the following location:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置下载文件：
- en: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/)'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/](https://github.com/szaranger/szaranger.github.io/blob/master/service-workers/08/05/)'
- en: Open a browser and go to `index.html`.![How to do it...](img/B05381_09_12.jpg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并转到`index.html`。![如何操作...](img/B05381_09_12.jpg)
- en: Now open DevTools (*Cmd* + *Alt* + *I* or *F12*) to see the log messages on
    the **Console** tab.![How to do it...](img/B05381_09_13.jpg)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开开发者工具 (*Cmd* + *Alt* + *I* 或 *F12*) 以查看**控制台**选项卡上的日志消息。![如何操作...](img/B05381_09_13.jpg)
- en: Now click on the **REGISTER SPECIFIED SW** button.![How to do it...](img/B05381_09_14.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击**注册指定SW**按钮。![如何操作...](img/B05381_09_14.jpg)
- en: Now open DevTools (*Cmd* + *Alt* + *I* or *F12*) to see the log messages on
    the **Console** tab.![How to do it...](img/B05381_09_15.jpg)
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开开发者工具 (*Cmd* + *Alt* + *I* 或 *F12*) 以查看**控制台**选项卡上的日志消息。![如何操作...](img/B05381_09_15.jpg)
- en: Now click on the **RELOAD DOCUMENT** button.![How to do it...](img/B05381_09_16.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击**重新加载文档**按钮。![如何操作...](img/B05381_09_16.jpg)
- en: Now open up DevTools (*Cmd* + *Alt* + *I* or *F12*) to see the log messages
    on the **Console** tab.![How to do it...](img/B05381_09_17.jpg)
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开开发者工具 (*Cmd* + *Alt* + *I* 或 *F12*) 以查看**控制台**选项卡上的日志消息。![如何操作...](img/B05381_09_17.jpg)
- en: Now click on the **UNREGISTER ACTIVE SW** button.![How to do it...](img/B05381_09_18.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击**注销活动SW**按钮。![如何操作...](img/B05381_09_18.jpg)
- en: Now open up DevTools (*Cmd* + *Alt* + *I* or *F12*) to see the log messages
    on the **Console** tab.![How to do it...](img/B05381_09_19.jpg)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在打开开发者工具 (*Cmd* + *Alt* + *I* 或 *F12*) 以查看**控制台**选项卡上的日志消息。![如何操作...](img/B05381_09_19.jpg)
- en: How it works...
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: At the beginning of the `app.js` file, we initiate a helper for the service
    worker.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app.js`文件的开始处，我们初始化服务工人的辅助工具。
- en: '[PRE15]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To register a service worker, we perform the following steps:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要注册服务工人，我们执行以下步骤：
- en: '[PRE16]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Then, we check if the service worker is supported.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们检查是否支持服务工人。
- en: '[PRE17]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Next, we check if the service worker is in control.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们检查服务工人是否处于控制状态。
- en: '[PRE18]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now we try to register the service worker in order to enable features.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们尝试注册服务工人以启用功能。
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We will disable the possibility of the user unregistering the service worker.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将禁用用户注销服务工人的可能性。
- en: '[PRE20]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: So the application gets started.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，应用程序开始运行。
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: In the `service-worker.js` file, we receive the payload and add an event listener
    for registering the push event.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在`service-worker.js`文件中，我们接收有效负载并为注册推送事件添加事件监听器。
- en: '[PRE22]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the `index.html` file, we will add a section to display the buttons and the
    console.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.html`文件中，我们将添加一个部分来显示按钮和控制台。
- en: '[PRE23]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
