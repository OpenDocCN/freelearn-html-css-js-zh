- en: Appendix A. Reserved Words
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This appendix provides two lists of reserved keywords as defined in ECMAScript
    5 (ES5). The first one is the current list of words, and the second is the list
    of words reserved for future implementations.
  prefs: []
  type: TYPE_NORMAL
- en: There's also a list of words that are no longer reserved, although they used
    to be in ES3.
  prefs: []
  type: TYPE_NORMAL
- en: 'You cannot use reserved words as variable names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you use these words as object properties, you have to quote them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Keywords
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The list of words currently reserved in ES5 is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`break`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`case`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`catch`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`continue`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`debugger`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`default`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`delete`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`do`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`else`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`finally`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`for`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`function`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`if`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`in`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`instanceof`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`new`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`return`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`switch`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`this`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`throw`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`try`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`typeof`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`var`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`void`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`while`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`with`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ES6 reserved words
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following keywords are reserved in ES6:'
  prefs: []
  type: TYPE_NORMAL
- en: '`class`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`const`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`enum`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`export`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`extends`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`implements`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`import`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`interface`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`let`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`package`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`protected`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`public`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`static`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`super`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`yield`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future reserved words
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'These keywords are not used currently but they are reserved for the future
    versions:'
  prefs: []
  type: TYPE_NORMAL
- en: '`enum`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`await`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previously reserved words
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following words are no longer reserved starting with ES5, but it''s best
    to stay away from them for the sake of older browsers:'
  prefs: []
  type: TYPE_NORMAL
- en: '`abstract`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`boolean`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`byte`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`char`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`double`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`final`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`float`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`goto`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`int`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`long`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`native`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`short`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`synchronized`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`throws`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`transient`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`volatile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
