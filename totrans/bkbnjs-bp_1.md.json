["```js\n{\n  \"name\": \"simple-blog\",\n  \"description\": \"This is a simple blog.\",\n  \"version\": \"0.1.0\",\n  \"scripts\": {\n    \"start\": \"nodemon server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"3.x.x\",\n    \"ejs\"    : \"~0.8.4\",\n    \"bourne\" : \"0.3\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"latest\"\n  }\n}\n```", "```js\nnpm install\n\n```", "```js\nvar express = require('express');\nvar path    = require('path');\nvar Bourne  = require(\"bourne\");\n```", "```js\nvar app      = express();\nvar posts    = new Bourne(\"simpleBlogPosts.json\");\nvar comments = new Bourne(\"simpleBlogComments.json\");\n```", "```js\napp.configure(function(){\n  app.use(express.json());\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n```", "```js\napp.get('/*', function (req, res) {\n  res.render(\"index.ejs\");\n});\n```", "```js\napp.listen(3000);\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title> Simple Blog </title>\n  </head>\n  <body>\n    <div id=\"main\"></div>\n      <script src=\"img/jquery.js\"></script>\n      <script src=\"img/underscore.js\"></script>\n      <script src=\"img/backbone.js\"></script>\n      <script src=\"img/app.js\"></script>\n  </body>\n</html>\n```", "```js\nvar Post = Backbone.Model.extend({});\nvar Posts = Backbone.Collection.extend({\n  model: Post,\n  url: \"/posts\"\n});\n```", "```js\napp.get(\"/posts\", function (req, res) {\n  posts.find(function (results) {\n    res.json(results);\n  });\n});\n```", "```js\napp.post(\"/posts\", function (req, res) {\n  posts.insert(req.body, function (result) {\n    res.json(result);\n  });\n});\n```", "```js\n[\n  {\n    \"id\": 1,\n    \"pubDate\": \"2013-10-20T19:42:46.755Z\",\n    \"title\": \"Lorem Ipsum\",\n    \"content\": \"<p>Dolor sit amet . . .</p>\"\n  }\n]\n```", "```js\nvar posts = new Posts();\nposts.length // => 0\n\n```", "```js\nposts.fetch();\n\n```", "```js\nposts.length // => 1\nvar post = posts.get(1);\npost.get(\"title\"); // Lorem Ipsum\n\n```", "```js\nvar PostListView = Backbone.View.extend({\n  tagName: \"li\",\n  template: _.template(\"<a href='/posts/{{id}}'>{{title}}</a>\"),\n  render: function () {\n    this.el.innerHTML = this.template(this.model.toJSON());\n    return this;\n  }\n});\n```", "```js\n_.templateSettings = {\n  interpolate: /\\{\\{(.+?)\\}\\}/g\n};\n```", "```js\nvar PostsListView = Backbone.View.extend({\n  template: _.template(\"<h1>My Blog</h1><ul></ul>\"),\n  render: function () {\n    this.el.innerHTML = this.template();\n    var ul = this.$el.find(\"ul\");\n    this.collection.forEach(function (post) {\n      ul.append(new PostListView({ \n        model: post \n      }).render().el);\n    });\n    return this;\n  }\n});\n```", "```js\napp.get('/*', function (req, res) {\n  posts.find(function (err, results) {\n    res.render(\"index.ejs\", { posts: JSON.stringify(results) });\n  });\n});\n```", "```js\n<script>\n  var posts = new Posts(<%- posts %>);\n  $(\"#main\").append(new PostsListView({ \n    collection: posts \n  }).render().el);\n</script>\n```", "```js\nvar PostRouter = Backbone.Router.extend({\n  initialize: function (options) {\n    this.posts = options.posts;\n    this.main  = options.main;\n  },\n  routes: {\n    '': 'index',\n    'posts/:id': 'singlePost'\n  },\n  index: function () {\n    var pv = new PostsListView({ collection: this.posts }\n    this.main.html(pv.render().el);\n  },\n  singlePost: function (id) {\n    console.log(\"view post \" + id);\n  }\n});\n```", "```js\nvar postRouter = new PostRouter({\n  posts: new Posts(<%- posts %>),\n  main: $(\"#main\")\n});\nBackbone.history.start({pushState: true});\n```", "```js\nevents: {\n  'click a': 'handleClick'\n},\nhandleClick: function (e) {\n  e.preventDefault();\n  postRouter.navigate($(e.currentTarget).attr(\"href\"), \n    {trigger: true});\n}\n```", "```js\nvar PostView = Backbone.View.extend({\n  template: _.template($(\"#postView\").html()),\n  events: {\n    'click a': 'handleClick'\n  },\n  render: function () {\n    var model = this.model.toJSON();\n    model.pubDate = new Date(Date.parse(model.pubDate)).toDateString();\n    this.el.innerHTML = this.template(model);\n    return this;\n  },\n  handleClick: function (e) {\n    e.preventDefault();\n    postRouter.navigate($(e.currentTarget).attr(\"href\"),\n      {trigger: true});\n    return false;\n  }\n});\n```", "```js\nvar template = _.template($(\"#postView\").html());\n```", "```js\n<script type=\"text/template\" id=\"postView\">\n  <a href='/'>All Posts</a>\n  <h1>{{title}}</h1>\n  <p>{{pubDate}}</p>\n  {{content}}\n</script>\n```", "```js\nsinglePost: function (id) {\n  var post = this.posts.get(id);\n  var pv = new PostView({ model: post });\n  this.main.html(pv.render().el);\n}\n```", "```js\n<script type=\"text/template\" id=\"postFormView\">\n  <a href=\"/\">All Posts</a><br />\n  <input type=\"text\" id=\"postTitle\" placeholder=\"post title\" />\n  <br />\n  <textarea id=\"postText\"></textarea>\n  <br />\n  <button id=\"submitPost\"> Post </button>\n</script>\n```", "```js\nvar PostFormView = Backbone.View.extend({\n  tagName: 'form',\n  template: _.template($(\"#postFormView\").html()),\n  initialize: function (options) {\n    this.posts = options.posts;\n  },\n  events: {\n    'click button': 'createPost'\n  },\n  render: function () {\n    this.el.innerHTML = this.template();\n    return this;\n  },\n  createPost: function (e) {\n    var postAttrs = {\n      content: $(\"#postText\").val(),\n      title: $(\"#postTitle\").val(),\n      pubDate: new Date()\n    };\n    this.posts.create(postAttrs);\n    postRouter.navigate(\"/\", { trigger: true });\n    return false;\n  }\n});\n```", "```js\nvar post = new Post(commentAttrs);\nthis.posts.add(post);\npost.save();\n```", "```js\nurlRoot: \"/posts\",\n```", "```js\n'posts/new': 'newPost'\n```", "```js\nnewPost: function () {\n  var pfv = new PostFormView({ posts: this.posts });\n  this.main.html(pfv.render().el);\n},\n```", "```js\nvar Comment = Backbone.Model.extend({});\nvar Comments = Backbone.Collection.extend({\n  initialize: function (models, options) {\n    this.post = options.post;\n  },\n  url: function () {\n    return this.post.url() + \"/comments\";\n  }\n});\n```", "```js\nvar Post = Backbone.Model.extend({\n  initialize: function () {\n    this.comments = new Comments([], { post: this });\n  }\n});\n```", "```js\napp.get(\"/posts/:id/comments\", function (req, res) {\n  comments.find(\n    { postId: parseInt(req.params.id, 10) },\n    function (err, results) {\n      res.json(results);\n    }\n  );\n});\n```", "```js\napp.post(\"/posts/:id/comments\", function (req, res) {\n  comments.insert(req.body, function (err, result) {\n    res.json(result);\n  });\n});\n```", "```js\nvar CommentView = Backbone.View.extend({\n  template: _.template($(\"#commentView\").html()),\n  render: function () {\n    var model = this.model.toJSON();\n    model.date = new Date(Date.parse(model.date)).toDateString();\n    this.el.innerHTML = this.template(model);\n    return this;\n  }\n});\n```", "```js\n<script type=\"text/template\" id=\"commentView\">\n  <hr />\n  <p><strong>{{name}}</strong> said on {{date}}: </p>\n  <p>{{text}}</p>\n</script>\n```", "```js\n<script type=\"text/template\" id=\"commentFormView\">\n  <input type=\"text\" id=\"cmtName\" placeholder=\"name\" /><br />\n  <textarea id=\"cmtText\"></textarea><br />\n  <button id=\"submitComment\"> Submit </button>\n</script>\n```", "```js\nvar CommentFormView = Backbone.View.extend({\n  tagName: \"form\",\n  initialize: function (options) {\n    this.post = options.post;\n  },\n  template: _.template($(\"#commentFormView\").html()),\n  events: {\n    'click button': 'submitComment'\n  },\n  render: function () {\n    this.el.innerHTML = this.template();\n    return this;\n  },\n  submitComment: function (e) {\n    var name = this.$(\"#cmtName\").val();\n    var text = this.$(\"#cmtText\").val();\n    var commentAttrs = {\n      postId: this.post.get(\"id\"),\n      name: name,\n      text: text,\n      date: new Date()\n    };\n    this.post.comments.create(commentAttrs);\n    this.el.reset();\n  }\n});\n```", "```js\nvar CommentsView = Backbone.View.extend({\n  initialize: function (options) {\n    this.post = options.post;\n    this.post.comments.on('add', this.addComment, this);\n  },\n  addComment: function (comment) {\n    this.$el.append(new CommentView({ \n      model: comment \n    }).render().el);\n  },\n  render: function () {\n    this.$el.append(\"<h2> Comments </h2>\");\n    this.$el.append(new CommentFormView({ \n      post: this.post \n    }).render().el);\n    this.post.comments.fetch();\n    return this;\n  }\n});\n```"]