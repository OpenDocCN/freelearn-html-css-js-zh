- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Leveraging the JavaScript and Node.js Ecosystem for Microservices Development
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用 JavaScript 和 Node.js 生态系统进行微服务开发
- en: The ecosystem of JavaScript and Node.js is of significant importance for developers
    and businesses. The JavaScript and Node.js ecosystem’s importance lies in its
    ability to empower developers, drive innovation, provide extensive resources,
    and foster collaboration.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 和 Node.js 生态系统对开发者和企业来说具有重要意义。JavaScript 和 Node.js 生态系统的重要性在于其赋予开发者能力、推动创新、提供广泛资源以及促进协作的能力。
- en: We’ll start this chapter by mastering the JavaScript ecosystem for microservices
    development. To start developing microservices using Node.js, you need to leverage
    its ecosystem, and by doing this, you will learn about its vast package management,
    tools and libraries, and development collaboration, while maintaining a high development
    productivity rate with critical thinking. As a result, you will be able to develop
    cross-platform applications, integrating with databases, messaging systems, cloud
    services, and third-party **APIs** (**application** **programming interfaces**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从这个章节开始，掌握微服务开发的 JavaScript 生态系统。要使用 Node.js 开发微服务，你需要利用其生态系统，通过这样做，你将了解其庞大的包管理、工具和库以及开发协作，同时保持高开发生产力率并运用批判性思维。结果，你将能够开发跨平台应用程序，与数据库、消息系统、云服务和第三方
    **API**（**应用程序** **编程接口**）集成。
- en: By the end of this chapter, you will have learned how to leverage the JavaScript
    and Node.js ecosystem for microservices development and how to apply the concepts
    in your everyday work.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将学会如何利用 JavaScript 和 Node.js 生态系统进行微服务开发，以及如何将这些概念应用到你的日常工作中。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Vast package management and developer productivity
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 庞大的包管理和开发者生产力
- en: Community support and collaboration, and rapid innovation and updates
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社区支持和协作，以及快速创新和更新
- en: Versatility and full stack development, and cross-platform compatibility
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多功能性、全栈开发，以及跨平台兼容性
- en: Integration and interoperability, and support for modern web standards
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成和互操作性，以及对现代网络标准的支持
- en: Enterprise adoption and industry maturity, and ecosystem growth and innovation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业采用和行业成熟度，以及生态系统增长和创新
- en: Vast package management and developer productivity
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 庞大的包管理和开发者生产力
- en: In this section, we’re going to learn about NPM packages, tools and libraries,
    and how these tools can help you exceed in your work while maintaining a high
    productivity rate as a developer. Vast package management and developer productivity
    are two crucial aspects of modern software development that significantly impact
    the efficiency, quality, and speed of creating applications.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习关于 NPM 包、工具和库，以及这些工具如何帮助你超越工作，同时作为开发者保持高生产力率。庞大的包管理和开发者生产力是现代软件开发中的两个关键方面，对创建应用程序的效率、质量和速度有重大影响。
- en: Let’s explore these concepts in more detail in the following subsections.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在接下来的小节中更详细地探讨这些概念。
- en: Vast package management
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 庞大的包管理
- en: '**Package management** involves the use of repositories to store and distribute
    software libraries, modules, and tools that developers can integrate into their
    applications. A **vast package management** system refers to a rich and extensive
    collection of packages available to developers. In the context of JavaScript,
    **npm** (**Node Package Manager**) is a prime example of a vast package management
    system.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**包管理**涉及使用仓库来存储和分发软件库、模块和工具，开发者可以将它们集成到他们的应用程序中。一个**庞大的包管理系统**指的是开发者可用的丰富和广泛的包集合。在
    JavaScript 的背景下，**npm**（**Node Package Manager**）是庞大的包管理系统的典型例子。'
- en: 'This system has some key points, as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统有一些关键点，如下所述：
- en: '`npm` is the default package manager for Node.js and JavaScript. It hosts a
    massive repository of open source packages that cover a wide range of functionalities.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm` 是 Node.js 和 JavaScript 的默认包管理器。它托管了一个包含广泛功能的开源包的庞大仓库。'
- en: '**Reusable code**: Vast package repositories allow developers to easily find
    and integrate existing code and libraries, saving time and effort in building
    functionality from scratch.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可重用代码**：庞大的包仓库允许开发者轻松地找到并集成现有的代码和库，从而在从头开始构建功能时节省时间和精力。'
- en: '`npm` handles package dependencies automatically, ensuring that the required
    libraries and versions are installed when needed.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm` 自动处理包依赖关系，确保在需要时安装所需的库和版本。'
- en: '**Community contributions**: A vast package ecosystem is often the result of
    active contributions from the developer community, fostering collaboration and
    sharing.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区贡献**：庞大的包生态系统通常是开发者社区积极贡献的结果，促进了协作和共享。'
- en: '**Quality and maintenance**: Well-maintained packages with regular updates
    contribute to code quality, security, and compatibility.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量和维护**：定期更新的良好维护的包有助于提高代码质量、安全性和兼容性。'
- en: Knowing these key points can help you and your team build better software and
    contribute to high quality code, security and compatibility.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这些关键点可以帮助你和你的团队构建更好的软件，并为高质量的代码、安全性和兼容性做出贡献。
- en: '*Figure 4**.1* illustrates vast package management:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4*.*1* 展示了庞大的包管理：'
- en: '![Figure 4.1: Vast package management (image by vectorjuice on Freepik)](img/B14980_04_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1：庞大的包管理（图片由 Freepik 上的 vectorjuice 提供）](img/B14980_04_01.jpg)'
- en: 'Figure 4.1: Vast package management (image by vectorjuice on Freepik)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1：庞大的包管理（图片由 Freepik 上的 vectorjuice 提供）
- en: Through its `npm` packages and community contributions, vast package management
    can offer a better state of applications/systems through reusable code and maintain
    high-quality code, while focusing on the security and compatibility of your applications/systems.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 通过其 `npm` 包和社区贡献，庞大的包管理可以通过可重用代码提供更好的应用程序/系统状态，同时保持高质量代码，并关注应用程序/系统的安全性和兼容性。
- en: In the next section, we’ll learn about developer productivity.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习关于开发者生产力的内容。
- en: Developer productivity
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发者生产力
- en: '**Developer productivity** refers to the efficiency and effectiveness of developers
    in creating software. It encompasses tools, practices, and workflows that enable
    developers to write, test, and deploy code faster and with fewer errors.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**开发者生产力**指的是开发者创建软件的效率和效果。它包括工具、实践和工作流程，使开发者能够更快、更少出错地编写、测试和部署代码。'
- en: 'The key features of developer productivity include the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者生产力的关键特性包括以下内容：
- en: '**Integrated development environments (IDEs)**: IDEs provide tools for coding,
    debugging, and testing, enhancing productivity by streamlining development workflows.
    Between different IDEs, for working with Node.js, we can talk about WebStorm by
    JetBrains. WebStorm is a proprietary IDE that is designed for JavaScript, HTML,
    and CSS. It offers advanced features such as code assistance, debugging, testing,
    refactoring, and version control.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成开发环境（IDE）**：IDE 提供了编码、调试和测试的工具，通过简化开发工作流程来提高生产力。在处理 Node.js 时，我们可以谈论 JetBrains
    的 WebStorm。WebStorm 是一个专有 IDE，专为 JavaScript、HTML 和 CSS 设计。它提供高级功能，如代码辅助、调试、测试、重构和版本控制。'
- en: '**Code editors**: Lightweight code editors such as **Visual Studio** (**VS**)
    Code offer customizable environments with extensions for various languages and
    frameworks. VS Code is a free and open source code editor that supports a wide
    range of programming languages and web technologies. It provides basic features
    such as syntax highlighting, code completion, and debugging support.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码编辑器**：轻量级的代码编辑器，如 **Visual Studio** （**VS**）Code，提供可定制的环境，并支持各种语言和框架的扩展。VS
    Code 是一个免费的开源代码编辑器，支持广泛的编程语言和 Web 技术。它提供基本功能，如语法高亮、代码补全和调试支持。'
- en: '**Version control**: Version control systems such as Git enable collaboration,
    tracking changes, and managing code base history. Versioning the releases is a
    way to help developers better manage applications and manage the changes and updates
    of an API over time. Versioning can help track API behavior by providing a clear
    and consistent way to identify and document the features, functionalities, and
    compatibility of each API release.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本控制**：如 Git 这样的版本控制系统使协作、跟踪更改和管理代码库历史成为可能。版本化发布是一种帮助开发者更好地管理应用程序以及管理 API
    随时间变化的变化和更新的方法。版本化可以通过提供一种清晰和一致的方式来识别和记录每个 API 发布的功能、功能性和兼容性，从而帮助跟踪 API 行为。'
- en: '**Automation**: Automation tools (such as build tools and continuous integration)
    automate repetitive tasks, reducing manual effort and potential errors.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：自动化工具（如构建工具和持续集成）自动化重复性任务，减少人工努力和潜在错误。'
- en: '**Code reviews**: Regular code reviews help catch bugs, ensure code quality,
    and share knowledge among team members.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码审查**：定期的代码审查有助于发现错误、确保代码质量并在团队成员之间分享知识。'
- en: '**Documentation**: Well-documented code and clear project documentation improve
    code base understanding and maintainability.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：良好的代码文档和清晰的项目文档可以提高代码库的理解性和可维护性。'
- en: '**Testing frameworks**: Testing tools and frameworks help developers write
    and execute tests efficiently, ensuring reliable and stable code. Unit testing
    in Node.js is the practice of testing the smallest units or components of a Node.js
    application using specialized frameworks and libraries. Unit testing can help
    improve the quality and performance of code, as well as prevent and detect bugs
    and errors. Some of the popular frameworks and libraries for unit testing in Node.js
    are Mocha, Jest, Jasmine, and AVA. Unit testing in Node.js typically involves
    three steps – arrange, act, and assert. In the arrange step, the test setup and
    dependencies are prepared. In the act step, the function or code to be tested
    is executed. In the assert step, the expected and actual outcomes are compared.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试框架**：测试工具和框架帮助开发者高效地编写和执行测试，确保代码的可靠性和稳定性。在 Node.js 中进行单元测试是使用专门的框架和库测试
    Node.js 应用程序的最小单元或组件的实践。单元测试可以帮助提高代码的质量和性能，以及预防和检测错误。Node.js 中一些流行的单元测试框架和库包括
    Mocha、Jest、Jasmine 和 AVA。Node.js 中的单元测试通常涉及三个步骤——准备、执行和断言。在准备步骤中，准备测试设置和依赖项。在执行步骤中，执行要测试的功能或代码。在断言步骤中，比较预期的和实际的结果。'
- en: '**Package management**: Package managers simplify the process of integrating
    third-party code, enabling rapid development.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件包管理**：软件包管理器简化了集成第三方代码的过程，从而实现快速开发。'
- en: '**Developer experience (DX)**: DX focuses on providing developers with a smooth,
    intuitive, and enjoyable experience while working with tools and libraries.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发者体验（DX）**：DX 专注于在开发者使用工具和库时提供流畅、直观和愉悦的体验。'
- en: When we develop microservices in Node.js, we can use these tools and concepts
    to increase the efficiency and effectiveness of developers when creating software.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在 Node.js 中开发微服务时，我们可以使用这些工具和概念来提高开发者创建软件的效率和效果。
- en: '*Figure 4**.2* illustrates developer productivity concepts:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.2* 展示了开发者生产力概念：'
- en: '![Figure 4.2: Developer productivity (image by storyset on Freepik))](img/B14980_04_02.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2：开发者生产力（图片由 Freepik 上的 storyset 提供）](img/B14980_04_02.jpg)'
- en: 'Figure 4.2: Developer productivity (image by storyset on Freepik))'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2：开发者生产力（图片由 Freepik 上的 storyset 提供）
- en: In summary, both *vast* package management and developer productivity are critical
    factors in the success of software projects. A rich package ecosystem saves time
    by leveraging existing solutions, while optimizing developer productivity leads
    to efficient development cycles, high-quality code, and improved collaboration
    within development teams.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，广泛的软件包管理和开发者生产力是软件项目成功的关键因素。丰富的软件包生态系统通过利用现有解决方案来节省时间，而优化开发者生产力则导致高效的开发周期、高质量的代码以及开发团队内部协作的改善。
- en: With the understanding of these concepts, let’s now move on to community support
    and collaboration, and rapid innovation and updates.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 理解了这些概念后，我们现在可以继续讨论社区支持和协作，以及快速创新和更新。
- en: Community support and collaboration, and rapid innovation and updates
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区支持和协作，以及快速创新和更新
- en: Community support and collaboration as well as rapid innovation and updates
    are two interconnected concepts that play a crucial role in modern software development.
    Let’s explore how these aspects contribute to the success of software projects.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 社区支持和协作以及快速创新和更新是两个相互关联的概念，在现代软件开发中扮演着至关重要的角色。让我们探讨这些方面如何有助于软件项目的成功。
- en: Community support and collaboration
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区支持和协作
- en: '**Community support and collaboration** contribute to rapid innovation and
    updates.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**社区支持和协作**有助于快速创新和更新。'
- en: Node.js community forums are online platforms where developers and enthusiasts
    can discuss, share, and learn about Node.js, a JavaScript runtime that enables
    server-side programming.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 社区论坛是开发者和技术爱好者可以讨论、分享和学习 Node.js 的在线平台，Node.js 是一种允许服务器端编程的 JavaScript
    运行时。
- en: '*Figure 4**.3* illustrates the community support and collaboration process:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.3* 展示了社区支持和协作过程：'
- en: '![Figure 4.3: The community support and collaboration process (image by jemastock
    on Freepik)](img/B14980_04_03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3：社区支持和协作过程（图片由 Freepik 上的 jemastock 提供）](img/B14980_04_03.jpg)'
- en: 'Figure 4.3: The community support and collaboration process (image by jemastock
    on Freepik)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3：社区支持和协作过程（图片由 Freepik 上的 jemastock 提供）
- en: Knowledge sharing, forums and discussions, and collective learning are interrelated
    concepts that describe the process and outcome of exchanging and acquiring information,
    skills, and insights among individuals or groups. Knowledge sharing is the act
    of making your knowledge available and accessible to others, either explicitly
    or implicitly. Forums and discussions are the platforms and methods of facilitating
    knowledge sharing, where participants can ask questions, provide answers, share
    opinions, and give feedback. Collective learning is the result and benefit of
    knowledge sharing, forums and discussions, where participants can learn from each
    other, improve their understanding, and create new knowledge.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 知识共享、论坛和讨论以及集体学习是相互关联的概念，它们描述了个人或群体之间交换和获取信息、技能和见解的过程和结果。知识共享是将您的知识提供给他人，无论是明确还是隐含的行为。论坛和讨论是促进知识共享的平台和方法，参与者可以提问、提供答案、分享观点和反馈。集体学习是知识共享、论坛和讨论的结果和好处，参与者可以从彼此那里学习，提高他们的理解，并创造新的知识。
- en: Knowing that you will have community support always during your software development
    process is a relief for many programmers because you will have less stress, and
    you can rely on the community of developers to solve every problem you may face
    during this process.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 知道在整个软件开发过程中始终会有社区支持，这对许多程序员来说是一种安慰，因为这将减轻他们的压力，并且他们可以依赖开发者社区来解决在此过程中可能遇到的每一个问题。
- en: With these concepts learned, we can continue with rapid innovation and updates.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握了这些概念之后，我们可以继续进行快速创新和更新。
- en: Rapid innovation and updates
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速创新和更新
- en: The **rapid innovation and updates** process is a must in a software development
    life cycle because your development process, like your software, needs to be regularly
    up-to-date and always rapidly innovating.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件开发生命周期中，快速创新和更新过程是必不可少的，因为您的开发过程，就像您的软件一样，需要定期更新并始终快速创新。
- en: 'Some key points of rapid innovation and updates include the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 快速创新和更新的几个关键点包括以下内容：
- en: '**Agile development**: Agile methodologies promote iterative development, allowing
    for quick adaptations to changing requirements'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷开发**：敏捷方法促进迭代开发，允许快速适应变化的需求。'
- en: '**Scalability**: Node.js applications can be easily scaled horizontally, making
    them suitable for real-time applications and microservices architectures'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：Node.js 应用程序可以轻松地进行横向扩展，使其适合实时应用程序和微服务架构。'
- en: '**Continuous integration/continuous deployment (CI/CD)**: CI/CD pipelines automate
    testing and deployment, enabling rapid and reliable updates'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续集成/持续部署（CI/CD）**：CI/CD 管道自动化测试和部署，实现快速且可靠的更新。'
- en: '**Version control**: Version control systems such as Git enable teams to manage
    and track changes efficiently, facilitating continuous updates'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本控制**：如 Git 这样的版本控制系统使团队能够高效地管理和跟踪变更，促进持续更新。'
- en: '**Feature releases**: Regular feature releases enable users to access new functionalities
    and improvements promptly'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能发布**：定期的功能发布使用户能够及时访问新的功能和改进。'
- en: '**A feedback loop**: Frequent updates provide opportunities for user feedback,
    which helps refine features and identify issues'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反馈循环**：频繁的更新为用户提供反馈的机会，有助于完善功能和识别问题。'
- en: '**Security updates**: Rapid updates ensure that security vulnerabilities are
    addressed promptly, minimizing risks'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全更新**：快速更新确保及时解决安全漏洞，最小化风险。'
- en: '**Market relevance**: Continuous innovation keeps software products relevant
    in a fast-changing market'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**市场相关性**：持续创新使软件产品在快速变化的市场中保持相关性。'
- en: Applying these key points to your software development life cycle will help
    you and your team ship better and faster applications/systems.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些关键点应用到您的软件开发生命周期中，将帮助您和您的团队更快更好地交付应用程序/系统。
- en: '*Figure 4**.4* depicts rapid innovation and updates:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4.4* 描述了快速创新和更新：'
- en: '![Figure 4.4: Rapid innovation and updates (image by rawpixel.com on Freepik))](img/B14980_04_04.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4：快速创新和更新（图片由 rawpixel.com 在 Freepik 上提供）](img/B14980_04_04.jpg)'
- en: 'Figure 4.4: Rapid innovation and updates (image by rawpixel.com on Freepik))'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4：快速创新和更新（图片由 rawpixel.com 在 Freepik 上提供）
- en: In conclusion, community support and collaboration, along with rapid innovation
    and updates, create a dynamic and responsive ecosystem in software development.
    This collaboration between developers, users, and the broader community fosters
    continuous improvement, ensures software relevancy, and enhances the overall quality
    of projects.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，社区支持和协作，以及快速创新和更新，在软件开发中创造了一个动态和响应式的生态系统。这种开发者、用户和更广泛社区之间的协作促进了持续改进，确保了软件的相关性，并提高了项目的整体质量。
- en: Now, we can continue to the next section, in which we will discuss versatility
    and full stack development, and cross-platform compatibility.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以继续到下一节，我们将讨论通用性和全栈开发，以及跨平台兼容性。
- en: Versatility and full stack development, and cross-platform compatibility
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通用性和全栈开发，以及跨平台兼容性
- en: Versatility and full stack development, and cross-platform compatibility are
    two significant aspects of modern software development that empower developers
    to create versatile applications that can run on various platforms.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通用性和全栈开发，以及跨平台兼容性是现代软件开发中的两个重要方面，使开发者能够创建可在各种平台上运行的通用应用程序。
- en: Let’s discuss versatility and full stack development.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下通用性和全栈开发。
- en: Versatility and full stack development
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用性和全栈开发
- en: '**Versatility and full stack development** is crucial in modern software development
    because it can lead software developers to program every aspect of application/software
    that can run on various platforms.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**通用性和全栈开发**在现代软件开发中至关重要，因为它可以使软件开发者编程可在各种平台上运行的应用程序/软件的各个方面。'
- en: 'The key advantages of versatility and full stack development are as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 通用性和全栈开发的关键优势如下：
- en: '**Full stack development**: Full stack developers are proficient in both frontend
    (client-side) and backend (server-side) development. They can work on the entire
    application stack, from user interfaces to server logic and databases.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全栈开发**：全栈开发者精通前端（客户端）和后端（服务器端）开发。他们可以处理整个应用程序堆栈，从用户界面到服务器逻辑和数据库。'
- en: '**Versatility**: Full stack developers possess a wide range of skills, enabling
    them to handle different aspects of application development.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用性**：全栈开发者拥有广泛的技术，使他们能够处理应用程序开发的各个方面。'
- en: '**Agility**: Full stack developers can work on various parts of the application,
    allowing for quicker iterations and adaptation to changing requirements.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷性**：全栈开发者可以处理应用程序的各个部分，从而实现更快的迭代和适应不断变化的需求。'
- en: '**Holistic understanding**: A full stack developer understands the entire application
    flow, leading to better architectural decisions and optimized user experiences.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全面理解**：全栈开发者理解整个应用程序流程，这有助于做出更好的架构决策和优化用户体验。'
- en: '**Reduced dependency**: Full stack developers can independently work on both
    client and server components, reducing dependencies between different development
    roles.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少依赖**：全栈开发者可以独立地工作在客户端和服务器组件上，减少不同开发角色之间的依赖。'
- en: The versatility of being a full stack developer can lead to a better understanding
    of all the processes in the software development life cycle, so you can program
    in every aspect of the application/system.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 全栈开发者的通用性可以更好地理解软件开发生命周期的所有过程，因此您可以在应用程序/系统的各个方面进行编程。
- en: '*Figure 4**.5* illustrates the process of full stack development:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4**.5* 展示了全栈开发的过程：'
- en: '![Figure 4.5: The full stack development process (image from Freepik))](img/B14980_04_05.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5：全栈开发过程（图片来自 Freepik）](img/B14980_04_05.jpg)'
- en: 'Figure 4.5: The full stack development process (image from Freepik))'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5：全栈开发过程（图片来自 Freepik）
- en: Full stack development and versatility are the processes that all the biggest
    companies focus on in order to ensure better quality of the applications/systems
    they use every day.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 全栈开发和通用性是所有最大公司关注的流程，以确保他们每天使用的应用程序/系统的质量更好。
- en: In the next section, we will talk about cross-platform compatibility.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论跨平台兼容性。
- en: Cross-platform compatibility
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨平台兼容性
- en: '**Cross-platform compatibility** focuses on software that can be used on any
    platform. So, you will have more users, and they will explore your software in
    every aspect of it while using it.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**跨平台兼容性**关注的是可以在任何平台上使用的软件。因此，您将拥有更多的用户，他们将在使用软件的各个方面探索它。'
- en: 'Cross-platform compatibility has some key points, as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 跨平台兼容性有一些关键点，如下所示：
- en: '**Cross-platform development**: Cross-platform development refers to the practice
    of creating software applications that can run seamlessly on multiple operating
    systems or platforms.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨平台开发**：跨平台开发是指创建能够在多个操作系统或平台上无缝运行的软件应用的做法。'
- en: '**Technology stack unification**: Cross-platform development often uses tools
    and frameworks that allow code sharing across platforms, reducing development
    efforts.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术栈统一**：跨平台开发通常使用允许跨平台共享代码的工具和框架，从而减少开发工作量。'
- en: '**Wider reach**: Cross-platform applications can reach a broader audience by
    targeting different platforms simultaneously.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更广泛的覆盖范围**：跨平台应用可以通过同时针对不同平台来触及更广泛的受众。'
- en: '**Consistent user experience**: Cross-platform development aims to provide
    a consistent user experience across various devices and platforms.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致的用户体验**：跨平台开发旨在在各种设备和平台上提供一致的用户体验。'
- en: '**Code reusability**: The ability to reuse code components for different platforms
    enhances development efficiency.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码复用性**：能够为不同平台复用代码组件可以提升开发效率。'
- en: These are the key points of cross-platform compatibility to create a multi-platform
    application/software.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是创建多平台应用/软件的跨平台兼容性的关键点。
- en: '*Figure 4**.6* illustrates cross-platform compatibility:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4**.6* 展示了跨平台兼容性：'
- en: '![Figure 4.6: Cross-platform compatibility (image by Marvin Meyer on Unsplash)](img/B14980_04_06.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6：跨平台兼容性（图片由 Marvin Meyer 在 Unsplash 提供）](img/B14980_04_06.jpg)'
- en: 'Figure 4.6: Cross-platform compatibility (image by Marvin Meyer on Unsplash)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：跨平台兼容性（图片由 Marvin Meyer 在 Unsplash 提供）
- en: In summary, the combination of versatility and full stack development skills,
    along with cross-platform compatibility, empowers developers to create applications
    that are adaptable, efficient, and capable of reaching a wide range of users across
    different devices and platforms. This combination is particularly valuable in
    today’s dynamic software development landscape.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，多功能性和全栈开发技能的结合，再加上跨平台兼容性，赋予了开发者创建能够适应、高效且能够触及不同设备和平台上的广泛用户的软件应用的能力。这种结合在当今动态的软件开发领域中尤其有价值。
- en: In the next section, we will learn about integration and interoperability, and
    support for modern web standards.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习关于集成和互操作性，以及对现代网络标准支持的内容。
- en: Integration and interoperability and support for modern web standards
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成、互操作性以及对现代网络标准的支持
- en: Integration and interoperability, along with support for modern web standards,
    are crucial concepts in the world of software development and technology. Let’s
    explore each of these areas in more detail.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 集成、互操作性以及对现代网络标准的支持是软件开发和技术领域中的关键概念。让我们更详细地探讨这些领域。
- en: Integration and interoperability
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成和互操作性
- en: '**Integration** refers to the process of combining different software systems
    or components so that they work together as a unified whole. This is important
    because many modern applications are composed of various modules or services that
    need to communicate and share data seamlessly. Integration can occur at different
    levels, such as data integration, application integration, and system integration.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**集成**指的是将不同的软件系统或组件组合在一起，使它们作为一个统一的整体协同工作。这很重要，因为许多现代应用程序由各种模块或服务组成，这些模块或服务需要无缝地通信和共享数据。集成可以在不同的级别发生，例如数据集成、应用集成和系统集成。'
- en: Meanwhile, **interoperability** is the ability of different systems or components
    to work together, even if they were developed independently by different vendors
    or teams. This ensures that systems can exchange data and use each other’s functions
    without requiring major modifications. Interoperability is crucial in heterogeneous
    environments where multiple technologies, platforms, and software products coexist.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，**互操作性**是指不同系统或组件能够协同工作的能力，即使它们是由不同的供应商或团队独立开发的。这确保了系统可以交换数据并使用彼此的功能，而无需进行重大修改。在多种技术、平台和软件产品共存的不同环境中，互操作性至关重要。
- en: 'The benefits of integration and interoperability include the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 集成和互操作性的好处包括以下内容：
- en: '**Efficiency**: Integrated systems can automate processes and reduce manual
    data entry, leading to improved efficiency and reduced human errors.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**效率**：集成系统可以自动化流程并减少手动数据输入，从而提高效率并减少人为错误。'
- en: '**Data accuracy**: Integration ensures that data is consistent across different
    systems, preventing data discrepancies and improving decision-making.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据准确性**：集成确保数据在不同系统之间保持一致，防止数据差异，并提高决策质量。'
- en: '**Scalability**: Integrated systems can scale more easily as an organization’s
    needs grow, since the systems are designed to work together. Scalability is the
    ability of a system to handle increasing amounts of workload without compromising
    its performance or reliability. For example, Node.js uses a single thread to handle
    non-blocking I/O calls, which means that it can accept and process multiple concurrent
    requests without waiting for the completion of each one, and Node.js has a built-in
    module and cluster that allow you to create multiple instances or workers of the
    same application and distribute the workload among them. Also, Node.js supports
    the decomposition of an application into smaller and independent services or microservices
    that communicate with each other through events or messages. One big benefit it
    is that Node.js also supports the partitioning or sharding of data into multiple
    instances or databases, where each instance handles only a subset of the data.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：集成系统可以更容易地随着组织需求的增长而扩展，因为系统是设计来协同工作的。可扩展性是指系统在不损害其性能或可靠性的情况下处理不断增加的工作负载的能力。例如，Node.js
    使用单个线程来处理非阻塞 I/O 调用，这意味着它可以接受和处理多个并发请求，而无需等待每个请求的完成，Node.js 还内置了模块和集群，允许您创建同一应用程序的多个实例或工作进程，并将工作负载分配给它们。此外，Node.js
    还支持将应用程序分解成更小、更独立的或微服务，它们通过事件或消息相互通信。一个很大的好处是，Node.js 还支持将数据分区或分片到多个实例或数据库中，其中每个实例只处理数据的一个子集。'
- en: '**Cost savings**: Integration reduces the need for redundant data entry and
    maintenance, saving time and resources.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本节约**：集成减少了冗余数据输入和维护的需求，节省了时间和资源。'
- en: '**Improved customer experience**: Interoperable systems can provide a seamless
    experience for users, allowing them to interact with different services without
    disruptions.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改善客户体验**：互操作性系统可以为用户提供无缝体验，使用户能够在不同服务之间交互而不会出现中断。'
- en: Integration and operability, working together, ensure that applications/systems
    can work unified and independently for different vendors or teams.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 集成和互操作性，协同工作，确保应用程序/系统能够为不同的供应商或团队统一和独立地工作。
- en: In the next section, we will talk about support for modern web standards.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论对现代网络标准的支持。
- en: Support for modern web standards
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对现代网络标准的支持
- en: '**Modern web standards** refer to the set of technologies, protocols, and guidelines
    that dictate how web applications should be built and how they should interact
    with each other and users. These standards evolve over time to accommodate advancements
    in technology and user expectations.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**现代网络标准**指的是一组技术、协议和指南，规定了网络应用程序应该如何构建以及它们应该如何相互以及与用户交互。这些标准随着时间的推移而演变，以适应技术进步和用户期望的变化。'
- en: 'Some key aspects of modern web standards include the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现代网络标准的一些关键方面包括以下内容：
- en: '**HTML5**: The latest version of **Hypertext Markup Language** (**HTML**) introduces
    new semantic elements, multimedia support, and improved structure for building
    web pages.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTML5**：**超文本标记语言**（**HTML**）的最新版本引入了新的语义元素、多媒体支持和改进的结构，以构建网页。'
- en: '**CSS3**: **Cascading Style Sheets** (**CSS**) **Level 3** (**CSS3**) includes
    advanced styling options, animations, and responsive design features to enhance
    the visual appeal and usability of websites.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CSS3**：**层叠样式表**（**CSS**）**级别 3**（**CSS3**）包括高级样式选项、动画和响应式设计功能，以增强网站的视觉吸引力和可用性。'
- en: '**JavaScript**: Modern JavaScript frameworks and libraries (e.g., React, Angular,
    and Vue.js) enable developers to create dynamic and interactive web applications.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript**：现代 JavaScript 框架和库（例如 React、Angular 和 Vue.js）使开发者能够创建动态和交互式网络应用程序。'
- en: '**RESTful APIs**: **Representational state transfer** (**REST**) is a widely
    used architectural style for designing networked applications, allowing different
    systems to communicate over HTTP.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RESTful API**：**表示状态转移**（**REST**）是设计网络应用程序广泛使用的架构风格，允许不同的系统通过 HTTP 进行通信。'
- en: '**Web security standards**: HTTPS, **Content Security Policy** (**CSP**), and
    **Cross-Origin Resource Sharing** (**CORS**) are examples of security-related
    standards that help protect users and data.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络安全标准**：HTTPS、**内容安全策略**（**CSP**）和**跨源资源共享**（**CORS**）是帮助保护用户和数据的安全相关标准的例子。'
- en: '**Web accessibility**: The **WCAG** (**Web Content Accessibility Guidelines**)
    is the most widely recognized set of accessibility guidelines. It is developed
    by the **Web Accessibility Initiative** (**WAI**) of the **World Wide Web** **Consortium**
    (**W3C**).'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络无障碍**：**WCAG**（**Web内容无障碍指南**）是最广泛认可的系列无障碍指南。它由**万维网联盟**（**W3C**）的**万维网无障碍倡议**（**WAI**）开发。'
- en: 'In addition to these features, supporting modern web standards offers several
    benefits, such as the following:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些特性之外，支持现代网络标准还提供了以下好处：
- en: '**Compatibility**: Applications built with modern web standards are more likely
    to work across different browsers and devices.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性**：使用现代网络标准构建的应用程序更有可能在不同的浏览器和设备上运行。'
- en: '**Future-proofing**: Following web standards ensures that your applications
    will remain relevant as technologies evolve.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未来保障**：遵循网络标准确保您的应用程序在技术演变中保持相关性。'
- en: '**Community and resources**: Using standard technologies means access to a
    large community of developers, resources, and third-party tools.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区和资源**：使用标准技术意味着可以访问一个庞大的开发者社区、资源和第三方工具。'
- en: '**SEO and performance**: Adhering to modern standards can positively impact
    **search engine optimization** (**SEO**) and page performance.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEO和性能**：遵循现代标准可以积极影响**搜索引擎优化**（**SEO**）和页面性能。'
- en: In conclusion, integration and interoperability enable seamless communication
    between different systems, while supporting modern web standards ensures that
    applications are built using the latest best practices for compatibility, functionality,
    and user experience. These principles are fundamental to creating successful and
    sustainable software solutions in today’s interconnected digital landscape.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，集成和互操作性使得不同系统之间的通信无缝，而支持现代网络标准确保了应用是使用最新的最佳实践来构建的，以实现兼容性、功能性和用户体验。这些原则对于在当今互联的数字景观中创建成功和可持续的软件解决方案至关重要。
- en: In the next section, we are going to discuss enterprise adoption and industry
    maturity, and ecosystem growth and innovation.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论企业采用和行业成熟，以及生态系统增长和创新。
- en: Enterprise adoption and industry maturity and ecosystem growth and innovation
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业采用和行业成熟以及生态系统增长和创新
- en: Let’s delve into the concepts of enterprise adoption and industry maturity,
    as well as ecosystem growth and innovation.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨企业采用和行业成熟的概念，以及生态系统增长和创新。
- en: Enterprise adoption and industry maturity
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 企业采用和行业成熟
- en: '**Enterprise adoption** refers to the integration and implementation of new
    technologies, practices, or methodologies within large organizations or enterprises.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**企业采用**指的是在大组织或企业内部整合和实施新技术、实践或方法论。'
- en: On the other hand, **industry maturity** refers to the stage of development
    that a particular industry or technology has reached.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**行业成熟**指的是特定行业或技术达到的发展阶段。
- en: 'Some benefits of enterprise adoption and industry maturity include the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 企业采用和行业成熟带来的好处包括以下几方面：
- en: '**Stability**: Mature industries have established norms, standards, and best
    practices, providing stability and predictability for organizations operating
    within them.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定性**：成熟的行业已经建立了规范、标准和最佳实践，为在其内部运营的组织提供了稳定性和可预测性。'
- en: '**Reduced risk**: When adopting technologies or practices in a mature industry,
    there’s often reduced risk compared to early adoption, as potential challenges
    have been identified and solutions developed.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**降低风险**：在成熟行业中采用技术或实践时，与早期采用相比，通常风险较低，因为潜在的挑战已经被识别并开发了解决方案。'
- en: '**Market understanding**: In mature industries, market dynamics and customer
    preferences are well-understood, helping businesses make informed decisions.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**市场理解**：在成熟行业中，市场动态和客户偏好得到了很好的理解，有助于企业做出明智的决策。'
- en: '**Economies of scale**: As an industry matures, economies of scale can be achieved,
    leading to cost efficiency and competitive advantages.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规模经济**：随着行业的成熟，可以实现规模经济，从而提高成本效率和竞争优势。'
- en: '**Interoperability**: Maturity often leads to the standardization of technologies
    and practices, fostering interoperability and integration among different solutions.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互操作性**：成熟往往导致技术和实践的标准化，促进不同解决方案之间的互操作性和集成。'
- en: Enterprise adoption and industry maturity can lead to vast adoption of the JavaScript
    ecosystem for enterprises and represent the stages of development.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 企业采用和行业成熟度可以导致JavaScript生态系统在企业中的广泛应用，并代表其发展阶段。
- en: '*Figure 4**.7* presents an example of enterprise adoption and industry maturity:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4**.7* 展示了企业采用和行业成熟度的例子：'
- en: '![Figure 4.7: An enterprise adoption and Industry maturity example (image by
    ThisisEngineering RAEng on Unsplash)](img/B14980_04_07.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图4.7：企业采用和行业成熟度示例（图片来自ThisisEngineering RAEng在Unsplash上的作品）](img/B14980_04_07.jpg)'
- en: 'Figure 4.7: An enterprise adoption and Industry maturity example (image by
    ThisisEngineering RAEng on Unsplash)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7：企业采用和行业成熟度示例（图片来自ThisisEngineering RAEng在Unsplash上的作品）
- en: With the evolution of technologies, it is always a good practice to stand on
    the side of the evolving technologies that can lead to industry revolution. Enterprises
    can work smarter.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术的演变，始终站在可能引领行业革命的技术一边是一种良好的做法。企业可以更聪明地工作。
- en: In the next section, we will learn more about ecosystem growth and innovation.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将了解更多关于生态系统增长和创新的内容。
- en: What is ecosystem growth and innovation?
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是生态系统增长和创新？
- en: '**Ecosystem growth** refers to the expansion and diversification of a network
    of companies, products, services, and technologies that surround a particular
    industry or technology.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**生态系统增长**指的是围绕特定行业或技术的公司、产品、服务和技术的网络扩张和多样化。'
- en: Furthermore, **innovation** is the process of introducing new ideas, technologies,
    products, or processes that create value and drive positive change.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，**创新**是指引入新的想法、技术、产品或流程，这些可以创造价值并推动积极变革的过程。
- en: 'Some benefits of ecosystem growth and innovation include the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 生态系统增长和创新的以下是一些好处：
- en: '**Collaboration**: A growing ecosystem encourages collaboration among different
    players, fostering partnerships that can lead to mutually beneficial outcomes.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**：不断增长的生态系统鼓励不同参与者之间的协作，培养能够带来互利结果的伙伴关系。'
- en: '**Diverse solutions**: A larger ecosystem leads to a wider range of solutions,
    catering to different customer needs and preferences.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多样化的解决方案**：更大的生态系统导致更广泛的解决方案，满足不同客户的需求和偏好。'
- en: '**Rapid evolution**: Innovation within an ecosystem can lead to rapid advancements,
    driving an entire industry forward.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速演变**：生态系统内的创新可以导致快速进步，推动整个行业向前发展。'
- en: '**Market expansion**: As the ecosystem grows, new markets and opportunities
    can emerge, allowing businesses to expand their reach.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**市场扩张**：随着生态系统的增长，新的市场和机会可以出现，使企业能够扩大其影响力。'
- en: '**Competitive advantage**: Being part of an innovative ecosystem can provide
    businesses with a competitive edge by offering unique and cutting-edge solutions.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**竞争优势**：成为创新生态系统的一部分可以通过提供独特和尖端解决方案为企业提供竞争优势。'
- en: Ecosystem growth and innovation can lead to major improvements and innovation
    in the network of companies, products, services, and technologies for a particular
    industry.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 生态系统增长和创新可以导致特定行业公司、产品、服务和技术的网络在重大改进和创新。
- en: '*Figure 4**.8* illustrates the process of 3D printing, representing an example
    of ecosystem growth and innovation:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4**.8* 展示了3D打印的过程，代表了生态系统增长和创新的例子：'
- en: '![Figure 4.8: Ecosystem growth and innovation (an example of 3D printing) (image
    by Maria Teneva on Unsplash)](img/B14980_04_08.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图4.8：生态系统增长和创新（3D打印的例子）（图片来自Maria Teneva在Unsplash上的作品）](img/B14980_04_08.jpg)'
- en: 'Figure 4.8: Ecosystem growth and innovation (an example of 3D printing) (image
    by Maria Teneva on Unsplash)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8：生态系统增长和创新（3D打印的例子）（图片来自Maria Teneva在Unsplash上的作品）
- en: In conclusion, enterprise adoption and industry maturity are important considerations
    for organizations looking to implement new technologies or practices within established
    sectors. Ecosystem growth and innovation are crucial for staying at the forefront
    of industry developments, enabling collaboration, and driving progress. Balancing
    these factors is essential for businesses seeking to navigate and succeed in today’s
    dynamic and evolving business landscape.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，对于希望在现有行业中实施新技术或实践的机构来说，企业采用和行业成熟度是重要的考虑因素。生态系统增长和创新对于保持行业发展的前沿地位、促进合作和推动进步至关重要。对于寻求在当今动态和不断变化的企业环境中导航和成功的企业来说，平衡这些因素是至关重要的。
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned a lot about leveraging the JavaScript and Node.js
    ecosystem for microservices development. These fundamentals encompass the core
    concepts and features that make the JavaScript ecosystem a powerful and versatile
    runtime environment for server-side and network applications, and this can be
    beneficial for several industries .
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何利用JavaScript和Node.js生态系统进行微服务开发。这些基础知识包括使JavaScript生态系统成为服务器端和网络应用程序强大且多才多艺的运行时环境的核心概念和功能，这对多个行业都有益处。
- en: In summary, harnessing the power of the JavaScript and Node.js ecosystem for
    microservices development offers a dynamic and efficient approach to building
    scalable and modular applications. By employing the lightweight and event-driven
    architecture of Node.js, developers can create microservices that communicate
    seamlessly and handle numerous concurrent connections. JavaScript’s ubiquity also
    enables full stack development, allowing code to be shared between the frontend
    and backend. Leveraging the extensive package ecosystem, including popular frameworks
    such as Express.js, simplifies the creation of APIs and facilitates rapid development.
    Node.js’s non-blocking I/O further enhances performance, making it well-suited
    for microservices that demand responsiveness.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，利用JavaScript和Node.js生态系统进行微服务开发，提供了一种动态且高效的方法来构建可扩展和模块化的应用程序。通过采用Node.js轻量级和事件驱动的架构，开发者可以创建能够无缝通信并处理大量并发连接的微服务。JavaScript的普遍性也使得全栈开发成为可能，允许代码在前端和后端之间共享。利用广泛的包生态系统，包括Express.js等流行的框架，简化了API的创建并促进了快速开发。Node.js的非阻塞I/O进一步提升了性能，使其非常适合需要响应性的微服务。
- en: Nevertheless, careful consideration must be given to challenges such as service
    orchestration and inter-service communication, which can be addressed through
    frameworks such as Seneca or NestJS. In conclusion, tapping into the JavaScript
    and Node.js ecosystem empowers developers to construct agile, high-performance
    microservices architectures that adapt to the demands of modern applications.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，必须仔细考虑诸如服务编排和跨服务通信等挑战，这些问题可以通过Seneca或NestJS等框架来解决。总之，利用JavaScript和Node.js生态系统，开发者能够构建敏捷、高性能的微服务架构，以适应现代应用程序的需求。
- en: In the next chapter, we are going to learn about the infrastructure of microservices
    in Node.js.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习Node.js中微服务的架构。
- en: Quiz time
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测验时间
- en: What is a vast package management?
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是庞大的包管理？
- en: What are Node.js community forums?
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是Node.js社区论坛？
- en: What is versatility and full stack development?
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是多才多艺和全栈开发？
- en: What is cross-platform compatibility?
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是跨平台兼容性？
- en: 'Part 2: Building and Integrating Microservices with Node.js'
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2部分：使用Node.js构建和集成微服务
- en: In this part, we will talk about building microservices and integrating them
    into our everyday work. We will talk also about using Node.js for building microservices
    and integrating them into our everyday work.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，我们将讨论构建微服务并将它们集成到我们的日常工作中。我们还将讨论使用Node.js构建微服务并将它们集成到我们的日常工作中。
- en: 'The part contains the following chapters:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 5*](B14980_05.xhtml#_idTextAnchor095), *Knowing the Infrastructure
    of Microservices in Node.js*'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B14980_05.xhtml#_idTextAnchor095), *了解Node.js中微服务的架构*'
- en: '[*Chapter 6*](B14980_06.xhtml#_idTextAnchor114), *Designing Microservices Architecture
    in Node.js*'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B14980_06.xhtml#_idTextAnchor114), *在Node.js中设计微服务架构*'
- en: '[*Chapter 7*](B14980_07.xhtml#_idTextAnchor129), *Integrating Microservices
    in Node.js Applications*'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B14980_07.xhtml#_idTextAnchor129), *在Node.js应用程序中集成微服务*'
- en: '[*Chapter 8*](B14980_08.xhtml#_idTextAnchor148), *Debugging Microservices in
    Node.js*'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B14980_08.xhtml#_idTextAnchor148), *在Node.js中调试微服务*'
