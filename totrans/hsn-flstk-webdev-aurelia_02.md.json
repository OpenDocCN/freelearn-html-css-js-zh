["```js\nh4 { color : red}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <title>Aurelia is Awesome</title>\n <link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.w3.org/css/officeFloats.css\" />\n</head>\n<body>\n.\n.\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <style type=\"text/css\">\n        body {\n padding-left: 11em;\n font-family: Georgia, \"Times New Roman\", serif;\n color: red;\n background-color: #d8da3d;\n }\n h1 {\n font-family: Helvetica, Geneva, Arial, sans-serif;\n }\n    </style>\n</head>\n<body>\n <!--Here the styles will be applied-->\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <!--Nothing here-->\n</head>\n<body>\n    <h1 style=\"color: blue\">Aurelia is awesome!</h1>\n</body>\n</html>\n```", "```js\n$my-height: 160px;\n\ndiv {\n  height: $my-height;\n}\n```", "```js\n@my-height: 160px;\n\ndiv {\n  font-size: @my-height;\n}\n```", "```js\n$my-link-color: #FF0000;\n$my-link-hover: #00FFFF;\n\nul {\n  margin: 0;\n\n  li {\n    float: left;\n  }\n\n  a {\n    color: $my-link-color;\n\n    &:hover {\n      color: $my-link-hover;\n    }\n  }\n}\n```", "```js\n@my-link-color: #FF0000;\n@my-link-hover: #00FF00;\n\nul {\n  margin: 0;\n\n  li {\n    float: left;\n  }\n\n  a {\n    color: @my-link-color;\n\n    &:hover {\n      color: @my-link-hover;\n    }\n  }\n}\n```", "```js\n$ sass --watch app/sass:public/stylesheets\n```", "```js\nul { margin: 0; }\nul li { float: left; }\nul a { color: #999; }\nul a:hover { color: #229ed3; }\n```", "```js\n.block { margin: 25px 58px; }\n\np {\n  @extend .block;\n  border: 3px solid #00FF00;\n}\n\nol {\n  @extend .block;\n  color: #FF0000;\n  text-transform: lowercase;\n}\n```", "```js\n.block { margin: 25px 58px; }\n\np {\n  &:extend(.block);\n  border: 3px solid #00FF00;\n}\n\nol {\n  &:extend(.block);\n  color: #FF0000;\n  text-transform: lowercase;\n}\n```", "```js\n.block, p, ul, ol { margin: 10px 5px; }\n\np { border: 1px solid #eee; }\nul, ol { color: #333; text-transform: uppercase; }\n```", "```js\n@if lightness($my-color) > 90% {\n  background-color: #FF0000;\n}\n\n@else {\n  background-color: #00FF00;\n}\n```", "```js\n.mixin (@my-color) when (lightness(@my-color) >80%) {\n  background-color: #00FF00;\n}\n.mixin (@my-color) when (lightness(@my-color) =< 80%) {\n  background-color: #FF0000;\n}\n```", "```js\n$ npm install –g gulp\n```", "```js\n$ gulp –v\n\nCLI Version 3.9.0\n```", "```js\n$ npm install --save-dev gulp\n```", "```js\n// gulpfile.js\nvar gulp = require('gulp');\n\ngulp.task('hello-world', function(){\n    console.log('hello world');\n});\n```", "```js\n$ npm install gulp-sass --save-dev\n```", "```js\nvar gulp = require('gulp');\nvar sass = require('gulp-sass');\n```", "```js\n// SCSS processing\ngulp.task('process-styles', function() {gulp.src('sass/**/*.scss')\n        .pipe(sass().on('error', sass.logError))\n        .pipe(gulp.dest('./css/'));});\n```", "```js\n// run all tasks\ngulp.task('run', ['process-styles', 'other-task', 'some-other-task']);\n```", "```js\n// watch for changes in code\ngulp.task('watch', function() {\n  // some example tasks\n  // detect image changes\n  gulp.watch(folder.src + 'img/**/*', ['images-task']);\n\n  // detect html changes\n  gulp.watch(folder.src + 'html/**/*', ['html-task']);\n\n  // detect javascript changes\n  gulp.watch(folder.src + 'js/**/*', ['js-task']);\n\n  // detect css changes <--- Our created task\n  gulp.watch(folder.src + 'scss/**/*', ['process-styles']);\n  .\n  .\n  .\n  // And so many task as we need to watch! \n\n});\n```", "```js\ngulp.task('default', ['run', 'watch']);\n```", "```js\n<div data-role=\"header\">\n    <a href=\"#\"\n       class=\"ui-btn-left ui-btn ui-btn-inline ui-mini ui-corner-all ui-btn-icon-left ui-icon-delete\">Cancel</a>\n    <h1>My App</h1>\n    <button class=\"ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right ui-icon-check\">\n        Save\n    </button>\n</div>\n```", "```js\n<div class=\"ui stackable inverted divided equal height stackable grid\">\n```", "```js\n.plugin('aurelia-materialize-bridge', bridge => {\n    bridge\n        .useButton()\n        .useCollapsible()\n        .useModal()    \n        .useTabs()   \n        .useWaves().preventWavesAttach();\n});\n\n```"]