["```js\n$ meteor create secure-autopublish\n$ cd secure-autopublish\n$ rm secure-autopublish.*\n$ mkdir {client,server,both}\n$ meteor\n\n```", "```js\nCards_open = new Mongo.Collection('open');\n```", "```js\n<body>\n  <div class=\"container\">\n    {{> open}}\n  </div>\n</body>\n\n<template name=\"open\">\n  <h3 id=\"new-open\">open:</h3>\n  {{#each opens}}\n  <div class=\"card {{shared}}\">\n    <div class=\"label id\">id</div>\n    <div class=\"id\">{{_id}}</div>\n    <div class=\"label text\">text</div>\n    <div class=\"text\">{{text}}</div>\n    <div class=\"label owner\">owner</div>\n    <div class=\"owner\">{{owner}}</div>\n  </div>\n  {{/each}}\n</template>\n```", "```js\nTemplate.open.helpers({\n  opens: function(){\n    return Cards_open.find({},{sort:{text:1}}).fetch();\n  },\n  shared: function(){\n    return (this.shared? 'shared':null);\n  }\n});\n\nTemplate.open.events({\n  'dblclick #new-open' : function(e){\n    e.preventDefault();\n    var txt = 'open card# ' + Cards_open.find({}).count();\n    Cards_open.insert({text:txt});\n  },\n  'click .text' : function(e){\n    e.preventDefault();\n    var shrd = (!this.shared);\n    Cards_open.update({_id:this._id},{$set:{shared:shrd}});\n  },\n  'dblclick .id' : function(e){\n    e.preventDefault();\n    Cards_open.remove({_id:this._id});\n  }\n});\n```", "```js\nbody {\n  font-family: 'helvetica neue';\n}\n.card {\n  display: inline-block;\n  min-width:10rem;\n  height: 10rem;\n  border: 2px dashed #ccc;\n  border-radius: 0.21rem;\n  margin: 0.25rem 0.25rem;\n  padding: 0.5rem;\n  vertical-align: top;\n}\n\n.container {\n  width:90%;\n  margin: auto;\n}\n\n.shared {\n  background-color: rgba(25, 121, 36, 0.36);\n}\n\n.label {\n  font-weight: bold;\n  margin: 0.2rem 0;\n  padding: 0.1rem;\n  padding-left: 0.3rem;\n}\n\n.label:hover {\n  background-color: rgba(7, 180, 21, 0.76);\n  border-radius: 0.2rem;\n}\n```", "```js\n    $ meteor remove autopublish\n\n    ```", "```js\n    Meteor.publish('open',function(){\n      return Cards_open.find({});\n    });\n    ```", "```js\n    Meteor.subscribe('open');\n    ```", "```js\n    $ meteor remove insecure\n\n    ```", "```js\n    Cards_open.allow({\n      insert : function(userId,doc){\n        return true;\n      },\n      update : function(userId,doc,fieldNames,modifier){\n        return true;\n      },\n      remove : function(userId,doc){\n        return true;\n      }\n    });\n    ```", "```js\n$ meteor add accounts-ui\n$ meteor add accounts-password\n\n```", "```js\n<body>\n {{> loginButtons}}\n  <div class=\"container\">\n    ...\n```", "```js\nTemplate.open.events({\n  'dblclick #new-open' : function(e){\n    e.preventDefault();\n if (!Meteor.userId()) return;\n    var txt = 'open card# ' + Cards_open.find({}).count();\n    Cards_open.insert({text:txt , owner: Meteor.userId()});\n  },\n```", "```js\n    Cards_open.allow({\n      insert : function(userId,doc){\n     return(userId!=null);\n      },\n    ```", "```js\n    update : function(userId,doc,fieldNames,modifier){\n     return (doc.owner==userId);\n      },\n      remove : function(userId,doc){\n     return (doc.owner==userId);\n      }\n    ```", "```js\n> Cards_open.insert({text:'NSFW !@##%!!!',owner:'8v2GGh98RrYfso92c'})\n\n```", "```js\nCards_open.deny({\n  insert : function(userId,doc){\n   return (doc.owner!=userId);\n  },\n  update : function(userId,doc,fieldNames,modifier){\n    return (fieldNames.length!=1 || !(~fieldNames.indexOf('shared')));\n  }\n});\n```", "```js\n    Meteor.publish('open',function(){\n      return Cards_open.find({$or:\n     [ {shared:true},\n     {owner:this.userId}\n     ]\n     },\n     {fields:{owner:0}});\n    });\n    ```", "```js\n    <div class=\"label owner\">owner</div>\n    <div class=\"owner\">{{owner}}</div>\n    ```", "```js\n$ meteor create secure-client\n$ cd secure-client\n$ mkdir {client,server,both}\n$ mv secure-client.* client/\n$ meteor\n\n```", "```js\n<head>\n  <title>secure-client</title>\n <!-- Latest compiled and minified CSS -->\n <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\n\n <!-- Optional theme -->\n <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\n\n <!-- Latest compiled and minified JavaScript -->\n <script src=\"img/bootstrap.min.js\"></script>\n</head>\n```", "```js\n<template name=\"hello\">\n  <button>Click Me</button>\n  <p>You've pressed the button\n <div class=\"badge\">{{counter}}</div>\n  times.</p>\n <p>Which is 1/2 of our eval value: {{dblCounter}}</p>\n <a href=\"javascript:alert('hax0rz!'); Meteor.call('dropTable');\">\n <div class=\"btn btn-info\">Bootstrap!</div>\n </a>\n</template>\n```", "```js\nTest = new Mongo.Collection('test');\n```", "```js\nMeteor.methods({\n  dropTable: function(){\n   Test.remove({});\n  }\n});\n```", "```js\nTemplate.hello.helpers({\n  counter: function () {\n try {\n var x = Test.find().count();\n Session.set('counter', eval(\"x*2\"));\n } catch (err) {\n console.log('ERROR: ', err);\n }\n return x;\n },\n dblCounter: function () {\n return Session.get('counter');\n }\n});\n```", "```js\nTemplate.hello.events({\n  'click button': function () {\n    // increment the counter when button is clicked\n Test.insert({action:'click'});\n  }\n});\n```", "```js\n    $ meteor add browser-policy\n\n    ```", "```js\n    BrowserPolicy.content.allowStyleOrigin( 'https://maxcdn.bootstrapcdn.com/');\n    BrowserPolicy.content.allowScriptOrigin( 'https://maxcdn.bootstrapcdn.com/');\n    ```", "```js\n    BrowserPolicy.content.disallowInlineScripts();\n    BrowserPolicy.content.disallowConnect();\n    ```", "```js\n    var rootUrl = __meteor_runtime_config__.ROOT_URL;\n    BrowserPolicy.content.allowConnectOrigin(rootUrl);\n    BrowserPolicy.content.allowConnectOrigin(rootUrl.replace('http', 'ws'));\n    ```"]