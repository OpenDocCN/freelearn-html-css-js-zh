["```js\nnew THREE.PlaneGeometry(width, height,widthSegments,heightSegments);\n```", "```js\nfunction createMesh(geometry) {\n\n  // assign two materials\n  var meshMaterial = new THREE.MeshNormalMaterial();\n  meshMaterial.side = THREE.DoubleSide;\n  var wireframeMaterial = new THREE.MeshBasicMaterial();\n  wireFrameMaterial.wireframe = true;\n\n  // create a multimaterial\n  var mesh = THREE.SceneUtils.createMultiMaterialObject(geometry,[meshMaterial,wireframeMaterial]);\n  return mesh;\n}\n```", "```js\nfunction deg2rad(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nfunction rad2deg(radians) {\n  return radians * 180 / Math.PI;\n}\n```", "```js\nnew THREE.CircleGeometry(3, 12);\n```", "```js\nnew THREE.CircleGeometry(3, 12, 0, Math.PI);\n```", "```js\nmesh.rotation.x =- Math.PI/2;\n```", "```js\nVar ring = new THREE.RingGeometry();\n```", "```js\nfunction drawShape() {\n  // create a basic shape\n  var shape = new THREE.Shape();\n\n  // startpoint\n  shape.moveTo(10, 10);\n\n  // straight line upwards\n  shape.lineTo(10, 40);\n\n  // the top of the figure, curve to the right\n  shape.bezierCurveTo(15, 25, 25, 25, 30, 40);\n\n  // spline back down\n  shape.splineThru(\n    [new THREE.Vector2(32, 30),\n      new THREE.Vector2(28, 20),\n      new THREE.Vector2(30, 10),\n    ])\n\n  // curve at the bottom\n  shape.quadraticCurveTo(20, 15, 10, 10);\n\n  // add 'eye' hole one\n  var hole1 = new THREE.Path();\n  hole1.absellipse(16, 24, 2, 3, 0, Math.PI * 2, true);\n  shape.holes.push(hole1);\n\n  // add 'eye hole 2'\n  var hole2 = new THREE.Path();\n  hole2.absellipse(23, 24, 2, 3, 0, Math.PI * 2, true);\n  shape.holes.push(hole2);\n\n  // add 'mouth'\n  var hole3 = new THREE.Path();\n  hole3.absarc(20, 16, 2, 0, Math.PI, true);\n  shape.holes.push(hole3);\n\n  // return the shape\n  return shape;\n}\n```", "```js\nnew THREE.ShapeGeometry(drawShape());\n```", "```js\nnew THREE.Line( shape.createPointsGeometry(10), new THREE.LineBasicMaterial( { color: 0xff3333, linewidth: 2 } ) );\n```", "```js\nnew THREE.BoxGeometry(10,10,10);\n```", "```js\nvar vertices = [\n  1,  1,  1, \n  -1, -1,  1, \n  -1,  1, -1, \n  1, -1, -1\n];\n\nvar indices = [\n  2, 1, 0, \n  0, 3, 2, \n  1, 3, 0, \n  2, 3, 1\n];\n\npolyhedron = createMesh(new THREE.PolyhedronGeometry(vertices, indices, controls.radius, controls.detail));\n```"]