["```js\n$ git --version\ngit version 2.30.1 (Apple Git-130)\n```", "```js\n$ git clone https://github.com/PacktPublishing/Learn-Three.js-Fourth-edition.\ngit clone git@github.com:PacktPublishing/Learn-Three.js-Fourth-edition.git\nCloning into 'learning-threejs-fourth'...\nremote: Enumerating objects: 96, done.\nremote: Counting objects: 100% (96/96), done.\nremote: Compressing objects: 100% (85/85), done.\nfetch-pack: unexpected disconnect while reading sideband packet\n...\n```", "```js\n$ npm --version\n8.3.1\n$ node --version\nv16.14.0\n```", "```js\n$ npm install\nadded 570 packages, and audited 571 packages in 21s\n```", "```js\n$ npm run build\n> ltjs-fourth@1.0.0 build\n> webpack build\n...\n```", "```js\n    $ npm run serve\n    ```", "```js\n    > ltjs-fourth@1.0.0 serve\n    ```", "```js\n    > webpack serve –open\n    ```", "```js\n    <i> [webpack-dev-server] Project is running at:\n    ```", "```js\n    <i> [webpack-dev-server] Loopback: http://localhost:8080/\n    ```", "```js\n    <i> [webpack-dev-server] On Your Network (Ipv4): http://192.168.68.144:8080/\n    ```", "```js\n    <i> [webpack-dev-server] On Your Network (Ipv6): http://[fe80::1]:8080/\n    ```", "```js\n    …\n    ```", "```js\ninitScene(props)(({ scene, camera, renderer, orbitControls }) => {\n  const geometry = new THREE.BoxGeometry();\n  const cubeMaterial = new THREE.MeshPhongMaterial({\n    color: 0xFF0000,\n  });\n```", "```js\ninitScene(props)(({ scene, camera, renderer, orbitControls }) => {\n  const geometry = new THREE.BoxGeometry();\n  const cubeMaterial = new THREE.MeshPhongMaterial({\n    color: 0x0000FF,\n  });\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    body {\n      margin: 0;\n    }\n  </style>\n  <script defer src=\"../js/vendors-node_modules_three_\n    build_three_module_js.js\"></script>\n  <script defer src=\"../js/vendors-node_modules_lil-gui_\n    dist_lil-gui_esm_js.js\"></script>\n  <script defer src=\"../js/vendors-node_modules_three_\n    examples_jsm_controls_OrbitControls_js.js\"></script>\n  <script defer src=\"img/geometries.js\"></script>\n</head>\n<body>\n</body>\n</html>\n```", "```js\nimport * as THREE from \"three\";\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n// create a scene\n...\n// setup camera\n...\n// setup the renderer and attach to canvas\n...\n// add lights\n...\n// create a cube and torus knot and add them to the scene\n...\n// create a very large ground plane\n...\n// add orbitcontrols to pan around the scene using the\n   mouse\n...\n// add statistics to monitor the framerate\n...\n// render the scene\n```", "```js\n// basic scene setup\nconst scene = new THREE.Scene();\nscene.backgroundColor = 0xffffff;\nscene.fog = new THREE.Fog(0xffffff, 0.0025, 50);\n```", "```js\n// setup camera and basic renderer\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\ncamera.position.x = -3;\ncamera.position.z = 8;\ncamera.position.y = 2;\n// setup the renderer and attach to canvas\nconst renderer = new THREE.WebGLRenderer({ antialias: true\n  });\nrenderer.outputEncoding = THREE.sRGBEncoding;\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.VSMShadowMap;\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0xffffff);\ndocument.body.appendChild(renderer.domElement);\n```", "```js\n// add lights\nscene.add(new THREE.AmbientLight(0x666666))\nconst dirLight = new THREE.DirectionalLight(0xaaaaaa)\ndirLight.position.set(5, 12, 8)\ndirLight.castShadow = true\n// and some more shadow related properties\n```", "```js\n// create a cube and torus knot and add them to the scene\nconst cubeGeometry = new THREE.BoxGeometry();\nconst cubeMaterial = new THREE.MeshPhongMaterial({ color:\n  0x0000FF });\nconst cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\ncube.position.x = -1;\ncube.castShadow = true;\nscene.add(cube);\nconst torusKnotGeometry = new THREE.TorusKnotBufferGeometry(0.5, 0.2, 100, 100);\nconst torusKnotMat = new THREE.MeshStandardMaterial({\n  color: 0x00ff88,\n  roughness: 0.1,\n});\nconst torusKnotMesh = new THREE.Mesh(torusKnotGeometry, torusKnotMat);\ntorusKnotMesh.castShadow = true;\ntorusKnotMesh.position.x = 2;\nscene.add(torusKnotMesh);\n// create a very large ground plane\nconst groundGeometry = new THREE.PlaneBufferGeometry(10000,\n  10000)\nconst groundMaterial = new THREE.MeshLambertMaterial({\n  color: 0xffffff\n})\nconst groundMesh = new THREE.Mesh(groundGeometry, groundMaterial)\ngroundMesh.position.set(0, -2, 0)\ngroundMesh.rotation.set(Math.PI / -2, 0, 0)\ngroundMesh.receiveShadow = true\nscene.add(groundMesh)\n);\n```", "```js\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\nanimate();\n```", "```js\nimport Stats from 'three/examples/jsm/libs/stats.module'\nconst stats = Stats()\ndocument.body.appendChild(stats.dom)\n```", "```js\nfunction animate() {\n  requestAnimationFrame(animate);\n  stats.update();\n  renderer.render(scene, camera);\n}\nanimate();\n```", "```js\ncube.rotation.x += 0.01;\ncube.rotation.y += 0.01;\ncube.rotation.z += 0.01;\ntorusKnotMesh.rotation.x -= 0.01;\ntorusKnotMesh.rotation.y += 0.01;\ntorusKnotMesh.rotation.z -= 0.01;\n```", "```js\nlet step = 0;\nanimate() {\n  ...\n  step += 0.04;\n  cube.position.x = 4*(Math.cos(step));\n  cube.position.y = 4*Math.abs(Math.sin(step));\n  ...\n}\n```", "```js\nconst orbitControls = new OrbitControls(camera, renderer.\n  domElement)\n// and the controller has a whole range of other properties we can set\nfunction animate() {\n  ...\n  orbitControls.update();\n}\n```", "```js\nimport GUI from \"lil-gui\";\n...\nconst gui = new GUI();\nconst props = {\n  cubeSpeed: 0.01,\n  torusSpeed: 0.01,\n};\ngui.add(props, 'cubeSpeed', -0.2, 0.2, 0.01)\ngui.add(props, 'torusSpeed', -0.2, 0.2, 0.01)\nfunction animate() {\n  ...\n  cube.rotation.x += props.cubeSpeed;\n  cube.rotation.y += props.cubeSpeed;\n  cube.rotation.z += props.cubeSpeed;\n  torusKnotMesh.rotation.x -= props.torusSpeed;\n  torusKnotMesh.rotation.y += props.torusSpeed;\n  torusKnotMesh.rotation.z -= props.torusSpeed;\n  ...\n}\n```"]