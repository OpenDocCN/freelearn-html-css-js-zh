["```js\n    var InvoiceItemCollection = Backbone.Collection.extend\n    ({\n      model: InvoiceItemModel\n    });\n    ```", "```js\n    var invoiceItemCollection = new InvoiceItemCollection\n    ([\n      {description: 'Wooden Toy House', price: 22, quantity: 3},\n      {description: 'Farm Animal Set', price: 17, quantity: 1},\n      {description: 'Farmer Figure', price: 8, quantity: 1},\n      {description: 'Toy Tractor', price: 15, quantity: 1}\n    ]);\n    ```", "```js\ninvoiceItemModel1 = new InvoiceItemModel\n  ({\n    description: 'Wooden Toy House',\n    price: 22,\n    quantity: 3\n  });\ninvoiceItemModel2 = new InvoiceItemModel\n  ({\n    description: 'Farm Animal Set',\n    price: 17,\n    quantity: 1\n  });\nvar invoiceItemCollection2 = new InvoiceItemCollection\n  ([\n    invoiceItemModel1,\n    invoiceItemModel2\n  ]);\n```", "```js\nvar model = invoiceItemCollection.at(2);\nmodel.get('description'); // Farmer Figure\n```", "```js\ninvoiceItemCollection.indexOf(model); // 2\n```", "```js\nmodel.set('description', 'Superman Figure');\ninvoiceItemCollection.at(2).get('description');\n// Superman Figure\n```", "```js\nvar anotherModel = invoiceItemCollection.at(2).clone();\nanotherModel.set('description', 'Another Figure');\ninvoiceItemCollection.at(2).get('description');\n// Superman Figure\n```", "```js\nvar length = invoiceItemCollection.length; //4\nmodel = invoiceItemCollection.at(length-1);\nmodel.get('description'); // Toy Tractor\n```", "```js\n    model = invoiceItemCollection2.get('4ryurtz3m5gn9udi');\n    ```", "```js\n    model = invoiceItemCollection.get('c4');\n    model.get('description'); // Toy Tractor\n    ```", "```js\ninvoiceItemCollection.add\n  ({\n    description: 'Toy Track',\n    price: 10,\n    quantity: 1\n  });\n```", "```js\ninvoiceItemCollection.add\n  (\n    {description: 'Fisherman Hut', price: 15, quantity: 1},\n    {at: 0}\n  );\ninvoiceItemCollection.at(0).get('description');\n// Fisherman Hut\n```", "```js\ninvoiceItemCollection.add\n  ([\n    {description: 'Powerboat', price: 12, quantity: 1},\n    {description: 'Jet Ski', price: 12, quantity: 1}\n  ]);\n```", "```js\ninvoiceItemCollection.remove(['c0', 'c1', 'c2', 'c3']);\n```", "```js\ninvoiceItemCollection.resetâ€©  ([\n    {description: 'Wooden Toy House', price: 22, quantity: 3},\n    {description: 'Farm Animal Set', price: 17, quantity: 1}\n  ]);\n```", "```js\n    invoiceItemCollection.push(model);\n    ```", "```js\n    model = invoiceItemCollection.pop();\n    ```", "```js\n    invoiceItemCollection.unshift(model);\n    ```", "```js\n    model = invoiceItemCollection.shift();\n    ```", "```js\n    invoiceItemCollection.comparator = function(model)\n      {\n        return model.get(\"price\");\n      };\n    ```", "```js\n    invoiceItemCollection.sort();\n    ```", "```js\n    invoiceItemCollection.pluck(\"price\"); // [8, 15, 17, 22]\n    ```", "```js\ninvoiceItemCollection.comparator = function(m1, m1)\n  {\n    return m1.get(\"description\").length -\n    m2.get(\"description\").length;\n  };\ninvoiceItemCollection.sort();\ninvoiceItemCollection.pluck(\"description\");\n// [\"Toy Tractor\", \"Farmer Figure\", \"Farm Animal Set\",\n// \"Wooden Toy \n```", "```js\nvar result = invoiceItemCollection.where({quantity: 1});\n// Result is just an array of models, so let's create\n// new collection.\nvar resultCollection = new InvoiceItemCollection(result);\nresultCollection.pluck('quantity'); // [1, 1, 1]\n```", "```js\ninvoiceItemCollection.where({quantity: 1, price: 10});\n```", "```js\nvar  descriptions_txt = '';\ninvoiceItemCollection.each(function(model, index, list)\n  {\n    descriptions_txt += descriptions_txt ? ', ' : ''; \n    descriptions_txt += model.get('description');\n  });\ndescriptions_txt; // Wooden Toy House, Farm Animal Set\n```", "```js\nvar multiple = invoiceItemCollection.every(function(model)\n  {\n    return model.get('quantity') > 1;\n  });\nmultiple; // false\n```", "```js\nvar multiple = invoiceItemCollection.some(function(model)\n  {\n    return model.get('quantity') > 1;\n});\nmultiple; // true\n```", "```js\nvar descriptions = invoiceItemCollection.pluck(\"description\");\ndescriptions; // [\"Wooden Toy House\", \"Farm Animal Set\"]\n```", "```js\nvar amounts = invoiceItemCollection.map(function(model)\n  {\n    return model.get('quantity') * model.get('price');\n  });\namounts; // [66, 77]\n```", "```js\nvar count = invoiceItemCollection.reduce(function(memo,model)\n  {\n    return memo + model.get('quantity');\n  }, 0);\ncount; // 4\n```", "```js\nvar amounts = invoiceItemCollection.map(function(model)\n  {\n    return model.get('quantity') * model.get('price');\n  });\n// [66, 77]\nvar total_amount = _.reduce(amounts, function(memo, val)\n  {\n    return memo + val;\n  }, 0);\ntotal_amount; // 83\n```", "```js\nvar amount = invoiceItemCollection.chain()\n.map(function(model)\n  {\n    return model.get('quantity') * model.get('price');\n  })\n.reduce(function(memo, val)\n  {\n    return memo + val;\n  })\n.value(); // 83\n```", "```js\n    var BuyerCollection = Backbone.QueryCollection.extend\n      ({\n        model: BuyerModel\n      });\n    ```", "```js\n    var result = buyerCollection.query({ firstName: 'John' });\n    ```", "```js\n    var resultCollection = new BuyerCollection(result);\n    resultCollection.pluck('firstName'); // [\"John\", \"John\"]\n    ```", "```js\nbuyerCollection.query({ firstName: {$equal: 'John'} });\n```", "```js\nbuyerCollection.query({ firstName: 'John' });\n```", "```js\nbuyerCollection.query({ firstName: {$ne: 'John'} });\n```", "```js\nbuyerCollection.query({ firstName: {$in: ['John', 'Joe','Patrick']} });\n```", "```js\nbuyerCollection.query\n({ firstName: {$nin: ['Samuel', 'Victor']} });\n```", "```js\nbuyerCollection.query({ middleName: {$exists: true} });\n\nbuyerCollection.query({ middleName: {$has: false} });\n```", "```js\nbuyerCollection.query({ $and: {firstName: 'John', city: 'Alexandria'}});\n```", "```js\nbuyerCollection.query\n({ firstName: 'John', city: 'Alexandria' });\n```", "```js\nbuyerCollection.query\n({ $or: {firstName: 'John', city: 'Alexandria'}});\n```", "```js\nbuyerCollection.query\n({ $nor: {firstName: 'John', city: 'Alexandria'}});\n```", "```js\nbuyerCollection.query\n({ $not: {firstName: 'John', city: 'Alexandria'}});\n```", "```js\nbuyerCollection.query\n  ({\n    $or:[\n      { firstName: 'John' },\n      { firstName: 'Joe' }\n    ]\n  });\n```", "```js\nresult = buyerCollection.query\n  (\n    { firstName: {$like: 'John'} },\n    { sortBy: 'lastName', order: 'desc' }\n  );\nresultCollection = new BuyerCollection(result);\nresultCollection.pluck('lastName'); // [\"Smith\", \"Doe\"]\n```", "```js\nbuyerCollection.query\n({firstName: 'John'}, {limit:10, offset:1, page:2});\n```", "```js\nbuyerCollection.query\n({firstName: 'John'}, {limit:10, page:2, cache: true});\n```", "```js\nvar BuyerCollection = Backbone.QueryCollection.extend\n  ({\n    initialize: function(){\n      this.bind('change', this.reset_query_cache, this);\n    }\n  });\n```", "```js\n    var IndividualContactModel = Backbone.Model.extend\n      ({\n        name: function() {\n          return this.get('firstName') + ' ' + this.get('lastName');\n        }\n      });\n\n    var OrganizationContactModel = Backbone.Model.extend\n      ({\n        name: function() {\n          return this.get('businessName') + ', '\n          + this.get('businessType');\n        }\n      });\n    ```", "```js\n    var ContactCollection = Backbone.Collection.extend\n      ({\n        model: {\n          // Pass chosen properties.\n          chosen: {\n              // Attribute that should contain model type.\n              attr: 'type',\n\n              // Default model class.\n              defaults: IndividualContactModel,\n\n              // Mapping attribute values to model classes.\n              map: {\n                individual: IndividualContactModel,\n                organization: OrganizationContactModel\n              }\n            }\n          }\n      });\n    ```", "```js\n    var contactCollection = new ContactCollection\n      ([\n        {\n          firstName: 'John',\n          lastName: 'Smith',\n          type: 'individual'\n        },\n        {\n          businessName: 'North American Veeblefetzer',\n          businessType: 'LLC',\n          type: 'organization'\n        }\n      ]);\n    ```", "```js\n    contactCollection.at(0) instanceof IndividualContactModel;\n    //true\n\n    contactCollection.at(0).name(); // John Smith\n\n    contactCollection.at(1) instanceof OrganizationContactModel;\n    //true\n\n    contactCollection.at(1).name();\n    // North American Veeblefetzer, LLC\n    ```", "```js\nvar contactCollection = new ContactCollection\n  ([\n    {\n      firstName: 'John',\n      lastName: 'Smith',\n      options: {type: 'individual'}\n    },\n    {\n      businessName: 'North American Veeblefetzer',\n      businessType: 'LLC',\n      options: {type: 'organization'}\n    }\n  ]);\n```", "```js\n// Set up a collection\nvar ContactCollection = Backbone.Collection.extend({\n  model: {\n    chosen: function (rawData) {\n      if (rawData.spice === 'salt') {\n        return SaltyModel;\n        }\n      if (rawData.spice === 'sugar') {\n        return SweetyModel;\n        }\n      return BoringModel;\n      }\n    }\n  });\n```", "```js\n    var InvoiceItemModel = Backbone.RelationalModel.extend\n      ({\n      });\n    ```", "```js\n    var InvoiceItemCollection = Backbone.Collection.extend\n      ({\n        model: InvoiceItemModel\n      });\n    ```", "```js\n    var InvoiceModel = Backbone.RelationalModel.extend\n      ({\n        // Define one-to-many relationship.\n        relations: [{\n          // Relationship type\n          type: Backbone.HasMany,\n\n          // Relationship key in BuyerModel.\n          key: 'items',\n          // Related model.\n          relatedModel: InvoiceItemModel,\n\n          // Collection to store related models.\n          collectionType: InvoiceItemCollection,\n\n          // Define reverse relationship.\n          reverseRelation: {\n            key: 'invoice'\n          }\n        }]\n      });\n    ```", "```js\n    var invoiceModel = new InvoiceModel\n      ({\n        referenceNumber: '12345',\n        date: '2012-09-01',\n        items: [\n          { description:'Wooden Toy House', price:22, quantity:3 },\n          { description:'Farm Animal Set', price:17, quantity:1 }\n        ]\n      });\n\n    invoiceModel.get('items').at(0).get('description');\n    // Wooden Toy House\n\n    invoiceModel.get('items').at(0).get('invoice')\n    .get('referenceNumber'); // 12345\n    ```", "```js\n    // Add new model to a collection\n    invoiceModel.get('items').add\n      ({\n        description: 'Powerboat',\n        price: 12,\n        quantity: 1\n      });\n\n    invoiceModel.get('items').at(2).get('invoice') == invoiceModel;\n    // true\n    ```", "```js\n    // Add new model\n    invoiceItemModel = new InvoiceItemModel\n      ({\n        description: 'Jet Ski',\n        price: 12,\n        quantity: 1,\n        invoice: invoiceModel\n      });\n\n    invoiceModel.get('items').at(3).get('description');\n    // Jet Ski\n    ```", "```js\nJSON.stringify(invoiceModel.toJSON());\n```", "```js\n{\n  \"referenceNumber\":\"12345\",\n  \"date\":\"2012-09-01\",\n  \"items\":[\n    {\n      \"description\":\"Wooden Toy House\",\"price\":22,\"quantity\":3\n    },\n    {\"description\":\"Farm Animal Set\",\"price\":17,\"quantity\":1},\n    {\"description\":\"Powerboat\",\"price\":12,\"quantity\":1},\n    {\"description\":\"Jet Ski\",\"price\":12,\"quantity\":1}\n  ]\n}\n```", "```js\nJSON.stringify(invoiceModel.get('items').at(0).toJSON())\n```", "```js\n{\n  \"description\":\"Wooden Toy House\",\n  \"price\":22,\n  \"quantity\":3,\n  \"invoice\":{includeInJSON\n    \"referenceNumber\":\"12345\",\n    \"date\":\"2012-09-01\",\n    \"items\":[\n      null,\n      {\n        \"description\":\"Farm Animal Set\",\"price\":17,\n        \"quantity\":1\n      },\n      {\"description\":\"Powerboat\",\"price\":12,\"quantity\":1},\n      {\"description\":\"Jet Ski\",\"price\":12,\"quantity\":1}\n    ]\n  }\n}\n```", "```js\nvar InvoiceModel = Backbone.RelationalModel.extend\n  ({\n    relations: [{\n      type: Backbone.HasMany,\n      key: 'items',\n      relatedModel: InvoiceItemModel,\n      collectionType: InvoiceItemCollection,\n\n      // Restrict related models properties when exporting\n      // to JSON.\n      includeInJSON: ['description', 'price', 'quantity'], \n\n      reverseRelation: {\n        key: 'invoice',\n\n        // Restrict related models properties when exporting\n        // to JSON for reversed relations.\n        includeInJSON: ['referenceNumber', 'items'],\n      }\n    }]\n  });\n```"]