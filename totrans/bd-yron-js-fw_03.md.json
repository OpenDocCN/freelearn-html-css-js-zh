["```js\n\"dependencies\": {\n    \"@angular/animations\": \"^15.2.0\",\n    \"@angular/common\": \"^15.2.0\",\n    \"@angular/compiler\": \"^15.2.0\",\n    \"@angular/core\": \"^15.2.0\",\n    \"@angular/forms\": \"^15.2.0\",\n    \"@angular/platform-browser\": \"^15.2.0\",\n    \"@angular/router\": \"^15.2.0\",\n},\n```", "```js\n// service: book.service.ts\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: ‹root›\n})\nexport class BookService {\n  constructor() { }\n}\n// module: book.module.ts\nimport { BookService } from './book.service';\n@NgModule({\n  providers: [BookService],\n})\nexport class BookModule {}\n```", "```js\napp.module.ts\n@NgModule({\n  imports: [\n    // ...\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n```", "```js\nnuxt.config.js\nexport default defineNuxtConfig({\n  // My Nuxt config\n})\n```", "```js\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nasync function bootstrap() {\n  const application = await NestFactory.create(AppModule);\n  await application.listen(process.env.PORT ?\n     parseInt(process.env.PORT) : 8080);\n}\nbootstrap();\n```", "```js\n\"mrm\": \"mrm --preset=@adonisjs/mrm-preset\",\n\"pretest\": \"npm run lint\",\n\"test\": \"node -r @adonisjs/require-ts/build/\n  register bin/test.ts\",\n\"clean\": \"del-cli build\",\n\"build\": \"npm run compile\",\n\"commit\": \"git-cz\",\n\"release\": \"np --message=\\\"chore(release): %s\\\"\",\n\"version\": \"npm run build\",\n\"prepublishOnly\": \"npm run build\",\n\"lint\": \"eslint . --ext=.ts\",\n\"format\": \"prettier --write .\",\n```", "```js\n> npx create-next-app@latest\nNeed to install the following packages:\n  create-next-app@13.1.6\nOk to proceed? (y) y\n✔ What is your project named? ... framework-architecture\n? Would you like to use TypeScript with this project? > No / Yes\n```", "```js\nmodule.exports = {\n presets: ['module:metro-react-native-babel-preset'],\n}\n```", "```js\nApp.svelte\n<script>\n  let bookChapter=3;\n  console.log(bookChapter);\n</script>\n```", "```js\nimport { SvelteComponent, init, safe_not_equal } from\n  \"svelte/internal\";\nlet bookChapter = 3;\nfunction instance($$self) {\n  console.log(bookChapter);\n  return [];\n}\nclass App extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance, null, safe_not_equal,\n      s{});\n  }\n}\n```"]