["```js\nconst color = new THREE.Color(0xffffff);\nconst light = new THREE.AmbientLight(color);\nscene.add(light);\n```", "```js\nconst spotLight = new THREE.SpotLight(\"#ffffff\")\nspotLight.penumbra = 0.4;\nspotLight.position.set(10, 14, 5);\nspotLight.castShadow = true;\nspotLight.intensity = 1;\nspotLight.shadow.camera.near = 10;\nspotLight.shadow.camera.far = 25;\nspotLight.shadow.mapSize.width = 2048;\nspotLight.shadow.mapSize.height = 2048;\nspotLight.shadow.bias = -0.01;\nscene.add(spotLight.target);\n```", "```js\nscene.add(spotLight.target);\n```", "```js\nconst spotLightHelper = new THREE.SpotLightHelper\n  (spotLight);\nscene.add(spotLightHelper)\n// in the render loop\nspotLightHelper.update();\n```", "```js\nconst shadowCameraHelper = new THREE.CameraHelper\n  (spotLight.shadow.camera);\nscene.add(shadowCameraHelper);\n// in the render loop\nshadowCameraHelper.update();\n```", "```js\nconst pointLightHelper = new THREE.PointLightHelper\n  (pointLight);\nscene.add(pointLightHelper)\n// in the render loop\npointLightHelper.update();\n```", "```js\nconst pointLight = new THREE.PointLight();\nscene.add(pointLight);\n```", "```js\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.camera.near = 2;\ndirectionalLight.shadow.camera.far = 80;\ndirectionalLight.shadow.camera.left = -30;\ndirectionalLight.shadow.camera.right = 30;\ndirectionalLight.shadow.camera.top = 30;\ndirectionalLight.shadow.camera.bottom = -30;\n```", "```js\nconst hemiLight = new THREE.HemisphereLight(0x0000ff,\n  0x00ff00, 0.6); hemiLight.position.set(0, 500, 0);\nscene.add(hemiLight);\n```", "```js\nimport { RectAreaLightUniformsLib } from \"three/examples\n  /jsm/lights/RectAreaLightUniformsLib.js\";\n...\nRectAreaLightUniformsLib.init();\n```", "```js\nconst rectLight1 = new THREE.RectAreaLight\n  (0xff0000, 5, 2, 5);\nrectLight1.position.set(-3, 0, 5);\nscene.add(rectLight1);\n```", "```js\nImport { LightProbeGenerator } from \"three/examples/\n  jsm/lights//LightProbeGenerator\";\n...\nconst loadCubeMap = (renderer, scene) => {\n  const base = \"drachenfels\";\n  const ext = \"png\";\n  const urls = [\n    \"/assets/panorama/\" + base + \"/posx.\" + ext,\n    \"/assets/panorama/\" + base + \"/negx.\" + ext,\n    \"/assets/panorama/\" + base + \"/posy.\" + ext,\n    \"/assets/panorama/\" + base + \"/negy.\" + ext,\n    \"/assets/panorama/\" + base + \"/posz.\" + ext,\n    \"/assets/panorama/\" + base + \"/negz.\" + ext,\n  ];\n  new THREE.CubeTextureLoader().load(urls, function\n    (cubeTexture) {\n    cubeTexture.encoding = THREE.sRGBEncoding;\n    scene.background = cubeTexture;\n    const lp = LightProbeGenerator.fromCubeTexture\n      (cubeTexture);\n    lp.intensity = 15;\n    scene.add(lp);\n  });\n};\n```", "```js\nimport {\n  Lensflare,\n  LensflareElement,\n} from \"three/examples/jsm/objects/Lensflare\";\nconst textureLoader = new THREE.TextureLoader()\nconst textureFlare0 = textureLoader.load\n  ('/assets/textures/lens-flares/lensflare0.png')\nconst textureFlare1 = textureLoader.load\n  ('/assets/textures/lens-flares/lensflare3.png')\nconst lensFlare = new LensFlare();\nlensFlare.addElement(new LensflareElement\n  (textureFlare0, 512, 0));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 60, 0.6));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 70, 0.7));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 120, 0.9));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 70, 1.0));\npointLight.add(lensFlare);\n```", "```js\nconst textureLoader = new THREE.TextureLoader();\nconst textureFlare0 = textureLoader.load(\n  \"/assets/textures/lens-flares/lensflare0.png\"\n);\nlensFlare.addElement(new LensflareElement\n  (textureFlare0, 512, 0));\n```", "```js\nconst textureFlare1 = textureLoader.load(\n  \"/assets/textures/lens-flares/lensflare3.png\"\n);\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 60, 0.6));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 70, 0.7));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 120, 0.9));\nlensFlare.addElement(new LensflareElement\n  (textureFlare1, 70, 1.0));\n```"]