["```js\nif (Promise && typeof Promise.all === \"function\") {\n    // User Promise.all here...\n}\n```", "```js\nif (\n    navigator.userAgent.toLowerCase().indexOf('chrome') > -1 &&\n    navigator.vendor.toLowerCase().indexOf(\"google\") > -1\n) {\n    // Use Promise.all here...\n}\n```", "```js\nfunction foo(a: number): number {\n    const localFooValue = 12;\n    return localFooValue + a;\n}\n\nfunction bar(b: number): number {\n    const localBarValue = 4;\n    return foo(localBarValue * b);\n}\n```", "```js\nbar(21);\n```", "```js\nfunction foo(a: number): number {\n    const localFooValue = 12;\n    return bar(localFooValue + a);\n}\n\nfunction bar(b: number): number {\n    const localBarValue = 4;\n    return foo(localBarValue * b);\n}\n```", "```js\nconsole.log(this === window); // true\nthis.a = 37;\nconsole.log(window.a); // 37\nconsole.log(window.document === this.document); // true\nconsole.log(this.document === document); // true\nconsole.log(window.document === document); // true\n```", "```js\nfunction f1() {\n  return this;\n}\n\nf1() === window; // true\n```", "```js\nconsole.log(this); // global (window)\n\nfunction f2() {\n  \"use strict\";\n  return this; // undefined\n}\n\nconsole.log(f2()); // undefined\nconsole.log(this); // window\n```", "```js\nconst person = {\n  age: 37,\n  getAge: function() {\n    return this.age; // this points to the instance (person)\n  }\n};\n\nconsole.log(person.getAge()); // 37\n```", "```js\nclass Person {\n  public age: number;\n  public constructor(age: number) {\n    this.age = age;\n  }\n  public getAge() {\n    return this.age; // this points to the instance (person)\n  }\n}\n\nconst person = new Person(37);\nconsole.log(person.getAge()); // 37\n```", "```js\nfunction Person(age) {\n    this.age = age;\n}\n\nPerson.prototype.getAge = function () {\n    return this.age; // this points to the instance (person)\n};\n\nvar person = new Person(37);\nconsole.log(person.getAge()); // 37\n```", "```js\nfunction Person() { // function used as a constructor\n  this.age = 37;\n}\n\nconst person = new Person();\nconsole.log(person.age); // logs 37\n```", "```js\nclass Person {\n\n  public name: string;\n  public surname: string;\n\n  public constructor(name: string, surname: string) {\n    this.name = name;\n    this.surname = surname;\n  }\n\n  public greet(city: string, country: string) {\n    // we use the this operator to access name and surname\n    let msg = `Hi, my name is ${this.name} ${this.surname}.`;\n    msg += `I'm from ${city} (${country}).`;\n    console.log(msg);\n  }\n\n}\n```", "```js\nconst person = new Person(\"remo\", \"Jansen\");\n```", "```js\nperson.greet(\"Seville\", \"Spain\");\n```", "```js\nperson.greet.call(person, \"Seville\", \"Spain\");\nperson.greet.apply(person, [\"Seville\", \"Spain\"]);\n```", "```js\nperson.greet.call(null, \"Seville\", \"Spain\");\nperson.greet.apply(null, [\"Seville\", \"Spain\"]);\n```", "```js\nconst valueOfThis = { name : \"Anakin\", surname : \"Skywalker\" };\nperson.greet.call(valueOfThis, \"Mos espa\", \"Tatooine\");\nperson.greet.apply(valueOfThis, [\"Mos espa\", \"Tatooine\"]);\n```", "```js\nconst person = new Person(\"Remo\", \"Jansen\");\n```", "```js\nconst greet = person.greet.bind(person);\n```", "```js\ngreet.call(person, \"Seville\", \"Spain\");\ngreet.apply(person, [\"Seville\", \"Spain\"]);\n// Hi, my name is Remo Jansen. I'm from Seville Spain.\n\ngreet.call(null, \"Seville\", \"Spain\");\ngreet.apply(null, [\"Seville\", \"Spain\"]);\n// Hi, my name is Remo Jansen. I'm from Seville Spain.\n\nconst valueOfThis = { name: \"Anakin\", surname: \"Skywalker\" };\ngreet.call(valueOfThis, \"Mos espa\", \"Tatooine\");\ngreet.apply(valueOfThis, [\"Mos espa\", \"Tatooine\"]);\n// Hi, my name is Remo Jansen. I'm from Mos espa Tatooine.\n```", "```js\nconst valueOfThis = { name: \"Anakin\", surname: \"Skywalker\" };\nconst greet = person.greet.bind(valueOfThis);\ngreet.call(valueOfThis, \"Mos espa\", \"Tatooine\");\ngreet.apply(valueOfThis, [\"Mos espa\", \"Tatooine\"]);\n// Hi, my name is Remo Jansen. I'm from Mos espa Tatooine.\n```"]