["```js\n      var InvoiceItemView = Backbone.View.extend({\n\n        // HTML element name, where to render a view.\n        el: 'body',\n\n        // Initialize view object values.\n        initialize: function() {\n          this.html = 'Description: Wooden Toy House. ' +\n            'Price: $22\\. Quantity: 3.'\n        },\n\n        // Render view.\n        render: function() {\n          // Set html for the view element using jQuery.\n          $(this.el).html(this.html);\n        }\n      });\n    ```", "```js\n        var invoiceItemView = new InvoiceItemView();\n    ```", "```js\n        invoiceItemView.render();\n    ```", "```js\nvar invoiceItemView = new InvoiceItemView({\n  el: 'body'\n});\n```", "```js\n      // Define new view.\n      var InvoiceItemView2 = Backbone.View.extend({\n        // Set tag name and its attributes.\n        tagName: 'p',\n        className: 'item',\n        attributes: {\n          'align': 'left'\n        },\n\n        // Initialize view object values.\n        initialize: function() {\n          this.html = 'Farm Animal Set. Price: $17\\. Quantity: 1.'\n        },\n\n        // Render view.\n        render: function() {\n\n          // Set html for the view element using jQuery.\n          $(this.el).html(this.html);\n        }\n      });\n    ```", "```js\n        // Create new view instance.\n        var invoiceItemView2 = new InvoiceItemView2();\n\n        invoiceItemView2.el; // <p align=\"left\" class=\"item\"></p>\n    ```", "```js\n        invoiceItemView2.render();\n    ```", "```js\n        $('body').append(invoiceItemView2.el);\n    ```", "```js\n    <body>\n        <p align=\"left\" class=\"item\">\n            Farm Animal Set. Price: $17\\. Quantity: 1.\n        </p>\n    </body>\n    ```", "```js\n// Change existing element to the new one.\nInvoiceItemView.setElement('li');\n\n// Change existing element to the one already exists\n// in the DOM tree.\nInvoiceItemView.setElement($('body div'));\n```", "```js\n    $(this.el).show();\n    ```", "```js\n    this.$el.appendl('<li>An item</li>');\n    ```", "```js\n    this.$el.find('li').html('Hey there');\n    ```", "```js\n    this.$el('li').addClass('highlighted');\n    ```", "```js\n      <script src=\"img/zepto.js\"></script>\n    ```", "```js\n      var InvoiceItemModel = Backbone.Model.extend({\n\n      });\n    ```", "```js\n      var InvoiceItemView = Backbone.View.extend({\n\n        // HTML element name, where to render a view.\n        el: 'body',\n\n        // Render view.\n        render: function() {\n          var html = 'Description: ' +\n            this.model.get('description') + '. ' +\n            'Price: ' + this.model.get('price') + '. ' +\n            'Quantity: ' + this.model.get('quantity') + '.';\n\n          // Set html for the view element using jQuery.\n          $(this.el).html(html);\n        }\n      });\n    ```", "```js\n        var invoiceItemModel = new InvoiceItemModel({\n          description: 'Farmer Figure',\n          price: 8,\n          quantity: 1\n        });\n    ```", "```js\n        var invoiceItemView = new InvoiceItemView({\n\n          // Pass model as a parameter to a view.\n          model: invoiceItemModel\n        });\n    ```", "```js\n        invoiceItemView.render();\n    ```", "```js\n      var InvoiceItemModel = Backbone.Model.extend({\n\n      });\n    ```", "```js\n      var InvoiceItemCollection = Backbone.Collection.extend({\n        model: InvoiceItemModel\n      });\n    ```", "```js\n    var InvoiceItemListView = Backbone.View.extend({\n\n      // HTML element name, where to render a view.\n      el: 'body',\n\n      // Render view.\n      render: function() {\n        var html = '';\n        _.each(this.collection.models,function(model,index,list) {    \n          var item_html = 'Description: ' +\n            model.get('description') + '. ' +\n            'Price: ' + model.get('price') + '. ' +\n            'Quantity: ' + model.get('quantity') + '.';\n          html = html + '<li>' + item_html + '</li>';\n        });\n\n        html = '<ul>' + html + '</ul>';\n\n        // Set html for the view element using jQuery.\n        $(this.el).html(html);\n      }\n    });\n    ```", "```js\n    var invoiceItemCollection = new InvoiceItemCollection([\n      { description: 'Wooden Toy House', price: 22, quantity: 3 },\n      { description: 'Farm Animal Set', price: 17, quantity: 1 },\n      { description: 'Farmer Figure', price: 8, quantity: 1 },\n      { description: 'Toy Tractor', price: 15, quantity: 1 }\n    ]);\n    ```", "```js\n        var invoiceItemListView = new InvoiceItemListView({\n\n          // Pass model as a parameter to a view.\n          collection: invoiceItemCollection\n        });\n    ```", "```js\n        invoiceItemListView.render();\n    ```", "```js\n      var InvoiceItemModel = Backbone.Model.extend({\n\n      });\n      var InvoiceItemCollection = Backbone.Collection.extend({\n        model: InvoiceItemModel\n      });\n    ```", "```js\n      // Define new view to render a model.\n      var InvoiceItemView = Backbone.View.extend({\n\n        // Define element tag name.\n        tagName: 'tr',\n\n        // Render view.\n        render: function() {\n\n          // Add cells to the table row.\n          $(this.el).html(_.map([\n            this.model.get('quantity'),\n            this.model.get('description'),\n            this.model.get('price'), this.model.calculateAmount(),\n          ], function(val, key){\n            return '<td>' + val + '</td>'\n          }));\n\n          return this;\n        }\n      });\n    ```", "```js\n      // Define new view to render a collection.\n      var InvoiceItemListView = Backbone.View.extend({\n\n        // Define element tag name.\n        tagName: 'table',\n\n        // Define element class name.\n        className: 'invoice-item-view',\n\n        // Render view.\n        render: function() {\n\n          $(this.el).empty();\n\n          // Append table with a table header.\n          $(this.el).append($('<tr></tr>').html(\n            _.map(['Quantity', 'Description', 'Price', 'Total'], \n              function(val, key){\n                return '<th>' + val + '</th>'\n            })\n          ));\n\n          // Append table  with a row.\n          $(this.el).append(\n            _.map(this.collection.models, function(model, key) {\n              return new InvoiceItemView({\n                model: model\n              }).render().el;\n            })\n          );\n\n          return this;\n        }\n      });\n    ```", "```js\n      var InvoiceItemListPageView = Backbone.View.extend({\n\n        // Render whole page view.\n        render: function() {\n          $(this.el).html(new InvoiceItemListView({\n            collection: this.collection\n          }).render().el);\n        }\n      });\n    ```", "```js\n    var invoiceItemCollection = new InvoiceItemCollection([\n      { description: 'Wooden Toy House', price: 22, quantity: 3 },\n      { description: 'Farm Animal Set', price: 17, quantity: 1 },\n      { description: 'Farmer Figure', price: 8, quantity: 1 },\n      { description: 'Toy Tractor', price: 15, quantity: 1 }\n    ]);\n    ```", "```js\n        new InvoiceItemListPageView({\n          collection: invoiceItemCollection,\n          el: 'body'\n        }).render();\n    ```", "```js\n      // Define new view to render a model.\n      var InvoiceItemView = Backbone.View.extend({\n\n        // Define tag name.\n        tagName: 'tr',\n      });\n    ```", "```js\n        renderViewMode: function() {\n         $(this.el).html(_.map([\n            this.model.get('quantity'),\n            this.model.get('description'),\n            this.model.get('price'),\n            this.model.calculateAmount(),\n            '<button class=\"edit\">Edit</button>'\n          ], function(val, key){\n            return '<td>' + val + '</td>'\n          }));\n        },\n    ```", "```js\n       renderEditMode: function() {\n          $(this.el).html(_.map([\n            '<input class=\"quantity\" value=\"' + \n              this.model.get('quantity') + '\">',\n            '<input class=\"description\" value=\"' + \n              this.model.get('description') +\n            '\">',\n            '<input class=\"price\" value=\"' + \n              this.model.get('price') + '\">',\n            this.model.calculateAmount(),\n            '<button class=\"save\">Save</button>' +\n            '<button class=\"cancel\">Cancel</button>'\n          ], function(val, key){\n            return '<td>' + val + '</td>'\n          }));\n        },\n    ```", "```js\n        renderCallback: 'renderViewMode',\n\n        render: function() {\n          this[this.renderCallback]();\n\n          return this;\n        },\n    ```", "```js\n        events: {\n          'click button.edit': 'edit',\n          'click button.save': 'save',\n          'click button.cancel': 'cancel',\n        },\n    ```", "```js\n        // Edit button click handler.\n        edit: function() {\n          this.renderCallback = 'renderEditMode';\n\n          this.render();\n        },\n\n        // Save button click handler.\n        save: function() {\n          this.model.set({\n            quantity: $(this.el).find('input.quantity').val(),\n            description: \n              $(this.el).find('input.description').val(),\n            price: $(this.el).find('input.price').val(),\n          });\n\n          this.renderCallback = 'renderViewMode';\n\n          this.render();\n        },\n\n        // Cancel button click handler.\n        cancel: function() {\n          this.renderCallback = 'renderViewMode';\n\n          this.render();\n        }\n    ```", "```js\n    var invoiceItemCollection = new InvoiceItemCollection([\n      { description: 'Wooden Toy House', price: 22, quantity: 3 },\n      { description: 'Farm Animal Set', price: 17, quantity: 1 },\n      { description: 'Farmer Figure', price: 8, quantity: 1 },\n      { description: 'Toy Tractor', price: 15, quantity: 1 }\n    ]);\n    ```", "```js\n        new InvoiceItemListPageView({\n          collection: invoiceItemCollection,\n          el: 'body'\n        }).render();\n    ```", "```js\n{\"event selector\": \"callback\"}\n```", "```js\n      var Workspace = Backbone.Router.extend({\n\n        // Define routes\n        routes: {\n          '': 'invoiceList',\n          'invoice': 'invoiceList',\n          'invoice/:id': 'invoicePage',\n        }\n    ```", "```js\n        initialize: function() {\n\n          //  Create collection\n          this.invoiceCollection = new InvoiceCollection([\n            { referenceNumber: 1234},\n            { referenceNumber: 2345},\n            { referenceNumber: 3456},\n            { referenceNumber: 4567}\n          ]);\n        }\n    ```", "```js\n        invoiceList: function() {\n          this.changeView(new InvoiceListView({\n            collection: this.invoiceCollection\n          }));\n        },\n\n        invoicePage: function(id) {\n          this.changeView(new InvoicePageView({\n            model: this.invoiceCollection.get(id)\n          }));\n        }\n    ```", "```js\n        changeView: function(view) {\n          if (this.currentView) {\n            if (this.currentView == view) {\n              return;\n            }\n\n            this.currentView.remove();\n          }\n\n          $('body').append(view.render().el);\n\n          this.currentView = view;\n        }\n      });\n    ```", "```js\n        new Workspace();\n        Backbone.history.start();\n    ```"]