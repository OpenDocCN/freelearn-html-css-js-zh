- en: Appendix B. InstallingShareKit 2.0
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录B. 安装ShareKit 2.0
- en: It's astonishing, quite frankly, that there's no system-defined framework on
    iOS that enables easy sharing across many different services. iOS 5 does provide
    the Twitter framework, and iOS 6 expands on it by providing the Facebook framework,
    but there's no system-defined framework that you can use to easily share to a
    wider variety of services. Maybe iOS 7 will address that need but don't hold your
    breath.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 实事求是地说，iOS上没有系统定义的框架可以轻松地在许多不同的服务之间进行共享。iOS 5确实提供了Twitter框架，iOS 6通过提供Facebook框架对其进行了扩展，但没有任何系统定义的框架可以让你轻松地共享到更广泛的服务。也许iOS
    7会解决这个问题，但不要抱太大希望。
- en: Thankfully, there is an open source framework called ShareKit that helps to
    address this. It gives us an easy way to share to any number of services (assuming
    one has API keys for each), and it's not hard to call from PhoneGap. Unfortunately,
    installing it is also a royal pain.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一个名为ShareKit的开源框架可以帮助解决这个问题。它为我们提供了一个轻松地将内容共享到任何数量服务的方法（假设每个服务都有一个API密钥），并且从PhoneGap调用它也不困难。不幸的是，安装它也是一个非常痛苦的过程。
- en: We've listed the steps that worked for us as follows. Some of these steps come
    from ShareKit's Wiki at [https://github.com/ShareKit/ShareKit/wiki/Installing-sharekit](https://github.com/ShareKit/ShareKit/wiki/Installing-sharekit),
    so it would be a good idea to refer to that document as well.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们列出了以下对我们有效的步骤。其中一些步骤来自ShareKit的Wiki，网址为[https://github.com/ShareKit/ShareKit/wiki/Installing-sharekit](https://github.com/ShareKit/ShareKit/wiki/Installing-sharekit)，因此最好也参考该文档。
- en: You need to get the ShareKit files. ShareKit recommends using Git to do this,
    or you can use our copy – it is your option. Frankly, it will be easier to use
    the copy in the `Submodules` directory in our code package. It won't be the latest
    version of ShareKit, but it has the required source code changes to work.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要获取ShareKit文件。ShareKit建议使用Git来完成此操作，或者您可以使用我们的副本——这是您的选择。坦白地说，使用我们代码包中`Submodules`目录下的副本会更简单。它可能不是ShareKit的最新版本，但它包含了工作所需的所有源代码更改。
- en: 'Add ShareKit to the project using the following steps:'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下步骤将ShareKit添加到项目中：
- en: 'Navigate to `Submodules/ShareKit` and drag `ShareKit.xcodeproj` to your project
    as shown in the following screenshot:'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Submodules/ShareKit`，并将`ShareKit.xcodeproj`拖动到你的项目中，如图所示：![安装ShareKit 2.0](img/9403_B_02.jpg)
- en: '![InstallingShareKit 2.0](img/9403_B_01.jpg)'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装ShareKit 2.0](img/9403_B_01.jpg)'
- en: 'We need to make various adjustments to permit ShareKit to compile:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要对ShareKit进行各种调整以允许其编译：
- en: Go to your project's settings, click on **Build Phases**, and expand **Target**
    **Dependencies**. Add the **Static Library (ShareKit)** and **Resource Bundle**
    **(ShareKit)** dependencies as shown in the following screenshot:![InstallingShareKit
    2.0](img/9403_B_02.jpg)
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往项目设置，点击**构建阶段**，展开**目标依赖**。添加**静态库（ShareKit）**和**资源包（ShareKit）**依赖项，如图所示：![安装ShareKit
    2.0](img/9403_B_02.jpg)
- en: Expand **Link Binary With Libraries** and add **libShareKit.a** as shown in
    the following screenshot:![InstallingShareKit 2.0](img/9403_B_03.jpg)
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开**链接二进制库**，并添加如图所示的**libShareKit.a**：![安装ShareKit 2.0](img/9403_B_03.jpg)
- en: 'Expand **Copy Bundle Resources** and copy Sharekit''s resource bundle (located
    in the ShareKit subproject under the `Products` folder and named `ShareKit.bundle`)
    to the list as shown in the following screenshot:'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开**复制资源包**，并将Sharekit的资源包（位于`Products`文件夹下的ShareKit子项目中，命名为`ShareKit.bundle`）复制到列表中，如图所示：![安装ShareKit
    2.0](img/9403_B_06.jpg)
- en: '![InstallingShareKit 2.0](img/9403_B_04.jpg)'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装ShareKit 2.0](img/9403_B_04.jpg)'
- en: 'Next we need to adjust the header search paths and linker flags:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来我们需要调整头文件搜索路径和链接器标志：
- en: Switch to **Build Settings**.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**构建设置**。
- en: Search for `user header`.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`user header`。
- en: Double-click the row named **User Header Search Paths**.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击名为**用户头文件搜索路径**的行。
- en: Add **Submodules** and check the checkbox next to the new entry. It should look
    like **Submodules/**** as seen in the following screenshot:![InstallingShareKit
    2.0](img/9403_B_05.jpg)
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加**子模块**并勾选新条目旁边的复选框。它应该看起来像**子模块/****，如图所示：![安装ShareKit 2.0](img/9403_B_05.jpg)
- en: Now search for `other linker`.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在搜索`other linker`。
- en: Double-click the row named **Other Linker Flags**.
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击名为**其他链接器标志**的行。
- en: 'Add `-all_load` and, on a separate line, `-ObjC`, if not already present as
    shown in the following screenshot:'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果尚未添加，请添加`-all_load`和单独一行上的`-ObjC`，如图所示：![安装ShareKit 2.0](img/9403_B_06.jpg)
- en: '![InstallingShareKit 2.0](img/9403_B_06.jpg)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装ShareKit 2.0](img/9403_B_06.jpg)'
- en: 'We need to add the various Apple Frameworks this plugin requires:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要添加此插件所需的各个Apple框架：
- en: Go back to the **Summary** tab.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回**摘要**选项卡。
- en: Scroll down to **Linked Libraries and Frameworks**.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**链接库和框架**。
- en: Add `SystemConfiguration.framework`, `Security.framework`, `MessageUI.framework`,
    `CFNetwork.framework` (required for Flickr sharing), `CoreLocation.framework`
    (Required for FourSquare sharing), `Twitter.Framework` and `CoreFoundation.framework`.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`SystemConfiguration.framework`、`Security.framework`、`MessageUI.framework`、`CFNetwork.framework`（用于Flickr共享）、`CoreLocation.framework`（用于FourSquare共享）、`Twitter.Framework`和`CoreFoundation.framework`。
- en: 'Make `CoreFoundation.framework` **Optional** as shown in the following screenshot:'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如以下截图所示，将`CoreFoundation.framework`设置为**可选**：
- en: '![InstallingShareKit 2.0](img/9403_B_07.jpg)'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装ShareKit 2.0](img/9403_B_07.jpg)'
- en: At this point you should be able to build the project with no errors.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您应该能够无错误地构建项目。
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You may receive an error regarding a failure to find a protocol definition if
    you aren't using our copy of ShareKit. This occurs on the Flickr code; to get
    rid of the error, just remove `OFFlickrAPIRequestDelegate`, on the line causing
    the error. Since we don't use Flicker in the examples, this won't cause a problem.
    (It might, however, should you decide to use Flickr in the future.)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有使用我们的ShareKit副本，您可能会收到一个关于找不到协议定义的错误。这发生在Flickr代码中；要消除错误，只需删除导致错误的行上的`OFFlickrAPIRequestDelegate`。由于我们在示例中没有使用Flickr，这不会引起问题。（然而，如果您将来决定使用Flickr，可能会引起问题。）
- en: 'We need to obtain API keys for the services we intend on using. In our project,
    we used Twitter, Facebook, and ReadItLater (now Pocket). You''re free to use whatever
    services you would like but you must use your own API keys to do so. (Our code
    package does not provide you with API keys.) Visit [https://github.com/ShareKit/ShareKit/wiki/3rd-party-api-links](https://github.com/ShareKit/ShareKit/wiki/3rd-party-api-links)
    for some good information about how to obtain these keys. Please refer the following
    steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要获取我们打算使用的服务的API密钥。在我们的项目中，我们使用了Twitter、Facebook和ReadItLater（现在称为Pocket）。您可以使用任何您喜欢的服务，但您必须使用自己的API密钥来这样做。（我们的代码包不会为您提供API密钥。）请访问[https://github.com/ShareKit/ShareKit/wiki/3rd-party-api-links](https://github.com/ShareKit/ShareKit/wiki/3rd-party_api_links)获取有关如何获取这些密钥的一些有用信息。请参考以下步骤：
- en: We have to configure ShareKit 2.0 with these keys so create a new file in XCode
    and set it to subclass `DefaultSHKConfigurator`. We used `MySHKConfiguration`
    for the name, but you can use whatever you like. Be sure to save this new file
    to your project and not the subproject.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须使用这些密钥配置ShareKit 2.0，因此请在XCode中创建一个新文件，并将其设置为`DefaultSHKConfigurator`的子类。我们使用了`MySHKConfiguration`作为名称，但您可以使用任何您喜欢的名称。请确保将此新文件保存到您的项目中，而不是子项目中。
- en: Look at ShareKit | Classes | ShareKit | Sharers | Configuration | DefaultSHKConfigurator.m
    for the methods you can override. Each of these is labeled with comments indicating
    the code specific to each social networking service.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看ShareKit | 类 | ShareKit | 分享者 | 配置 | DefaultSHKConfigurator.m以了解您可以覆盖的方法。每个方法都带有注释，指示针对每个社交网络服务的特定代码。
- en: Copy the code you need to override and paste it into your own `configurator`
    file.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制您需要覆盖的代码，并将其粘贴到您自己的`configurator`文件中。
- en: 'Alter each method to return the appropriate API key, secret, or other string.
    Here''s an example:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改每个方法以返回适当的API密钥、密钥或其它字符串。以下是一个示例：
- en: '[PRE0]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Navigate to your project''s `/Classes/AppDelegate.m` file and add the following
    at the end of the `didFinishLaunchingWithOptions:` method, just prior to the return
    statement (assuming your file is named `MySHKConfigurator`):'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的项目的`/Classes/AppDelegate.m`文件，并在`didFinishLaunchingWithOptions:`方法的末尾添加以下代码，紧接在返回语句之前（假设您的文件名为`MySHKConfigurator`）：
- en: '[PRE1]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Also add the following code to the import section:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还需要在导入部分添加以下代码：
- en: '[PRE2]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, we need to enable offline sharing (optional):'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要启用离线共享（可选）：
- en: Add `[SHK flushOfflineQueue];` just below our newly added code in the last step.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在上一步新添加的代码下方添加`[SHK flushOfflineQueue];`。
- en: 'If you''re supporting Facebook, you need to support Single Sign On (SSO):'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您支持Facebook，则需要支持单点登录（SSO）：
- en: 'Add the following code at the end of the `handleOpenURL:` method in `AppDelegate.m`
    (replacing the `return YES;` statement):'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`AppDelegate.m`中的`handleOpenURL:`方法末尾添加以下代码（替换`return YES;`语句）：
- en: '[PRE3]'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add a custom URL scheme to your project''s `info.plist` file:'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的项目的`info.plist`文件中添加自定义URL方案：
- en: Add **URL Types**
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加**URL类型**
- en: Add **Item 0**
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加**项目 0**
- en: Add **URL Schemes**
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加**URL方案**
- en: Add **Item 0** with a value of "`fb`" and your app ID from Facebook
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加**项目 0**，并设置值为"`fb`"以及您的Facebook应用ID
- en: '![InstallingShareKit 2.0](img/9403_B_10.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装ShareKit 2.0](img/9403_B_10.jpg)'
- en: To determine how your `AppDelegate.m` file should look when complete, verify
    your file against ours in the downloadable code package.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定您的`AppDelegate.m`文件完成后的样子，请将您的文件与下载的代码包中的我们的文件进行核对。
- en: 'We''re almost done; all we need now is to indicate which social networks we
    don''t support:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎完成了；现在我们只需要指出我们不支持的社交网络：
- en: COPY the `SHKSharers.plist` file from the `ShareKit` subproject into your project.
    Be sure to name it something different, like `MySHKSharers.plist`.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`ShareKit`子项目中的`SHKSharers.plist`文件复制到您的项目中。请确保将其重命名为不同的名称，例如`MySHKSharers.plist`。
- en: Remove the rows corresponding to the networks you don't support. Here's an example
    of ours:![InstallingShareKit 2.0](img/9403_B_11.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除对应于您不支持的网络的行。以下是我们的一个示例：![安装ShareKit 2.0](img/9403_B_11.jpg)
- en: 'Add the following code to the end of your `configurator` file:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到您的`configurator`文件末尾：
- en: '[PRE4]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: At this point, you should have the ShareKit framework integrated into your project.
    You'll want to refer to [Project 2](ch02.html "Chapter 2. Let's Get Social!"),
    *Let's Get Social!* to finish integrating it with the ShareKit PhoneGap plugin.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您应该已经将ShareKit框架集成到您的项目中。您需要参考[项目2](ch02.html "第二章：让我们社交吧！")，*让我们社交吧！*来完成与ShareKit
    PhoneGap插件的集成。
- en: I wish I could give you more to watch out for regarding build errors. Unfortunately,
    every time I do this, I seem to come across new errors I hadn't seen the time
    before. (The Flickr error previously in this document is a good example!) It usually
    takes a cross-your-fingers-and-hope methodology to fix these kinds of errors (such
    as my removal of the protocol causing the error), but removing the error itself
    might not always work. If you have problems, it would be a good idea to ask the
    PhoneGap community or the ShareKit community if they have any suggestions.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我能给您提供更多关于构建错误需要注意的事项。不幸的是，每次我这样做，似乎都会遇到之前没见过的新的错误。（本文档中之前提到的Flickr错误就是一个很好的例子！）通常需要交叉手指并希望的方法来解决这类错误（例如我移除导致错误的协议），但移除错误本身可能并不总是有效。如果您遇到问题，向PhoneGap社区或ShareKit社区寻求建议是个好主意。
