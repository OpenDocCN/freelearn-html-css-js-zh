["```js\n{\n  \"name\": \"monorepo-root\",\n  \"private\": true,\n  \"workspaces\": [\n    \"packages/*\"\n  ]\n}\n```", "```js\npackages:\n  - 'packages/*'\n```", "```js\n$ pnpm install\n\nScope: all 2 workspace projects\n\nPackages: +5\n\n+++++\n\nPackages are hard linked from the content-addressable store to the virtual store.\n\n  Content-addressable store is at: /home/node/.local/share/pnpm/store/v3\n\n  Virtual store is at:             node_modules/.pnpm\n\nProgress: resolved 5, reused 5, downloaded 0, added 5, done\n```", "```js\n$ pnpm add react-dom --filter p1\n\nNo projects matched the filters \"/home/node/ Chapter09/example01\" in \"/home/node/Chapter09/example01\"\n\n.                                        |   +2 +\n\nProgress: resolved 5, reused 5, downloaded 0, added 0, done\n```", "```js\n$ npx lerna run build\n```", "```js\n$ npx lerna init\n```", "```js\n{\n  // ... as beforehand\n  \"version\": \"independent\"\n}\n```", "```js\n$ npx lerna publish --registry http://localhost:4873\n\nlerna notice cli v5.5.2\n\nlerna info versioning independent\n\nlerna info Looking for changed packages since p1@1.0.1\n\n? Select a new version for p1 (currently 0.0.0) Major (1.0.0)\n\n? Select a new version for p2 (currently 0.0.0) Major (1.0.0)\n\nChanges:\n\n - p1: 0.0.0 => 1.0.0\n\n - p2: 0.0.0 => 1.0.0\n\n? Are you sure you want to publish these packages? Yes\n\nlerna info execute Skipping releases\n\nlerna info git Pushing tags...\n\nlerna info publish Publishing packages to npm...\n\n[...]\n\nSuccessfully published:\n\n - p1@1.0.0\n\n - p2@1.0.0\n\nlerna success published 2 packages\n```", "```js\n$ npx lerna list --graph\n\nlerna notice cli v5.5.2\n\nlerna info versioning independent\n\n{\n\n  \"p1\": [\n\n    \"react\",\n\n    \"react-dom\"\n\n  ],\n\n  \"p2\": [\n\n    \"react\",\n\n    \"react-dom\"\n\n  ]\n\n}\n\nlerna success found 2 packages\n```", "```js\n$ npm install -g @microsoft/rush\n```", "```js\n$ rush init\n```", "```js\n{\n  // keep the rest as is\n  \"projects\": [\n    {\n      \"packageName\": \"p1\",\n      \"projectFolder\": \"packages/p1\"\n    },\n    {\n      \"packageName\": \"p2\",\n      \"projectFolder\": \"packages/p2\"\n    }\n  ]\n}\n```", "```js\n$ rush update\n```", "```js\n$ cd packages/p1\n\n$ rush add --package react-router\n```", "```js\n{\n  // as beforehand\n  \"scripts\": {\n    \"hello\": \"echo 'Hi!'\"\n  }\n}\n```", "```js\n$ cd packages/p1 && rushx hello\n\nFound configuration in /home/node/examples/Chapter09/example02/rush.json\n\nRush Multi-Project Build Tool 5.68.2 - Node.js 14.19.2 (LTS)\n\n> \"echo 'Hi!'\"\n\nHi!\n```", "```js\n$ npm init turbo\n```", "```js\n$ npx turbo run build\n```", "```js\n{\n  \"$schema\": \"https://turborepo.org/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\"]\n    },\n    \"lint\": {\n      \"outputs\": []\n    },\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n```", "```js\n{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\", \"prebuild\"]\n    }\n}\n```", "```js\n$ npx lerna turbo lint build\n```", "```js\n$ npm init nx-workspace -- --preset=react\n\n Workspace name (e.g., org name)     · example05\n\n Application name                    · example\n\n Default stylesheet format           · css\n\n Enable distributed caching to make your CI faster · Yes\n\n[...]\n```", "```js\n$ npx nx build\n```", "```js\n$ npx nx run example:build:production\n```"]