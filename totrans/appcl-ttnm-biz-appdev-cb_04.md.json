["```js\n//Create our application namespace\nvar my = {\n  reader : require('rss2objects'),\n  isAndroid : ( Ti.Platform.osname === 'android'),\n  rssTestUrl : \"http://www.fastcompany.com/rss.xml\"\n};\n```", "```js\n      var win = Ti.UI.createWindow({\n        backgroundColor:'#fff'\n      });\n    ```", "```js\n      var yqlButton = Ti.UI.createButton({\n        title:\"Load Using YQL\",left:0 , width: 140, height:40, top:90\n      });\n      win.add(yqlButton);\n    ```", "```js\n      var xmlButton = Ti.UI.createButton({\n        title:\"Load Using XML\",right:0 , width: 140,height:40, top:90\n      });\n      win.add(xmlButton);\n    ```", "```js\n      var tableView = Ti.UI.createTableView({\n        top:120, bottom: 0, width:Ti.UI.FILL\n      });\n      win.add(tableView);\n    ```", "```js\n  yqlButton.addEventListener('click',function(e){\n    my.reader.yqlQuery(my.rssTestUrl,rssResults);\n  });\n```", "```js\n    xmlButton.addEventListener('click',function(e){\n      var queryPath = \"channel.item\";\n      my.reader.query(my.rssTestUrl,queryPath,rssResults);\n    });\n    ```", "```js\n  function rssResults(e){\n```", "```js\n        if(!e.success){\n          alert(\"Sorry we encountered an error\");\n          tableView.setData([]);\n          return;\n        };\n        var items = e.rssDetails.items;\n        var itemCount = items.length;\n        var rows = [];\n    ```", "```js\n        for (var iLoop=0;iLoop<itemCount ;iLoop++){\n          rows.push({\n            title: items[iLoop].title,\n            article : items[iLoop],\n            height: 60,\n            hasChild:true,\n            color:'#000'\n          });\n        }\n    ```", "```js\n        tableView.setData(rows);\n      };\n    ```", "```js\nexports.yqlQuery = function(url,callback){\n```", "```js\n      function onComplete(e){\n    ```", "```js\n        var results = {\n          success:false,\n          rssDetails : {\n            url: url, full : null, items:null\n          }\n        };\n    ```", "```js\n        //Determine if we have an error\n        results.success =  !((_isAndroid && e.data == null)||(!_isAndroid && (e.data == null || e.success==false)));\n    ```", "```js\n        if(results.success){\n          results.rssDetails.items = [];\n          var itemCount = e.data.item.length;\n          for (var iLoop=0;iLoop<itemCount ;iLoop++){\n            results.rssDetails.items.push({\n              //Add each field in our items\n            });\n          }\n        }\n    ```", "```js\n        callback(results);\n      };\n    ```", "```js\n      var yQuery = 'SELECT title, link, description,';\n        yQuery += ' pubDate,guid,author,comments,';\n        yQuery += ' enclosure,source FROM rss WHERE url =';\n        yQuery += '\"' + url + '\"';\n    ```", "```js\n      Ti.Yahoo.yql(yQuery, onComplete);\n    };\n    ```", "```js\nexports.query = function(url,pathQuery,callback){\n  var workers = {\n    results : {\n      success:false,\n      rssDetails : {\n        url:url,full : null,items:null\n      }\n    },\n```", "```js\n        whenComplete : function(){\n         callback(workers.results);\n        }\n      };\n    ```", "```js\n      var xhr = Ti.Network.createHTTPClient();\n    ```", "```js\n      xhr.onload = function(e) {\n    ```", "```js\n        var xml = this.responseXML;\n    ```", "```js\n        var objResults = helpers.parseToObjects (xml);\n    ```", "```js\n        if(objResults ==null){\n          workers.whenComplete();\n          return;\n        }\n    ```", "```js\n        workers.results.rssDetails.full = objResults;\n        workers.results.success = true;\n        workers.results.rssDetails.items = objResults.item;\n    ```", "```js\n        if(pathQuery!=null){\n          workers.results.rssDetails.items = helpers.queryByPath(wobjResults,pathQuery);\n        }\n      };\n    ```", "```js\n      xhr.onerror = function(e) {\n        Ti.API.info(JSON.stringify(e));\n        workers.whenComplete();\n      };\n    ```", "```js\n      xhr.open('GET', url);\n      xhr.send();\n    };\n    ```", "```js\n//Create our application namespace\nvar my = {\n  search : require('yahoo_search'),\n  isAndroid : ( Ti.Platform.osname === 'android')\n};\n```", "```js\nmy.search.addAPIKey('YOUR_KEY_GOES_HERE');\n```", "```js\n      var win = Ti.UI.createWindow({\n        backgroundColor:'#fff'\n      });\n    ```", "```js\n      var txtSubject = Ti.UI.createTextField({\n        left:0, width:150, height:40,top:30,\n        hintText:'Enter Business Name',\n        borderStyle:Ti.UI.INPUT_BORDERSTYLE_ROUNDED\n      });\n      win.add(txtSubject);\n    ```", "```js\n      var searchButton = Ti.UI.createButton({\n        title:'Search', right:0, width:150, height:40,top:30\t\n      });\n      win.add(searchButton);\n    ```", "```js\n      var mapView = Ti.Map.createView({\n        mapType: Ti.Map.STANDARD_TYPE, width:Ti.UI.FILL,\n        userLocation:true, top:75,bottom:0\n      });\n      win.add(mapView);\n    ```", "```js\n  function updateMap(e){\n```", "```js\n        if(!e.success){\n          alert(\"Sorry we encountered an error\");\n          return;\n        }\n    ```", "```js\n        var points = [], itemCount = e.items.length, rightBtn = Ti.UI.iPhone.SystemButton.DISCLOSURE;\n        for (var iLoop=0;iLoop<itemCount;iLoop++){\n          points.push(Ti.Map.createAnnotation({\n            latitude : e.items[iLoop].Latitude,\n              longitude : e.items[iLoop].Longitude,\n              title : e.items[iLoop].Address,\n              subtitle : e.items[iLoop].Phone,\n              pincolor : Ti.Map.ANNOTATION_GREEN,\n              ClickUrl : items[iLoop].ClickUrl,\n              animate:true, rightButton: rightBtn\n          }));\n        }\n\n        var currentRegion = { latitude:e.latitude, longitude:e.longitude, latitudeDelta:0.04, longitudeDelta:0.04};\n    ```", "```js\n          mapView.setLocation(currentRegion);\n          mapView.regionFit = true;\n    ```", "```js\n        mapView.annotations = points;\n      };\n    ```", "```js\n  searchButton.addEventListener('click',function(e){\n```", "```js\n        mapView.removeAllAnnotations();\n    ```", "```js\n        txtSubject.blur();\n    ```", "```js\n        if((txtSubject.value+'').length ===0){\n          alert('Enter a business to search');\n          return;\n        }\n    ```", "```js\n        my.search.currentLocationQuery(txtSubject.value,updateMap);\n      });\n    ```", "```js\nmy.search.addAPIKey('YOUR_KEY_GOES_HERE');\n```", "```js\nmy.search.geoQuery(40.75773, -73.985708,'starbucks',callback);\n```", "```js\nmy.search.currentLocationQuery('starbucks',callback);\n```", "```js\n//Create our application namespace\nvar my = {\n  gAnalyticsModule : require('Ti.Google.Analytics'),\n  isAndroid : (Ti.Platform.osname === 'android'),\n  session:{}\n};\n```", "```js\nmy.session.ga = new my.gaModule('YOUR_KEY_HERE');\n```", "```js\n    my.isTablet = (function() {\n      var tabletCheck = Ti.Platform.osname === 'ipad' || \n        (Ti.Platform.osname === 'android' && \n        (!(Math.min(\n          Ti.Platform.displayCaps.platformHeight,\n          Ti.Platform.displayCaps.platformWidth\n        ) < 700)));\n\n      return tabletCheck;\n    })();\n    ```", "```js\n    my.basePage = (function(){\n      if(my.isAndroid){\n        return ((my.isTablet)? \n        'AndroidTablet' : 'AndroidPhone');\n      }else{\n        //Return iPhone or iPad\n        return Ti.Platform.model;\n      }\n    })();\n    ```", "```js\nmy.session.ga.start(10);\n```", "```js\n      var win = Ti.UI.createWindow({\n        backgroundColor:'#fff', layout:'vertical'\n      });\n    ```", "```js\n      var button1 = Ti.UI.createButton({\n          title: 'Log Action', top:40, height:45, width:Ti.UI.FILL\n      });\n      win.add(button1);\n\n      var button2 = Ti.UI.createButton({\n        title: 'Open New Page', top:40, height:45, width:Ti.UI.FILL\n      });\n      win.add(button2);\n    ```", "```js\n  button1.addEventListener('click',function(e){\n    my.session.ga.trackEvent('button','click', 'win_button', 'trigger_event');\n  });\n```", "```js\n  win.addEventListener('open',function(e){\n    my.session.ga.trackPageview(my.basePage + \"/Main\");\n  });\n  win.open();\n```", "```js\n  button2.addEventListener('click',function(e){\n```", "```js\n      my.session.ga.trackEvent('button','click', 'win_button', 'open_win2');\n    ```", "```js\n        var win2 = Ti.UI.createWindow({\n          backgroundColor:'yellow', layout:'vertical'\n        });\n    ```", "```js\n        win2.addEventListener('open',function(e){\n          my.session.ga.trackPageview(my.basePage + \"/win2\");\n        });\n        win2.open({modal:true});\n      });\n    ```", "```js\n//Create our application namespace\nvar my = {\n  suds : require('suds2'),\n  xmlTools : require(\"XMLTools\"),\n  isAndroid : (Ti.Platform.osname === 'android')\n};\n```", "```js\nvar soapHelper = {\n```", "```js\n      config : {\n        endpoint:\"http://www.webservicex.com/globalweather.asmx\";  targetNamespace: 'http://www.webserviceX.NET/',\n        includeNS : false,\n        addTargetSchema : true \n      },\n    ```", "```js\n      resultParser : {\n    ```", "```js\n        removeHeader : function(text){\n          return text.replace(\n            '<?xml version=\"1.0\" encoding=\"utf-16\"?>',''); \n        },\n    ```", "```js\n        xmlToObject : function(doc){\n    ```", "```js\n    var results = doc.documentElement.getElementsByTagName(\n     'GetWeatherResponse');\n    ```", "```js\n    if(my.isAndroid){\n    ```", "```js\n    var docCurrent =Ti.XML.parseString(\n      soapHelper.resultParser.removeHeader(\n      results.item(0).textContent));\n    ```", "```js\n          return new my.xmlTools(docCurrent).toObject();\n        }else{\n    ```", "```js\n        var weather =results.item(0).getChildNodes()\n          .item(0).getChildNodes();\n    ```", "```js\n            var docCurrentFromString = Ti.XML.parseString(soapHelper.resultParser.removeHeader(weather.item(0).textContent));\n            return new my.xmlTools(docCurrentFromString).toObject();\n          }\n        }\n      }\n    };\n    ```", "```js\n      var win = Ti.UI.createWindow({\n        backgroundColor:'#fff', layout:'vertical'\n      });\n    ```", "```js\n      var txtCity = Ti.UI.createTextField({\n          value:'New York', hintText:'Enter city',top:10, height:40, left:10, right:10,textAlign:'left', borderStyle:Ti.UI.INPUT_BORDERSTYLE_ROUNDED \n      });\n      win.add(txtCity);\n    ```", "```js\n      var txtCountry = Ti.UI.createTextField({\n        value:'United States', hintText:'Enter country',top:10, height:40, left:10, right:10, textAlign:'left', borderStyle:Ti.UI.INPUT_BORDERSTYLE_ROUNDED \n      });\n      win.add(txtCountry);\n    ```", "```js\n      var goButton = Ti.UI.createButton({\n        title:'Find Weather', left:10, top:10\n      });\n      win.add(goButton);\n    ```", "```js\n      var tableView = Ti.UI.createTableView({\n        visible : false, top:10, height:100, width:Ti.UI.FILL\n      });\n      win.add(tableView);\n    ```", "```js\nvar uiHelpers = {\n```", "```js\n  updateUI : function(weather){\n    var data = [];\n    tableView.visible = true;\n    data.push({title: \"Sky Conditions: \" + weather.SkyConditions, color:'#000'});\n    data.push({title: \"Temperature: \" + weather.Temperature, color:'#000'});\n    data.push({title: \"Time: \" + weather.Time});\n    tableView.setData(data);\t\n  };\n```", "```js\n  resetUI :function(){\n    tableView.visible = false;\n  };\n};\n```", "```js\ngoButton.addEventListener('click',function(e){\n```", "```js\n      uiHelpers.resetUI()\n    ```", "```js\n      var sudsClient = new my.suds(soapHelper.config);\n    ```", "```js\n      sudsClient.invoke('GetWeather', \n    ```", "```js\n      {\n        CityName: txtCity.value,\n        CountryName: txtCountry.value\n      }, \n    ```", "```js\n      function(xml) {\n    ```", "```js\n        var weather = soapHelper.resultParser.xml2Object(xml);\n    ```", "```js\n        if(weather.Status==='Success'){\n    ```", "```js\n          uiHelpers.updateUI(weather);\n        }else{\n    ```", "```js\n          alert(\"Sorry a problem happened\");\n          uiHelpers.resetUI();\n        }\n      });\n    });\n    ```", "```js\n//Create our application namespace\nvar my = {\n  isAndroid : (Ti.Platform.osname === 'android'),\n  linkedMod: require('linkedin_module-min'),\n  formatters : require('formatters')\n};\n```", "```js\nmy.linkedMod.init('YOUR_SECRET_KEY', 'YOUR_API_KEY');\n```", "```js\nmy.linkedMod.addPermission('r_network');\n```", "```js\nmy.linkedMod.addPermission('r_fullprofile');\n```", "```js\n      var win = Ti.UI.createWindow({\n        backgroundColor:'#fff'\n      });\n    ```", "```js\n      var search = Ti.UI.createSearchBar({\n        barColor:'#385292', showCancel:true, hintText:'Search'\n      });\n    ```", "```js\n      var tableView = Ti.UI.createTableView({\n        height:Ti.UI.FILL, width:Ti.UI.FILL, search:search, filterAttribute:'lastName'\n      });\n      win.add(tableView);\n    ```", "```js\n  win.addEventListener('open',function(e){\n```", "```js\n        uiHelpers.createWaitMsg('Loading please wait...');\n    ```", "```js\n        my.linkedMod.getConnections(function(_e) {\n    ```", "```js\n          uiHelpers.displayContacts(_e);\n        });\n      });\n\n      win.open();\n    ```", "```js\nvar uiHelpers = {\n```", "```js\n      createWaitMsg : function(msg){\n        tableView.setData([{title:msg}]);\n      },\n    ```", "```js\n      displayContacts : function(apiResults){\n    ```", "```js\n        uiHelpers.createWaitMsg('Loading contacts please wait...');\n    ```", "```js\n        var resultAsObjects =  my.resultParser.convertToObjects(apiResults);\n    ```", "```js\n        if(resultAsObjects == null){\n          alert('Sorry we ran into an error');\n          return;\n        }\n    ```", "```js\n        tableView.setData(my.formatters.createContactTableRows( resultAsObjects)\n        );\n      }\n    };\n    ```", "```js\nmy.resultParser = {\n```", "```js\n      getText : function(item, key) {\n        var searchItem = item.getElementsByTagName(key).item(0);\n        return ((searchItem == null)? null : searchItem.textContent);\n      },\n    ```", "```js\n      getQueryParams : function(url){\n        var params = {};\n        url = url.substring(url.indexOf('?')+1).split('&');\n        var pair, d = decodeURIComponent;\n        for (var i = url.length - 1; i >= 0; i--) {\n          pair = url[i].split('=');\n          params[d(pair[0])] = d(pair[1]);\n        }\n        return params;\n      },\n    ```", "```js\n      formatUrl : function(findKey){\n        return ((findKey.hasOwnProperty(\"key\")) ? (\"http://www.linkedin.com/profile/view?id=\" + findKey.key) : \"http://www.linkedin.com\");\n      },\n    ```", "```js\n      getProfileUrl : function(item) {\n        var searchItem = item.getElementsByTagName(\"site-standard-profile-request\").item(0);\n        if(searchItem == null){\n          return null;\n        }\n        if(searchItem.hasChildNodes()){\n          var findKey = my.resultParser.getQueryParams(searchItem.getElementsByTagName('url').item(0).textContent);\n          return my.resultParser.formatUrl(findKey);\n        }else{\n          return null;\n        }\n      },\n    ```", "```js\n      isPublic : function(item){\n        return !((my.resultParser.getProfileUrl(item)==null));\n      },\n    ```", "```js\n      convertToObjects : function(xmlString){\n        var contacts = [];\n    ```", "```js\n        var doc = Ti.XML.parseString(xmlString);\n    ```", "```js\n        var items = doc.documentElement.getElementsByTagName(\"person\");\n    ```", "```js\n        for (var i = 0; i < items.length; i++) {\n    ```", "```js\n          if(my.resultParser.isPublic(items.item(i))){\n    ```", "```js\n            contacts.push({\n              id : my.resultParser.getText(items.item(i), 'id'), headLine : my.resultParser.getText(items.item(i), 'headline'),\n              firstName : my.resultParser.getText(items.item(i), 'first-name'),\n              lastName : my.resultParser.getText(items.item(i), 'last-name'),\n              pictureUrl : my.resultParser.getText(items.item(i), 'picture-url'),\n              profileUrl : my.resultParser.getProfileUrl(items.item(i))\n            });\n          }\n        }\n    ```", "```js\n        doc = null, xmlString = null;\n        return contacts;\n      }\n    };\n    ```"]