- en: Chapter 3. FuncUnit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章。FuncUnit
- en: '**FuncUnit** is a functional testing framework with jQuery-like syntax. It
    is built on top of the **QUnit** unit test framework.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**FuncUnit** 是一个具有类似 jQuery 语法的功能测试框架。它建立在 **QUnit** 单元测试框架之上。'
- en: Using FuncUnit, we can run tests in all the modern web browsers under OS X,
    GNU/Linux, or Windows.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 FuncUnit，我们可以在 OS X、GNU/Linux 或 Windows 下的所有现代网络浏览器中运行测试。
- en: Writing a test is really easy and fast, especially if the reader is familiar
    with the jQuery syntax and/or the QUnit framework.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 编写测试非常简单快捷，尤其是如果读者熟悉 jQuery 语法和/或 QUnit 框架。
- en: FuncUnit allow us to run tests in web browsers as well as integrates it with
    automation tools such as Selenium, or run tests from the command line using wrappers
    such as PhantomJS.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: FuncUnit 允许我们在网络浏览器中运行测试，同时将其与自动化工具（如 Selenium）集成，或使用包装器（如 PhantomJS）从命令行运行测试。
- en: 'FuncUnit can be integrated with build tools, such as Maven, to run as a part
    of the build process. It can be integrated with continuous integration tools,
    such as Jenkins. More information on FuncUnit can be found at the following URLs:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: FuncUnit 可以与构建工具集成，例如 Maven，作为构建过程的一部分运行。它还可以与持续集成工具集成，例如 Jenkins。有关 FuncUnit
    的更多信息，可以在以下网址找到：
- en: '**Documentation**: [http://javascriptmvc.com/docs.html#!FuncUnit](http://javascriptmvc.com/docs.html#!FuncUnit)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：[http://javascriptmvc.com/docs.html#!FuncUnit](http://javascriptmvc.com/docs.html#!FuncUnit)'
- en: '**Source code**: [https://github.com/bitovi/funcunit](https://github.com/bitovi/funcunit)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源代码**：[https://github.com/bitovi/funcunit](https://github.com/bitovi/funcunit)'
- en: '**QUnit**: [http://docs.jquery.com/QUnit](http://docs.jquery.com/QUnit)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**QUnit**：[http://docs.jquery.com/QUnit](http://docs.jquery.com/QUnit)'
- en: 'According to Wikipedia, functional testing is defined as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 根据维基百科，功能测试被定义为如下：
- en: '*Functional testing is a type of black box testing that bases its test cases
    on the specifications of the software component under test. Functions are tested
    by feeding them input and examining the output, and internal program structure
    is rarely considered.*'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*功能测试是一种黑盒测试，其测试用例基于正在测试的软件组件的规范。通过提供输入并检查输出来测试函数，很少考虑内部程序结构。*'
- en: In this chapter, we are going to get an overview of the FuncUnit functional
    testing framework, create tests, and run them against our `Todo` application.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将概述 FuncUnit 功能测试框架，创建测试，并将它们运行在我们的 `Todo` 应用程序上。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Unit testing versus functional testing**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**单元测试与功能测试**'
- en: Unit testing tests an individual unit-like method or function, while functional
    testing tests the entire functionality usually through the product user interface.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试测试单个类似单元的方法或函数，而功能测试通过产品用户界面测试整个功能。
- en: Creating tests
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建测试
- en: Creating tests is writing a code that runs against application code to ensure
    that the code meets its design and behaves as intended. Writing tests can save
    time by finding bugs at the early development stage.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建测试是编写运行针对应用程序代码的代码，以确保代码符合其设计和预期行为。编写测试可以在早期开发阶段发现错误，从而节省时间。
- en: 'Lets add our first test for the `Todo` app:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为 `Todo` 应用程序添加第一个测试：
- en: 'In the `Todo/todo` folder, create a folder named `tests`. Inside it, create
    a file named `todo_test.html` with following content:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Todo/todo` 文件夹中，创建一个名为 `tests` 的文件夹。在其内部，创建一个名为 `todo_test.html` 的文件，包含以下内容：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This file provides a page skeleton that is populated with the FuncUnit output,
    which remains the same for all future test cases—use it as a template; only the
    title and path to the test file will change (highlighted code).
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此文件提供了一个页面骨架，其中包含 FuncUnit 输出，对于所有未来的测试用例都保持不变——将其用作模板；只有标题和测试文件的路径会更改（高亮代码）。
- en: 'Next, create a `todo_test.js` file with following content:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建一个包含以下内容的 `todo_test.js` 文件：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Module
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模块
- en: A module signature is given by `module(name, [lifecycle]);`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 模块签名由 `module(name, [lifecycle]);` 提供。
- en: The module method comes from the QUnit project and provides the functionality
    to divide test into modules.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 模块方法来自 QUnit 项目，它提供了将测试划分为模块的功能。
- en: The first parameter is a string with a module name. The second one is an object
    with two possible methods, `setup` and `teardown`. The `setup` callback method
    runs before each test, while the `teardown` runs after each test in the module.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是一个包含模块名称的字符串。第二个参数是一个包含两个可能方法的对象，`setup` 和 `teardown`。`setup` 回调方法在每个测试之前运行，而
    `teardown` 在模块中的每个测试之后运行。
- en: Open
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开
- en: An open signature is given by `open(path, [success], [timeout])`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`open(path, [success], [timeout])` 提供了一个开放签名。'
- en: 'In our example, we used the `open` method to open a given URL and run it against
    the test `''page has #todos placeholder''`.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '在我们的示例中，我们使用了 `open` 方法来打开给定的 URL 并对其运行测试 `''page has #todos placeholder''`。'
- en: Test
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: A test signature is given by `test(name, [expected], test)`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 测试签名由 `test(name, [expected], test)` 提供。
- en: This method runs the actual test code.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法运行实际的测试代码。
- en: The first parameter is the name of the test, while the second is required to
    actually run the code.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是测试的名称，而第二个是实际运行代码所必需的。
- en: Ok
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ok
- en: An ok signature is given by `ok(state, [message])`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的签名由 `ok(state, [message])` 提供。
- en: The `ok` method is a Boolean assertion. If the first parameter evaluates to
    true, the test passes. The second parameter is optional and it describes test.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`ok` 方法是一个布尔断言。如果第一个参数评估为真，则测试通过。第二个参数是可选的，它描述了测试。'
- en: S
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: S
- en: '`S` is basically copy of the jQuery shortcut `$`, extended by FuncUnit-specific
    methods.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`S` 主要是 jQuery 短路 `$` 的副本，通过 FuncUnit 特定方法进行了扩展。'
- en: Running tests
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行测试
- en: There are quite few ways to run tests. Using a web browser, a command-line tool
    will open the web browser and close it after the test execution is completed.
    We can also run tests using standalone JavaScript environments.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试的方法有很多。使用网络浏览器，命令行工具将在测试执行完成后打开并关闭浏览器。我们还可以使用独立的 JavaScript 环境运行测试。
- en: Web browser
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络浏览器
- en: 'Disable the pop-up blocker and open `tests/todo_test.html` in the browser.
    The test will open the `Todo` application and run the test case against it. After
    this, you should be able to see something similar to the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用弹出窗口阻止程序，并在浏览器中打开 `tests/todo_test.html`。测试将打开 `Todo` 应用程序并对其运行测试用例。之后，你应该能够看到以下截图类似的内容：
- en: '![Web browser](img/0205OS_03_01.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![网络浏览器](img/0205OS_03_01.jpg)'
- en: Selenium
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Selenium
- en: 'Run the following command from the `Todo` app directory:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `Todo` 应用程序目录中运行以下命令：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will open Firefox, run exactly the same test as in the web browser
    example, close the browser, and print the results on a command line.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将打开 Firefox，运行与网络浏览器示例中完全相同的测试，关闭浏览器，并在命令行上打印结果。
- en: PhantomJS
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PhantomJS
- en: A much faster solution is running test using PhantomJS, because it doesn't launch
    the web browser.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PhantomJS 运行测试是一个更快的解决方案，因为它不会启动网络浏览器。
- en: 'Execute following command to run the test:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令以运行测试：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding command will run the test in a PhantomJS environment, so it won't
    open any web browser as it did in the previous case. But, it will run tests inside
    the WebKit wrapper.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此前命令将在 PhantomJS 环境中运行测试，因此它不会像上一个案例那样打开任何网络浏览器。但是，它将在 WebKit 包装器内运行测试。
- en: 'The command-line output should be similar to the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行输出应类似于以下内容：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: EnvJS
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EnvJS
- en: Another way to run tests is to use EnvJS-simulated browser environments written
    in JavaScript.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试的另一种方式是使用用 JavaScript 编写的 EnvJS 模拟浏览器环境。
- en: EnvJS can only be used to run unit tests, because it doesn't accurately implement
    event simulation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: EnvJS 只能用于运行单元测试，因为它没有准确实现事件模拟。
- en: 'Run the test by executing the following command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下命令来运行测试：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Integration
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成
- en: 'Integration is possible with popular build or CI tools, such as Jenkins or
    Maven:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 集成是可能的，可以使用流行的构建或 CI 工具，如 Jenkins 或 Maven：
- en: '**Jenkins**: [http://javascriptmvc.com/docs.html#!funcunit.jenkins](http://javascriptmvc.com/docs.html#!funcunit.jenkins)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jenkins**: [http://javascriptmvc.com/docs.html#!funcunit.jenkins](http://javascriptmvc.com/docs.html#!funcunit.jenkins)'
- en: '**Maven**: [http://javascriptmvc.com/docs.html#!funcunit.maven](http://javascriptmvc.com/docs.html#!funcunit.maven)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Maven**: [http://javascriptmvc.com/docs.html#!funcunit.maven](http://javascriptmvc.com/docs.html#!funcunit.maven)'
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: As we can see, FuncUnit is an easy-to-use, powerful testing framework.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，FuncUnit 是一个易于使用且功能强大的测试框架。
- en: Writing test cases is fast and easy. The possibility to run them in several
    ways as well as integrate them with automated and build tools makes FuncUnit a
    solid tool.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 编写测试用例既快又简单。能够在多种方式下运行它们以及与自动化和构建工具集成，使 FuncUnit 成为一个可靠的工具。
- en: Now, we have no excuses not to write tests.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们没有借口不编写测试了。
