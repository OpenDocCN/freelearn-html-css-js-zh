["```js\n$ port search nodejs npm\n...\nnodejs6 @6.12.0 (devel, net)\n    Evented I/O for V8 JavaScript\n\nnodejs7 @7.10.1 (devel, net)\n    Evented I/O for V8 JavaScript\n\nnodejs8 @8.9.1 (devel, net)\n    Evented I/O for V8 JavaScript\n\nnodejs9 @9.2.0 (devel, net)\n    Evented I/O for V8 JavaScript\n\nFound 6 ports.\n--\nnpm4 @4.6.1 (devel)\n    node package manager\n\nnpm5 @5.5.1 (devel)\n    node package manager\n\nFound 4 ports.\n\n$ sudo port install nodejs8 npm5\n.. long log of downloading and installing prerequisites and Node\n$ which node\n/opt/local/bin/node\n$ node --version\nv8.9.1 \n```", "```js\n$ brew update\n... long wait and lots of output\n$ brew search node\n==> Searching local taps...\nnode ![](img/90a4fbe7-81ae-4745-b906-6e957914cf11.png) libbitcoin-node node-build node@6 nodeenv\nleafnode llnode node@4 nodebrew nodenv\n==> Searching taps on GitHub...\ncaskroom/cask/node-profiler\n==> Searching blacklisted, migrated and deleted formulae...\n```", "```js\n$ brew install node\n...\n==> Installing node\n==> Downloading https://homebrew.bintray.com/bottles/node-8.9.1.el_capitan.bottle.tar.gz\n######################################################################## 100.0%\n==> Pouring node-8.9.1.el_capitan.bottle.tar.gz\n==> Caveats\nBash completion has been installed to:\n /usr/local/etc/bash_completion.d\n==> Summary\n![](img/8c8a799a-4067-46f2-a277-cc926bd598f1.png)/usr/local/Cellar/node/8.9.1: 5,012 files, 49.6MB\n```", "```js\n$ node --version\nv8.9.1  \n```", "```js\n# curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\n# sudo apt-get install -y nodejs\n# sudo apt-get install -y build-essential  \n```", "```js\n$ cc --version\nApple LLVM version 7.0.2 (clang-700.1.81)\nTarget: x86_64-apple-darwin15.3.0\nThread model: posix\n$ python\nPython 2.7.11 (default, Jan  8 2016, 22:23:13) \n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```", "```js\n$ xcode-select --install\n```", "```js\n$ mkdir src\n$ cd src\n$ wget https://nodejs.org/dist/v10.0.0/node-v10.0.0.tar.gz\n$ tar xvfz node-v10.0.0.tar.gz\n$ cd node-v10.0.0\n```", "```js\n$ ./configure --help\n```", "```js\n$ ./configure --prefix=$HOME/node/10.0.0\n..output from configure  \n```", "```js\n# On bash shell:\n$ export PATH=${HOME}/node/VERSION-NUMBER/bin:${PATH}\n# On csh\n$ setenv PATH ${HOME}/node/VERSION-NUMBER/bin:${PATH}\n```", "```js\n$ make\n.. a long log of compiler output is printed\n$ make install\n```", "```js\n$ make\n$ sudo make install\n```", "```js\n$ echo 'export PATH=$HOME/node/10.0.0/bin:${PATH}' >>~/.bashrc\n$ . ~/.bashrc  \n```", "```js\n$ echo 'setenv PATH $HOME/node/10.0.0/bin:${PATH}' >>~/.cshrc\n$ source ~/.cshrc  \n```", "```js\n$ ls ~/node/10.0.0/\nbin   include   lib   share\n$ ls ~/node/10.0.0/bin  \n```", "```js\n$ export PATH=/usr/local/node/VERSION-NUMBER/bin:${PATH}  \n```", "```js\n$ nvm ls\n...\n v6.0.0\n v6.1.0\n v6.2.2\n v6.3.1\n v6.4.0\n ...\n v6.11.2\n v7.0.0\n v7.1.0\n v7.10.0\n v8.0.0\n v8.1.3\n v8.2.1\n v8.5.0\n v8.9.1\n v8.9.3\n v9.2.0\n v9.4.0\n v9.5.0\n v9.10.1\n v9.11.1\n -> v10.0.0\n -> system\nnode -> stable (-> v8.9.1) (default)\nstable -> 8.9 (-> v8.9.1) (default)\niojs -> N/A (default)\n$ nvm use 10\nNow using node v10.0.0 (npm v5.6.0)\n$ node --version\nv10.0.0\n$ nvm use v4.2\nNow using node v4.2.0 (npm v2.14.7)\n$ node --version\nv4.2.0\n$ nvm install 9\nDownloading https://nodejs.org/dist/v9.2.0/node-v9.2.0-darwin-x64.tar.xz...\n######################################################################## 100.0%\nWARNING: checksums are currently disabled for node.js v4.0 and later\nNow using node v9.2.0 (npm v5.5.1)\n$ node --version\nv9.2.0\n$ which node\n/Users/david/.nvm/versions/node/v9.2.0/bin/node\n$ /usr/local/bin/node --version\nv8.9.1\n$ /opt/local/bin/node --version\nv8.9.1\n```", "```js\n$ mkdir temp\n$ cd temp\n$ npm install libxmljs libxslt  \n```", "```js\nengines: { \n  \"node\": \">=6.x\" \n} \n```", "```js\n$ node --help\nUsage: node [options] [ -e script | script.js | - ] [arguments]\n node inspect script.js [arguments]\n\nOptions:\n -v, --version print Node.js version\n -e, --eval script evaluate script\n -p, --print evaluate script and print result\n -c, --check syntax check script without executing\n -i, --interactive always enter the REPL even if stdin\n does not appear to be a terminal\n -r, --require module to preload (option can be repeated)\n - script read from stdin (default; interactive mode if a tty)\n --inspect[=[host:]port] activate inspector on host:port\n (default: 127.0.0.1:9229)\n --inspect-brk[=[host:]port]\n activate inspector on host:port\n and break at start of user script\n --inspect-port=[host:]port\n set host:port for inspector\n\n... many more options\nEnvironment variables:\nNODE_DEBUG ','-separated list of core modules\n that should print debug information\nNODE_DISABLE_COLORS set to 1 to disable colors in the REPL\nNODE_EXTRA_CA_CERTS path to additional CA certificates\n file\nNODE_ICU_DATA data path for ICU (Intl object) data\n (will extend linked-in data)\nNODE_NO_WARNINGS set to 1 to silence process warnings\nNODE_NO_HTTP2 set to 1 to suppress the http2 module\nNODE_OPTIONS set CLI options in the environment\n via a space-separated list\nNODE_PATH ':'-separated list of directories\n prefixed to the module search path\nNODE_PENDING_DEPRECATION set to 1 to emit pending deprecation\n warnings\nNODE_REPL_HISTORY path to the persistent REPL history\n file\nNODE_REDIRECT_WARNINGS write warnings to path instead of\n stderr\nOPENSSL_CONF load OpenSSL configuration from file\n\nDocumentation can be found at https://nodejs.org/\n```", "```js\n$ node\n> console.log('Hello, world!');\nHello, world!\nundefined  \n```", "```js\nconst fs = require('fs');\nconst util = require('util');\nconst fs_readdir = util.promisify(fs.readdir);\n\n(async () => {\n const files = await fs_readdir('.');\n for (let fn of files) {\n console.log(fn);\n }\n})().catch(err => { console.error(err); });\n```", "```js\n$ node ls.js\nls.js\n```", "```js\nconst fs = require('fs');\nconst util = require('util');\nconst fs_readdir = util.promisify(fs.readdir);\n\n(async () => {\n  var dir = '.';\n  if (process.argv[2]) dir = process.argv[2];\n  const files = await fs_readdir(dir);\n  for (let fn of files) {\n    console.log(fn);\n  }\n})().catch(err => { console.error(err); });\n```", "```js\n$ pwd\n/Users/David/chap02\n$ node ls2 ..\nchap01\nchap02\n$ node ls2\napp.js\nls.js\nls2.js\n```", "```js\n$ node ls2.js /nonexistent\n{ Error: ENOENT: no such file or directory, scandir '/nonexistent'\n errno: -2,\n code: 'ENOENT',\n syscall: 'scandir',\n path: '/nonexistent' }\n```", "```js\nconst fs = require('fs').promises;\n(async () => {\n var dir = '.';\n if (process.argv[2]) dir = process.argv[2];\n const files = await fs.readdir(dir);\n```", "```js\n for (let fn of files) {\n     console.log(fn);\n }\n})().catch(err => { console.error(err); });\n```", "```js\n$ node ls2-promises.js \n(node:40329) ExperimentalWarning: The fs.promises API is experimental\napp.js ls.js\nls2-promises.js\nls2.js\n```", "```js\nconst http = require('http'); \nhttp.createServer(function (req, res) { \n  res.writeHead(200, {'Content-Type': 'text/plain'}); \n  res.end('Hello, World!\\n'); \n}).listen(8124, '127.0.0.1'); \nconsole.log('Server running at http://127.0.0.1:8124'); \n```", "```js\n$ node app.js\nServer running at http://127.0.0.1:8124  \n```", "```js\n$ npm install -g hexy\n/opt/local/bin/hexy -> /opt/local/lib/node_modules/hexy/bin/hexy_cmd.js\n+ hexy@0.2.10\nadded 1 package in 1.107s\n```", "```js\n$ sudo npm install -g hexy\n```", "```js\n$ hexy --width 12 ls.js\n00000000: 636f 6e73 7420 6673 203d 2072 const.fs.=.r\n0000000c: 6571 7569 7265 2827 6673 2729 equire('fs')\n00000018: 3b0a 636f 6e73 7420 7574 696c ;.const.util\n00000024: 203d 2072 6571 7569 7265 2827 .=.require('\n00000030: 7574 696c 2729 3b0a 636f 6e73 util');.cons\n0000003c: 7420 6673 5f72 6561 6464 6972 t.fs_readdir\n00000048: 203d 2075 7469 6c2e 7072 6f6d .=.util.prom\n00000054: 6973 6966 7928 6673 2e72 6561 isify(fs.rea\n00000060: 6464 6972 293b 0a0a 2861 7379 ddir);..(asy\n0000006c: 6e63 2028 2920 3d3e 207b 0a20 nc.().=>.{..\n00000078: 2063 6f6e 7374 2066 696c 6573 .const.files\n00000084: 203d 2061 7761 6974 2066 735f .=.await.fs_\n00000090: 7265 6164 6469 7228 272e 2729 readdir('.')\n0000009c: 3b0a 2020 666f 7220 2866 6e20 ;...for.(fn.\n000000a8: 6f66 2066 696c 6573 2920 7b0a of.files).{.\n000000b4: 2020 2020 636f 6e73 6f6c 652e ....console.\n000000c0: 6c6f 6728 666e 293b 0a20 207d log(fn);...}\n000000cc: 0a7d 2928 292e 6361 7463 6828 .})().catch(\n000000d8: 6572 7220 3d3e 207b 2063 6f6e err.=>.{.con\n000000e4: 736f 6c65 2e65 7272 6f72 2865 sole.error(e\n000000f0: 7272 293b 207d 293b           rr);.});\n```", "```js\nfs.readFile('file.txt', 'utf8', (err, data) => { \n  if (err) ...; // do something with the error \n  else ...;  // do something with the data \n}); \n```", "```js\ndoThis(arg1, arg2, (err, result1, result2) => { \n    if (err) ...; \n    else { \n         // do some work \n         doThat(arg2, arg3, (err2, results) => { \n              if (err2) ...; \n              else { \n                     doSomethingElse(arg5, err => { \n                             if (err) .. ; \n                             else ..; \n                     }); \n              } \n         }); \n    } \n}); \n```", "```js\nfunction doThis(arg1, arg2) { \n    return new Promise((resolve, reject) => { \n        // execute some asynchronous code \n        if (errorIsDetected) return reject(errorObject); \n        // When the process is finished call this: \n        resolve(result1, result2); \n    }); \n}\n```", "```js\ndoThis(arg1, arg2) \n.then(result => { \n  // This can receive only one value, hence to\n  // receive multiple values requires an object or array\n  return doThat(arg2, arg3); \n}) \n.then((results) => { \n  return doSomethingElse(arg5); \n}) \n.then(() => { \n   // do a final something \n}) \n.catch(err => { \n   // errors land here \n}); \n```", "```js\nasync function mumble() {\n   // async magic happens here\n}\n```", "```js\nconst mumble = async () => {\n    // async magic happens here\n};\n```", "```js\nasync function doSomething(arg1, arg2, arg3, arg4, arg5) {\n    var { result1, result2 } = await doThis(arg1, arg2);\n    var results = await doThat(arg2, arg3);\n    await doSomethingElse(arg5);\n    // do a final something\n    return finalResult;\n}\n```", "```js\nvar { value1, value2 } = {\n    value1: \"Value 1\", value2: \"Value 2\", value3: \"Value3\"\n};\n```", "```js\n$ npm install babel-cli \\\n       babel-plugin-transform-es2015-modules-commonjs \\\n       babel-plugin-transform-async-to-generator\n```", "```js\n// const fs_readdir = util.promisify(fs.readdir);\nconst fs_readdir = dir => {\n   return new Promise((resolve, reject) => {\n       fs.readdir(dir, (err, fileList) => {\n           if (err) reject(err);\n           else resolve(fileList);\n       });\n    });\n};\n```", "```js\n{\n \"plugins\": [\n   \"transform-es2015-modules-commonjs\",\n   \"transform-async-to-generator\"\n ]\n}\n```", "```js\n$ ./node_modules/.bin/babel -help  \n```", "```js\n$ ./node_modules/.bin/babel ls2.js -o ls2-babel.js  \n```", "```js\n'use strict';\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst fs = require('fs');\nconst util = require('util');\n// const fs_readdir = util.promisify(fs.readdir);\n\nconst fs_readdir = dir => {\n return new Promise((resolve, reject) => {\n   fs.readdir(dir, (err, fileList) => {\n     if (err) reject(err);\n     else resolve(fileList);\n   });\n });\n};\n\n_asyncToGenerator(function* () {\n var dir = '.';\n if (process.argv[2]) dir = process.argv[2];\n const files = yield fs_readdir(dir);\n for (let fn of files) {\n     console.log(fn);\n }\n})().catch(err => {\n console.error(err);\n});\n```", "```js\n$ node ls2-babel\n.babelrc\napp.js\nbabel\nls.js\nls2-babel.js\nls2.js\nnode_modules\n```"]