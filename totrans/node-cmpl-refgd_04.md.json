["```js\nclass Note {\n    constructor(key, title, body) {\n        this._key = key;\n        this._title = title;\n        this._body = body;\n    }\n    get key() { return this._key; }\n    get title() { return this._title; }\n    set title(newTitle) { return this._title = newTitle; }\n    get body() { return this._body; }\n    set body(newBody) { return this._body = newBody; }\n}\n```", "```js\nmodule.exports.Note = class Note { .. }   # in CommonJS modules\nexport class Note { .. }                  # in ES6 modules\n```", "```js\nvar aNote = new Note(\"key\", \"The Rain in Spain\", \"Falls mainly on the plain\");\nvar key = aNote.key;\nvar title = aNote.title;\naNote.title = \"The Rain in Spain, which made me want to cry with joy\";\n```", "```js\nif (anotherNote instanceof Note) {\n    ... it's a Note, so act on it as a Note\n}\n```", "```js\nclass LoveNote extends Note {\n    constructor(key, title, body, heart) {\n        super(key, title, body);\n        this._heart = heart;\n    }\n    get heart() { return this._heart; }\n    set heart(newHeart) { return this._heart = newHeart; }\n}\n```", "```js\nconst EventEmitter = require('events');\n\nclass Pulser extends EventEmitter {\n    start() {\n        setInterval(() => {\n            console.log(`${new Date().toISOString()} >>>> pulse`);\n            this.emit('pulse');\n            console.log(`${new Date().toISOString()} <<<< pulse`);\n        }, 1000);\n    }\n}\nmodule.exports = Pulser;\n```", "```js\nclass Pulser extends EventEmitter {\n    start() {\n        var self = this;\n        setInterval(function() {\n            self.emit(...);\n        });\n    }\n}\n```", "```js\nclass HeartBeat extends EventEmitter {}\nconst beatMaker = new HeartBeat();\n```", "```js\nconst Pulser = require('./pulser');\n\n// Instantiate a Pulser object\nconst pulser = new Pulser();\n// Handler function\npulser.on('pulse', () => {\n    console.log(`${new Date().toISOString()} pulse received`);\n});\n// Start it pulsing\npulser.start(); \n```", "```js\n$ node pulsed.js \n2017-12-03T06:24:10.272Z >>>> pulse\n2017-12-03T06:24:10.275Z pulse received\n2017-12-03T06:24:10.276Z <<<< pulse\n2017-12-03T06:24:11.279Z >>>> pulse\n2017-12-03T06:24:11.279Z pulse received\n2017-12-03T06:24:11.279Z <<<< pulse\n2017-12-03T06:24:12.281Z >>>> pulse\n2017-12-03T06:24:12.281Z pulse received\n2017-12-03T06:24:12.282Z <<<< pulse\n```", "```js\nthis.emit('eventName', data1, data2, ..); \n```", "```js\nemitter.on('eventName', (data1, data2, ...theArgs) => { \n  // act on event \n}); \n```", "```js\nconst http = require('http'); \nhttp.createServer((req, res) => { \n  res.writeHead(200, {'Content-Type': 'text/plain'}); \n  res.end('Hello, World!\\n'); \n}).listen(8124, '127.0.0.1'); \nconsole.log('Server running at http://127.0.0.1:8124'); \n```", "```js\nconst http = require('http'); \nconst server = http.createServer(); \nserver.on('request',  (req, res) => { \n  res.writeHead(200, {'Content-Type': 'text/plain'}); \n  res.end('Hello, World!\\n'); \n}); \nserver.listen(8124, '127.0.0.1'); \nconsole.log('Server running at http://127.0.0.1:8124'); \n```", "```js\nconst http = require('http'); \nconst util = require('util'); \nconst url  = require('url'); \nconst os   = require('os'); \n\nconst server = http.createServer(); \nserver.on('request', (req, res) => { \n    var requrl = url.parse(req.url, true); \n    if (requrl.pathname === '/') { \n        res.writeHead(200, {'Content-Type': 'text/html'}); \n        res.end( \n`<html><head><title>Hello, world!</title></head> \n<body><h1>Hello, world!</h1> \n<p><a href='/osinfo'>OS Info</a></p> \n</body></html>`); \n    } else if (requrl.pathname === \"/osinfo\") { \n        res.writeHead(200, {'Content-Type': 'text/html'}); \n        res.end( \n`<html><head><title>Operating System Info</title></head> \n<body><h1>Operating System Info</h1> \n<table> \n<tr><th>TMP Dir</th><td>${os.tmpdir()}</td></tr> \n<tr><th>Host Name</th><td>${os.hostname()}</td></tr> \n<tr><th>OS Type</th><td>${os.type()} ${os.platform()} ${os.arch()} ${os.release()}</td></tr> \n<tr><th>Uptime</th><td>${os.uptime()} ${util.inspect(os.loadavg())}</td></tr> \n<tr><th>Memory</th><td>total: ${os.totalmem()} free: ${os.freemem()}</td></tr> \n<tr><th>CPU's</th><td><pre>${util.inspect(os.cpus())}</pre></td></tr> \n<tr><th>Network</th><td><pre>${util.inspect(os.networkInterfaces())}</pre></td></tr> \n</table> \n</body></html>`); \n    } else { \n        res.writeHead(404, {'Content-Type': 'text/plain'}); \n        res.end(\"bad URL \"+ req.url); \n    } \n}); \n\nserver.listen(8124); \nconsole.log('listening to http://localhost:8124'); \n```", "```js\n$ node server.js\nlistening to http://localhost:8124\n```", "```js\n`template string text` \n```", "```js\n[\"<html><head><title>Hello, world!</title></head>\", \n \"<body><h1>Hello, world!</h1>\", \n \"<p><a href='/osinfo'>OS Info</a></p>\", \n \"</body></html>\"] \n.join('\\n') \n```", "```js\n`<html><head><title>Hello, world!</title></head> \n<body><h1>Hello, world!</h1> \n<p><a href='/osinfo'>OS Info</a></p> \n</body></html>`\n```", "```js\n[ ... \n  \"<tr><th>OS Type</th><td>{ostype} {osplat} {osarch} {osrelease}</td></tr>\" \n  ... ].join('\\n') \n.replace(\"{ostype}\", os.type()) \n.replace(\"{osplat}\", os.platform()) \n.replace(\"{osarch}\", os.arch()) \n.replace(\"{osrelease}\", os.release()) \n```", "```js\n`...<tr><th>OS Type</th><td>${os.type()} ${os.platform()} ${os.arch()} ${os.release()}</td></tr>...` \n```", "```js\nconst util = require('util'); \nconst url  = require('url'); \n\nconst timestamp = () => { return new Date().toISOString(); }\n\nexports.sniffOn = function(server) { \n  server.on('request', (req, res) => { \n    console.log(`${timestamp()} e_request`); \n    console.log(`${timestamp()} ${reqToString(req)}`); \n  }); \n  server.on('close', errno => { console.log(`${timestamp()} e_close \n  ${errno}`); }); \n  server.on('checkContinue', (req, res) => { \n    console.log(`${timestamp()} e_checkContinue`); \n    console.log(`${timestamp()} ${reqToString(req)}`); \n    res.writeContinue(); \n  }); \n  server.on('upgrade', (req, socket, head) => { \n    console.log(`${timestamp()} e_upgrade`); \n    console.log(`${timestamp()} ${reqToString(req)}`);\n  }); \n  server.on('clientError', () => { console.log(`${timestamp()} \n  e_clientError`); }); \n}; \n\nconst reqToString = exports.reqToString = (req) => { \n  var ret=`req ${req.method} ${req.httpVersion} ${req.url}` +'\\n'; \n  ret += JSON.stringify(url.parse(req.url, true)) +'\\n'; \n  var keys = Object.keys(req.headers); \n  for (var i = 0, l = keys.length; i < l; i++) { \n    var key = keys[i]; \n    ret += `${i} ${key}: ${req.headers[key]}` +'\\n'; \n  } \n  if (req.trailers) ret += util.inspect(req.trailers) +'\\n'; \n  return ret; \n}; \n```", "```js\nrequire('./httpsniffer').sniffOn(server); \nserver.listen(8124); \nconsole.log('listening to http://localhost:8124'); \n```", "```js\n$ node server.js \nlistening to http://localhost:8124\n2017-12-03T19:21:33.162Z request\n2017-12-03T19:21:33.162Z request GET 1.1 /\n{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"\",\"query\":{},\"pathname\":\"/\",\"path\":\"/\",\"href\":\"/\"}\n0 host: localhost:8124\n1 upgrade-insecure-requests: 1\n2 accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n3 user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/604.3.5 (KHTML, like Gecko) Version/11.0.1 Safari/604.3.5\n4 accept-language: en-us\n5 accept-encoding: gzip, deflate\n6 connection: keep-alive\n{}\n\n2017-12-03T19:21:42.154Z request\n2017-12-03T19:21:42.154Z request GET 1.1 /osinfo\n{\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"\",\"query\":{},\"pathname\":\"/osinfo\",\"path\":\"/osinfo\",\"href\":\"/osinfo\"}\n0 host: localhost:8124\n1 connection: keep-alive\n2 upgrade-insecure-requests: 1\n3 accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n4 user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/604.3.5 (KHTML, like Gecko) Version/11.0.1 Safari/604.3.5\n5 referer: http://localhost:8124/\n6 accept-language: en-us\n7 accept-encoding: gzip, deflate\n{}\n```", "```js\n$ mkdir fibonacci\n$ cd fibonacci\n$ npm install express-generator@4.x  \n```", "```js\n$ ls node_modules/.bin/\nexpress \n```", "```js\n$ ./node_modules/.bin/express --help\n\n  Usage: express [options] [dir]\n\n  Options:\n\n    -h, --help          output usage information\n    -V, --version       output the version number\n    -e, --ejs           add ejs engine support (defaults to jade)\n        --hbs           add handlebars engine support\n    -H, --hogan         add hogan.js engine support\n    -c, --css <engine>  add stylesheet <engine> support \n (less|stylus|compass|sass) (defaults to plain css)\n        --git           add .gitignore\n    -f, --force         force on non-empty directory \n```", "```js\n$ ./node_modules/.bin/express --view=hbs --git . \ndestination is not empty, continue? [y/N] y \n\n create : . \n create : ./package.json \n create : ./app.js \n create : ./.gitignore \n create : ./public \n create : ./routes \n create : ./routes/index.js \n create : ./routes/users.js \n create : ./views \n create : ./views/index.hbs \n create : ./views/layout.hbs \n create : ./views/error.hbs \n create : ./bin \n create : ./bin/www \n create : ./public/javascripts \n create : ./public/images \n create : ./public/stylesheets \n create : ./public/stylesheets/style.css \n\n install dependencies: \n $ cd . && npm install \n\n run the app: \n $ DEBUG=fibonacci:* npm start \n\n $ npm uninstall express-generator \n added 83 packages and removed 5 packages in 4.104s\n\n```", "```js\n\"scripts\": { \n    \"start\": \"node ./bin/www\" \n}, \n```", "```js\n$ npm install\n$ DEBUG=fibonacci:* npm start\n\n> fibonacci@0.0.0 start /Users/David/chap04/fibonacci\n> node ./bin/www\n\n fibonacci:server Listening on port 3000 +0ms\n```", "```js\n\"scripts\": { \n    \"start\": \"DEBUG=fibonacci:* node ./bin/www\" \n},\n```", "```js\n\"scripts\": { \n    \"start\": \"cross-env DEBUG=fibonacci:* node ./bin/www\" \n}, \n\"dependencies\": {\n    ...\n    \"cross-env\": \"5.1.x\"\n}\n```", "```js\nC:\\Users\\david\\Documents\\chap04\\fibonacci>npm install\n... output from installing packages\nC:\\Users\\david\\Documents\\chap04\\fibonacci>npm run start\n\n> fibonacci@0.0.0 start C:\\Users\\david\\Documents\\chap04\\fibonacci\n> cross-env DEBUG=fibonacci:* node ./bin/www\n\nfibonacci:server Listening on port 3000 +0ms\nGET / 304 90.597 ms - -\nGET /stylesheets/style.css 304 14.480 ms - -\nGET /fibonacci 200 84.726 ms - 503\nGET /stylesheets/style.css 304 4.465 ms - -\nGET /fibonacci?fibonum=22 500 1069.049 ms - 327\nGET /stylesheets/style.css 304 2.601 ms - -\n```", "```js\nvar express = require('express'); \n... \nvar app = express(); \n... \nmodule.exports = app; \n```", "```js\n#!/usr/bin/env node\n```", "```js\n$ ls -l bin/www\n-rwx------  1 david  staff  1595 Feb  5  1970 bin/www\n```", "```js\nvar app = require('../app'); \n... \nvar port = normalizePort(process.env.PORT || '3000'); \napp.set('port', port); \n... \nvar server = http.createServer(app); \n... \nserver.listen(port); \nserver.on('error', onError); \nserver.on('listening', onListening); \n```", "```js\n$ PORT=4242 DEBUG=fibonacci:* npm start\n```", "```js\napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'hbs');\n```", "```js\napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \n\napp.use('/', routes); \napp.use('/users', users); \n```", "```js\napp.use(function(req, res, next) { \n  var err = new Error('Not found'); \n  err.status = 404; \n  next(err); \n}); \n```", "```js\napp.get('/', function(req, res) { res.send('Hello World!'); }); \n```", "```js\napp.use('/user/profile/:id', function(req, res, next) { \n    userProfiles.lookup(req.params.id, (err, profile) => { \n          if (err) return next(err); \n          // do something with the profile \n          // Such as display it to the user \n          res.send(profile.display()); \n    }); \n}); \n```", "```js\nvar express = require('express'); \nvar router = express.Router(); \nrouter.get('/', function(req, res, next) { \n  res.send('respond with a resource'); \n}); \nmodule.exports = router; \n```", "```js\napp.use('/users', users); \n```", "```js\napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n```", "```js\nconst express = require('express');\nconst hbs = require('hbs');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\n\nconst index = require('./routes/index');\nconst fibonacci = require('./routes/fibonacci');\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\nhbs.registerPartials(path.join(__dirname, 'partials'));\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/fibonacci', fibonacci);\n```", "```js\nexports.fibonacci = function(n) {\n    if (n === 0) return 0;\n    else if (n === 1 || n === 2) return 1;\n    else return exports.fibonacci(n-1) + exports.fibonacci(n-2);\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>{{title}}</title>\n    <link rel='stylesheet' href='/stylesheets/style.css' />\n  </head>\n  <body>\n    {{{body}}}\n  </body>\n</html>\n```", "```js\n<h1>{{title}}</h1>\n{{> navbar}}\n```", "```js\n<div class='navbar'>\n<p><a href='/'>home</a> | <a href='/fibonacci'>Fibonacci's</a></p>\n</div>\n```", "```js\n<h1>{{title}}</h1>\n{{> navbar}}\n{{#if fiboval}}\n  <p>Fibonacci for {{fibonum}} is {{fiboval}}</p>\n  <hr/>\n{{/if}}\n<p>Enter a number to see its' Fibonacci number</p>\n<form name='fibonacci' action='/fibonacci' method='get'>\n<input type='text' name='fibonum' />\n<input type='submit' value='Submit' />\n</form>\n```", "```js\n/* GET home page. */ \nrouter.get('/', function(req, res, next) { \n  res.render('index', { title: \"Welcome to the Fibonacci Calculator\" }); \n}); \n```", "```js\nconst express = require('express'); \nconst router = express.Router(); \n\nconst math = require('../math'); \nrouter.get('/', function(req, res, next) { \n  if (req.query.fibonum) { \n    // Calculate directly in this server \n    res.render('fibonacci', { \n      title: \"Calculate Fibonacci numbers\", \n      fibonum: req.query.fibonum, \n      fiboval: math.fibonacci(req.query.fibonum) \n    }); \n  } else { \n    res.render('fibonacci', { \n      title: \"Calculate Fibonacci numbers\", \n      fiboval: undefined \n    }); \n  } \n}); \n\nmodule.exports = router; \n```", "```js\n$ npm start\n\n> fibonacci@0.0.0 start /Users/david/chap04/fibonacci\n> DEBUG=fibonacci:* node ./bin/www\n\nfibonacci:server Listening on port 3000 +0ms \n```", "```js\nconst math = require('./math'); \nconst util = require('util'); \n\nfor (var num = 1; num < 80; num++) {\n    let now = new Date().toISOString();\n    console.log(`${now} Fibonacci for ${num} = ${math.fibonacci(num)}`);\n} \n```", "```js\n$ node fibotimes.js \n2017-12-10T23:04:42.342Z Fibonacci for 1 = 1\n2017-12-10T23:04:42.345Z Fibonacci for 2 = 1\n2017-12-10T23:04:42.345Z Fibonacci for 3 = 2\n2017-12-10T23:04:42.345Z Fibonacci for 4 = 3\n2017-12-10T23:04:42.345Z Fibonacci for 5 = 5\n...\n2017-12-10T23:04:42.345Z Fibonacci for 10 = 55\n2017-12-10T23:04:42.345Z Fibonacci for 11 = 89\n2017-12-10T23:04:42.345Z Fibonacci for 12 = 144\n2017-12-10T23:04:42.345Z Fibonacci for 13 = 233\n2017-12-10T23:04:42.345Z Fibonacci for 14 = 377\n...\n2017-12-10T23:04:44.072Z Fibonacci for 40 = 102334155\n2017-12-10T23:04:45.118Z Fibonacci for 41 = 165580141\n2017-12-10T23:04:46.855Z Fibonacci for 42 = 267914296\n2017-12-10T23:04:49.723Z Fibonacci for 43 = 433494437\n2017-12-10T23:04:54.218Z Fibonacci for 44 = 701408733\n...\n2017-12-10T23:06:07.531Z Fibonacci for 48 = 4807526976\n2017-12-10T23:07:08.056Z Fibonacci for 49 = 7778742049\n^C\n```", "```js\nexports.fibonacciLoop = function(n) { \n    var fibos = []; \n    fibos[0] = 0; \n    fibos[1] = 1; \n    fibos[2] = 1; \n    for (var i = 3; i <= n; i++) { \n        fibos[i] = fibos[i-2] + fibos[i-1]; \n    } \n    return fibos[n]; \n} \n```", "```js\nfor (var num = 1; num < 8000; num++) {\n    let now = new Date().toISOString();\n    console.log(`${now} Fibonacci for ${num} = ${math.fibonacciLoop(num)}`);\n}\n```", "```js\nexports.fibonacciAsync = function(n, done) {\n    if (n === 0) done(undefined, 0);\n    else if (n === 1 || n === 2) done(undefined, 1);\n    else {\n        setImmediate(() => {\n            exports.fibonacciAsync(n-1, (err, val1) => {\n                if (err) done(err);\n                else setImmediate(() => {\n                    exports.fibonacciAsync(n-2, (err, val2) => {\n                        if (err) done(err);\n                        else done(undefined, val1+val2);\n                    });\n                });\n            });\n        });\n    }\n};\n```", "```js\nconst math = require('./math');\nconst util = require('util');\n\n(async () => {\n   for (var num = 1; num < 8000; num++) {\n       await new Promise((resolve, reject) => {\n           math.fibonacciAsync(num, (err, fibo) => {\n               if (err) reject(err);\n               else {\n                   let now = new Date().toISOString();\n                   console.log(`${now} Fibonacci for ${num} = \n                   ${fibo}`);\n                   resolve();\n               }\n           })\n       })\n    }\n})().catch(err => { console.error(err); });\n```", "```js\nconst express = require('express');\nconst router = express.Router();\n\nconst math = require('../math');\n\nrouter.get('/', function(req, res, next) {\n  if (req.query.fibonum) {\n    // Calculate using async-aware function, in this server\n    math.fibonacciAsync(req.query.fibonum, (err, fiboval) => {\n      res.render('fibonacci', {\n        title: \"Calculate Fibonacci numbers\",\n        fibonum: req.query.fibonum,\n        fiboval: fiboval\n      });\n    });\n  } else {\n    res.render('fibonacci', {\n      title: \"Calculate Fibonacci numbers\",\n      fiboval: undefined\n    });\n  }\n});\n\nmodule.exports = router;\n```", "```js\n// const fibonacci = require('./routes/fibonacci');\nconst fibonacci = require('./routes/fibonacci-async1');\n```", "```js\nconst http = require('http');\nconst url = require('url');\nconst util = require('util');\n\nconst argUrl = process.argv[2];\nconst parsedUrl = url.parse(argUrl, true);\n\n// The options object is passed to http.request\n// telling it the URL to retrieve\nconst options = {\n  host: parsedUrl.hostname,\n  port: parsedUrl.port,\n  path: parsedUrl.pathname,\n  method: 'GET'\n};\n\nif (parsedUrl.search) options.path += \"?\"+parsedUrl.search;\n\nconst req = http.request(options);\n// Invoked when the request is finished\nreq.on('response', res => {\n  console.log('STATUS: ' + res.statusCode);\n  console.log('HEADERS: ' + util.inspect(res.headers));\n  res.setEncoding('utf8');\n  res.on('data', chunk => { console.log('BODY: ' + chunk); });\n  res.on('error', err => { console.log('RESPONSE ERROR: ' + err); });\n});\n// Invoked on errors\nreq.on('error', err => { console.log('REQUEST ERROR: ' + err); });\nreq.end();\n```", "```js\n$ node wget.js http://example.com\nSTATUS: 200\nHEADERS: { 'accept-ranges': 'bytes',\n 'cache-control': 'max-age=604800',\n 'content-type': 'text/html',\n date: 'Sun, 10 Dec 2017 23:40:44 GMT',\n etag: '\"359670651\"',\n expires: 'Sun, 17 Dec 2017 23:40:44 GMT',\n 'last-modified': 'Fri, 09 Aug 2013 23:54:35 GMT',\n server: 'ECS (rhv/81A7)',\n vary: 'Accept-Encoding',\n 'x-cache': 'HIT',\n 'content-length': '1270',\n connection: 'close' }\nBODY: <!doctype html>\n<html>\n...\n```", "```js\nvar http = require('http'); \nvar options = { \n  host: 'example.com', \n  port: 80, \n  path: null, \n  method: 'GET' \n}; \nvar request = http.request(options); \nrequest.on('response', response => {\n  ...\n});\n```", "```js\nvar options = { \n  headers: { 'Cookie': '.. cookie value' } \n}; \n```", "```js\nconst math  = require('./math'); \nconst express = require('express'); \nconst logger = require('morgan'); \nconst app = express(); \napp.use(logger('dev')); \napp.get('/fibonacci/:n', (req, res, next) => { \n    math.fibonacciAsync(Math.floor(req.params.n), (err, val) => { \n        if (err) next('FIBO SERVER ERROR ' + err); \n        else res.send({ n: req.params.n, result: val });\n    }); \n}); \napp.listen(process.env.SERVERPORT); \n```", "```js\n\"server\": \"SERVERPORT=3002 node ./fiboserver\" \n```", "```js\n$ npm run server\n> fibonacci@0.0.0 server /Users/David/chap04/fibonacci\n> SERVERPORT=3002 node ./fiboserver \n```", "```js\n$ curl -f http://localhost:3002/fibonacci/10\n{\"n\":\"10\",\"result\":55}\n$ curl -f http://localhost:3002/fibonacci/11\n{\"n\":\"11\",\"result\":89}\n$ curl -f http://localhost:3002/fibonacci/12\n{\"n\":\"12\",\"result\":144}  \n```", "```js\n$ npm run server\n\n> fibonacci@0.0.0 server /Users/David/chap04/fibonacci\n> SERVERPORT=3002 node ./fiboserver \n\nGET /fibonacci/10 200 0.393 ms - 22\nGET /fibonacci/11 200 0.647 ms - 22\nGET /fibonacci/12 200 0.772 ms - 23\n```", "```js\nconst http = require('http');\n[\n  \"/fibonacci/30\", \"/fibonacci/20\", \"/fibonacci/10\",\n  \"/fibonacci/9\", \"/fibonacci/8\", \"/fibonacci/7\",\n  \"/fibonacci/6\", \"/fibonacci/5\", \"/fibonacci/4\",\n  \"/fibonacci/3\", \"/fibonacci/2\", \"/fibonacci/1\"\n].forEach(path => {\n    console.log(`${new Date().toISOString()} requesting ${path}`);\n    var req = http.request({\n      host: \"localhost\",\n      port: process.env.SERVERPORT,\n      path: path,\n      method: 'GET'\n    }, res => {\n      res.on('data', chunk => {\n          console.log(`${new Date().toISOString()} BODY: ${chunk}`);\n      });\n    });\n    req.end();\n});\n```", "```js\n\"scripts\": {\n  \"start\": \"node ./bin/www\",\n  \"server\": \"SERVERPORT=3002 node ./fiboserver\" ,\n  \"client\": \"SERVERPORT=3002 node ./fiboclient\" \n}\n```", "```js\n$ npm run client\n\n> fibonacci@0.0.0 client /Users/David/chap04/fibonacci\n> SERVERPORT=3002 node ./fiboclient\n\n2017-12-11T00:41:14.857Z requesting /fibonacci/30\n2017-12-11T00:41:14.864Z requesting /fibonacci/20\n2017-12-11T00:41:14.865Z requesting /fibonacci/10\n2017-12-11T00:41:14.865Z requesting /fibonacci/9\n2017-12-11T00:41:14.866Z requesting /fibonacci/8\n2017-12-11T00:41:14.866Z requesting /fibonacci/7\n2017-12-11T00:41:14.866Z requesting /fibonacci/6\n2017-12-11T00:41:14.866Z requesting /fibonacci/5\n2017-12-11T00:41:14.866Z requesting /fibonacci/4\n2017-12-11T00:41:14.866Z requesting /fibonacci/3\n2017-12-11T00:41:14.867Z requesting /fibonacci/2\n2017-12-11T00:41:14.867Z requesting /fibonacci/1\n2017-12-11T00:41:14.884Z BODY: {\"n\":\"9\",\"result\":34}\n2017-12-11T00:41:14.886Z BODY: {\"n\":\"10\",\"result\":55}\n2017-12-11T00:41:14.891Z BODY: {\"n\":\"6\",\"result\":8}\n2017-12-11T00:41:14.892Z BODY: {\"n\":\"7\",\"result\":13}\n2017-12-11T00:41:14.893Z BODY: {\"n\":\"8\",\"result\":21}\n2017-12-11T00:41:14.903Z BODY: {\"n\":\"3\",\"result\":2}\n2017-12-11T00:41:14.904Z BODY: {\"n\":\"4\",\"result\":3}\n2017-12-11T00:41:14.905Z BODY: {\"n\":\"5\",\"result\":5}\n2017-12-11T00:41:14.910Z BODY: {\"n\":\"2\",\"result\":1}\n2017-12-11T00:41:14.911Z BODY: {\"n\":\"1\",\"result\":1}\n2017-12-11T00:41:14.940Z BODY: {\"n\":\"20\",\"result\":6765}\n2017-12-11T00:41:18.200Z BODY: {\"n\":\"30\",\"result\":832040}\n```", "```js\nconst express = require('express');\nconst router = express.Router();\nconst http = require('http');\nconst math = require('../math');\n\nrouter.get('/', function(req, res, next) {\n  if (req.query.fibonum) {\n    var httpreq = http.request({ \n      host: \"localhost\", \n      port: process.env.SERVERPORT, \n      path: \"/fibonacci/\"+Math.floor(req.query.fibonum), \n      method: 'GET' \n    });\n    httpreq.on('response', response => {\n      response.on('data', chunk => { \n        var data = JSON.parse(chunk); \n        res.render('fibonacci', { \n          title: \"Calculate Fibonacci numbers\", \n          fibonum: req.query.fibonum, \n          fiboval: data.result \n        }); \n      }); \n      response.on('error', err => { next(err); }); \n    });\n    httpreq.on('error', err => { next(err); }); \n    httpreq.end(); \n  } else {\n    res.render('fibonacci', {\n      title: \"Calculate Fibonacci numbers\",\n      fiboval: undefined\n    });\n  }\n});\n\nmodule.exports = router;\n```", "```js\nconst index = require('./routes/index');\n// const fibonacci = require('./routes/fibonacci');\n// const fibonacci = require('./routes/fibonacci-async1');\n// const fibonacci = require('./routes/fibonacci-await');\nconst fibonacci = require('./routes/fibonacci-rest');\n```", "```js\n\"scripts\": {\n  \"start\": \"DEBUG=fibonacci:* node ./bin/www\",\n  \"startrest\": \"DEBUG=fibonacci:* SERVERPORT=3002 node ./bin/www\",\n  \"server\": \"DEBUG=fibonacci:* SERVERPORT=3002 node ./fiboserver\" ,\n  \"client\": \"DEBUG=fibonacci:* SERVERPORT=3002 node ./fiboclient\" \n},\n```", "```js\n$ npm run server\n\n> fibonacci@0.0.0 server /Users/David/chap04/fibonacci\n> DEBUG=fibonacci:* SERVERPORT=3002 node ./fiboserver\n\nGET /fibonacci/34 200 21124.036 ms - 27\nGET /fibonacci/12 200 1.578 ms - 23\nGET /fibonacci/16 200 6.600 ms - 23\nGET /fibonacci/20 200 33.980 ms - 24\nGET /fibonacci/28 200 1257.514 ms - 26\n```", "```js\n$ npm run startrest\n\n> fibonacci@0.0.0 startrest /Users/David/chap04/fibonacci\n> DEBUG=fibonacci:* SERVERPORT=3002 node ./bin/www\n\n fibonacci:server Listening on port 3000 +0ms\nGET /fibonacci?fibonum=34 200 21317.792 ms - 548\nGET /stylesheets/style.css 304 20.952 ms - -\nGET /fibonacci?fibonum=12 304 109.516 ms - -\nGET /stylesheets/style.css 304 0.465 ms - -\nGET /fibonacci?fibonum=16 200 83.067 ms - 544\nGET /stylesheets/style.css 304 0.900 ms - -\nGET /fibonacci?fibonum=20 200 221.842 ms - 545\nGET /stylesheets/style.css 304 0.778 ms - -\nGET /fibonacci?fibonum=28 200 1428.292 ms - 547\nGET /stylesheets/style.css 304 19.083 ms - -\n\n```", "```js\n\"server\": \"SERVERPORT=3002 node ./fiboserver --max_old_space_size 5000\",\n```"]