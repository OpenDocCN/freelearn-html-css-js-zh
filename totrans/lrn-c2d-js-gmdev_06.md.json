["```js\ncc.game.onStart = function(){\n  var screenSize = cc.view.getFrameSize();\n  cc.view.setDesignResolutionSize(480, 320, cc.ResolutionPolicy.SHOW_ALL);\n  cc.LoaderScene.preload(gameResources, function () {\n    cc.director.runScene(new gameScene());\n  }, this);\n};\ncc.game.run();\n```", "```js\nvar gameResources = [\n  \"assets/bomb.png\",\n  \"assets/cart.png\",\n  \"assets/strawberry.png\",\n  \"assets/leftbutton.png\",\n  \"assets/rightbutton.png\"\n];\n```", "```js\nvar itemsLayer;\nvar cart;\n```", "```js\nvar gameScene = cc.Scene.extend({\n  onEnter:function () {\n    this._super();\n    gameLayer = new game();\n    gameLayer.init();\n    this.addChild(gameLayer);\n  }\n});\n```", "```js\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var backgroundLayer = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n    this.addChild(backgroundLayer);\n    itemsLayer = cc.Layer.create()\n    this.addChild(itemsLayer)\n    topLayer = cc.Layer.create()\n    this.addChild(topLayer)\n    cart = cc.Sprite.create(\"assets/cart.png\");\n    topLayer.addChild(cart,0);\n    cart.setPosition(240,24);\n    this.schedule(this.addItem,1);\n  },\n  addItem:function(){\n    var item = new Item();\n    itemsLayer.addChild(item,1);\n  },\n  removeItem:function(item){\n    itemsLayer.removeChild(item);\n  }\n});\n```", "```js\nvar Item = cc.Sprite.extend({\n  ctor:function() {\n    this._super();\n    if(Math.random()<0.5){\n      this.initWithFile(\"assets/bomb.png\");\n      this.isBomb=true;\n    }\n    else{\n      this.initWithFile(\"assets/strawberry.png\");\n      this.isBomb=false;\n    }\n  },\n  onEnter:function() {\n    this._super();\n    this.setPosition(Math.random()*400+40,350);\n    var moveAction = cc.MoveTo.create(8, new cc.Point(Math.random()*400+40,-50));\n    this.runAction(moveAction);\n    this.scheduleUpdate();\n  },\n  update:function(dt){\n    if(this.getPosition().y<35 && this.getPosition().y>30 && Math.abs(this.getPosition().x-cart.getPosition().x)<10 && !this.isBomb){\n      gameLayer.removeItem(this);\n      console.log(\"FRUIT\");\n    }\n    if(this.getPosition().y<35 && Math.abs(this.getPosition().x-cart.getPosition().x)<25 && this.isBomb){\n      gameLayer.removeItem(this);\n      console.log(\"BOMB\");\n    }\n    if(this.getPosition().y<-30){\n      gameLayer.removeItem(this)\n    }\n  }\n});\n```", "```js\nctor:function() {\n  this._super();\n  if(Math.random()<0.5){\n    this.initWithFile(\"assets/bomb.png\");\n    this.isBomb=true;\n  }\n  else{\n    this.initWithFile(\"assets/strawberry.png\");\n    this.isBomb=false;\n  }\n}\n```", "```js\nonEnter:function() {\n  this._super();\n  this.setPosition(Math.random()*400+40,350);\n  var moveAction = cc.MoveTo.create(8, new cc.Point(Math.random()*400+40,-50));\n  this.runAction(moveAction);\n  this.scheduleUpdate();\n}\n```", "```js\nupdate:function(dt){\n  if(this.getPosition().y<35 && this.getPosition().y>30 && Math.abs(this.getPosition().x-cart.getPosition().x)<10 && !this.isBomb){\n    gameLayer.removeItem(this);\n    console.log(\"FRUIT\");\n  }\n  if(this.getPosition().y<35 && Math.abs(this.getPosition().x-cart.getPosition().x)<25 && this.isBomb){\n    gameLayer.removeItem(this);\n    console.log(\"BOMB\");\n  }\n  if(this.getPosition().y<-30){\n    gameLayer.removeItem(this)\n  }\n}\n```", "```js\nvar itemsLayer;\nvar cart;\nvar xSpeed = 0;\nvar left;\nvar right;\n\n```", "```js\ninit:function () {\n  this._super();\n  var backgroundLayer = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n  this.addChild(backgroundLayer);\n  itemsLayer = cc.Layer.create()\n  this.addChild(itemsLayer)\n  topLayer = cc.Layer.create()\n  this.addChild(topLayer)\n  cart = cc.Sprite.create(\"assets/cart.png\");\n  topLayer.addChild(cart,0);\n  cart.setPosition(240,24);\n  left = cc.Sprite.create(\"assets/leftbutton.png\");\n topLayer.addChild(left,0);\n left.setPosition(40,160)\n left.setOpacity(128)\n right = cc.Sprite.create(\"assets/rightbutton.png\");\n topLayer.addChild(right,0);\n right.setPosition(440,160);\n right.setOpacity(128)\n this.schedule(this.addItem,1);\n cc.eventManager.addListener(touchListener, this);\n this.scheduleUpdate();\n}\n```", "```js\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    if(touch.getLocation().x < 240){\n      xSpeed = -2;\n      left.setOpacity(255);\n      right.setOpacity(128);\n    }\n    else{\n      xSpeed = 2;\n      right.setOpacity(255);\n      left.setOpacity(128);\n    }\n    return true;\n  },\n  onTouchEnded:function (touch, event) {\n    xSpeed = 0;\n    left.setOpacity(128);\n    right.setOpacity(128);\n  }\n})\n```", "```js\nonTouchBegan: function (touch, event) {\n  if(touch.getLocation().x < 240){\n    xSpeed = -2;\n    left.setOpacity(255);\n    right.setOpacity(128);\n  }\n  else{\n    xSpeed = 2;\n    right.setOpacity(255);\n    left.setOpacity(128);\n  }\n  return true;\n}\n```", "```js\nonTouchEnded:function (touch, event) {\n  xSpeed = 0;\n  left.setOpacity(128);\n  right.setOpacity(128);\n}\n```", "```js\nupdate:function(dt){\n  if(xSpeed>0){\n    cart.setFlippedX(true);\n  }\n  if(xSpeed<0){\n    cart.setFlippedX(false);\n  }\n  cart.setPosition(cart.getPosition().x+xSpeed,cart.getPosition().y);\n}\n```", "```js\nvar gameResources = [\n  \"assets/bomb.png\",\n  \"assets/cart.png\",\n  \"assets/strawberry.png\",\n  \"assets/touchorigin.png\",\n  \"assets/touchend.png\"\n];\n```", "```js\nvar itemsLayer;\nvar cart;\nvar xSpeed = 0;\nvar touchOrigin;\nvar touching = false;\nvar touchEnd;\n\n```", "```js\ninit:function () {\n  this._super();\n  var backgroundLayer = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n  this.addChild(backgroundLayer);\n  itemsLayer = cc.Layer.create()\n  this.addChild(itemsLayer)\n  topLayer = cc.Layer.create()\n  this.addChild(topLayer)\n  cart = cc.Sprite.create(\"assets/cart.png\");\n  topLayer.addChild(cart,0);\n  cart.setPosition(240,24);\n  this.schedule(this.addItem,1);\n  cc.eventManager.addListener(touchListener, this);\n  this.scheduleUpdate();\n}\n```", "```js\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    touchOrigin = cc.Sprite.create(\"assets/touchorigin.png\");\n    topLayer.addChild(touchOrigin,0);\n    touchOrigin.setPosition(touch.getLocation().x,touch.getLocation().y);\n    touchEnd = cc.Sprite.create(\"assets/touchend.png\");\n    topLayer.addChild(touchEnd,0);\n    touchEnd.setPosition(touch.getLocation().x,touch.getLocation().y);\n    touching = true;\n    return true;\n  },\n  onTouchMoved: function (touch, event) {\n    touchEnd.setPosition(touch.getLocation().x,touchEnd.getPosition().y);\n  },\n  onTouchEnded:function (touch, event) {\n    touching = false;\n    topLayer.removeChild(touchOrigin);\n    topLayer.removeChild(touchEnd);\n  }\n})\n```", "```js\nupdate:function(dt){\n  if(touching){\n    xSpeed = (touchEnd.getPosition().x-touchOrigin.getPosition().x)/50;\n    if(xSpeed>0){\n      cart.setFlippedX(true);\n    }\n    if(xSpeed<0){\n      cart.setFlippedX(false);\n    }\n    cart.setPosition(cart.getPosition().x+xSpeed,cart.getPosition().y);\n  }\n}\n```", "```js\nvar gameResources = [\n\"assets/bomb.png\",\n\"assets/cart.png\",\n\"assets/strawberry.png\"\n];\n```", "```js\nvar itemsLayer;\nvar xSpeed = 0;\nvar cart;\nvar detectedX;\nvar savedX;\nvar touching=false;\n```", "```js\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    touching = true;\n    detectedX = touch.getLocation().x;\n    savedX = detectedX\n    return true;\n  },\n  onTouchMoved: function (touch, event) {\n    detectedX = touch.getLocation().x;\n  },\n  onTouchEnded:function (touch, event) {\n    touching = false;\n  }\n})\n```", "```js\nupdate:function(dt){\n  if(touching){\n    var deltaX = savedX - detectedX\n    if(deltaX>0){\n      xSpeed = -2;\n    }\n    if(deltaX<0){\n      xSpeed = 2;\n    }\n    savedX = detectedX;\n    if(xSpeed>0){\n      cart.setFlippedX(true);\n    }\n    if(xSpeed<0){\n      cart.setFlippedX(false);\n    }\n    cart.setPosition(cart.getPosition().x+xSpeed,cart.getPosition().y);\n  }\n}\n```"]