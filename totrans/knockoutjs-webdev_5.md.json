["```js\nvar mySeminar = {\n  guest1 : { name: \"Pete\", seating: \"standard\" },\n  guest2 : { name: \"Re-Pete\", seating: \"balcony\" },\n  conference : {\n    name: \"KnockOut 2K\",\n    byLine: \"MVVM That Works\"\n  }, speakers : [\n    { id: 1, name: \"John Doe\", bio: 'This is the bio for John.',\n      skills: [ \"jQuery\",\"KnockoutJS\",\"SammyJS\",\"NodeJS\" ] },\n    { id: 2, name: \"Mary Smith\", bio: 'This is the bio for Mary.',\n      skills: [ \"jQuery\",\"KnockoutJS\",\"PHP\" ] },\n    { id: 3, name: \"TBA\", bio: 'This is the bio for ???.',\n      skills: [ \"HTML5\",\"SQL\",\"JavaScript\" ] }\n  ], sessions : [\n    { name: \"SPA Applications\", speakerId: 1 },\n    { name: \"MVVM Best Practices\", speakerId: 1 },\n    { name: \"Mapping Madness\", speakerId: 2 },\n    { name: \"Custom Components\", speakerId: 2 },\n    { name: \"Browser Database for Beginners\", speakerId: 3 }\n  ]\n};\nvm = ko.mapping.fromJS(mySeminar);\nko.applyBindings( vm );\n```", "```js\n<script type=\"text/html\" id=\"guest-template\">\n    <h3 data-bind=\"text: name\"></h3>\n    <p>Seating: <span data-bind=\"text: seating\"></span></p>\n</script>\n```", "```js\n<script src=\"img/knockout.js\"></script>\n<script src=\"img/knockout.mapping.js\"></script>\n```", "```js\n<div data-bind=\"template: { name: 'guest-template', data: guest1 }\"></div>\n```", "```js\n<h2>Guests</h2>\nThese are the guests:\n<div data-bind=\"template: { name: 'guest-template', data: guest1 }\"></div>\n<div data-bind=\"template: { name: 'guest-template', data: guest2 }\"></div>\n```", "```js\nguest1 : { name: \"Pete\", seating: \"standard\" }\n```", "```js\nvm.guest1.name('Peter')\n```", "```js\nconference : {\n  name: \"KnockOut 2K\",\n  byLine: \"MVVM That Works\"\n}\n```", "```js\n<h2>Seminar</h2>\n<div data-bind=\"template: { name: 'tmpl-Seminar', data: conference }\"></div>\n```", "```js\n<script type=\"text/html\" id=\"tmpl-Seminar\">\n  <h3 data-bind=\"text:name\"></h3>\n  <p>Theme: <span data-bind=\"text:byLine\"></span></p>\n</script>\n```", "```js\nvm = ko.mapping.fromJS(mySeminar);\nko.applyBindings( vm );\n```", "```js\nspeakers : [\n  { id: 1, name: \"John Doe\", bio: 'This is the bio for John.',\n    skills: [ \"jQuery\",\"KnockoutJS\",\"SammyJS\",\"NodeJS\" ] },\n  { id: 2, name: \"Mary Smith\", bio: 'This is the bio for Mary.',\n    skills: [ \"jQuery\",\"KnockoutJS\",\"PHP\" ] },\n  { id: 3, name: \"TBA\", bio: 'This is the bio for ???.',\n    skills: [ \"HTML5\",\"SQL\",\"JavaScript\" ] }\n],\n```", "```js\n<script type=\"text/html\" id=\"tmpl-Speakers\">\n  <h3 data-bind=\"text:name\"></h3>\n  <p>Bio: <span data-bind=\"text:bio\"></span></p>\n</script>\n```", "```js\n<h2>Speakers</h2>\n<div data-bind=\"template: { name: 'tmpl-Speakers', foreach: speakers, as: 'speaker' }\"></div>\n```", "```js\n{ id: 1, name: \"John Doe\", bio: 'This is the bio for John.',\n    skills: [ \"jQuery\",\"KnockoutJS\",\"SammyJS\",\"NodeJS\" ] },\n```", "```js\n<script type=\"text/html\" id=\"tmpl-SpeakerSkills\">\n    <li data-bind=\"text:skill\"></li>\n</script>\n```", "```js\n<script type=\"text/html\" id=\"tmpl-Speakers\">\n  <h3 data-bind=\"text:name\"></h3>\n  <p>Bio: <span data-bind=\"text:bio\"></span></p>\n  <h4>Skills</h4>\n <ul data-bind=\"template: { name: 'tmpl-SpeakerSkills', foreach: $data.skills, as: 'skill' }\"></ul>\n</script>\n```", "```js\nsessions : [\n  { name: \"SPA Applications\", speakerId: 1 },\n  { name: \"MVVM Best Practices\", speakerId: 1 },\n  { name: \"Mapping Madness\", speakerId: 2 },\n  { name: \"Custom Components\", speakerId: 2 },\n  { name: \"Browser Database for Beginners\", speakerId: 3 }\n]\n```", "```js\nvm = ko.mapping.fromJS(mySeminar);\nvm.speakerSessions = function(speakerId){\n var mySessions = [];\n ko.utils.arrayMap(vm.sessions(),function(session){\n if(speakerId() == session.speakerId()){\n mySessions.push(session);\n }\n });\n return mySessions;\n};\n\n```", "```js\n<script type=\"text/html\" id=\"tmpl-SpeakerSessions\">\n  <h4>Sessions</h4>\n  <ul data-bind=\"foreach:$root.speakerSessions(id)\">\n    <li data-bind=\"text:name() +' with '+ speaker.name()\"></li>\n  </ul>\n</script>\n```", "```js\n<script type=\"text/html\" id=\"tmpl-Speakers\">\n  <h3 data-bind=\"text:name\"></h3>\n  <p>Bio: <span data-bind=\"text:bio\"></span></p>\n <div data-bind=\"template: { name: 'tmpl-SpeakerSessions', data: $data }\"></div>\n  <h4>Skills</h4>\n  <ul data-bind=\"template: { name: 'tmpl-SpeakerSkills', foreach: $data.skills, as: 'skill' }\"></ul>\n</script>\n```", "```js\n<script>\n    var ViewModel = function(){\n        seasons = ko.observableArray([\n            { name: 'Spring', months: [ 'March', 'April', 'May' ] },\n            { name: 'Summer', months: [ 'June', 'July', 'August' ] },\n            { name: 'Autumn', months: [ 'September', 'October', 'November' ] },\n            { name: 'Winter', months: [ 'December', 'January', 'February' ] }\n        ]);\n    showRendered = function(e){\n      $(e).wrapInner(\"<em style='color:green'></em>\");\n    };\n    };\n  vm = new ViewModel();\n    ko.applyBindings(vm);\n</script>\n```", "```js\n<script type=\"text/html\" id=\"seasonTemplate\">\n    <li>\n        <strong data-bind=\"text: \"></strong>\n        <strong data-bind=\"text: name\"></strong>\n        <ul data-bind=\"template: { name: 'monthTemplate', foreach: months, as: 'month' , afterRender: showRendered}\"></ul>\n    </li>\n</script>\n```", "```js\n<script type=\"text/html\" id=\"monthTemplate\">\n    <li>\n        <span data-bind=\"text: month\"></span>\n        is in\n        <span data-bind=\"text: season.name\"></span>\n    </li>\n</script>\n```", "```js\n<ul data-bind=\"template: { name: 'seasonTemplate', foreach: seasons, as: 'season' }\"></ul>\n```", "```js\n<script>\nvar viewModel = {\n    people: ko.observableArray([\n        { name: ko.observable('Rod'), age: ko.observable(123) },\n        { name: ko.observable('Jane'), age: ko.observable(125) }, \n        { name: ko.observable('Mary'), age: ko.observable(25) }\n    ])\n};\nko.applyBindings(viewModel);\n</script>\n```", "```js\n<h1>People</h1>\n<ul data-bind=\"template: { name: 'peopleList' }\"></ul>\n```", "```js\n<script type=\"text/html\" id=\"peopleList\">\n    <% _.each(people(), function(person) { %>\n        <li>\n            <b data-bind=\"text: person.name\"></b> is <%= person.age() %> years old\n        </li>\n    <% }) %>\n</script>\n```", "```js\n/* ---- Begin integration of Underscore template engine with Knockout. Could go in a separate file of course. ---- */\n    ko.underscoreTemplateEngine = function () { }\n    ko.underscoreTemplateEngine.prototype = ko.utils.extend(new ko.templateEngine(), {\n        renderTemplateSource: function (templateSource, bindingContext, options) {\n            // Precompile and cache the templates for efficiency\n var precompiled = templateSource['data']('precompiled');\n if (!precompiled) {\n precompiled = _.template(\"<% with($data) { %> \" + templateSource.text() + \" <% } %>\");\n templateSource['data']('precompiled', precompiled);\n }\n            // Run the template and parse its output into an array of DOM elements\n var renderedMarkup = precompiled(bindingContext).replace(/\\s+/g, \" \");\n            return ko.utils.parseHtmlFragment(renderedMarkup);\n        },\n        createJavaScriptEvaluatorBlock: function(script) {\n            return \"<%= \" + script + \" %>\";\n        }\n    });\n    ko.setTemplateEngine(new ko.underscoreTemplateEngine());\n/* ---- End integration of Underscore template engine with Knockout ---- */\n```", "```js\n<input data-bind=\"value: name\" />\n<input data-bind=\"value: age\" />\n<button data-bind=\"click: addItem\">Add</button>\n```", "```js\nname: ko.observable(),\nage: ko.observable(),\n\naddItem: function() {\nvar item = { name: ko.observable(viewModel.name()), age: ko.observable(viewModel.age()) };\n   viewModel.people.push(item);\n   viewModel.name(\"\");\n   viewModel.age(\"\");\n}\n```", "```js\nviewModel.people.subscribe(function(e){\n  console.log(e);\n}, viewModel, \"arrayChange\");\nviewModel.people.subscribe(viewModel.peopleChange, viewModel, \"arrayChange\");\n```", "```js\n<pre data-bind=\"text: ko.toJSON(peopleChange, null, 2)\"></pre>\n```", "```js\n<h1>People</h1>\n<ul data-bind=\"template: { name: 'peopleList' }\"></ul>\n<script type=\"text/html\" id=\"peopleList\">\n    <% _.each(people(), function(person) { %>\n        <li>\n            <b data-bind=\"text: person.name\"></b> is <%= person.age() %> years old\n        </li>\n    <% }) %>\n</script>\n<pre data-bind=\"text: ko.toJSON(peopleChange, null, 2)\"></pre>\n<input data-bind=\"value: name\" />\n<input data-bind=\"value: age\" />\n<button data-bind=\"click: addItem\">Add</button>\n```", "```js\n<script  src=\"img/jquery.mi n.js\"></script>\n<script  src=\"img/bootstrap.min.js \"></script>\n<script src=\"img/knockout.js\"></script>\n<script  src=\"img/underscore- min.js\"></script>\n```", "```js\n<script>\n/* ---- Begin integration of Underscore template engine with Knockout. Could go in a separate file of course. ---- */\n    ko.underscoreTemplateEngine = function () { }\n    ko.underscoreTemplateEngine.prototype = ko.utils.extend(new ko.templateEngine(), {\n        renderTemplateSource: function (templateSource, bindingContext, options) {\n            // Precompile and cache the templates for efficiency\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                precompiled = _.template(\"<% with($data) { %> \" + templateSource.text() + \" <% } %>\");\n                templateSource['data']('precompiled', precompiled);\n            }\n            // Run the template and parse its output into an array of DOM elements\n            var renderedMarkup = precompiled(bindingContext).replace(/\\s+/g, \" \");\n            return ko.utils.parseHtmlFragment(renderedMarkup);\n        },\n        createJavaScriptEvaluatorBlock: function(script) {\n            return \"<%= \" + script + \" %>\";\n        }\n    });\n    ko.setTemplateEngine(new ko.underscoreTemplateEngine());\n/* ---- End integration of Underscore template engine with Knockout ---- */\nvar viewModel = {\n    people: ko.observableArray([\n        { name: ko.observable('Rod'), age: ko.observable(123) },\n        { name: ko.observable('Jane'), age: ko.observable(125) }, \n        { name: ko.observable('Mary'), age: ko.observable(25) }\n    ]),\n  peopleChange: ko.observable(),\n    name: ko.observable(),\n    age: ko.observable(),\n    addItem: function() {\n       var item = { name: ko.observable(viewModel.name()), age: ko.observable(viewModel.age()) };\n       viewModel.people.push(item);\n       viewModel.name(\"\");\n       viewModel.age(\"\");\n    },\n    removeItem: function(item) {\n       viewModel.people.remove(item);\n    }\n};\nviewModel.people.subscribe(viewModel.peopleChange, viewModel, \"arrayChange\");\nviewModel.people.subscribe(function(e){\n  console.log(e);\n}, viewModel, \"arrayChange\");\nko.applyBindings(viewModel);\n</script>\n```", "```js\n<script type=\"text/html\" id=\"guest-template\">\n    <h3>{{name}}</h3>\n    <p>Seating: {{seating}}</p>\n</script>\n<script type=\"text/html\" id=\"guest-template-alt\">\n    <h3>Others</h3>\n    <p>Seating: General Seating</p>\n</script>\n<script type=\"text/html\" id=\"tmpl-Seminar\">\n  <h3>{{name}}</h3>\n  <p>Theme: {{byLine}}</p>\n</script>\n```", "```js\n<h2>Guests</h2>\nThese are the guests:\n<div data-bind=\"template: { name: 'guest-template', data: guest1 }\"></div>\n<div data-bind=\"template: { name: 'guest-template', data: guest2 }\"></div>\n```", "```js\n<h2>Guests</h2>\nThese are the guests:\n<div data-bind=\"template: { name: 'guest-template', data: guest1 }\"></div>\n<div data-bind=\"template: { name: 'guest-template', data: guest2 }\"></div>\n{{#template {name:'guest-template', data: guest1} /}}\n{{#template {name:'guest-template', data: guest2} /}}\n```", "```js\n<h2>Guests</h2>\nThese are the guests:\n<div data-bind=\"template: { name: 'guest-template', data: guest1 }\"></div>\n<div data-bind=\"template: { name: 'guest-template', data: guest2 }\"></div>\n{{#template {name:'guest-template', data: guest1} /}}\n{{#template {name:'guest-template', data: guest2} /}}\n<kom-template data=\"guest1\" template=\"'guest-template'\"></kom- template>\n<kom-template data=\"guest2\" template=\"'guest-template'\"></kom- template>\n```", "```js\n<hr>\n{{#template 'guest-template-alt'/}}\n<hr>\n<h2>Seminar</h2>\n<div data-bind=\"template: { name: 'tmpl-Seminar', data: conference }\"></div>\n```"]