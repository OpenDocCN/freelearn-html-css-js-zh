["```js\nfunction Point(x, y, z){\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\n\nPoint.prototype.logX = function(){\n  console.log(this.x);\n}\nPoint.prototype.logY = function(){\n  console.log(this.y);\n}\n\nPoint.prototype.logZ = function(){\n  console.log(this.z);\n}\n\nvar point = new Point(3, 5, 7);\npoint.logX();\n// 3point.logY();\n// 5point.logZ();\n// 7\n```", "```js\nvar Point = Ember.Object.extend({\n  x: null,\n  y: null,\n  z: null,\n  logX: function(){\n    console.log(this.get('x'));\n  },\n  logY: function(){\n    console.log(this.get('y'));\n  },\n  logZ: function(){\n    console.log(this.get('z'));\n  }\n});\n```", "```js\nvar point = Point.create({\n  x: 3,\n  y: 5,\n  z: 7\n}); point.logX();\n// 3point.logY();\n// 5point.logZ();\n// 7\n```", "```js\nvar Vector = Point.extend({\n  add: function(vector){\n\n   var x = this.get('x') + vector.get('x');\n   var y = this.get('y') + vector.get('y');\n   var z = this.get('z') + vector.get('z');\n\n   this.set('x', x);\n   this.set('y', y);\n   this.set('z', z);\n\n  }\n});\n\nvar vectorA = Vector.create({\n  x: 3,\n  y: 5,\n  z: 7\n});\n\nvar vectorB = Vector.create({\n  x: 1,\n  y: 2,\n  z: 3\n});\n\nvectorA.add(vectorB);\n\nvectorA.logX();\n// 4vectorA.logY();\n// 7vectorA.logZ();\n// 10\n```", "```js\nvar point = Point.create();\npoint.set('x', 3);\nconsole.log(point.get('x')); // 3\n```", "```js\nvar point = Point.create();\npoint.setProperties({\n  x: 1,\n  y: 2,\n  z: 3\n});\nconsole.log(point.getProperties('x', 'y', 'z'));\n//{x: 1, y: 2, z: 3}\n```", "```js\nvar MyClass = ClassName.extend({\n  methodName: function(){\n    // method implementation\n  }\n});\n```", "```js\nvar MyPoint = Point.extend({\n  logX: function(){\n   var x = this._super(); // call parent method\n   console.log('x: %s', x);\n  }\n});\nvar myPoint = MyPoint.create({\n  x: 3\n});\nmyPoint.logX(); // x: 3\n```", "```js\nvar Book = Ember.Object.extend({\n  init: function(){\n    this._super();\n    this.set('name', 'Mastering Ember.js'); // initialization\n  }\n});\n```", "```js\nvar Movie = Ember.Object.extend({\n  name: function(){\n    return 'Transformers';\n  }.property()\n});\n\nvar movie = Movie.create();\nconsole.log(movie.get('name')); // Transformers\n```", "```js\nvar Movie = Ember.Object.extend({\n  year: '2007',\n  seriesNumber: '1',\n  name: function(){\n    return this.get('seriesNumber') + '. Transformers - ' + this.get('year');\n  }.property('year', 'seriesNumber')\n})\n\nvar movie = Movie.create();\nconsole.log(movie.get('name')); // 1\\. Transformers – 2007\n\nmovie.set('year', '2014');\nmovie.set('seriesNumber', '4');\nconsole.log(movie.get('name')); // 4\\. Transformers – 2014\n```", "```js\nvar Country = Ember.Object.extend({\n  stateNames: function(){\n  return this.get('states').map(function(state){\n    return state['name'];\n  });\n  }.property('states.@each.name')\n});\n\nvar country = Country.create({\n  states: [ {name: 'Texas'}, {name: 'Ohio'} ],\n});\nconsole.log(country.get('stateNames')); // ['Texas', 'Ohio']\n\ncountry.set('states', [ {name: 'Alabama'}, {name: 'Arizona'} ]);\nconsole.log(country.get('stateNames')); // ['Alabama', 'Arizona']\n```", "```js\nvar MyClass = ClassName.extend({\n  observerName: function(){\n    // observer implementation\n  }.observes([properties, ...])\n});\n```", "```js\nvar Session = Em.Object.extend({\n  expiredChanged: function(){\n    if (this.get('expired')){\n      window.location.assign('/login');\n    }\n  }.observes('expired')\n});\n```", "```js\nvar Song = Em.Object.extend({\n  playedDidChange: function(){\n\n  }.observes('played')\n});\n```", "```js\nvar Player = Em.Object.extend({\n  inMotion: function(){\n\n  }.observes('running', 'walking)\n});\n```", "```js\nvar Session = Em.Object.extend({\n  init: function(){\n\n    var self = this;\n\n    self._super();\n    self.addObserver('expired', function(){\n    if (self.get('expired')){\n      self.removeObserver('expired');\n      window.location.assign('/login');\n    }\n  });\n\n}\n});\n```", "```js\nvar Session = Em.Object.extend({\n  init: function(){\n\n    this._super();\n    this.addObserver('expired', this, function(){\n      if (this.get('expired')){\n        this.removeObserver('expired');\n        window.location.assign('/login');\n      }\n    });\n\n  }\n});\n```", "```js\nvar Song = Em.Object.extend({\n  skipped: false,\n  played: false,\n  skippedDidChange: function(){\n    // does not fire on object initialization\n    console.log('song was skipped');\n  }.observes('skipped'),\n  playedDidChange: function(){\n    // fires on object initialization\n    console.log('song finished playing');\n  }.observes('played').on('init'),\n  init: function(){\n    this._super();\n    this.set('skipped', true);\n    this.set('played', true);\n  }\n});\n\nSong.create();\n```", "```js\nproperty: Ember.computed.alias('otherProperty'),\n```", "```js\nvar author = Em.Object.create({\n  name: 'J. K. Rowling'\n});\n\nvar book = Em.Object.create({\n  name: 'Harry Potter',\n  authorName: Ember.computed.alias('author.name')\n});\n\nconsole.log(book.get('authorName')); // J. K. Rowling\n\nauthor.set('name', 'Joanne Rowling');\nconsole.log(book.get('authorName')); //  Joanne Rowling\n```", "```js\nbook.set('authorName', 'Joanne Jo Rowling');\nconsole.log(author.get('name')); // Joanne Jo Rowling\n```", "```js\nvar author = Em.Object.create({\n  name: 'J. K. Rowling'\n});\n\nvar book = Em.Object.create({\n  name: 'Harry Potter',\n  authorName: Ember.computed.oneWay('author')\n});\n\nconsole.log(book.get('authorName')); // J. K. Rowling\n\nbook.set('author.name', 'Joanne Rowling');\n// author's name remains unchanged\nconsole.log(author.get('name')); //  J. K. Rowling\n```", "```js\nvar myView = Em.View.create({\n  sum: function(a, b){\n    return a+b;\n  }\n});\n\nvar myController = Em.Controller.create({\n  sum: function(a, b){\n    return a+b;\n  }\n});\n```", "```js\nvar sumMixin = Em.Mixin.create({\n  sum: function(a, b){\n    return a+b;\n  }\n});\n\nvar myView = Em.View.createWithMixins(sumMixin);\n\nvar myController = Em.Controller.createWithMixins(sumMixin);\n```", "```js\nApp.Number = Em.Object.extend(sumMixin, diffMixin, productMixin);\n```", "```js\nvar Book = Em.Object.extend();\n\nBook.reopen({\n  id: null,\n  title: null,\n  purchase: function(){\n    console.log('sold');\n  }\n});\n\nBook.reopenClass({\n  getById: function(id){\n      return Book.create({\n        id: '456',\n        title: 'Harry Potter'\n      });\n  } \n});\n\nBook.create({\n  id: 456,\n  title: 'Harry Potter'\n});\n\nvar book = Book.getById(456);\n\nbook.purchase();\n```", "```js\nvar GRID_SIZE = 4; \nvar actuator = Em.Object.createWithMixins(Em.Evented);\n\nvar block = Em.Object.createWithMixins(Em.Evented);\nacuator.on('moveRight', function(){\n  var x = block.get('x') + 1;\n  x = x % GRID_SIZE; \n  block.set('x', x);\n});\n\nactuator.trigger('moveRight');\n```"]