["```js\n$ npm install mocha -g\n\n```", "```js\n$ mkdir test\n\n```", "```js\nvar assert = require('assert'); \ndescribe('String', function() { \n    describe('#search()', function() { \n        it('should return -1 when the value is not present', function() { \n            assert.equal(-1, 'text'.search(/testing/)); \n        }); \n    }); \n}); \n\n```", "```js\n$ mocha test.js\n\n```", "```js\n String\n #search()\n should return -1 when the value is not present\n 1 passing (8ms)\n\n```", "```js\n$ npm install chai --save-dev\n\n```", "```js\nvar should = require('chai').should(); // Execute the should function \nvar test = 'a string'; \ntest.should.be.a('string'); \n\n```", "```js\nvar expect = require('chai').expect; \nvar test = 'a string'; \nexpect(test).to.be.a('string); \n\n```", "```js\nvar assert = require('chai').assert; \nvar test = 'a string'; \nassert.typeOf(test, 'string'); \n\n```", "```js\nvar should = require('chai').should(); \ndescribe('String', function() { \n    describe('#search()', function() { \n        it('should return -1 when the value is not present', function() { \n            'text'.search(/testing/).should.equal(-1); \n        }); \n    }); \n}); \n\n```", "```js\n$ mocha test.js\n\n```", "```js\n String\n #search()\n should return -1 when the value is not present\n String\n #search()\n should return -1 when the value is not present\n 2 passing (9ms)\n\n```", "```js\nmodule.exports = { \n    addClass: function(elem, newClass) { \n        if (elem.className.indexOf(newClass) !== -1) { \n            return; \n        } \n        if (elem.className !== '') { \n            newClass = ' ' + newClass; \n        } \n        elem.className += newClass; \n    } \n}; \n\n```", "```js\nvar addClass = require('./addClass').addClass; \ndescribe('addClass', function() { \n    it('should add a new className if it does not exist', function() { \n        var elem = { \n            className: 'existing-class' \n        }; \n        addClass(elem, 'new-class'); \n        elem.className.split(' ')[1].should.equal('new-class'); \n    }); \n}); \n\n```", "```js\n String\n #search()\n should return -1 when the value is not present\n String\n #search()\n should return -1 when the value is not present\n addClass\n should add a new className if it does not exist\n 3 passing (10ms)\n\n```", "```js\n<!doctype html> \n<html> \n    <head> \n        <title>Mocha Tests</title> \n        <link rel=\"stylesheet\" href=\"node_modules/mocha/mocha.css\"> \n    </head> \n    <body> \n        <div id=\"mocha\"></div> \n        <script src=\"img/mocha.js\"></script> \n        <script src=\"img/chai.js\"></script> \n        <script>mocha.setup('bdd');</script> \n        <script src=\"img/addClass.js\"></script> \n        <script src=\"img/test.js\"></script> \n        <script> \n            mocha.run(); \n        </script> \n    </body> \n</html> \n\n```", "```js\nwindow.DOM = { \n    addClass: function(elem, newClass) { \n        if (elem.className.indexOf(newClass) !== -1) { \n            return; \n        } \n        if (elem.className !== '') { \n            newClass = ' ' + newClass; \n        } \n        elem.className += newClass; \n    } \n}; \n\n```", "```js\n// Chai.should assertion \nvar should = chai.should(); \ndescribe('String', function() { \n    describe('#search()', function() { \n        it('should return -1 when the value is not present', function() { \n            'text'.search(/testing/).should.equal(-1); \n        }); \n    }); \n}); \n\n// Test the addClass method \nvar addClass = DOM.addClass; \ndescribe('addClass', function() { \n    it('should add a new className if it does not exist', function() { \n        var elem = { \n            className: 'existing-class' \n        }; \n        addClass(elem, 'new-class'); \n        elem.className.split(' ')[1].should.equal('new-class'); \n    }); \n}); \n\n```", "```js\n$ http-server\n\n```", "```js\nvar spy = sinon.spy(); \n\n```", "```js\nit('should invoke the callback on publish', function() { \n    var spy = sinon.spy(); \n    Payload.subscribe('test-event', spy); \n    Payload.publish('test-event'); \n    spy.called.should.equal(true); \n}); \n\n```", "```js\nvar spy = sinon.spy(testFunc); \n\n```", "```js\nvar spy = sinon.spy(object, 'method'); \n\n```", "```js\nit('should pass the error into the callback if save fails', function() { \n    var error = new Error('this is an error'); \n    var save = sinon.stub().throws(error); \n    var spy = sinon.spy(); \n\n    registerUser({ name: 'Peebo' }, spy); \n\n    save.restore(); \n    sinon.assert.calledWith(spy, error); \n}); \n\n```", "```js\ndescribe('incrementDataByOne', function() { \n    it('should increment stored value by one', function() { \n        var mock = sinon.mock(Payload.storage); \n        mock.expects('get').withArgs('data').returns(0); \n        mock.expects('set').once().withArgs('data', 1); \n\n        incrementDataByOne(); \n\n        mock.restore(); \n        mock.verify(); \n    }); \n}); \n\n```", "```js\ndescribe('sorting the list of users', function() { \n    it('sorts in ascending order by default', function() { \n        var users = ['Kerri', 'Jeff', 'Brenda']; \n        var sorted = sortUsers(users); \n        expect(sorted).toEqual(['Brenda', 'Jeff', 'Kerri']); \n    }); \n}); \n\n```", "```js\n$ npm install karma karma-mocha karma-chai --save-dev\n\n```", "```js\n$ npm install karma-chrome-launcher karma-firefox-launcher --save-dev\n\n```", "```js\nmodule.exports = function(config) { \n    'use strict'; \n    config.set({ \n        frameworks: ['mocha', 'chai'], \n        files: ['test/*.js'], \n        browsers: ['Chrome', 'Firefox'], \n        singleRun: true \n    }); \n}; \n\n```", "```js\n$ ./node_modules/karma/bin/karma start karma.conf.js\n\n```", "```js\n$ npm install karma-cli -g\n\n```", "```js\n$ karma start\n\n```", "```js\n28 08 2016 18:02:34.147:INFO [karma]: Karma v1.2.0 server started at\n    http://localhost:9876/\n28 08 2016 18:02:34.147:INFO [launcher]: Launching browsers Chrome, Firefox\n    with unlimited concurrency\n28 08 2016 18:02:34.157:INFO [launcher]: Starting browser Chrome\n28 08 2016 18:02:34.163:INFO [launcher]: Starting browser Firefox\n28 08 2016 18:02:35.301:INFO [Chrome 52.0.2743 (Mac OS X 10.11.6)]:\n    Connected on socket /#TJZjs4nvaN-kNp3QAAAA with id 18074196\n28 08 2016 18:02:36.761:INFO [Firefox 48.0.0 (Mac OS X 10.11.0)]:\n    Connected on socket /#74pJ5Vl1sLPwySk4AAAB with id 24041937\nChrome 52.0.2743 (Mac OS X 10.11.6):\n    Executed 2 of 2 SUCCESS (0.008 secs / 0.001 secs)\nFirefox 48.0.0 (Mac OS X 10.11.0):\n    Executed 2 of 2 SUCCESS (0.002 secs / 0.002 secs)\nTOTAL: 4 SUCCESS\n\n```", "```js\n$ npm install jasmine karma-jasmine --save-dev\n\n```", "```js\n$ bower install angular --save\n\n```", "```js\n$ bower install angular-mocks --save-dev\n\n```", "```js\nmodule.exports = function(config) { \n    'use strict'; \n    config.set({ \n        frameworks: ['jasmine'], \n        files: [ \n            'bower_components/angular/angular.js', \n            'bower_components/angular-mocks/angular-mocks.js', \n            'test/angular-test.js' \n        ], \n        browsers: ['Chrome', 'Firefox'], \n        singleRun: true \n    }); \n}; \n\n```", "```js\nvar giftappControllers = angular.module('giftappControllers', []); \nangular.module('giftappControllers') \n    .controller('DashMainController', ['$scope', function($scope, List) { \n        $scope.lists = [ \n            {'name': 'Christmas List'}, \n            {'name': 'Birthday List'} \n        ]; \n    }]); \n\n```", "```js\ndescribe('DashMainController', function() { \n    var $controller; \n    beforeEach(module('giftappControllers')); \n    beforeEach(inject(function(_$controller_) { \n        $controller = _$controller_; \n    })); \n    describe('$scope.lists', function() { \n        it('has a length of 2', function() { \n            var $scope = {}; \n            var testController = $controller('DashMainController', { \n                $scope: $scope \n            }); \n            expect($scope.lists.length).toEqual(2); \n        }); \n    }); \n}); \n\n```", "```js\n$ karma start\n\n```", "```js\n03 09 2016 01:42:58.563:INFO [karma]: Karma v1.2.0 server started at\n    http://localhost:9876/\n03 09 2016 01:42:58.567:INFO [launcher]: Launching browsers Chrome, Firefox\n    with unlimited concurrency\n03 09 2016 01:42:58.574:INFO [launcher]: Starting browser Chrome\n03 09 2016 01:42:58.580:INFO [launcher]: Starting browser Firefox\n03 09 2016 01:42:59.657:INFO [Chrome 52.0.2743 (Mac OS X 10.11.6)]:\n    Connected on socket /#sXw8Utn7qjVLwiqKAAAA with id 15753343\nChrome 52.0.2743 (Mac OS X 10.11.6):\n    Executed 1 of 1 SUCCESS (0.038 secs / 0.03 secs)\nChrome 52.0.2743 (Mac OS X 10.11.6):\n    Executed 1 of 1 SUCCESS (0.038 secs / 0.03 secs)\nFirefox 48.0.0 (Mac OS X 10.11.0):\n    Executed 1 of 1 SUCCESS (0.001 secs / 0.016 secs)\nTOTAL: 2 SUCCESS\n\n```", "```js\n$ git clone https://github.com/angular/angular-seed.git\n$ cd angular-seed\n\n```", "```js\n$ npm install\n\n```", "```js\n$ npm start\n\n```", "```js\n> angular-seed@0.0.0 prestart /angular-seed\n> npm install\n> angular-seed@0.0.0 postinstall /angular-seed\n> bower install\n> angular-seed@0.0.0 start /angular-seed\n> http-server -a localhost -p 8000 -c-1 ./app\nStarting up http-server, serving ./app\nAvailable on:\n http://localhost:8000\nHit CTRL-C to stop the server\n\n```", "```js\n$ npm test\n\n```", "```js\n> angular-seed@0.0.0 test /angular-seed\n> karma start karma.conf.js\n03 09 2016 13:02:57.418:WARN [karma]: No captured browser, open\n    http://localhost:9876/\n03 09 2016 13:02:57.431:INFO [karma]: Karma v0.13.22 server started at\n    http://localhost:9876/\n03 09 2016 13:02:57.447:INFO [launcher]: Starting browser Chrome\n03 09 2016 13:02:58.549:INFO [Chrome 52.0.2743 (Mac OS X 10.11.6)]:\n    Connected on socket /#A2XSbQWChmjkstjNAAAA with id 65182476\nChrome 52.0.2743 (Mac OS X 10.11.6):\n    Executed 5 of 5 SUCCESS (0.078 secs / 0.069 secs)\n\n```", "```js\n$ npm run test-single-run\n\n```", "```js\n$ npm run update-webdriver\n\n```", "```js\nUpdating selenium standalone to version 2.52.0\ndownloading https://selenium-release.storage.googleapis.com/2.52/selenium-\n    server-standalone-2.52.0.jar...\nUpdating chromedriver to version 2.21\ndownloading \n    https://chromedriver.storage.googleapis.com/2.21/chromedriver_mac32.zip...\nchromedriver_2.21mac32.zip downloaded to /angular-\n    seed/node_modules/protractor/selenium/chromedriver_2.21mac32.zip\nselenium-server-standalone-2.52.0.jar downloaded to /angular-\n    seed/node_modules/protractor/selenium/selenium-server-standalone-2.52.0.jar\n\n```", "```js\n$ npm start\n\n```", "```js\n//jshint strict: false \nexports.config = { \n\n  allScriptsTimeout: 11000, \n\n  specs: [ \n    '*.js' \n  ], \n\n  capabilities: { \n    'browserName': 'chrome' \n  }, \n\n  baseUrl: 'http://localhost:8000/', \n\n  framework: 'jasmine', \n\n  jasmineNodeOpts: { \n    defaultTimeoutInterval: 30000 \n  }, \n\n  directConnect: true \n\n}; \n\n```", "```js\n$ npm run protractor\n\n```", "```js\n> angular-seed@0.0.0 protractor /angular-seed\n> protractor e2e-tests/protractor.conf.js\n[14:04:58] I/direct - Using ChromeDriver directly...\n[14:04:58] I/launcher - Running 1 instances of WebDriver\nStarted\n...\n3 specs, 0 failures\nFinished in 1.174 seconds\n[14:05:00] I/launcher - 0 instance(s) of WebDriver still running\n[14:05:00] I/launcher - chrome #01 passed\n\n```", "```js\ndescribe('my app', function() { \n    ... \n}); \n\n```", "```js\nit('should automatically redirect to /view1 when location hash/fragment is empty', function() { \n    browser.get('index.html'); \n    expect(browser.getLocationAbsUrl()).toMatch(\"/view1\"); \n}); \n\n```", "```js\ndescribe('view1', function() { \n\n    beforeEach(function() { \n        browser.get('index.html#!/view1'); \n    }); \n\n    it('should render view1 when user navigates to /view1', function() { \n        expect(element.all(by.css('[ng-view]\n        p')).first().getText()).toMatch(/partial for view 1/); \n    }); \n\n}); \n\n```", "```js\ndescribe('view2', function() { \n\n    beforeEach(function() { \n        browser.get('index.html#!/view2'); \n    }); \n\n    it('should render view2 when user navigates to /view2', function() { \n        expect(element.all(by.css('[ng-view] \n        p')).first().getText()).toMatch(/partial for view 2/); \n    }); \n\n}); \n\n```"]