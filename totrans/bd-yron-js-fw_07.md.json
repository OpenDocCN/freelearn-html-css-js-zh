["```js\nimport Componium from \"componium\";\nconst app = await Componium.initialize();\nconst server = await app.createServer({...});\n```", "```js\nserver.addMiddleware(\"middleware1\", () => {\n  console.log(\"Server middleware log\");\n});\nserver.addRoute(\"/dynamic\", function (request, response) {\n  return response.send(\"Dynamic Path\");\n});\nconst router = server.createRouter(\"/router\");\nrouter.addMiddleware(\"routerMiddleware\", (request) => {\n  console.log(\"Router middleware:\", request.originalUrl);\n});\nrouter.addRoute(\"/sample\", function (request, response) {\n  return response.send(\"Router Sample\");\n});\n```", "```js\n{\n  \"database\": {\n    \"connection_uri\": \"sqlite::memory\"\n  }\n}\n```", "```js\nimport config from \"config\";\nconsole.log(\"config\", config.get\n  (\"database.connection_uri\"));\n```", "```js\nimport { DataTypes, Model } from \"sequelize\";\nclass Package extends Model {}\nPackage.init(\n  {\n    title: DataTypes.STRING,\n    address: DataTypes.STRING,\n    created: DataTypes.DATE,\n  },\n  { sequelize: componium.db, modelName: \"package\" }\n);\n```", "```js\nexport default async (req, res) => {\n  const packages = await componium.models\n    [\"package\"].findAll();\n  componium.logger.info(`Found packages ${JSON.stringify\n    (packages)}`);\n  res.json(packages);\n};\n```", "```js\nconst typeDefs = `#graphql\n  scalar Date\n  type Package {\n    title: String,\n    address: String,\n    created: Date,\n  }\n  type Query {\n    packages: [Package]\n  }\n`;\n```", "```js\nconst resolvers = {\n  Query: {\n    packages: async () => {\n      const packages = await componium.models\n        [\"package\"].findAll();\n      componium.logger.info(`Found packages ${JSON.\n        stringify(packages)}`);\n      return packages;\n    },\n  },\n};\nexport {typeDefs, resolvers };\n```", "```js\ncomponium.logger.info(`Found packages ${JSON.\n  sstringify(packages)}`);\n```", "```js\n{\"level\":\"info\",\"message\":\"Found packages [{\\\"id\\\":1,\\\"title\\\":\\\"Paper Delivery\\\",\\\"address\\\":\\\"123 Main St.\\\",\\\"createdAt\\\":\\\"2023-02-01T05:00:00.000Z\\\",\\\"updatedAt\\\":\\\"2023-02-01T05:00:00.000Z\\\"}]\",\"service\":\"package-service\"}\n```", "```js\n> cd new-app\n> componium init\nCreating /Users/user/dev/new-app/app.js...\n...\nInstalling dependencies...\nNew Componium application initialized.\n```", "```js\n> componium create\n? What would you like to scaffold? Route\n? Enter a name for your ROUTE packages\n```", "```js\nimport Package from \"../../models/package.js\";\nexport default async (req, res) => {\n  const model = await Package();\n  const sample = await model.create({\n    title: \"Paper Delivery\",\n    address: \"123 Main St.\",\n    created: new Date(2023, 1, 1),\n  });\n  const packages = await model.findAll();\n  componium.logger.info(`Found packages ${JSON.\n    stringify(packages)}`);\n  res.json(packages);\n};\n```"]