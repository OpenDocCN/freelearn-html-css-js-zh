["```js\n    function WMSUntiled (map, wmsUntiledOptions) {\n      this.map_ = map;\n      this.options = wmsUntiledOptions;\n      this.div_ = null;\n      this.image_ = null;\n      this.setMap(map);\n    }\n    ```", "```js\n    WMSUntiled.prototype = new google.maps.OverlayView();\n    ```", "```js\n    WMSUntiled.prototype.draw = function() {\n      var overlayProjection = this.getProjection();\n      var sw = overlayProjection.fromLatLngToDivPixel (this.map_.getBounds ().getSouthWest());\n      var ne = overlayProjection.fromLatLngToDivPixel (this.map_.getBounds().getNorthEast());\n      var div = this.div_;\n      if (this.image_ != null)\n        div.removeChild(this.image_);\n\n      // Create an IMG element and attach it to the DIV.\n      var img = document.createElement('img');\n      img.src = this.prepareWMSUrl();\n      img.style.width = '100%';\n      img.style.height = '100%';\n      img.style.position = 'absolute';\n      img.style.opacity = 0.6;\n      this.image_ = img;\n      div.appendChild(this.image_);\n\n      div.style.left = sw.x + 'px';\n      div.style.top = ne.y + 'px';\n      div.style.width = (ne.x - sw.x) + 'px';\n      div.style.height = (sw.y - ne.y) + 'px';\n    };\n\n    WMSUntiled.prototype.onAdd = function() {\n      var that = this;\n      var div = document.createElement('div');\n      div.style.borderStyle = 'none';\n      div.style.borderWidth = '0px';\n      div.style.position = 'absolute';\n\n      this.div_ = div;\n      this.getPanes().floatPane.appendChild(this.div_);\n\n      google.maps.event.addListener(this.map_, 'dragend', function() {\n          that.draw();\n      });\n    };\n\n    WMSUntiled.prototype.onRemove = function() {\n      this.menuDiv.parentNode.removeChild(this.div_);\n      this.div_ = null;\n    };\n    ```", "```js\n    WMSUntiled.prototype.prepareWMSUrl = function() {  \n      var baseUrl = this.options.baseUrl;\n      baseUrl += 'Service=WMS&request=GetMap&CRS=EPSG:3857&';\n      baseUrl += 'version=' + this.options.version;\n      baseUrl += '&layers=' + this.options.layers;\n      baseUrl += '&styles=' + this.options.styles;\n      baseUrl += '&format=' + this.options.format;\n\n      var bounds = this.map_.getBounds();\n      var sw = this.toMercator(bounds.getSouthWest());\n      var ne = this.toMercator(bounds.getNorthEast());\n\n      var mapDiv = this.map_.getDiv(); \n      baseUrl += '&BBOX=' + sw.x + ',' + sw.y + ',' + ne.x + ',' + ne.y;  \n      baseUrl += '&width=' + mapDiv.clientWidth + '&height=' + mapDiv.clientHeight;    \n      return baseUrl;\n    };\n\n    WMSUntiled.prototype.toMercator = function(coord) {\n      var lat = coord.lat();\n      var lng = coord.lng();\n      if ((Math.abs(lng) > 180 || Math.abs(lat) > 90))\n        return;\n\n      var num = lng * 0.017453292519943295;\n      var x = 6378137.0 * num;\n      var a = lat * 0.017453292519943295;\n\n      var merc_lon = x;\n      var merc_lat = 3189068.5 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)));\n\n      return { x: merc_lon, y: merc_lat };\n    };\n\n    WMSUntiled.prototype.changeOpacity = function(opacity) {\n      if (opacity >= 0 && opacity <= 1){\n        this.image_.style.opacity = opacity;\n      }\n    };\n    ```", "```js\n    <script type=\"text/javascript\" src=\"img/wms.js\"> \n    </script>\n    ```", "```js\n    var wmsOptions = {\n      baseUrl: 'http://demo.cubewerx.com/cubewerx/cubeserv.cgi?',\n      layers: 'Foundation.gtopo30',\n      version: '1.1.1',\n      styles: 'default',\n      format: 'image/png'\n    };\n    ```", "```js\n    var wmsLayer = new WMSUntiled(map, wmsOptions);\n    ```", "```js\nfunction WMSUntiled (map, wmsUntiledOptions) {\n  this.map_ = map;\n  this.options = wmsUntiledOptions;\n  this.div_ = null;\n  this.image_ = null;\n  this.setMap(map);\n};\n```", "```js\nWMSUntiled.prototype = new google.maps.OverlayView();\n```", "```js\nWMSUntiled.prototype.onAdd = function() {\n  var that = this;\n  var div = document.createElement('div');\n  div.style.borderStyle = 'none';\n  div.style.borderWidth = '0px';\n  div.style.position = 'absolute';\n\n  this.div_ = div;\n  this.getPanes().floatPane.appendChild(this.div_);\n\n  google.maps.event.addListener(this.map_, 'dragend', function() {\n    that.draw();\n  });\n};\n\nWMSUntiled.prototype.onRemove = function() {\n  this.menuDiv.parentNode.removeChild(this.div_);\n  this.div_ = null;\n};\n```", "```js\nvar div = this.div_;\nif (this.image_ != null)\n  div.removeChild(this.image_);\nvar img = document.createElement('img');\nimg.src = this.prepareWMSUrl();\nimg.style.width = '100%';\nimg.style.height = '100%';\nimg.style.position = 'absolute';\nimg.style.opacity = 0.6;\nthis.image_ = img;\ndiv.appendChild(this.image_);\n```", "```js\nvar overlayProjection = this.getProjection();\nvar sw = overlayProjection.fromLatLngToDivPixel (this.map_.getBounds().getSouthWest());\nvar ne = overlayProjection.fromLatLngToDivPixel (this.map_.getBounds().getNorthEast());\n```", "```js\nWMSUntiled.prototype.prepareWMSUrl = function() {\n  var baseUrl = this.options.baseUrl;\n  baseUrl += 'Service=WMS&request=GetMap&CRS=EPSG:3857&';\n  baseUrl += 'version=' + this.options.version;\n  baseUrl += '&layers=' + this.options.layers;\n  baseUrl += '&styles=' + this.options.styles;\n  baseUrl += '&format=' + this.options.format;\n\n  var bounds = this.map_.getBounds();\n  var sw = this.toMercator(bounds.getSouthWest());\n  var ne = this.toMercator(bounds.getNorthEast());\n\n  var mapDiv = this.map_.getDiv();\n  baseUrl += '&BBOX=' + sw.x + ',' + sw.y + ',' + ne.x + ',' + ne.y;\n  baseUrl += '&width=' + mapDiv.clientWidth + '&height=' + mapDiv.clientHeight;\n  return baseUrl;\n};\n```", "```js\nvar wmsOptions = {\n  baseUrl: 'http://demo.cubewerx.com/cubewerx/cubeserv.cgi?',\n  layers: 'Foundation.gtopo30',\n  version: '1.1.1', \n  styles: 'default',\n  format: 'image/png'\n};\nvar wmsLayer = new WMSUntiled(map, wmsOptions);\n```", "```js\n    <script src=\"img/jquery-1.10.1.min.js\"></script>\n    ```", "```js\n    <input type=\"checkbox\" id=\"status\"/>HeatMap Enabled <input type=\"text\" id=\"query\"/> <input type=\"button\" id=\"search\" value=\"Search\"/><br/>\n    ```", "```js\n    var layer = new google.maps.FusionTablesLayer({\n      query: {\n        select: 'geometry',\n        from: '1_1TjGKCfamzW46TfqEBS7rXppOejpa6NK-FsXOg'\n      },\n      heatmap: {\n        enabled: false\n      }\n    });\n    layer.setMap(map);\n    ```", "```js\n    $('#status').click(function() {\n      if (this.checked) {\n        layer.setOptions({ \n          heatmap: { enabled: true } });\n      }\n      else {\n        layer.setOptions({\n          heatmap: { enabled: false } });\n      }\n    });\n    ```", "```js\n    $('#search').click(function() {\n      var txtValue = $('#query').val();\n      layer.setOptions({query: { \n        select: 'geometry', \n        from: \n        '1_1TjGKCfamzW46TfqEBS7rXppOejpa6NK-FsXOg', \n        where: 'name contains \"' + txtValue + '\"' } });\n    });\n    ```", "```js\nvar layer = new google.maps.FusionTablesLayer({\n  query: {\n    select: 'geometry',\n    from: '1_1TjGKCfamzW46TfqEBS7rXppOejpa6NK-FsXOg'\n  },\n  heatmap: {\n    enabled: false\n  }\n});\nlayer.setMap(map);\n```", "```js\n$('#status').click(function(){\n  if (this.checked) {\n    layer.setOptions({heatmap: { enabled: true } });\n  }\n  else {\n    layer.setOptions({heatmap: { enabled: false } });\n  }\n});\n```", "```js\n$('#search').click(function() {\n  var txtValue = $('#query').val();\n  layer.setOptions({ \n  query: { \n    select: 'geometry', \n    from: '1_1TjGKCfamzW46TfqEBS7rXppOejpa6NK-FsXOg', where: 'name contains \"' + txtValue + '\"' } });\n  });\n```", "```js\n    <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css\" />\n    <!--[if lte IE 8]>\n    <link rel=\"stylesheet\" href=\"http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.ie.css\" />\n    <![endif]-->\n    <script src=\"img/cartodb.js\"></script>\n    ```", "```js\n    <script src=\"img/jquery-1.10.1.min.js\"></script>\n    ```", "```js\n    var cartoLayer;\n    ```", "```js\n    var cartoStyle = '#world_borders { ' + \n      'polygon-fill: #1a9850; ' +\n      'polygon-opacity:0.7; ' +\n      '} ' +\n      '#world_borders [pop2005 > 10000000] { ' +\n      'polygon-fill: #8cce8a ' +\n      '} ' +\n      '#world_borders [pop2005 > 40000000] { ' +\n      'polygon-fill: #fed6b0 ' +\n      '} ' +\n      '#world_borders [pop2005 > 70000000] { ' +\n      'polygon-fill: #d73027 ' +\n    '} ';\n    ```", "```js\n    //Creating CartoDB layer and add it to map.\n    cartodb.createLayer(map, {\n      user_name: 'gmapcookbook',\n      type: 'cartodb',\n      sublayers: [{\n        sql: 'SELECT * FROM world_borders',\n        cartocss: cartoStyle,\n        interactivity: 'cartodb_id, name, pop2005, area',\n      }]\n    })\n    .addTo(map)\n    .done(function(layer) {\n      cartoLayer = layer;\n\n      //Enabling popup info window\n      cartodb.vis.Vis.addInfowindow(map, layer.getSubLayer(0), ['name', 'pop2005', 'area']);\n\n      //Enabling UTFGrid layer to add interactivity.\n      layer.setInteraction(true);\n      layer.on('featureOver', function(e, latlng, pos, data) {\n        $('#infoDiv').html('<b>Info : </b>' + data.name + ' (Population : ' + data.pop2005 + ')');\n      });\n    });\n    ```", "```js\n    //Listening click event of the search button to filter the //data of map\n    $('#search').click(function() {\n      var txtValue = $('#query').val();\n      cartoLayer.setQuery('SELECT * FROM world_borders WHERE name LIKE \\'%' + txtValue + '%\\'');\n      if (txtValue == '') {\n       cartoLayer.setCartoCSS(cartoStyle);\n      }\n      else { cartoLayer.setCartoCSS('#world_borders { polygon-fill: #00000d; polygon-opacity:0.7; }');\n      }\n    });\n    ```", "```js\n    <input type=\"text\" id=\"query\"/> <input type=\"button\" id=\"search\" value=\"Search\"/><br/>\n    <div id=\"mapDiv\"></div>\n    <div id=\"infoDiv\">--</div>\n    ```", "```js\nvar cartoStyle = '#world_borders { ' +\n    'polygon-fill: #1a9850; ' +\n    'polygon-opacity:0.7; ' +\n    '} ' +\n  '#world_borders [pop2005 > 10000000] { ' +\n    'polygon-fill: #8cce8a ' +\n    '} ' +\n  '#world_borders [pop2005 > 40000000] { ' +\n    'polygon-fill: #fed6b0 ' +\n    '} ' +\n  '#world_borders [pop2005 > 70000000] { ' +\n    'polygon-fill: #d73027 ' +\n  '} ';\n```", "```js\ncartodb.createLayer(map, {\n  user_name: 'gmapcookbook',\n  type: 'cartodb',\n  sublayers: [{\n    sql: 'SELECT * FROM world_borders',\n    cartocss: cartoStyle,\n    interactivity: 'cartodb_id, name, pop2005, area'\n  }]\n})\n.addTo(map)\n```", "```js\n.done(function(layer) {\n  cartoLayer = layer;\n  //Enabling popup info window\n  cartodb.vis.Vis.addInfowindow(map, layer.getSubLayer(0), ['name', 'pop2005', 'area']);\n});\n```", "```js\nlayer.setInteraction(true);\nlayer.on('featureOver', function(e, latlng, pos, data) {\n  $('#infoDiv').html('<b>Info : </b>' + data.name + ' (Population : ' + data.pop2005 + ')');\n});\n```", "```js\n$('#search').click(function() {\n  var txtValue = $('#query').val();\n});\n```", "```js\ncartoLayer.setQuery('SELECT * FROM world_borders WHERE name LIKE \\'%' + txtValue + '%\\'');\n```", "```js\nif (txtValue == '') {\n  cartoLayer.setCartoCSS(cartoStyle);\n}\nelse {\n  cartoLayer.setCartoCSS('#world_borders { polygon-fill: #00000d; polygon-opacity:0.7; }');\n}\n```", "```js\n    <script src=\"img/arcgis.js\"></script>\n    ```", "```js\n    <script src=\"img/jquery1.10.1.min.js\"></script>\n    ```", "```js\n    var overlays = [];\n    var infowindow = null;\n    ```", "```js\n    //Creating a tiled map layer\n    var topoMapURL = 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer';\n    var tiledMap = new gmaps.ags.MapType(topoMapURL, {\n      name: 'TopoMap',\n      opacity: 0.6\n    });\n    ```", "```js\n    //Creating a dynamic map layer\n    var dynamicMapURL = 'http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer';\n    var copyrightControl = new gmaps.ags.CopyrightControl(map);\n    var dynamicMap = new gmaps.ags.MapOverlay(dynamicMapURL, {\n      opacity: 0.8\n    });\n    ```", "```js\n    //Creating a map service layer\n    var mapService = new gmaps.ags.MapService(dynamicMapURL);\n    ```", "```js\n    //Listening map click event for identifying\n    google.maps.event.addListener(map, 'click', identify);\n    ```", "```js\n    //Function that is called on each mouse click\n    function identify(evt) {\n      mapService.identify({\n        'geometry': evt.latLng,\n        'tolerance': 3,\n        'layerIds': [5],\n        'layerOption': 'all',\n        'bounds': map.getBounds(),\n        'width': map.getDiv().offsetWidth,\n        'height': map.getDiv().offsetHeight\n      }, function(results, err) {\n        if (err) {\n          alert(err.message + err.details.join('\\n'));\n        } else {\n          showResult(results.results, evt.latLng);\n        }\n      });\n    }\n    ```", "```js\n    //Function that is showing the result of identify\n    function showResult(results, position) {\n      if (infowindow != null) {\n        infowindow.close();\n      }\n\n      var info = '<b>State Name : </b>' + results[0].feature.attributes.STATE_NAME + '<br><b>2007 Population : </b>' + results[0].feature.attributes.POP2007;\n      infowindow = new google.maps.InfoWindow({\n        content: info,\n        position: position\n      });\n\n      infowindow.open(map);\n\n      removePolygons();\n\n      for (var j=0; j < results[0].geometry.rings.length; j++){\n        addPolygon(results[0].geometry.rings[j]);\n      }\n    }\n    ```", "```js\n    //Function that is used for adding polygons to map.\n    function addPolygon(areaCoordinates) {\n      //First we iterate over the coordinates array to create \n      // new array which includes objects of LatLng class.\n      var pointCount = areaCoordinates.length;\n\n      var areaPath = [];\n      for (var i=0; i < pointCount; i++) {\n        var tempLatLng = new google.maps.LatLng(areaCoordinates[i][1], areaCoordinates[i][0]);\n        areaPath.push(tempLatLng);\n      }\n      //Polygon properties are defined below\n      var polygonOptions = {\n        paths: areaPath,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.9,\n        strokeWeight: 3,\n        fillColor: '#FFFF00',\n        fillOpacity: 0.25\n      };\n\n      var polygon = new google.maps.Polygon(polygonOptions);\n\n      //Polygon is set to current map.\n      polygon.setMap(map);\n\n      overlays.push(polygon);\n    }\n    ```", "```js\n    //Function that is used for removing all polygons\n    function removePolygons() {\n      if (overlays) {\n        for (var i = 0; i < overlays.length; i++) {\n          overlays[i].setMap(null);\n        }\n        overlays.length = 0;\n      }\n    }\n    ```", "```js\n    //Start listening for click event to add/remove tiled map layer\n    $('#statusTile').click(function(){\n      if (this.checked) {\n        map.overlayMapTypes.insertAt(0, tiledMap);\n      }\n      else {\n        map.overlayMapTypes.removeAt(0);\n      }\n    });\n\n    //Start listening for click event to add/remove dynamic map layer\n    $('#statusDynamic').click(function(){\n      if (this.checked) {\n        dynamicMap.setMap(map);\n      }\n      else {\n        dynamicMap.setMap(null);\n      }\n    });\n    ```", "```js\n    <input type=\"checkbox\" id=\"statusTile\"/>Add Topo Map Overlay <br/>\n    <input type=\"checkbox\" id=\"statusDynamic\"/>Add Dynamic Map <br/>\n    ```", "```js\nvar topoMapURL = 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer';\nvar tiledMap = new gmaps.ags.MapType(topoMapURL, {\n  name: 'TopoMap',\n  opacity: 0.6\n});\n```", "```js\n// Adding layer to the map.\nmap.overlayMapTypes.insertAt(0, tiledMap);\n// Removing layer from the map\nmap.overlayMapTypes.removeAt(0);\n```", "```js\nvar dynamicMapURL = 'http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer';\nvar dynamicMap = new gmaps.ags.MapOverlay(dynamicMapURL, {\n  opacity: 0.8\n});\n```", "```js\n// Adding layer to the map.\ndynamicMap.setMap(map);\n// Removing layer from the map\ndynamicMap.setMap(null);\n```", "```js\nvar mapService = new gmaps.ags.MapService(dynamicMapURL);\n```", "```js\nfunction identify(evt) {\n  mapService.identify({\n    'geometry': evt.latLng,\n    'tolerance': 3,\n    'layerIds': [5],\n    'layerOption': 'all',\n    'bounds': map.getBounds(),\n    'width': map.getDiv().offsetWidth,\n    'height': map.getDiv().offsetHeight\n  }, function(results, err) {\n    if (err) {\n        alert(err.message + err.details.join('\\n'));\n    } else {\n        showResult(results.results, evt.latLng);\n    }\n  });\n}\n```", "```js\n    function WMSTiled(wmsTiledOptions) {\n\n      var options = {\n        getTileUrl: function(coord, zoom) {\n          var proj = map.getProjection();\n          var zfactor = Math.pow(2, zoom);\n\n          // get Long Lat coordinates\n          var top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 256 / zfactor, coord.y * 256 / zfactor));\n          var bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 256 / zfactor, (coord.y + 1) * 256 / zfactor));\n\n          //create the Bounding box string\n          var ne = toMercator(top);\n          var sw = toMercator(bot);\n          var bbox = ne.x + ',' + sw.y + ',' + sw.x + ','+ ne.y;\n\n          //base WMS URL\n          var url = wmsTiledOptions.url;\n          url += '&version=' + wmsTiledOptions.version;\n          url += '&request=GetMap';\n          url += '&layers=' + wmsTiledOptions.layers;\n          url += '&styles=' + wmsTiledOptions.styles;\n          url += '&TRANSPARENT=TRUE';\n          url += '&SRS=EPSG:3857';\n          url += '&BBOX='+ bbox;\n          url += '&WIDTH=256';\n          url += '&HEIGHT=256';\n          url += '&FORMAT=image/png';\n          return url;\n        },\n        tileSize: new google.maps.Size(256, 256),\n        isPng: true\n      };\n\n      return new google.maps.ImageMapType (options);\n    }\n    ```", "```js\n    function WMSFeatureInfo(mapObj, options) {\n      this.map = mapObj;\n      this.url = options.url;\n      this.version = options.version;\n      this.layers = options.layers;\n      this.callback = options.callback;    \n      this.fixedParams = 'REQUEST=GetFeatureInfo&EXCEPTIONS=application%2Fvnd.ogc.se_xml&SERVICE=WMS&FEATURE_COUNT=50&styles=&srs=EPSG:3857&INFO_FORMAT=text/javascript&format=image%2Fpng';\n\n      this.overlay = new google.maps.OverlayView();\n      this.overlay.draw = function() {};\n      this.overlay.setMap(this.map);\n    }\n\n    WMSFeatureInfo.prototype.getUrl = function(coord) {\n      var pnt = this.overlay.getProjection(). fromLatLngToContainerPixel (coord);\n      var mapBounds = this.map.getBounds();\n      var ne = mapBounds.getNorthEast();\n      var sw = mapBounds.getSouthWest();\n\n      var neMerc = toMercator(ne);\n      var swMerc = toMercator(sw);\n      var bbox = swMerc.x + ',' + swMerc.y + ',' + neMerc.x + ',' + neMerc.y;\n\n      var rUrl = this.url + this.fixedParams;\n      rUrl += '&version=' + this.version;\n      rUrl += '&QUERY_LAYERS=' + this.layers + '&Layers=' + this.layers;\n      rUrl += '&BBOX=' + bbox;\n      rUrl += '&WIDTH=' + this.map.getDiv().clientWidth + '&HEIGHT=' + this.map.getDiv().clientHeight;\n      rUrl += '&x=' + Math.round(pnt.x) + '&y=' + Math.round(pnt.y);\n      rUrl += '&format_options=callback:' + this.callback;\n      return rUrl;\n    };\n    ```", "```js\n    function toMercator(coord) {\n      var lat = coord.lat();\n      var lng = coord.lng();\n      if ((Math.abs(lng) > 180 || Math.abs(lat) > 90))\n        return;\n\n      var num = lng * 0.017453292519943295;\n      var x = 6378137.0 * num;\n      var a = lat * 0.017453292519943295;\n\n      var merc_lon = x;\n      var merc_lat = 3189068.5 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)));\n\n      return { x: merc_lon, y: merc_lat };\n    }\n    ```", "```js\n    <script src=\"img/wms-tiled.js\"></script>\n    ```", "```js\n    <script src=\"img/jquery-1.10.1.min.js\"></script>\n    ```", "```js\n    //Creating a tiled WMS Service and adding it to the map\n    var tiledWMS = new WMSTiled({\n      url: 'http://localhost:8080/geoserver/topp/wms?service=WMS',\n      version: '1.1.1',\n      layers: 'topp:states',\n      styles: ''\n    });\n    map.overlayMapTypes.push(tiledWMS);\n    ```", "```js\n    //Creating a WMSFeatureInfo class to get info from map.\n    var WMSInfoObj = new WMSFeatureInfo(map, {\n      url: 'http://localhost:8080/geoserver/topp/wms?',\n      version: '1.1.1',\n      layers: 'topp:states',\n      callback: 'getLayerFeatures'\n    });\n    ```", "```js\n    google.maps.event.addListener(map, 'click', function(e){\n      //WMS Feature Info URL is prepared by the help of\n      //getUrl method of WMSFeatureInfo object created before\n      var url = WMSInfoObj.getUrl(e.latLng);\n      $.ajax({\n        url: url,\n        dataType: 'jsonp',\n        jsonp: false,\n        jsonpCallback: 'getLayerFeatures'\n      }).done(function(data) {\n        if (infowindow != null) {\n          infowindow.close();\n        }\n\n        var info = '<b>State Name : </b>' + data.features[0].properties.STATE_NAME + '<br><b>Population : </b>' + data.features[0].properties.SAMP_POP;\n        infowindow = new google.maps.InfoWindow({\n          content: info,\n          position: e.latLng\n        });\n\n        infowindow.open(map);\n      });\n    });\n    ```", "```js\nvar proj = map.getProjection();\nvar zfactor = Math.pow(2, zoom);\n// get Long Lat coordinates\nvar top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 256 / zfactor, coord.y * 256 / zfactor) );\nvar bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 256 / zfactor, (coord.y + 1) * 256 / zfactor));\n//create the Bounding box string\nvar ne = toMercator(top);\nvar sw = toMercator(bot);\nvar bbox = ne.x + ',' + sw.y + ',' + sw.x + ',' + ne.y;\n```", "```js\nvar pnt = this.overlay.getProjection ().fromLatLngToContainerPixel(coord);\nrUrl += '&x=' + Math.round(pnt.x) + '&y=' + Math.round(pnt.y);\n```"]