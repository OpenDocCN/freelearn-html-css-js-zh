["```js\n    <script src=\"img/esri-Leaflet\"></script>\n    ```", "```js\n    var gray = L.esri.basemapLayer(\"Gray\").addTo(map);\n    ```", "```js\n    var gray = L.esri.basemapLayer(\"Gray\",{detectRetina: true}).addTo(map);\n    ```", "```js\nvar map = L.map('map').setView([37.75,-122.45], 12);\nL.esri.basemapLayer(\"Topographic\").addTo(map);\n```", "```js\ngray.setOpacity(.75);   \ngray.on(\"load\", alertme);\nfunction alertme(){alert(\"ESRI Basemap Loaded\");}\n```", "```js\nvar grayLabel = L.esri.basemapLayer(\"GrayLabels\").addTo(map);\n```", "```js\n    <script src=\"img/leaflet.shpfile.js\"></script>\n    <script src=\"img/shp.js\"></script>\n    ```", "```js\n    var shpfile = new L.Shapefile('council.zip');\n    shpfile.addTo(map);\n    ```", "```js\nvar shpfile = new \n   L.Shapefile('council.zip',{onEachFeature:function(feature, layer) {\nlayer.bindPopup(\"<a \nhref='\"+feature.properties.WEBPAGE+\"'>Page</a><br><a href='\"+feature.properties.PICTURE+\"'>Image</a>\");\n}});\n```", "```js\nvar holder=[];\n\nfor (var key in feature.properties){ \nholder.push(key+\": \"+feature.properties[key]+\"<br>\");\npopupContent=holder.join(\"\");\nlayer.bindPopup(popupContent);\n}\nshapefile.addTo(map);\n```", "```js\nvar shpfile = new \nL.Shapefile('council.zip',{style:function(feature){return  {color:\"black\",fillColor:\"red\",fillOpacity:.75}}});\n```", "```js\n    <script src=\"img/esri-Leaflet\"></script>\n    ```", "```js\n    var art = L.esri.dynamicMapLayer(\"http://coagisweb.cabq.gov/arcgis/re st/services/public/PublicArt/MapServer).addTo(map);\n    ```", "```js\n    art.bindPopup(function (err, feature) { \n    return feature.features[0].properties.TITLE+\"<br> by:  <b>\"+feature.features[0].properties.ARTIST;  });\n    ```", "```js\n    <script src=\"img/esri-Leaflet\"></script>\n    <script src=\"img/esri-leaflet-heatmap-feature- layer.js\"></script>\n    <script src=\"img/leaflet-heat.js\"></script>\n    ```", "```js\n    url= (\"http://services.arcgis.com/pmcEyn9tLWCoX7Dm/arcgis/rest/ services/USGS_Earthquakes_Excel_Layer/FeatureServer/0\";\n    var heatmap = new L.esri.HeatmapFeatureLayer(url, {\n                radius: 50,\n       blur:90,\n       maxZoom:10\n    }).addTo(map);\n    ```", "```js\n    <script src=\"img/esri-leaflet-geocoder.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://cdn- geoweb.s3.amazonaws.com/esri-leaflet-geocoder/0.0.1- beta.3/esri-leaflet-geocoder.css\">\n    ```", "```js\n    var searchControl = new  L.esri.Controls.Geosearch().addTo(map);\n    ```", "```js\n      var results = new L.LayerGroup().addTo(map);\n    ```", "```js\n    searchControl.on(\"results\", function(data){\n    results.clearLayers();\n    results.addLayer(L.marker(data.results[0].latlng));\n    ```", "```js\n    <script src=\"img/esri-leaflet- geocoder.js\"></script>\n    ```", "```js\n    var x = location.search;\n    var y = x.split(\"=\");\n    var temp=y[1];\n    var address = decodeURIComponent(temp);\n    var geocodeService = new L.esri.Services.Geocoding();\n    ```", "```js\n    geocodeService.geocode(address, {}, function(error,  result){\n    L.marker(result[0].latlng).addTo(map);\n    map.setView(result[0].latlng,8);\n    });\n    ```", "```js\n    <script src=\"img/esri-Leaflet\"></script>\n    <script src=\"img/esri-leaflet-geocoder.js\"></script>\n    ```", "```js\n      var geocodeService = new L.esri.Services.Geocoding();\n    ```", "```js\n    map.on('click', function(e){\n    geocodeService.reverse(e.latlng, {}, function(error,  result){\n    r = L.marker(result.latlng).addTo(map).bindPopup(result.address ).openPopup();\n        });\n     });\n    ```", "```js\n    <style>\n      #query {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 10;\n        background: white;\n        padding: 1em;\n      }\n      #query select {\n        font-size: 16px;\n      }\n    </style>\n    ```", "```js\n    <label>\n     Status\n      <select id=\"caseStatus\">\n        <option value=''>Clear Screen</option>\n        <option value='Open'>Open</option>\n        <option value='Closed'>Closed</option>\n          </select>\n    </label>\n    ```", "```js\n    var graffiti =  L.esri.featureLayer('http://services.arcgis.com/ rOo16HdIMeOBI4Mb/ArcGIS/rest/services/Graffiti_Locations3 /FeatureServer/0', {\n       pointToLayer: function (geojson, latlng, feature) {\n          return L.marker(latlng);\n        },\n      }).addTo(map);\n    ```", "```js\n    var popupTemplate = \n       \"<h3>Details:</h3>Address:{Incident_Address_Display}<br>\n    Borough: {Borough}<br>Community Board: \n    {Community_Board}<br>Police Precinct:  {Police_Precinct}<br>City_Council_District: {City_Council_District}<br>Created_Date: {Created_Date}<br>Status: {Status}<br>Resolution_Action: {Resolution_Action}<br>Closed_Date: {Closed_Date}<br>City: {City}<br>State: {State}\";\n    graffiti.bindPopup(function(feature){\n    return L.Util.template(popupTemplate, feature.properties)\n          });\n    ```", "```js\n      caseStatus.addEventListener('change', function(){\n      graffiti.setWhere('Status=\"'+caseStatus.value+'\"');\n      });\n    ```", "```js\n    var graffiti = L.esri.featureLayer('http://services.arcgis.com/ rOo16HdIMeOBI4Mb/ArcGIS/rest/services/Graffiti_Locations3/FeatureServer/0', {\n       pointToLayer: function (geojson, latlng) {\n          return L.circleMarker(latlng);\n        },\n      }).addTo(map);\n    ```", "```js\n    var popupTemplate = \"<h3>Details:</h3>Address: Incident_Address_Display}<br>Borough: {Borough}<br>Community Board: Community_Board}<br>Police Precinct: {Police_Precinct}<br>City_Council_District: City_Council_District}<br>Created_Date: {Created_Date}<br>Status: Status}<br>Resolution_Action: {Resolution_Action}<br>Closed_Date: Closed_Date}<br>City: {City}<br>State: {State}\";\n    graffiti.bindPopup(function(feature){\n    return L.Util.template(popupTemplate, feature.properties)\n      });\n    ```", "```js\n    var query = \n    L.esri.Tasks.query('http://services.arcgis.com/  rOo16HdIMeOBI4Mb/ArcGIS/rest/services/  Graffiti_Locations3/FeatureServer /0');\n    ```", "```js\n    map.on('click', runQuery);\n    ```", "```js\n    function runQuery(e){\n    graffiti.query().nearby(e.latlng,804).ids(function  (error,ids){\n    graffiti.setStyle(function(){return { color: \"blue\"};});\n    for(var i=0;i<ids.length;i++){graffiti.setFeatureStyle(ids[i], {color:\"green\"});}});\n    }\n    ```"]