["```js\n$ ionic start MyFormValidation blank\n$ cd MyFormValidation\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ThankyouPage } from '../pages/thankyou/thankyou';\nimport { MyFormService } from '../services/myform';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ThankyouPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ThankyouPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    MyFormService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ mkdir ./src/services\n```", "```js\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MyFormService {\n    public name: string = '';\n    public phone: number;\n    public comment: string = '';\n}\n```", "```js\n<ion-header>\n  <ion-navbar color=\"primary\">\n    <ion-title>\n      Contact Form\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <p class=\"center\">\n    <ion-icon class=\"large lighter\" primary name=\"contact\"></ion-icon>\n  </p>\n\n  <form #f=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(f)\">\n    <ion-list>\n      <ion-item>\n        <ion-label floating>Name</ion-label>\n        <ion-input type=\"text\" name=\"name\" required \n        [(ngModel)]=\"data.name\"></ion-input>\n      </ion-item>\n      <div [hidden]=\"f.controls.name && (f.controls.name.valid || \n      (f.controls.name.pristine && !isSubmitted))\" class=\"note danger\">\n        Name is required\n      </div>\n\n      <ion-item>\n        <ion-label floating>Phone</ion-label>\n        <ion-input type=\"tel\" name=\"phone\" [(ngModel)]=\"data.phone\">\n      </ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label floating>Comment</ion-label>\n        <ion-input type=\"text\" required minlength=4 name=\"comment\" \n        [(ngModel)]=\"data.comment\">\n        </ion-input>\n      </ion-item>\n      <div *ngIf=\"(isSubmitted && f.controls.comment && \n      f.controls.comment.pristine) || ((f.controls.comment) && \n      (f.controls.comment.dirty && f.controls.comment.errors))\" class=\"note \n      danger\">\n        Please enter {{ 4 - (f.controls.comment.errors.minlength ? \n        f.controls.comment.errors.minlength.actualLength : 0) }} more\n        characters\n      </div>\n      <ion-item class=\"tos\">\n        <ion-toggle item-left [(ngModel)]=\"data.tos\" name=\"tos\" \n        type=\"button\" (click)=\"noSubmit($event)\"></ion-toggle>\n        <ion-label item-right>Agree to terms and conditions\n        </ion-label>\n      </ion-item>\n      <div [hidden]=\"(!isSubmitted) || (f.controls.tos && data.tos)\" \n       class=\"note danger\">\n        Please check Agree!\n      </div>\n    </ion-list>\n    <div class=\"center\">\n      <button ion-button type=\"submit\" round outline>Submit</button>\n    </div>\n  </form>\n</ion-content>\n```", "```js\npage-home {\n    .center {\n        text-align: center;\n    }\n    ion-icon.large {\n        font-size: 7em;\n    }\n    ion-icon.lighter {\n        opacity: 0.5;\n    }\n    ion-list > .item:first-child {\n        border-top: 0;\n    }\n    ion-list > .item:last-child, ion-list > ion-itemsliding:last-child .item \n   {\n        border-bottom: 0;\n    }\n    .tos {\n        padding-top: 10px;\n        ion-toggle {\n            padding-left: 0px;\n        }\n        .item-inner {\n            border-bottom: 0;\n        }\n    }\n    .item ion-toggle {\n        padding-left: 0;\n    }\n    .note.danger {\n        padding-left: 16px;\n        color: #d14;\n    }\n}\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { ThankyouPage } from '../thankyou/thankyou';\nimport { MyFormService } from '../../services/myform';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  private data: any;\n  private isSubmitted: Boolean = false;\n  constructor(public nav: NavController, private formData:\n    MyFormService) {\n    this.nav = nav;\n    this.formData = formData;\n    this.data = {\n      name: '',\n      phone: '',\n      comment: '',\n      tos: false\n    }\n  }\n  onSubmit(myForm) {\n    this.isSubmitted = true;\n    console.log('onSubmit');\n    console.log(myForm);\n    if ((myForm.valid) && (myForm.value.tos)) {\n      this.formData.name = this.data.name;\n      this.formData.phone = this.data.phone;\n      this.formData.comment = this.data.comment;\n      this.nav.push(ThankyouPage);\n    }\n  }\n  noSubmit(e) {\n    e.preventDefault();\n  }\n}\n```", "```js\n$ mkdir ./src/pages/thankyou \n```", "```js\nimport { Component } from '@angular/core';\nimport { MyFormService } from '../../services/myform';\n@Component({\n    selector: 'page-thankyou',\n    templateUrl: 'thankyou.html'\n})\nexport class ThankyouPage {\n    constructor(private formData: MyFormService) {\n        this.formData = formData;\n    }\n}\n```", "```js\n<ion-header>\n    <ion-navbar color=\"secondary\">\n        <ion-title>\n            Thank You\n        </ion-title>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <h6 class=\"padding\">\n        You submitted the following information\n    </h6>\n    <div class=\"my-table\">\n        <ion-row>\n            <ion-col width-25 class=\"my-label\">Name</ion-col>\n            <ion-col width-75>{{ formData.name }}</ion-col>\n        </ion-row>\n        <ion-row>\n            <ion-col width-25 class=\"my-label\">Phone</ion-col>\n            <ion-col width-75>{{ formData.phone }}</ion-col>\n        </ion-row>\n        <ion-row>\n            <ion-col width-25 class=\"my-label\">Comment</ion-col>\n            <ion-col width-75>{{ formData.comment }}</ion-col>\n        </ion-row>\n    </div>\n</ion-content>\n```", "```js\npage-thankyou {\n    h6.padding {\n        color: #4C555A;\n        padding: 10px;\n    }\n    .my-label {\n        text-align: right;\n        font-weight: bold;\n    }\n    .my-table {\n        ion-row {\n            color: #4C555A;\n            padding: 0;\n            height: 30px;\n        }\n        ion-row + ion-row {\n            margin-top: 0;\n        }\n        ion-row:nth-child(odd) ion-col {\n            background: #F9FAFB;\n        }\n    }\n}\n```", "```js\n$ ionic serve\n```", "```js\n<form #f=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(f)\"> \n```", "```js\n<ion-input type=\"text\" name=\"name\" required [(ngModel)]=\"data.name\"></ion-input> \n```", "```js\n<div [hidden]=\"f.controls.name && (f.controls.name.valid || (f.controls.name.pristine && !isSubmitted))\" class=\"note danger\"> \n  Name is required \n</div>\n```", "```js\n<ion-input type=\"tel\" name=\"phone\" [(ngModel)]=\"data.phone\"></ion-input> \n```", "```js\n<ion-input type=\"text\" required minlength=4 name=\"comment\" [(ngModel)]=\"data.comment\"></ion-input> \n```", "```js\n<div *ngIf=\"(isSubmitted && f.controls.comment && \n f.controls.comment.pristine) || ((f.controls.comment) && \n (f.controls.comment.dirty && f.controls.comment.errors))\" \n class=\"note danger\"> Please enter {{ 4 - (f.controls.comment.errors.minlength \n ? \n f.controls.comment.errors.minlength.actualLength : 0) }} more \n characters \n</div> \n```", "```js\nonSubmit(myForm) { \n  this.isSubmitted = true; \n  console.log('onSubmit'); \n  console.log(myForm); \n\n  if ((myForm.valid) && (myForm.value.tos)) { \n    this.formData.name = this.data.name; \n    this.formData.phone = this.data.phone; \n    this.formData.comment = this.data.comment; \n    this.nav.push(ThankyouPage); \n  } \n} \n```", "```js\n$ ionic start ReactiveForm blank\n$ cd ReactiveForm\n```", "```js\n<ion-header>\n<ion-navbar color=\"primary\">\n<ion-title>\nReactive Form\n</ion-title>\n</ion-navbar>\n</ion-header>\n\n<ion-content padding>\n<p class=\"center\">\n<ion-icon class=\"large lighter\" primary name=\"contact\"></ion-icon>\n</p> \n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n<ion-list>\n<ion-item>\n<ion-label floating>Username</ion-label>\n<ion-input type=\"text\" formControlName=\"username\"></ion-input>\n</ion-item>\n<ion-item>\n<ion-label floating>Email</ion-label>\n<ion-input type=\"email\" formControlName=\"email\"></ion-input>\n</ion-item>\n\n<ion-item>\n<ion-label floating>Password</ion-label>\n<ion-input type=\"password\" formControlName=\"pass\"></ion-input>\n</ion-item>\n\n<ion-item>\n<ion-label floating>Confirm Password</ion-label>\n<ion-input type=\"password\" formControlName=\"repass\"></ion-input>\n</ion-item>\n\n<ion-item text-wrap class=\"error\">\n<div *ngIf=\"registerForm.controls['username'].dirty && registerForm.controls['username'].invalid\">\nUsername should at least have 10 Characters.\n</div>\n<div *ngIf=\"registerForm.controls['email'].dirty && registerForm.controls['email'].invalid\">\nEmail is incorrect.\n</div>\n<div *ngIf=\"registerForm.controls['pass'].dirty && registerForm.controls['pass'].invalid\">\nPassword should be 8 Character long.\n</div>\n<div *ngIf=\"registerForm.controls['repass'].dirty && registerForm.controls['repass'].invalid\">\nChoose same password in confirm password field.\n</div>\n</ion-item>\n</ion-list>\n<button ion-button full type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n</form>\n\n</ion-content>\n```", "```js\npage-home {\n .center {\n text-align: center;\n }\n ion-icon.large {\n font-size: 7em;\n }\n ion-icon.lighter {\n opacity: 0.5;\n }\n .error {\n color: red;\n }\n}\n```", "```js\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { confirmPassword } from \"../../app/confirmPassword\";\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  registerForm:FormGroup;\n\n  constructor(public navCtrl: NavController, private fb:FormBuilder, \n    private alertCtrl: AlertController) {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(10)]],\n      email: ['', [Validators.required, Validators.email]],\n      pass: ['', [Validators.required, Validators.minLength(8)]],\n      repass: ['', [Validators.required, Validators.minLength(8)]],\n    }, {\n      validator: confirmPassword('pass', 'repass')\n    });\n  }\n\n  onSubmit() {\n    this.alertCtrl.create({\n      title: 'Your inputs are:',\n      message: JSON.stringify(this.registerForm.value),\n      buttons: ['Dismiss']\n    })\n    .present();\n    console.log(this.registerForm);\n  }\n\n}\n```", "```js\nimport { FormGroup } from '@angular/forms';\n\nexport function confirmPassword(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey],\n          passwordConfirmationInput = \n          group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({notEquivalent: true})\n      }\n      else {\n          return passwordConfirmationInput.setErrors(null);\n      }\n    }\n  }\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic serve\n```", "```js\nthis.myForm = new FormGroup({\n first: new FormControl('Nancy', Validators.minLength(2)),\n last: new FormControl('Drew'),\n});\n```", "```js\n<form formGroup=\"myForm\" novalidate>\n <input type=\"text\" formControlName=\"first\"/>\n <input type=\"text\" formControlName=\"last\" />\n</form>\n```", "```js\nthis.registerForm = this.fb.group({\n username: ['', [Validators.required, Validators.minLength(10)]],\n email: ['', [Validators.required, Validators.email]],\n pass: ['', [Validators.required, Validators.minLength(8)]],\n repass: ['', [Validators.required, Validators.minLength(8)]],\n }, {\n validator: confirmPassword('pass', 'repass')\n});\n```", "```js\nexport function confirmPassword(passwordKey: string, passwordConfirmationKey: string) {\n return (group: FormGroup) => {\n     let passwordInput = group.controls[passwordKey],\n     passwordConfirmationInput = group.controls[passwordConfirmationKey];\n     if (passwordInput.value !== passwordConfirmationInput.value) {\n         return passwordConfirmationInput.setErrors({notEquivalent: true})\n     }\n     else {\n         return passwordConfirmationInput.setErrors(null);\n     }\n }\n}\n```", "```js\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n```", "```js\n <ion-item>\n   <ion-label floating>Username</ion-label>\n   <ion-input type=\"text\" formControlName=\"username\"></ion-input>\n </ion-item>\n```", "```js\n<ion-item text-wrap class=\"error\">\n <div *ngIf=\"registerForm.controls['username'].dirty && registerForm.controls['username'].invalid\">\n Username should at least have 10 Characters.\n </div>\n <div *ngIf=\"registerForm.controls['email'].dirty && registerForm.controls['email'].invalid\">\n Email is incorrect.\n </div>\n <div *ngIf=\"registerForm.controls['pass'].dirty && registerForm.controls['pass'].invalid\">\n Password should be 8 Character long.\n </div>\n <div *ngIf=\"registerForm.controls['repass'].dirty && registerForm.controls['repass'].invalid\">\n Choose same password in confirm password field.\n </div>\n </ion-item>\n```", "```js\n<button ion-button full type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n```", "```js\nonSubmit() {\n this.alertCtrl.create({\n     title: 'Your inputs are:',\n     message: JSON.stringify(this.registerForm.value),\n     buttons: ['Dismiss']\n })\n .present();\n  console.log(this.registerForm);\n }\n```", "```js\n$ sudo npm install -g http-server\n```", "```js\n$ mkdir MockRest\n$ cd MockRest\n```", "```js\n[ \n  { \n    \"title\": \"What a beautiful song\", \n    \"category\": \"objects\", \n    \"description\": \"Music is a moral law. It gives soul to the universe, wings to the mind, flight to the imagination, and charm and gaiety to life and to everything.\" \n  }, \n  { \n    \"title\": \"The world we live in\", \n    \"category\": \"nature\", \n    \"description\": \"Look deep into nature, and then you will understand everything better.\" \n  }, \n  { \n    \"title\": \"Life experiences\", \n    \"category\": \"people\", \n    \"description\": \"People who know little are usually great talkers, while \n    men who know much say little.\" \n  } \n]\n```", "```js\n$ http-server --cors=Access-Control-Allow-Origin\n\n```", "```js\n$ ionic start MyRestbackend blank\n$ cd MyRestbackend\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Home\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card #myCard *ngFor=\"let item of quotes.data\">\n    <img [src]='\"https://source.unsplash.com/category/\" + item.category + \"/600x390\"' [height]=\"myCard.clientWidth * 390 / 600\" />\n    <ion-card-content>\n      <ion-card-title>\n        {{ item.title }}\n      </ion-card-title>\n      <p>\n        {{ item.description }}\n      </p>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { QuoteService } from '../../services/quote';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  constructor(public navCtrl: NavController, public quotes:QuoteService) {\n    this.quotes = quotes;\n    this.quotes.getQuotes();\n  }\n}\n```", "```js\npage-home {\n    ion-card {\n        img {\n            background-color: #f4f4f4;\n        }\n    }\n}\n```", "```js\n$ mkdir ./src/services\n```", "```js\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class QuoteService {\n    private http: any;\n    public data: any;\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n    getQuotes() {\n        this.http.get(\"http://localhost:8080/test.json\")\n            .subscribe(res => {\n                this.data = res;\n                console.log(this.data, this.http);\n            }, error => {\n                console.log(error);\n            });\n    }\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { QuoteService } from '../services/quote'\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    QuoteService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic serve \n```", "```js\nimport {Injectable} from '@angular/core'; \nimport {Http} from '@angular/http';\n```", "```js\n  getQuotes() { \n    this.http.get(\"http://localhost:8080/test.json\") \n      .subscribe(res => { \n        this.data = res.json(); \n        console.log(this.data); \n      }, error => { \n        console.log(error); \n      }); \n  } \n```", "```js\nthis.data = JSON.parse(res._body); \n```", "```js\n<ion-card #myCard *ngFor=\"let item of quotes.data\"> \n    <img [src]='\"https://source.unsplash.com/category/\" + item.category + \"/600x390\"' [height]=\"myCard.clientWidth * 390 / 600\"/> \n```", "```js\n$ ionic start StripePayment blank\n$ cd StripePayment\n```", "```js\n<script type=\"text/javascript\" \nsrc=\"img/\"></script>\n```", "```js\n<ion-content class=\"gray-bg\">\n  <p class=\"center\">\n    <ion-icon class=\"icon-large\" name=\"card\"></ion-icon>\n  </p>\n  <ion-card>\n    <ion-card-content>\n      <ion-card-header>\n        Credit or debit card\n      </ion-card-header>\n        <ion-item>\n          <div #cardElement>\n            <!-- a Stripe Element will be inserted here. -->\n          </div>\n        </ion-item>\n        <button ion-button full (click)=\"onSubmit()\">Pay</button>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component, ViewChild } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { ThankyouPage } from '../thankyou/thankyou'\ndeclare var Stripe: any;\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  private token: string = '';\n  private card:any;\n  private elements:any;\n  private stripe:any;\n  @ViewChild('cardElement') cardElement;\n  constructor(public nav: NavController) {\n    this.nav = nav;\n    this.stripe = Stripe('YOUR STRIPE PUBLIC KEY HERE');\n    this.elements = this.stripe.elements();\n  }\n\n  ngOnInit() { \n    const style = {\n      base: {\n        fontSize: '16px',\n        lineHeight: '24px',\n        marginBottom: '10px'\n      },\n    };\n    this.card = this.elements.create('card', {style});\n    this.card.mount(this.cardElement.nativeElement);\n  }\n  onSubmit() {\n    this.stripe.createToken(this.card)\n    .then((data) => {\n      this.stripeResponseHandler(data);\n    });\n  }\n\n  stripeResponseHandler(response) {\n    if (response.error) {\n      // Show the errors on the form\n      console.log('error');\n      console.log(response.error.message);\n    } else {\n      // response contains id and card, which contains additional card   \n      //details\n      this.token = response.token.id;\n      // Insert the token into the form so it gets submitted to the server\n      console.log('success');\n      console.log('Sending token param:');\n      console.log(this.token);\n      this.nav.push(ThankyouPage, { token: this.token });\n    }\n  }\n}\n```", "```js\n.page-home {\n    .center {\n        text-align: center;\n    }\n    .gray-bg {\n        background-color: #f4f4f7;\n    }\n    .icon-large {\n        font-size: 150px;\n        color: #387ef5;\n        opacity: 0.5;\n    }\n}\n```", "```js\n$ mkdir ./src/pages/thankyou\n```", "```js\n<ion-content class=\"green-bg\"> \n  <h4 class=\"center\"> \n    Your token is \n  </h4> \n  <p class=\"center\"> \n    <code> \n      {{ token }} \n    </code> \n  </p> \n</ion-content> \n```", "```js\nimport { Component } from '@angular/core'; \nimport { NavController, NavParams } from 'ionic-angular'; \n\n@Component({ \n  selector: 'thank-you', \n  templateUrl: 'thankyou.html' \n}) \nexport class ThankyouPage { \n  private token: string = ''; \n\n  constructor(public nav: NavController, public params: \n   NavParams) { \n    this.token = this.params.get('token'); \n    console.log('Getting token param:'); \n    console.log(this.token); \n  } \n\n} \n```", "```js\nthank-you {\n    .green-bg {\n        color: black;\n        background-color: #32db64;\n    }\n    h4.center {\n        padding-top: 150px;\n    }\n    .center {\n        text-align: center;\n    }\n}\n```", "```js\nimport { NgModule } from '@angular/core'; \nimport { IonicApp, IonicModule } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \nimport { ThankyouPage } from '../pages/thankyou/thankyou' \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage, \n    ThankyouPage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage, \n    ThankyouPage \n  ], \n  providers: [] \n}) \nexport class AppModule {} \n```", "```js\n$ ionic serve\n```", "```js\ndeclare var Stripe: any; \n```", "```js\n this.card = this.elements.create('card', {style});\n this.card.mount(this.cardElement.nativeElement);\n```", "```js\n<div #cardElement>\n <!-- a Stripe Element will be inserted here. -->\n</div>\n```", "```js\n onSubmit() {\n    this.stripe.createToken(this.card)\n    .then((data) => {\n      this.stripeResponseHandler(data);\n    });\n  }\n```", "```js\n<button type=\"button\" ion-button bottom block \n (click)=\"onSubmit()\">Pay</button>\n```", "```js\n   stripeResponseHandler(response) {\n    if (response.error) {\n      // Show the errors on the form\n      console.log('error');\n      console.log(response.error.message);\n    } else {\n      // response contains id and card, which contains additional card details\n      this.token = response.token.id;\n      // Insert the token into the form so it gets submitted to the server\n      console.log('success');\n      console.log('Sending token param:');\n      console.log(this.token);\n      this.nav.push(ThankyouPage, { token: this.token });\n    }\n  }\n```", "```js\nthis.nav.push(ThankyouPage, {token: this.token}); \n```", "```js\nthis.params.get('token');\n```"]