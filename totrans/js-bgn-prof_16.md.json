["```js\n4 + 10\n14\nconsole.log(\"Laurence\");\nLaurence\nundefined \n```", "```js\n<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Tester</title>\n</head>\n\n<body>\n  <script>\n    console.log(\"hello world\");\n  </script>\n</body>\n\n</html> \n```", "```js\n<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Tester</title>\n</head>\n\n<body>\n  <script src=\"img/app.js\"></script>\n</body>\n\n</html> \n```", "```js\nlet a = 10; // assign a value of 10 to variable a\nconsole.log(a); // This will output 10 into the console\n/*\nThis is a multi-line\nComment\n*/ \n```", "```js\n<!doctype html>\n<html>\n  <head>\n    <title>JS Tester</title>\n  </head>\n  <body>\n    <script src=\"img/myJS.js\"></script>\n  </body>\n</html>\n// console.log(\"Laurence\");\n/*\nThis is my comment\nLaurence Svekis\n*/ \n```", "```js\nconsole.log(typeof(str1));\nconsole.log(typeof(str2));\nconsole.log(typeof(val1));\nconsole.log(typeof(val2));\nconsole.log(typeof(myNum)); \n```", "```js\nconst myName = \"Maaike\";\nconst myAge = 29;\nconst coder = true;\nconst message = \"Hello, my name is \" + myName + \", I am \" + myAge+\" years old and I can code JavaScript: \" + coder + \".\"; \nconsole.log(message); \n```", "```js\nlet a = window.prompt(\"Value 1?\");\nlet b = window.prompt(\"Value 2?\");\na = Number(a);\nb = Number(b);\nlet hypotenuseVal = ((a * a) + (b * b))**0.5;\nconsole.log(hypotenuseVal); \n```", "```js\nlet a = 4;\nlet b = 11;\nlet c = 21;\na = a + b;\na = a / c;\nc = c % b;\nconsole.log(a, b, c); \n```", "```js\n//Convert miles to kilometers. \n//1 mile equals 1.60934 kilometers.\nlet myDistanceMiles = 130;\nlet myDistanceKM = myDistanceMiles * 1.60934;\nconsole.log(\"The distance of \" + myDistanceMiles + \" miles is equal to \" + myDistanceKM + \" kilometers\"); \n```", "```js\n//1 inch = 2.54 centimetres.\n//2.2046 pounds in a kilo\nlet inches = 72;\nlet pounds = 180;\nlet weight = pounds / 2.2046; // in kilos\nlet height = inches * 2.54; // height in centimetres\nconsole.log(weight, height);\nlet bmi = weight/(height/100*height/100);\nconsole.log(bmi); \n```", "```js\nconst myList = [\"Milk\", \"Bread\", \"Apples\"];\nconsole.log(myList.length);\nmyList[1] = \"Bananas\";\nconsole.log(myList); \n```", "```js\nconst myList = [];\nmyList.push(\"Milk\", \"Bread\", \"Apples\");\nmyList.splice(1, 1, \"Bananas\", \"Eggs\");\nconst removeLast = myList.pop();\nconsole.log(removeLast);\nmyList.sort();\nconsole.log(myList.indexOf(\"Milk\"));\nmyList.splice(1, 0, \"Carrots\", \"Lettuce\");\nconst myList2 = [\"Juice\", \"Pop\"];\nconst finalList = myList.concat(myList2, myList2);\nconsole.log(finalList.lastIndexOf(\"Pop\"));\nconsole.log(finalList); \n```", "```js\nconst myArr = [1, 2, 3];\nconst bigArr = [myArr, myArr, myArr];\nconsole.log(bigArr[1][1]);\nconsole.log(bigArr[0][1]); \nconsole.log(bigArr[2][1]); \n```", "```js\nconst myCar = {\n    make: \"Toyota\",\n    model: \"Camry\",\n    tires: 4,\n    doors: 4,\n    color: \"blue\",\n    forSale: false\n};\nlet propColor = \"color\";\nmyCar[propColor] = \"red\";\npropColor = \"forSale\";\nmyCar[propColor] = true;\nconsole.log(myCar.make + \" \" + myCar.model);\nconsole.log(myCar.forSale); \n```", "```js\nconst people = {friends:[]};\nconst friend1 = {first: \"Laurence\", last: \"Svekis\", id: 1};\nconst friend2 = {first: \"Jane\", last: \"Doe\", id: 2};\nconst friend3 = {first: \"John\", last: \"Doe\", id: 3};\npeople.friends.push(friend1, friend2, friend3);\nconsole.log(people); \n```", "```js\ntheList.pop(); \ntheList.shift(); \ntheList.unshift(\"FIRST\"); \ntheList[3] = \"hello World\"; \ntheList[2] = \"MIDDLE\"; \ntheList.push(\"LAST\"); \nconsole.log(theList); \n```", "```js\nconst inventory = [];\nconst item3 = {\n    name: \"computer\",\n    model: \"imac\",\n    cost: 1000,\n    qty: 3\n}\nconst item2 = {\n    name: \"phone\",\n    model: \"android\",\n    cost: 500,\n    qty: 11\n}\nconst item1 = {\n    name: \"tablet\",\n    model: \"ipad\",\n    cost: 650,\n    qty: 1\n}\ninventory.push(item1, item2, item3);\nconsole.log(inventory);\nconsole.log(inventory[2].qty); \n```", "```js\n    -1\n    1 \n    ```", "```js\n    const myArr = [1,3,5,6,8,9,15];\n    myArr.splice(1,1,4);\n    console.log(myArr); \n    ```", "```js\n    [empty Ã— 10, \"test\"]\n    undefined \n    ```", "```js\n    undefined \n    ```", "```js\nconst test = false;\nconsole.log(test);\nif(test){\n    console.log(\"It's True\");\n}\nif(!test){\n    console.log(\"False now\");\n} \n```", "```js\nlet age = prompt(\"How old are you?\");\nage = Number(age);\nlet message;\nif(age >= 21){\n    message = \"You can enter and drink.\";\n}else if(age >= 19){\n    message = \"You can enter but not drink.\";\n}else{\n    message = \"You are not allowed in!\";\n}\nconsole.log(message); \n```", "```js\nconst id = true;\nconst message = (id) ? \"Allowed In\" : \"Denied Entry\";\nconsole.log(message); \n```", "```js\nconst randomNumber = Math.floor(Math.random() * 6);\nlet answer = \"Something went wrong\";\nlet question = prompt(\"Ask me anything\");\nswitch (randomNumber) {\n    case 0:\n        answer = \"It will work out\";\n        break;\n    case 1:\n        answer = \"Maybe, maybe not\";\n        break;\n    case 2:\n        answer = \"Probably not\";\n        break;\n    case 3:\n        answer = \"Highly likely\";\n        break;\n    default:\n        answer = \"I don't know about that\";\n}\nlet output = \"You asked me \" + question + \". I think that \" + answer;\nconsole.log(output); \n```", "```js\nlet prize = prompt(\"Pick a number 0-10\");\nprize = Number(prize);\nlet output = \"My Selection: \";\nswitch (prize){\n    case 0: \n        output += \"Gold \";\n    case 1:\n        output += \"Coin \";\n        break;\n    case 2:\n        output += \"Big \";\n    case 3:\n        output += \"Box of \";\n    case 4:\n        output += \"Silver \";\n    case 5:\n        output += \"Bricks \";\n        break;\n    default:\n        output += \"Sorry Try Again\";\n}\nconsole.log(output); \n```", "```js\nlet val = prompt(\"What number?\");\nval = Number(val);\nlet num = 100;\nlet message = \"nothing\";\nif (val > num) {\n    message = val + \"  was greater than \" + num;\n} else if (val === num) {\n    message = val + \"  was equal to \" + num;\n} else {\n    message = val + \" is less than \" + num;\n}\nconsole.log(message);\nconsole.log(message); \n```", "```js\nlet person = prompt(\"Enter a name\");\nlet message;\nswitch (person) {\n    case \"John\" :\n    case \"Larry\" :\n    case \"Jane\" :\n    case \"Laurence\" :\n    message = person + \" is my friend\";\n    break;\n    default :\n    message = \"I don't know \" + person;\n}\nconsole.log(message); \n```", "```js\nconst myArr = [\"Rock\", \"Paper\", \"Scissors\"]; \nlet computer = Math.floor(Math.random() * 3); \nlet player = Math.floor(Math.random() * 3); \nlet message = \"player \" + myArr[player] + \" vs computer \" + myArr[computer] + \" \"; \nif (player === computer) { \n    message += \"it's a tie\"; \n} else if (player > computer) { \n    if (computer == 0 && player == 2) { \n        message += \"Computer Wins\"; \n    } else { \n        message += \"Player Wins\"; \n    } \n} else { \n    if (computer == 2 && player == 0) { \n        message += \"Player Wins\"; \n    } else { \n        message += \"Computer Wins\"; \n    } \n} \nconsole.log(message); \n```", "```js\n    100 was LESS or Equal to 100\n    100 is Even \n    ```", "```js\nconst max = 5;\nconst ranNumber = Math.floor(Math.random() * max) + 1;\n//console.log(ranNumber);\nlet correct = false;\nwhile (!correct) {\n    let guess = prompt(\"Guess a Number 1 - \" + max);\n    guess = Number(guess);\n    if (guess === ranNumber) {\n        correct = true;\n        console.log(\"You got it \" + ranNumber);\n    } else if (guess > ranNumber) {\n        console.log(\"Too high\");\n    } else {\n        console.log(\"Too Low\");\n    }\n} \n```", "```js\nlet counter = 0;\nlet step = 5;\ndo {\n    console.log(counter);\n    counter += step;\n}\nwhile (counter <= 100); \n```", "```js\nconst myWork = [];\nfor (let x = 1; x < 10; x++) {\n    let stat = x % 2 ? true : false;\n    let temp = {\n        name: `Lesson ${x}`, status: stat\n    };\n    myWork.push(temp);\n}\nconsole.log(myWork); \n```", "```js\nconst myTable = [];\nconst rows = 4;\nconst cols = 7;\nlet counter = 0;\nfor (let y = 0; y < rows; y++) {\n    let tempTable = [];\n    for (let x = 0; x < cols; x++) {\n        counter++;\n        tempTable.push(counter);\n    }\n    myTable.push(tempTable);\n}\nconsole.table(myTable); \n```", "```js\nconst grid = [];\nconst cells = 64;\nlet counter = 0;\nlet row;\nfor (let x = 0; x < cells + 1; x++) {\n    if (counter % 8 == 0) {\n        if (row != undefined) {        \n            grid.push(row);\n        }\n        row = [];\n    }\n    counter++;\n    let temp = counter;\n    row.push(temp);\n\n}\nconsole.table(grid); \n```", "```js\nconst myArray = [];\nfor (let x = 0; x < 10; x++) {\n    myArray.push(x + 1);\n}\nconsole.log(myArray);\n\nfor (let i = 0; i < myArray.length; i++) {\n    console.log(myArray[i]);\n}\nfor (let val of myArray) {\n    console.log(val);\n} \n```", "```js\nconst obj = {\n    a: 1,\n    b: 2,\n    c: 3\n};\nfor (let prop in obj) {\n    console.log(prop, obj[prop]);\n}\nconst arr = [\"a\", \"b\", \"c\"];\nfor (let w = 0; w < arr.length; w++) {\n    console.log(w, arr[w]);\n}\n\nfor (el in arr) {\n    console.log(el, arr[el]);\n} \n```", "```js\nlet output = \"\"; \nlet skipThis = 7; \nfor (let i = 0; i < 10; i++) { \n  if (i === skipThis) { \n    continue; \n  } \n  output += i; \n} \nconsole.log(output); \n```", "```js\nlet output = \"\";\nlet skipThis = 7;\nfor (let i = 0; i < 10; i++) {\n  if (i === skipThis) {\n    break;\n  }\n  output += i;\n}\n\nconsole.log(output); \n```", "```js\nconst myTable = [];\nconst numm = 10;\nfor(let x=0; x<numm; x++){\n    const temp = [];\n    for(let y = 0; y<numm; y++){\n        temp.push(x*y);\n    }\n    myTable.push(temp);\n}\n\nconsole.table(myTable); \n```", "```js\n    0\n    3\n    6\n    9 \n    ```", "```js\n    0\n    5\n    1\n    6\n    2\n    7\n    [1, 5, 7] \n    ```", "```js\nfunction adder(a, b) {\nreturn a + b;\n}\nconst val1 = 10;\nconst val2 = 20;\nconsole.log(adder(val1, val2));\nconsole.log(adder(20, 30)); \n```", "```js\nconst adj = [\"super\", \"wonderful\", \"bad\", \"angry\", \"careful\"];\n\nfunction myFun() {\n    const question = prompt(\"What is your name?\");\n    const nameAdj = Math.floor(Math.random() * adj.length);\n    console.log(adj[nameAdj] + \" \" + question );\n}\nmyFun(); \n```", "```js\nconst val1 = 10;\nconst val2 = 5;\nlet operat = \"-\";\nfunction cal(a, b, op) {\n  if (op == \"-\") {\n    console.log(a â€” b);\n  } else {\n    console.log(a + b);\n  }\n}\ncal(val1, val2, operat); \n```", "```js\nconst myArr = [];\n\nfor(let x=0; x<10; x++){\n  let val1 = 5 * x;\n  let val2 = x * x;\n  let res = cal(val1, val2, \"+\");\n  myArr.push(res);\n}\nconsole.log(myArr);\nfunction cal(a, b, op) {\n  if (op == \"-\") {\n    return a - b;\n  } else {\n    return a + b;\n  }\n} \n```", "```js\nlet val = \"1000\";\n(function () {\n    let val = \"100\"; // local scope variable\n    console.log(val);\n})();\nlet result = (function () {\n    let val = \"Laurence\";\n    return val;\n})();\nconsole.log(result);\nconsole.log(val);\n(function (val) {\n    console.log(`My name is ${val}`);\n})(\"Laurence\"); \n```", "```js\nfunction calcFactorial(nr) { \n    console.log(nr);\n    if (nr === 0) { \n        return 1; \n    } \n    else { \n        return nr * calcFactorial(--nr); \n    } \n} \nconsole.log(calcFactorial(4)); \n```", "```js\nlet start = 10; \nfunction loop1(val) { \n    console.log(val); \n    if (val < 1) { \n        return; \n    } \n    return loop1(val - 1); \n} \nloop1(start); \nfunction loop2(val) { \n    console.log(val); \n    if (val > 0) { \n        val--; \n        return loop2(val); \n    } \n    return; \n} \nloop2(start); \n```", "```js\nconst test = function(val){\n    console.log(val);\n}\ntest('hello 1');\n\nfunction test1(val){\n    console.log(val);\n}\ntest1(\"hello 2\"); \n```", "```js\nconst main = function counter(i) {\n    console.log(i);\n    if (i < 10) {\n        return counter(i + 1);\n    }\n    return;\n}\nmain(0); \n```", "```js\nconst one  = ()=> console.log('one'); \nconst two  = ()=> console.log('two'); \nconst three = () =>{\n    console.log('three'); \n    one(); \n    two(); \n}\nconst four = () =>{\n    console.log('four');  \n    setTimeout(one,0); \n    three();\n}\nfour(); \n```", "```js\n    Welcome\n    Laurence\n    My Name is Laurence \n    ```", "```js\nclass Person { \n    constructor(firstname, lastname) { \n    this.firstname = firstname; \n    this.lastname = lastname; \n    } \n} \nlet person1 = new Person(\"Maaike\", \"van Putten\");\nlet person2 = new Person(\"Laurence\", \"Svekis\");\nconsole.log(\"hello \" + person1.firstname);\nconsole.log(\"hello \" + person2.firstname); \n```", "```js\nclass Person { \n    constructor(firstname, lastname) { \n    this.firstname = firstname; \n    this.lastname = lastname;\n    } \n    fullname(){\n        return this.firstname + \" \" + this.lastname;\n    }\n} \nlet person1 = new Person(\"Maaike\", \"van Putten\");\nlet person2 = new Person(\"Laurence\", \"Svekis\");\nconsole.log(person1.fullname());\nconsole.log(person2.fullname()); \n```", "```js\nclass Animal {\n    constructor(species, sounds) {\n        this.species = species;\n        this.sounds = sounds;\n    }\n    speak() {\n        console.log(this.species + \" \" + this.sounds);\n    }\n}\nAnimal.prototype.eat = function () {\n    return this.species + \" is eating\";\n}\nlet cat = new Animal(\"cat\", \"meow\");\nlet dog = new Animal(\"dog\", \"bark\");\ncat.speak();\nconsole.log(dog.eat());\nconsole.log(dog); \n```", "```js\nclass Employee {\n    constructor(first, last, years) {\n        this.first = first;\n        this.last = last;\n        this.years = years;\n    }\n}\nconst person1 = new Employee(\"Laurence\", \"Svekis\", 10);\nconst person2 = new Employee(\"Jane\", \"Doe\", 5);\nconst workers = [person1, person2];\nEmployee.prototype.details = function(){\n    return this.first + \" \" + this.last + \" has worked here \" +\n           this.years + \" years\";\n}\nworkers.forEach((person) => {\n    console.log(person.details());\n}); \n```", "```js\nclass Menu {\n    #offer1 = 10;\n    #offer2 = 20;\n    constructor(val1, val2) {\n        this.val1 = val1;\n        this.val2 = val2;\n    }\n    calTotal(){\n        return (this.val1 * this.#offer1) + (this.val2 * this.#offer2);\n    }\n    get total(){\n        return this.calTotal();\n    }\n}\n\nconst val1 = new Menu(2,0);\nconst val2 = new Menu(1,3);\nconst val3 = new Menu(3,2);\nconsole.log(val1.total);\nconsole.log(val2.total);\nconsole.log(val3.total); \n```", "```js\n    class Person {\n        constructor(firstname, lastname) {\n            this.firstname = firstname;\n            this.lastname = lastname;\n        }\n    } \n    ```", "```js\nconst secretMes1 = \"How's%20it%20going%3F\";    \nconst secretMes2 = \"How's it going?\";\nconst decodedComp = decodeURIComponent(secretMes1);\nconsole.log(decodedComp);\nconst encodedComp = encodeURIComponent(secretMes2);\nconsole.log(encodedComp);\nconst uri = \"http://www.basescripts.com?=Hello World\";\nconst encoded = encodeURI(uri);\nconsole.log(encoded); \n```", "```js\nconst arr = [\"Laurence\", \"Mike\", \"Larry\", \"Kim\", \"Joanne\", \"Laurence\", \"Mike\", \"Laurence\", \"Mike\", \"Laurence\", \"Mike\"];\nconst arr2 = arr.filter ( (value, index, array) => {\n    console.log(value,index,array.indexOf(value));\n    return array.indexOf(value) === index;\n});\nconsole.log(arr2); \n```", "```js\nconst myArr = [1,4,5,6];\nconst myArr1 = myArr.map(function(ele){\n    return ele * 2;\n});\nconsole.log(myArr1);\nconst myArr2 = myArr.map((ele)=> ele*2);\nconsole.log(myArr2); \n```", "```js\nconst val = \"thIs will be capiTalized for each word\";\nfunction wordsCaps(str) {\n    str = str.toLowerCase();\n    const tempArr = [];\n    let words = str.split(\" \");\n    words.forEach(word => {\n        let temp = word.slice(0, 1).toUpperCase() + word.slice(1);\n        tempArr.push(temp);\n    });\n    return tempArr.join(\" \");\n}\nconsole.log(wordsCaps(val)); \n```", "```js\nlet val = \"I love JavaScript\";\nval = val.toLowerCase();\nlet vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"];\nvowels.forEach((letter,index) =>{\n    console.log(letter);\n    val = val.replaceAll(letter,index);\n});\nconsole.log(val); \n```", "```js\nconsole.log(Math.ceil(5.7));\nconsole.log(Math.floor(5.7));\nconsole.log(Math.round(5.7));\nconsole.log(Math.random());\nconsole.log(Math.floor(Math.random()*11)); // 0-10\nconsole.log(Math.floor(Math.random()*10)+1); // 1-10;\nconsole.log(Math.floor(Math.random()*100)+1); // 1-100;\nfunction ranNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfor (let x = 0; x < 100; x++) {\n    console.log(ranNum(1, 100));\n} \n```", "```js\nlet future = new Date(2025, 5, 15);\nconsole.log(future);\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nlet day = future.getDate();\nlet month = future.getMonth();\nlet year = future.getFullYear();\nlet myDate = `${months[month-1]} ${day} ${year}`;\nconsole.log(myDate); \n```", "```js\nlet str = \"JavaScript\";\n\nfunction scramble(val) {\n    let max = val.length;\n    let temp = \"\";\n    for(let i=0;i<max;i++){\n        console.log(val.length);\n        let index = Math.floor(Math.random() * val.length);\n        temp += val[index];Â \n        console.log(temp); \n        val = val.substr(0, index) + val.substr(index + 1);\n        console.log(val);\n    }\n    return temp;\n}\nconsole.log(scramble(str)); \n```", "```js\nconst endDate = \"Sept 1 2022\";\nfunction countdown() {\n    const total = Date.parse(endDate) - new Date();\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    const hrs = Math.floor((total / (1000 * 60 * 60)) % 24);\n    const mins = Math.floor((total / 1000 / 60) % 60);\n    const secs = Math.floor((total / 1000) % 60);\n    return {\n        days,\n        hrs,\n        mins,\n        secs\n    };\n}\nfunction update() {\n    const temp = countdown();\n    let output = \"\";\n    for (const property in temp) {\n        output += (`${property}: ${temp[property]} `);\n    }\n    console.log(output);\n    setTimeout(update, 1000);\n}\nupdate(); \n```", "```js\nconsole.log(window.location.protocol);\nconsole.log(window.location.href); \n```", "```js\n<script>\n    const output = document.querySelector('.output');\n    output.textContent = \"Hello World\";\n    output.classList.add(\"red\");\n    output.id = \"tester\";\n    output.style.backgroundColor = \"red\";\n    console.log(document.URL);\n    output.textContent = document.URL;\n</script> \n```", "```js\nconst output = document.querySelector(\".output\");\nconst mainList = output.querySelector(\"ul\");\nmainList.id = \"mainList\";\nconsole.log(mainList);\nconst eles = document.querySelectorAll(\"div\");\nfor (let x = 0; x < eles.length; x++) {\n    console.log(eles[x].tagName);\n    eles[x].id = \"id\" + (x + 1);\n    if (x % 2) {\n        eles[x].style.color = \"red\";\n    } else {\n        eles[x].style.color = \"blue\";\n    }\n} \n```", "```js\n    for (const property in document) {\n        console.log(`${property}: ${document[property]}`);\n    } \n    ```", "```js\n    for (const property in window) {\n        console.log(`${property}: ${document[window]}`);\n    } \n    ```", "```js\n    <!doctype html>\n    <html>\n    <head>\n        <title>JS Tester</title>\n    </head>\n    <body>\n        <h1>Test</h1>\n\n        <script>\n            const output = document.querySelector('h1');\n            output.textContent = \"Hello World\";\n        </script>\n    </body>\n    </html> \n    ```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n</head>\n<body>\n    <div id=\"one\">Hello World</div>\n    <script>\n        const myEle = document.getElementById(\"one\");\n        console.log(myEle);\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Dynamic event manipulation</title>\n</head>\n<body>\n    <div>Hello World 1</div>\n    <div>Hello World 2</div>\n    <div>Hello World 3</div>\n    <script>\n        const myEles = document.getElementsByTagName(\"div\");\n        console.log(myEles[1]);\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n</head>\n<body>\n    <body>\n        <h1 class=\"ele\">Hello World</h1>\n        <div class=\"ele\">Hello World 1</div>\n        <div class=\"ele\">Hello World 3</div>\n    <script>\n        const myEles = document.getElementsByClassName(\"ele\");\n        console.log(myEles[0]);\n    </script>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n</head>\n<body>\n    <body>\n        <h1 class=\"ele\">Hello World</h1>\n        <div class=\"ele\">Hello World 1</div>\n        <div class=\"ele\">Hello World 3</div>\n        <p class=\"ele\">Hello World 4</p>\n    <script>\n        const myEle = document.querySelector(\".ele\");\n        console.log(myEle);\n    </script>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"myEle\">One</div>\n        <div class=\"myEle\">Two</div>\n        <div class=\"myEle\">Three</div>\n        <div class=\"myEle\">Four</div>\n        <div class=\"myEle\">Five</div>\n    </div>\n    <script>\n        const eles = document.querySelectorAll(\".myEle\");\n        console.log(eles);\n        eles.forEach((el) => {\n            console.log(el);\n        });\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <div>\n        <button onclick=\"message(this)\">Button 1</button>\n        <button onclick=\"message(this)\">Button 2</button>\n    </div>\n    <script>\n        function message(el) {\n            console.dir(el.textContent);\n        }\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        const message = document.querySelector(\"#message\");\n        const myArray = [\"Laurence\", \"Mike\", \"John\", \"Larry\", \"Kim\",\n                         \"Joanne\", \"Lisa\", \"Janet\", \"Jane\"];\n        build();\n        //addClicks();\n        function build() {\n            let html = \"<h1>My Friends Table</h1><table>\";\n            myArray.forEach((item, index) => {\n                html += `<tr class=\"box\" data-row=\"${index+1}\"\n                         data-name=\"${item}\" onclick=\"getData(this)\">\n                         <td>${item}</td>`;\n                html += `<td >${index + 1}</td></tr>`;\n            });\n            html += \"</table>\";\n            document.getElementById(\"output\").innerHTML = html;\n        }\n        function getData(el) {\n            let temp = el.getAttribute(\"data-row\");\n            let tempName = el.getAttribute(\"data-name\");\n            message.innerHTML = `${tempName } is in row #${temp}`;\n        }\n    </script> \n```", "```js\n <script>\n        const btns = document.querySelectorAll(\"button\");\n        btns.forEach((btn)=>{\n            function output(){\n                console.log(this.textContent);\n            }\n            btn.addEventListener(\"click\",output);\n        });\n    </script> \n```", "```js\n <script>\n        document.getElementById(\"addNew\").onclick = function () {\n            addOne();\n        }\n        function addOne() {\n            var a = document.getElementById(\"addItem\").value;\n            var li = document.createElement(\"li\");\n            li.appendChild(document.createTextNode(a));\n            document.getElementById(\"sList\").appendChild(li);\n        }\n    </script> \n```", "```js\n <script>\n        const menus = document.querySelectorAll(\".title\");\n        const openText = document.querySelectorAll(\".myText\");\n        menus.forEach((el) => {\n            el.addEventListener(\"click\", (e) => {\n                console.log(el.nextElementSibling);\n                remover();\n                el.nextElementSibling.classList.toggle(\"active\");\n            })\n        })\n        function remover() {\n            openText.forEach((ele) => {\n                ele.classList.remove(\"active\");\n            })\n        }\n    </script> \n```", "```js\n <script>\n        window.onload = build;\n        const myArray = [\"Laurence\", \"Mike\", \"John\", \"Larry\"];\n        const message = document.getElementById(\"message\");\n        const addNew = document.getElementById(\"addNew\");\n        const newInput = document.getElementById(\"addFriend\");\n        const output = document.getElementById(\"output\");\n        addNew.onclick = function () {\n            const newFriend = newInput.value;\n            adder(newFriend, myArray.length, 0);\n            myArray.push(newFriend);\n        }\n        function build() {\n            myArray.forEach((item, index) => {\n                adder(item, index, 0);\n            });\n        }\n        function adder(name, index, counter) {\n            const tr = document.createElement(\"tr\");\n            const td1 = document.createElement(\"td\");\n            td1.classList.add(\"box\");\n            td1.textContent = index + 1;\n            const td2 = document.createElement(\"td\");\n            td2.textContent = name;\n            const td3 = document.createElement(\"td\");\n            td3.textContent = counter;\n            tr.append(td1);\n            tr.append(td2);\n            tr.append(td3);\n            tr.onclick= function () {\n                console.log(tr.lastChild);\n                let val = Number(tr.lastChild.textContent);\n                val++;\n                tr.lastChild.textContent = val;\n            }\n            output.appendChild(tr);\n        }\n    </script> \n```", "```js\n <script>\n        const game = { cur: \"\", solution: \"\", puzz: [], total: 0 };\n        const myWords = [\"learn Javascript\", \"learn html\",\n                         \"learn css\"];\n        const score = document.querySelector(\".score\");\n        const puzzle = document.querySelector(\".puzzle\");\n        const letters = document.querySelector(\".letters\");\n        const btn = document.querySelector(\"button\");\n        btn.addEventListener(\"click\", startGame);\n        function startGame() {\n            if (myWords.length > 0) {\n                btn.style.display = \"none\";\n                game.puzz = [];\n                game.total = 0;\n                game.cur = myWords.shift();\n                game.solution = game.cur.split(\"\");\n                builder();\n            } else {\n                score.textContent = \"No More Words.\";\n            }\n        }\n        function createElements(elType, parentEle, output, cla) {\n            const temp = document.createElement(elType);\n            temp.classList.add(\"boxE\");\n            parentEle.append(temp);\n            temp.textContent = output;\n            return temp;\n        }\n        function updateScore() {\n            score.textContent = `Total Letters Left : ${game.total}`;\n            if (game.total <= 0) {\n                console.log(\"game over\");\n                score.textContent = \"Game Over\";\n                btn.style.display = \"block\";\n            }\n        }\n        function builder() {\n            letters.innerHTML = \"\";\n            puzzle.innerHTML = \"\";\n            game.solution.forEach((lett) => {\n                let div = createElements(\"div\", puzzle, \"-\", \"boxE\");\n                if (lett == \" \") {\n                    div.style.borderColor = \"white\";\n                    div.textContent = \" \";\n                } else {\n                    game.total++;\n                }\n                game.puzz.push(div);\n                updateScore();\n            })\n            for (let i = 0; i < 26; i++) {\n                let temp = String.fromCharCode(65 + i);\n                let div = createElements(\"div\", letters, temp,\"box\");\n\n                let checker = function (e) {\n                    div.style.backgroundColor = \"#ddd\";\n                    div.classList.remove(\"box\");\n                    div.classList.add(\"boxD\");\n                    div.removeEventListener(\"click\", checker);\n                    checkLetter(temp);\n                }\n                div.addEventListener(\"click\", checker);\n            }\n        }\n        function checkLetter(letter) {\n            console.log(letter);\n            game.solution.forEach((ele, index) => {\n                if (ele.toUpperCase() == letter) {\n                    game.puzz[index].textContent = letter;\n                    game.total--;\n                    updateScore();\n                };\n            };\n            )\n        }\n    </script> \n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Laurence Svekis</title>\n</head>\n<body>\n    <script>\n        let darkMode = false;\n        window.onclick = () => {\n            console.log(darkMode);\n            if (!darkMode) {\n                document.body.style.backgroundColor = \"black\";\n                document.body.style.color = \"white\";\n                darkMode = true;\n            } else {\n                document.body.style.backgroundColor = \"white\";\n                document.body.style.color = \"black\";\n                darkMode = false;\n            }\n        }\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<body>\n    <div>red</div>\n    <div>blue</div>\n    <div>green</div>\n    <div>yellow</div>\n    <script>\n        const divs = document.querySelectorAll(\"div\");\n        divs.forEach((el)=>{\n            el.addEventListener(\"click\",()=>{\n                document.body.style.backgroundColor = el.textContent;\n            });\n        })\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", (e) => {\n            message(\"Document ready\", e);\n        });\n        window.onload = (e) => {\n            message(\"Window ready\", e);\n        }\n        function message(val, event) {\n            console.log(event);\n            console.log(val);\n        }\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <div class=\"output\"></div>Â \n    <script>\n        const output = document.querySelector(\".output\");\n        output.textContent = \"hello world\";\n        output.style.height = \"200px\";\n        output.style.width = \"400px\";\n        output.style.backgroundColor = \"red\";\n        output.addEventListener(\"mousedown\", function (e) {\n            message(\"green\", e);\n        });\n        output.addEventListener(\"mouseover\", function (e) {\n            message(\"red\", e);\n        });\n        output.addEventListener(\"mouseout\", function (e) {\n            message(\"yellow\", e);\n        });\n        output.addEventListener(\"mouseup\", function (e) {\n            message(\"blue\", e);\n        });\n        function message(elColor, event) {\n            console.log(event.type);\n            output.style.backgroundColor = elColor;\n        }\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        const myInput = document.querySelector(\"input[name='message']\");\n        const output = document.querySelector(\".output\");\n        const btn1 = document.querySelector(\".btn1\");\n        const btn2 = document.querySelector(\".btn2\");\n        const btn3 = document.querySelector(\".btn3\");\n        const log = [];\n        btn1.addEventListener(\"click\", tracker);\n        btn2.addEventListener(\"click\", tracker);\n        btn3.addEventListener(\"click\", (e) => {\n            console.log(log);\n        });\n        function tracker(e) {\n            output.textContent = myInput.value;\n            const ev = e.target;\n            console.dir(ev);\n            const temp = {\n                message: myInput.value,\n                type: ev.type,\n                class: ev.className,\n                tag: ev.tagName\n            };\n            log.push(temp);\n            myInput.value = \"\";\n        }\n    </script> \n```", "```js\n <script>      \n        const main = document.querySelector(\".container\");\n        const boxes = document.querySelectorAll(\".box\");\n        main.addEventListener(\"click\", (e) => {\n            console.log(\"4\");\n        },false);\n        main.addEventListener(\"click\", (e) => {\n            console.log(\"1\");\n        },true);\n\n        boxes.forEach(ele => {\n            ele.addEventListener(\"click\", (e) => {\n                console.log(\"3\");\n                console.log(e.target.textContent);\n            },false);\n            ele.addEventListener(\"click\", (e) => {\n                console.log(\"2\");\n                console.log(e.target.textContent);\n            },true);\n\n        });\n    </script> \n```", "```js\n <script>\n        const output = document.querySelector(\".output1\");\n\n        const in1 = document.querySelector(\"input[name='first']\");\n        const in2 = document.querySelector(\"input[name='last']\");\n        in1.addEventListener(\"change\", (e) => {\n            console.log(\"change\");\n            updater(in1.value);\n        });\n        in1.addEventListener(\"blur\", (e) => {\n            console.log(\"blur\");\n        });\n        in1.addEventListener(\"focus\", (e) => {\n            console.log(\"focus\");\n        });\n        in2.addEventListener(\"change\", (e) => {\n            console.log(\"change\");\n            updater(in2.value);\n        });\n        in2.addEventListener(\"blur\", (e) => {\n            console.log(\"blur\");\n        });\n        in2.addEventListener(\"focus\", (e) => {\n            console.log(\"focus\");\n        });\n        function updater(str) {\n            output.textContent = str;\n        }\n    </script> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <div class=\"output\"></div>\n        <input type=\"text\" name=\"myNum1\">\n        <input type=\"text\" name=\"myNum2\">\n    <script>\n        const eles = document.querySelectorAll(\"input\");\n        const output = document.querySelector(\".output\");\n        eles.forEach(el => {\n            el.addEventListener(\"keydown\", (e) => {\n                if (!isNaN(e.key)) {\n                    output.textContent += e.key;\n                }\n            });\n            el.addEventListener(\"keyup\", (e) => {\n                console.log(e.key);\n            });\n            el.addEventListener(\"paste\", (e) => {\n                console.log('pasted');\n            });\n        });\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        const dragme = document.querySelector(\"#dragme\");\n        dragme.addEventListener(\"dragstart\", (e) => {\n            dragme.style.opacity = .5;\n        });\n        dragme.addEventListener(\"dragend\", (e) => {\n            dragme.style.opacity = \"\";\n        });\n        const boxes = document.querySelectorAll(\".box\");\n        boxes.forEach(box => {\n            box.addEventListener(\"dragenter\", (e) => {\n                e.target.classList.add('red');\n            });\n            box.addEventListener(\"dragover\", (e) => {\n                e.preventDefault();\n            });\n            box.addEventListener(\"dragleave\", (e) => {\n                //console.log(\"leave\");\n                e.target.classList.remove('red');\n            });\n            box.addEventListener(\"drop\", (e) => {\n                e.preventDefault();\n                console.log(\"dropped\");\n                e.target.appendChild(dragme);\n            });\n        });\n        function dragStart(e) {\n            console.log(\"Started\");\n        }\n    </script> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>JS Tester</title>\n</head>\n<body>\n    <form action=\"index2.html\" method=\"get\">\n        First: <input type=\"text\" name=\"first\">\n        <br>Last: <input type=\"text\" name=\"last\">\n        <br>Age: <input type=\"number\" name=\"age\">\n        <br><input type=\"submit\" value=\"submit\">\n    </form>\n    <script>\n        const form = document.querySelector(\"form\");\n        const email = document.querySelector(\"#email\");\n        form.addEventListener(\"submit\", (e) => {\n            let error = false;\n            if (checker(form.first.value)) {\n                console.log(\"First Name needed\");\n                error = true;\n            }\n            if (checker(form.last.value)) {\n                console.log(\"Last Name needed\");\n                error = true;\n            }\n            if (form.age.value < 19) {\n                console.log(\"You must be 19 or over\");\n                error = true;\n            }\n            if (error) {\n                e.preventDefault();\n                console.log(\"please review the form\");\n            }\n        });\n        function checker(val) {\n            console.log(val.length);\n            if (val.length < 6) {\n                return true;\n            }\n            return false;\n        }\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<style>\n    div {\n        background-color: purple;\n        width: 100px;\n        height: 100px;\n        position: absolute;\n    }\n</style>\n<body>\n    <div id=\"block\"></div>\n    <script>\n        const main = document.querySelector(\"#block\");\n        let mover = { speed: 10, dir: 1, pos: 0 };\n        main.addEventListener(\"click\", moveBlock);\n        function moveBlock() {\n            let x = 30;\n            setInterval(function () {\n                if (x < 1) {\n                    clearInterval();\n                } else {\n                    if (mover.pos > 800 || mover.pos < 0) {\n                        mover.dir *= -1;\n                    }\n                    x--;\n                    mover.pos += x * mover.dir;\n                    main.style.left = mover.pos + \"px\";\n                    console.log(mover.pos);\n                }\n            }, 2);\n        }\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html >\n<html>\n<head>\n    <title>JS Tester</title>\n    <style>.box{width:200px;height:100px;border:1px solid black}</style>\n</head>\n<body> \n    <div class=\"container\">\n        <div class=\"box\" id=\"box0\">Box #1</div>\n        <div class=\"box\" id=\"box1\">Box #2</div>\n        <div class=\"box\" id=\"box2\">Box #3</div>\n        <div class=\"box\" id=\"box3\">Box #4</div>\n    </div> \n    <script>      \n        const counter = [];  \n        const main = document.querySelector(\".container\");\n        main.addEventListener(\"click\",tracker);\n        function tracker(e){\n            const el = e.target;\n            if(el.id){\n            const temp = {};\n            temp.content = el.textContent;\n            temp.id = el.id;\n            temp.tagName = el.tagName;\n            temp.class = el.className;\n            console.dir(el);\n            counter.push(temp);\n            console.log(counter);\n            }\n        }\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        const starsUL = document.querySelector(\".stars\");\n        const output = document.querySelector(\".output\");\n        const stars = document.querySelectorAll(\".star\");\n        stars.forEach((star, index) => {\n            star.starValue = (index + 1);\n            star.addEventListener(\"click\", starRate);\n        });\n        function starRate(e) {\n            output.innerHTML =\n                `You Rated this ${e.target.starValue} stars`;\n            stars.forEach((star, index) => {\n                if (index < e.target.starValue) {\n                    star.classList.add(\"orange\");\n                } else {\n                    star.classList.remove(\"orange\");\n                }\n            });\n        }\n    </script> \n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Complete JavaScript Course</title>\n    <style>\n        .holder {\n            display: inline-block;\n            width: 300px;\n            height: 300px;\n            border: 1px solid black;\n            padding: 10px;\n        }\n\n        .active {\n            background-color: red;\n        }\n    </style>\n</head>\n<body> \n    <div class=\"holder\">   \n        <div id=\"output\"></div>   \n    </div>   \n    <script>     \n        const ele = document.querySelector(\".holder\");\n        ele.addEventListener(\"mouseover\",\n            (e) => { e.target.classList.add(\"active\"); });\n        ele.addEventListener(\"mouseout\",\n            (e) => { e.target.classList.remove(\"active\"); });\n        ele.addEventListener(\"mousemove\", coordin);\n        function coordin() {\n            let html = \"X:\" + event.clientX + \" | Y:\" + event.clientY;\n            document.getElementById(\"output\").innerHTML = html;\n        }\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        const output = document.querySelector('.output');\n        const message = document.querySelector('.message');\n        message.textContent = \"Press to Start\";\n        const box = document.createElement('div');\n        const game = {\n            timer: 0,\n            start: null\n        };\n        box.classList.add('box');\n        output.append(box);\n        box.addEventListener('click', (e) => {\n            box.textContent = \"\";\n            box.style.display = 'none';\n            game.timer = setTimeout(addBox, ranNum(3000));\n            if (!game.start) {\n                message.textContent = 'Loading....';\n            } else {\n                const cur = new Date().getTime();\n                const dur = (cur - game.start) / 1000;\n                message.textContent = `It took ${dur} seconds to click`;\n            }\n        });\n        function addBox() {\n            message.textContent = 'Click it...';\n            game.start = new Date().getTime();\n            box.style.display = 'block';\n            box.style.left = ranNum(450) + 'px';\n            box.style.top = ranNum(450) + 'px';\n        }\n        function ranNum(max) {\n            return Math.floor(Math.random() * max);\n        }\n    </script> \n```", "```js\n <script>\n        const output = document.getElementById(\"output\");\n        const findValue = document.getElementById(\"sText\");\n        const replaceValue = document.getElementById(\"rText\");\n        document.querySelector(\"button\").addEventListener(\"click\", lookUp);\n        function lookUp() {\n            const s = output.textContent;\n            const rt = replaceValue.value;\n            const re = new RegExp(findValue.value, \"gi\");\n            if (s.match(re)) {\n                let newValue = s.replace(re, rt);\n                output.textContent = newValue;\n            }\n        }\n    </script> \n```", "```js\n <script>\n        const output = document.querySelector(\".output\");\n        const emailVal = document.querySelector(\"input\");\n        const btn = document.querySelector(\"button\");\n        const emailExp =\n            /([A-Za-z0-9._-]+@[A-Za-z0-9._-]+\\.[A-Za-z0-9]+)\\w+/;\n        btn.addEventListener(\"click\", (e) => {\n            const val = emailVal.value;\n            const result = emailExp.test(val);\n            let response = \"\";\n            if (!result) {\n                response = \"Invalid Email\";\n                output.style.color = \"red\";\n            } else {\n                response = \"Valid Email\";\n                output.style.color = \"green\";\n            }\n            emailVal.value = \"\";\n            output.textContent = response;\n        });\n    </script> \n```", "```js\nfunction showNames() {\n    let lastOne = \"\";\n    for (let i = 0; i < arguments.length; i++) {\n        lastOne = arguments[i];\n    }\n    return lastOne;\n}\nconsole.log(showNames(\"JavaScript\", \"Laurence\", \"Mike\", \"Larry\")); \n```", "```js\n15\n45 \n```", "```js\nfunction test(val) {\n    try {\n        if (isNaN(val)) {\n            throw \"Not a number\";\n        } else {\n            console.log(\"Got number\");\n        }\n    } catch (e) {\n        console.error(e);\n    } finally {\n        console.log(\"Done \" + val);\n    }\n}\ntest(\"a\");\ntest(100); \n```", "```js\n <script>\n        console.log(document.cookie);\n        console.log(rCookie(\"test1\"));\n        console.log(rCookie(\"test\"));\n        cCookie(\"test1\", \"new Cookie\", 30);\n        dCookie(\"test2\");\n        function cCookie(cName, value, days) {\n            if (days) {\n                const d = new Date();\n                d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));\n                let e = \"; expires=\" + d.toUTCString();\n                document.cookie = cName + \"=\" + value + e + \"; path=/\";\n            }\n        }\n        function rCookie(cName) {\n            let cookieValue = false;\n            let arr = document.cookie.split(\"; \");\n            arr.forEach(str => {\n                const cookie = str.split(\"=\");\n                if (cookie[0] == cName) {\n                    cookieValue = cookie[1];\n                }\n            });\n            return cookieValue;\n        }\n        function dCookie(cName) {\n            cCookie(cName, \"\", -1);\n        }\n    </script> \n```", "```js\n <script>\n        const userTask = document.querySelector(\".main input\");\n        const addBtn = document.querySelector(\".main button\");\n        const output = document.querySelector(\".output\");\n        const tasks = JSON.parse(localStorage.getItem(\"tasklist\")) || [];\n        addBtn.addEventListener(\"click\", createListItem);\n        if (tasks.length > 0) {\n            tasks.forEach((task) => {\n                genItem(task.val, task.checked);\n            });\n        }\n        function saveTasks() {\n            localStorage.setItem(\"tasklist\", JSON.stringify(tasks));\n        }\n        function buildTasks() {\n            tasks.length = 0;\n            const curList = output.querySelectorAll(\"li\");\n            curList.forEach((el) => {\n                const tempTask = {\n                    val: el.textContent,\n                    checked: false\n                };\n                if (el.classList.contains(\"ready\")) {\n                    tempTask.checked = true;\n                }\n                tasks.push(tempTask);\n            });\n            saveTasks();\n        }\n        function genItem(val, complete) {\n            const li = document.createElement(\"li\");\n            const temp = document.createTextNode(val);\n            li.appendChild(temp);\n            output.append(li);\n            userTask.value = \"\";\n            if (complete) {\n                li.classList.add(\"ready\");\n            }\n            li.addEventListener(\"click\", (e) => {\n                li.classList.toggle(\"ready\");\n                buildTasks();\n            });\n            return val;\n        }\n        function createListItem() {\n            const val = userTask.value;\n            if (val.length > 0) {\n                const myObj = {\n                    val: genItem(val, false),\n                    checked: false\n                };\n                tasks.push(myObj);\n                saveTasks();\n            }\n        }\n    </script> \n```", "```js\nlet myList = [{\n        \"name\": \"Learn JavaScript\",\n        \"status\": true\n    },\n    {\n        \"name\": \"Try JSON\",\n        \"status\": false\n    }\n];\nreloader();\nfunction reloader() {\n    myList.forEach((el) => {\n    console.log(`${el.name} = ${el.status}`);\n    });\n} \n```", "```js\nlet myList = [{\n    \"name\": \"Learn JavaScript\",\n    \"status\": true\n},\n{\n    \"name\": \"Try JSON\",\n    \"status\": false\n}\n];\nconst newStr = JSON.stringify(myList);\nconst newObj = JSON.parse(newStr);\nnewObj.forEach((el)=>{\n    console.log(el);\n}); \n```", "```js\n <script>\n        const firstArea = document.querySelector(\n            \"textarea[name='txtarea']\");\n        const secArea = document.querySelector(\n            \"textarea[name='txtarea2']\");\n        document.querySelector(\"button\").addEventListener(\"click\", lookUp);\n        function lookUp() {\n            const rawTxt = firstArea.value;\n            const eData = rawTxt.match(\n                /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n            const holder = [];\n            for (let x = 0; x < eData.length; x++) {\n                if (holder.indexOf(eData[x]) == -1) {\n                    holder.push(eData[x]);\n                }\n            }\n            secArea.value = holder.join(',');\n        }\n    </script> \n```", "```js\n <script>\n        const myForm = document.querySelector(\"form\");\n        const inputs = document.querySelectorAll(\"input\");\n        const errors = document.querySelectorAll(\".error\");\n        const required = [\"email\", \"userName\"];\n        myForm.addEventListener(\"submit\", validation);\n        function validation(e) {\n            let data = {};\n            e.preventDefault();\n            errors.forEach(function (item) {\n                item.classList.add(\"hide\");\n            });\n            let error = false;\n            inputs.forEach(function (el) {\n                let tempName = el.getAttribute(\"name\");\n                if (tempName != null) {\n                    el.style.borderColor = \"#ddd\";\n                    if (el.value.length == 0 && \n                    required.includes(tempName)) {\n                        addError(el, \"Required Field\", tempName);\n                        error = true;\n                    }\n                    if (tempName == \"email\") {\n                        let exp = /([A-Za-z0-9._-]+@[A-Za-z0-9._-]+\\.[A-Za-z0-9]+)\\w+/;\n                        let result = exp.test(el.value);\n                        if (!result) {\n                            addError(el, \"Invalid Email\", tempName);\n                            error = true;\n                        }\n                    }\n                    if (tempName == \"password\") {\n                        let exp = /[A-Za-z0-9]+$/;\n                        let result = exp.test(el.value);\n                        if (!result) {\n                            addError(el, \"Only numbers and Letters\",\n                                     tempName);\n                            error = true;\n                        }\n                        if (!(el.value.length > 3 &&\n                        el.value.length < 9)) {\n                            addError(el, \"Needs to be between 3-8 \" +\n                                     \"characters\", tempName);\n                            error = true;\n                        }\n                    }\n                    data[tempName] = el.value;\n                }\n            });\n            if (!error) {\n                myForm.submit();\n            }\n        }\n        function addError(el, mes, fieldName) {\n            let temp = el.nextElementSibling;\n            temp.classList.remove(\"hide\");\n            temp.textContent = fieldName.toUpperCase() + \" \" + mes;\n            el.style.borderColor = \"red\";\n            el.focus();\n        }\n    </script> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Complete JavaScript Course</title>\n</head>\n<body>\n    <span class=\"val1\"></span> <span>+</span> \n    <span class=\"val2\"></span> = <span>\n        <input type=\"text\" name=\"answer\"></span><button>Check</button>\n    <div class=\"output\"></div>\n    <script>\n        const app = function () {\n            const game = {};\n            const val1 = document.querySelector(\".val1\");\n            const val2 = document.querySelector(\".val2\");\n            const output = document.querySelector(\".output\");\n            const answer = document.querySelector(\"input\");\n            function init() {\n                document.querySelector(\"button\").addEventListener(\n                    \"click\", checker);\n                loadQuestion();\n            }\n            function ranValue(min, max) {\n                return Math.floor(Math.random() * (max - min + 1) +\n                                  min);\n            }\n            function loadQuestion() {\n                game.val1 = ranValue(1, 100);\n                game.val2 = ranValue(1, 100);\n                game.answer = game.val1 + game.val2;\n                val1.textContent = game.val1;\n                val2.textContent = game.val2;\n            }\n            function checker() {\n                let bg = answer.value == game.answer ? \"green\" : \"red\";\n                output.innerHTML +=\n                    `<div style=\"color:${bg}\">${game.val1} +\n                     ${game.val2} = ${game.answer} (${answer.value})\n                     </div>`;\n                answer.value = \"\";\n                loadQuestion();\n            }\n            return {\n                init: init\n            };\n        }();\n        document.addEventListener('DOMContentLoaded', app.init);\n    </script>\n</body>\n</html> \n```", "```js\nfunction greet(fullName){\n    console.log(`Welcome, ${fullName[0]} ${fullName[1]}`)\n}\nfunction processCall(user, callback){\n    const fullName = user.split(\" \");\n    callback(fullName);\n}\nprocessCall(\"Laurence Svekis\", greet); \n```", "```js\nconst myPromise = new Promise((resolve, reject) => {\n    resolve(\"Start Counting\");\n});\nfunction counter(val){\n    console.log(val);\n}\nmyPromise\n  .then(value => {counter(value); return \"one\"})\n  .then(value => {counter(value); return \"two\"})\n  .then(value => {counter(value); return \"three\"})\n  .then(value => {counter(value);}); \n```", "```js\n let cnt = 0;\n    function outputTime(val) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                cnt++;\n                resolve(`x value ${val} counter:${cnt}`);\n            }, 1000);\n        });\n    }\n    async function aCall(val) {\n        console.log(`ready ${val} counter:${cnt}`);\n        const res = await outputTime(val);\n        console.log(res);\n    }\n    for (let x = 1; x < 4; x++) {\n        aCall(x);\n    } \n```", "```js\nconst allowed = [\"1234\", \"pass\", \"apple\"];\nfunction passwordChecker(pass) {\n    return allowed.includes(pass);\n}\nfunction login(password) {\n    return new Promise((resolve, reject) => {\n        if (passwordChecker(password)) {\n            resolve({\n                status: true\n            });\n        } else {\n            reject({\n                status: false\n            });\n        }\n    });\n}\nfunction checker(pass) {\n    login(pass)\n        .then(token => {\n            console.log(\"Approve:\");\n            console.log(token);\n        })\n        .catch(value => {\n            console.log(\"Reject:\");\n            console.log(value);\n        })\n}\nchecker(\"1234\");\nchecker(\"wrong\"); \n```", "```js\n    function addOne(val){\n      return val + 1;\n    }\n    function total(a, b, callback){\n      const sum = a + b;\n      return callback(sum);\n    }\n    console.log(total(4, 5, addOne)); \n    ```", "```js\n    function checker(val) {\n      return new Promise((resolve, reject) => {\n        if (val > 5) {\n          resolve(\"Ready\");\n        } else {\n          reject(new Error(\"Oh no\"));\n        }\n      });\n    }\n    checker(5)\n      .then((data) => {console.log(data); })\n      .catch((err) => {console.error(err); })\n      .finally(() => { console.log(\"done\");}); \n    ```", "```js\n    async function myFun() {\n      return \"Hello\";\n    }\n    myFun().then(\n      function(val) { console.log(val); },\n      function(err) { conole.log(err); } \n    ```", "```js\n <script>\n        const message = document.getElementById(\"message\");\n        const output = document.querySelector(\".output\");\n        const myInput = document.querySelector(\"input\");\n        myInput.addEventListener(\"change\", uploadAndReadFile);\n        function uploadAndReadFile(e) {\n            const files = e.target.files;\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                const img = document.createElement(\"img\");\n                img.classList.add(\"thumb\");\n                img.file = file;\n                output.appendChild(img);\n                const reader = new FileReader();\n                reader.onload = (function (myImg) {\n                    return function (e) {\n                        myImg.src = e.target.result;\n                    };\n                })(img);\n                reader.readAsDataURL(file);\n            }\n        }\n    </script> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n    <style>\n        #canvas {\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <canvas id=\"canvas\" width=\"640\" height=\"640\">Not Supported</canvas>\n    <script>\n        const canvas = document.querySelector('#canvas');\n        const ctx = canvas.getContext(\"2d\");\n        ctx.fillStyle = \"red\";\n        ctx.fillRect(100, 100, 500, 300); //filled shape\n        ctx.strokeRect(90, 90, 520, 320); // outline\n        ctx.clearRect(150, 150, 400, 200); //transparent\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n    <style>\n        #canvas {\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <canvas id=\"canvas\" width=\"640\" height=\"640\">Not Supported</canvas>\n    <script>\n        const canvas = document.querySelector(\"#canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.fillStyle = \"red\";\n        ctx.arc(300, 130, 100, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.fillStyle = \"black\";\n        ctx.arc(250, 120, 20, 0, Math.PI * 2);\n        ctx.moveTo(370, 120);\n        ctx.arc(350, 120, 20, 0, Math.PI * 2);\n        ctx.moveTo(240, 160);\n        ctx.arc(300, 160, 60, 0, Math.PI);\n        ctx.fill();\n        ctx.moveTo(300, 130);\n        ctx.lineTo(300, 150);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(300, 230);\n        ctx.lineTo(300, 270);\n        ctx.lineTo(400, 270);\n        ctx.lineTo(200, 270);\n        ctx.lineTo(300, 270);\n        ctx.lineTo(300, 350);\n        ctx.lineTo(400, 500);\n        ctx.moveTo(300, 350);\n        ctx.lineTo(200, 500);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.fillStyle = \"blue\";\n        ctx.moveTo(200, 50);\n        ctx.lineTo(400, 50);\n        ctx.lineTo(300, 20);\n        ctx.lineTo(200, 50);\n        ctx.fill();\n        ctx.stroke();\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n    <style>\n        #canvas {\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <canvas id=\"canvas\" width=\"640\" height=\"640\">Not Supported</canvas>\n    <script>\n        const canvas = document.querySelector(\"#canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.fillStyle = \"red\";\n        ctx.arc(300, 130, 100, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.fillStyle = \"black\";\n        ctx.arc(250, 120, 20, 0, Math.PI * 2);\n        ctx.moveTo(370, 120);\n        ctx.arc(350, 120, 20, 0, Math.PI * 2);\n        ctx.moveTo(240, 160);\n        ctx.arc(300, 160, 60, 0, Math.PI);\n        ctx.fill();\n        ctx.moveTo(300, 130);\n        ctx.lineTo(300, 150);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(300, 230);\n        ctx.lineTo(300, 270);\n        ctx.lineTo(400, 270);\n        ctx.lineTo(200, 270);\n        ctx.lineTo(300, 270);\n        ctx.lineTo(300, 350);\n        ctx.lineTo(400, 500);\n        ctx.moveTo(300, 350);\n        ctx.lineTo(200, 500);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.fillStyle = \"blue\";\n        ctx.moveTo(200, 50);\n        ctx.lineTo(400, 50);\n        ctx.lineTo(300, 20);\n        ctx.lineTo(200, 50);\n        ctx.fill();\n        ctx.stroke();\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n    <style>\n        #canvas {\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <div><label>Image</label>\n        <input type=\"file\" id=\"imgLoader\" name=\"imgLoader\">\n    </div>\n    <div><canvas id=\"canvas\"></canvas></div>\n    <script>\n        const canvas = document.querySelector(\"#canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const imgLoader = document.querySelector(\"#imgLoader\");\n        imgLoader.addEventListener(\"change\", handleUpload);\n        function handleUpload(e) {\n            console.log(e);\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                console.log(e);\n                const img = new Image();\n                img.onload = function () {\n                    canvas.width = img.width / 2;\n                    canvas.height = img.height / 2;\n                    ctx.drawImage(img, 0, 0, img.width / 2,\n                                  img.height / 2);\n                }\n                img.src = e.target.result;\n            }\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    </script>\n</body>\n</html> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n    <style>\n        #canvas {\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <div><canvas id=\"canvas\"></canvas></div>\n    <script>\n        const canvas = document.getElementById(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const ballSize = 10;\n        let x = canvas.width / 2;\n        let y = canvas.height / 2;\n        let dirX = 1;\n        let dirY = 1;\n        function drawBall() {\n            ctx.beginPath();\n            ctx.arc(x, y, ballSize, 0, Math.PI * 2);\n            ctx.fillStyle = \"red\";\n            ctx.fill();\n            ctx.closePath();\n        }\n        function move() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawBall();\n            if (x > canvas.width - ballSize || x < ballSize) {\n                dirX *= -1;\n            }\n            if (y > canvas.height - ballSize || y < ballSize) {\n                dirY *= -1;\n            }\n            x += dirX;\n            y += dirY;\n        }\n        setInterval(move, 10);\n    </script>\n</body>\n</html> \n```", "```js\n <script>\n        window.onload = init;\n        const canvas = document.getElementById(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.style.border = \"1px solid black\";\n        const penColor = document.querySelector(\"#penColor\");\n        const penWidth = document.querySelector(\"#penWidth\");\n        document.querySelector(\".clear\").addEventListener(\n            \"click\", clearImg);\n        canvas.width = 700;\n        canvas.height = 700;\n        let pos = {\n            x: 0,\n            y: 0,\n        };\n        function init() {\n            canvas.addEventListener(\"mousemove\", draw);\n            canvas.addEventListener(\"mousemove\", setPosition);\n            canvas.addEventListener(\"mouseenter\", setPosition);\n        }\n        function draw(e) {\n            if (e.buttons !== 1) return;\n            ctx.beginPath();\n            ctx.moveTo(pos.x, pos.y);\n            setPosition(e);\n            ctx.lineTo(pos.x, pos.y);\n            ctx.strokeStyle = penColor.value;\n            ctx.lineWidth = penWidth.value;\n            ctx.lineCap = \"round\";\n            ctx.stroke();\n        }\n        function setPosition(e) {\n            pos.x = e.pageX;\n            pos.y = e.pageY;\n        }\n        function clearImg() {\n            const temp = confirm(\"Clear confirm?\");\n            if (temp) {\n                ctx.clearRect(0, 0, canvas.offsetWidth,\n                              canvas.offsetHeight);\n            }\n        }\n    </script> \n```", "```js\n<!doctype html>\n<html>\n<head>\n    <title>Canvas HTML5</title>\n</head>\n<body>\n    <div class=\"output\"></div>\n    <script>\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.setAttribute(\"width\", \"500\");\n        canvas.setAttribute(\"height\", \"300\");\n        document.body.prepend(canvas);\n        const colVal = [];\n        for(let x=0;x<50;x++){\n            colVal.push(0);\n        }\n        function matrix() {\n            ctx.fillStyle = \"rgba(0,0,0,.05)\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"green\";\n            colVal.map((posY, index) => {\n                let output = Math.random()<0.5?0:1;\n                let posX = (index * 10) + 10;\n                ctx.fillText(output, posX, posY);\n                if (posY > 100 + Math.random() * 300) {\n                    colVal[index] = 0;\n                } else {\n                    colVal[index] = posY + 10;\n                }\n            });\n        }\n        setInterval(matrix, 50);\n    </script>\n</body>\n</html> \n```", "```js\n<script>\n        const endDate = document.querySelector(\"input[name='endDate']\");\n        const clock = document.querySelector(\".clock\");\n        let timeInterval;\n        let timeStop = true;\n        const savedValue = localStorage.getItem(\"countdown\") || false;\n        if (savedValue) {\n            startClock(savedValue);\n            let inputValue = new Date(savedValue);\n            endDate.valueAsDate = inputValue;\n        }\n        endDate.addEventListener(\"change\", function (e) {\n            e.preventDefault();\n            clearInterval(timeInterval);\n            const temp = new Date(endDate.value);\n            localStorage.setItem(\"countdown\", temp);\n            startClock(temp);\n            timeStop = true;\n        });\n        function startClock(d) {\n            function updateCounter() {\n                let tl = (timeLeft(d));\n                if (tl.total <= 0) {\n                    timeStop = false;\n                }\n                for (let pro in tl) {\n                    let el = clock.querySelector(\".\" + pro);\n                    if (el) {\n                        el.innerHTML = tl[pro];\n                    }\n                }\n            }\n            updateCounter();\n            if (timeStop) {\n                timeInterval = setInterval(updateCounter, 1000);\n            } else {\n                clearInterval(timeInterval);\n            }\n        }\n        function timeLeft(d) {\n            let currentDate = new Date();\n            let t = Date.parse(d) - Date.parse(currentDate);\n            let seconds = Math.floor((t / 1000) % 60);\n            let minutes = Math.floor((t / 1000 / 60) % 60);\n            let hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n            let days = Math.floor(t / (1000 * 60 * 60 * 24));\n            return {\n                \"total\": t,\n                \"days\": days,\n                \"hours\": hours,\n                \"minutes\": minutes,\n                \"seconds\": seconds\n            };\n        }\n    </script> \n```", "```js\n <script>\n        const canvas = document.querySelector(\"#canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const penColor = document.querySelector(\"#penColor\");\n        const penWidth = document.querySelector(\"#penWidth\");\n        const btnSave = document.querySelector(\".save\");\n        const btnClear = document.querySelector(\".clear\");\n        const output = document.querySelector(\".output\");\n        const mLoc = {\n            draw: false,\n            x: 0,\n            y: 0,\n            lastX: 0,\n            lastY: 0\n        };\n        canvas.style.border = \"1px solid black\";\n        btnSave.addEventListener(\"click\", saveImg);\n        btnClear.addEventListener(\"click\", clearCanvas);\n        canvas.addEventListener(\"mousemove\", (e) => {\n            mLoc.lastX = mLoc.x;\n            mLoc.lastY = mLoc.y;\n            //console.log(e);\n            mLoc.x = e.clientX;\n            mLoc.y = e.clientY;\n            draw();\n        });\n        canvas.addEventListener(\"mousedown\", (e) => {\n            mLoc.draw = true;\n        });\n        canvas.addEventListener(\"mouseup\", (e) => {\n            mLoc.draw = false;\n        });\n        canvas.addEventListener(\"mouseout\", (e) => {\n            mLoc.draw = false;\n        });\n        function saveImg() {\n            const dataURL = canvas.toDataURL();\n            console.log(dataURL);\n            const img = document.createElement(\"img\");\n            output.prepend(img);\n            img.setAttribute(\"src\", dataURL);\n            const link = document.createElement(\"a\");\n            output.append(link);\n            let fileName = Math.random().toString(16).substr(-8) +\n                \".png\"\n            link.setAttribute(\"download\", fileName);\n            link.href = dataURL;\n            link.click();\n            output.removeChild(link);\n        }\n        function clearCanvas() {\n            let temp = confirm(\"clear canvas?\");\n            if (temp) {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n        }\n        function draw() {\n            if (mLoc.draw) {\n                ctx.beginPath();\n                ctx.moveTo(mLoc.lastX, mLoc.lastY);\n                ctx.lineTo(mLoc.x, mLoc.y);\n                ctx.strokeStyle = penColor.value;\n                ctx.lineWidth = penWidth.value;\n                ctx.stroke();\n                ctx.closePath();\n            }\n        }\n    </script> \n```", "```js\n    ctx.moveTo(100, 0);\n    ctx.lineTo(100, 100);\n    ctx.stroke(); \n    ```", "```js\n[\n    {\n        \"name\": \"Learn JavaScript\",\n        \"status\" : true\n    },\n    {\n        \"name\": \"Try JSON\",\n        \"status\" : false\n    }\n]\nconst url = \"list.json\";\nfetch(url).then(rep => rep.json())\n.then((data) => {\ndata.forEach((el) => {\n        console.log(`${el.name} = ${el.status}`);\n    });\n}); \n```", "```js\n<!DOCTYPE html>\n<html>\n    <head><title>Working with JSON Project</title></head>\n    <body>\n        <script src=\"img/myscript.js\"></script>\n    </body>\n</html>\n// myscript.js\nlet url = \"people.json\";\nfetch(url)\n.then(response => response.json())\n.then(data => {\n    console.log(data);\n    data.forEach(person => {\n        console.log(`${person.first} ${person.last} - ${person.topic}`);\n    });\n});\n// people.json \n[\n    {\n        \"first\": \"Laurence\",\n        \"last\": \"Svekis\",\n        \"topic\": \"JavaScript\"\n    },\n    {\n        \"first\": \"John\",\n        \"last\": \"Smith\",\n        \"topic\": \"HTML\"\n    },\n    {\n        \"first\": \"Jane\",\n        \"last\": \"Doe\",\n        \"topic\": \"CSS\"\n    }\n] \n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n    <title>JavaScript List Project</title>\n</head>\n<body>\n    <div class=\"output\"></div>\n    <input type=\"text\"><button>add</button>\n    <script>\n        const output = document.querySelector(\".output\");\n        const myValue = document.querySelector(\"input\");\n        const btn1 = document.querySelector(\"button\");\n        const url = \"list.json\";\n        btn1.addEventListener(\"click\", addToList);\n        let localData = localStorage.getItem(\"myList\");\n        let myList = [];\n        window.addEventListener(\"DOMContentLoaded\", () => {\n            output.textContent = \"Loading......\";\n            if (localData) {\n                myList = JSON.parse(localStorage.getItem(\"myList\"));\n                output.innerHTML = \"\";\n                myList.forEach((el, index) => {\n                    maker(el);\n                });\n            } else {\n                reloader();\n            }\n        });\n        function addToList() {\n            if (myValue.value.length > 3) {\n                const myObj = {\n                    \"name\": myValue.value\n                }\n                myList.push(myObj);\n                maker(myObj);\n                savetoStorage();\n            }\n            myValue.value = \"\";\n        }\n        function savetoStorage() {\n            console.log(myList);\n            localStorage.setItem(\"myList\", JSON.stringify(myList));\n        }\n        function reloader() {\n            fetch(url).then(rep => rep.json())\n            .then((data) => {\n                myList = data;\n                myList.forEach((el, index) => {\n                    maker(el);\n                });\n                savetoStorage();\n            });\n        }\n        function maker(el) {\n            const div = document.createElement(\"div\");\n            div.innerHTML = `${el.name}`;\n            output.append(div);\n        }\n    </script>\n</body>\n</html> \n```"]