["```js\n     $ ionic start MyFormValidation blank --v2\n     $ cd MyFormValidation\n\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { ThankyouPage } from '../pages/thankyou/thankyou';\n    import { MyFormService } from '../services/myform';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        ThankyouPage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage,\n        ThankyouPage\n      ],\n      providers: [MyFormService]\n    })\n    export class AppModule {}\n    ```", "```js\n     $ mkdir ./src/services\n\n    ```", "```js\n    import {Injectable} from '@angular/core';\n\n    @Injectable()\n    export class MyFormService {\n      public name: string = '';\n      public phone: number;\n      public comment: string = '';\n\n      constructor() {\n      }\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar color=\"primary\">\n        <ion-title>\n          Contact Form\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <p class=\"center\">\n        <ion-icon class=\"large lighter\" primary name=\"contact\"></ion-icon>\n      </p>\n      <form #f=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(f)\">\n        <ion-list>\n\n          <ion-item>\n            <ion-label floating>Name</ion-label>\n            <ion-input type=\"text\" name=\"name\" required [(ngModel)]=\"data.name\"></ion-input>\n          </ion-item>\n          <div [hidden]=\"f.controls.name && (f.controls.name.valid || (f.controls.name.pristine && !isSubmitted))\" class=\"note danger\">\n            Name is required\n          </div>\n\n          <ion-item>\n            <ion-label floating>Phone</ion-label>\n            <ion-input type=\"tel\" name=\"phone\" [(ngModel)]=\"data.phone\"></ion-input>\n          </ion-item>  \n\n          <ion-item>\n            <ion-label floating>Comment</ion-label>\n            <ion-input type=\"text\" required minlength=4 name=\"comment\" [(ngModel)]=\"data.comment\"></ion-input>\n          </ion-item>\n          <div *ngIf=\"(isSubmitted && f.controls.comment && f.controls.comment.pristine) || ((f.controls.comment) && (f.controls.comment.dirty && f.controls.comment.errors))\" class=\"note danger\">\n            Please enter {{ 4 - (f.controls.comment.errors.minlength ? f.controls.comment.errors.minlength.actualLength : 0) }} more characters\n          </div>\n\n          <ion-item class=\"tos\">\n            <ion-toggle item-left [(ngModel)]=\"data.tos\" name=\"tos\" type=\"button\" (click)=\"noSubmit($event)\"></ion-toggle>\n            <ion-label item-right>Agree to terms and conditions</ion-label>\n          </ion-item>\n\n          <div [hidden]=\"(!isSubmitted) || (f.controls.tos && data.tos)\" class=\"note danger\">\n            Please check Agree!\n          </div>\n\n        </ion-list>\n\n        <div class=\"center\">\n          <button ion-button type=\"submit\" round outline>Submit</button>\n        </div>\n      </form>\n\n    </ion-content>\n    ```", "```js\n    .center {\n      text-align: center;\n    }\n\n    ion-icon.large {\n      font-size: 7em;\n    }\n\n    ion-icon.lighter {\n      opacity: 0.5;\n    }\n\n    ion-list > .item:first-child {\n      border-top: 0;\n    }\n\n    ion-list > .item:last-child, ion-list > ion-item-sliding:last-child .item {\n      border-bottom: 0;\n    }\n\n    .tos {\n      padding-top: 10px;\n\n      ion-toggle {\n        padding-left: 0px;  \n      }\n      .item-inner {\n        border-bottom: 0;\n      }\n    }\n\n    .item ion-toggle {\n      padding-left: 0;\n    }\n\n    .note.danger {\n      padding-left: 16px;\n      color: #d14;\n    }\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { ThankyouPage } from '../thankyou/thankyou';\n    import { MyFormService } from '../../services/myform';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      private data: any;\n      private isSubmitted: Boolean = false;\n\n      constructor(public nav: NavController, private formData: MyFormService) {\n        this.nav = nav;\n        this.formData = formData;\n        this.data = {\n          name: '',\n          phone: '',\n          comment: '',\n          tos: false\n        }\n      }\n\n      onSubmit(myForm) {\n        this.isSubmitted = true;\n        console.log('onSubmit');\n        console.log(myForm);\n\n        if ((myForm.valid) && (myForm.value.tos)) {\n          this.formData.name = this.data.name;\n          this.formData.phone = this.data.phone;\n          this.formData.comment = this.data.comment; \n          this.nav.push(ThankyouPage);\n        }\n      }\n\n      noSubmit(e) {\n        e.preventDefault();\n      }\n    }\n    ```", "```js\n     $ mkdir ./src/pages/thankyou\n\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { MyFormService } from '../../services/myform'\n\n    @Component({\n      templateUrl: 'thankyou.html'\n    })\n    export class ThankyouPage {\n\n      constructor(private formData: MyFormService) {\n        this.formData = formData;\n      }\n\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar color=\"secondary\">\n        <ion-title>\n          Thank You\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <h6 class=\"padding\">\n        You submitted the following information\n      </h6>\n\n      <div class=\"my-table\">\n        <ion-row>\n          <ion-col width-25 class=\"my-label\">Name</ion-col>\n          <ion-col width-75>{{ formData.name }}</ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col width-25 class=\"my-label\">Phone</ion-col>\n          <ion-col width-75>{{ formData.phone }}</ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col width-25 class=\"my-label\">Comment</ion-col>\n          <ion-col width-75>{{ formData.comment }}</ion-col>\n        </ion-row>\n      </div>  \n    </ion-content>\n    ```", "```js\n    h6.padding {\n      color: #4C555A;\n      padding: 10px;\n    }\n\n    .my-label {\n      text-align: right;\n      font-weight: bold;\n    }\n\n    .my-table {\n      ion-row {\n        color: #4C555A;\n        padding: 0;\n        height: 30px;\n      }\n\n      ion-row + ion-row {\n        margin-top: 0;\n      }\n\n      ion-row:nth-child(odd) ion-col {\n        background: #F9FAFB;\n      }\n    }\n    ```", "```js\n    @import '../pages/home/home';\n    @import '../pages/thankyou/thankyou';\n    ```", "```js\n     $ ionic serve\n\n    ```", "```js\n<form #f=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(f)\">\n```", "```js\n<ion-input type=\"text\" name=\"name\" required [(ngModel)]=\"data.name\"></ion-input>\n```", "```js\n<div [hidden]=\"f.controls.name && (f.controls.name.valid || (f.controls.name.pristine && !isSubmitted))\" class=\"note danger\">\n  Name is required\n</div>\n```", "```js\n<ion-input type=\"tel\" name=\"phone\" [(ngModel)]=\"data.phone\"></ion-input>\n```", "```js\n<ion-input type=\"text\" required minlength=4 name=\"comment\" [(ngModel)]=\"data.comment\"></ion-input>\n```", "```js\n<div *ngIf=\"(isSubmitted && f.controls.comment && f.controls.comment.pristine) || ((f.controls.comment) && (f.controls.comment.dirty && f.controls.comment.errors))\" class=\"note danger\">\n  Please enter {{ 4 - (f.controls.comment.errors.minlength ? f.controls.comment.errors.minlength.actualLength : 0) }} more characters\n</div>\n```", "```js\nonSubmit(myForm) {\n  this.isSubmitted = true;\n  console.log('onSubmit');\n  console.log(myForm);\n\n  if ((myForm.valid) && (myForm.value.tos)) {\n    this.formData.name = this.data.name;\n    this.formData.phone = this.data.phone;\n    this.formData.comment = this.data.comment;\n    this.nav.push(ThankyouPage);\n  }\n}\n```", "```js\nnoSubmit(e) {\n  e.preventDefault();\n}\n```", "```js\n     $ sudo npm install -g http-server\n\n    ```", "```js\n     $ mkdir MockRest\n     $ cd MockRest\n\n    ```", "```js\n    [\n      {\n        \"title\": \"What a beautiful song\",\n        \"category\": \"objects\",\n        \"description\": \"Music is a moral law. It gives soul to the universe, wings to the mind, flight to the imagination, and charm and gaiety to life and to everything.\"\n      },\n      {\n        \"title\": \"The world we live in\",\n        \"category\": \"nature\",\n        \"description\": \"Look deep into nature, and then you will understand everything better.\"\n      },\n      {\n        \"title\": \"Life experiences\",\n        \"category\": \"people\",\n        \"description\": \"People who know little are usually great talkers, while men who know much say little.\"\n      }\n    ]\n    ```", "```js\n     $ http-server --cors=Access-Control-Allow-\n\n    ```", "```js\n     $ ionic start MyRestbackend blank --v2\n     $ cd MyRestbackend\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Home\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n      <ion-card #myCard *ngFor=\"let item of quotes.data\">\n        <img [src]='\"https://source.unsplash.com/category/\" + item.category + \"/600x390\"' [height]=\"myCard.clientWidth * 390 / 600\"/>\n        <ion-card-content>\n          <ion-card-title>\n            {{ item.title }}\n          </ion-card-title>\n          <p>\n            {{ item.description }}\n          </p>\n        </ion-card-content>\n      </ion-card>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { QuoteService } from '../../services/quote'\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n\n      constructor(public navCtrl: NavController, public quotes: QuoteService) {\n        this.quotes = quotes;\n        this.quotes.getQuotes();    \n      }\n\n    }\n    ```", "```js\n    ion-card {\n      img {\n        background-color: #f4f4f4;\n      }\n    }\n    ```", "```js\n     $ mkdir ./src/services\n\n    ```", "```js\n    import { Injectable } from '@angular/core';\n    import { Http } from '@angular/http';\n\n    @Injectable()\n    export class QuoteService {\n      private http: any;\n      public data: any;\n\n      constructor(http: Http) {\n        this.http = http;\n      }\n\n      getQuotes() {\n        this.http.get(\"http://localhost:8080/test.json\")\n          .subscribe(res => {\n            this.data = res.json();\n            console.log(this.data);\n          }, error => {\n            console.log(error);\n          });\n      }\n\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { QuoteService } from '../services/quote'\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: [QuoteService]\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n    ```", "```js\nimport {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\n```", "```js\n  getQuotes() {\n    this.http.get(\"http://localhost:8080/test.json\")\n      .subscribe(res => {\n        this.data = res.json();\n        console.log(this.data);\n      }, error => {\n        console.log(error);\n      });\n  }\n```", "```js\nthis.data = JSON.parse(res._body);\n```", "```js\n<ion-card #myCard *ngFor=\"let item of quotes.data\">\n    <img [src]='\"https://source.unsplash.com/category/\" + item.category + \"/600x390\"' [height]=\"myCard.clientWidth * 390 / 600\"/>\n```", "```js\n     $ ionic start StripePayment blank --v2\n     $ cd StripePayment\n\n    ```", "```js\n    <script type=\"text/javascript\" src=\"img/\"></script>\n    ```", "```js\n    <ion-content class=\"gray-bg\">\n      <p class=\"center\">\n        <ion-icon class=\"icon-large\" name=\"card\"></ion-icon>\n      </p>\n\n      <ion-card>\n        <ion-card-content>\n          <ion-list>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"cc\" [(ngModel)]=\"ngForm.cc\" placeholder=\"Number\"></ion-input>\n            </ion-item>\n\n            <ion-item>\n              <ion-input type=\"number\" name=\"cvc\" [(ngModel)]=\"ngForm.cvc\" placeholder=\"CVC\"></ion-input>\n            </ion-item>\n\n            <ion-item>\n              <ion-input item-left type=\"number\" name=\"month\" [(ngModel)]=\"ngForm.month\" placeholder=\"Month\"></ion-input>\n              <ion-input item-right type=\"number\" name=\"year\" [(ngModel)]=\"ngForm.year\" placeholder=\"Year\"></ion-input>\n            </ion-item>\n\n            <button type=\"button\" ion-button bottom block (click)=\"onSubmit()\">Pay $20</button>\n\n          </ion-list>\n        </ion-card-content>\n      </ion-card>\n\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { ThankyouPage } from '../thankyou/thankyou'\n    declare var Stripe: any;\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      private token: string = '';\n      private ngForm: any = {\n          cc: '',\n          cvc: '',\n          month: '',\n          year: '',\n          amount: 2000    \n      };\n\n      constructor(public nav: NavController) {\n        this.nav = nav;\n        console.log(Stripe);\n        Stripe.setPublishableKey('YOUR STRIPE PUBLIC KEY HERE');\n      }\n\n      onSubmit() {\n        console.log(this.ngForm);\n        Stripe.card.createToken({\n          number: this.ngForm.cc, //'4242424242424242',\n          cvc: this.ngForm.cvc, //'123',\n          exp_month: this.ngForm.month, //12,\n          exp_year: this.ngForm.year, //2017,\n          amount: 2000\n        }, (status, response) => this.stripeResponseHandler(status, response));\n      }\n\n      stripeResponseHandler(status, response) {\n\n        if (response.error) {\n          // Show the errors on the form\n          console.log('error');\n          console.log(response.error.message);\n        } else {\n          // response contains id and card, which contains additional card details\n          this.token = response.id;\n          // Insert the token into the form so it gets submitted to the server\n          console.log('success');\n          console.log('Sending token param:');\n          console.log(this.token);\n          this.nav.push(ThankyouPage, {token: this.token});\n        }\n      }\n\n    }\n    ```", "```js\n    .center {\n      text-align: center;\n    }\n\n    .gray-bg {\n      background-color: #f4f4f7;\n    }\n\n    .icon-large {\n      font-size: 150px;\n      color: #387ef5;\n      opacity: 0.5;\n    }\n\n    .list-ios > .item-block:first-child {\n      border-top: 0;  \n    }\n\n    ion-card ion-list .item {\n      border-bottom: 1px solid #c8c7cc;\n    }\n\n    ion-list .item-inner {\n      border-bottom: 0;\n    }\n\n    ion-card-content .button-block {\n      margin-top: 16px;\n       }\n    ```", "```js\n    $ mkdir ./src/pages/thankyou\n\n    ```", "```js\n    <ion-content class=\"green-bg\">\n      <h4 class=\"center\">\n        Your token is\n      </h4>\n      <p class=\"center\">\n        <code>\n          {{ token }}\n        </code>\n      </p>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController, NavParams } from 'ionic-angular';\n\n    @Component({\n      selector: 'thank-you',\n      templateUrl: 'thankyou.html'\n    })\n    export class ThankyouPage {\n      private token: string = '';\n\n      constructor(public nav: NavController, public params: NavParams) {\n        this.token = this.params.get('token');\n        console.log('Getting token param:');\n        console.log(this.token);\n      }\n\n    }\n    ```", "```js\n    .green-bg {\n      color: black;\n      background-color: #32db64;\n    }\n\n    h4.center {\n      padding-top: 150px;\n    }\n\n    .center {\n      text-align: center;\n    }\n    ```", "```js\n    @import '../pages/thankyou/thankyou';\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { ThankyouPage } from '../pages/thankyou/thankyou'\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        ThankyouPage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage,\n        ThankyouPage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\ndeclare var Stripe: any;\n```", "```js\n  onSubmit() {\n    console.log(this.ngForm);\n    Stripe.card.createToken({\n      number: this.ngForm.cc, //'4242424242424242',\n      cvc: this.ngForm.cvc, //'123',\n      exp_month: this.ngForm.month, //12,\n      exp_year: this.ngForm.year, //2017,\n      amount: 2000\n    }, (status, response) => this.stripeResponseHandler(status, response));\n  }\n```", "```js\n<button type=\"button\" ion-button bottom block (click)=\"onSubmit()\">Pay $20</button>\n```", "```js\n(status, response) => this.stripeResponseHandler(status, response)\n```", "```js\n  stripeResponseHandler(status, response) {\n\n    if (response.error) {\n      // Show the errors on the form\n      console.log('error');\n      console.log(response.error.message);\n    } else {\n      // response contains id and card, which contains additional card details\n      this.token = response.id;\n      // Insert the token into the form so it gets submitted to the server\n      console.log('success');\n      console.log('Sending token param:');\n      console.log(this.token);\n      this.nav.push(ThankyouPage, {token: this.token});\n    }\n  }\n```", "```js\nthis.nav.push(ThankyouPage, {token: this.token});\n```", "```js\nthis.params.get('token');\n```"]