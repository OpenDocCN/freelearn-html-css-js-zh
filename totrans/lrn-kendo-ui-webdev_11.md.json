["```js\n[HttpGet]\npublic ActionResult Get(int objectId = 0)\n{\n  ...\n}\n\n[HttpPost]\npublic ActionResult Post(Object postedObject)\n{\n  ...\n}\n\n[HttpPut]\npublic ActionResult Put(Object objectToPut)\n{\n  ...\n}\n\n[HttpPatch]\npublic ActionResult Patch(Object objectToPatch)\n{\n  ...\n}\n\n[HttpDelete]\npublic ActionResult Delete(int objectId)\n{\n  ...\n}\n```", "```js\n// GET api/values\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n\n// GET api/values/5\npublic string Get(int id)\n{\n  return \"value\";\n}\n\n// POST api/values\npublic void Post([FromBody]string value)\n{\n}\n\n// PUT api/values/5\npublic void Put(int id, [FromBody]string value)\n{\n}\n\n// DELETE api/values/5\npublic void Delete(int id)\n{\n}\n```", "```js\npublic class Movie\n{\n  public int Id { get; set; }\n  public string Name { get; set; }\n  public int ReleaseYear { get; set; }\n  public int Rating { get; set; }\n  public int Rank { get; set; }\n}\n```", "```js\n...\nusing System.Data.Entity;\n...\n\npublic class MoviesContext : DbContext\n{\n  public DbSet<Movie> Movies { get; set; }\n}\n```", "```js\n// Uncomment the following line of code to enable query support \n   for actions with an IQueryable or IQueryable<T> return type.\n// To avoid processing unexpected or malicious queries, use the \n   validation settings on QueryableAttribute to validate \n   incoming queries.\n// For more information, visit \n   http://go.microsoft.com/fwlink/?LinkId=279712.\nconfig.EnableQuerySupport();\n```", "```js\n// GET api/values\n[Queryable]\npublic IQueryable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" }.AsQueryable();\n}\n```", "```js\nODataModelBuilder modelBuilder = new ODataConventionModelBuilder();\nmodelBuilder.EntitySet<Movie>(\"Movies\");\nMicrosoft.Data.Edm.IEdmModel model = modelBuilder.GetEdmModel();\nconfig.Routes.MapODataRoute(\"ODataRoute\", \"OData\", model);\n```", "```js\npublic ActionResult MoviesGrid([DataSourceRequest]DataSourceRequest request)\n{\n  return Json(\n     db.Movies.ToDataSourceResult(request), JsonRequestBehavior.AllowGet);\n}\n```", "```js\npublic ActionResult Grid()\n{\n  return View();\n}\n```", "```js\n@using Kendo.Mvc.UI;\n\n@{\n    ViewBag.Title = \"Grid\";\n}\n\n@(Html.Kendo().Grid<Chapter11.Models.Movie>().Name(\"moviesGrid\")\n    .Columns(columns =>\n        {\n            columns.Bound(p => p.Name);\n            columns.Bound(p => p.ReleaseYear);\n            columns.Bound(p => p.Rating);\n            columns.Bound(p => p.Rank);\n        }\n        )\n    .Pageable()\n    .Sortable()\n    .Filterable()\n    .DataSource(dataSource => dataSource\n        .Ajax()\n        .PageSize(5)\n        .Read(read => read.Action(\"MoviesGrid\", \"Movies\"))\n    ))\n```", "```js\nprivate MoviesContext db = new MoviesContext();\n\npublic ActionResult ListView()\n{\n  return View(db.Movies);\n}\n```", "```js\n@using Kendo.Mvc.UI;\n\n@model IEnumerable<Chapter11.Models.Movie>\n\n@{\n    ViewBag.Title = \"ListView\";\n}\n<script type=\"text/x-kendo-tmpl\" id=\"template\">\n    <div class=\"movie-view\">\n        <dl>\n            <dt>Name</dt>\n            <dd>${Name}</dd>\n            <dt>Rating</dt>\n            <dd>${Rating}</dd>\n            <dt>Rank</dt>\n            <dd>${Rank}</dd>\n        </dl>\n    </div>\n    <div>\n        <a class=\"k-button k-button-icontext k-edit-button\"\n            href=\"\\\\#\"><span class=\"k-icon k-edit\"></span>Edit</a>\n        <a class=\"k-button k-button-icontext k-delete-button\"\n            href=\"\\\\#\"><span class=\"k-icon k-delete\"></span>Delete</a>\n    </div>\n</script>\n<h2>ListView</h2>\n```", "```js\n@(Html.Kendo().ListView(Model)\n    .Name(\"moviesListView\")\n    .TagName(\"div\")\n    .ClientTemplateId(\"template\")\n    .Editable()\n    .DataSource(dataSource => {\n        dataSource\n            .Read(read => read.Action(\"MoviesGrid\", \"Movies\"))\n            .Update(update => update.Type(HttpVerbs.Post)\n              .Url(\"/api/MovieApi\"))\n            .PageSize(5)\n            .Model(config => config.Id(\"Id\"));\n    })\n    .Pageable())\n```", "```js\n@model Chapter11.Models.Movie\n\n<div class=\"movie-view\">\n    <dl>\n        <dt>Name</dt>\n        <dd>@Html.EditorFor(model => model.Name)</dd>\n        <dt>Rating</dt>\n        <dd>@Html.EditorFor(model => model.Rating)</dd>\n        <dt>Rank</dt>\n        <dd>@Html.EditorFor(model => model.Rank)</dd>\n    </dl>\n    <div>\n        <a class=\"k-button k-button-icontext k-update-button\"\n            href=\"\\\\#\"><span class=\"k-icon k-update\"></span>Save</a>\n        <a class=\"k-button k-button-icontext k-cancel-button\"\n            href=\"\\\\#\"><span class=\"k-icon k-cancel\"></span>Cancel</a>\n    </div>\n</div>\n```"]