["```js\n<!-- jQuery - this must come first -->\n<script src=\"img/jquery-3.2.1.min.js\"></script>\n\n<!-- Bootstrap's JavaScript -->\n<script src=\"img/bootstrap.min.js\"></script>\n```", "```js\n$ tree\n.\n├── greeter.js\n└── main.js\n0 directories, 2 files\n```", "```js\n// greeter.js\nconst helloWorld = function (name) {\n  process.stdout.write(`hello ${name}!\\n`)\n};\nconst internal = function (name) {\n  process.stdout.write('This is a private function')\n};\nexports.sayHello = helloWorld;\n```", "```js\n// main.js\nconst greeter = require('./greeter.js');\ngreeter.sayHello(\"Daniel\");\n```", "```js\n$ node main.js \nhello Daniel!\n```", "```js\n(function(exports, require, module, __filename, __dirname) {\n  // Module code\n});\n```", "```js\n// greeter.js\n\nconst helloWorld = function (name) {\n  process.stdout.write(`hello ${name}!\\n`)\n};\nconst privateHellowWorld = function (name) {\n  process.stdout.write('This is a private function')\n};\nexport default helloWorld;\n\n// main.js\n\nimport greeter from \"./greeter.js\";\ngreeter.sayHello(\"Daniel\");\n```", "```js\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\n$ source ~/.nvm/nvm.sh\n```", "```js\n$ nvm ls-remote\n ...\n v0.12.17\n v0.12.18\n ...\n v8.11.3 (LTS: Carbon)\n v8.11.4 (Latest LTS: Carbon)\n ...\n v10.8.0\n v10.9.0\n```", "```js\n$ nvm install 6.11.1\n$ nvm install lts/boron\n```", "```js\n$ nvm install lts/*\nDownloading and installing node v8.11.4...\nDownloading https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz...\n######################################################################### 100.0%\nComputing checksum with sha256sum\nChecksums matched!\nNow using node v8.11.4 (npm v5.6.0)\n```", "```js\n$ node -v\nv8.11.4\n```", "```js\n$ npm -v\n5.5.1\n```", "```js\n$ mkdir hobnob && cd hobnob\n$ git init\n$ echo \"8.11.4\" > .nvmrc\n```", "```js\n$ cat package.json \n{\n \"name\": \"hobnob\",\n \"version\": \"0.1.0\",\n \"description\": \"Back end for a simple user directory API with \n   recommendation engine\",\n \"main\": \"index.js\",\n \"scripts\": {\n \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n },\n \"repository\": {\n \"type\": \"git\",\n \"url\": \"git+https://github.com/d4nyll/hobnob.git\"\n },\n \"author\": \"Daniel Li <dan@danyll.com>\",\n \"license\": \"MIT\",\n \"bugs\": {\n \"url\": \"https://github.com/d4nyll/hobnob/issues\"\n },\n \"homepage\": \"https://github.com/d4nyll/hobnob#readme\"\n}\n```", "```js\n$ npm install --global yarn\n```", "```js\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt-get update && sudo apt-get install yarn\n```", "```js\nconst http = require('http');\nconst requestHandler = function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello, World!');\n}\nconst server = http.createServer(requestHandler);\nserver.listen(8080);\n```", "```js\nconst http = require('http');\n```", "```js\nconst requestHandler = function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello, World!');\n}\nconst server = http.createServer(requestHandler);\n```", "```js\nserver.listen(8080);\n```", "```js\nconst http = require('http'); // CommonJS syntax\nimport http from 'http'; // ES6 syntax\n```", "```js\ndouble = a => a * 2\n```", "```js\ndouble = function double(a) {\n  return a * 2;\n};\n```", "```js\n# Install @babel/cli as a development dependency\n$ yarn add @babel/cli --dev\n\n# transpile a single file\n$ babel example.js -o compiled.js\n\n# transpile an entire directory\n$ babel src -d build\n```", "```js\n# install @babel/node\n$ yarn add @babel/node --dev\n\n# instead of this\n$ node main.js\n\n# you'd run\n$ babel-node main.js\n```", "```js\nimport * as babel from '@babel/core';\nvar result = babel.transform(\"code();\", options);\nresult.code;\nresult.map;\nresult.ast;\n```", "```js\n$ yarn add @babel/polyfill\n```", "```js\nrequire(\"@babel/polyfill\"); # ES5\nimport \"@babel/polyfill\"; # ES6\n```", "```js\n$ yarn add @babel/core @babel/cli --dev\n$ yarn add @babel/polyfill\n```", "```js\n$ npx babel index.js -o compiled.js\n```", "```js\n{\n \"presets\": [],\n \"plugins\": []\n}\n```", "```js\n$ yarn add @babel/preset-es2017 @babel/plugin-syntax-object-rest-spread --dev\n```", "```js\n{\n  \"presets\": [\"@babel/es2017\"],\n  \"plugins\": [\"@babel/syntax-object-rest-spread\"]\n}\n```", "```js\n$ yarn remove @babel/preset-es2017 @babel/plugin-syntax-object-rest-spread\n$ yarn add @babel/preset-env --dev\n```", "```js\n{\n  \"presets\": [\"@babel/env\"]\n}\n```", "```js\n{\n  \"presets\": [\n    [\"@babel/env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```", "```js\n$ npx babel index.js -o compiled.js\n$ node compiled.js\n```", "```js\n$ rm compiled.js\n$ mkdir src dist\n$ mv index.js src/\n```", "```js\n$ rm -rf dist/ && npx babel src -d dist\n$ node dist/index.js\n```", "```js\nimport \"@babel/polyfill\";\n...\n```", "```js\n\"scripts\": {\n \"build\": \"rm -rf dist/ && babel src -d dist\",\n \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n}\n```", "```js\n\"scripts\": {\n  \"build\": \"rm -rf dist/ && babel src -d dist\",\n  \"serve\": \"yarn run build && node dist/index.js\",\n  \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n}\n```", "```js\n$ yarn add rimraf --dev\n```", "```js\n\"build\": \"rimraf dist && babel src -d dist\",\n```", "```js\n$ yarn add nodemon --dev\n```", "```js\n\"scripts\": {\n  \"build\": \"rimraf dist && babel src -d dist\",\n  \"serve\": \"yarn run build && node dist/index.js\",\n  \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n  \"watch\": \"nodemon -w src --exec yarn run serve\"\n},\n```", "```js\n[nodemon] restarting due to changes...\n[nodemon] starting `yarn run serve`\n```", "```js\n$ yarn add eslint --dev\n$ npx eslint --init\n? How would you like to configure ESLint?\n ![](img/2c64d4ea-912b-4a87-9a27-d23df9333633.png)Use a popular style guide\n Answer questions about your style\n Inspect your JavaScript file(s)\n```", "```js\n? Which style guide do you want to follow? (Use arrow keys)\n![](img/2c64d4ea-912b-4a87-9a27-d23df9333633.png) Airbnb (https://github.com/airbnb/javascript)\n Standard (https://github.com/standard/standard)\n Google (https://github.com/google/eslint-config-google)\n```", "```js\n? Do you use React? No\n? What format do you want your config file to be in? JSON\n```", "```js\nChecking peerDependencies of eslint-config-airbnb-base@latest\nThe config that you've selected requires the following dependencies:\n\neslint-config-airbnb-base@latest eslint@^4.19.1 || ^5.3.0 eslint-plugin-import@^2.14.0\n? Would you like to install them now with npm? Yes\n```", "```js\n{\n    \"extends\": \"airbnb-base\"\n}\n```", "```js\n$ npx eslint src/index.js\n\n/home/dli/.d4nyll/.beja/final/code/6/src/index.js\n 1:8 error Strings must use singlequote quotes\n 2:1 error Expected 1 empty line after import statement not followed by another import import/newline-after-import\n 3:24 warning Unexpected unnamed function func-names\n 4:22 error A space is required after '{' object-curly-spacing\n 4:51 error A space is required before '}' object-curly-spacing\n 6:2 error Missing semicolon semi\n 8:21 error Newline required at end of file but not found eol-last\n\n![](img/b1bdf0f6-02f3-4bb8-83c0-45b6f4ef931f.png) 8 problems (7 errors, 1 warning)\n 6 errors and 0 warnings potentially fixable with the `--fix` option.\n```", "```js\nimport '@babel/polyfill';\nimport http from 'http';\n\nfunction requestHandler(req, res) {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello, World!');\n}\nconst server = http.createServer(requestHandler);\nserver.listen(8080); // Note that there is a newline below this line\n```", "```js\n\"scripts\": {\n    ...\n    \"fix\": \"eslint src --fix\",\n    \"lint\": \"eslint src\",\n    ...\n```", "```js\n$ yarn add husky --dev\n```", "```js\n\"scripts\": {\n    ...\n    \"precommit\": \"yarn run lint\",\n    ...\n```", "```js\n...\nerror Command failed with exit code 1.\nhusky > pre-commit hook failed (add --no-verify to bypass)\n```", "```js\n$ git status\nUntracked files:\n .babelrc\n .eslintrc.json\n .nvmrc\n dist/\n node_modules/\n package.json\n src/\n yarn.lock\n```", "```js\nnode_modules/\ndist/\n```", "```js\n$ git status\nUntracked files:\n .babelrc\n .eslintrc.json\n .gitignore\n .nvmrc\n package.json\n src/\n yarn.lock\n```", "```js\n$ git status\nUntracked files:\n .babelrc\n .eslintrc.json\n .gitignore\n .nvmrc\n package.json\n src/\n yarn.lock\n$ git add -A\n$ git commit -m \"Initial project setup\"\n```"]