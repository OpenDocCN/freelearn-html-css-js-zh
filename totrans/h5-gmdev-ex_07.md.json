["```js\n    <link href=\"http://fonts.googleapis.com/css?family=Orbitron:400,700\" rel=\"stylesheet\" type=\"text/css\">\n    ```", "```js\n    <div id=\"timer\">\n     Elapsed time: <span id=\"elapsed-time\">00:00</span>\n    </div>\n    <section id=\"game\">\n       <div id=\"cards\">\n          <div class=\"card\">\n             <div class=\"face front\"></div>\n             <div class=\"face back\"></div>\n          </div> <!-- .card -->\n       </div> <!-- #cards -->\n    </section> <!-- #game -->\n\n    <section id=\"popup\" class=\"hide\">\n     <div id=\"popup-bg\">\n     </div>\n     <div id=\"popup-box\">\n     <div id=\"popup-box-content\">\n     <h1>You Won!</h1>\n     <p>Your Score:</p>\n     <p><span class='score'>13</span></p>\n     </div>\n     </div>\n    </section>\n\n    ```", "```js\n    $(document).ready(function(){\n       ...\n      // reset the elapsed time to 0.\n      matchingGame.elapsedTime = 0;\n\n      // start the timer\n      matchingGame.timer = setInterval(countTimer, 1000);\n    }\n    ```", "```js\n    function countTimer() {\n      matchingGame.elapsedTime++;\n\n      // calculate the minutes and seconds from elapsed time\n      var minute = Math.floor(matchingGame.elapsedTime / 60);\n      var second = matchingGame.elapsedTime % 60;\n\n      // add padding 0 if minute and second is less than 10\n      if (minute < 10) minute = \"0\" + minute;\n      if (second < 10) second = \"0\" + second;\n\n      // display the elapsed time\n      $(\"#elapsed-time\").html(minute+\":\"+second);\n    }\n    ```", "```js\n    function removeTookCards() {\n      $(\".card-removed\").remove();\n\n      // check whether all cards are removed and show game over\n      if ($(\".card\").length === 0) {\n        gameover();\n      }\n    }\n    ```", "```js\n    function gameover() {\n      // stop the timer\n      clearInterval(matchingGame.timer);\n\n      // set the score in the game over popup\n      $(\".score\").html($(\"#elapsed-time\").html());\n\n      // show the game over popup\n      $(\"#popup\").removeClass(\"hide\");\n    }\n    ```", "```js\n    <section id=\"popup\" class=\"hide\">\n      <div id=\"popup-bg\">\n      </div>\n      <div id=\"popup-box\">\n        <div id=\"popup-box-content\">\n          <h1>You Won!</h1>\n          <p>Your Score:</p>\n          <p><span class='score'>13</span></p>\n          <p>\n     <small>Last Score: <span class='last-score'>20</span>\n     </small>\n     </p>\n        </div>\n      </div>\n    </section>\n    ```", "```js\n    function gameover() {\n      // stop the timer\n      clearInterval(matchingGame.timer);\n\n      // display the elapsed time in the game over popup\n      $(\".score\").html($(\"#elapsed-time\").html());\n\n      // load the saved last score from local storage\n     var lastElapsedTime = localStorage.getItem(\"last-elapsed-time\");\n\n     // convert the elapsed seconds\n     //into minute:second format\n     // calculate the minutes and seconds\n     // from elapsed time\n     var minute = Math.floor(lastElapsedTime / 60);\n     var second = lastElapsedTime % 60;\n\n     // add padding 0\n     if (minute < 10) minute = \"0\" + minute;\n     if (second < 10) second = \"0\" + second;\n\n     // display the last elapsed time in game over popup\n     $(\".last-score\").html(minute+\":\"+second);\n\n     // save the score in local storage\n     localStorage.setItem(\"last-elapsed-time\", matchingGame.elapsedTime);\n\n      // show the game over popup\n      $(\"#popup\").removeClass(\"hide\");\n    }\n    ```", "```js\nlocalStorage.setItem(key, value);\n```", "```js\nlocalStorage.setItem(\"last-elapsed-time\", matchingGame.elapsedTime);\n```", "```js\nlocalStorage.getItem(key);\n```", "```js\nvar score = 13.234;\n\nlocalStorage.setItem(\"game-score\",score);\n// result: stored \"13.234\".\n\nvar gameScore = localStorage.getItem(\"game-score\");\n// result: get \"13.234\" into gameScore;\n\ngameScore = parseFloat(gameScore);\n// result: 13.234 floating value\n```", "```js\nlocalStorage.setItem(\"last-elapsed-time\", elapsedTime);\nvar lastElapsedTime = localStorage.getItem(\"last-elapsed-time\");\n```", "```js\nlocalStorage[\"last-elapsed-time\"] = elapsedTime;\nvar lastElapsedTime = localStorage[\"last-elapsed-time\"];\n```", "```js\n    <p>\n      <small>Last Score: <span class='last-score'>0</span><br>\n        Saved on: <span class='saved-time'></span>\n      </small>\n    </p>\n    ```", "```js\n    function gameover() {\n       // stop the timer\n       clearInterval(matchingGame.timer);\n\n       // display the elapsed time in the game over popup\n       $(\".score\").html($(\"#elapsed-time\"));\n\n       // load the saved last score and save time from local storage\n     var lastScore = localStorage.getItem(\"last-score\");\n\n     // check if there is no saved record\n     lastScoreObj = JSON.parse(lastScore);\n     if (lastScoreObj === null) {\n     // create an empty record if there is no saved record\n     lastScoreObj = {\"savedTime\": \"no record\", \"score\": 0};\n     }\n     var lastElapsedTime = lastScoreObj.score;\n\n       // convert the elapsed seconds into minute:second format\n       // calculate the minutes and seconds from elapsed time\n       var minute = Math.floor(lastElapsedTime / 60);\n       var second = lastElapsedTime % 60;\n\n       // add padding 0 if minute and second is less than 10\n       if (minute < 10) minute = \"0\" + minute;\n       if (second < 10) second = \"0\" + second;\n\n       // display the last elapsed time in game over popup\n       $(\".last-score\").html(minute+\":\"+second);\n\n       // display the saved time of last score\n     var savedTime = lastScoreObj.savedTime;\n     $(\".saved-time\").html(savedTime);\n\n     // get the current datetime\n     var currentTime = new Date();\n\n     // convert date time to string\n     var now = currentTime.toLocaleString();\n\n     //construct the object of datetime and game score\n     var obj = { \"savedTime\": now, \"score\": matchingGame.elapsedTime};\n\n     // save the score into local storage\n     localStorage.setItem(\"last-score\", JSON.stringify(obj));\n       // show the game over popup\n       $(\"#popup\").removeClass(\"hide\");\n    }\n    ```", "```js\nJSON.stringify(anyObject);\n```", "```js\nvar jsObj = {};\njsObj.testArray = [1,2,3,4,5];\njsObj.name = 'CSS3 Matching Game';\njsObj.date = '8 May, 2011';\nJSON.stringify(jsObj);\n// result: {\"testArray\":[1,2,3,4,5],\"name\":\"CSS3 Matching Game\",\"date\":\"8 May, 2011\"}\n```", "```js\nJSON.parse(jsonFormattedString);\n```", "```js\n    <div id=\"popup-box\">\n      <div class=\"ribbon hide\">\n        <div class=\"ribbon-body\">\n          <span>New Record</span>\n        </div>\n        <div class=\"triangle\"></div>\n      </div>\n      <div id=\"popup-box-content\">\n      ...\n    ```", "```js\n    #popup-box {\n      position: relative;\n    }\n    ```", "```js\n    .ribbon.hide {\n      display: none;\n    }\n    .ribbon {\n      float: left;\n      position: absolute;\n      left: -7px;\n      top: 165px;\n      z-index: 0;\n\n      font-size: .5em;\n      text-transform: uppercase;\n      text-align: right;\n    }\n\n    .ribbon-body {\n      height: 14px;\n      background: #ca3d33;\n      padding: 6px;\n      z-index: 100;\n      box-shadow: 2px 2px 0 rgba(150,120,70,.4);\n      border-radius: 0 5px 5px 0;\n\n      color: #fff;\n      text-shadow: 0px 1px 1px rgba(0,0,0,.3);\n    }\n\n    .triangle {\n      position: relative;\n      height: 0px;\n      width: 0;\n      left: -5px;\n      top: -32px;\n      border-style: solid;\n      border-width: 6px;\n      border-color: transparent #882011 transparent transparent;\n      z-index: -1;\n    }\n    ```", "```js\n    if (lastElapsedTime === 0 || matchingGame.elapsedTime < lastElapsedTime) {\n       $(\".ribbon\").removeClass(\"hide\");\n    }\n    ```", "```js\n.triangle {\n   position: relative;\n   height: 0px;\n   width: 0;\n   left: -5px;\n   top: -32px;\n   border-style: solid;\n   border-width: 6px;\n   border-color: transparent #882011 transparent transparent;\n   z-index: -1;\n}\n```", "```js\n    matchingGame.savingObject = {};\n\n    matchingGame.savingObject.deck = [];\n\n    // array to store which card is removed by their index.\n    matchingGame.savingObject.removedCards = [];\n\n    // store the counting elapsed time.\n    matchingGame.savingObject.currentElapsedTime = 0;\n    ```", "```js\n    $(document).ready(function(){\n       // existing code goes here.\n\n       // shuffling the deck\n       matchingGame.deck.sort(shuffle);\n\n       // copying the deck into saving object.\n     matchingGame.savingObject.deck = matchingGame.deck.slice();\n\n       // clone 12 copies of the card DOM\n       for(var i=0;i<11;i++){\n          $(\".card:first-child\").clone().appendTo(\"#cards\");\n       }\n\n       // existing code goes here.\n\n    // embed the pattern data into the DOM element.\n    $(this).attr(\"data-pattern\",pattern);\n\n    // save the index into the DOM element,\n    //so we know which is the next card.\n    $(this).attr(\"data-card-index\",index);\n    ...\n    ```", "```js\n    function countTimer() {\n       matchingGame.elapsedTime++;\n\n       // save the current elapsed time in savingObject.\n     matchingGame.savingObject.currentElapsedTime = matchingGame.elapsedTime;\n       ...\n       // save the game progress\n     saveSavingObject();\n    }\n    ```", "```js\n    function removeTookCards() {\n       // add each removed card into the array\n     // which stores the removed cards\n     $(\".card-removed\").each(function(){\n     matchingGame.savingObject.removedCards.push($(this).data(\"card-index\"));\n     $(this).remove();\n     });\n\n       // check whether all cards are removed and show game over\n       if ($(\".card\").length === 0) {\n          gameover();\n       }\n    }\n    ```", "```js\n    function gameover() {\n       // existing code goes here.\n\n       //at last, we clear the saved savingObject\n       localStorage.removeItem(\"savingObject\");\n    }\n    ```", "```js\n    function saveSavingObject() {\n        // save the encoded saving object in local storage\n        localStorage[\"savingObject\"] = JSON.stringify(matchingGame.savingObject);\n    }\n    ```", "```js\nlocalStorage.removeItem(key);\n```", "```js\nvar a = [1,2,3,4,5];\nvar b = a;\na.pop();\n// result:\n// a: [1,2,3,4]\n// b: [1,2,3,4]\n```", "```js\nvar a = [1,2,3,4,5];\nvar b = a.slice();\na.pop();\n// result:\n// a: [1,2,3,4]\n// b: [1,2,3,4,5]\n```", "```js\n    $(document).ready(function(){\n      // reset the elapsed time to 0.\n      matchingGame.elapsedTime = 0;\n\n      // start the timer\n      matchingGame.timer = setInterval(countTimer, 1000);\n\n    // shuffling the deck\n      matchingGame.deck.sort(shuffle);\n\n      // re-create the saved deck\n     var savedObject = savedSavingObject();\n     if (savedObject !== undefined) {\n     matchingGame.deck = savedObject.deck;\n     }\n\n    // copying the deck into saving object.\n      matchingGame.savingObject.deck = matchingGame.deck.slice();\n    });\n    ```", "```js\n    $(document).ready(function(){\n    // existing card creation code goes here.\n\n     // removed cards that were removed in savedObject.\n     if (savedObject !== undefined) {\n     matchingGame.savingObject.removedCards = savedObject.removedCards;\n     // find those cards and remove them.\n     for(var i in matchingGame.savingObject.removedCards) {\n     $(\".card[data-card-index=\"+matchingGame.savingObject.removedCards[i]+\"]\").remove();\n     }\n     }\n\n     // reset the elapsed time to 0.\n     matchingGame.elapsedTime = 0;\n\n     // restore the saved elapsed time\n     if (savedObject !== undefined) {\n     matchingGame.elapsedTime = savedObject.currentElapsedTime;\n     matchingGame.savingObject.currentElapsedTime = savedObject.currentElapsedTime;\n     }\n    });\n    ```", "```js\n    // Returns the saved savingObject from the local storage.\n    function savedSavingObject() {\n       // returns the saved saving object from local storage\n       var savingObject = localStorage[\"savingObject\"];\n       if (savingObject !== undefined) {\n          savingObject = JSON.parse(savingObject);\n       }\n       return savingObject;\n    }\n    ```", "```js\nif (savedObject !== undefined) {\n   matchingGame.savingObject.removedCards = savedObject.removedCards;\n   // find those cards and remove them.\n   for(var i in matchingGame.savingObject.removedCards) {\n      $(\".card[data-card-index=\"+matchingGame.savingObject.removedCards[i]+\"]\").remove();\n   }\n}\n```", "```js\n    <html lang=\"en\" manifest=\"game.appcache\">\n    ```", "```js\n    CACHE MANIFEST\n    # 2015-03-01:v3\n\n    CACHE:\n    index.html\n    css/matchgame.css\n    images/bg.jpg\n    images/deck.png\n    images/popup_bg.jpg\n    images/table.jpg\n    js/jquery-1.11.2.min.js\n    js/html5games.matchgame.js\n\n    # Resources that require the user to be online.\n    NETWORK:\n    *\n    ```"]