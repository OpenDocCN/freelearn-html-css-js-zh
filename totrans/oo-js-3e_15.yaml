- en: Appendix B. Built-in Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This appendix contains a list of the built-in functions (methods of the global
    object), discussed in [Chapter 3](ch03.html "Chapter 3. Functions"), *Functions*:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Function** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| `parseInt()` | Takes two parameters: an input object and radix; then tries
    to return an integer representation of the input. Doesn''t handle exponents in
    the input. The default radix is `10` (a decimal number). Returns `NaN` on failure.
    Omitting the radix may lead to unexpected results (for example for inputs such
    as `08`), so it''s best to always specify it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `parseFloat()` | Takes a parameter and tries to return a floating-point number
    representation of it. Understands exponents in the input:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `isNaN()` | Abbreviated from "Is Not a Number". Accepts a parameter and returns
    `true` if the parameter is not a valid number, `false` otherwise. Attempts to
    convert the input to a number first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `isFinite()` | Returns `true` if the input is a number (or can be converted
    to a number), but if it is not a number `Infinity` or `-` `Infinity`. Returns
    `false` for infinity or non-numeric values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `encodeURIComponent()` | Converts the input into a URL-encoded string. For
    more details on how URL encoding works, refer to the Wikipedia article at [http://en.wikipedia.org/wiki/Url_encode](http://en.wikipedia.org/wiki/Url_encode):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `decodeURIComponent()` | Takes an URL-encoded string and decodes it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `encodeURI()` | URL-encodes the input, but assumes a full URL is given, so
    returns a valid URL by not encoding the protocol (for example, `http://`) and
    hostname (for example, `www.phpied.com`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `decodeURI()` | Opposite of `encodeURI()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `eval()` | Accepts a string of JavaScript code and executes it. Returns the
    result of the last expression in the input string.To be avoided where possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
