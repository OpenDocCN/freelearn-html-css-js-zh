["```js\nsudo raspi-config\n```", "```js\nssh pi@nodebotanist-pi-broker.local\n```", "```js\nnpm init -y\n```", "```js\nnpm i --save mqtt dotenv\n```", "```js\nnpm i --save mosca\n```", "```js\nsudo npm i -g forever\nnpm i --save johnny-five raspi-io\nnpm i\n```", "```js\nnpm i\nsudo apt-get install mongodb-server // installs mongodb \nsystemctl enable mongod.service // makes it so mongodb starts when the pi does\n```", "```js\nsudo reboot\n```", "```js\nnpm i --save johnny-five raspi-io\nnpm i \n```", "```js\nsudo apt-get install mongodb-server // installs mongodb \nsystemctl enable mongod.service // makes it so mongodb starts when the pi does\nnpm i\n```", "```js\nsudo reboot\n```", "```js\nconst mosca = require('mosca')\n\nconst mqttBroker = new mosca.Server({\n  port: 1883,\n  backend: {\n    type: 'mongo',\n    url: 'mongodb://localhost:27017/mqtt',\n    pubsubCollection: 'MQTT-broker-NodeBots',\n    mongo: {}\n  }\n})\n\nserver.on('ready', () => {\n  console.log('MQTT broker ready!')\n})\n\nserver.on('clientConnected', (client) => {\n  console.log('Client connected to MQTT broker: ', client.id)\n})\n\nserver.on('published', (packet, client) => {\n  client = client || {id: 'N/A'} // Catches a weird edge case with mosca\n  console.log(`Client: ${client.id}\\nTopic: ${packet.topic}\\nMessage: ${packet.payload.toString()}\\n`)\n})\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\nconst request = require('request')\n\nconst board = new five.Board({\n  io: new Raspi()\n})\n\nboard.on('ready', () => {\n    let light = new five.Light({\n       controller: 'TSL2591',\n       threshold: 10\n    })\n\n    light.on('change', () => {\n\n    })\n})\n```", "```js\nconst mqttClient = mqtt.connect(\n  process.env.MQTT_BROKER_URL,\n  {\n    port: process.env.MQTT_BROKER_PORT\n  }\n)\n\nmqttClient.on('connect', () => {\n  mqttClient.subscribe('light')\n})\n```", "```js\nlight.on('change', function() {\n  mqttClient.publish('light', this.value)\n})\n```", "```js\nMQTT_BROKER_URL:mqtt://localhost\nMQTT_BROKER_PORT: 1883\n```", "```js\nMQTT_BROKER_URL:mqtt://[broker pi hostname]\nMQTT_BROKER_PORT: 1883\n```", "```js\nsu - pi -c \"node forever start index.js\"\n```", "```js\nsudo node index.js\n```", "```js\nsu - pi -c \"node forever start index.js\"\n```", "```js\nsudo node index.js\n```"]