["```js\nconsole.log('Hi, this is FlightBot');\n\n```", "```js\nnpm install twitter --save\n\n```", "```js\nvar TwitterPackage = require('twitter'); \n\n```", "```js\nvar secret = { \n  consumer_key: 'PUT YOURS', \n  consumer_secret: 'PUT YOURS', \n  access_token_key: 'PUT YOURS', \n  access_token_secret: 'PUT YOURS' \n} \n\nvar Twitter = new TwitterPackage(secret); \n\n```", "```js\nTwitter.post('statuses/update', {status: 'This is a sample automated Tweet'},  function(error, tweet, response){ \n  if(error){ \n    console.log(error); \n  } \n  console.log(tweet);  // Tweet body. \n  console.log(response);  // Raw response object. \n}); \n\n```", "```js\nvar TwitterPackage = require('twitter'); \n\nvar secret = { \n  consumer_key: 'PUT YOURS', \n  consumer_secret: 'PUT YOURS', \n  access_token_key: 'PUT YOURS', \n  access_token_secret: 'PUT YOURS' \n} \n\nvar Twitter = new TwitterPackage(secret); \n\nTwitter.post('statuses/update', {status: 'This is a sample automated Tweet'},  function(error, tweet, response){ \n  if(error){ \n    console.log(error); \n  } \n  console.log(tweet);  // Tweet body. \n  console.log(response);  // Raw response object. \n}); \n\n```", "```js\nnode app.js\n\n```", "```js\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n  stream.on('data', function(tweet) { \n    console.log(tweet.text); \n  }); \n\n  stream.on('error', function(error) { \n    console.log(error); \n  }); \n}); \n\n```", "```js\nstream.on('data', function(tweet) { \n  console.log(tweet.text); \n}); \n\n```", "```js\nvar TwitterPackage = require('twitter'); \n\nvar secret = { \n  consumer_key: 'PUT YOURS', \n  consumer_secret: 'PUT YOURS', \n  access_token_key: 'PUT YOURS', \n  access_token_secret: 'PUT YOURS' \n} \n\nvar Twitter = new TwitterPackage(secret); \n\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n  stream.on('data', function(tweet) { \n    console.log(tweet.text); \n  }); \n\n  stream.on('error', function(error) { \n    console.log(error); \n  }); \n}); \n\n```", "```js\nvar mentionString = '@' + tweet.user.screen_name; \n\n```", "```js\nvar TwitterPackage = require('twitter'); \n\nvar secret = { \n  consumer_key: 'PUT YOURS', \n  consumer_secret: 'PUT YOURS', \n  access_token_key: 'PUT YOURS', \n  access_token_secret: 'PUT YOURS' \n} \n\nvar Twitter = new TwitterPackage(secret); \n\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n  stream.on('data', function(tweet) { \n    console.log(tweet.text); \n    var statusObj = {status: \"Hi @\" +  \n    tweet.user.screen_name + \", Thanks for reaching out. How are you?\"} \n\n    Twitter.post('statuses/update', statusObj, function(error,  \n    tweetReply, response){ \n\n      if(error){ \n        console.log(error); \n      } \n\n      console.log(tweetReply.text); \n    }); \n  }); \n\n  stream.on('error', function(error) { \n    //print out the error \n    console.log(error); \n  }); \n}); \n\n```", "```js\n{ \n  \"consumer_key\": \"PUT YOURS\", \n  \"consumer_secret\": \"PUT YOURS\", \n  \"access_token_key\": \"PUT YOURS\", \n  \"access_token_secret\": \"PUT YOURS\" \n} \n\n```", "```js\nvar TwitterPackage = require('twitter'); \nvar secret = require(\"./secret\"); \nvar Twitter = new TwitterPackage(secret); \n\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n\n  stream.on('data', function(tweet) { \n    console.log(tweet.text); \n    var statusObj = {status: \"Hi @\" + tweet.user.screen_name +  \n    \", Thanks for reaching out. How are you?\"} \n\n    Twitter.post('statuses/update', statusObj,   \n      function(error, tweetReply, response){ \n      if(error){ \n        console.log(error); \n      } \n      console.log(tweetReply.text); \n    }); \n  }); \n\n  stream.on('error', function(error) { \n    console.log(error); \n  }); \n}); \n\n```", "```js\n{ \"flights\" : [ { \"@type\" : \"OperatingFlight\", \n        \"aircraft\" : { \"registrationCode\" : \"PH-BGT\" }, \n        \"carrier\" : { \"code\" : \"KL\" }, \n        \"flightNumber\" : \"1699\", \n        \"marketingFlights\" : [ { \"carrier\" : { \"code\" : \"KQ\" }, \n              \"flightNumber\" : \"1699\" \n            }, \n            { \"carrier\" : { \"code\" : \"DL\" }, \n              \"flightNumber\" : \"9605\" \n            } \n          ], \n        \"operatingFlightLeg\" : { \"arrivesOn\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"MAD\" \n              }, \n            \"departsFrom\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"AMS\" \n              }, \n            \"flightStatus\" : \"ARRIVED\", \n            \"legs\" : [ { \"actualArrivalDateTime\" : \"2016-09-16T09:26+02:00\", \n                  \"actualDepartureDateTime\" : \"2016-09-16T06:59+02:00\", \n                  \"arrivesOn\" : { \"@type\" : \"Airport\", \n                      \"IATACode\" : \"MAD\" \n                    }, \n                  \"departsFrom\" : { \"@type\" : \"Airport\", \n                      \"IATACode\" : \"AMS\" \n                    }, \n                  \"scheduledArrivalDateTime\" : \"2016-09-16T09:35+02:00\", \n                  \"scheduledDepartureDateTime\" : \"2016-09-16T07:00+02:00\", \n                  \"status\" : \"ARRIVED\" \n                } ], \n            \"scheduledArrivalDateTime\" : \"2016-09-16T09:35+02:00\", \n            \"scheduledDepartureDateTime\" : \"2016-09-16T07:00+02:00\" \n          }, \n        \"remainingFlyTime\" : \"PT0.000S\" \n      } ]  \n} \n\n```", "```js\n{ \"flights\" : [ { \"@type\" : \"OperatingFlight\", \n        \"_links\" : { \"detailedInfoLink\" :     \"http://fox.klm.com/fox/json/flightstatuses flightNumber=KL1223&departureDate=2016-09-15&originAirport=AMS&destinationAirport=CDG\" }, \n        \"carrier\" : { \"code\" : \"KL\" }, \n        \"flightNumber\" : \"1223\", \n        \"operatingFlightLeg\" : { \"arrivesOn\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"CDG\" \n              }, \n            \"departsFrom\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"AMS\" \n              }, \n            \"flightStatus\" : \"ARRIVED\", \n            \"scheduledArrivalDateTime\" : \"2016-09-15T08:00+02:00\", \n            \"scheduledDepartureDateTime\" : \"2016-09-15T06:45+02:00\" \n          } \n      }, \n      { \"@type\" : \"OperatingFlight\", \n        \"_links\" : { \"detailedInfoLink\" : \"http://fox.klm.com/fox/json/flightstatuses?flightNumber=KL1227&departureDate=2016-09-16&originAirport=AMS&destinationAirport=CDG\" }, \n        \"carrier\" : { \"code\" : \"KL\" }, \n        \"flightNumber\" : \"1227\", \n        \"operatingFlightLeg\" : { \"arrivesOn\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"CDG\" \n              }, \n            \"departsFrom\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"AMS\" \n              }, \n            \"flightStatus\" : \"ARRIVED\", \n            \"scheduledArrivalDateTime\" : \"2016-09-16T08:40+02:00\", \n            \"scheduledDepartureDateTime\" : \"2016-09-16T07:15+02:00\" \n          } \n      }, \n      { \"@type\" : \"OperatingFlight\", \n        \"_links\" : { \"detailedInfoLink\" : \"http://fox.klm.com/fox/json/flightstatuses?flightNumber=GA9240&departureDate=2016-09-16&originAirport=AMS&destinationAirport=CDG\" }, \n        \"carrier\" : { \"code\" : \"GA\" }, \n        \"flightNumber\" : \"9240\", \n        \"operatingFlightLeg\" : { \"arrivesOn\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"CDG\" \n              }, \n            \"departsFrom\" : { \"@type\" : \"Airport\", \n                \"IATACode\" : \"AMS\" \n              }, \n            \"flightStatus\" : \"ARRIVED\", \n            \"scheduledArrivalDateTime\" : \"2016-09-16T09:25+02:00\", \n            \"scheduledDepartureDateTime\" : \"2016-09-16T07:55+02:00\" \n          } \n      } \n    ]  \n} \n\n```", "```js\nnpm install request --save\n\n```", "```js\nvar TwitterPackage = require('twitter'); \nvar secret = require(\"./secret\"); \nvar Twitter = new TwitterPackage(secret); \nvar request = require('request'); \n\npadLeft = function (str, paddingChar, length) { \n  var s = new String(str); \n\n  if ((str.length < length) && (paddingChar.toString().length > 0)) \n  { \n      for (var i = 0; i < (length - str.length) ; i++) \n        s = paddingChar.toString().charAt(0).concat(s); \n  } \n\n  return s; \n}; \n\nGetDate = function() { \n  var dateObj = new Date(); \n  var month = dateObj.getUTCMonth() + 1; //months from 1-12 \n  var day = dateObj.getUTCDate(); \n  var year = dateObj.getUTCFullYear(); \n\n  return year + '-' + padLeft(month.toString(), '0', 2) + '-' +  \n    padLeft(day.toString(), '0', 2); \n}; \n\nFlightNumberOk = function(str) { \n  var posi = str.indexOf('KL'); \n  var fn = str.substring(posi); \n  return (posi >= 0 && fn.length === 6) ? fn : ''; \n}; \n\nvar fd = ''; \n\nGetFlightDetails = function(fn) { \n  var dt = GetDate(); \n  var rq = 'http://fox.klm.com/fox/json/flightstatuses?flightNumber=' + fn +  \n    '&departureDate=' + dt; \n\n  request(rq, function (error, response, body) { \n    if (!error && response.statusCode == 200) { \n      fd = body; \n    } \n  }) \n}; \n\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n\n  stream.on('data', function(tweet) { \n    var statusObj = {status: \"Hi @\" + tweet.user.screen_name +  \n      \", Thanks for reaching out. We are missing the flight number.\"}; \n\n    var fn = FlightNumberOk(tweet.text); \n\n    if (fn !== '') { \n      GetFlightDetails(fn); \n    } \n\n    setTimeout(function() { \n      console.log ('fd: ' + fd); \n\n      if (fd !== undefined) { \n        var ff = JSON.parse(fd); \n        statusObj = {status: \"scheduledArrivalDateTime: \"  +  \n          ff.flights[0].operatingFlightLeg.scheduledArrivalDateTime}; \n      } \n\n      Twitter.post('statuses/update', statusObj,  function(error, tweetReply,  \n      response) { \n        if (error){ \n          console.log(error); \n        } \n        console.log(tweetReply.text); \n      }); \n    }, 1500); \n  }); \n\n  stream.on('error', function(error) { \n    console.log(error); \n  }); \n}); \n\n```", "```js\nvar request = require('request'); \n\n```", "```js\nGetDate = function() { \n  var dateObj = new Date(); \n  var month = dateObj.getUTCMonth() + 1; //months from 1-12 \n  var day = dateObj.getUTCDate(); \n  var year = dateObj.getUTCFullYear(); \n\n  return year + '-' + padLeft(month.toString(), '0', 2) + '-' +  \n    padLeft(day.toString(), '0', 2); \n}; \n\n```", "```js\npadLeft = function (str, paddingChar, length) { \n  var s = new String(str); \n\n  if ((str.length < length) && (paddingChar.toString().length > 0)) \n  { \n      for (var i = 0; i < (length - str.length) ; i++) \n        s = paddingChar.toString().charAt(0).concat(s); \n  } \n\n  return s; \n}; \n\n```", "```js\nFlightNumberOk = function(str) { \n  var posi = str.indexOf('KL'); \n  var fn = str.substring(posi); \n  return (posi >= 0 && fn.length === 6) ? fn : ''; \n}; \n\n```", "```js\nGetFlightDetails = function(fn) { \n  var dt = GetDate(); \n  var rq = 'http://fox.klm.com/fox/json/flightstatuses?flightNumber=' + fn +  \n    '&departureDate=' + dt; \n\n  request(rq, function (error, response, body) { \n    if (!error && response.statusCode == 200) { \n      fd = body; \n    } \n  }) \n}; \n\n```", "```js\nTwitter.stream('statuses/filter', {track: '#FlightBot'}, function(stream) { \n\n  stream.on('data', function(tweet) { \n    var statusObj = {status: \"Hi @\" + tweet.user.screen_name + \", Thanks for  \n      reaching out. We are missing the flight number.\"}; \n\n    var fn = FlightNumberOk(tweet.text); \n\n    if (fn !== '') { \n      GetFlightDetails(fn); \n    } \n\n    setTimeout(function() { \n      console.log ('fd: ' + fd); \n\n      if (fd !== undefined) { \n        var ff = JSON.parse(fd); \n        statusObj = {status: \"scheduledArrivalDateTime: \"  +  \n          ff.flights[0].operatingFlightLeg.scheduledArrivalDateTime}; \n      } \n\n      Twitter.post('statuses/update', statusObj,  function(error, tweetReply,  \n      response) { \n        if (error){ \n          console.log(error); \n        } \n        console.log(tweetReply.text); \n      }); \n    }, 1500); \n  }); \n\n  stream.on('error', function(error) { \n    console.log(error); \n  }); \n}); \n\n```", "```js\nff.flights[0].operatingFlightLeg.scheduledArrivalDateTime \n\n```"]