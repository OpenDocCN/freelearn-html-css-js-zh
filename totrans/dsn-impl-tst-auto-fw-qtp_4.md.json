["```js\nIf True Then\nReporter.ReportEvent micPass,\"Name of the step\", \"Details...\"\nElse\nReporter.ReportEvent micFail, \"Name of the step\", \"Details...\"\nEnd If\nIf elseif … and end if\ncolor =\"b\"\n\nIf color =\"r\" Then\n    msgbox \"red\"\n  elseif  color =\"g\" then\n  msgbox \"green\"\n  elseif color=\"b\" then\n  msgbox \"blue\"\n  else\n  msgbox \"invalid color...\"\nEnd If\n```", "```js\nDim Color, bgcolor\n   Select Case Color\n      Case \"red\"     bgColor = \"red\"\n      Case \"green\"   bgColor = \"green\"\n      Case \"blue\"    bgColor = \"blue\"\n      Case Else      MsgBox \"pick another color\"\n   End select\n   Msgbox \"You have Selected the \"& bgcolor\n```", "```js\n'Print 10 random numbers\ncounter = 0 'Initialize the counter\nWhile counter < 10\n  print Cint( rnd() * 100 )\n  counter = counter + 1 'Increment the counter\nWend\n```", "```js\n'Execute the loop until the response until CANCEL button is clicked\nUsages 1\nDo Until DefResp = vbNo\n   MyNum = Int (6 * Rnd + 1)  \n 'Generate a random number between 1 and 6.\n   DefResp = MsgBox (MyNum & \"Do you want another number?\", vbYesNo)\n'The msgbox displays generated random number and OK and Cancel button\nLoop\nUsages 2\nDo while not DefResp = vbNo\n   MyNum = Int (6 * Rnd + 1)  \n   DefResp = MsgBox (MyNum & \"Do you want another number?\", vbYesNo)\nLoop\nUsages 3\nDo \n   MyNum = Int (6 * Rnd + 1)  \n   DefResp = MsgBox (MyNum & \"Do you want another number?\", vbYesNo)\nLoop until DefResp = vbNo\n```", "```js\nset Pcoll = \nDialog(\"DialogLogin\").WinEdit(\"EditAgentName:\").GetTOProperties()\n\nFor i = 0 to coll.count() – 1  \n'Count method return the numbers of properties\n  -print \"Item is  \" & Pcoll.item(i)\nNext\n```", "```js\nItem is Edit\nItem is Agent Name:\nRefer the above results and compare the properties of the object  are same in the following image.\n```", "```js\nSet city = CreateObject(\"Scripting.Dictionary\") 'Creates Dictionary Object\n'Dictionary stores data key, item (key – value) pairs.\n'Add keys and items.\ndicObj.Add \"a\", \"Atlanta\"\ndicObj.Add \"b\", \"Paris\"\ndicObj.Add \"c\", \"New Delhi\"\n'Keys is a method that returns an array or collection containing all existing keys in a Dictionary object.\nFor each keyitem in d.Keys\n   print keyitem\nNext\n```", "```js\n'Login \nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"EditAgentName:\").Set \"ashish\"    'Enter the agent name\nDialog(\"DialogLogin\").WinEdit(\"EditPassword:\").SetSecure \"51e6911da82a99155f73b209eaeac51a66ef0883\" ' Enter password\n'Create Order\nWindow(\"WinFlight\").Activate\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type \"111114\"             'Enter Flight Date \nWindow(\"WinFlight\").WinComboBox(\"FlyFrom\").Select \"London\"  ' Select Source \nWindow(\"WinFlight\").WinComboBox(\"Fly To:\").Select \"Frankfurt\"     'Select destination\nWindow(\"WinFlight\").WinButton(\"btnFLIGHT\").Click                                        'Click on flight button\nWindow(\"WinFlight\").Dialog(\"FlightTable\").WinButton(\"btnOK\").Click 'Click on the OK button\nWindow(\"WinFlight\").WinEdit(\"EditName:\").Set \"Mr. James Anderson\" 'Enter the passenger name\nWindow(\"WinFlight\").WinButton(\"btnInsertOrder\").Click'Click on the Insert Order button\nWindow(\"WinFlight\").Activate\nWindow(\"WinFlight\").Close'Click on the close button\n```", "```js\n'Set the current row to retrieve the value from datatable\ndatatable.SetCurrentRow startnum\nFor i =startnum to endnum 'run the script from row (n) to row (m)\n.\n.\n.\n'Move to next row of datatable\ndatatable.SetNextRow\nNext\n```", "```js\nSystemutil.Run PathToFlightApp\nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"EditAgentName:\").Set DataTable(\"Agent\",dtGlobalSheet)\nDialog(\"DialogLogin\").WinEdit(\"EditPassword:\").SetSecure DataTable(\"Password\",dtGlobalSheet)\nDialog(\"DialogLogin\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type DataTable(\"FlightDate\",dtGlobalSheet)\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom\").Select DataTable(\"FlyFrom\",dtGlobalSheet)\nWindow(\"WinFlight\").WinComboBox(\"Fly To:\").Select DataTable(\"Flyto\",dtGlobalSheet)\nWindow(\"WinFlight\").WinButton(\"btnFLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightTable\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").WinEdit(\"EditName:\").Set DataTable(\"Name\", dtGlobalSheet)\nWindow(\"WinFlight\").WinButton(\"btnInsertOrder\").Click\nWindow(\"WinFlight\").WinButton(\"btnButton\").Click\nWindow(\"WinFlight\").Close\n```", "```js\ndatatable.Import \"c:\\FlightData.xls\"\n' Import the excel to the datatable.\nrc = datatable.GetRowCount\n'get the row count\nFor i = 1 to rc\nsystemutil.Run PathToFlightApp\nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"EditAgentName:\").Set datatable.Value(\"Agent\")\n'Value is DataTable default property. Retrieves or sets the value of the cell in the specified parameter and the current row of the run-time Data Table.\n'To find the value use DataTable.Value(ParameterID [, SheetID]) .SheetID Optional. Identifies the sheet to be returned. The SheetID can be the sheet name, index or dtLocalSheet, or dtGlobalSheet.\nDialog(\"DialogLogin\").WinEdit(\"EditPassword:\").SetSecure datatable.Value(\"Password\")\nDialog(\"DialogLogin\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type datatable.Value(\"FlightDate\")\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom\").Select datatable.Value(\"FlyFrom\")\nWindow(\"WinFlight\").WinComboBox(\"Fly To:\").Select datatable.Value(\"Flyto\")\nWindow(\"WinFlight\").WinButton(\"btnFLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightTable\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").WinEdit(\"EditName:\").Set datatable.Value(\"Name\")\nWindow(\"WinFlight\").WinButton(\"btnInsertOrder\").Click\nWindow(\"WinFlight\").WinButton(\"btnButton\").Click\nWindow(\"WinFlight\").Close\ndatatable.SetNextRow\nNext\n```", "```js\nSet excelfile = createobject(\"excel.application\") \n\n'Create the excel first before executing script. \n'Ensure that excel file is in Closed state.\n\nexcelfile.Workbooks.Open \"D:\\parameter.xls\"\nset sheet = excelfile.ActiveWorkbook.Worksheets(\"Sheet1\")\n 'Get the max row occupied in the excel file \nRow = sheet.UsedRange.Rows.Count \n\n'Read the data from the excel file\nFor i= 2 to Row\n\nUsername=sheet.cells(i,1).value\nPassword=sheet.cells(i,2).value\nwait 1\n Next\n\n'Close the Workbook\nexcelfile.ActiveWorkbook.Close\n\n'Close Excel\nexcelfile.Application.Quit\n\n'Release the objects\nSet sheet =nothing\nSet excelfile = nothing\n```", "```js\nDim filefso, file1, readfile, s\n   Const ForReading = 1\n'create the object of a File system Object\n   Set filefso = CreateObject(\"Scripting.FileSystemObject\")\n   Set file1 = filefso.CreateTextFile(\"c:\\logfile.txt\", True)\n   'Write a line.\n      fi1e1.WriteLine \"Testing FSO\"\n   file1.WriteBlankLines(2)\n   file1.Close\n   'Read contents of the text file.\n   'Reading file \n   Set readfile = filefso.OpenTextFile(\"c:\\logfile.txt\", ForReading)\n   's = readfile.ReadLine\n 'iterate the file until end of the file\nDo While readfile.AtEndOfStream <> True\n      retstring = readfile.ReadLine\n   Loop\n      ts.Close\n```", "```js\nDim fso, f1, textfile, s\n   Const ForReading = 1\n\nSet textfile = fso.OpenTextFile(\"c:\\logfile.txt\", ForReading)\n   's = textfile.ReadLine\n 'iterate the file until end of the file\nDo While textfile.AtEndOfStream <> True\n      retstring = textfile.ReadLine\nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"EditAgentName:\").Set datatable.Value(\"Agent\")\n'Value is DataTable default property. Retrieves or sets the value of the cell in the specified parameter and the current row of the run-time Data Table.\n'To find the value use DataTable.Value(ParameterID [, SheetID]) .SheetID Optional. Identifies the sheet to be returned. The SheetID can be the sheet name, index or dtLocalSheet, or dtGlobalSheet.\nDialog(\"DialogLogin\").WinEdit(\"EditPassword:\").SetSecure datatable.Value(\"Password\")\nDialog(\"DialogLogin\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type datatable.Value(\"FlightDate\")\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom\").Select datatable.Value(\"FlyFrom\")\nWindow(\"WinFlight\").WinComboBox(\"FlyTo:\").Select datatable.Value(\"Flyto\")\nWindow(\"WinFlight\").WinButton(\"btnFLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightTable\").WinButton(\"btnOK\").Click\nWindow(\"WinFlight\").WinEdit(\"EditName:\").Set datatable.Value(\"Name\")\nWindow(\"WinFlight\").WinButton(\"btnInsertOrder\").Click\nWindow(\"WinFlight\").WinButton(\"btnButton\").Click\nWindow(\"WinFlight\").Close\n\n   Loop\n      textfile.Close\n```", "```js\nDim filefso, txtfile1, txtfile2, txtfifle3\n   Set filefso = CreateObject(\"Scripting.FileSystemObject\")\n   Set txtfile1 = filefso.CreateTextFile(\"d:\\tmp\\testfile.txt\", True)\n   'Write a line.\n   txtfile1.Write (\"Writing a text\")\n   'Close the file to writing.\n   txtfile1.Close\n   'Moving the file to d:\\tmp \n   'Get a handle of the file in root of d:\\.\n   Set txtfile2 = filefso.GetFile(\"d:\\tmp\\testfile.txt\")\n   'Moving the file to tmp directory.\n   txtfile2.Move (\"d:\\tmp\\testfile.txt\")\n\n   'Copying the file to temp.\n   txtfile2.Copy (\"d:\\temp\\testfile.txt\")\n\n   Set txtfifle2 = filefso.GetFile(\"d:\\tmp\\testfile.txt\")\n   Set txtfifle3 = filefso.GetFile(\"d:\\temp\\testfile.txt\")\n   'Deleting the files\n   txtfifle2.Delete\n   txtfifle3.Delete\n```", "```js\nSet Conn = CreateObject(\"ADODB.Connection\") \n\n'Set the Connection String.\nConn.ConnectionString = \n\"DSN=QT_Flight32;DBQ=C:\\Program Files\\Mercury Interactive\\QuickTest Professional\\samples\\flight\\app\\flight32.mdb;Driver=C:\\WINDOWS\\system32\\odbcjt32.dll;DriverId=281;FIL=MS Access;MaxBufferSize=2048;PageTimeout=5;\"\n'ADODB.Connection\n'RecordSet\nConn.Open(\"DSN=QT_Flight32\") \nSet rcRecordSet= Conn.Execute(\"SELECT order_number from Orders order by order_number desc\")\nrcRecordSet.MoveFirst\nvar_order_num = rcRecordSet.fields(\"Order_Number\")\nrcRecordSet.close\n\nConn.close\nset rcRecordSet = nothing\nset Conn = nothing\n```", "```js\nSet Conn = CreateObject(\"ADODB.Connection\") \nConn.Open(\"DSN=QT_Flight32\") \nSet rcRecordSet= Conn.Execute(\"SELECT order_number from Orders order by order_number desc\")\nrcRecordSet.MoveFirst\nvar_order_num = rcRecordSet.fields(\"Order_Number\")\nrcRecordSet.close\n\nConn.close\nset rcRecordSet = nothing\nset Conn = nothing\n```", "```js\nFunction getDSN(database)\nIf database = \"access\"\n DSN =\"DSN=QT_Flight32\"\nELSEIF\n…\nEnd Function\n\nSet Conn = CreateObject(\"ADODB.Connection\") \nConn.Open(getDSN(\"access\") )\nSet rcRecordSet= Conn.Execute(\"SELECT order_number from Orders order by order_number desc\")\nrcRecordSet.MoveFirst\nvar_order_num = rcRecordSet.fields(\"Order_Number\")\nrcRecordSet.close\nConn.close\nset rcRecordSet = nothing\nset Conn = nothing\n```"]