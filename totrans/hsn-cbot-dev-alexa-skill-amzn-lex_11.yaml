- en: Appendix B
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录B
- en: Debugging
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试
- en: 'Trying to figure out why your code isn''t working can be a very frustrating
    process and there can be loads of different sources of the issues. Throughout
    this book, we have three main sources of problems: Lambdas, Alexa Skill setup,
    and Lex setup.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试找出为什么你的代码不起作用可能是一个非常令人沮丧的过程，并且可能存在大量不同的问题来源。在这本书中，我们主要有三个问题来源：Lambdas、Alexa技能设置和Lex设置。
- en: Debugging Alexa Skills
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试Alexa技能
- en: 'If your skill hasn''t worked, then there are a few things that you need to
    check:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的技能没有起效，那么你需要检查以下几点：
- en: You're using the correct utterances
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你使用的是正确的表述
- en: Your model has been saved and built
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的模型已保存和构建
- en: Your endpoint is set correctly
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的端点设置正确
- en: You've added Alexa as a trigger for your Lambda
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你已将Alexa添加为Lambda的触发器
- en: Your Lambda is working properly
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的Lambda运行正常
- en: Check the utterances
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查表述
- en: If Alexa is replying with "Sorry, I don't know that one," make sure that you
    are saying or typing the correct phrase. It should be "Alexa, tell *your skill
    invocation* *your intent utterance,*" so it might be, "Alexa, tell my skill hello"
    or "Alexa, ask car helper what car I should get." Check that you've correctly
    set your skill invocation and intent utterances. You can add more utterances to
    your intent so that it works with a larger variety of phrases.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Alexa回复“对不起，我不知道那个”，请确保你说的或输入的是正确的短语。应该是“Alexa，告诉*你的技能调用* *你的意图表述,*”，所以可能是“Alexa，告诉我的技能你好”或“Alexa，询问汽车助手我应该买什么车。”请检查你是否已正确设置你的技能调用和意图表述。你可以添加更多表述到你的意图中，以便它能够与更多种类的短语一起工作。
- en: You can also add console logs to your handlers to make sure that they are getting
    triggered when you expect them to.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在你的处理程序中添加控制台日志，以确保它们在你期望的时候被触发。
- en: Save and build your model
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存并构建你的模型
- en: Check that you've saved and built your model; the Save Model and Build Model
    buttons should be gray, not blue. There is no harm in re-saving and rebuilding
    your model to make sure that everything is up to date.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 检查你是否已保存并构建了你的模型；保存模型和构建模型按钮应该是灰色，而不是蓝色。重新保存和重建你的模型以确保一切是最新的没有害处。
- en: Check your Endpoint
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查你的端点
- en: The last thing to check in the Alexa Skill Kit is that the Endpoint is correctly
    set. Make sure that there is a long ARN code in the Default Region box. If this
    isn't there, then open your Lambda console and find the Lambda that you want to
    be dealing with this skill. Copy the ARN number from the top right of the screen
    and paste it into the Default Region box in the Alexa Skill Kit. It should have
    the format `arn:aws:lambda:your-region:123456789012:function:your-lambda-name`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在Alexa技能套件中最后要检查的是端点是否正确设置。确保默认区域框中有一个长的ARN代码。如果那里没有，那么打开你的Lambda控制台，找到你想处理这个技能的Lambda。从屏幕右上角复制ARN号码，并将其粘贴到Alexa技能套件的默认区域框中。它应该具有以下格式：`arn:aws:lambda:your-region:123456789012:function:your-lambda-name`。
- en: Added Alexa as a trigger for your Lambda
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 已将Alexa添加为Lambda的触发器
- en: 'If your skill still isn''t working, then there is probably a problem with your
    Lambda. In the Lambda editor, make sure that Alexa is on the design diagram exactly
    as shown next. If Alexa Skill Kit is not in that diagram, select it from the list
    of triggers on the left and follow the setup steps explained earlier in the chapter:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的技能仍然不起作用，那么可能是因为你的Lambda存在问题。在Lambda编辑器中，确保Alexa在设计图中正好如以下所示。如果Alexa技能套件不在该图中，请从左侧的触发器列表中选择它，并遵循本章前面解释的设置步骤：
- en: '![](img/2934c059-6b4a-4170-8458-0f62fd85e91c.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2934c059-6b4a-4170-8458-0f62fd85e91c.png)'
- en: Alexa trigger
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Alexa触发
- en: If the Alexa Skill Kit is shown but there is a message to complete configuration
    or something similar, then you need to do that. Click on the Alexa Skill Kit symbol
    and complete the configuration, as explained earlier in the chapter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果显示Alexa技能套件，但有一个完成配置或类似的消息，那么你需要完成它。点击Alexa技能套件符号并完成配置，如本章前面所述。
- en: Debugging Lex chatbots
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试Lex聊天机器人
- en: 'As with Alexa skills, there are a few different places that can cause errors
    in your chatbot. Here are a few things you need to check:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 与Alexa技能一样，有几个不同的地方可能导致你的聊天机器人出现错误。以下是一些你需要检查的事项：
- en: You are using the correct utterances
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你使用的是正确的表述
- en: Your intent has a text response or is triggering the correct Lambda
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的意图有一个文本响应或正在触发正确的Lambda
- en: Your intent has been saved and the chatbot built and deployed
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的意图已保存，聊天机器人已构建和部署
- en: Your connected platform is properly configured (Facebook, Slack, API)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的连接平台已正确配置（Facebook、Slack、API）
- en: Your Lambdas are working
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的Lambdas运行正常
- en: Check your utterances
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查你的表述
- en: 'If Lex is saying that it couldn''t understand what you said, then it couldn''t
    match your utterance to an intent. There are two ways this can happen: you don''t
    have any sample utterances close enough to the utterance you used, or there are
    two sample utterances on different intents that match well. Having different intents
    with similar sample utterances can often cause issues.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Lex 表示它无法理解你所说的话，那么它就无法将你的语句与意图匹配。这种情况可能有两种发生方式：你没有足够接近你使用的语句的样本语句，或者有两个样本语句在不同的意图上匹配得很好。具有相似样本语句的不同意图通常会导致问题。
- en: Check the intent response
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查意图响应
- en: Your intent may be getting hit, but it isn't returning a response. In the intent,
    scroll down to Fulfillment and make sure that either a Lambda is being invoked
    or you are replying with a text response. If you are invoking a Lambda, check
    the Lambda logs to see whether the Lambda is being run when you trigger that intent.
    If not, you may just need to save, build the chatbot, and deploy it again.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你的意图可能被触发，但没有返回响应。在意图中向下滚动到“Fulfillment”，确保正在调用 Lambda 或你正在回复文本响应。如果你正在调用 Lambda，请检查
    Lambda 日志以查看是否在触发该意图时 Lambda 正在运行。如果没有，你可能只需要保存、构建聊天机器人并再次部署。
- en: Save intents, build, and deploy
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存意图，构建和部署
- en: If all of your sample utterances and fulfillments are correct, then you should
    make sure every intent is saved, build your chatbot, and deploy it to the same
    alias as before. It is very easy to forget this step and wonder why all of your
    changes haven't made any difference.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有样本语句和履行都是正确的，那么你应该确保每个意图都已保存，构建你的聊天机器人，并将其部署到与之前相同的别名。很容易忘记这一步，然后 wonder
    为什么所有的更改都没有产生任何影响。
- en: Check your connected platform
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查你的连接平台
- en: If you are trying to connect your chatbot to a platform such as Facebook, Slack,
    or your API, make sure that they are set up properly. If you can successfully
    test your chatbot in the Lex console, then go back through the setup processes
    for the platform and make sure that you haven't missed a step.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在尝试将你的聊天机器人连接到 Facebook、Slack 或你的 API 等平台，请确保它们已正确设置。如果你能在 Lex 控制台中成功测试你的聊天机器人，那么请回过头来检查平台的设置流程，确保你没有错过任何步骤。
- en: Check your Lambdas are working
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查你的 Lambda 是否正在运行
- en: Use the Lambda debugging tips to ensure that your Lambdas are responding with
    the correct responses.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Lambda 调试技巧确保你的 Lambdas 正确响应。
- en: Debugging Lambdas
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lambda 调试
- en: If you have found that the problem is not with your Alexa skill or Lex chatbot,
    there might be a problem with your Lambda. Before you start changing things in
    your code, it is often a good idea to create a test in the Lambda console. This
    should represent the request that is being sent by Alexa or Lex. Use this test
    to see whether it is your Lambda that is at fault or it works as expected.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现问题不是出在你的 Alexa 技能或 Lex 聊天机器人上，那么可能是在你的 Lambda 上存在问题。在你开始更改代码之前，通常一个好的做法是在
    Lambda 控制台中创建一个测试。这应该代表 Alexa 或 Lex 发送的请求。使用这个测试来查看是否是 Lambda 出了问题，或者它是否按预期工作。
- en: If your test is unsuccessful, look in the logs for the error messages. This
    can often point you to the root of the problem.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的测试失败，请在日志中查找错误消息。这通常可以指向问题的根源。
- en: 'Here are some things to check when trying to debug a Lambda:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试调试 Lambda 时，以下是一些需要检查的事项：
- en: Your Lambda has all of the required packages installed
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Lambda 已安装所有必需的包
- en: Your permissions are correct
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的权限是正确的
- en: All of your variables are correctly defined
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有你的变量都已被正确定义
- en: Your Lambda code is correct
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Lambda 代码是正确的
- en: Everything your Lambda calls is working
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你 Lambda 调用的所有内容都在运行
- en: Install all of the required packages
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装所有必需的包
- en: If your Lambda isn't working, you need to check that all the packages are installed.
    Go to your `Lambdas` folder and navigate to your problem Lambda. In it, there
    should be an `archive.zip` zipped file. If there isn't, run the build script again
    and an `archive.zip` file should appear – your Lambda should now work.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 Lambda 不工作，你需要检查所有包是否已安装。前往你的“Lambdas”文件夹并导航到你的问题 Lambda。在其中，应该有一个名为 `archive.zip`
    的压缩文件。如果没有，再次运行构建脚本，应该会出现 `archive.zip` 文件——你的 Lambda 现在应该可以工作了。
- en: If there is an `archive.zip` file, open it and see what it contains. There should
    be an `index.js` file, a `package.json` or `package-lock.json` file, and a `node_modules`
    folder. If any of these things are missing, then rerun the build script and make
    sure that it succeeds.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有一个 `archive.zip` 文件，打开它并查看其内容。应该有一个 `index.js` 文件，一个 `package.json` 或 `package-lock.json`
    文件，以及一个 `node_modules` 文件夹。如果这些内容中的任何一个缺失，那么重新运行构建脚本并确保它成功执行。
- en: If all of that is correct, then check inside `package.json` or `package-lock.json`
    that there are dependencies for all of the packages that you are requiring in
    your Lambda code. Check that there is also a folder for each of the packages inside
    `node_modules`. If there isn't, you will need to run `npm install --save *PACKAGE-NAME*`
    to add it to the `package.json` file.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有这些都正确，那么请检查 `package.json` 或 `package-lock.json` 文件，确保您正在 Lambda 代码中要求的所有包都有依赖项。检查
    `node_modules` 中每个包是否都有一个文件夹。如果没有，您需要运行 `npm install --save *PACKAGE-NAME*` 将其添加到
    `package.json` 文件中。
- en: Check your permissions
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查您的权限
- en: Go into your Lambda, scroll down to the Execution role, and see which role you
    have selected. Now, go to the IAM service and select the role that you have used.
    Look through the policies that you have added to that role and make sure that
    you have all the permissions that you need. Add any policies that you need for
    the role.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 进入您的 Lambda，向下滚动到执行角色，查看您选择了哪个角色。现在，转到 IAM 服务并选择您使用的角色。查看您添加到该角色的策略，并确保您拥有所有需要的权限。为该角色添加任何需要的策略。
- en: Correct your Lambda code
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修正您的 Lambda 代码
- en: You also need to check that the code in your Lambda is correct. As your Lambdas
    become more complex, it becomes harder to get them working the first time. Run
    the tests that you've created, and look for the error message.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要检查 Lambda 中的代码是否正确。随着您的 Lambda 变得越来越复杂，第一次使其工作变得更加困难。运行您创建的测试，并查找错误信息。
- en: If you don't know what the error message means or how to fix it, search online
    as there will have been other people who have encountered this error before. Make
    sure you read the replies on how to fix the error and understand why that solution
    works before using it in your code. It helps you become a better developer and
    allows you to fix it if there is an error with it in the future.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不知道错误信息的意思或如何修复它，请在网上搜索，因为之前肯定有其他人遇到过这个错误。确保您阅读了关于如何修复错误的回复，并在将其用于代码之前理解为什么那个解决方案有效。这有助于您成为一名更好的开发者，并允许您在未来如果出现错误时进行修复。
- en: If the bug isn't obvious from the error message, you can use `console.log('Some
    information')` to log out whenever your code gets to each stage. Use this to work
    out how far your code is getting and what values are available at that point.
    It can often be that variables or responses from other services are not in the
    format that you expected them to be in. Being able to see all of your data just
    before the error is really useful in finding out why your code isn't working.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果错误信息中没有明显的错误，您可以使用 `console.log('Some information')` 在代码到达每个阶段时记录信息。使用这种方法来确定代码执行到了哪个阶段以及在该点可用的值。常常是变量或其他服务的响应格式与您预期的不同。在错误发生之前能够看到所有数据对于找出代码为何不工作非常有用。
- en: Check external services
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查外部服务
- en: When working with external services, there is always the possibility that those
    services stop working or change their response. Every time you deal with an external
    service, you should handle it, if it is returning an error. If the services appear
    to be working but your code is not working, then `console.log` out the response
    to check the format.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当与外部服务一起工作时，总有可能这些服务停止工作或更改它们的响应。每次您处理外部服务时，都应该处理它，如果它返回错误。如果服务看起来似乎在工作，但您的代码没有工作，那么请使用
    `console.log` 输出响应以检查格式。
