["```js\nExt.define('Examples.plugin.Sms', {\n\n  alias : 'plugin.sms',\n\n  config : {\n\n    perMessageLength : 160,\n    defaultColor : '#000000',\n    warningColor : '#ff0000'\n\n  },\n\n  constructor : function(cfg) {\n\n    Ext.apply(this, cfg);\n\n    this.callParent(arguments);\n  },\n\n  init : function(textField) {\n\n    this.textField = textField;\n    if (!textField.rendered) {\n      textField.on('afterrender', this.handleAfterRender, this);\n    }\n    else {\n      this.handleAfterRender();\n    }\n  },\n  handleAfterRender : function() {\n\n    this.textField.on({\n      scope : this,\n      change : this.handleChange\n    });\n\n    var dom = Ext.get(this.textField.bodyEl.dom);\n\n    Ext.DomHelper.append(dom, {\n      tag : 'div',\n      cls : 'plugin-sms'\n    });\n\n  },\n\n  handleChange : function(field, newValue) {\n\n    if (newValue.length > this.getPerMessageLength()) {\n      field.setFieldStyle('color:' + this.getWarningColor());\n    }\n    else {\n      field.setFieldStyle('color:' + this.getDefaultColor());\n    }\n    this.updateMessageInfo(newValue.length);\n\n  },\n\n  updateMessageInfo : function(length) {\n\n    var tpl = ['Characters: {length}<br/>', 'Messages:{messages}'].join('');\n    var text = new Ext.XTemplate(tpl);\n    var messages = parseInt(length / this.getPerMessageLength());\n\n    if ((length / this.getPerMessageLength()) - messages > 0) {\n      ++messages;\n    }\n\n    Ext.get(this.getInfoPanel()).update(text.apply({\n      length : length,\n      messages : messages\n    }));\n\n  },\n\n  getInfoPanel : function() {\n\n    return this.textField.el.select('.plugin-sms');\n\n  }\n});\n```", "```js\n{\n    xtype : 'textareafield',\n    plugins : ['sms']\n}\n```", "```js\nplugins : [Ext.create('Examples.plugin.Sms', {\n  perMessageLength : 20,\n  defaultColor : '#0000ff',\n  warningColor : \"#00ff00\"\n})]\n```", "```js\nExt.define('Examples.view.sms.Extension', {\n  extend : 'Ext.form.field.TextArea',\n  alias : 'widget.sms',\n\n  config : {\n\n    perMessageLength : 160,\n    defaultColor : '#000000',\n    warningColor : '#ff0000'\n\n  },\n\n  constructor : function(cfg) {\n\n    Ext.apply(this, cfg);\n\n    this.callParent(arguments);\n  },\n\n  afterRender : function() {\n\n    this.on({\n      scope : this,\n      change : this.handleChange\n    });\n\n    var dom = Ext.get(this.bodyEl.dom);\n\n    Ext.DomHelper.append(dom, {\n      tag : 'div',\n      cls : 'extension-sms'\n    });\n\n  },\n\n  handleChange : function(field, newValue) {\n\n    if (newValue.length > this.getPerMessageLength()) {\n      field.setFieldStyle('color:' + this.getWarningColor());\n    }\n    else {\n      field.setFieldStyle('color:' + this.getDefaultColor());\n    }\n    this.updateMessageInfo(newValue.length);\n\n  },\n\n  updateMessageInfo : function(length) {\n\n    var tpl = ['Characters: {length}<br/>', 'Messages:{messages}'].join('');\n    var text = new Ext.XTemplate(tpl);\n    var messages = parseInt(length / this.getPerMessageLength());\n\n    if ((length / this.getPerMessageLength()) - messages > 0) {\n      ++messages;\n    }\n\n    Ext.get(this.getInfoPanel()).update(text.apply({\n      length : length,\n      messages : messages\n    }));\n\n  },\n\n  getInfoPanel : function() {\n\n    return this.el.select('.extension-sms');\n\n  }\n});\n```", "```js\nExt.create('Examples.view.sms.Extension');\n```", "```js\nExt.create('Examples.view.sms.Extension', {\n    perMessageLength : 20,\n    defaultColor : '#0000ff',\n    warningColor : \"#00ff00\"\n});\n```"]