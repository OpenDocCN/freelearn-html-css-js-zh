["```js\n//code fragment on server side: ajax.aspx\nResponse.ContentType = \"application/json\";\nResponse.Write(\"{result: 'Say hello to \" \n+ Request[\"Name\"] + \"from server.'}\");\n\n//request code fragment on client side\n$.post( \"ajax.aspx\",             //request url\n{Name:\"Li\"},                     //request data\nfunction (data, textStatus){},   //call back\n\"json\");                         //data type\n```", "```js\nserver function sayhello(name){\n  \"Say hello to \" + name + \" from server.\"\n}\nfunction page(){\n  <input id=#name type=\"text\"/>\n  <input type=\"button\" value=\"hello\" onclick={function(_){\n    #text = sayhello(Dom.get_value(#name))\n  }}/>\n  <h3 id=#text></h3>\n}\nServer.start(Server.http,{title:\"Opa Packt\",~page})\n```", "```js\nprintln(\"Hello Opa!\")\ncounter = Mutable.make(0)\nfunction page(){ <h1>...</h1> }\nServer.start(Server.http,{title:\"Opa Packt\", ~page})\n```", "```js\n@both_implem counter = Mutable.make(100)\n```", "```js\nserver module Logic{\n  function f1() { println(\"function 1\") }\n  client function f2(){ println(\"function 2\") }\n}\nfunction page(){\n  <div onready={function(_){ Logic.f1(); Logic.f2() }}></div>\n}\nServer.start(Server.http,{title:\"Opa Packt\", ~page})\n```", "```js\nside = @sliced_expr({server: \"server\", client:\"client\"}) \nprintln(side) //will print \"server\" on server side and \"client\"\n             // on client side.\nfunction page(){ <h1>Test Page</h1> }\nServer.start(Server.http, {title:\"Opa Packt\", ~page});\n```", "```js\nchannel(`message) make(`state state, \n(`state, `message -> Session.instruction(`state) on_message)\n```", "```js\nchannel(string) s = Session.make(0,function(state,msg){\n  if(mod(state,2) == 0) println(String.to_upper(msg)) \n  else                  println(String.to_lower(msg))\n  {set:state+1}         //update the state of this session\n})\nfunction page(){\n  <input type=\"text\" id=#text/>\n  <input type=\"button\" value=\"send\" onclick={function(_){\n         Session.send(s, Dom.get_value(#text))\n  }}/>\n}\nServer.start(Server.http,{title:\"Opa Packt\", ~page})\n```", "```js\ns = Cell.make(0,function(state,msg){\n   text =  if(mod(state,2) == 0)   String.to_upper(msg) \n           else                    String.to_lower(msg)\n    {return: text, instruction: {set: state+1}}\n});\nfunction page(){\n    <input type=\"text\" id=#text/>\n    <input type=\"button\" value=\"send\" onclick={function(_){\n         #result = Cell.call(s, Dom.get_value(#text))\n    }}/>\n    <h2 id=#result></h2>\n}\nServer.start(Server.http, {title:\"Opa Packt\", ~page})\n```", "```js\nNetwork.network(string) n = Network.empty();\nfunction ready(_){\n    _ = Network.observe(function(msg){ println(\"{msg}\") },n)\n    void\n}\nfunction page(){\n    <div onready={ready}>\n        <input type=\"text\" id=#text/>\n        <input type=\"button\" value=\"send\" onclick={function(_){\n            Network.broadcast(Dom.get_value(#text),n)\n        }}/>\n    </div>\n}\nServer.start(Server.http,{title:\"Opa Packt\", ~page})\n```"]