- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: This is a book about data visualization using JavaScript with Chart.js, one
    of the most popular data visualization libraries, and also one of the easiest
    to use. Chart.js provides ready-to-use interactive visualizations for your data
    with minimal coding. After loading your data into a standard JavaScript array,
    you can add styles and other configuration using simple object-based declarative
    structures. Chart.js automatically scales your data, generates ticks and grid
    lines, creates interactive tooltips, and fits the available space, making your
    chart automatically responsive. It's a great way to start creating data visualizations
    for the Web.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一本关于使用 JavaScript 和 Chart.js 进行数据可视化的书籍，Chart.js 是最受欢迎的数据可视化库之一，也是使用起来最简单的库之一。Chart.js
    提供了现成的交互式可视化工具，您只需进行最少的编码即可使用。在将您的数据加载到标准的 JavaScript 数组后，您可以使用简单的基于对象的声明性结构添加样式和其他配置。Chart.js
    会自动缩放您的数据，生成刻度和网格线，创建交互式工具提示，并适应可用空间，使您的图表自动响应。这是开始创建 Web 数据可视化的一种极好方式。
- en: Chart.js is free, open source, and maintained by an active community of developers
    on GitHub. As a data visualization library, it is in second place on GitHub in
    terms of the number of stars it has. First place belongs to D3.js, a much larger
    and complex library with a steep learning curve. You still need to know JavaScript,
    HTML, and CSS to use Chart.js, but you don't have to be a guru. Besides JavaScript,
    it's also based on other Web standards, such as DOM, CSS, and Canvas. Charts are
    automatically rendered in Canvas and control all canvas configuration, resizing,
    and pixel ratios. The only thing you need to know about Canvas is how to include
    a `<canvas>` tag in your page and obtain a context, but Canvas knowledge can be
    useful in advanced charts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Chart.js 是免费的、开源的，并由 GitHub 上活跃的开发者社区维护。作为一个数据可视化库，它在 GitHub 上以星标数量排名第二。排名第一的是
    D3.js，这是一个更大、更复杂的库，学习曲线陡峭。您仍然需要了解 JavaScript、HTML 和 CSS 才能使用 Chart.js，但您不必成为专家。除了
    JavaScript 之外，它还基于其他 Web 标准，如 DOM、CSS 和 Canvas。图表自动在 Canvas 中渲染，并控制所有 canvas 配置、调整大小和像素比。您需要了解的关于
    Canvas 的唯一事情是如何在您的页面上包含一个 `<canvas>` 标签并获取上下文，但 Canvas 知识对于高级图表可能很有用。
- en: This book assumes you know some JavaScript, HTML, and CSS. The next chapter
    provides a quick refresher on specific topics and the main technologies you are
    likely to encounter while learning Chart.js. You can skip it and jump straight
    to [Chapter 3](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml), *Chart.js – Quick
    Start*, if you wish. This chapter provides a brief introduction to data visualization
    and data visualization frameworks, and gives an overview of the rest of the book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设您已经了解一些 JavaScript、HTML 和 CSS。下一章提供了对特定主题和您在学习 Chart.js 时可能遇到的主要技术的快速回顾。如果您愿意，可以跳过它，直接跳到[第
    3 章](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml)，*Chart.js 快速入门*。本章简要介绍了数据可视化和数据可视化框架，并对本书的其余部分进行了概述。
- en: 'This chapter will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Data visualization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可视化
- en: Why use a data visualization library?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么使用数据可视化库？
- en: How to use this book
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用本书
- en: Data visualization
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化
- en: Visual representations provide data with contexts that stimulate the viewer's
    brain, revealing information that is usually not obvious from tabular data. It's
    normally much more natural to capture the substantive content of data using visual
    artifacts. Charts and maps are a powerful, clear, and effective means to tell
    stories through data. They can pack huge quantities of information in small spaces
    and make it easier to compare data, provide insights, and reveal trends, relationships,
    causality, and other patterns hidden in the numbers.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉表示为数据提供了上下文，刺激了观众的头脑，揭示了通常从表格数据中不明显的信息。通常，使用视觉元素捕获数据的实质性内容要自然得多。图表和地图是讲述数据故事的有力、清晰和有效手段。它们可以在小空间中打包大量信息，并使比较数据、提供见解和揭示隐藏在数字中的趋势、关系、因果关系和其他模式变得更容易。
- en: Charts reveal and emphasize data by attracting the viewer's attention. They
    can simplify complex data sets to foster discovery and comprehension, helping
    viewers to analyze and reason about data in different contexts. But they can also
    exaggerate, mislead, and even lie. A visually attractive chart is important, but
    designers should discover how to achieve a balance between form and function.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图表通过吸引观众的注意力来揭示和强调数据。它们可以将复杂的数据集简化，以促进发现和理解，帮助观众在不同的上下文中分析和推理数据。但它们也可能夸大、误导，甚至撒谎。一个视觉上吸引人的图表很重要，但设计师应该发现如何在形式和功能之间达到平衡。
- en: Data visualization is both an art and a science. A chart does not need to explain
    everything. It doesn't always have to be precise. It may be directed toward a
    specific audience, which should provide the context necessary to understand and
    decode it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化既是艺术又是科学。图表不需要解释一切。它不总是需要精确。它可能针对特定的受众，这应该提供理解和解码所需的上下文。
- en: Chart types
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图表类型
- en: Data visualization usually refers to the visual display of quantitative information,
    as in statistical and information charts, plots, data maps, and so on. but it
    can include any kind of visual representation of data, such as mathematical graphics,
    path networks (subway systems, roads, electronic circuit diagrams), word clouds,
    musical and sound representations, timelines, geographical information systems,
    chemical and atomic diagrams, or any other way of coding of data using visual
    artifacts.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化通常指的是定量信息的视觉展示，如统计图表、图表、数据地图等。但它可以包括任何类型的数据视觉表示，例如数学图形、路径网络（地铁系统、道路、电子电路图）、词云、音乐和声音表示、时间线、地理信息系统、化学和原子图，或任何其他使用视觉符号编码数据的方式。
- en: You can create any type of visualization if you use a data-driven library such
    as D3.js. A charting library such as Chart.js, which comes with a set of pre-configured
    formats, is more limited, but much easier to use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用像 D3.js 这样的数据驱动库，你可以创建任何类型的可视化。带有预配置格式的图表库，如 Chart.js，功能更有限，但使用起来更容易。
- en: 'Chart.js supports eight basic types of chart:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Chart.js 支持八种基本图表类型：
- en: Bar (horizontal and vertical)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条形图（水平和垂直）
- en: Line/area (including stacked)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线/面积（包括堆叠）
- en: Radar (radial line)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雷达图（径向线）
- en: Polar area (radial bar)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极坐标面积图（径向条形图）
- en: Scatter
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 散点图
- en: Bubble
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 气泡图
- en: Pie
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 饼图
- en: Doughnut
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环形图
- en: It doesn't offer support for network diagrams, trees, or geographical maps,
    but you can create Chart.js visualizations that share data with other graphics.
    In [Chapter 4](9c3dd8a3-6dde-42ba-9e93-ae1e2884cc57.xhtml),* Creating Charts*,
    we will create a bubble chart, representing populations of cities around the world,
    and plot them on a map with Chart.js.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '它不支持网络图、树或地理地图，但你可以使用 Chart.js 创建与其他图形共享数据的可视化。在[第 4 章](9c3dd8a3-6dde-42ba-9e93-ae1e2884cc57.xhtml)，*创建图表*中，我们将使用
    Chart.js 创建一个气泡图，表示世界各地的城市人口，并将它们绘制在地图上。 '
- en: Choosing a chart
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择图表
- en: 'Choosing a chart requires knowing your data. Charts are a means of communication
    aimed at revealing information, so the main question is: what do you want to show?
    Once you''ve answered that question, you should analyze your data and discover
    what kind of data you have. Data values used in visualizations can usually be
    classified as one of these three types:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图表需要了解你的数据。图表是一种旨在揭示信息的沟通手段，所以主要问题是：你想要展示什么？一旦你回答了这个问题，你应该分析你的数据，并发现你有什么类型的数据。在可视化中使用的数据值通常可以分为以下三种类型之一：
- en: '**Quantitative**: A value that can be measured or counted (a number, a length,
    an area, an angle)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定量**：可以测量或计数的值（数字、长度、面积、角度）'
- en: '**Ordinal**: A value can be ranked or compared (color saturation, area, angle,
    length, words)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**序数**：一个值可以被排序或比较（颜色饱和度、面积、角度、长度、单词）'
- en: '**Nominal:** A category (a name)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名义**：一个类别（一个名称）'
- en: What is the purpose of you chart? Do you wish to reveal relationships, trends,
    or causality? What kind of relationship do you wish to emphasize? Do your variables
    relate to time or space?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你的图表的目的是什么？你是想揭示关系、趋势还是因果关系？你希望强调哪种关系？你的变量与时间或空间相关吗？
- en: 'Visualizations can be organized into categories, which make it easier to choose
    the kind of chart you need. Most charts and maps can be placed in one of these
    categories:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化可以组织成类别，这有助于选择所需的图表类型。大多数图表和地图都可以归入以下类别之一：
- en: '*Time-series* (plots a single variable over a period of time). For example,
    a line chart that demonstrates a trend.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*时间序列*（在一段时间内绘制单个变量的图表）。例如，展示趋势的折线图。'
- en: '*Temporal/linear* (categories placed in a time-line). For example, a series
    of events.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*时间/线性*（按时间线排列的分类）。例如，一系列事件。'
- en: '*Spatial/planar/volumetric* (categories distributed in a spatial map). For
    example, a *cartogram* or *choropleth* with data distributed on a geographical
    map.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*空间/平面/体积*（在空间地图上分布的分类）。例如，带有地理地图上分布数据的*人口图*或*色块图*。'
- en: '*Comparison* (categories associated with quantities are compared and ranked
    during a single period). For example, a bar chart that compares values.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*比较*（在单一时期内，与数量相关的类别被比较和排序）。例如，比较值的条形图。'
- en: '*Part-to-whole* (categorical subdivisions as ratio to a whole). For example,
    a pie chart with slices as percentages.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*部分与整体*（分类子集作为整体的比例）。例如，以百分比表示切片的饼图。'
- en: '*Correlation* (comparing two or more variables). For example, a scatterplot
    comparing two variables, or a bubble chart comparing three.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*相关性*（比较两个或多个变量）。例如，比较两个变量的散点图，或比较三个变量的气泡图。'
- en: 'In his classic book, *The Visual Display of Quantitative Information*, Edward
    Tufte defines some aspects that can be used to measure the quality and integrity
    of visualizations. They are the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在他的经典著作《*定量信息的视觉展示*》中，爱德华·图费（Edward Tufte）定义了一些可以用来衡量可视化质量与完整性的方面。它们如下：
- en: '**Data-ink ratio**: The amount of ink (or pixels) dedicated to the data shown'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据-墨水比率**：用于显示数据的墨水（或像素）量'
- en: '**Chartjunk**: Visual garbage that is irrelevant to the data shown (and that
    frequently get in the way)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图表垃圾**：与显示的数据无关的视觉垃圾（并且经常阻碍数据展示）'
- en: '**Lie factor**: A number that measures the integrity of a visualization; for
    example, charts that lie by not representing proportions and lengths with enough
    precision'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**谎言因子**：衡量可视化完整性的数字；例如，通过不精确地表示比例和长度而撒谎的图表'
- en: The data-ink ratio can be improved by removing chart-junk such as unnecessary
    lines and labels from charts. Sometimes the lines are important for context, but
    in interactive Web visualizations you can be very minimalistic. You can always
    provide details of demand with tooltips or other interactive resources.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从图表中移除不必要的线条和标签等图表垃圾（chart-junk），可以提高数据-墨水比率。有时线条对于上下文很重要，但在交互式网络可视化中，你可以非常简约。你总是可以通过工具提示或其他交互式资源提供需求的详细信息。
- en: Communication is deeply affected by the way humans perceive graphics, and may
    be improved or distorted by optical illusions. There are no charts with a lie
    factor of zero, but an adequate choice can improve it significantly. A bad choice
    increases the lie factor and can induce viewers to false perceptions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 人类对图形的感知方式深刻地影响着沟通，可能会因为视觉错觉而被改善或扭曲。没有谎言因子为零的图表，但适当的选择可以显著提高它。一个糟糕的选择会增加谎言因子，并可能导致观众产生错误的感知。
- en: 'Position and length are best for representing quantitative information. Direction
    and angles come next, then area, volume, curvature, and finally shadows, saturation,
    and color. Since lengths and positions are easier to perceive and compare than
    angles and areas, data in a bar chart is perceived with greater accuracy than
    the same data in a pie chart. Consider the following pie chart, which compares
    the areas of continents:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 位置和长度最适合表示定量信息。接下来是方向和角度，然后是面积、体积、曲率，最后是阴影、饱和度和颜色。由于长度和位置比角度和面积更容易感知和比较，因此条形图中的数据比饼图中的数据感知得更准确。考虑以下比较大陆面积的饼图：
- en: '![](img/b844ffab-b6a9-4f39-82a6-86c57b141b03.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b844ffab-b6a9-4f39-82a6-86c57b141b03.png)'
- en: A pie chart comparing areas of continents
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 比较大陆面积的饼图
- en: 'Now look at the exact same data represented in a bar chart:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看看以条形图表示的完全相同的数据：
- en: '![](img/aa89ee60-a425-439a-b257-d044f438fea9.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa89ee60-a425-439a-b257-d044f438fea9.png)'
- en: A bar chart comparing areas of continents
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 比较大陆面积的条形图
- en: Which one is clearer? While the pie chart is good for showing proportions, angles
    are much harder to compare. Differences in length are much easier to compare and
    a bar chart is better in this case. But it would probably be clearer to use a
    pie chart to compare *two* values as *part of a whole*, such as the area of one
    continent compared to the remaining area, to reveal the proportion of land it
    occupies compared to the rest of the planet.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 哪一个更清晰？虽然饼图适合显示比例，但角度的比较要困难得多。长度的差异更容易比较，在这种情况下条形图更好。但使用饼图来比较*两个*值作为*整体的一部分*可能更清晰，例如，一个大陆的面积与剩余面积的比较，以揭示它相对于整个地球所占的土地比例。
- en: 'To have both proportions and lengths, you might be tempted to try a single
    stacked bar chart, but it still rates worse than the simple bar chart, since stacked
    bars aren''t as easy to compare as when they are placed side-by-side:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要同时显示比例和长度，你可能想尝试一个单一的堆积条形图，但它仍然比简单的条形图差，因为堆积条不容易像并排放置时那样比较：
- en: '![](img/1607a547-03a5-4b5b-b22c-f30bf5398fdf.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1607a547-03a5-4b5b-b22c-f30bf5398fdf.png)'
- en: A stacked bar chart comparing areas of continents
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 比较大陆面积的堆积条形图
- en: Of course, you can choose a chart for other reasons, but it's important to know
    what you lose and gain in each case. Analytic and exploratory visualizations require
    a high degree of accuracy, but you might want to use a more attractive visualization
    at the price of losing some accuracy if you need to capture the attention of your
    audience.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可以出于其他原因选择图表，但了解每种情况下你失去和获得的是什么很重要。分析和探索性可视化需要高度精确，但如果你需要吸引观众的注意力，可能愿意以牺牲一些精确度为代价使用更具吸引力的可视化。
- en: Web-based visualizations
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于网络的可视化
- en: When Edward Tufte wrote his classic books on data visualization, most of it
    was intended for printed media. Today, you can create visualizations that use
    data that can be updated in real time, with dynamic interfaces that allows interaction
    by the user. The design guidelines for web-based visualizations are different.
    They *can* and *should be* dynamic and interactive. Interactive charts can pack
    in much more information by hiding the details, which can be requested by the
    user on demand. Charts are sometimes rendered as overviews or sparklines, only
    revealing details through strategies such as zooming and brushing.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当爱德华·图费（Edward Tufte）撰写他的关于数据可视化的经典书籍时，大部分内容都是针对印刷媒体的。今天，你可以创建使用实时更新的数据的可视化，具有允许用户交互的动态界面。基于网络的视觉化的设计指南是不同的。它们*可以*并且*应该*是动态和交互式的。交互式图表可以通过隐藏细节来包含更多信息，这些细节可以在用户需要时请求。图表有时被渲染为概览或Sparklines，只有通过缩放和刷选等策略才能揭示细节。
- en: Why use a data visualization library?
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用数据可视化库？
- en: Actually, you don't need any coding to create fantastic and interactive visualizations
    for the web. You can always use a charting service. There are many; some are paid,
    others are free. They offer configuration screens and data transformation tools
    that allow you to create all kinds of beautiful charts. Popular services include
    *Google Charts*, *Tableau*, *Infogram*, and *Plotly*. If they fully satisfy your
    data visualization needs, you don't really need this book.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你不需要任何编码就能为网页创建出色的交互式可视化。你总是可以使用图表服务。有很多这样的服务；有些是付费的，有些是免费的。它们提供配置界面和数据转换工具，允许你创建各种美丽的图表。流行的服务包括*Google
    Charts*、*Tableau*、*Infogram*和*Plotly*。如果它们完全满足你的数据可视化需求，你实际上并不需要这本书。
- en: But if you know HTML, CSS, and JavaScript, you don't need to use these platforms.
    Web standards provide all the tools you need to create any sophisticated graphics,
    with no restrictions imposed by a platform or a plan. Using web standards also
    facilitates the integration of your visualizations with web applications, frontend
    frameworks (such as *React*, *Angular*, and *Vue*) and backend web services (such
    as resources and data provided by RESTful services).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你知道HTML、CSS和JavaScript，你就不需要使用这些平台。网络标准提供了你创建任何复杂图形所需的所有工具，没有任何平台或计划的限制。使用网络标准还便于将你的可视化与网络应用程序、前端框架（如*React*、*Angular*和*Vue*）以及后端网络服务（如RESTful服务提供的资源和数据）集成。
- en: But do you really need to use a library like Chart.js? Can't you just use standard
    JavaScript, HTML, CSS, and Canvas?
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 但你真的需要使用像Chart.js这样的库吗？难道你不能只使用标准的JavaScript、HTML、CSS和Canvas吗？
- en: Creating data visualizations for the Web
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为网页创建数据可视化
- en: You don't really need any libraries or frameworks to create and display interactive
    and animated data visualizations on the Web. Plain standard HTML, CSS, and JavaScript
    already do that for you. Basic HTML provides structural elements that can be styled
    with CSS to display simple graphical elements such as colored rectangles. That
    means you can create a basic static bar chart just applying different widths in
    CSS to `div` elements.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你实际上并不需要任何库或框架来在网页上创建和显示交互式和动画数据可视化。标准的HTML、CSS和JavaScript已经为你做到了这一点。基本的HTML提供了可以通过CSS进行样式的结构元素，可以用来显示简单的图形元素，例如彩色矩形。这意味着你只需在CSS中应用不同的宽度到`div`元素，就可以创建一个基本的静态柱状图。
- en: 'Take a look at the following HTML and CSS code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 看看下面的HTML和CSS代码：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you run it in a web browser, you get the following chart:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个网页浏览器中运行它，你会得到以下图表：
- en: '![](img/e5774a5b-899c-45b7-8195-499bff26098a.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5774a5b-899c-45b7-8195-499bff26098a.png)'
- en: A simple static bar chart created with just HTML and CSS
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用HTML和CSS创建的简单静态柱状图
- en: Of course, this is not the best way to draw a bar chart. The numbers were inserted
    somewhat arbitrarily in the HTML, and the lengths are defined by CSS width properties.
    You have to calculate the scales yourself. It's easy to make a mistake and reveal
    the wrong numbers. This is just to illustrate that all the graphical tools already
    exist in HTML and CSS. All we need is a library that generates that code for us.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这不是绘制条形图的最佳方式。数字在HTML中插入得有些随意，长度由CSS的宽度属性定义。你必须自己计算比例。很容易出错并显示错误的数据。这只是为了说明所有图形工具已经存在于HTML和CSS中。我们需要的只是一个为我们生成代码的库。
- en: 'Since the **Document Object Model** (**DOM**) allows scripting languages to
    access and change style attributes of an element, widths can be specified in JavaScript
    and can even respond to events or change with time, allowing the creation of interactive
    graphics with animation. Adding the following JavaScript function to the previous
    chart, you can the change value, length, and colors of the bars when the user
    clicks on the chart using standard DOM commands:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**文档对象模型**（**DOM**）允许脚本语言访问和更改元素的风格属性，宽度可以在JavaScript中指定，甚至可以响应事件或随时间变化，从而允许创建具有动画的交互式图形。将以下JavaScript函数添加到前面的图表中，你可以在用户使用标准DOM命令点击图表时更改值、长度和颜色：
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot shows the same chart as the preceding one after clicking,
    with new colors and values:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在点击后与前面相同的图表，具有新的颜色和值：
- en: '![](img/c1f2eb15-110f-4cf5-9f50-e6a8b9c1aa00.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c1f2eb15-110f-4cf5-9f50-e6a8b9c1aa00.png)'
- en: An interactive bar chart created with the standard DOM, CSS, HTML, and Javascript
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标准DOM、CSS、HTML和JavaScript创建的交互式条形图
- en: 'But you don''t have to use `div` and CSS to draw bars. Since HTML5, you can
    also use the Canvas API—a complete graphical library that can be used to create
    any kind of graphics, not just rectangles. The following example displays the
    same data as a pie chart using only standard HTML and no extra libraries:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 但你不必使用`div`和CSS来绘制条形图。自从HTML5以来，你也可以使用Canvas API——这是一个完整的图形库，可以用来创建任何类型的图形，而不仅仅是矩形。以下示例仅使用标准HTML和没有额外库就显示了与饼图相同的数据：
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can download all these code examples from the GitHub repository for this
    chapter. See the last section for details. The result is shown as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从本章的GitHub仓库下载所有这些代码示例。详情请见最后一节。结果如下所示：
- en: '![](img/fce774f0-4439-4d5a-86e0-8aa7e717ed73.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fce774f0-4439-4d5a-86e0-8aa7e717ed73.png)'
- en: A simple pie chart created using HTML Canvas
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML Canvas创建的简单饼图
- en: You can make even nicer pie charts in Chart.js without writing a single line
    of Canvas code, and you won't have to worry about calculating angles in radians
    or adjusting scales to fit the page. You also get free tooltips with far fewer
    lines of code than we used previously. Chart.js may not satisfy all your data
    visualization needs, but it certainly is a great way to start. You can then apply
    your knowledge of HTML and JavaScript and extend it with plugins, integrate with
    other charting solutions, or migrate to a larger and unrestricted library such
    as D3.js.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在Chart.js中，即使不写一行Canvas代码，你也能制作出更漂亮的饼图，你也不必担心计算弧度或调整比例以适应页面。你还可以用比之前更少的代码获得免费的工具提示。Chart.js可能无法满足你所有的数据可视化需求，但它确实是一个很好的开始方式。然后你可以应用你的HTML和JavaScript知识，并通过插件扩展它，与其它图表解决方案集成，或者迁移到一个更大且不受限制的库，如D3.js。
- en: How to use this book
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用本书
- en: This book was designed as a practical hands-on guide on how to create data visualizations
    with Chart.js. It doesn't cover all aspects of Chart.js, but does cover most of
    the features you are likely to use to create visualizations. All eight Chart.js
    charts are covered, exploring different configurations and applications using
    external data obtained from public repositories.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在作为创建数据可视化的Chart.js实用手册。它不涵盖Chart.js的所有方面，但涵盖了创建可视化时可能使用的大多数功能。涵盖了所有八个Chart.js图表，探讨了使用从公共仓库获取的外部数据的不同配置和应用。
- en: Each chapter covers fundamental concepts. Each concept is always illustrated
    with a simple code example, but more complex examples that might require extra
    JavaScript programming are also presented in each chapter, and include solutions
    to real-world problems, such as downloading, parsing, and filtering a data file
    to convert it into a format usable by Chart.js.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都涵盖了基本概念。每个概念都总是用一个简单的代码示例来展示，但每个章节也展示了可能需要额外 JavaScript 编程的更复杂示例，并包括解决现实世界问题的解决方案，例如下载、解析和过滤数据文件以将其转换为
    Chart.js 可用的格式。
- en: Code listings are used throughout the book, but most of the time, they focus
    on a specific feature and show only a fragment of the full code. But you can download
    the full listing. All the code examples used in the book are available from a
    public GitHub repository located at: [https://github.com/PacktPublishing/Learn-charts.js](https://github.com/PacktPublishing/Learn-charts.js).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 书中使用了代码列表，但大多数时候，它们专注于一个特定的功能，只展示完整代码的一部分。但你可以下载完整的列表。书中使用的所有代码示例都可以从位于：[https://github.com/PacktPublishing/Learn-charts.js](https://github.com/PacktPublishing/Learn-charts.js)
    的公共 GitHub 仓库中获取。
- en: There is a folder for each chapter in the repository, named `Chapter01`, `Chapter02`,
    and so on. Each code listing and every image generated by code contains a relative
    reference to a file located in the corresponding folder for each chapter. You
    can try out all the code examples as you learn. You can also use it in any way
    you like, since it's free and open source.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 仓库中为每个章节都有一个文件夹，命名为 `Chapter01`、`Chapter02` 等。每个代码列表和每个由代码生成的图像都包含对每个章节对应文件夹中文件的相对引用。你可以在学习时尝试所有代码示例。你也可以以任何你喜欢的方式使用它，因为它是免费和开源的。
- en: 'Here''s a brief summary of each chapter:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是每个章节的简要总结：
- en: '[Chapter 2](25edc904-3528-40cc-8865-75ccf1fc78eb.xhtml),* Technology Fundamentals*,
    covers technology fundamentals, data formats, and also explores some techniques
    for loading and parsing files. It gives a general background on topics used by
    Chart.js, such as JavaScript, CSS, DOM, and Canvas. You may skip these sections
    if you wish.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](25edc904-3528-40cc-8865-75ccf1fc78eb.xhtml)，*技术基础*，涵盖了技术基础、数据格式，并探讨了加载和解析文件的一些技术。它提供了
    Chart.js 所用主题的一般背景，例如 JavaScript、CSS、DOM 和 Canvas。如果你愿意，可以跳过这些部分。'
- en: '[Chapter 3](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml)*, Chart.js – Quick
    Start*, includes a quick start and overview of several Chart.js features. It shows
    how to set up a web page to use Chart.js and how to create your first chart. You
    will learn a bit of everything Chart.js has to offer. It also introduces the bar
    chart type (vertical and horizontal).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml)*，Chart.js 快速入门*，包括快速入门和几个
    Chart.js 功能的概述。它展示了如何设置网页以使用 Chart.js 以及如何创建你的第一个图表。你将了解 Chart.js 提供的所有内容。它还介绍了条形图类型（垂直和水平）。'
- en: '[Chapter 4](9c3dd8a3-6dde-42ba-9e93-ae1e2884cc57.xhtml), *Creating Charts*,
    covers all other chart types available: line/area, radar, polar area, pie, doughnut,
    scatter, and bubble. It also shows how to load and parse external CSV and JSON
    data from public data portals and use them to create real-world visualizations.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章](9c3dd8a3-6dde-42ba-9e93-ae1e2884cc57.xhtml)，*创建图表*，涵盖了所有其他可用的图表类型：折线/面积图、雷达图、极坐标面积图、饼图、环形图、散点图和气泡图。它还展示了如何从公共数据门户加载和解析外部
    CSV 和 JSON 数据，并使用它们创建现实世界的可视化。'
- en: '[Chapter 5](0f37b129-1e84-459d-ba78-bb918d7f1b0b.xhtml),* Scales and Grid Configuration*,
    focuses on configuring scales, axes, and grid lines for all charts. You will learn
    how to use radial grids and Cartesian grids with linear, logarithmic, category,
    and time axes.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章](0f37b129-1e84-459d-ba78-bb918d7f1b0b.xhtml)，*刻度和网格配置*，专注于配置所有图表的刻度、轴和网格线。你将学习如何使用径向网格和笛卡尔网格与线性、对数、分类和时间轴一起使用。'
- en: '[Chapter 6](6a377615-9cab-4346-817a-cecda0a2d90c.xhtml), *Configuring Styles
    and Interactivity*, deals with configuration of several properties, for which
    Chart.js already provides defaults: fonts, titles, and labels. It also explores
    some neat labeling plugins and color schemes, which are important for accessible
    charts. This chapter also shows how to configure transitions, animations, and
    interactions.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[第六章](6a377615-9cab-4346-817a-cecda0a2d90c.xhtml)，*配置样式和交互性*，处理了配置几个属性的问题，对于这些属性，Chart.js
    已经提供了默认值：字体、标题和标签。它还探讨了几个实用的标签插件和配色方案，这对于可访问图表非常重要。本章还展示了如何配置过渡、动画和交互。'
- en: '[Chapter 7](f3bca5ff-1e17-4cb4-bbb9-6d71b8847ed0.xhtml)*, Advanced Charts.js*,
    covers some advanced features that you will are less likely to use on a regular
    basis, since Chart.js already provides good defaults. These include tooltip configuration,
    creating custom legends, mixed charts, how to display multiple charts on a single
    page, overlaying Chart.js on a Canvas, and creating plugins.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](f3bca5ff-1e17-4cb4-bbb9-6d71b8847ed0.xhtml)*，高级 Chart.js*，涵盖了您不太可能经常使用的某些高级功能，因为
    Chart.js 已经提供了良好的默认设置。这些包括工具提示配置、创建自定义图例、混合图表、如何在单个页面上显示多个图表、在 Canvas 上叠加 Chart.js
    以及创建插件。'
- en: I believe the book covers the most important topics in Chart.js. It leaves out
    some advanced programming topics, several plugins, and integration with front-end
    frameworks, which are also not covered.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这本书涵盖了 Chart.js 中最重要的主题。它省略了一些高级编程主题、几个插件以及与前端框架的集成，这些内容也没有涉及。
- en: I am not affiliated with Chart.js in any way and this book does not replace
    the official Chart.js documentation, which is the ultimate reference guide on
    the topic. The documentation is community-maintained and freely available at [www.chartjs.org/docs/latest](http://www.chartjs.org/docs/latest).
    There are also many samples that explore its main features that are also part
    of the documentation at [www.chartjs.org/samples/latest](http://www.chartjs.org/samples/latest).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我与 Chart.js 没有任何关联，这本书也不代替官方的 Chart.js 文档，这是该主题的终极参考指南。该文档由社区维护，免费提供在 [www.chartjs.org/docs/latest](http://www.chartjs.org/docs/latest)。还有许多探索其主要功能的示例，这些示例也是文档的一部分，可在
    [www.chartjs.org/samples/latest](http://www.chartjs.org/samples/latest) 找到。
- en: When writing this book, I did my best to provide the most accurate information
    possible. All code listings were tested, and additional efforts were made to guarantee
    that all code examples are properly referenced in the book and work as expected.
    This book is based on Chart.js version 2.7.3\. I expect that the examples should
    continue working with any 2.x version, but there is a small possibility that some
    code may not work as expected if you are using a later version.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写这本书时，我尽力提供尽可能准确的信息。所有代码列表都经过测试，并做出了额外努力以确保所有代码示例在书中得到适当引用，并且按预期工作。本书基于 Chart.js
    版本 2.7.3。我预计示例应该继续与任何 2.x 版本兼容，但如果您使用的是较新版本，某些代码可能无法按预期工作。
- en: The Chart.js community is very active on *GitHub* and *StackOverflow*. If you
    have any questions about Chart.js, you can submit a question on [stackoverflow.com](http://stackoverflow.com)
    and you will probably have an answer within a few hours or less.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Chart.js 社区在 *GitHub* 和 *StackOverflow* 上非常活跃。如果您对 Chart.js 有任何疑问，您可以在 [stackoverflow.com](http://stackoverflow.com)
    上提交问题，您可能会在几小时或更短的时间内得到答案。
- en: I hope you enjoy this book and have as much fun as I had when learning Chart.js.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望您喜欢这本书，并在学习 Chart.js 时像我一样享受乐趣。
- en: Summary
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter provided a quick introduction to data visualization topics and
    introduced Chart.js, the JavaScript library with which you will learn to create
    responsive interactive visualizations for the web. We also demonstrated how standard
    web technologies provide all you need to create charts for the web, and how a
    data visualization library such as Chart.js can be beneficial.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了数据可视化主题的快速介绍，并介绍了 Chart.js，这是一个 JavaScript 库，您将学习如何创建用于网络的响应式交互式可视化。我们还展示了标准网络技术如何提供您创建网络图表所需的一切，以及如何使用像
    Chart.js 这样的数据可视化库带来益处。
- en: In the next chapter, we will cover the fundamentals of some standard technologies
    used by Chart.js—data formats and data manipulation techniques—but if you want
    to start using Chart.js right away, you can skip it and jump straight to [Chapter
    3](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml)*, Chart.js – Quick Start*.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 Chart.js 所使用的某些标准技术的基础知识——数据格式和数据操作技术——但如果您想立即开始使用 Chart.js，您可以跳过它，直接跳到
    [第3章](af85e307-a9bc-47c5-be74-52727cbb7c2e.xhtml)*，Chart.js 快速入门*。
- en: References
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '**Books and websites**:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**书籍和网站**：'
- en: Edward R. Tufte. *The Visual Display of Quantitative Information*. Graphics
    Press, 1997
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 爱德华·R·图费。《定量信息的视觉展示》。图形出版社，1997年
- en: Isabel Meirelles. *Design for Information*. Rockport Publishers, 2013
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伊莎贝尔·梅雷莱斯。《信息设计》。洛克波特出版社，2013年
- en: 'Stephen Few. *Data Visualization: past, present and future*. Perceptual Edge,
    2007'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 史蒂芬·菲。*数据可视化：过去、现在和未来*。感知边缘，2007年
- en: David Kahneman. *Thinking Fast and Slow*. Farrar, Straus and Giroux. 2011
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大卫·卡尼曼。《快速与慢思考》。法拉尔、斯特劳斯和吉鲁出版社，2011年
- en: Ben Bederson and Ben Schneiderman. *The Craft of Information Visualization*.
    2003
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ben Bederson 和 Ben Schneiderman. *信息可视化的艺术*. 2003
