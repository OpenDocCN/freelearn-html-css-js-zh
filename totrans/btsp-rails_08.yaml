- en: Chapter 8. Working with Bootstrap Modals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。使用Bootstrap模态框
- en: Every developer has used an alert/prompt window when dealing with web development.
    They are generally used to display important messages, accept information from
    the user, display warning messages, and for many different purposes. The problem
    with these traditional dialog windows is that they have become outdated, and our
    visitors probably hate them. It's no longer recommended to use dialog windows
    from a better user experience perspective.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 每个开发者都在处理Web开发时使用过警告/提示窗口。它们通常用于显示重要消息、从用户那里获取信息、显示警告消息以及许多不同的目的。这些传统对话框的问题在于它们已经过时了，我们的访客可能不喜欢它们。从更好的用户体验角度来看，不再推荐使用对话框窗口。
- en: To solve this problem, web developers discovered another better way to replace
    pop-up windows. They used a hidden HTML element inside the same web page. Whenever
    needed, this hidden element was displayed with the help of some JavaScript code
    and CSS styling. Bootstrap's modal does exactly the same. It is a flexible dialog
    prompt with minimum required functionality. It has got its own Bootstrap styling
    and animation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，Web开发者发现了一种更好的方法来替换弹出窗口。他们使用了同一网页内的一个隐藏HTML元素。每当需要时，这个隐藏元素会通过一些JavaScript代码和CSS样式来显示。Bootstrap的模态框正是如此。它是一个具有最小所需功能的灵活对话框。它具有自己的Bootstrap样式和动画。
- en: In this chapter, we will learn how to create a Bootstrap modal and its various
    types and functionalities. We will also integrate a modal component in our Rails
    application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何创建Bootstrap模态框及其各种类型和功能。我们还将在我们的Rails应用程序中集成模态框组件。
- en: Getting started with modals
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用模态框
- en: First, we will create a static application to create and test various types
    of Bootstrap modals. Once we are done with the basics of modals, we will proceed
    to integrate it in our existing `Online Shopping Rails` application.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个静态应用程序来创建和测试各种类型的Bootstrap模态框。一旦我们完成了模态框的基础知识，我们将将其集成到现有的`Online Shopping
    Rails`应用程序中。
- en: 'Create a new folder called `Bootstrap Modals` in your system. Now, create a
    new file called `index.html` and paste the following starter template in it:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的系统中创建一个名为`Bootstrap Modals`的新文件夹。现在，创建一个名为`index.html`的新文件，并将以下起始模板粘贴到其中：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s delete the `Hello World` tag from the preceding template and insert
    the markup needed for a modal. To create a modal, we need to define a `<div>`
    element with a `.modal` class:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从先前的模板中删除`Hello World`标签，并插入创建模态框所需的标记。要创建模态框，我们需要定义一个具有`.modal`类的`<div>`元素：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Optionally, you can also add the `.fade` class to apply the `.fade-in` animation
    to the modal:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，您还可以添加`.fade`类以将`.fade-in`动画应用于模态框：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `.modal` class creates a wrapper for the modal component. It hides the HTML
    web page's scrolling attribute by setting the CSS `overflow` property to `hidden`.
    It also creates an HTML area with `fixed` positioning on top of all the HTML elements
    present on the same page.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`.modal`类为模态组件创建了一个包装器。它通过将CSS `overflow`属性设置为`hidden`来隐藏HTML网页的滚动属性。它还在同一页面上所有HTML元素之上创建了一个具有`fixed`定位的HTML区域。'
- en: 'Next, we will add a markup for placing contents inside the modal. The procedure
    goes as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加用于在模态框内放置内容的标记。步骤如下：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The classes `.modal-dialog` and `.modal-content` are, together, responsible
    for properly centering a white-colored content area in a modal component.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 类`.modal-dialog`和`.modal-content`共同负责在模态组件中正确居中一个白色内容区域。
- en: 'Let''s proceed to create the modal''s body area for placing the HTML contents
    inside a modal:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续创建模态框的主体区域，以便在模态框内放置HTML内容：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can place any HTML element, as per your requirement, inside this `.modal-body`
    div. You can use it to display a long `Terms & Conditions` text, a `login` form,
    a warning text, and so on.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据需要在此`.modal-body` div中放置任何HTML元素。您可以使用它来显示长`条款和条件`文本、`登录`表单、警告文本等。
- en: We are ready with our first basic modal. If you load this HTML page inside the
    browser, you will find a blank page. It's because we have created a modal, but
    didn't create any element which will trigger this modal. Modals are hidden components
    in Bootstrap.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好了我们的第一个基本模态框。如果您在浏览器中加载这个HTML页面，您会发现一个空白页面。这是因为我们创建了一个模态框，但没有创建任何将触发此模态框的元素。模态框是Bootstrap中的隐藏组件。
- en: 'Let''s create a Bootstrap button to trigger the preceding modal when clicked
    on:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个Bootstrap按钮，当点击时触发前面的模态框：
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This button should have two very important custom attributes to trigger a modal:
    `data-toggle` and `data-target`. The first attribute tells Bootstrap''s JavaScript
    which component it''s concerned with, while the second attribute specifies which
    particular modal to open. The second attribute holds the ID of the modal you want
    to open. Let''s also apply this ID to our preceding modal. Hence, the final markup
    for our modal should look like the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此按钮应该有两个非常重要的自定义属性来触发模态框：`data-toggle` 和 `data-target`。第一个属性告诉 Bootstrap 的 JavaScript
    它关注的是哪个组件，而第二个属性指定要打开哪个特定的模态框。第二个属性持有你想要打开的模态框的 ID。让我们也将此 ID 应用到我们前面的模态框上。因此，我们模态框的最终标记应如下所示：
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should get a modal that looks like the one shown in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到一个如下截图所示的模态框：
- en: '![Getting started with modals](img/7269OS_08_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用模态框](img/7269OS_08_01.jpg)'
- en: 'A modal component also has a header and footer area, apart from the `.modal-body`
    area. They are created using the `.modal-header` and `.modal-footer` classes.
    We can apply a header and footer by adding code, as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 模态框组件除了 `.modal-body` 区域外，还有一个头部和底部区域。它们是通过 `.modal-header` 和 `.modal-footer`
    类创建的。我们可以通过添加代码来应用头部和底部，如下所示：
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It is recommended that you use an `<h4>` tag with a `.modal-title` class inside
    `.modal-header`. All the default elements inside the modal''s footer will appear
    right, aligned, as per Bootstrap''s CSS. You can modify it by overriding its CSS
    property:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 建议你在 `.modal-header` 内使用带有 `.modal-title` 类的 `<h4>` 标签。模态框底部的所有默认元素都将根据 Bootstrap
    的 CSS 居中对齐。你可以通过覆盖其 CSS 属性来修改它：
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The preceding modal a with a header and footer should look like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 带有头部和底部的上述模态框应如下所示：
- en: '![Getting started with modals](img/7269OS_08_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用模态框](img/7269OS_08_02.jpg)'
- en: Changing Bootstrap's modal size
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改变 Bootstrap 的模态框大小
- en: 'Bootstrap''s modals also come in various sizes: large, normal, and small. You
    need to use the following classes to change the size of the modal:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 的模态框也有各种大小：大、正常和小。你需要使用以下类来更改模态框的大小：
- en: '`.modal-lg`: This is for larger modals'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.modal-lg`: 这用于较大的模态框'
- en: 'No class: This is for normal sized modals'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有类：这用于正常大小的模态框
- en: '`.modal-sm`: This is for smaller modals'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.modal-sm`: 这用于较小的模态框'
- en: 'You have to add the preceding classes to the `.modal-dialog` element in the
    modal''s markup. Take the following code as an example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须将上述类添加到模态框标记中的 `.modal-dialog` 元素。以下代码作为示例：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The preceding markup will create a larger modal, as shown in the following
    screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 上述标记将创建一个较大的模态框，如下面的截图所示：
- en: '![Changing Bootstrap''s modal size](img/7269OS_08_03.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![改变 Bootstrap 的模态框大小](img/7269OS_08_03.jpg)'
- en: Additional Bootstrap modal features
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他 Bootstrap 模态框功能
- en: 'Bootstrap provides many features for the modal component. These features are
    generally provided as `JSON` properties, while triggering the modal component.
    Alternatively, you can use these features by using custom `data-*` attributes
    in the `.modal` element. Bootstrap''s additional features are:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 为模态框组件提供了许多功能。这些功能通常在触发模态框组件时作为 `JSON` 属性提供，或者你可以通过在 `.modal` 元素中使用自定义
    `data-*` 属性来使用这些功能。Bootstrap 的附加功能包括：
- en: '`data-backdrop`: This attribute accepts `static` or `true` values. When set
    to `static`, it disables the closing of the modal when clicked outside the modal
    body.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-backdrop`: 这个属性接受 `static` 或 `true` 值。当设置为 `static` 时，它禁用了点击模态框外部关闭模态框的功能。'
- en: '`data-keyboard`: This accepts Boolean values and is set to `true` by default.
    When `true`, features of `data-keyboard` closes the modal when the *Esc* key is
    pressed.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-keyboard`: 这个属性接受布尔值，默认设置为 `true`。当设置为 `true` 时，`data-keyboard` 的功能会在按下
    *Esc* 键时关闭模态框。'
- en: '`data-show`: This accepts Boolean values and is set to `false` by default.
    When `true`, `data-shows` the modal when it was initialized.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-show`: 这个属性接受布尔值，默认设置为 `false`。当设置为 `true` 时，`data-show` 在初始化时显示模态框。'
- en: Fetching remote content from a Bootstrap modal
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Bootstrap 模态框获取远程内容
- en: Here, `data-remote` is a special data attribute in Bootstrap's modal component.
    It is used to load a remote web page inside a modal, when data is triggered. This
    feature is only available from Bootstrap v 3.0 to v 3.2.0; I believe it is really
    very useful!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`data-remote` 是 Bootstrap 模态框组件中的一个特殊数据属性。当数据被触发时，它用于在模态框内加载远程网页。这个功能仅从
    Bootstrap v 3.0 到 v 3.2.0 可用；我相信这真的非常实用！
- en: Let's check out an example of how to use it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用它的一个示例。
- en: 'Let''s create a new HTML page named `page2.html` inside the same Bootstrap
    Model project folder. Place the following basic HTML inside it:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在同一个 Bootstrap Model 项目文件夹内创建一个名为 `page2.html` 的新 HTML 页面。将以下基本 HTML 放入其中：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This page should look like the following in a browser:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中，这个页面应该看起来如下：
- en: '![Fetching remote content from a Bootstrap modal](img/7269OS_08_04.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![从 Bootstrap 模态中获取远程内容](img/7269OS_08_04.jpg)'
- en: 'We will now load this page inside our previous modal, whenever it is triggered.
    Modify the previously created modal markup, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每当它被触发时，我们将在这个之前的模态中加载这个页面。修改之前创建的模态标记，如下所示：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Note that this time we have added an additional attribute `data-remote`, and
    the path to `page2.html` as the value. Let''s refresh the browser and trigger
    the modal. This time, you should see `page2.html` loaded inside the modal instead
    of the default content. The screenshot is as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这次我们添加了一个额外的属性 `data-remote`，并将其值设置为 `page2.html` 的路径。让我们刷新浏览器并触发模态。这次，你应该会在模态中看到加载的
    `page2.html` 内容，而不是默认内容。截图如下：
- en: '![Fetching remote content from a Bootstrap modal](img/7269OS_08_05.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![从 Bootstrap 模态中获取远程内容](img/7269OS_08_05.jpg)'
- en: Note
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You should be very careful while using cross-domain links as remote content.
    Many browsers might not allow that.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用跨域链接作为远程内容时，你应该非常小心。许多浏览器可能不允许这样做。
- en: Using Bootstrap's modal in a Rails application
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Bootstrap 的模态在 Rails 应用中
- en: In our `Demo Shopping` Application, created in previous chapters, we had all
    the products listed in a single page. We will add an additional button, named
    **Buy,** beside the **Show** button in each product. When a user clicks on the
    **Buy** button, the browser will display a modal confirming his/her action to
    add the particular product to the cart. The modal will have an **Add to cart**
    button, which will simulate the behavior of the product that is being added to
    the cart and then will close the modal. We won't be creating a real shopping cart
    in this book. It's up to you to decide which method you would like to use to create
    a shopping cart.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前章节中创建的 `Demo Shopping` 应用程序中，我们将在每个产品的 **显示** 按钮旁边添加一个额外的按钮，命名为 **购买**。当用户点击
    **购买** 按钮时，浏览器将显示一个模态，确认他们要将特定产品添加到购物车中的操作。这个模态将有一个 **添加到购物车** 按钮，它将模拟正在添加到购物车中的产品的行为，然后关闭模态。在这本书中，我们不会创建真正的购物车。这取决于你决定使用哪种方法来创建购物车。
- en: 'Open the `application.html.erb` file present in the `layouts` folder by navigating
    to **app** | **views** | **layouts**. We will create a global modal in this file.
    This modal will get triggered whenever the **Buy** button is clicked. The markup
    for this modal is as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通过导航到 **app** | **views** | **layouts** 打开 `layouts` 文件夹中的 `application.html.erb`
    文件。我们将在该文件中创建一个全局模态。当点击 **购买** 按钮时，这个模态将被触发。这个模态的标记如下：
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Make sure that you place this modal markup outside the entire markup that was
    previously created. Bootstrap recommends you to always place a modal's markup
    in the topmost level.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将这个模态标记放置在之前创建的整个标记之外。Bootstrap 建议你始终将模态的标记放置在最顶层。
- en: Now, we are done with placing a dummy modal. Let's proceed to create a **Buy**
    button.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经放置了一个虚拟模态。让我们继续创建一个 **购买** 按钮。
- en: 'Open the `index.html.erb` file present inside the `products` folder by navigating
    to **app** | **views** | **products**. Search for the previously created **Show**
    button, which had the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 通过导航到 **app** | **views** | **products** 打开 `products` 文件夹中的 `index.html.erb`
    文件。搜索之前创建的 **显示** 按钮，其代码如下：
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We will place another button with no `href` attribute and add custom data attributes
    to trigger the modal:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将放置另一个没有 `href` 属性的按钮，并添加自定义数据属性来触发模态：
- en: '[PRE14]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This will create a new **Buy** button beside each **Show** button.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在每个 **显示** 按钮旁边创建一个新的 **购买** 按钮。
- en: '![Using Bootstrap''s modal in a Rails application](img/7269OS_08_06.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![在 Rails 应用中使用 Bootstrap 模态](img/7269OS_08_06.jpg)'
- en: 'Let''s add custom data attributes to trigger the modal component. Modify the
    **Buy** button, as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加自定义数据属性来触发模态组件。修改 **购买** 按钮，如下所示：
- en: '[PRE15]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, the `data-target` attribute will hold the `#buyModal` value, which is
    also the ID of our modal.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`data-target` 属性将保留 `#buyModal` 的值，这也是我们模态的 ID。
- en: 'Now, if you click on the **Buy** button, it will display the modal, as shown
    in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你点击 **购买** 按钮，它将显示模态，如下面的截图所示：
- en: '![Using Bootstrap''s modal in a Rails application](img/7269OS_08_07.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![在 Rails 应用中使用 Bootstrap 模态](img/7269OS_08_07.jpg)'
- en: 'Let''s add a functionality which will dismiss the modal when we click on the
    `Add to cart` button. For this, we need to again edit the `application.html.erb`
    file. We have to add an extra data attribute `data-dismiss` with the value as
    `modal` to the **Add to cart** button. Let''s add the data attribute:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个功能，当我们在“加入购物车”按钮上点击时，将关闭模态框。为此，我们需要再次编辑`application.html.erb`文件。我们必须给“加入购物车”按钮添加一个额外的数据属性`data-dismiss`，其值为`modal`。让我们添加这个数据属性：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Adding the preceding data attribute will let Bootstrap's JavaScript know which
    component to close.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 添加前面的数据属性将让Bootstrap的JavaScript知道要关闭哪个组件。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: I hope you enjoyed learning how to create a flexible Bootstrap modal component.
    Through this chapter, we learnt how to create a basic modal in a static project.
    We then moved on to add extra functionalities to it. We also saw how to create
    modals of different sizes by using additional classes such as `.modal-lg` and
    `.modal-sm`. Finally, we integrated a modal component to our shopping application.
    We learnt how to simulate the `Add to cart` functionality through the dummy confirm
    modal. The field is now open for you to experiment more with modals.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你喜欢学习如何创建一个灵活的Bootstrap模态组件。通过本章，我们学习了如何在静态项目中创建一个基本的模态框。然后我们继续为其添加额外的功能。我们还看到了如何通过使用额外的类如`.modal-lg`和`.modal-sm`来创建不同大小的模态框。最后，我们将模态组件集成到我们的购物应用中。我们学习了如何通过模拟确认模态来模拟“加入购物车”的功能。现在，这个领域对你来说已经开放，你可以更多地实验模态框。
- en: In the next chapter, we are going to understand one of the most interesting
    Bootstrap components, Carousels. We will see how we can use the carousel component
    and create beautiful image slideshows.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解Bootstrap中最有趣的一个组件，轮播图。我们将看到如何使用轮播图组件创建美丽的图片幻灯片。
