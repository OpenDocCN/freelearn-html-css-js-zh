- en: Chapter 1. Instant IntroJs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 立即使用IntroJs
- en: Welcome to the *Instant IntroJs*. This book has been especially created to provide
    you with all the information that you need to get set up with IntroJs. You will
    learn the basics of IntroJs, get started with building your first step-by-step
    introduction, and discover some tips.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎使用 *Instant IntroJs*。这本书特别创建，旨在为您提供所有关于IntroJs的信息，以便您能够快速设置。您将学习IntroJs的基础知识，开始构建您的第一个逐步介绍，并发现一些技巧。
- en: 'This document contains the following sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档包含以下部分：
- en: '*So, what is IntroJs?* helps you find out out what IntroJs actually is, and
    what you can do with it.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*所以，IntroJs是什么？* 帮助您了解IntroJs实际上是什么，以及您可以用它做什么。'
- en: '*Installation* teaches how to download and install IntroJs with minimum fuss,
    and then set it up so that you can use it as soon as possible.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*安装* 将教您如何以最少的麻烦下载和安装IntroJs，然后设置它，以便您可以尽快使用。'
- en: '*Quick start* shows you how to perform one of the core tasks of IntroJs—creating
    basic introductions. Follow the steps to create your own basic introduction, which
    will be the basis of most of your work in IntroJs.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*快速入门* 会向您展示如何执行IntroJs的核心任务之一——创建基本介绍。按照步骤创建您自己的基本介绍，这将成为您在IntroJs中大部分工作的基础。'
- en: '*Top 7 features you need to know about* teaches how to perform some tasks with
    the most important features of IntroJs. By the end of this section, you will be
    able to customize IntroJs with your preferred stylesheet, use IntroJs options
    and public APIs, change button labels or localize them with your language, use
    IntroJs with Rails, PHP Yii, and other frameworks, use IntroJs callback functions
    and events, build and minify the library, define introductions with JSON configurations,
    and also create a multipage introduction or help.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*你需要了解的Top 7个功能* 将教您如何使用IntroJs最重要的功能执行一些任务。在本节结束时，您将能够使用您偏好的样式表自定义IntroJs，使用IntroJs选项和公共API，更改按钮标签或使用您的语言本地化它们，使用IntroJs与Rails、PHP
    Yii和其他框架一起使用，使用IntroJs回调函数和事件，构建和压缩库，使用JSON配置定义介绍，以及创建多页介绍或帮助。'
- en: '*People and places you should get to know* provides you with many useful links
    to the project pages and forums, as well as a number of helpful articles, tutorials,
    samples, blogs, and the Twitter feeds of IntroJs super contributors. This is because
    every open source project is centered around a community.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*您应该了解的人和地方* 提供了许多有用的链接到项目页面和论坛，以及一系列有用的文章、教程、示例、博客和IntroJs超级贡献者的Twitter动态。这是因为每个开源项目都是围绕一个社区为中心的。'
- en: So, what is IntroJs?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 那么，IntroJs是什么？
- en: Web developers must realize that it is important that their websites are self-explanatory.
    Website navigation should be obvious. Users do not expect to spend too much time
    to find out how to use a website. What if you need to explain your website to
    your visitors? To achieve these goals, designing an info-graphic chart would be
    one of the best approaches.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 网络开发者必须意识到，他们的网站需要具有自解释性。网站导航应该是显而易见的。用户不希望花费太多时间来了解如何使用网站。如果需要向访客解释您的网站呢？为了实现这些目标，设计一个信息图表将是最佳方法之一。
- en: Users are the most important assets, and it is vital to inform them about new
    changes in your website. It is always easier to lose a significant number of users
    by not introducing them to updates and changes rather than attracting them. So
    how are you going to inform them about these changes? Surely, you are looking
    for the best and the shortest way to avoid wasting time and energy.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用户是最重要的资产，通知他们网站的新变化至关重要。不向他们介绍更新和变化而失去大量用户总是比吸引他们更容易。那么您将如何通知他们这些变化呢？当然，您正在寻找最佳且最快捷的方式以避免浪费时间和精力。
- en: '**IntroJs** is a library that helps to inform users about new changes and indicates
    the new version''s functionality. When a customer or a user visits a website,
    it is vital to show them the website''s functions and new updates to improve user
    interaction, performance, and ability to work with the website in an easier and
    faster manner. Even a big feature might be ignored by a visitor just because of
    the complications. Hence, showing the website features clearly could have the
    biggest effect on the failure or success of the website.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**IntroJs** 是一个帮助用户了解新变化并指示新版本功能的库。当客户或用户访问一个网站时，展示网站的功能和新更新对于提高用户交互、性能以及以更简单、更快的速度与网站工作至关重要。即使是一个大功能也可能因为复杂性而被访客忽略。因此，清楚地展示网站功能可能会对网站的成败产生最大的影响。'
- en: '![So, what is IntroJs?](img/2517_01_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![所以，IntroJs是什么？](img/2517_01_01.jpg)'
- en: To improve the users' knowledge while filling a huge form and to speed this
    process, it's better to give them more information about it. IntroJs is a library
    that lets the developers break their website into highlighted segments to help
    customers and users use their website in a better way. By using this library,
    they can create a step-by-step introduction to show the website's features, and
    also inform users about new changes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在填写大型表单时提高用户的知识并加快这一过程，最好给他们提供更多相关信息。IntroJs 是一个库，允许开发者将网站划分为高亮部分，以帮助客户和用户更好地使用网站。通过使用这个库，他们可以创建逐步介绍来展示网站的功能，并告知用户关于新更改的信息。
- en: Usages
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用途
- en: 'IntroJs could be used in several situations in order to make things easy to
    understand and useful for audiences. IntroJs is basically used for the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 可用于多种情况，以使事物易于理解并对观众有用。IntroJs 主要用于以下方面：
- en: Introducing a part to the user
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户介绍部分
- en: Creating a step-by-step introduction
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建逐步介绍
- en: Creating a multipage introduction
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建多页介绍
- en: Showing new updates and changes to the user
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户展示新更新和更改
- en: IntroJs was developed and designed with JavaScript and CSS3\. To use IntroJs,
    both JavaScript and CSS files need to be included in the page, and IntroJs methods
    need to be called. There is no dependence between IntroJs and other libraries,
    and there is no need to use any other libraries on the page.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 是使用 JavaScript 和 CSS3 开发和设计的。要使用 IntroJs，需要在页面中包含 JavaScript 和 CSS 文件，并调用
    IntroJs 方法。IntroJs 与其他库之间没有依赖关系，页面上也不需要使用任何其他库。
- en: Features
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特性
- en: 'IntroJs is a lightweight, open source, and easy-to-use library with an active
    community of users and developers. Some of the notable features are as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 是一个轻量级、开源且易于使用的库，拥有活跃的用户和开发者社区。以下是一些显著特性：
- en: Small size (4 KB JavaScript and 2 KB CSS)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小巧（4 KB JavaScript 和 2 KB CSS）
- en: Easy to use
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于使用
- en: Pure JavaScript and CSS
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纯 JavaScript 和 CSS
- en: No dependence with other libraries
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需依赖其他库
- en: Compatible with mobile and tablet devices
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容移动和平板电脑设备
- en: Compatible with older browsers
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容旧版浏览器
- en: Free and open source
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费且开源
- en: MIT license
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MIT 许可证
- en: Installation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: 'In this section, we will cover the following points:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖以下要点：
- en: What are the IntroJs requirements?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IntroJs 的要求是什么？
- en: How to download?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何下载？
- en: How to install?
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装？
- en: IntroJs is a client-side library, which means all routines and events manage
    and execute on the client environment. All installation and running steps are
    related to client segments, and there is no requirement to install it on the server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 是一个客户端库，这意味着所有常规和事件都在客户端环境中管理和执行。所有安装和运行步骤都与客户端部分相关，无需在服务器上安装。
- en: There are four simple steps to install and run IntroJs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安装和运行 IntroJs 有四个简单的步骤。
- en: Step 1 – requirements
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 1 步 – 要求
- en: As mentioned before, to run IntroJs, there is no need to install anything on
    the server, and all the work is on the client side; all you need is just a web
    browser.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要运行 IntroJs，无需在服务器上安装任何东西，所有工作都在客户端；您只需要一个网络浏览器。
- en: 'To run IntroJs, you need to have one of the following web browsers:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行 IntroJs，您需要以下之一的网络浏览器：
- en: IE 8 or higher
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IE 8 或更高版本
- en: Firefox 20 or higher
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firefox 20 或更高版本
- en: Google Chrome 26 or higher
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Chrome 26 或更高版本
- en: Safari 5.1 or higher
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Safari 5.1 或更高版本
- en: Opera 12.1 or higher
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opera 12.1 或更高版本
- en: 'There are some requirements for mobile or tablet browsers as well:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于移动或平板电脑浏览器也有一些要求：
- en: iOS Safari 3.2 or higher
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS Safari 3.2 或更高版本
- en: Opera Mini 5.0-0.7 or higher
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opera Mini 5.0-0.7 或更高版本
- en: Android Browser 2.1 or higher
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 浏览器 2.1 或更高版本
- en: BlackBerry Browser 7.0 or higher
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BlackBerry 浏览器 7.0 或更高版本
- en: Step 2 – downloading JavaScript and CSS
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 2 步 – 下载 JavaScript 和 CSS
- en: To install and run IntroJs, download the latest version. All necessary files
    of each version should be sorted in a separated folder.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装和运行 IntroJs，请下载最新版本。每个版本的必要文件应分别整理在单独的文件夹中。
- en: The GitHub page for IntroJs is the simplest and easiest way to download the
    latest version, which is available on [https://github.com/usablica/intro.js/tags](https://github.com/usablica/intro.js/tags).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 的 GitHub 页面是下载最新版本的简单且最便捷的方式，该版本可在 [https://github.com/usablica/intro.js/tags](https://github.com/usablica/intro.js/tags)
    找到。
- en: '![Step 2 – downloading JavaScript and CSS](img/2517_01_02.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![第 2 步 – 下载 JavaScript 和 CSS](img/2517_01_02.jpg)'
- en: As the screenshot indicates, all versions are available in the `.zip` and `tar.gz`
    formats. Download the latest version. At the time of writing this book, the latest
    available version was 0.4.0.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如截图所示，所有版本都提供在 `.zip` 和 `tar.gz` 格式下。下载最新版本。在撰写本书时，可用的最新版本是 0.4.0。
- en: Also, an unstable version is available at [https://github.com/usablica/intro.js/archive/master.zip](https://github.com/usablica/intro.js/archive/master.zip).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个不稳定版本可在 [https://github.com/usablica/intro.js/archive/master.zip](https://github.com/usablica/intro.js/archive/master.zip)
    获取。
- en: Note that the version under development may have some problems or bugs. It is
    only available for introducing the latest features, updates, and changes in the
    library; it won't be useful for production.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，正在开发中的版本可能存在一些问题或错误。它仅用于介绍库中的最新功能、更新和更改；对于生产环境来说，它可能没有用。
- en: 'After download, extract the compressed file. It usually includes the following
    files and directories:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下载后，提取压缩文件。它通常包括以下文件和目录：
- en: '![Step 2 – downloading JavaScript and CSS](img/2517_01_03.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![第2步 – 下载 JavaScript 和 CSS](img/2517_01_03.jpg)'
- en: 'The following is an explanation for a few of these:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对其中一些的解释：
- en: The `BUILD` folder is useful to build and make production files
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BUILD` 文件夹用于构建和制作生产文件'
- en: The `example` folder includes some samples of how to use IntroJs
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`example` 文件夹包含了一些使用 IntroJs 的示例'
- en: The `minified` folder contains the minified files that you need during production
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minified` 文件夹包含生产过程中需要的压缩文件'
- en: The `intro.js` and `introjs.css` files are the library's main files useful for
    development or fixing bugs (they are not recommended for production; for production
    purpose, use minified files)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`intro.js` 和 `introjs.css` 文件是库的主要文件，适用于开发或修复错误（它们不建议用于生产；用于生产目的，请使用压缩文件）。'
- en: Also, `component.json` and `package.json` are package-management tools for configuration
    purposes
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，`component.json` 和 `package.json` 是用于配置目的的包管理工具
- en: Step 3 – configuration
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第3步 – 配置
- en: IntroJs can run on any HTML page by performing the following steps.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 可以通过执行以下步骤在任何 HTML 页面上运行。
- en: The `intro.min.js` and `intro.min.css` files are the two main files for installation
    that are available in the minified folder. These two files are made for the production
    environment. They are available in the compressed mode, and all the extra comments
    and descriptions have been removed from them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`intro.min.js` 和 `intro.min.css` 文件是安装时在压缩文件夹中可用的两个主要文件。这两个文件是为生产环境制作的。它们以压缩模式提供，并且从中移除了所有额外的注释和描述。'
- en: There are two methods to call IntroJs files. However, it is possible to use
    either way, but to achieve higher speed and accuracy, the second method has been
    approached.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 IntroJs 文件有两种方法。然而，可以使用任何一种方法，但要实现更高的速度和准确性，第二种方法已被采用。
- en: Using the <script> tag
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 <script> 标签
- en: 'To use the `<script>` tag, include the following JavaScript and CSS files in
    the HTML document:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `<script>` 标签，请在 HTML 文档中包含以下 JavaScript 和 CSS 文件：
- en: '[PRE0]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: AMD and CommonJs
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AMD 和 CommonJs
- en: Another useful feature of IntroJs is its compatibility with AMD and CommonJs
    patterns. It is possible to call JavaScript and CSS files using these patterns,
    and it doesn't need to use the `<script>` tag. Also, by using this, it would be
    possible to call JavaScript and CSS files asynchronously.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 的另一个有用特性是它与 AMD 和 CommonJs 模式的兼容性。可以使用这些模式调用 JavaScript 和 CSS 文件，而且不需要使用
    `<script>` 标签。通过使用这种方式，可以异步调用 JavaScript 和 CSS 文件。
- en: This approach increases the document's loading speed, and also, the web page
    won't block while loading. As mentioned before, this method has been recommended
    instead of the other one.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法提高了文档的加载速度，同时，在加载时网页不会被阻塞。如前所述，这种方法已被推荐代替其他方法。
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This code is written using the RequireJs library. By using this method, the
    scope or closure of the IntroJs program will be determined. Also, the request
    to load the file will be sent asynchronously, and it won't wait for the flow of
    calling to be finished. Moreover, it also increases the loading speed.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码是使用 RequireJs 库编写的。通过使用这种方法，IntroJs 程序的作用域或闭包将被确定。此外，加载文件的请求将以异步方式发送，它不会等待调用流程完成。此外，它还提高了加载速度。
- en: 'To use this feature, you need to have one of the following libraries in your
    page:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，您需要在您的页面上包含以下库之一：
- en: RequireJs
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RequireJs
- en: curl
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: curl
- en: LSJS
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LSJS
- en: Dojo 1.7 or higher
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dojo 1.7 或更高版本
- en: Also, by using this method, it is possible to call `introjs.css`. However, due
    to the problems that this method can cause in different browsers, it is not recommended
    to be used, and the `<link>` tag has been preferred to call CSS files instead.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过使用这种方法，还可以调用 `introjs.css`。然而，由于这种方法在不同浏览器中可能引起的问题，不推荐使用，并且 `<link>` 标签已被优先考虑用于调用
    CSS 文件。
- en: And that's it
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 就这样
- en: By this point, you should have a working installation of IntroJs; you are now
    free to play around and discover more about it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经安装了 IntroJs；你现在可以自由地探索并了解更多关于它的信息。
- en: Quick start
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速开始
- en: 'In this section, the following subjects will be discussed:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下主题：
- en: Settings
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置
- en: Creating a new example
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的示例
- en: Do you need to create an introduction page using IntroJs? Two simple steps to
    do this are explained in this section.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要使用 IntroJs 创建一个介绍页面吗？本节将解释完成此操作的简单两步。
- en: Step 1 – defining elements
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 1 – 定义元素
- en: 'Elements could be defined with the following two approaches:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 元素可以用以下两种方法定义：
- en: Using element attributes
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用元素属性
- en: Using JavaScript objects (JSON)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JavaScript 对象（JSON）
- en: Using element attributes
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用元素属性
- en: With this approach, you can easily set up and define your first introduction.
    For setting up the introduction with attributes, add some custom attributes that
    want to be a part of the story to the elements. `data-intro` and `data-step` make
    it possible to add some text or caption to the highlighted element or to change
    the position of the tool tip. To achieve these, perform the steps outlined in
    this section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法，你可以轻松设置和定义你的第一个介绍。为了通过属性设置介绍，将一些希望成为故事一部分的自定义属性添加到元素中。`data-intro` 和
    `data-step` 属性使得向高亮元素添加一些文本或标题或更改工具提示的位置成为可能。为了实现这些，请执行本节中概述的步骤。
- en: The data-intro attribute
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: data-intro 属性
- en: 'It is possible to have a tool tip for each introduction''s step, which gives
    brief information about it to the user. The `data-intro` attribute defines the
    tool tip text when the element gets highlighted, for example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个介绍步骤，都可以有一个工具提示，向用户简要介绍相关信息。当元素被高亮时，`data-intro` 属性定义了工具提示文本，例如：
- en: '[PRE2]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding example generates a `Hello step one!` tool tip text.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例生成了 `Hello step one!` 工具提示文本。
- en: The data-step attribute
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: data-step 属性
- en: 'The `data-step` attribute sets the priority for each step with a number in
    the introduction, for example:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-step` 属性通过在介绍中的每个步骤设置一个数字来设置每个步骤的优先级，例如：'
- en: '[PRE3]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this example, we have two elements in the introduction with different priorities
    or `data-step` attributes. When the introduction starts, first of all, the value
    of `Link One` is highlighted before that of `Link Two` due to a higher priority
    of `data-step`. Also, it is possible to change the priority after adding some
    other elements with different `data-step` attributes.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，介绍中有两个元素，它们有不同的优先级或 `data-step` 属性。当介绍开始时，首先高亮的是 `Link One` 的值，而不是 `Link
    Two` 的值，因为 `data-step` 的优先级更高。此外，在添加具有不同 `data-step` 属性的其他元素后，也可以更改优先级。
- en: The data-position attribute
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: data-position 属性
- en: 'The `data-position` attribute makes it possible to set the tool tip box''s
    position. However, it is an optional attribute, but it lets us set the proper
    position of tool tip boxes. By default, the position of the tool tip boxes is
    set to be at the bottom of the highlighted element. However, it is possible to
    change it with the `data-position` attribute. The `data-position` attribute can
    get `top`, `bottom`, `left`, or `right` values, for example:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-position` 属性使得设置工具提示框的位置成为可能。然而，这是一个可选属性，但它让我们能够设置工具提示框的正确位置。默认情况下，工具提示框的位置被设置为高亮元素底部。然而，可以通过
    `data-position` 属性来更改它。`data-position` 属性可以取 `top`、`bottom`、`left` 或 `right` 值，例如：'
- en: '[PRE4]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The preceding example generates the `Hello step one!` tool tip text, and the
    tool tip box will appear on the right-hand side.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例生成了 `Hello step one!` 工具提示文本，并且工具提示框将出现在右侧。
- en: Using JavaScript objects (JSON)
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 JavaScript 对象（JSON）
- en: A JavaScript object or JSON is another way to define the introduction. There
    is no difference between this approach and element attributes. However, it is
    a clear way to generate the introduction programmatically.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 对象或 JSON 是定义介绍的另一种方式。这种方法与元素属性之间没有区别。然而，它是一种清晰的方式来程序化生成介绍。
- en: IntroJs has a method called `setOptions`, and it gives us the ability to set
    some options to the library. One of these options is the `steps` property, which
    holds all the steps of the introduction in an array.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 有一个名为 `setOptions` 的方法，它赋予我们设置库中一些选项的能力。这些选项之一是 `steps` 属性，它以数组的形式包含介绍的所有步骤。
- en: 'First of all, create an instance of `introJS`. Then, call `setOptions` (or
    `setOption`) to set all the steps. Now, all we need is to create an array of the
    steps in our introduction. Each step and all the properties hold an object, which
    includes the following properties:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个 `introJS` 的实例。然后，调用 `setOptions`（或 `setOption`）来设置所有步骤。现在，我们只需要创建介绍中步骤的数组。每个步骤及其所有属性都包含一个对象，该对象包括以下属性：
- en: '`element`: This defines the target element of the introduction and is a CSS
    selector'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`element`: 这定义了介绍的目标元素，是一个 CSS 选择器'
- en: '`intro`: This includes the text of the tool tip box'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`intro`: 这包括工具提示框的文本'
- en: '`step`: This includes a number to set each step''s priority'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`: 这包括一个数字来设置每个步骤的优先级'
- en: '`position` : This represents the position of the tool tip box, which can be
    `top`, `bottom`, `right`, or `left`'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`position` : 这代表工具提示框的位置，可以是 `top`、`bottom`、`right` 或 `left`'
- en: 'The following code is an example of a step:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是一个步骤的示例：
- en: '[PRE5]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'A complete example of all the steps is as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 所有步骤的完整示例如下：
- en: '[PRE6]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the preceding example, we created an instance of `introJS` and defined three
    steps of the introduction.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们创建了一个 `introJS` 的实例并定义了介绍的三个步骤。
- en: Step 2 – calling the start() method
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 2 – 调用 start() 方法
- en: We are almost done! Calling the `start()` method from the `introJS` instance
    is the final step to create the introduction.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎完成了！从 `introJS` 实例调用 `start()` 方法是创建介绍的最终步骤。
- en: IntroJs has a constructor method that creates an instance in the library and
    sets all options to it. The constructor method can get one parameter, which defines
    the farm of the introduction, for example, running the introduction for the whole
    page or only for a specific element or container.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 有一个构造函数，它创建库中的一个实例并将其所有选项设置到该实例中。构造函数可以接受一个参数，该参数定义了介绍的农场，例如，为整个页面或特定元素或容器运行介绍。
- en: 'An example for the whole page is as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个整个页面的示例：
- en: '[PRE7]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'And an example for a specific container is as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个特定容器的示例：
- en: '[PRE8]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the preceding examples, we created two instances of `introJS`, the first
    one without a specific element and the second one with `#intro-farm`. Now we have
    an instance of `introJS`, and all we need is to call the `start()` method.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们创建了 `introJS` 的两个实例，第一个没有指定元素，第二个有 `#intro-farm`。现在我们有一个 `introJS`
    的实例，我们只需要调用 `start()` 方法。
- en: '[PRE9]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After calling the `start()` method, the introduction starts. To define steps
    with a JavaScript object, we need to call `setOptions()` first, and then call
    the `start()` method.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用 `start()` 方法后，介绍开始。要使用 JavaScript 对象定义步骤，我们首先需要调用 `setOptions()`，然后调用 `start()`
    方法。
- en: '![Step 2 – calling the start() method](img/2517_01_04.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 2 – 调用 start() 方法](img/2517_01_04.jpg)'
- en: Hello World
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Hello World
- en: 'Alright, now let''s create our first introduction using the basic features
    of IntroJs. First, create your `hello-world.html` file as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们使用 IntroJs 的基本功能创建我们的第一个介绍。首先，创建你的 `hello-world.html` 文件如下：
- en: '[PRE10]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Open `hello-world.html` in the browser. It's the first introduction using the
    IntroJs library.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开 `hello-world.html`。这是使用 IntroJs 库的第一个介绍。
- en: '![Hello World](img/2517_01_05.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![Hello World](img/2517_01_05.jpg)'
- en: How it works
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: You have created the first introduction; it was easy and simple. First of all,
    include JavaScript and CSS files on the page. Then, add three `<h4>` elements
    with the `data-step` attribute to the code. Finally, in the `<a>` tag's `onClick`
    event, call the `start()` function from IntroJs.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经创建了第一个介绍；它既简单又容易。首先，在页面上包含 JavaScript 和 CSS 文件。然后，向代码中添加三个带有 `data-step`
    属性的 `<h4>` 元素。最后，在 `<a>` 标签的 `onClick` 事件中调用 IntroJs 的 `start()` 函数。
- en: Other features of IntroJs will be discussed in the next section.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 的其他功能将在下一节中讨论。
- en: Top 7 features you need to know about
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你需要知道的 Top 7 个功能
- en: IntroJs has a robust and complete API, which gives you the ability to customize
    and change the library with your preferred settings.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 拥有一个强大且完整的 API，它赋予你使用你喜欢的设置来自定义和更改库的能力。
- en: 'In this section the following subjects will be discussed:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将讨论以下主题：
- en: Options
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项
- en: API
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API
- en: Customizing CSS files
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 CSS 文件
- en: Integrating IntroJs with other frameworks
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 IntroJs 集成到其他框架中
- en: Localization and the Right to Left version
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化和从右到左版本
- en: Build
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建
- en: Multipaging
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多页
- en: You have already learned the basic features of IntroJs. In this section, all
    library features will be covered. Also, the way to customize the IntroJs style
    to the style the developer is looking for will be discussed. Later on, the way
    to localize the library for different languages will be reviewed, and finally,
    with some examples, you will learn how to integrate IntroJs with other frameworks.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经学习了 IntroJs 的基本功能。在本节中，将涵盖所有库功能。此外，还将讨论如何将 IntroJs 样式定制为开发者所期望的样式。稍后，将回顾如何为不同语言本地化库，最后，通过一些示例，您将学习如何将
    IntroJs 与其他框架集成。
- en: Options
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选项
- en: There are some default options available in IntroJs to configure the library,
    such as the **Next**, **Back**, and **Done** button label in the tool tip box
    or the default position of tool tips.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs 中有一些默认选项可用于配置库，例如工具提示框中的**下一步**、**上一步**和**完成**按钮标签或工具提示的默认位置。
- en: In this section, all options of IntroJs, and in the following sections, some
    other methods to alter these options and the set preferred values are available.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将提供 IntroJs 的所有选项，在接下来的章节中，将介绍一些其他方法来更改这些选项并设置首选值。
- en: steps
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: To define steps manually using JSON configuration, the `steps` property is useful.
    In the *Quick start* section, we discussed this option, which has a JavaScript
    Object (JSON) type.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 JSON 配置手动定义步骤，`steps` 属性非常有用。在**快速入门**部分，我们讨论了此选项，它具有 JavaScript 对象（JSON）类型。
- en: nextLabel
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: nextLabel
- en: The `next` `Label` option holds the text to be displayed in the tool tip box
    of the **Next** button. The type of this option is `string` and its default value
    is **Next** **→**.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`next` `Label` 选项包含要显示在**下一步**按钮工具提示框中的文本。此选项的类型为 `string`，默认值为**下一步** **→**。'
- en: prevLabel
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: prevLabel
- en: The `prevLabel` option saves the text to be displayed in the tool tip box of
    the **Back** button. Its type is `string` and its default value is **←** **Back**.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevLabel` 选项保存要显示在**上一步**按钮工具提示框中的文本。其类型为 `string`，默认值为**←** **上一步**。'
- en: skipLabel
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: skipLabel
- en: The `skipLa` `bel` option is used to set the **Skip** button text in the tool
    tip box. The type of this option is `string` and **Skip** is its default value.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`skipLa` `bel` 选项用于设置工具提示框中**跳过**按钮的文本。此选项的类型为 `string`，默认值为**跳过**。'
- en: doneLabel
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: doneLabel
- en: The `doneLa` `bel` option holds the **Done** button's text in the tool tip box.
    When the user reaches the last step of the introduction, this button will appear.
    Also, its type is `string` and its default value is **Done**.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`doneLa` `bel` 选项包含工具提示框中**完成**按钮的文本。当用户达到介绍的最后一步时，此按钮将出现。此外，其类型为 `string`，默认值为**完成**。'
- en: tooltipPosition
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: tooltipPosition
- en: The `tooltipPosition` option is used to hold the default position of the tool
    tip boxes in the introduction. The default value of this option is `bottom`, and
    it means that all tool tip boxes will appear at the bottom of the highlighted
    area that is available in the introduction. Also, possible values for this option
    are `top`, `bottom`, `right`, and `left`.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`tooltipPosition` 选项用于保存介绍中工具提示框的默认位置。此选项的默认值为 `bottom`，意味着所有工具提示框都将出现在介绍中高亮区域的底部。此外，此选项的可能值还包括
    `top`、`bottom`、`right` 和 `left`。'
- en: exitOnEsc
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: exitOnEsc
- en: The `exitOn` `Esc` option is a `true` or `false` option that defines if the
    user can exit the introduction by using the *Esc* key or not. The type of this
    option is `boolean` and its possible values are true and false, which by default
    is set to `true`. By setting it to `false`, *Esc* will be disabled.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`exitOn` `Esc` 选项是一个 `true` 或 `false` 选项，用于定义用户是否可以通过使用 *Esc* 键退出介绍。此选项的类型为
    `boolean`，可能的值为 `true` 和 `false`，默认设置为 `true`。将其设置为 `false`，则 *Esc* 将被禁用。'
- en: exitOnOverlayClick
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: exitOnOverlayClick
- en: The `exitOnOverlayClick` option is a true or false option that is useful to
    define if the user can exit the introduction by clicking on the overlay layer
    (dark background in the introduction) in the introduction or not. The type of
    this option is `boolean` and its possible values are `true` or `false`, which
    by default is set to `true`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`exitOnOverlayClick` 选项是一个 `true` 或 `false` 选项，用于定义用户是否可以通过单击介绍中的覆盖层（介绍中的深色背景）来退出介绍。此选项的类型为
    `boolean`，可能的值为 `true` 或 `false`，默认设置为 `true`。'
- en: showStepNumbers
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: showStepNumbers
- en: The `showStepNumbers` option is another `true` or `false` option. By setting
    it to true, the number of each step will be shown on the top-right side of the
    highlighted area. Its possible values are `true` or `false` and its default value
    is `true`.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`showStepNumbers`选项是另一个`true`或`false`选项。将其设置为`true`，则每个步骤的数字将显示在突出区域的右上角。其可能的值是`true`或`false`，默认值是`true`。'
- en: API
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API
- en: 'IntroJs includes functions that let the user to control and change the execution
    of the introduction. For example, it is possible to make a decision for an unexpected
    event that happens during execution, or to change the introduction routine according
    to user interactions. Later on, all available APIs in IntroJs until the time of
    writing this book will be explained. However, these functions will extend and
    develop in the future. IntroJs includes these API functions:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs包括允许用户控制和管理介绍执行的功能。例如，可以在执行过程中对意外事件做出决定，或根据用户交互更改介绍流程。稍后，本书编写时IntroJs中所有可用的API都将被解释。然而，这些功能将在未来扩展和发展。IntroJs包括以下API函数：
- en: '`start`'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start`'
- en: '`goToStep`'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`goToStep`'
- en: '`exit`'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit`'
- en: '`setOption`'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setOption`'
- en: '`setOptions`'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setOptions`'
- en: '`oncomplete`'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oncomplete`'
- en: '`onexit`'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onexit`'
- en: '`onchange`'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onchange`'
- en: '`onbeforechange`'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onbeforechange`'
- en: introJs.start()
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.start()
- en: As mentioned before, `introJs.start()` is the main function of IntroJs that
    lets the user to start the introduction for specified elements and get an instance
    of the `introJS` class. The introduction will start from the first step in specified
    elements.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`introJs.start()`是IntroJs的主要函数，允许用户为指定的元素启动介绍并获取`introJS`类的实例。介绍将从指定元素的第一步开始。
- en: This function has no arguments and also returns an instance of the `introJS`
    class.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数没有参数，同时也返回`introJS`类的实例。
- en: introJs.goToStep(stepNo)
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.goToStep(stepNo)
- en: Jump to the specific step of the introduction by using this function. As it
    is clear, introductions always start from the first step; however, it is possible
    to change the configuration by using this function. The `goToStep` function has
    an integer argument that accepts the number of the step in the introduction.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此函数跳转到介绍的特定步骤。很明显，介绍总是从第一步开始；然而，可以通过使用此函数更改配置。`goToStep`函数有一个整数参数，接受介绍中步骤的编号。
- en: '[PRE11]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As the example indicates, first, the default configuration changed by using
    the `goToStep` function from `1` to `2`, and then the `start()` function will
    be called. Hence, the introduction will start from the second step.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如示例所示，首先，通过使用`goToStep`函数将默认配置从`1`更改为`2`，然后调用`start()`函数。因此，介绍将从第二步开始。
- en: Finally, this function will return the `introJS` class's instance.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，此函数将返回`introJS`类的实例。
- en: introJs.exit()
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.exit()
- en: The `i` `ntroJS.exit()` function lets the user exit and close the running introduction.
    By default, the introduction ends when the user clicks on the **Done** button
    or goes to the last step of the introduction.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`introJS.exit()`函数允许用户退出并关闭正在运行的介绍。默认情况下，当用户点击**完成**按钮或到达介绍的最后一个步骤时，介绍结束。'
- en: '[PRE12]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As it shows, the `exit()` function doesn't have any arguments and returns an
    instance of `introJS`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，`exit()`函数没有参数，并返回`introJS`类的实例。
- en: introJs.setOption(option, value)
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.setOption(option, value)
- en: As mentioned before, IntroJs has some default options that can be changed by
    using the `setOption` method. This function has two arguments. The first one is
    useful to specify the option name and the second one is to set the value.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，IntroJs有一些默认选项，可以通过使用`setOption`方法进行更改。此函数有两个参数。第一个参数用于指定选项名称，第二个参数用于设置值。
- en: '[PRE13]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the preceding example, `nextLabel` sets to `Go Next`. Also, it is possible
    to change other options by using the `setOption` method.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，`nextLabel`设置为`Go Next`。此外，还可以通过使用`setOption`方法更改其他选项。
- en: introJs.setOptions(options)
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.setOptions(options)
- en: It is possible to change an option using the `setOption` method. However, to
    change more than one option at once, it is possible to use `setOptions` instead.
    The `setOptions` method accepts different options and values in the JSON format.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`setOption`方法更改选项。但是，要一次性更改多个选项，可以使用`setOptions`。`setOptions`方法接受JSON格式的不同选项和值。
- en: '[PRE14]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: In the preceding example, two options are set at the same time by using JSON
    and the `setOptions` method.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，通过使用JSON和`setOptions`方法同时设置了两个选项。
- en: introJs.oncomplete(providedCallback)
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.oncomplete(providedCallback)
- en: The `oncomplete` event is raised when the introduction ends. If a function passes
    as an `oncomplete` method, it will be called by the library after the introduction
    ends.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当介绍结束时，会触发`oncomplete`事件。如果传递了一个`oncomplete`方法，库会在介绍结束后调用它。
- en: '[PRE15]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this example, after the introduction ends, the anonymous function that is
    passed to the `oncomplete` method will be called and alerted with the **end of
    introduction** message.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，介绍结束后，传递给`oncomplete`方法的匿名函数将被调用，并显示**介绍结束**的消息。
- en: introJs.onexit(providedCallback)
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.onexit(providedCallback)
- en: As mentioned before, the user can exit the running introduction using the *Esc*
    key or by clicking on the dark area in the introduction. The `onexit` event notices
    when the user exits from the introduction. This function accepts one argument
    and returns the instance of running `introJS`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，用户可以使用*Esc*键或点击介绍中的暗区来退出正在运行的介绍。`onexit`事件会在用户退出介绍时被通知。这个函数接受一个参数并返回正在运行的`introJS`实例。
- en: '[PRE16]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the preceding example, we passed an anonymous function to the `onexit` method
    with an `alert()` statement. If the user exits the introduction, the anonymous
    function will be called and an alert with the message **exit of introduction**
    will appear.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们向`onexit`方法传递了一个带有`alert()`语句的匿名函数。如果用户退出介绍，匿名函数将被调用，并显示带有消息**介绍退出**的警告框。
- en: introJs.onchange(providedCallback)
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.onchange(providedCallback)
- en: The `onchange` event is raised in each step of the introduction. This method
    is useful to inform when each step of introduction is completed.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍步骤的每一步都会触发`onchange`事件。这个方法在通知每一步介绍完成时很有用。
- en: '[PRE17]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You can define an argument for an anonymous function (`targetElement` in the
    preceding example), and when the function is called, you can access the current
    target element that is highlighted in the introduction with that argument. In
    the preceding example, when each introduction's step ends, an alert with the **new
    step** message will appear.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为匿名函数定义一个参数（如前例中的`targetElement`），当函数被调用时，你可以使用该参数访问介绍中当前突出显示的目标元素。在前面的例子中，当每个介绍步骤结束时，会弹出一个带有**新步骤**消息的警告框。
- en: introJs.onbeforechange(providedCallback)
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: introJs.onbeforechange(providedCallback)
- en: Sometimes, you may need to do something before each step of introduction. Consider
    that you need to do an Ajax call before the user goes to a step of the introduction;
    you can do this with the `onbeforechange` event.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你可能需要在介绍步骤的每一步之前做一些事情。考虑一下，在用户进入介绍步骤之前，你可能需要执行一个Ajax调用；你可以通过`onbeforechange`事件来实现这一点。
- en: '[PRE18]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We can also define an argument for an anonymous function (`targetElement` in
    the preceding example), and when this function is called, the argument gets some
    information about the currently highlighted element in the introduction. So using
    that argument, you can know which step of the introduction will be highlighted
    or what's the type of target element and more.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以为匿名函数定义一个参数（如前例中的`targetElement`），当这个函数被调用时，该参数会获取关于当前突出显示的介绍元素的一些信息。因此，使用该参数，你可以知道将要突出显示的介绍步骤是哪一个，或者目标元素的类型，等等。
- en: In the preceding example, an alert with the message **before new step** will
    appear before highlighting each step of the introduction.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，在突出显示介绍步骤之前，会弹出一个带有消息**before new step**的警告框。
- en: Method chaining
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法链式调用
- en: '**Method chaining** is one of the most useful features of IntroJs. This method
    calls functions after each other continuously.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**方法链式调用**是IntroJs最有用的特性之一。这种方法会连续调用函数。'
- en: Consider that you need to call two or three methods to do an action. For example,
    set an option, set a callback event, and then call a `start()` method to start
    the introduction. There are two different ways to achieve this goal. First, create
    an instance of the class and hold it in a variable, and then call other functions
    using that variable. Second, use method chaining. In IntroJs, you call functions
    one after another, just like a chain.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你需要调用两个或三个方法来完成一个动作。例如，设置一个选项，设置一个回调事件，然后调用`start()`方法开始介绍。有两种不同的方法可以实现这个目标。首先，创建类的实例并将其保存在一个变量中，然后使用该变量调用其他函数。其次，使用方法链式调用。在IntroJs中，你可以像链一样一个接一个地调用函数。
- en: 'Here you can see the traditional usage of classes and functions:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到类和函数的传统用法：
- en: '[PRE19]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This consists of a lot of lines and code and makes it too complicated. It is
    much better to change it as shown in the following code snippet:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这包含了很多行代码，使得它变得过于复杂。按照以下代码片段所示进行更改会更好：
- en: '[PRE20]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As the preceding code snippet shows, we called each function one after another.
    Actually, all functions of IntroJs return an instance of `introJS`; hence, you
    don't need to hold the instance in a separated variable and then use it.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如前代码片段所示，我们一个接一个地调用了每个函数。实际上，IntroJs的所有函数都返回一个`introJS`实例；因此，您不需要在单独的变量中保留实例然后使用它。
- en: Note
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'To find more about method chaining, use the following link: [http://en.wikipedia.org/wiki/Method_chaining](http://en.wikipedia.org/wiki/Method_chaining).'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于方法链的信息，请使用以下链接：[http://en.wikipedia.org/wiki/Method_chaining](http://en.wikipedia.org/wiki/Method_chaining)。
- en: Integrating IntroJs with other frameworks
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将IntroJs与其他框架集成
- en: We can integrate a server-side framework with IntroJs. It helps to use IntroJs
    in your server-side code and also to provide more control on IntroJs routines.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将服务器端框架与IntroJs集成。这有助于在您的服务器端代码中使用IntroJs，并提供对IntroJs例程的更多控制。
- en: Integration with IntroJs has been done for a lot of popular and famous frameworks.
    In this section, this topic will be discussed, and we will provide some extra
    description about the usage of IntroJs with other frameworks.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 已经为许多流行的知名框架完成了与IntroJs的集成。在本节中，我们将讨论此主题，并提供一些关于IntroJs与其他框架使用的额外描述。
- en: Ruby on Rails
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ruby on Rails
- en: Ruby on Rails is one of the most popular frameworks for developing web applications.
    It is used by many developers, and it is easy to use IntroJs in Rails.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: Ruby on Rails是开发Web应用程序中最受欢迎的框架之一。许多开发者都在使用它，并且很容易在Rails中使用IntroJs。
- en: Installation
  id: totrans-236
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装
- en: 'There are a few simple steps for installing IntroJs in the Rails framework.
    First, install the IntroJs package using the following command:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在Rails框架中安装IntroJs有几个简单的步骤。首先，使用以下命令安装IntroJs包：
- en: '[PRE21]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You will then see the following output:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下输出：
- en: '![Installation](img/2517_02_01.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![安装](img/2517_02_01.jpg)'
- en: The other way to do this task is by adding the `introjs-rails` package to your
    Gem file and installing the package using the `bundle install` command. You can
    find IntroJs Gem packages at [https://rubygems.org/gems/introjs-rails](https://rubygems.org/gems/introjs-rails).
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此任务的另一种方法是向您的Gem文件添加`introjs-rails`包，并使用`bundle install`命令安装该包。您可以在[https://rubygems.org/gems/introjs-rails](https://rubygems.org/gems/introjs-rails)找到IntroJs
    Gem包。
- en: After finishing the installation step, add the related files to your Rails project.
    Finally, add IntroJs resources to the code.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 完成安装步骤后，将相关文件添加到您的Rails项目中。最后，将IntroJs资源添加到代码中。
- en: 'Add this line in `app/assets/javascript/application.js`:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app/assets/javascript/application.js`中添加此行：
- en: '[PRE22]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Also, add this line in `app/assets/stylesheets/application.css`:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在`app/assets/stylesheets/application.css`中添加此行：
- en: '[PRE23]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now everything is ready for using the IntroJs library. All the IntroJs features
    that we mentioned before are accessible in your Rails project. Also, it is possible
    to update IntroJs after releasing new versions of the library.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切准备就绪，可以使用IntroJs库。我们之前提到的所有IntroJs功能都可以在您的Rails项目中访问。此外，在发布库的新版本后，还可以更新IntroJs。
- en: Yii Framework
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Yii框架
- en: Yii is one of the best frameworks for PHP. If you're using this framework, you
    can easily use benefits of integration of Yii and IntroJs.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Yii是PHP中最好的框架之一。如果您使用这个框架，可以轻松地使用Yii和IntroJs的集成优势。
- en: Installation
  id: totrans-250
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装
- en: First, go to the `Yii-IntroJS` page on GitHub ([https://github.com/moein7tl/Yii-IntroJS](https://github.com/moein7tl/Yii-IntroJS)).
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，前往GitHub上的`Yii-IntroJS`页面([https://github.com/moein7tl/Yii-IntroJS](https://github.com/moein7tl/Yii-IntroJS))。
- en: '![Installation](img/2517_02_02.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![安装](img/2517_02_02.jpg)'
- en: 'To download the compressed file, use the following link: [https://github.com/moein7tl/Yii-IntroJS/archive/master.zip](https://github.com/moein7tl/Yii-IntroJS/archive/master.zip).'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载压缩文件，请使用以下链接：[https://github.com/moein7tl/Yii-IntroJS/archive/master.zip](https://github.com/moein7tl/Yii-IntroJS/archive/master.zip)。
- en: The `.zip` file includes the `introjs` directory, which should be copied in
    the protected path. Now, everything is ready to start.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`.zip`文件包含`introjs`目录，应将其复制到受保护路径。现在，一切准备就绪，可以开始使用了。'
- en: Usage
  id: totrans-255
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用方法
- en: To use IntroJs, access `application.extentions.introjs.IntroJs` in the Yii project
    using the widget command. This widget gets an array, that is, all steps of the
    introduction, and generates the client-side code for the introduction automatically.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用IntroJs，请在Yii项目中使用小部件命令访问`application.extentions.introjs.IntroJs`。这个小部件获取一个数组，即所有介绍步骤，并自动生成介绍客户端代码。
- en: '[PRE24]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In this sample, we have defined two steps for introduction, including `Hello
    World`, and `introID1` and `introID2` as their IDs.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们已定义了两个介绍步骤，包括`Hello World`，以及它们的ID为`introID1`和`introID2`。
- en: 'In each step, four identifiers can be defined:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个步骤中，可以定义四个标识符：
- en: '`id`: This defines each step''s identity'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`: 这定义了每个步骤的标识'
- en: '`step`: This determines each step''s order'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`: 这定义了每个步骤的顺序'
- en: '`intro`: This determines each step''s tool tip text'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`intro`: 这定义了每个步骤的工具提示文本'
- en: '`position`: This determines the tool tip''s position. It can be top, right,
    bottom or left'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`position`: 这决定了工具提示的位置。它可以是顶部、右侧、底部或左侧'
- en: In addition, this sample will to define two elements to start and finish the
    introduction; for example, it will to specify a link, which when clicked, starts
    or stops the introduction.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，此示例将定义两个元素以开始和结束介绍；例如，它将指定一个链接，当点击时，开始或停止介绍。
- en: By setting the value of the `start` parameter to `true`, it is possible to start
    the custom element and determine an event for it; for example, the event can be
    `onclick`.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将`start`参数的值设置为`true`，可以启动自定义元素并为其确定一个事件；例如，事件可以是`onclick`。
- en: '[PRE25]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Also, by setting the `exit` parameter to `true`, it is possible to determine
    the `exit` element, for example:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过将`exit`参数设置为`true`，可以确定`exit`元素，例如：
- en: '[PRE26]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: By default, IntroJs has a simple style that can make a great harmony with your
    website design.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，IntroJs有一个简单的样式，可以使它与您的网站设计达到很好的和谐。
- en: In this section, IntroJs styles will be explained, and the way to change the
    IntroJs elements' style and appearance will be learned.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将解释IntroJs样式，并学习更改IntroJs元素样式和外观的方法。
- en: 'To change IntroJs style, five main items should be changed. They are as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改IntroJs样式，应更改五个主要项目。它们如下：
- en: Overlay
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 覆盖层
- en: Tool tip
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具提示
- en: Buttons
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮
- en: Numbers
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字
- en: Highlight area
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高亮区域
- en: 'IntroJs has a stylesheet named `introjs.css` that was downloaded before. To
    change your introduction style, create a new CSS file and overwrite the `introjs.css`
    classes as you want. After that, include your own CSS file after the main CSS
    file in your page, as shown in the following example:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs有一个名为`introjs.css`的样式表，在之前已下载。要更改您的介绍样式，创建一个新的CSS文件，并按您想要的覆盖`introjs.css`类。之后，将您的CSS文件包含在页面中的主CSS文件之后，如下例所示：
- en: '[PRE27]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Overlay
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 覆盖层
- en: On opening the `introjs.css` file, the first available class is `introjs-overlay`,
    which includes all properties of the overlay. It is possible to overwrite properties
    in your own CSS file and change the overlay appearance.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`introjs.css`文件时，第一个可用的类是`introjs-overlay`，它包含所有覆盖属性。您可以在自己的CSS文件中覆盖属性并更改覆盖外观。
- en: Tool tips
  id: totrans-281
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工具提示
- en: 'This is another important class in `introjs.css` is `introjs-tooltip` that
    includes all the properties of your introduction tool tips. For example, to change
    the tool tip''s color to red, add the following code to the CSS file:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`introjs.css`中的另一个重要类`introjs-tooltip`，它包含所有介绍工具提示的属性。例如，要将工具提示的颜色更改为红色，请将以下代码添加到CSS文件中：
- en: '[PRE28]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Buttons
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按钮
- en: It is also possible to change a button's style by overwriting a few classes.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过覆盖几个类来更改按钮的样式。
- en: introjs-tooltipbuttons
  id: totrans-286
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: introjs-tooltipbuttons
- en: '`introjs-tooltipbuttons` is a class for a `div` element that is a `buttons`
    container. For example, to change the button''s alignment to right, add the following
    code to the CSS file:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`introjs-tooltipbuttons`是一个用于`div`元素的类，它是`buttons`容器。例如，要将按钮的对齐方式更改为右侧，请将以下代码添加到CSS文件中：'
- en: '[PRE29]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: introjs-button
  id: totrans-289
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: introjs-button
- en: 'The `introjs-button` class includes all the appearance properties of buttons.
    The following example shows how to change some of them in the CSS file:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`introjs-button`类包含所有按钮的外观属性。以下示例显示了如何在CSS文件中更改其中的一些：'
- en: '[PRE30]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: introjs-prevbutton
  id: totrans-292
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: introjs-prevbutton
- en: This class is for the **Previous** button.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 此类用于**上一步**按钮。
- en: introjs-nextbutton
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: introjs-nextbutton
- en: This class is for the **Next** button.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 此类用于**下一步**按钮。
- en: introjs-skipbutton
  id: totrans-296
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: introjs-skipbutton
- en: This class is for the **Skip** button.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 此类用于**跳过**按钮。
- en: Numbers
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字
- en: To change the style of the step number's CSS properties, which are in the `introjs-helperNumberLayer`
    class, overwrite this class in the CSS file.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改步骤数字的CSS属性样式，这些属性位于`introjs-helperNumberLayer`类中，请在CSS文件中覆盖此类。
- en: Highlight area
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高亮区域
- en: To change the highlight area's style, overwrite `introjs-helperLayerclass`.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改高亮区域样式，覆盖`introjs-helperLayerclass`。
- en: Localization and the Right to Left version
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地化和从右到左版本
- en: IntroJs gives a lot of functions and options to change and customize the library
    for the language that developers use. In IntroJs, some buttons and labels are
    available as options, and it is possible to alter them using IntroJs API and methods.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs为开发者提供了许多功能和选项，以便更改和自定义库以适应他们使用的语言。在IntroJs中，一些按钮和标签作为选项可用，并且可以使用IntroJs
    API和方法进行更改。
- en: Changing button labels
  id: totrans-304
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改按钮标签
- en: IntroJs has four buttons for various situations, and these buttons are in tool
    tip boxes. All these options could be changed via the `setOption` or `setOptions`
    method.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs有四个按钮用于各种情况，这些按钮位于工具提示框中。所有这些选项都可以通过`setOption`或`setOptions`方法进行更改。
- en: '![Changing button labels](img/2517_02_03.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![更改按钮标签](img/2517_02_03.jpg)'
- en: 'In order to change these buttons and set the preferred text, change the following
    options:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更改这些按钮并设置首选文本，请更改以下选项：
- en: '`nextLabel`: This option is used to change the **Next** button''s label'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nextLabel`：此选项用于更改**下一页**按钮的标签'
- en: '`prevLabel`: This option is used to change the **Previous** button''s label'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prevLabel`：此选项用于更改**上一页**按钮的标签'
- en: '`skipLabel`: This option is used to change the **Skip** button''s label'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skipLabel`：此选项用于更改**跳过**按钮的标签'
- en: '`doneLabel`: This option is used to change the **Done** button''s label'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doneLabel`：此选项用于更改**完成**按钮的标签'
- en: 'All the preceding options are changeable with the `setOption` method. The following
    is an example of using this function:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的上述选项都可以通过`setOption`方法进行更改。以下是一个使用此函数的示例：
- en: '[PRE31]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In the preceding example, we changed the **Skip** button label from **Skip**
    to `Exit`. With the same approach, change all the button's labels.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们将**跳过**按钮的标签从**跳过**更改为`退出`。使用相同的方法，更改所有按钮的标签。
- en: 'If you need to change two or more button''s labels at once, use the `setOptions`
    method. An example of the `setOptions` method is as follows:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要一次性更改两个或更多按钮的标签，请使用`setOptions`方法。以下是一个`setOptions`方法的示例：
- en: '[PRE32]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Tip
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你购买的所有Packt书籍的账户中下载你购买的所有示例代码文件。[http://www.packtpub.com](http://www.packtpub.com)。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给你。
- en: 'In the previous example, we changed both the **Next** and **Previous** buttons''
    labels to `Go` and `Previous` using one function call. Finally, the result should
    be something like this:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们使用一个函数调用将**下一页**和**上一页**按钮的标签更改为`Go`和`Previous`。最终结果应该是这样的：
- en: '![Changing button labels](img/2517_02_04.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![更改按钮标签](img/2517_02_04.jpg)'
- en: RTL
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RTL
- en: IntroJs was released in the **Left to Right** version, but it is possible to
    update it to the **Right to Left** stylesheet. IntroJs has an **RTL** stylesheet
    to change the introduction to Right to Left, and it is easy to use this stylesheet.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs最初发布的是**从左到右**版本，但它可以更新到**从右到左**样式表。IntroJs有一个**RTL**样式表，可以更改介绍为从右到左，并且使用此样式表非常简单。
- en: To have the RTL version, add `introjs-rtl.css` to the page after the main IntroJs
    stylesheets. Be sure to use the RTL stylesheet after the main IntroJs stylesheets.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用RTL版本，请在主IntroJs样式表之后将`introjs-rtl.css`添加到页面中。请确保在主IntroJs样式表之后使用RTL样式表。
- en: '[PRE33]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'After changing the page like we did in the preceding example, everything should
    be RTL, such as tool tip boxes and buttons. An example of the RTL version in action
    for the Persian language is as follows:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中更改页面后，所有内容都应该是RTL，例如工具提示框和按钮。以下是一个波斯语RTL版本的示例：
- en: '![RTL](img/2517_02_05.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![RTL](img/2517_02_05.jpg)'
- en: Building projects
  id: totrans-328
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建项目
- en: Sometimes a developer needs to change, develop, and customize IntroJs for his/her
    usage. For developing or customizing IntroJs, use the development files (the `intro.js`
    and `introjs.css` files) and after changing, prepare files for production use.
    It is possible to use development files for the production environment. All you
    need is to minify them and remove redundant comments and whitespaces.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 有时开发者需要更改、开发和定制IntroJs以满足他们的使用需求。为了开发和定制IntroJs，请使用开发文件（`intro.js`和`introjs.css`文件），在更改后，为生产使用准备文件。可以在生产环境中使用开发文件。你所需要做的就是压缩它们并删除冗余的注释和空白。
- en: The production environment is where your users will be and is the final release.
    Users don't like to waste their time on downloading files. Hence, minimize the
    size of the files as much as possible.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 生产环境是用户所在的地方，也是最终发布版本。用户不喜欢浪费时间下载文件。因此，尽可能减小文件大小。
- en: Creating the production code from development files is easy with IntroJs; all
    you need is to run a single line of command in your command-tools application.
    Then, `MakeFile` will manage everything to prepare and create production files.
    However, you need to prepare your workspace before running the commands.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IntroJs从开发文件创建生产代码非常简单；你只需要在你的命令工具应用程序中运行一行命令。然后，`MakeFile`将负责准备和创建生产文件。然而，在运行命令之前，你需要准备你的工作空间。
- en: Getting ready
  id: totrans-332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'IntroJs `MakeFile` works with NodeJs, so before doing anything, if you don''t
    have NodeJs, install it. You can use the following link to download NodeJs: [http://nodejs.org](http://nodejs.org);
    Select your operating system and download the installer file. After downloading
    it, run and install NodeJs. Now, you should have the NPM package manager in your
    system. To make sure the installation has been done correctly, open the command
    prompt, type the `npm` command, and press *Enter*. The **Node Package Manager**
    (**NPM**) manual will appear.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs的`MakeFile`与NodeJs兼容，因此在做任何事情之前，如果你没有NodeJs，请安装它。你可以使用以下链接下载NodeJs：[http://nodejs.org](http://nodejs.org)；选择你的操作系统并下载安装文件。下载后，运行并安装NodeJs。现在，你应该在你的系统中有了NPM包管理器。为了确保安装正确完成，打开命令提示符，输入`npm`命令，并按*Enter*键。**节点包管理器**（**NPM**）手册将出现。
- en: 'Now, everything is ready to go ahead. Open the command prompt and the folder
    of IntroJs, which has files as shown in the following screenshot:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一切准备就绪，可以继续进行。打开命令提示符和IntroJs文件夹，该文件夹包含如下截图所示的文件：
- en: '![Getting ready](img/2517_02_06.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/2517_02_06.jpg)'
- en: 'Install other dependencies to minify and compress CSS and JavaScript files.
    In the command prompt, type the `npm` install command and hit *Enter*; after a
    moment the result should appear, as shown in the following screenshot:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 安装其他依赖项以压缩CSS和JavaScript文件。在命令提示符中，输入`npm`安装命令并按*Enter*键；片刻后，结果应如以下截图所示：
- en: '![Getting ready](img/2517_02_07.jpg)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/2517_02_07.jpg)'
- en: As shown in the preceding screenshot, all the dependencies are installed automatically.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如前截图所示，所有依赖项都自动安装。
- en: make build
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: make build
- en: 'Run a command-line tool to create production code snippets. To do this, go
    to the folder of IntroJs and run the `make build` command. After running the command,
    a result as shown in the following screenshot will appear:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 运行命令行工具来创建生产代码片段。为此，前往IntroJs的文件夹并运行`make build`命令。运行命令后，会出现如下截图所示的结果：
- en: '![make build](img/2517_02_08.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![make build](img/2517_02_08.jpg)'
- en: 'If the successful message from the application appears, it means that you have
    your production-ready files. All production files are stored in the `minified`
    folder inside the IntroJs folder. An example of the `minified` folder is as follows:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 如果应用程序显示成功消息，这意味着你已经有了生产就绪的文件。所有生产文件都存储在IntroJs文件夹内的`minified`文件夹中。以下是一个`minified`文件夹的示例：
- en: '![make build](img/2517_02_09.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![make build](img/2517_02_09.jpg)'
- en: Also, production-ready files have the `.min` postfix in their filenames, which
    means minified. Now these files are ready for production in the minimum possible
    size.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，生产就绪的文件在其文件名中具有`.min`后缀，这意味着它们已被压缩。现在这些文件以尽可能小的尺寸准备好用于生产。
- en: Events and callbacks
  id: totrans-345
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件和回调函数
- en: One of the most important part of IntroJs is its events and callbacks. There
    are various events that give a complete control of every part of the introduction.
    For example, it is possible to show a message at the end of the introduction.
    These events will improve in the forthcoming versions of IntroJs.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: IntroJs最重要的部分之一是其事件和回调函数。IntroJs提供了各种事件，可以完全控制介绍过程的每一个部分。例如，可以在介绍结束时显示一条消息。这些事件将在IntroJs的后续版本中得到改进。
- en: In this section, we'll explain some available events in IntroJs 0.4.0 (the last
    stable version at the time of writing this book).
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将解释IntroJs 0.4.0（撰写本书时的最后一个稳定版本）中的一些可用事件。
- en: oncomplete
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: oncomplete
- en: The `oncomplete` event happens when all introduction steps have been passed
    and the user reaches the last step. It is possible to access this event whenever
    the user presses the **Done** button or the right arrow key.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有介绍步骤都已通过且用户达到最后一步时，`oncomplete`事件会发生。用户在按下**完成**按钮或右箭头键时可以访问此事件。
- en: '![oncomplete](img/2517_02_10.jpg)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![oncomplete](img/2517_02_10.jpg)'
- en: '[PRE34]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This event doesn't pass any parameter to your callback function. In the callback
    function, `this` points to the current instance of `introJS`.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件不会将任何参数传递给您的回调函数。在回调函数中，`this`指向当前的`introJS`实例。
- en: In the preceding example, the **end of introduction** message will appear after
    the introduction ends.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个示例中，介绍结束后，将出现**介绍结束**消息。
- en: onexit
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: onexit
- en: '`onexit` happens after the user exits from the introduction, which means that
    the user can exit from the whole event just before the introduction is completed
    by pressing the *Esc* button, or by clicking on the **Skip** button on the tool
    tip.'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '`onexit`事件在用户退出介绍后发生，这意味着用户可以通过按*Esc*按钮或点击工具提示上的**跳过**按钮来退出整个事件，在介绍完成之前。'
- en: '![onexit](img/2517_02_04.jpg)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![onexit](img/2517_02_04.jpg)'
- en: '[PRE35]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The callback method doesn't get any input parameter for this event. As the preceding
    example code indicates, the imported event doesn't have a parameter. Also in the
    callback method, the `this` value points to the current instance of `introJS`.
    Hence, it can be useful for controlling actions and also receiving more data for
    the introduction, which already has been launched on the page.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 回调方法不为此事件获取任何输入参数。正如前一个示例代码所示，导入的事件没有参数。此外，在回调方法中，`this`值指向当前的`introJS`实例。因此，它可以用于控制动作并接收更多关于已启动在页面上的介绍的数据。
- en: In the preceding example, as soon as the user exits from the introduction, the
    **exit of introduction** message will appear.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个示例中，当用户退出介绍时，将立即出现**退出介绍**消息。
- en: onchange
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: onchange
- en: After each level of introduction changes (by clicking on the **Next** or **Back**
    buttons in the tool tip panel or pressing right or left arrows on the keyboard),
    the `onchange` event happens. It can be useful whenever a developer wants to make
    a new action after the user enters one of the introduction's levels, such as calling
    a file as Ajax or to show data that had been read to the user.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍级别的每个变化之后（通过在工具提示面板中点击**下一步**或**上一步**按钮或在键盘上按左右箭头），将发生`onchange`事件。当开发者想在用户进入介绍的一个级别后执行新的动作时，这可能很有用，例如调用Ajax文件或向用户显示已读取的数据。
- en: '[PRE36]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In the preceding event, the callback event receives an input parameter that
    includes the element while the introduction is running on it.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个事件中，回调事件接收一个输入参数，该参数包括在介绍过程中运行的元素。
- en: In the preceding code, the **new step** message pops up to the user after entering
    each level of the introduction.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个代码中，用户进入介绍每个级别后，将弹出**新步骤**消息给用户。
- en: onbeforechange
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: onbeforechange
- en: Before entering a new level of the introduction, the `onbeforechange` event
    happens (just before the `onchange` event). Hence, it is useful to have an action
    just before the user enters a new level of the introduction, and after the action
    is finished, the new level will come up.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入介绍的新级别之前，发生`onbeforechange`事件（在`onchange`事件之前）。因此，在用户进入介绍的新级别之前执行一个动作是有用的，动作完成后，新的级别将出现。
- en: '[PRE37]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: In the callback event, one parameter is added; this includes an element that
    is placed by the introduction and the highlight area. Also, in the callback event,
    the `this` value points to the current `introJS` class' instance.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在回调事件中，增加了一个参数；这包括介绍放置的元素和高亮区域。此外，在回调事件中，`this`值指向当前的`introJS`类实例。
- en: In the preceding example, before entering the new level of the introduction,
    the **before new step** message will pop up.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个示例中，在进入介绍的新级别之前，将弹出**新步骤**消息。
- en: Multipage introduction
  id: totrans-370
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多页介绍
- en: In this section, multipaging, which is another important and interesting usage
    of IntroJs, that lets the developer learn how to create a multipage introduction,
    will be explained.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将解释IntroJs的另一个重要且有趣的用法——多页介绍，这将让开发者了解如何创建多页介绍。
- en: All the introductions you have made so far had a single page. However, how about
    having a multipage introduction instead of having all of them on a single page?
    What if you want to arrange the introduction's first three steps in `index1.html`
    and put the other parts in `index2.html`? Surely, there is no page count limit,
    and it is possible to divide the introduction as you like.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 您迄今为止创建的所有介绍都只有一个页面。然而，如果您想有一个多页介绍而不是将所有内容都放在一个页面上，那会怎样？如果您想将介绍的前三个步骤放在`index1.html`中，而将其他部分放在`index2.html`中，那会怎样？当然，没有页面数量的限制，您可以按自己的喜好划分介绍。
- en: 'So, let''s make a multipage introduction with two pages. To perform this action,
    we''ll add a block of code to each page. Hence, add this code to the first page:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们使用两页来创建一个多页介绍。为了执行此操作，我们将在每一页添加一个代码块。因此，将此代码添加到第一页：
- en: '[PRE38]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then in the second page, add this code:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在第二页，添加此代码：
- en: '[PRE39]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: How it works
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: As it indicates, to make the introduction multipage, two blocks of code snippets
    have been added. But how does it work? Let us go through it in this section.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，为了使介绍成为多页，已添加了两块代码片段。但它是如何工作的？让我们在本节中详细了解。
- en: Changing the Done button label
  id: totrans-379
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 更改完成按钮的标签
- en: On the first page, change the **Done** button label as a first step. It notifies
    the user that the introduction hasn't finished yet, and it will continue to the
    next page.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一页上，首先更改**完成**按钮的标签。这会通知用户介绍尚未完成，并将继续到下一页。
- en: Redirecting the user to the next page
  id: totrans-381
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将用户重定向到下一页
- en: As it is explained before, it is possible to use the `oncomplete` event to notify
    when the introduction finishes. Also, this event happens at the end of introduction,
    and we can make a decision at that time.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，可以使用`oncomplete`事件来通知介绍何时结束。此外，此事件发生在介绍结束时，我们可以在那时做出决定。
- en: To make a multipage introduction, we should transfer the user to the next page
    in `oncomplete`. For this action, change `window.location.href`. Remember that
    we set `multipage` to `true` as a query string parameter. This parameter will
    also be used in the second page.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建多页介绍，我们应该在`oncomplete`中将用户转移到下一页。为此，更改`window.location.href`。请记住，我们将`multipage`设置为查询字符串参数。此参数也将用于第二页。
- en: '[PRE40]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Starting the introduction on the second page
  id: totrans-385
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 从第二页开始介绍
- en: After redirecting to the second page, the introduction should continue and call
    the `introjs.start()` method from IntroJs. The `multipage` parameter will be set
    to `true`. If the `multipage` parameter exists, we call `introjs.start()` and
    the introduction will continue.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在重定向到第二页后，介绍应该继续并从IntroJs调用`introjs.start()`方法。`multipage`参数将被设置为`true`。如果存在`multipage`参数，我们调用`introjs.start()`，介绍将继续。
- en: Be careful about the introduction steps. The order of the `data-step` values
    in all the pages should be correct. For example, if the last number in the first
    page is *4*, the first number in the second page should be *5*.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 注意介绍步骤。所有页面中`data-step`值的顺序应该是正确的。例如，如果第一页的最后数字是*4*，则第二页的第一个数字应该是*5*。
- en: People and places you should get to know
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你应该了解的人和地方
- en: Here you can find some good places to get information about the latest versions
    of IntroJs, news, and updates.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以找到有关IntroJs最新版本、新闻和更新的好地方。
- en: IntroJs official website
  id: totrans-390
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IntroJs官方网站
- en: 'The official IntroJs website includes download links, the API documentation,
    blogs, and other interesting resources. The link is as follows: [http://introjs.com](http://introjs.com).'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 官方IntroJs网站包括下载链接、API文档、博客和其他有趣的资源。链接如下：[http://introjs.com](http://introjs.com)。
- en: Blogs
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 博客
- en: 'This is a great place to find latest news about the project. Also, this is
    where the IntroJs development team post updates and future plans. The link is
    as follows: [http://blog.introjs.com](http://blog.introjs.com).'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个寻找项目最新新闻的好地方。此外，这也是IntroJs开发团队发布更新和未来计划的地方。链接如下：[http://blog.introjs.com](http://blog.introjs.com)。
- en: API documentation
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API文档
- en: Find the complete API documentation of IntroJs at [http://introjs.com/api](http://introjs.com/api).
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://introjs.com/api](http://introjs.com/api)找到IntroJs的完整API文档。
- en: The GitHub repository
  id: totrans-396
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub仓库
- en: GitHub is the code repository of IntroJs. Find the last stable version to download
    at [https://github.com/usablica/intro.js/](https://github.com/usablica/intro.js/).
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub是IntroJs的代码仓库。您可以在[https://github.com/usablica/intro.js/](https://github.com/usablica/intro.js/)找到下载最新稳定版本的链接。
- en: Issue tracker
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题跟踪器
- en: 'People write their issues, problems, and their own ideas about different projects
    here. Other development teams and contributors check the issues to fix them. The
    link is as follows: [https://github.com/usablica/intro.js/issues](https://github.com/usablica/intro.js/issues).'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 人们在这里写下他们的问题、问题和关于不同项目的自己的想法。其他开发团队和贡献者检查这些问题以修复它们。链接如下：[https://github.com/usablica/intro.js/issues](https://github.com/usablica/intro.js/issues)。
- en: Communities
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区
- en: There are several places that you can refer to in order to discuss IntroJs.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考以下地方来讨论IntroJs。
- en: Google group
  id: totrans-402
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google群组
- en: 'A group for people to discuss IntroJs is as follows: [https://groups.google.com/forum/#!forum/introjs](https://groups.google.com/forum/#!forum/introjs).'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于讨论IntroJs的群组如下：[https://groups.google.com/forum/#!forum/introjs](https://groups.google.com/forum/#!forum/introjs)。
- en: Stackoverflow
  id: totrans-404
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Stackoverflow
- en: 'Questions and discussions on IntroJs in Stackoverflow are done here, which
    are labeled with the `#introjs` tag: [http://stackoverflow.com/questions/tagged/intro.js](http://stackoverflow.com/questions/tagged/intro.js).'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 在Stackoverflow上关于IntroJs的问题和讨论都集中在这里，并带有`#introjs`标签：[http://stackoverflow.com/questions/tagged/intro.js](http://stackoverflow.com/questions/tagged/intro.js)。
- en: Twitter and personal blogs
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Twitter和个人博客
- en: 'Afshin Mehrabani''s (the main developer of IntroJs and a co-founder of Usablica)
    Twitter profile and personal blog URLs are as follows:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 阿夫辛·梅哈拉巴尼（IntroJs的主要开发者及Usablica的联合创始人）的Twitter个人资料和博客网址如下：
- en: '[http://twitter.com/afshinmeh](http://twitter.com/afshinmeh)'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://twitter.com/afshinmeh](http://twitter.com/afshinmeh)'
- en: '[http://afshinm.name/](http://afshinm.name/)'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://afshinm.name/](http://afshinm.name/)'
- en: 'Ehsan Arasteh''s (a contributor to various versions of IntroJs and the CEO
    of Usablica) Twitter profile and personal blog URLs are as follows:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 埃桑·阿拉斯特赫（IntroJs多个版本的贡献者及Usablica的首席执行官）的Twitter个人资料和博客网址如下：
- en: '[http://twitter.com/ehsandotnet](http://twitter.com/ehsandotnet)'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://twitter.com/ehsandotnet](http://twitter.com/ehsandotnet)'
- en: '[http://blog.ehsandotnet.me](http://blog.ehsandotnet.me)'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://blog.ehsandotnet.me](http://blog.ehsandotnet.me)'
- en: 'Usablica''s (an individual team that IntroJs and many other open source projects
    and startups make under its brand) Twitter profile and blog URLs are as follows:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: Usablica（一个团队，旗下有IntroJs和其他许多开源项目和初创企业）的Twitter个人资料和博客网址如下：
- en: '[http://twitter.com/usablica](http://twitter.com/usablica)'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://twitter.com/usablica](http://twitter.com/usablica)'
- en: '[http://usabli.ca/](http://usabli.ca/)'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://usabli.ca/](http://usabli.ca/)'
