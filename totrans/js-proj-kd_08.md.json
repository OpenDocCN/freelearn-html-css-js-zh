["```js\n<html>\n  <head>\n  </head>\n  <body>\n    <canvas id=\"main_canvas\"></canvas>\n  </body>\n</html>\n```", "```js\nbody {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #ffffff;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n  overflow: hidden;\n}\n\ncanvas {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  border: 10px solid rgba(63, 72, 204, 0.7);\n  border-radius: 20px;\n  box-shadow: 0 0 500px 100px #ffffff;\n}\n\nbutton {\n  width: 100%;\n  height: 100%;\n  background-color: #000000;\n  color: #FFFFFF;\n  font-size: 60px;\n  opacity: 0;\n  z-index: 1000;\n  transition: 5s ease;\n  visibility: hidden;\n}\n```", "```js\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nbody {\n  line-height: 0;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n```", "```js\n<link href=\"css/styles.css\" rel=\"stylesheet\"/>\n<link href=\"css/reset.css\" rel=\"stylesheet\"/>\n```", "```js\n(function () {\n  \"use strict\";\n  APP.Init();\n  APP.timer = setInterval(APP.Show_World, 1000 / APP.GAME_FPS);\n  window.addEventListener(\"keydown\", APP.Keydown_Handler, false);\n  APP.Reset = function () {\n    APP.map.Init();\n    APP.player.Init();\n    APP.monsters.Init();\n    APP.blackout.style.transition = \"0s\";\n    APP.blackout.style.visibility = \"hidden\";\n    setTimeout(function () {\n      APP.timer = setInterval(APP.Show_World, 1000 / APP.GAME_FPS);\n      APP.blackout.style.opacity = 0;\n      APP.blackout.style.transition = \"5s ease\";\n    }, 100);\n  };\n}());\n```", "```js\n  APP.Show_World = function () {\n    var i,\n    dots = 0; //initialized cheese number\n    dots = APP.map.Draw(); //put our cheese on the canvas\n    if (!dots) {\n      APP.Game_Over(\"YOU WIN!\"); //if all cheese are ate by the rat, then the screen should display this.\n    }\n    */This loop is determine if the rat is caught by the cats  */\n    for (i = 0; i < APP.MONSTERS_QUANTITY; i++) {\n      if (APP.monsters[i].x === APP.player.x) {\n        if (APP.monsters[i].y === APP.player.y) {\n          APP.Game_Over(\"YOU LOSE!\");\n        }\n      }\n    }\n    APP.monsters.Move(); //cats' movement function\n    APP.player.Move();  // rat's movement function\n    APP.player.Check_For_Dots(); //This function will check number of chees. \n    APP.portals.Show(); //This will display two portals by using these the rat can escape. \n    APP.player.Show(); //This will show the rat on the canvas. \n      /* this function will show the monster on the canvas */\n    for (i = 0; i < APP.MONSTERS_QUANTITY; i++) {\n      APP.monsters[i].Show();\n    }\n  };\n```", "```js\n    APP.map.Draw = function () {\n      var i, j, image, x, y, dot_counter = 0; //initialized variables. \n      /*this loop will create our game map/maze */\n      for (i = 0; i < APP.MAP_WIDTH; i++) {\n        for (j = 0; j < APP.MAP_HEIGHT; j++) {\n          image = APP.images[APP.map.cells[j][i]];\n          x = i * APP.CELL_WIDTH;\n          y = j * APP.CELL_HEIGHT;\n          APP.context.drawImage(image, x, y);\n          if (APP.map.cells[j][i] === APP.DOT_CELL_DIGIT) {\n            dot_counter++;\n          }\n        }\n      }\n      return dot_counter;\n    };\n```", "```js\n    APP.monsters.Move = function () {\n      var i;\n      /*This loop will define the cats' quantity */\n      for (i = 0; i < APP.MONSTERS_QUANTITY; i++) {\n        if (APP.monsters[i].frame === APP.monsters[i].speed) {\n          if (APP.monsters[i].direction !== APP.Direction.STOP) {\n            APP.monsters[i].previus_direction =\n            APP.monsters[i].direction;\n          }\n          APP.monsters[i].Select_Direction(); //Will select the cats' direction.\n          APP.monsters[i].Check_Direction(); //Will check the cats' direction.\n          APP.monsters[i].Check_Wall();//Will check the surroundings of the canvas or any block. \n        }\n        /* These conditions will check the boundaries of the canvas and make the cats move. */\n        if (APP.monsters[i].direction !== APP.Direction.STOP) {\n          if (APP.monsters[i].up) {\n            APP.monsters[i].Move_Up();\n          }\n          if (APP.monsters[i].down) {\n            APP.monsters[i].Move_Down();\n          }\n          if (APP.monsters[i].left) {\n            APP.monsters[i].Move_Left();\n          }\n          if (APP.monsters[i].right) {\n            APP.monsters[i].Move_Right();\n          }\n        }\n      }\n    };\n```", "```js\n    APP.player.Move = function () {\n      if (APP.player.frame === APP.player.speed) {\n        APP.player.Check_Direction();\n        APP.player.Check_Wall(); //This will check wall\n      }\n      /* these conditions will check our rat's valid movements */\n      if (APP.player.direction !== APP.Direction.STOP) {\n        if (APP.player.up) {\n          APP.player.Move_Up(); \n        }\n        if (APP.player.down) {\n          APP.player.Move_Down();\n        }\n        if (APP.player.left) {\n          APP.player.Move_Left();\n        }\n        if (APP.player.right) {\n          APP.player.Move_Right();\n        }\n      }\n    };\n    /*this function will feed our rat the chees */\n    APP.player.Check_For_Dots = function () {\n      if (APP.map.marks[APP.player.y][APP.player.x] === APP.DOT_MARK) {\n        APP.player.bonuses++;\n        APP.map.marks[APP.player.y][APP.player.x] = APP.BLANK_MARK;\n        APP.map.cells[APP.player.y][APP.player.x] = APP.BLANK_CELL_DIGIT;\n      }\n    };\n```", "```js\nAPP.player.Show = function () {\n  //initializing our needed variables. \n  var figure_offset = 5,\n  frame_number = 2 - Math.floor(this.frame / 3),\n  frame_offset = 1 - this.frame / this.speed,\n  image, x, y;\n  /* conditions for the rat's direction for up, down, left, right*/\n  if (this.up) {\n    image = this.up_images[frame_number];\n    x = (this.x * APP.CELL_WIDTH) - figure_offset;\n    y = ((this.y - frame_offset) * APP.CELL_HEIGHT) - figure_offset;\n\n  } else if (this.down) {\n    image = this.down_images[frame_number];\n    x = (this.x * APP.CELL_WIDTH) - figure_offset;\n    y = ((this.y + frame_offset) * APP.CELL_HEIGHT) - figure_offset;\n\n  } else if (this.right) {\n    image = this.right_images[frame_number];\n    x = ((this.x + frame_offset) * APP.CELL_WIDTH) - figure_offset;\n    y = (this.y * APP.CELL_HEIGHT) - figure_offset;\n\n  } else {\n    image = this.left_images[frame_number];\n    x = ((this.x - frame_offset) * APP.CELL_WIDTH) - figure_offset;\n    y = (this.y * APP.CELL_HEIGHT) - figure_offset;\n\n  }\n  APP.context.drawImage(image, x, y);\n};\n```", "```js\nAPP.Show_Monster = function () {\n  //initializing needed variables. \n  var figure_offset = 15,\n  frame_offset = 1 - this.frame / this.speed,\n  image, x, y;\n  /* binding the cats' directions for 4 directions*/\n  if (this.up) {\n    image = this.up_images[0];\n    x = (this.x * APP.CELL_WIDTH) - figure_offset;\n    y = ((this.y - frame_offset) * APP.CELL_HEIGHT) - figure_offset;\n\n  } else if (this.down) {\n\n    image = this.down_images[0];\n    x = (this.x * APP.CELL_WIDTH) - figure_offset;\n    y = ((this.y + frame_offset) * APP.CELL_HEIGHT) - figure_offset;\n\n  } else if (this.right) {\n\n    image = this.right_images[0];\n    x = ((this.x + frame_offset) * APP.CELL_WIDTH) - figure_offset;\n    y = (this.y * APP.CELL_HEIGHT) - figure_offset;\n\n  } else {\n\n    image = this.left_images[0];\n    x = ((this.x - frame_offset) * APP.CELL_WIDTH) - figure_offset;\n    y = (this.y * APP.CELL_HEIGHT) - figure_offset;\n\n  }\n\n  APP.context.drawImage(image, x, y);\n};\n```", "```js\n    APP.portals.Show = function () {\n      //initialized variables and incremented. \n      var offset, frame_offset, sw = +!this.raise;\n      frame_offset = sw - this.frame_counter / (this.speed * APP.GAME_FPS); \n      /*controlled frame of the game */\n      offset = Math.abs(this.width * frame_offset);\n      APP.context.drawImage(this[0].image, this[0].x - offset, this[0].y);\n      APP.context.drawImage(this[1].image, this[1].x + offset, this[1].y);\n      this.frame_counter++;\n      if (this.frame_counter === this.speed * APP.GAME_FPS) {\n        this.frame_counter = 0;\n        this.raise = !this.raise;\n      }\n    };\n```", "```js\n    APP.Game_Over = function (condition) {\n      clearInterval(APP.timer);\n      APP.blackout = document.getElementById(\"blackout\");\n      APP.blackout.textContent = condition;\n      APP.blackout.style.visibility = \"visible\";\n      APP.blackout.style.opacity = 0.7;\n    };\n```", "```js\n  APP.map = {};\n  APP.player = {};\n  APP.monsters = [{}, {}, {}, {}];\n  APP.portals = [{}, {}];\n  APP.images = [];\n  APP.timer = {};\n  APP.canvas = {};\n  APP.context = {};\n  APP.blackout = document.getElementById(\"blackout\");\n```", "```js\n  APP.Init = function () {\n    APP.map.Init();\n    APP.player.Init();\n    APP.portals.Init();\n    APP.monsters.Init();\n    APP.images.Init();\n    APP.canvas.Init();\n  };\n```", "```js\nAPP.map.Init = function () {\n\n  //initializing few variables ; few of them may look ugly, but don't worry they are a little bit random. \n  var i, j, map_in_strings = [\n                \"5000000000000250000000000002\",\n                \"1777777777777117777777777771\",\n                \"1750027500027117500027500271\",\n                \"1716617166617117166617166171\",\n                \"1740037400037437400037400371\",\n                \"1777777777777777777777777771\",\n                \"1750027527500000027527500271\",\n                \"1740037117400250037117400371\",\n                \"1777777117777117777117777771\",\n                \"4000027140026116500317500003\",\n                \"0000217150036436400217150000\",\n                \"6666117116666666666117116666\",\n                \"0000317116502665026117140000\",\n                \"0000037436153664216437400000\",\n                \"6666667666116666116667666666\",\n                \"0000027526140000316527500000\",\n                \"0000217116400000036117150000\",\n                \"6666117116666666666117116666\",\n                \"0000317116500000026117140000\",\n                \"5000037436400250036437400002\",\n                \"1777777777777117777777777771\",\n                \"1750027500027117500027500271\",\n                \"1740217400037437400037150371\",\n                \"1777117777777777777777117771\",\n                \"4027117527500000027527117503\",\n                \"5037437117400250037117437402\",\n                \"1777777117777117777117777771\",\n                \"1750000340027117500340000271\",\n                \"1740000000037437400000000371\",\n                \"1777777777777777777777777771\",\n                \"4000000000000000000000000003\"\n            ];\n  APP.map.cells = [];\n  for (i = 0; i < APP.MAP_HEIGHT; i++) {\n    APP.map.cells[i] = [];\n    for (j = 0; j < APP.MAP_WIDTH; j++) {\n      APP.map.cells[i][j] = +map_in_strings[i].charAt(j);\n    }\n  }\n  APP.map.marks = [];\n  /* This loop will determine the map's size */\n  for (i = 0; i < APP.MAP_HEIGHT; i++) {\n    APP.map.marks[i] = [];\n    for (j = 0; j < APP.MAP_WIDTH; j++) {\n      if (APP.map.cells[i][j] <= APP.WALL_CELL_DIGIT) {\n        APP.map.marks[i][j] = APP.WALL_MARK;\n      } else if (APP.map.cells[i][j] === APP.BLANK_CELL_DIGIT) {\n        APP.map.marks[i][j] = APP.BLANK_MARK;\n      } else if (APP.map.cells[i][j] === APP.DOT_CELL_DIGIT) {\n        APP.map.marks[i][j] = APP.DOT_MARK;\n      }\n    }\n  }\n};\n```", "```js\n  APP.monsters[0].Init = function () {\n    APP.monsters[0].up_images = [];\n    APP.monsters[0].right_images = [];\n    APP.monsters[0].down_images = [];\n    APP.monsters[0].left_images = [];\n    APP.monsters[0].up_images[0] = new Image();\n    APP.monsters[0].up_images[0].src = \"img/monsters/blinky/up/0.png\";\n    APP.monsters[0].right_images[0] = new Image();\n    APP.monsters[0].right_images[0].src = \"img/monsters/blinky/right/0.png\";\n    APP.monsters[0].down_images[0] = new Image();\n    APP.monsters[0].down_images[0].src = \"img/monsters/blinky/down/0.png\";\n    APP.monsters[0].left_images[0] = new Image();\n    APP.monsters[0].left_images[0].src = \"img/monsters/blinky/left/0.png\";\n    APP.monsters[0].up = false;\n    APP.monsters[0].right = true;\n    APP.monsters[0].down = false;\n    APP.monsters[0].left = false;\n    APP.monsters[0].x = APP.INITIAL_BLINKY_X;\n    APP.monsters[0].y = APP.INITIAL_BLINKY_Y;\n    APP.monsters[0].frame = APP.INITIAL_BLINKY_FRAME;\n    APP.monsters[0].speed = APP.BLINKY_SPEED;\n  };\n```", "```js\n  APP.images.Init = function () {\n    var i;\n    for (i = 0; i <= APP.DOT_CELL_DIGIT; i++) {\n      APP.images[i] = new Image();\n    }\n    APP.images[0].src = \"img/walls/0.png\";\n    APP.images[1].src = \"img/walls/1.png\";\n    APP.images[2].src = \"img/walls/2.png\";\n    APP.images[3].src = \"img/walls/3.png\";\n    APP.images[4].src = \"img/walls/4.png\";\n    APP.images[5].src = \"img/walls/5.png\";\n    APP.images[6].src = \"img/blank.png\";\n    APP.images[7].src = \"img/dot.png\";\n  };\n```", "```js\nAPP.canvas.Init = function () {\n  APP.canvas = document.getElementById(\"main_canvas\");\n  APP.canvas.width = APP.MAP_WIDTH * APP.CELL_WIDTH;\n  APP.canvas.height = APP.MAP_HEIGHT * APP.CELL_HEIGHT;\n  APP.context = APP.canvas.getContext(\"2d\");\n  APP.context.fillStyle = APP.BG_COLOR;\n  APP.context.fillRect(0, 0, APP.canvas.width, APP.canvas.height);\n};\n```", "```js\nAPP.Keydown_Handler = function (event) {\n  \"use strict\";\n  var KEYS = {\n    /* We will initialize the arrow keys first. 37 = left key, 38 \n      = up key, 39 = right key and 40 = down key. */\n    LEFT    : 37,\n    UP      : 38,\n    RIGHT   : 39,\n    DOWN    : 40\n  }; \n  /* This switch-case will handle the key pressing and the rat's \n    movement. */\n  switch (event.keyCode) {\n    case KEYS.UP:\n      APP.player.direction = APP.Direction.UP;\n      break;\n    case KEYS.RIGHT:\n      APP.player.direction = APP.Direction.RIGHT;\n      break;\n    case KEYS.DOWN:\n      APP.player.direction = APP.Direction.DOWN;\n      break;\n    case KEYS.LEFT:\n      APP.player.direction = APP.Direction.LEFT;\n      break;\n  }\n};\n```", "```js\n  APP.Check_Direction = function () {\n    switch (this.direction) {\n      case APP.Direction.UP:\n        if (APP.map.marks[this.y - 1][this.x] !== APP.WALL_MARK){\n          this.up = true;\n          this.down = false;\n          this.right = false;\n          this.left = false;\n          return true;\n        }\n        break;\n      case APP.Direction.DOWN:\n        if (APP.map.marks[this.y + 1][this.x] !== APP.WALL_MARK) {\n          this.up = false;\n          this.down = true;\n          this.right = false;\n          this.left = false;\n          return true;\n        }\n        break;\n      case APP.Direction.RIGHT:\n        if (APP.map.marks[this.y][this.x + 1] !== APP.WALL_MARK) {\n          this.up = false;\n          this.down = false;\n          this.right = true;\n          this.left = false;\n          return true;\n        }\n        break;\n      case APP.Direction.LEFT:\n        if (APP.map.marks[this.y][this.x - 1] !== APP.WALL_MARK) {\n          this.up = false;\n          this.down = false;\n          this.right = false;\n          this.left = true;\n          return true;\n        }\n        break;\n    }\n    return false;\n  };\n```", "```js\nAPP.Select_Direction = function () {\n  var possible_directions = [],\n  direction_quantity = 9,\n  rnd;\n  switch (this.previus_direction) {\n    case APP.Direction.UP:\n      possible_directions[0] = APP.Direction.UP;\n      possible_directions[1] = APP.Direction.UP;\n      possible_directions[2] = APP.Direction.UP;\n      possible_directions[3] = APP.Direction.UP;\n      possible_directions[4] = APP.Direction.UP;\n      possible_directions[5] = APP.Direction.UP;\n      possible_directions[6] = APP.Direction.RIGHT;\n      possible_directions[7] = APP.Direction.DOWN;\n      possible_directions[8] = APP.Direction.LEFT;\n      break;\n    case APP.Direction.RIGHT:\n      possible_directions[0] = APP.Direction.RIGHT;\n      possible_directions[1] = APP.Direction.RIGHT;\n      possible_directions[2] = APP.Direction.RIGHT;\n      possible_directions[3] = APP.Direction.RIGHT;\n      possible_directions[4] = APP.Direction.RIGHT;\n      possible_directions[5] = APP.Direction.RIGHT;\n      possible_directions[6] = APP.Direction.UP;\n      possible_directions[7] = APP.Direction.DOWN;\n      possible_directions[8] = APP.Direction.LEFT;\n      break;\n    case APP.Direction.DOWN:\n      possible_directions[0] = APP.Direction.DOWN;\n      possible_directions[1] = APP.Direction.DOWN;\n      possible_directions[2] = APP.Direction.DOWN;\n      possible_directions[3] = APP.Direction.DOWN;\n      possible_directions[4] = APP.Direction.DOWN;\n      possible_directions[5] = APP.Direction.DOWN;\n      possible_directions[6] = APP.Direction.UP;\n      possible_directions[7] = APP.Direction.RIGHT;\n      possible_directions[8] = APP.Direction.LEFT;\n      break;\n    case APP.Direction.LEFT:\n      possible_directions[0] = APP.Direction.LEFT;\n      possible_directions[1] = APP.Direction.LEFT;\n      possible_directions[2] = APP.Direction.LEFT;\n      possible_directions[3] = APP.Direction.LEFT;\n      possible_directions[4] = APP.Direction.LEFT;\n      possible_directions[5] = APP.Direction.LEFT;\n      possible_directions[6] = APP.Direction.UP;\n      possible_directions[7] = APP.Direction.RIGHT;\n      possible_directions[8] = APP.Direction.DOWN;\n      break;\n  }\n  rnd = Math.floor(Math.random() * direction_quantity);\n  this.direction = possible_directions[rnd];\n};\n```", "```js\n  APP.Check_Wall = function () {\n    if (this.up) {\n      if (APP.map.marks[this.y - 1][this.x] !== APP.WALL_MARK) {\n        this.up = true;\n        this.down = false;\n        this.right = false;\n        this.left = false;\n      } else {\n        this.direction = APP.Direction.STOP;\n      }\n    }\n\n    if (this.right) {\n      if (APP.map.marks[this.y][this.x + 1] !== APP.WALL_MARK) {\n        this.up = false;\n        this.down = false;\n        this.right = true;\n        this.left = false;\n      } else {\n        this.direction = APP.Direction.STOP;\n      }\n    }\n\n    if (this.down) {\n      if (APP.map.marks[this.y + 1][this.x] !== APP.WALL_MARK) {\n        this.up = false;\n        this.down = true;\n        this.right = false;\n        this.left = false;\n      } else {\n        this.direction = APP.Direction.STOP;\n      }\n    }\n\n    if (this.left) {\n      if (APP.map.marks[this.y][this.x - 1] !== APP.WALL_MARK) {\n        this.up = false;\n        this.down = false;\n        this.right = false;\n        this.left = true;\n      } else {\n        this.direction = APP.Direction.STOP;\n      }\n    }\n  };\n```", "```js\nAPP.Move_Up = function () {\n  if (this.frame === 0) {\n    this.frame = this.speed;\n    this.y--;\n  } else {\n    this.frame--;\n  }\n  if (this.y < 0) {\n    this.y = APP.MAP_HEIGHT - 1;\n  }\n};\nAPP.Move_Right = function () {\n  if (this.frame === 0) {\n    this.frame = this.speed;\n    this.x++;\n  } else {\n    this.frame--;\n  }\n  if (this.x >= APP.MAP_WIDTH) {\n    this.x = 0;\n  }\n};\nAPP.Move_Down = function () {\n  if (this.frame === 0) {\n    this.frame = this.speed;\n    this.y++;\n  } else {\n    this.frame--;\n  }\n  if (this.y >= APP.MAP_HEIGHT) {\n    this.y = 0;\n  }\n};\nAPP.Move_Left = function () {\n  if (this.frame === 0) {\n    this.frame = this.speed;\n    this.x--;\n  } else {\n    this.frame--;\n  }\n  if (this.x < 0) {\n    this.x = APP.MAP_WIDTH - 1;\n  }\n};\n```", "```js\nvar APP = {};\n(function () {\n  \"use strict\";\n  //used for map's size and each cell's size\n  APP.MAP_WIDTH = 28;\n  APP.MAP_HEIGHT = 31;\n  APP.CELL_WIDTH = 20;\n  APP.CELL_HEIGHT = 20;\n  APP.BG_COLOR = \"#000000\";\n  APP.GAME_FPS = 40;\n  APP.PLAYER_SPEED = 8;\n  APP.INITIAL_PLAYER_FRAME = 8;\n  APP.INITIAL_PLAYER_X = 14;\n  APP.INITIAL_PLAYER_Y = 23;\n  APP.WALL_CELL_DIGIT = 5;\n  APP.BLANK_CELL_DIGIT = 6;\n  APP.DOT_CELL_DIGIT = 7;\n  APP.WALL_MARK = \"W\";\n  APP.BLANK_MARK = \"B\";\n  APP.DOT_MARK = \"D\";\n  APP.PORTAL_BLINKING_SPEED = 2;\n  APP.PORTAL_WIDTH = 20;\n  APP.FIRST_PORTAL_X = 0;\n  APP.FIRST_PORTAL_Y = 265;\n  APP.SECOND_PORTAL_X = 510;\n  APP.SECOND_PORTAL_Y = 265;\n  APP.MONSTERS_QUANTITY = 4;\n  APP.INKY_SPEED = 7;\n  //for the cat's speed and position. \n  APP.INITIAL_INKY_X = 12;\n  APP.INITIAL_INKY_Y = 14;\n  APP.INITIAL_INKY_FRAME = 7;\n  APP.PINKY_SPEED = 7;\n  APP.INITIAL_PINKY_X = 13;\n  APP.INITIAL_PINKY_Y = 14;\n  APP.INITIAL_PINKY_FRAME = 4;\n  APP.BLINKY_SPEED = 7;\n  APP.INITIAL_BLINKY_X = 14;\n  APP.INITIAL_BLINKY_Y = 11;\n  APP.INITIAL_BLINKY_FRAME = 4;\n  APP.CLYDE_SPEED = 7;\n  APP.INITIAL_CLYDE_X = 15;\n  APP.INITIAL_CLYDE_Y = 14;\n  APP.INITIAL_CLYDE_FRAME = 7;\n  APP.Direction = {\n    UP      : \"UP\",\n    RIGHT   : \"RIGHT\",\n    DOWN    : \"DOWN\",\n    LEFT    : \"LEFT\",\n    STOP    : \"STOP\"\n  };\n})();\n```", "```js\n<html>\n  <head>\n    <link href=\"css/reset.css\" rel=\"stylesheet\"/>\n    <link href=\"css/styles.css\" rel=\"stylesheet\"/>\n  </head>\n  <body>\n    <canvas id=\"main_canvas\"></canvas>\n    <button id=\"blackout\" onclick=\"APP.Reset()\"></button>\n    <script src=\"img/app.constants.js\"></script>\n    <script src=\"img/app.init.js\"></script>\n    <script src=\"img/app.display_functions.js\"></script>\n    <script src=\"img/app.movement_functions.js\"></script>\n    <script src=\"img/app.key_handler.js\"></script>\n    <script src=\"img/app.main.js\"></script>\n  </body>\n</html>\n```"]