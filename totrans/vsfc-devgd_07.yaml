- en: Chapter 7. Visualforce for Mobile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Visualforce and Apex we can build complex, dynamic, and powerful native
    applications on the Force.com platform. Nowadays, users are not satisfied only
    with only a web application, due to the competition in the industry. When it comes
    to applications on the Force.com platform, we can extend them to mobile devices
    by using Visualforce Mobile. Visualforce Mobile is a hybrid of client-side and
    on-demand programming. This allows us to extend applications for mobile devices
    with offline data access flexibility. We can rapidly build apps for mobile devices
    by using Visualforce and Apex.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers how to extend applications built on the Force.com platform
    for mobile devices, and how developers can use Visualforce Mobile. The following
    topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Salesforce Mobile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing and mobilizing Visualforce pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's build Visualforce for mobiles.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Salesforce Mobile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Salesforce Mobile is a client application provided by Salesforce. Salesforce
    Mobile is used to extend applications which are built on the Force.com platform.
    This allows us to access the Salesforce data from BlackBerry, iPhone, or Windows
    Mobile devices. The Salesforce Mobile client application has the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: Makes the interaction with Salesforce via wireless carrier networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stores a local copy of user's data on the mobile device. It uses its own database.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A set of parameters which is called as **Mobile configuration** is determined
    by the data sent to the mobile device. It defines the relevant subset of the user's
    Salesforce records.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we access the Salesforce data via a mobile device, we need a separate Salesforce
    Mobile user license for a particular user. The Developer and Ultimate editions
    have only one mobile license. Others must be purchased separately.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce Mobile and Visualforce Mobile supporting devices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Salesforce Mobile is supported on BlackBerry, iPhone, and Windows Mobile. Currently,
    Windows Mobile is not supported for Visualforce Mobile. BlackBerry and iPhone
    devices must have following requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '**BlackBerry configurations are as follows:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supported OS versions 4.3 through 7.0 and for better performance versions 4.6
    through 4.7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A minimum of 5 MB of free memory should be available on the device
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The mobile client application is supported on BlackBerry 8100 Series (Pearl),
    BlackBerry 8300 Series (Curve), BlackBerry 8800 Series, BlackBerry 8900 Series
    (Javelin), BlackBerry 9000 Series (Bold), and BlackBerry 9500 Series (Storm)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You don't need to own an iPhone or a BlackBerry device to develop and test applications.
    You can use simulators.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '**iPhone configurations are as follows:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supported for latest iPhone OS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A minimum of 5 MB of free memory should be available on the device
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The mobile client application is supported on iPhone, iPhone 3G, iPhone 3GS,
    and iPod Touch
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Capabilities and limitations of the mobile application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The native client application of Salesforce Mobile has an embedded browser
    which is used to communicate between a client application and a Visualforce page.
    There are a few concerns to consider when we are using Salesforce Mobile, which
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Accounts, assets, contacts, opportunities, tasks, leads, events, price books,
    products, cases solutions, and custom objects can be mobilized.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom links, s-controls, mashups, merge fields, and image fields cannot be
    mobilized.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Workflow rules, validation rules, formula fields, and Apex triggers are not
    suitable to be run on the mobile device. However, they can be run on the server
    side after a record is saved and submitted to Salesforce.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User permissions, record types, and page layouts are inherited from Salesforce.
    However, the administrator can change them to restrict the permissions of mobile
    users.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When we add a child data set to a parent data set, the object becomes a related
    list on the mobile device.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reports are available only in a BlackBerry client application, but dashboards
    are available in both iPhone and BlackBerry.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sorting, summaries, subtotals, or grouping are not supported in the report viewer
    of the mobile application.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom views of Salesforce can be accessed by iPhone and BlackBerry users, but
    the custom views can be created only by BlackBerry users.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the mobile application, custom views are limited to two columns.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobilized Visualforce tabs and web tabs can be accessed in the client application
    by both iPhone and BlackBerry users.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The embedded browser communicates with Salesforce using the device's internet
    connection; the native client application communicates with Salesforce asynchronously
    through the SOAP API. The embedded browser can execute JavaScript, but the native
    client application cannot.
  prefs: []
  type: TYPE_NORMAL
- en: Using Visualforce Mobile
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we use mobile applications, they are client-side applications and they
    need an installation. The mobile applications need a periodic connection to send
    and receive data. When compared with the mobile on-demand applications, the mobile
    client applications are dependent upon network connection and speed. Mobile client
    applications can be used to work offline as well. When we come to speed, wireless
    data networks are still very slow. But client applications are highly responsive.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are situations where a native client application cannot satisfy the customer''s
    needs. Therefore, we can use Visualforce Mobile in the following situations:'
  prefs: []
  type: TYPE_NORMAL
- en: Integrating with other web APIs, for example, Google Maps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rebuilding the functionality which are not available in client applications,
    such as responding to an approval request
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobilizing a standard Salesforce object which is not supported in a client application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating with peripheral devices, such as Bluetooth or embedded GPS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overriding the action of the standard buttons on the detail page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing and mobilizing Visualforce pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developing a Visualforce page for a Salesforce Mobile is different from developing
    pages for Salesforce, especially as the user experiences on desktop browsers and
    mobile browsers are different.
  prefs: []
  type: TYPE_NORMAL
- en: Best practices for building Visualforce Mobile pages for iPhone and BlackBerry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the best practices:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Controllers**: Salesforce Mobile supports custom objects and many standard
    objects. Standard layouts and styles of a standard page are too complex for a
    mobile browser. When developing pages for the mobile application, the best practice
    is to use custom controllers for the page. If your controller has a very complex
    business logic, it may slow down the loading of the page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Header and sidebar**: Remove the header and the sidebar from the Visualforce
    Mobile pages because they may lead to long loading times and there won''t be sufficient
    space to display them on the mobile screen. They can be removed by using the following
    code:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Page styles**: The standard stylesheets of Salesforce pages are too complex
    for the mobile browser. We have to stop loading the standard stylesheets by using
    the `standardStylesheets` attribute of the `<apex:page>` tag as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The best approach to add a stylesheet to your page is to include a `<style>`
    section just below the `<apex:page>` tag.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Reuse**: In a mobile client application, reusing is a key component. We can
    create a Visualforce page with custom styles and reuse that page in other Visualforce
    pages using the `<apex:include>` component. For example, if the preceding page''s
    name is `myStylePage` and we have implemented a custom style on that page, then
    we can include the preceding page with styles as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: We can create mobile-optimized stylesheet as a static resource and we can refer
    to the same stylesheet in non-mobile pages. We can increase the page's loading
    time by using the stylesheet as a static resource.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Lookups**: Lookups doesn''t work properly on BlackBerry and iPhone. Therefore
    the best practice is to validate the entry in the lookup upon saving the record.
    We can use an Apex trigger for validation. And we can also change the file type
    occasionally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iPhone considerations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While developing pages for the iPhone, we must consider following things:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Page zoom**: To maximize the compatibility with a broad range of websites,
    the iPhone browser sets the page width to 980 pixels. Using the `<meta>` tag,
    the iPhone browser can identify the width to display the page. The following tag
    definition is only valid for the iPhone browser, other browsers ignore this tag:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**URL targets**: The embedded browser doesn''t support the `target="_blank"`
    attribute. The page will not load with this attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Screen rotation**: Rotating the screen will not cause the page to flip and
    resize.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Static resource caching**: The embedded browser doesn''t support caching.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**File access**: The embedded browser does not natively offer access to the
    filesystem, camera, location, or other device data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**General rule for mobile development**'
  prefs: []
  type: TYPE_NORMAL
- en: We shouldn't use components with JavaScript to perform an action on components
    that depend on Salesforce stylesheets. If we can see the `<script>` tag that refers
    to a JavaScript (`.js`) file or a `<link>` tag that refers to a stylesheet (`.css`)
    in the HTML source of our page, the page can fall under the preceding category.
  prefs: []
  type: TYPE_NORMAL
- en: BlackBerry considerations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When developing pages for BlackBerry smartphones, the following considerations
    are applied:'
  prefs: []
  type: TYPE_NORMAL
- en: '**JavaScript Support**: Inline DOM events doesn''t work in the BlackBerry browser.
    The BlackBerry browser has limited JavaScript support. When developing Visualforce
    pages for BlackBerry, avoiding JavaScript is the best option.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Forms and view state**: If you want to use the `<apex:form>` tag in your
    Visualforce Mobile page, use standard HTML forms instead of `<apex:form>`. If
    we use the `<apex:form>` tag, the view state of the page will be too large for
    the BlackBerry browser. When we use a standard HTML tag, we have to do the following
    things manually and we cannot use the `<apex:commandLink>` tag and `<apex:commandButton>`
    components:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining state between pages
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Redirecting to another page
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Parameters sent from the form can be retrieved using the `ApexPages.currentPage().getParameters()`
    map in the controller.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Page styles**: We have to follow the best practices for building Visualforce
    Mobile pages for iPhone and BlackBerry. Additionally, we must know that the BlackBerry
    browser ignores some CSS properties, for example, `margin-left`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Line breaks**: The `<br/>` tag is ignored unless there is something on the
    line.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Navigation**: There isn''t any in-built navigation in the embedded browser
    of a BlackBerry client application. We have to provide the navigation links.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing cross-platform compatible pages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When we build Visualforce Mobile pages to perform well on both iPhone and BlackBerry
    browsers, we need to follow the following approaches which are provided by Salesforce:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Separation and redirection**: We can build the Visualforce Mobile pages to
    redirect to a suitable optimized page (iPhone-optimized or BlackBerry-optimized)
    by using JavaScript. For that, we have to build pages separately for iPhone and
    BlackBerry. When the connecting device is not a BlackBerry device, the page will
    redirect the page to an iPhone-optimized page, as given in the following code:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Conditional code**: The server identifies the connecting device (iPhone or
    BlackBerry) by using the user agent string in the header, which is the user agent
    string that is passed by the browser to the server. Therefore, we can build device-conditional
    code and styles for well-performing pages on both iPhone and BlackBerry devices.
    The advantage is that the markup is interpreted on the server side and the user
    gets only the suitable markup which is selected by the conditional code. The disadvantage
    is that the code can be more complex due to the conditional code. The following
    example shows the way of handling conditional code and the markup. The markup
    has two `<apex:outputPanel>` components, each of which renders the markup for
    a particular device:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The controller of the preceding markup is as follows and it evaluates the user
    agent and prepares the `deviceType` attribute in order to render a correct output
    panel:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Lowest common denominator**: Build to the lowest common denominator and include
    only minimal, unobtrusive JavaScript, avoiding scripts with inline events in the
    tags. Depending on the devices in the customer''s organization, you might need
    to avoid JavaScript all together. On older BlackBerry smartphones, using any JavaScript
    code can malfunction the page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the JavaScript library
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The JavaScript library contains commands for trigger actions in Salesforce Mobile.
    This JavaScript library can be used to build seamless user experience between
    a native client application and Visualforce Mobile pages.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The JavaScript commands work only on JavaScript-enabled devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the functions in the JavaScript library:'
  prefs: []
  type: TYPE_NORMAL
- en: '`mobileforce.device.sync()`: This function forces the mobile client application
    to synchronize with Salesforce, which updates data records on the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mobileforce.device.close()`: This function closes the embedded browser containing
    the Visualforce page and returns the user to the original/previous tab or record.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mobileforce.device.syncClose()`: This function forces the mobile client application
    to synchronize with Salesforce and closes the embedded browser containing the
    Visualforce page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mobileforce.device.getLocation()`: This function obtains the GPS coordinates
    of the device''s current location.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following example has the usage of all the commands available in the JavaScript
    library:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Building a mobile-ready Visualforce tab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After building the Visualforce Mobile pages, we have to do some configuration
    to access these pages via Salesforce Mobile. To mobilize the Visualforce page,
    we can create web and Visualforce tabs using the **Mobile Ready** attribute. After
    navigating to the following path and clicking on **New** in the Visualforce tab
    we will be directed to a page where we will create a mobile-ready Visualforce
    tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '**YourName** | **Setup** | **Create** | **Tab**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Building a mobile-ready Visualforce tab](img/9818_07_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Building a mobile-ready Visualforce tab
  prefs: []
  type: TYPE_NORMAL
- en: The **Mobile Ready** checkbox is used to specify whether the Visualforce page
    displays and functions properly in a mobile browser. By selecting the **Mobile
    Ready** checkbox, we can add the tab to the list of available tabs for our mobile
    configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the mobile configuration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we use Salesforce Mobile, we have to determine the mobile user's data and
    the permissions given to mobile users. Mobile configuration is a set of parameters.
    An organization can have multiple mobile configurations for different kinds of
    mobile users. When we create a mobile configuration, a particular user must be
    assigned to a mobile license.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the user account's **Mobile User** checkbox is checked, then this means that
    the user is already identified as a mobile user, unless we give the **Manage Mobile
    Configurations** permission to the user's profile or the permission set.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a mobile configuration, navigate to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**YourName** | **Setup** | **Mobile Administration** | **Salesforce Mobile**
    | **Configuration** | **New Mobile Configuration**'
  prefs: []
  type: TYPE_NORMAL
- en: Only the active mobile configuration will be available for use. Optionally,
    we can select the **Mobilize Recent Items** option to mark recently the used records
    in Salesforce for device synchronization and the **Mobilize Recent Items** option
    to select a value from the **Maximum Number of Recent Items** drop-down list.
    In the mobile configuration, we can add an individual user or we can use a profile
    to give the permissions. We don't sync if the data size exceeds property to avoid
    overloading of mobile device. To do that, we have to specify the maximum size
    of data that is allowed for all data sets combined in this mobile configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Salesforce.com will not synchronize any data sets if the combined data size
    exceeds this limit.
  prefs: []
  type: TYPE_NORMAL
- en: After creating the mobile configuration, we can define the data set by adding
    objects and records, and automatically synchronizing the mobile devices.
  prefs: []
  type: TYPE_NORMAL
- en: After developing Visualforce Mobile pages, we have to test them for checking
    the functionality and the appearance. For that, we can install the mobile application
    on a BlackBerry or an iPhone device or we can use the iPhone or BlackBerry simulator.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about Salesforce Mobile and the usage of Salesforce
    Mobile. We became familiar with the way of extending applications built on the
    Force.com platform to mobile devices and how we can use Visualforce Mobile. We
    understood how to develop and mobilize Visualforce pages. We have seen the supporting
    configurations of mobile devices for a Visualforce Mobile.
  prefs: []
  type: TYPE_NORMAL
