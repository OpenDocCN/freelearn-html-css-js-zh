["```js\nvar gameScene = cc.Scene.extend({\n  onEnter:function () {\n    this._super();\n    gameLayer = new game();\n    gameLayer.init();\n    this.addChild(gameLayer);\n  }\n});\n\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var backgroundLayer = cc.LayerGradient.create(cc.color(0xdf,0x9f,0x83,255), cc.color(0xfa,0xf7,0x9f,255));\n    this.addChild(backgroundLayer);\n    // create physics world somehow\n    this.addBody(240,10,480,20,false,\"assets/ground.png\",\"ground\");\n    this.addBody(204,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n    this.addBody(276,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n    this.addBody(240,56,96,24,true,\"assets/brick4x1.png\",\"destroyable\");\n    this.addBody(240,80,48,24,true,\"assets/brick2x1.png\",\"solid\");\n    this.addBody(228,104,72,24,true,\"assets/brick3x1.png\",\"destroyable\");\n    this.addBody(240,140,96,48,true,\"assets/brick4x2.png\",\"solid\");\n    this.addBody(240,188,24,48,true,\"assets/totem.png\",\"totem\");\n    this.scheduleUpdate();\n    cc.eventManager.addListener(touchListener, this);\n  },\n  addBody: function(posX,posY,width,height,isDynamic,spriteImage,type){\n    // create the physics body somehow\n  },\n  update:function(dt){\n    // update the world somehow\n  }\n});\n\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  onTouchBegan: function (touch, event) {\n    // destroy a physics body somehow\n  }\n})\n```", "```js\ninit:function () {\n  this._super();\n  var backgroundLayer = cc.LayerGradient.create(cc.color(0xdf,0x9f,0x83,255), cc.color(0xfa,0xf7,0x9f,255));\n  this.addChild(backgroundLayer);\n  world = new cp.Space();\n  world.gravity = cp.v(0, -100);\n  this.addBody(240,10,480,20,false,\"assets/ground.png\",\"ground\");\n  this.addBody(204,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(276,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(240,56,96,24,true,\"assets/brick4x1.png\",\"destroyable\");\n  this.addBody(240,80,48,24,true,\"assets/brick2x1.png\",\"solid\");\n  this.addBody(228,104,72,24,true,\"assets/brick3x1.png\",\"destroyable\");\n  this.addBody(240,140,96,48,true,\"assets/brick4x2.png\",\"solid\");\n  this.addBody(240,188,24,48,true,\"assets/totem.png\",\"totem\");\n  this.scheduleUpdate();\n  cc.eventManager.addListener(touchListener, this);\n}\n```", "```js\nvar world;\n```", "```js\nworld = new cp.Space();\n```", "```js\nworld.gravity = cp.v(0, -100);\n```", "```js\naddBody: function(posX,posY,width,height,isDynamic,spriteImage,type){\n  if(isDynamic){\n    var body = new cp.Body(1,cp.momentForBox(1,width,height));\n  }\n  else{\n    var body = new cp.Body(Infinity,Infinity);\n  }\n  body.setPos(cp.v(posX,posY));\n  if(isDynamic){\n    world.addBody(body);\n  }\n  var shape = new cp.BoxShape(body, width, height);\n  shape.setFriction(1);\n  shape.setElasticity(0);\n  shape.name=type;\n  world.addShape(shape);\n}\n```", "```js\nif(isDynamic) {\n  var body = new cp.Body(1,cp.momentForBox(1,width,height));\n}\nelse{\n  var body = new cp.Body(Infinity,Infinity);\n}\n```", "```js\nvar body = new cp.Body(1,cp.momentForBox(1,width,height));\n```", "```js\nvar body = new cp.Body(15,cp.momentForBox(15,width,height));\n```", "```js\nbody.setPos(cp.v(posX,posY));\n```", "```js\nif(isDynamic){\n  world.addBody(body);\n}\n```", "```js\nvar shape = new cp.BoxShape(body, width, height);\n```", "```js\nvar shape = new cp.BoxShape(body, width, height);\nshape.setFriction(1);\nshape.setElasticity(0);\nshape.name=type;\nworld.addShape(shape);\n```", "```js\nupdate:function(dt){\n  world.step(dt);\n}\n```", "```js\ninit:function () {\n  this._super();\n  var backgroundLayer = cc.LayerGradient.create(cc.color(0xdf,0x9f,0x83,255), cc.color(0xfa,0xf7,0x9f,255));\n  this.addChild(backgroundLayer);\n  world = new cp.Space();\n  world.gravity = cp.v(0, -100);\n  var debugDraw = cc.PhysicsDebugNode.create(world);\n  debugDraw.setVisible(true);\n  this.addChild(debugDraw);\n  this.addBody(240,10,480,20,false,\"assets/ground.png\",\"ground\");\n  this.addBody(204,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(276,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(240,56,96,24,true,\"assets/brick4x1.png\",\"destroyable\");\n  this.addBody(240,80,48,24,true,\"assets/brick2x1.png\",\"solid\");\n  this.addBody(228,104,72,24,true,\"assets/brick3x1.png\",\"destroyable\");\n  this.addBody(240,140,96,48,true,\"assets/brick4x2.png\",\"solid\");\n  this.addBody(240,188,24,48,true,\"assets/totem.png\",\"totem\");\n  this.scheduleUpdate();\n  cc.eventManager.addListener(touchListener, this);\n}\n```", "```js\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  onTouchBegan: function (touch, event) {\n    for(var i=shapeArray.length-1;i>=0;i--){\n      if(shapeArray[i].pointQuery(cp.v(touch.getLocation().x,touch.getLocation().y))!=undefined){\n        if(shapeArray[i].name==\"destroyable\"){\n          world.removeBody(shapeArray[i].getBody())\n          world.removeShape(shapeArray[i])\n          shapeArray.splice(i,1);\n        }\n      }\n    }\n  }\n})\n```", "```js\nvar world;\nvar shapeArray=[];\n\n```", "```js\naddBody: function(posX,posY,width,height,isDynamic,spriteImage,type){\n  if(isDynamic){\n    var body = new cp.Body(1,cp.momentForBox(1,width,height));\n  }\n  else{\n    var body = new cp.Body(Infinity,Infinity);\n  }\n  body.setPos(cp.v(posX,posY));\n  if(isDynamic){\n    world.addBody(body);\n  }\n  var shape = new cp.BoxShape(body, width, height);\n  shape.setFriction(1);\n  shape.setElasticity(0);\n  shape.name=type;\n  world.addShape(shape);\n  shapeArray.push(shape);\n}\n```", "```js\ninit:function () {\n  this._super();\n  var backgroundLayer = cc.LayerGradient.create(cc.color(0xdf,0x9f,0x83,255), cc.color(0xfa,0xf7,0x9f,255));\n  this.addChild(backgroundLayer);\n  world = new cp.Space();\n  world.gravity = cp.v(0, -100);\n  this._debugNode = cc.PhysicsDebugNode.create(world);\n  this._debugNode.setVisible( true );\n  this.addChild( this._debugNode );\n  this.scheduleUpdate();\n  this.addBody(240,10,480,20,false,\"assets/ground.png\",\"ground\");\n  this.addBody(204,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(276,32,24,24,true,\"assets/brick1x1.png\",\"destroyable\");\n  this.addBody(240,56,96,24,true,\"assets/brick4x1.png\",\"destroyable\");\n  this.addBody(240,80,48,24,true,\"assets/brick2x1.png\",\"solid\");\n  this.addBody(228,104,72,24,true,\"assets/brick3x1.png\",\"destroyable\");\n  this.addBody(240,140,96,48,true,\"assets/brick4x2.png\",\"solid\");\n  this.addBody(240,188,24,48,true,\"assets/totem.png\",\"totem\");\n  cc.eventManager.addListener(touchListener, this);\n  world.setDefaultCollisionHandler  (this.collisionBegin,null,null,null);\n}\n```", "```js\ncollisionBegin : function (arbiter, space ) {\n  if((arbiter.a.name==\"totem\" && arbiter.b.name==\"ground\") || (arbiter.b.name==\"totem\" && arbiter.a.name==\"ground\")){\n    console.log(\"Oh no!!!!\");\n  }\n  return true;\n}\n```", "```js\naddBody: function(posX,posY,width,height,isDynamic,spriteImage,type){\n  if(isDynamic){\n    var body = new cp.Body(1,cp.momentForBox(1,width,height));\n  }\n  else{\n    var body = new cp.Body(Infinity,Infinity);\n  }\n  body.setPos(cp.v(posX,posY));\n  var bodySprite = cc.Sprite.create(spriteImage);\n  gameLayer.addChild(bodySprite,0);\n  bodySprite.setPosition(posX,posY);\n  if(isDynamic){\n    world.addBody(body);\n  }\n  var shape = new cp.BoxShape(body, width, height);\n  shape.setFriction(1);\n  shape.setElasticity(0);\n  shape.name=type;\n  shape.image=bodySprite;\n  world.addShape(shape);\n  shapeArray.push(shape);\n}\n```", "```js\nupdate:function(dt){\n  world.step(dt);\n  for(var i=shapeArray.length-1;i>=0;i--){\n    shapeArray[i].image.x=shapeArray[i].body.p.x\n    shapeArray[i].image.y=shapeArray[i].body.p.y\n    var angle = Math.atan2(-shapeArray[i].body.rot.y,shapeArray[i].body.rot.x);\n    shapeArray[i].image.rotation= angle*57.2957795;\n  }\n}\n```", "```js\nvar touchListener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  onTouchBegan: function (touch, event) {\n    for(var i=shapeArray.length-1;i>=0;i--){\n      if(shapeArray[i].pointQuery(cp.v(touch.getLocation().x,touch.getLocation().y))!=undefined){\n        if(shapeArray[i].name==\"destroyable\"){\n          gameLayer.removeChild(shapeArray[i].image);\n          world.removeBody(shapeArray[i].getBody())\n          world.removeShape(shapeArray[i])\n          shapeArray.splice(i,1);\n        }\n      }\n    }\n  }\n})\n```"]