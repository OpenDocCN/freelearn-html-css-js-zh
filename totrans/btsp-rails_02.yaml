- en: Chapter 2. Introducing Bootstrap 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：介绍 Bootstrap 3
- en: In the last chapter, we learned how to create a simple Rails project, and how
    to change its default CSS styles. The styling process becomes more difficult if
    the developer is a newbie and has minimal knowledge of CSS. Bootstrap helps to
    solve this issue. It gives you access to some of the popular, ready-to-use reusable
    components such as stylish navigation bars, image containers, popovers, and so
    on. All you have to do is copy and customize the markup of the component you want
    to use.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何创建一个简单的 Rails 项目，以及如何更改其默认的 CSS 样式。如果开发者是新手并且对 CSS 的了解有限，那么这个过程会变得更加困难。Bootstrap
    有助于解决这个问题。它为你提供了访问一些流行的、现成的可重用组件的权限，例如时尚的导航栏、图片容器、弹出框等。你所要做的就是复制并自定义你想要使用的组件的标记。
- en: In this chapter, you will understand what Bootstrap is, and how it is important
    for a Rails developer. We will see how to download and use Bootstrap in our Rails
    projects. We will again create the same Todo application in this chapter and apply
    Bootstrap styles to it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解 Bootstrap 是什么，以及它对 Rails 开发者的重要性。我们将看到如何在我们的 Rails 项目中下载和使用 Bootstrap。我们将在本章中再次创建相同的
    Todo 应用程序，并为其应用 Bootstrap 样式。
- en: 'In this chapter, we will cover:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: What is Bootstrap?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Bootstrap？
- en: Installing Bootstrap in a Rails project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Rails 项目中安装 Bootstrap
- en: What is Bootstrap?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Bootstrap？
- en: Bootstrap is a complete frontend framework that helps in developing web applications
    without having to worry about its frontend. If you are a developer and your main
    focus is to showcase the power of your application without putting any efforts
    on CSS designing, then Bootstrap is for you. It allows developers to select from
    a range of popular reusable HTML components that are previously developed and
    styled by Bootstrap.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 是一个完整的前端框架，它帮助开发者在不需担心前端开发的情况下开发 Web 应用程序。如果你是一名开发者，你的主要目标是展示你应用程序的强大功能，而不需要在
    CSS 设计上投入任何努力，那么 Bootstrap 就是为你准备的。它允许开发者从一系列由 Bootstrap 开发和设计的流行可重用 HTML 组件中选择。
- en: '![What is Bootstrap?](img/7269OS_2_1.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![什么是 Bootstrap？](img/7269OS_2_1.jpg)'
- en: Let's imagine a situation. Thomas is a Rails developer. He creates a powerful
    e-commerce shopping system using Rails. The system has many features which are
    normally expected from a shopping website. Thomas puts his extra effort on securing
    the application, and he made the system ready to use. Then comes the time when
    Thomas has to finally represent this application to venture capitalists to get
    some funding in order to start his project. But wait, Thomas did nothing to make
    his application presentable. His application contains only basic HTML markup with
    almost negligible CSS styling in it. Will his application make an impact?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设想一个场景。托马斯是一名 Rails 开发者。他使用 Rails 创建了一个强大的电子商务购物系统。该系统具有通常从购物网站期望的许多功能。托马斯在确保应用程序的安全性上投入了额外的努力，并使系统准备就绪。然后是托马斯必须最终向风险投资家展示这个应用程序以获得一些资金以启动他的项目的时候。但是等等，托马斯没有做任何使他的应用程序看起来令人满意的事情。他的应用程序只包含基本的
    HTML 标记，其中几乎可以忽略不计的 CSS 样式。他的应用程序会产生影响吗？
- en: The answer is, definitely not. Though Thomas was able to create a robust Rails
    application, it lacked presentation ability. His lack of proper CSS knowledge
    was the main reason that debarred him from creating a powerful impact for his
    project.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是，绝对不行。尽管托马斯能够创建一个健壮的 Rails 应用程序，但它缺乏展示能力。他缺乏适当的 CSS 知识是他无法为他的项目创造强大影响的主要原因。
- en: It is always important to balance both the frontend and backend capability for
    every developer. If you can't represent your application in a presentable manner,
    then it is definitely of no use. There might be some developers who will go forward
    after learning a lesson from a similar event, as described in the preceding example.
    They will try hard and learn web designing using CSS irrespective of whether they
    have interest in that area. By doing this, they are forgetting that designing
    is a completely different field from what they were previously doing. It is the
    work of UX/UI developers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每一位开发者来说，平衡前端和后端能力始终是非常重要的。如果你无法以令人满意的方式展示你的应用程序，那么它肯定是没有用的。可能会有一些开发者从类似的前车之鉴中吸取教训，正如前一个例子所描述的那样。他们会努力尝试，并使用
    CSS 学习网页设计，无论他们是否对这个领域感兴趣。通过这样做，他们忘记了设计是一个与之前所做完全不同的领域。这是 UX/UI 开发者的工作。
- en: Bootstrap developers have written many CSS definitions that can be directly
    plugged into our projects to represent it. It is also an open source project which
    is licensed under MIT. This gives you freedom to use it on any type of projects
    without worrying about the licensing issues. Why should we reinvent the wheel,
    when someone has already done the job for us? Developers who are focused on rapid
    application development should consider using Bootstrap in their every project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap开发者已经编写了许多可以直接插入我们项目的CSS定义，以表示它。它也是一个开源项目，许可协议为MIT。这给了你在任何类型的项目中使用它而不必担心许可问题的自由。为什么我们要重新发明轮子，当有人已经为我们做了这项工作呢？专注于快速应用开发的开发者应该考虑在他们的每个项目中使用Bootstrap。
- en: Bootstrap is not limited to just providing better CSS components to the developers.
    It is a **mobile first** framework. This means that anything you write in your
    application using Bootstrap will be compatible even on smaller mobile devices.
    Bootstrap-powered applications can scale beautifully from extremely small devices
    like iPhones to larger displays like Retina displays. It helps you to write a
    single codebase and use it everywhere. With the advancement of technology, even
    native iOS and Android applications can be written using HTML, CSS, and JavaScript
    today. They are called **Hybrid applications** that are ported into the native
    platforms using tools like PhoneGap. Imagine that your Rails application is being
    used in all types of devices like mobiles, smart TVs, tablets, and even desktop
    screens. Awesome! Isn't it?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap不仅仅是为开发者提供更好的CSS组件。它是一个**移动优先**的框架。这意味着你在应用中使用Bootstrap编写的任何内容，即使在较小的移动设备上也能兼容。由Bootstrap驱动的应用可以从极小的设备如iPhone扩展到更大的显示设备如Retina显示屏。它帮助你编写一个代码库并在任何地方使用。随着技术的进步，即使是本地的iOS和Android应用现在也可以使用HTML、CSS和JavaScript编写。它们被称为**混合应用**，这些应用通过像PhoneGap这样的工具移植到本地平台。想象一下，你的Rails应用正在各种设备上使用，如手机、智能电视、平板电脑，甚至是桌面屏幕。太棒了！不是吗？
- en: Installing Bootstrap in a Rails project
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Rails项目中安装Bootstrap
- en: Bootstrap is simply a package of CSS, JavaScript, and font files. You must be
    confused why we used the term installing with Bootstrap here. Well, there are
    two different ways of using Bootstrap in Rails. The first one is to directly copy
    the Bootstrap files at proper places in the Rails project. The second one is the
    *Bootstrap Sass way*. It is because of the second way that we used the term installing.
    It also comes as a gemset that can be bundle installed in any Rails project. We
    will explore both the ways in detail in this section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap只是一个CSS、JavaScript和字体文件的包。你可能很困惑为什么在这里我们使用“安装Bootstrap”这个术语。好吧，在Rails中使用Bootstrap有两种不同的方式。第一种是将Bootstrap文件直接复制到Rails项目的适当位置。第二种是*Bootstrap
    Sass方式*。正是因为第二种方式，我们使用了“安装”这个术语。它也作为一个gemset存在，可以在任何Rails项目中通过bundle安装。我们将在本节中详细探讨这两种方式。
- en: There's also a third way, using Bootstrap files from CDN, which is the simplest
    of all. We will explore this at the end.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 还有第三种方式，使用CDN上的Bootstrap文件，这是最简单的一种。我们将在最后探讨这一点。
- en: Placing Bootstrap files in a Rails project
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Rails项目中放置Bootstrap文件
- en: 'This is the first method of using Bootstrap in Rails. Many Rails developers
    get this method wrong. Placing the Bootstrap files properly is very important
    to activate Bootstrap. Follow these steps to place Bootstrap files:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用Bootstrap在Rails中的第一种方法。许多Rails开发者做错了这种方法。正确放置Bootstrap文件对于激活Bootstrap非常重要。按照以下步骤放置Bootstrap文件：
- en: 'Let''s create a new Rails project. This time we will name it as the `Rails_Bootstrap_Project`
    command, as follows:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新的Rails项目。这次我们将命名为`Rails_Bootstrap_Project`命令，如下所示：
- en: '[PRE0]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As usual, the preceding code will run various other commands and will take some
    time to complete. We will not discuss about various folders that are created inside
    this Rails project, as this was already covered in the previous chapter.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如同往常，前面的代码将运行各种其他命令，并需要一些时间来完成。我们不会讨论在这个Rails项目中创建的各种文件夹，因为这在上一章中已经介绍过了。
- en: 'Let''s create a new model in Rails called `todos` using the scaffolding command,
    as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在Rails中使用scaffolding命令创建一个名为`todos`的新模型，如下所示：
- en: '[PRE1]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let''s also make this change in the database by using the migrate command,
    as follows:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们也通过使用migrate命令在数据库中进行这个更改，如下所示：
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You should get a successful migration message. It's time to start the server
    and check out the Todo application.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该会收到一个成功的迁移消息。现在是时候启动服务器并检查Todo应用了。
- en: '[PRE3]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can now visit `http://localhost:3000/todos` and click on **New Todo**.
    The application should work, and you will get a screenshot, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以访问 `http://localhost:3000/todos` 并点击 **新建 Todo**。应用程序应该可以正常工作，你将得到以下截图：
- en: '![Placing Bootstrap files in a Rails project](img/7269OS_2_2.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![将 Bootstrap 文件放入 Rails 项目中](img/7269OS_2_2.jpg)'
- en: 'Once the installation is complete, we will get a folder called `Rails_Bootstrap_Project`
    with lots of files inside it. If you are a Rails developer, you will definitely
    be tempted to jump directly into it. Let''s keep this project as it is for the
    time being and proceed to download Bootstrap from its official website. The steps
    are:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们将得到一个名为 `Rails_Bootstrap_Project` 的文件夹，里面包含许多文件。如果你是 Rails 开发者，你肯定会想直接跳进去。让我们暂时保持这个项目原样，并继续从其官方网站下载
    Bootstrap。步骤如下：
- en: Go to [http://getbootstrap.com](http://getbootstrap.com) and click on the **Download
    Bootstrap** button. It will take you to another page with three different options
    available.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://getbootstrap.com](http://getbootstrap.com) 并点击 **下载 Bootstrap** 按钮。它将带你去另一个页面，有三个不同的选项可供选择。
- en: Select the first button which simply says **Download Bootstrap**. A zipped package
    will start downloading.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择第一个按钮，上面简单地写着 **下载 Bootstrap**。一个压缩包将开始下载。
- en: After the downloading is over, extract all the files. You can see three different
    folders present inside the default Bootstrap package, `css`, `js`, and `fonts`.
    We need to get all these files properly in our Rails project in order to make
    Bootstrap work.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，提取所有文件。你可以在默认的 Bootstrap 包中看到三个不同的文件夹，分别是 `css`、`js` 和 `fonts`。我们需要将这些文件正确地放入我们的
    Rails 项目中，以便使 Bootstrap 正常工作。
- en: 'Every Bootstrap package comes with a standard set of files. The `css` folder
    contains four different CSS files. The first two CSS files are: `bootstrap.css`
    and `bootstrap.min.css`. Both of these files are exactly the same, except the
    way they are created. Here, `bootstrap.css` is a document version whereas `bootstrap.min.css`
    is a minified version. You will not find any comments or proper indentation in
    the minified version. A minified version is good for using in projects that are
    ready for production, as it is smaller in size.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Bootstrap包都附带一组标准文件。`css` 文件夹包含四个不同的 CSS 文件。前两个 CSS 文件是：`bootstrap.css` 和
    `bootstrap.min.css`。这两个文件完全相同，只是创建方式不同。在这里，`bootstrap.css` 是一个文档版本，而 `bootstrap.min.css`
    是一个压缩版本。在压缩版本中，你将找不到任何注释或适当的缩进。压缩版本适用于准备用于生产的项目，因为它的大小更小。
- en: The next two files, `bootstrap.theme.css` and `bootstrap.theme.min.css`, are
    theme files from Bootstrap. Bootstrap has created its own theme file to override
    its own default style on various components. They are completely optional. Personally,
    I have never used them. These two theme files are also exactly the same. The first
    one is a documented version while the second is a minified version.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的两个文件，`bootstrap.theme.css` 和 `bootstrap.theme.min.css`，是 Bootstrap 的主题文件。Bootstrap
    创建了自己的主题文件来覆盖其默认样式在各个组件上。这些文件完全是可选的。我个人从未使用过它们。这两个主题文件也是完全相同的。第一个是一个文档版本，而第二个是一个压缩版本。
- en: 'Moving on to the `js` folder of the Bootstrap package, we will find two different
    JavaScript files: `bootstrap.js` and `bootstrap.min.js`. Again, these two files
    are exactly similar in nature. The former is a documented version while the latter
    is a minified version. This is the main Bootstrap JavaScript file. There are many
    components like navigation bar which depend on this file to function properly.
    Bootstrap''s JavaScript components depend on jQuery. We do not get jQuery, out
    of the box, in the Bootstrap''s package. But, it is necessary to include in our
    application. Generally, all the Rails projects include jQuery in them. Hence,
    we don''t have to include it separately.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看看 Bootstrap 包的 `js` 文件夹，我们将找到两个不同的 JavaScript 文件：`bootstrap.js` 和 `bootstrap.min.js`。同样，这两个文件在本质上非常相似。前者是一个文档版本，而后者是一个压缩版本。这是主要的
    Bootstrap JavaScript 文件。许多组件，如导航栏，都依赖于这个文件来正常工作。Bootstrap 的 JavaScript 组件依赖于 jQuery。Bootstrap
    的包中不包含 jQuery，但我们需要将其包含在我们的应用程序中。通常，所有 Rails 项目都包含 jQuery。因此，我们不需要单独包含它。
- en: Bootstrap comes with a set of icons that can be used in our Rails application.
    These icons are called **Glyphicons**. Unlike other icons which are images, these
    icons are fonts. All the icons are present in various font files inside the `fonts`
    folder of the Bootstrap package.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 附带了一组图标，可以在我们的 Rails 应用程序中使用。这些图标被称为 **Glyphicons**。与其他图标不同，这些图标是字体。所有图标都存在于
    Bootstrap 包的 `fonts` 文件夹中的各种字体文件中。
- en: 'Now that we have taken a walkthrough of all the files in the Bootstrap package,
    let''s start importing them in our Rails application using the following steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经浏览了Bootstrap包中的所有文件，让我们按照以下步骤开始在我们的Rails应用中导入它们：
- en: Let's move the CSS file first. Copy `bootstrap.min.css` from the CSS folder
    and place it in the `stylesheets` folder of the Rails application by navigating
    to `vendor/assets/stylesheets`:![Placing Bootstrap files in a Rails project](img/7269OS_2_3.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先移动CSS文件。从CSS文件夹中复制`bootstrap.min.css`并将其放置在Rails应用的`stylesheets`文件夹中，通过导航到`vendor/assets/stylesheets`：![将Bootstrap文件放置在Rails项目中](img/7269OS_2_3.jpg)
- en: Next, copy `bootstrap.min.js` from the `js` folder and paste it in the `javascripts`
    folder of the Rails application by navigating to `vendor/assets/javascripts`:![Placing
    Bootstrap files in a Rails project](img/7269OS_2_4.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从`js`文件夹中复制`bootstrap.min.js`并将其粘贴到Rails应用的`javascripts`文件夹中，通过导航到`vendor/assets/javascripts`：![将Bootstrap文件放置在Rails项目中](img/7269OS_2_4.jpg)
- en: Copy the complete `fonts` folder and place it in the `assets` file under `vendor`
    folder:![Placing Bootstrap files in a Rails project](img/7269OS_2_5.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制完整的`fonts`文件夹并将其放置在`vendor`文件夹下的`assets`文件中：![将Bootstrap文件放置在Rails项目中](img/7269OS_2_5.jpg)
- en: We have all the Bootstrap files in the `vendors/assets` folder now. It's time
    to link them from the default Rails CSS and JavaScript files.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经将所有的Bootstrap文件放在了`vendors/assets`文件夹中。现在是时候从默认的Rails CSS和JavaScript文件中链接它们了。
- en: Open the file `application.css` in the `stylesheets` folder by navigating to
    `app/assets/stylesheets`:![Placing Bootstrap files in a Rails project](img/7269OS_2_6.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到`app/assets/stylesheets`打开`stylesheets`文件夹中的`application.css`文件：![将Bootstrap文件放置在Rails项目中](img/7269OS_2_6.jpg)
- en: 'Put the following line into the application of `.css` file:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行应用到`.css`文件的应用中：
- en: '[PRE4]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will include `bootstrap.min.css` from the `vendor/assets/stylesheets` directory.
    Bootstrap has written some CSS properties inside `bootstrap.min.css`, which provides
    the path to the font files. This path won't work here. We need to override it
    inside the `application.css` file.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将包括`vendor/assets/stylesheets`目录中的`bootstrap.min.css`。Bootstrap在`bootstrap.min.css`中编写了一些CSS属性，提供了字体文件的路径。这个路径在这里不起作用。我们需要在`application.css`文件中覆盖它。
- en: 'Paste the following lines into `application.css`:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行粘贴到`application.css`中：
- en: '[PRE5]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We are done with linking the Bootstrap's CSS files. Next, we need to link the
    Bootstrap's JavaScript file.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经完成了Bootstrap的CSS文件的链接。接下来，我们需要链接Bootstrap的JavaScript文件。
- en: 'Open the `application.js` file from `app/assets/javascripts` directory:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打开`app/assets/javascripts`目录中的`application.js`文件：
- en: '![Placing Bootstrap files in a Rails project](img/7269OS_2_7.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将Bootstrap文件放置在Rails项目中](img/7269OS_2_7.jpg)'
- en: 'Put the following line into the application of the`.js` file:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行应用到`.js`文件的应用中：
- en: '[PRE6]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This will link the `bootstrap.min.js` file from the `javascripts` folder by
    navigating to `vendor/assets/javascripts`.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将通过导航到`vendor/assets/javascripts`链接`javascripts`文件夹中的`bootstrap.min.js`文件。
- en: Now it's done! Yes, we have successfully implemented Bootstrap in our Rails
    application. Restart the server and open the Todo application that we have created.
    You will see some minor changes to the application's appearances:![Placing Bootstrap
    files in a Rails project](img/7269OS_2_8.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在完成了！是的，我们已经成功地将Bootstrap应用到了我们的Rails应用中。重新启动服务器并打开我们创建的Todo应用。你将看到应用外观的一些细微变化：![将Bootstrap文件放置在Rails项目中](img/7269OS_2_8.jpg)
- en: The new screenshot has a bolder and clean font. Bootstrap uses browser reset
    which clears all the default browser styles. Hence, there's no gap between the
    elements and the browser window. This helps to properly define the CSS and also
    assures that your design looks the same in all kinds of browsers.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 新的截图有一个更粗体和清晰的字体。Bootstrap使用浏览器重置，它清除所有默认的浏览器样式。因此，元素和浏览器窗口之间没有间隙。这有助于正确定义CSS，并确保你的设计在各种浏览器中看起来都一样。
- en: This was all about injecting Bootstrap's static files directly into a Rails
    project. Let's take a look at some other methods.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是将Bootstrap的静态文件直接注入到Rails项目中的全部内容。让我们看看其他一些方法。
- en: Bootstrap – the Sass way
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Bootstrap – Sass方式
- en: 'Bootstrap also supports Sass. It comes as a gemfile that can be directly installed
    in the Rails application. We will first install Bootstrap as a gem and then try
    to understand why it is better this way:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap也支持Sass。它作为一个gemfile，可以直接安装到Rails应用中。我们首先将Bootstrap作为一个gem安装，然后尝试理解为什么这样做更好：
- en: 'Let''s create another project called `Rails_Bootstrap_Sass_Project`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建另一个名为`Rails_Bootstrap_Sass_Project`的项目：
- en: '[PRE7]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: After the installation is complete, open `Gemfile` which is present inside the
    home directory of the application folder.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，打开位于应用程序文件夹家目录中的 `Gemfile`。
- en: 'You can see lots of gem dependencies mentioned in this file. We need to add
    another gem dependency which is `bootstrap-sass`. Add the following line in this
    file too:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在文件中看到许多 gem 依赖项。我们需要添加另一个 gem 依赖项，即 `bootstrap-sass`。也在这个文件中添加以下行：
- en: '[PRE8]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The above command will install Bootstrap 3.1.1, which is the latest version
    at the time of writing this book. You can also specify other versions, as per
    availability.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述命令将安装 Bootstrap 3.1.1，这是撰写本书时的最新版本。你也可以指定其他版本，根据可用性。
- en: 'It''s time to bundle install this project again. Go to the terminal and navigate
    to the `Rails_Bootstrap_Sass_Project` folder in it. Then, type the following command:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是时候再次安装这个项目的 gem 了。打开终端，导航到 `Rails_Bootstrap_Sass_Project` 文件夹。然后，输入以下命令：
- en: '[PRE9]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This will fetch the `gem bootstrap-sass`, and include it in the project. Let''s
    create a model called `todos` using the scaffolding command, as shown:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将获取 `gem bootstrap-sass` 并将其包含到项目中。让我们使用脚手架命令创建一个名为 `todos` 的模型，如下所示：
- en: '[PRE10]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Also complete the database migration using the rake command, as shown:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还需要使用 rake 命令完成数据库迁移，如下所示：
- en: '[PRE11]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Once the migration is done, we will link the Bootstrap's `css` and `js` file
    from Rails' default `css` and `javascript` files.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 迁移完成后，我们将从 Rails 的默认 `css` 和 `javascript` 文件链接 Bootstrap 的 `css` 和 `js` 文件。
- en: 'Open the `todos.css.scss` file which is present inside the `stylesheets` folder
    by navigating to the `app/assets/stylesheets` folder. Place the following line
    in it:'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过导航到 `app/assets/stylesheets` 文件夹打开位于 `stylesheets` 文件夹中的 `todos.css.scss`
    文件。将以下行放置在其中：
- en: '[PRE12]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, open the `application.js` file in the `javascripts` folder by navigating
    to `app/assets/javascripts`. Insert the following line in it:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过导航到 `app/assets/javascripts` 文件夹打开 `javascripts` 文件夹中的 `application.js`
    文件。在文件中插入以下行：
- en: '[PRE13]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We are done! Simple, wasn't it?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了！简单，不是吗？
- en: If you run this project, you can see Bootstrap's fonts and resets have been
    applied to the default application.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行这个项目，你可以看到 Bootstrap 的字体和重置已经应用到默认应用中。
- en: Bootstrap through CDN
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 CDN 使用 Bootstrap
- en: '**Content delivery network** (**CDN**) is a way of hosting popular libraries
    in the cloud and allows developers to directly access these files whenever needed.
    There are some of the popular CDN service providers like Google Hosted Libraries
    ([https://developers.google.com/speed/libraries/devguide](https://developers.google.com/speed/libraries/devguide)),
    cdnjs ([http://cdnjs.com/](http://cdnjs.com/)), CloudFlare ([http://www.cloudflare.com/](http://www.cloudflare.com/)),
    and others.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容分发网络**（**CDN**）是一种在云端托管流行库的方式，允许开发者在需要时直接访问这些文件。一些流行的 CDN 服务提供商包括 Google
    Hosted Libraries ([https://developers.google.com/speed/libraries/devguide](https://developers.google.com/speed/libraries/devguide))、cdnjs
    ([http://cdnjs.com/](http://cdnjs.com/))、CloudFlare ([http://www.cloudflare.com/](http://www.cloudflare.com/))
    以及其他一些。'
- en: 'Bootstrap also comes with a CDN support. They have hosted both the CSS and
    JavaScript file in their own cloud servers. Let''s try to use CDN in a Rails project
    this time, using the following steps:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 还提供了 CDN 支持。他们已经在自己的云服务器上托管了 CSS 和 JavaScript 文件。让我们尝试使用以下步骤在 Rails
    项目中使用 CDN：
- en: 'Create a new Rails project called `Rails_Bootstrap_CDN_project`:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Rails_Bootstrap_CDN_project` 的新 Rails 项目：
- en: '[PRE14]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once the project is created, make a new model called todos using scaffolding:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目创建完成后，使用脚手架创建一个名为 todos 的新模型：
- en: '[PRE15]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Do the database migration using the following command:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令进行数据库迁移：
- en: '[PRE16]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Once all the above steps are successfully completed, go to the newly created
    folder `Rails_Bootstrap_CDN_project`. Go to `app/assets/stylesheets` and open
    the `application.css` file.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有上述步骤都成功完成，前往新创建的文件夹 `Rails_Bootstrap_CDN_project`。进入 `app/assets/stylesheets`
    并打开 `application.css` 文件。
- en: 'We need to import Bootstrap''s CSS file from its CDN in this file. Hence, paste
    the following lines in it:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要从 CDN 导入 Bootstrap 的 CSS 文件到这个文件中。因此，将以下行粘贴到其中：
- en: '[PRE17]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Next, we have to include Bootstrap's JavaScript file from its CDN into our main
    view. Go to `app/views/layouts` and open the `application.html.erb` file. Paste
    the following line either just above the `</head>` tag or inside the body just
    above the `</body>` tag.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要将 Bootstrap 的 JavaScript 文件从其 CDN 包含到我们的主视图中。前往 `app/views/layouts`
    并打开 `application.html.erb` 文件。将以下行粘贴到 `</head>` 标签上方或 body 标签上方的 body 内部。
- en: '[PRE18]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: It's done! You have successfully imported all the Bootstrap files into your
    Rails package. Go ahead, run the server and check out the app. It should have
    Bootstrap's styles applied to it.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了！你已经成功将所有 Bootstrap 文件导入到你的 Rails 包中。继续前进，运行服务器并检查应用程序。它应该应用了 Bootstrap 的样式。
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Out of all the methods of importing/installing Bootstrap in a Rails project,
    I would definitely suggest you to go with the Sass way. Developers familiar with
    Sass should definitely go for it.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有将 Bootstrap 引入/安装到 Rails 项目的方法中，我肯定会建议你选择 Sass 方式。熟悉 Sass 的开发者绝对应该选择这种方式。
- en: Sass allows developers to completely customize Bootstrap's default styles and
    behavior. As we will progress with this book, we will see how to customize Bootstrap
    through Sass. Sass brings modularity to the CSS world. It brings the programming
    capability in it. You can use variables, functions, inheritance, and so on using
    Sass.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Sass 允许开发者完全自定义 Bootstrap 的默认样式和行为。随着我们继续阅读本书，我们将看到如何通过 Sass 来自定义 Bootstrap。Sass
    为 CSS 世界带来了模块化。它在其中引入了编程能力。你可以使用变量、函数、继承等功能，通过 Sass 实现。
- en: CDN is another better alternative but is very risky. CDN is generally blocked
    in many secure networks. In such cases, your application will load without any
    Bootstrap files. CDN also reduces the performance of the web app by sending an
    extra request to a different network. Hope you have got a fair idea of what Bootstrap
    is through this chapter. It is an extremely useful framework that enforces rapid
    development by the use of its HTML and CSS components. In the coming chapters,
    we will see how to use some of the popular Bootstrap components in the Rails applications.
    We will see how easy it is to create a highly responsive Rails application using
    Bootstrap.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: CDN 是另一种更好的选择，但风险很大。CDN 通常在许多安全网络中被屏蔽。在这种情况下，你的应用程序将加载而不包含任何 Bootstrap 文件。CDN
    还通过向不同网络发送额外的请求来降低 Web 应用的性能。希望你已经通过本章对 Bootstrap 有了一个公平的了解。它是一个极其有用的框架，通过其 HTML
    和 CSS 组件的使用，强制快速开发。在接下来的章节中，我们将看到如何在 Rails 应用程序中使用一些流行的 Bootstrap 组件。我们将看到使用 Bootstrap
    创建高度响应式的 Rails 应用程序是多么容易。
