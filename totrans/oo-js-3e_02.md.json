["```js\n    var a; \n    var thisIsAVariable;  \n    var _and_this_too;  \n    var mix12three; \n\n```", "```js\n    var 2three4five; \n\n```", "```js\n    var a = 1; \n\n```", "```js\n    var v1, v2, v3 = 'hello', v4 = 4, v5; \n\n```", "```js\n    var v1,  \n        v2,  \n        v3 = 'hello',  \n        v4 = 4,  \n        v5; \n\n```", "```js\n    var case_matters = 'lower'; \n    var CASE_MATTERS = 'upper';  \n    case_matters; \n    CASE_MATTER; \n\n```", "```js\n    > var case_matters = 'lower'; \n    > var CASE_MATTERS = 'upper'; \n    > case_matters; \n    \"lower\" \n    > CASE_MATTERS; \n    \"upper\" \n\n```", "```js\n    > 1 + 2; \n    3 \n\n```", "```js\n    > var a = 1; \n    > var b = 2; \n    > a + 1; \n    2 \n    > b + 2; \n    4 \n    > a + b; \n    3 \n    > var c = a + b; \n    > c; \n    3 \n\n```", "```js\n> 1 + 2;   \n3   \n\n```", "```js\n> 99.99 - 11;   \n88.99   \n\n```", "```js\n> 2 * 3;   \n6   \n\n```", "```js\n> 6 / 4;   \n1.5   \n\n```", "```js\n> 6 % 3;   \n0   \n> 5 % 3;   \n2   \n\n```", "```js\n> 4 % 2;   \n0   \n> 5 % 2;   \n1   \n\n```", "```js\n> var a = 123;    \n> var b = a++;   \n> b;   \n123   \n> a;   \n124   \n\n```", "```js\n> var a = 123;    \n> var b = ++a;   \n> b;   \n124   \n> a;   \n124   \n\n```", "```js\n> var a = 123;    \n> var b = a--;   \n> b;   \n123   \n> a;   \n122   \n\n```", "```js\n> var a = 123;    \n> var b = --a;   \n> b;   \n122   \n> a;   \n122   \n\n```", "```js\n    > var a = 5; \n    > a += 3; \n    8 \n\n```", "```js\n    > a -= 3; \n    5 \n\n```", "```js\n    > a *= 2; \n    10 \n    > a /= 5; \n    2 \n    > a %= 2; \n    0 \n\n```", "```js\n    > var n = 1; \n    > typeof n; \n    \"number\" \n    > n = 1234; \n    > typeof n; \n    \"number\" \n\n```", "```js\n    > var n2 = 1.23; \n    > typeof n; \n    \"number\" \n\n```", "```js\n    > typeof 123; \n    \"number\" \n\n```", "```js\n    > var n3 = 0377; \n    > typeof n3; \n    \"number\" \n    > n3; \n    255 \n\n```", "```js\n    console.log(0o776); //510 \n\n```", "```js\n    > var n4 = 0x00; \n    > typeof n4; \n    \"number\" \n    > n4; \n    0 \n    > var n5 = 0xff; \n    > typeof n5; \n    \"number\" \n    > n5; \n    255 \n\n```", "```js\n    console.log(parseInt('111',2)); //7 \n\n```", "```js\n    console.log(0b111); //7 \n\n```", "```js\n    > 1e1; \n    10 \n    > 1e+1; \n    10 \n    > 2e+3; \n    2000 \n    > typeof 2e+3; \n    \"number\" \n\n```", "```js\n    > 2e-3; \n    0.002 \n    > 123.456E-3; \n    0.123456 \n    > typeof 2e-3; \n    \"number\" \n\n```", "```js\n    > Infinity; \n    Infinity \n    > typeof Infinity; \n    \"number\" \n    > 1e309; \n    Infinity \n    > 1e308; \n    1e+308 \n\n```", "```js\n    > var a = 6 / 0; \n    > a; \n    Infinity \n\n```", "```js\n    > var i = -Infinity; \n    > i; \n    -Infinity \n    > typeof i; \n    \"number\" \n\n```", "```js\n    > Infinity - Infinity; \n    NaN \n    > -Infinity + Infinity; \n    NaN \n\n```", "```js\n    > Infinity - 20; \n    Infinity \n    > -Infinity * 3; \n    -Infinity \n    > Infinity / 2; \n    Infinity \n    > Infinity - 99999999999999999; \n    Infinity \n\n```", "```js\n    > typeof NaN; \n    \"number\" \n    > var a = NaN; \n    > a; \n    NaN \n\n```", "```js\n    > var a = 10 * \"f\"; \n    > a;   \n    NaN \n\n```", "```js\n    > 1 + 2 + NaN; \n    NaN \n\n```", "```js\n    console.log(Number.isNaN('test')); //false : Strings are not NaN \n    console.log(Number.isNaN(123)); //false : integers are not NaN \n    console.log(Number.isNaN(NaN)); //true : NaNs are NaNs \n    console.log(Number.isNaN(123/'abc')); //true : 123/'abc' results in an NaN \n\n```", "```js\n    console.log(isNaN('test')); //true \n\n```", "```js\n    function isNumber(value) { \n      return typeof value==='number' && !Number.isNaN(value); \n    } \n\n```", "```js\n    console.log(Number.isInteger('test')); //false \n    console.log(Number.isInteger(Infinity)); //false \n    console.log(Number.isInteger(NaN)); //false \n    console.log(Number.isInteger(123)); //true \n    console.log(Number.isInteger(1.23)); //false \n\n```", "```js\n    > var s = \"some characters\"; \n    > typeof s; \n    \"string\" \n    > var s = 'some characters and numbers 123 5.87'; \n    > typeof s; \n    \"string\" \n\n```", "```js\n    > var s = '1'; \n    > typeof s; \n    \"string\" \n\n```", "```js\n    > var s = \"\"; typeof s; \n    \"string\" \n\n```", "```js\n    > var s1 = \"web\";  \n    > var s2 = \"site\";  \n    > var s = s1 + s2;  \n    > s; \n    \"website\" \n    > typeof s; \n    \"string\" \n\n```", "```js\n    > var s = '1';  \n    > s = 3 * s;  \n    > typeof s; \n    \"number\" \n    > s; \n    3 \n    > var s = '1'; \n    > s++; \n    > typeof s; \n    \"number\" \n    > s; \n    2 \n\n```", "```js\n    > var s = \"100\"; typeof s; \n    \"string\" \n    > s = s * 1; \n    100 \n    > typeof s; \n    \"number\" \n\n```", "```js\n    > var movie = '101 dalmatians'; \n    > movie * 1; \n    NaN \n\n```", "```js\n    > var n = 1; \n    > typeof n; \n    \"number\" \n    > n = \"\" + n; \n    \"1\" \n    > typeof n; \n    \"string\" \n\n```", "```js\n> var s = 'I don't know';   \n> var s = \"I don't know\";   \n> var s = \"I don't know\";   \n> var s = '\"Hello\",   he said.';   \n> var s = \"\"Hello\",   he said.\";   \nEscaping the escape:   \n> var s = \"1\\\\2\"; s;   \n\"1\\2\"   \n\n```", "```js\n> var s = '\\n1\\n2\\n3\\n';   \n> s;   \n\"   \n1   \n2   \n3   \n\"   \n\n```", "```js\n> var s = '1\\r2';   \n> var s = '1\\n\\r2';   \n> var s = '1\\r\\n2';   \n\n```", "```js\n> s;   \n\"1   \n2\"   \n\n```", "```js\n> var s = \"1\\t2\";   \n> s;   \n\"1 2\"   \n\n```", "```js\n> \"\\u0421\\u0442\\u043E\\u044F\\u043D\";   \n\"Стoян\"   \n\n```", "```js\n    var log_level=\"debug\"; \n    var log_message=\"meltdown\"; \n    console.log(\"Log level: \"+ log_level + \n      \" - message : \" + log_message); \n    //Log level: debug - message : meltdown \n\n```", "```js\n    console.log(`Log level: ${log_level} - message: ${log_message}`) \n\n```", "```js `` ```", "```js\n    var a = 10; \n    var b = 10; \n    console.log(`Sum is ${a + b} and Multiplication would be ${a * b}.`);   \n    //Sum is 20 and Multiplication would be 100\\. \n\n```", "```js\n    var a = 10; \n    var b = 10; \n    function sum(x,y){ \n      return x+y \n    } \n    function multi(x,y){ \n      return x*y \n    } \n    console.log(`Sum is ${sum(a,b)} and Multiplication \n      would be ${multi(a,b)}.`); \n\n```", "```js\n    console.log(\"This is line one \\n\" + \"and this is line two\"); \n\n```", "```js\n    console.log(`This is line one and this is line two`); \n\n```", "```js\n    transform`Name is ${lastname}, ${firstname} ${lastname}` \n\n```", "```js\n    transform([[\"Name is \", \", \", \" \"],firstname, lastname) \n\n```", "```js\n    function transform(strings, ...substitutes){ \n      console.log(strings[0]); //\"Name is\" \n      console.log(substitutes[0]); //Bond \n    }   \n    var firstname = \"James\"; \n    var lastname = \"Bond\" \n    transform`Name is ${lastname}, ${firstname} ${lastname}` \n\n```", "```js\n    function rawTag(strings,...substitutes){ \n      console.log(strings.raw[0]) \n    } \n    rawTag`This is a raw text and \\n are not treated differently` \n    //This is a raw text and \\n are not treated differently \n\n```", "```js\n    > var b = true;  \n    > typeof b; \n    \"boolean\" \n    > var b = false;  \n    > typeof b; \n    \"boolean\" \n\n```", "```js\n    > var b = \"true\";  \n    > typeof b; \n    \"string\" \n\n```", "```js\n    ! - logical NOT (negation) \n    && - logical AND \n    || - logical OR \n\n```", "```js\n    > var b = !true; \n    > b; \n    false \n\n```", "```js\n    > var b = !!true; \n    > b; \n    true \n\n```", "```js\n    > var b = \"one\"; \n    > !b; \n    false \n\n```", "```js\n    > var b = \"one\"; \n    > !!b; \n    true \n\n```", "```js\n    > var b1 = true, b2 = false; \n    > b1 || b2; \n    true \n    > b1 && b2; \n    false \n\n```", "```js\n    > true && true && false && true; \n    false \n    > false || true || false; \n    true \n\n```", "```js\n    > false && false || true && true; \n    true \n    > false && (false || true) && true; \n    false \n\n```", "```js\n    > 1 + 2 * 3; \n    7 \n\n```", "```js\n    > 1 + (2 * 3); \n    7 \n\n```", "```js\n    > false && false || true && true; \n    true \n\n```", "```js\n    > (false && false) || (true && true); \n    true \n\n```", "```js\n    > true || false || true || false || true; \n    true \n\n```", "```js\n    > var b = 5; \n    > true || (b = 6); \n    true \n    > b; \n    5 \n    > true && (b = 6); \n    6 \n    > b; \n    6 \n\n```", "```js\n    > true || \"something\"; \n    true \n    > true && \"something\"; \n    \"something\" \n    > true && \"something\" && true; \n    true \n\n```", "```js\n    > var mynumber = mynumber || 10; \n    > mynumber; \n    10 \n\n```", "```js\n    > var mynumber = 0; \n    > var mynumber = mynumber || 10; \n    > mynumber; \n    10 \n\n```", "```js\n> 1 == 1;   \ntrue   \n> 1 == 2;   \nfalse   \n> 1 =='1';   \ntrue   \n\n```", "```js\n> 1 === '1';   \nfalse   \n> 1 === 1;   \ntrue   \n\n```", "```js\n> 1 != 1;   \nfalse   \n> 1 != '1';   \nfalse   \n> 1 != '2';   \ntrue   \n\n```", "```js\n> 1 !== 1;   \nfalse   \n> 1 !== '1';   \ntrue   \n\n```", "```js\n> 1 > 1;   \nfalse   \n> 33 > 22;   \ntrue   \n\n```", "```js\n> 1 >= 1;   \ntrue   \n\n```", "```js\n> 1 < 1;   \nfalse   \n> 1 < 2;   \ntrue   \n\n```", "```js\n> 1 <= 1;   \ntrue   \n> 1 <= 2;   \ntrue   \n\n```", "```js\n    > NaN == NaN; \n    false \n\n```", "```js\n    > foo; \n    ReferenceError: foo is not defined \n\n```", "```js\n    > typeof foo; \n    \"undefined\" \n\n```", "```js\n    > var somevar; \n    > somevar; \n    > typeof somevar; \n    \"undefined\" \n\n```", "```js\n    > var somevar; \n    > somevar === undefined; \n    true \n\n```", "```js\n    > var somevar = null; \n    null \n    > somevar; \n    null \n    > typeof somevar; \n    \"object\" \n\n```", "```js\n    > var i = 1 + undefined; \n    > i; \n    NaN \n    > var i = 1 + null; \n    > i; \n    1 \n\n```", "```js\n            > 1 * undefined; \n\n    ```", "```js\n            > 1 * null; \n            0 \n\n    ```", "```js\n            > !!undefined; \n            false \n            > !!null; \n            false \n\n    ```", "```js\n            > \"value: \" + null; \n            \"value: null\" \n            > \"value: \" + undefined; \n            \"value: undefined\" \n\n    ```", "```js\n    var atom = Symbol() \n\n```", "```js\n    var atom = new Symbol() //Symbol is not a constructor \n\n```", "```js\n    var atom = Symbol('atomic symbol') \n\n```", "```js\n    console.log(Symbol() === Symbol()) //false \n    console.log(Symbol('atom') === Symbol('atom')) // false \n\n```", "```js\n    > var a = []; \n\n```", "```js\n    > var a = [1, 2, 3]; \n\n```", "```js\n    > a; \n    [1, 2, 3] \n\n```", "```js\n    > a[0]; \n    1 \n    > a[1]; \n    2 \n\n```", "```js\n    > a[2] = 'three'; \n    \"three\" \n    > a; \n    [1, 2, \"three\"] \n\n```", "```js\n    > a[3] = 'four'; \n    \"four\" \n    > a; \n    [1, 2, \"three\", \"four\"] \n\n```", "```js\n    > var a = [1, 2, 3]; \n    > a[6] = 'n`xew'; \n    \"new\" \n    > a; \n    [1, 2, 3, undefined x 3, \"new\"] \n\n```", "```js\n    > var a = [1, 2, 3]; \n    > delete a[1]; \n    true \n    > a; \n    [1, undefined, 3] \n    > typeof a[1]; \n    \"undefined\" \n\n```", "```js\n    > var a = [1, \"two\", false, null, undefined]; \n    > a; \n    [1, \"two\", false, null, undefined] \n    > a[5] = [1, 2, 3]; \n    [1, 2, 3] \n    > a; \n    [1, \"two\", false, null, undefined, Array[3]] \n\n```", "```js\n    > var a = [[1, 2, 3], [4, 5, 6]]; \n    > a; \n    [Array[3], Array[3]] \n\n```", "```js\n    > a[0]; \n    [1, 2, 3] \n\n```", "```js\n    > a[0][0]; \n    1 \n    > a[1][2]; \n    6 \n\n```", "```js\n    > var s = 'one'; \n    > s[0]; \n    \"o\" \n    > s[1]; \n    \"n\" \n    > s[2]; \n    \"e\" \n\n```", "```js\n    { \n      var a = 1; \n      var b = 3; \n    } \n\n```", "```js\n    { \n      var a = 1; \n      var b = 3; \n      var c, d; \n      { \n        c = a + b; \n        { \n          d = a - b; \n        } \n      } \n    } \n\n```", "```js\n    var result = '', a = 3; \n    if (a > 2) { \n      result = 'a is greater than 2'; \n    } \n\n```", "```js\n    if (a > 2) { \n      result = 'a is greater than 2'; \n    } else { \n      result = 'a is NOT greater than 2'; \n    } \n\n```", "```js\n    if (a > 2 || a < -2) { \n      result = 'a is not between -2 and 2'; \n    } else if (a === 0 && b === 0) { \n      result = 'both a and b are zeros'; \n    } else if (a === b) { \n      result = 'a and b are equal'; \n    } else { \n      result = 'I give up'; \n    } \n\n```", "```js\n    if (a === 1) { \n      if (b === 2) { \n        result = 'a is 1 and b is 2'; \n      } else { \n        result = 'a is 1 but b is definitely not 2'; \n     } \n    } else { \n      result = 'a is not 1, no idea about b'; \n    } \n\n```", "```js\n    > var result = ''; \n    > if (somevar) {  \n        result = 'yes';  \n      } \n    ReferenceError: somevar is not defined \n    > result;   \n    \"\" \n\n```", "```js\n    > var result = \"\"; \n    > if (typeof somevar !== \"undefined\") {  \n        result = \"yes\";  \n      } \n    > result; \n    \"\" \n\n```", "```js\n    > var somevar; \n    > if (typeof somevar !== \"undefined\") {  \n        result = \"yes\";  \n      } \n    > result; \n    \"\" \n    > somevar = undefined; \n    > if (typeof somevar !== \"undefined\") {  \n        result = \"yes\";  \n      } \n    > result; \n    \"\" \n\n```", "```js\n    > somevar = 123; \n    > if (typeof somevar !== \"undefined\") {  \n        result = 'yes';  \n      } \n    > result; \n    \"yes\" \n\n```", "```js\n    var a = 1; \n    var result = ''; \n    if (a === 1) { \n      result = \"a is one\"; \n    } else { \n      result = \"a is not one\"; \n    } \n\n```", "```js\n    > var a = 1; \n    > var result = (a === 1) ? \"a is one\" : \"a is not one\"; \n\n```", "```js\n    > var a = 123; \n    > a = a > 100 ? 100 : a < 50 ? 50: a; \n    > a; \n    100 \n\n```", "```js\n    > var a = 123; \n    > a = (a > 100 ? 100 : a < 50) ? 50 : a; \n    > a; \n    50 \n    > var a = 123; \n    > a = a > 100 ? 100 : (a < 50 ? 50 : a); \n    > a; \n    100 \n\n```", "```js\n    var a = '1', \n        result = ''; \n    switch (a) { \n    case 1: \n      result = 'Number 1'; \n      break; \n    case '1': \n      result = 'String 1'; \n      break; \n    default: \n      result = 'I don't know'; \n      break; \n    } \n\n```", "```js\n    var i = 0; \n    while (i < 10) { \n      i++; \n    } \n\n```", "```js\n    var i = 0; \n    do { \n      i++; \n    } while (i < 10); \n\n```", "```js\n    var punishment = ''; \n    for (var i = 0; i < 100; i++) { \n      punishment += 'I will never do this again, '; \n    } \n\n```", "```js\n    for (var i = 0, punishment = ''; i < 100; i++) { \n      punishment += 'I will never do this again, '; \n    } \n\n```", "```js\n    for ( \n      var i = 0, punishment = ''; \n      i < 100; \n      i++, punishment += 'I will never do this again, ') { \n\n      // nothing here \n\n    } \n\n```", "```js\n    var i = 0, punishment = ''; \n    for (;;) { \n      punishment += 'I will never do this again, '; \n      if (++i == 100) { \n        break; \n      } \n    } \n\n```", "```js\n    var res = '\\n'; \n    for (var i = 0; i < 10; i++) { \n      for (var j = 0; j < 10; j++) { \n        res += '* '; \n      } \n      res += '\\n'; \n    } \n\n```", "```js\n    \" \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    * * * * * * * * * *  \n    \" \n\n```", "```js\n    var res = '\\n', i, j; \n    for (i = 1; i <= 7; i++) { \n      for (j = 1; j <= 15; j++) { \n        res += (i * j) % 8 ? ' ' : '*'; \n      } \n      res += '\\n'; \n    } \n\n```", "```js\n    \" \n           *        \n       *   *   *    \n           *        \n     * * * * * * *  \n           *        \n       *   *   *    \n           *        \n    \" \n\n```", "```js\n    // example for information only \n    // for-in loops are used for objects \n    // regular for is better suited for arrays \n\n    var a = ['a', 'b', 'c', 'x', 'y', 'z']; \n\n    var result = '\\n'; \n\n    for (var i in a) { \n      result += 'index: ' + i + ', value: ' + a[i] + '\\n'; \n    } \n    The result is: \n    \" \n    index: 0, value: a \n    index: 1, value: b  \n    index: 2, value: c  \n    index: 3, value: x \n    index: 4, value: y  \n    index: 5, value: z \n    \" \n\n```", "```js\n    // beginning of line \n\n    var a = 1; // anywhere on the line \n\n    /* multi-line comment on a single line */ \n\n    /* \n      comment that spans several lines \n    */ \n\n```", "```js\n            > var a; typeof a; \n            > var s = '1s'; s++; \n            > !!\"false\"; \n            > !!undefined; \n            > typeof -Infinity; \n            > 10 % \"0\"; \n            > undefined == null; \n            > false === \"\"; \n            > typeof \"2E+2\"; \n            > a = 3e+3; a++; \n\n    ```", "```js\n            > var v = v || 10; \n\n    ```"]