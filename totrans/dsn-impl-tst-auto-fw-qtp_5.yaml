- en: Chapter 5. Deploying and Maintaining Frameworks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 部署和维护框架
- en: 'In the previous chapter we learned how to design and create a test framework.
    The key considerations while deploying the framework are portability and configuration
    for the underlying environment. Debugging is an important pre deployment activity.
    In this chapter we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何设计和创建测试框架。在部署框架时的关键考虑因素是可移植性和底层环境的配置。调试是一个重要的预部署活动。在本章中，我们将讨论以下内容：
- en: Script debugging techniques in QTP
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QTP中的脚本调试技术
- en: Pre deployment review checklist
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预部署审查清单
- en: Customizing logs and filtering log messages
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义日志和过滤日志消息
- en: Deploying the framework
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署框架
- en: Maintaining the frameworks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护框架
- en: Predeployment
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预部署
- en: 'Once the testing of the framework is complete and the bugs have been raised,
    we will start with debugging. This process tries to find what went wrong in the
    framework by looking at the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦框架测试完成并且已经提出错误，我们将开始调试。此过程试图通过查看以下内容来找出框架中出了什么问题：
- en: How it failed
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 失败的原因
- en: Where it failed
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 失败的地方
- en: How to fix the bugs
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何修复错误
- en: Plan the debugging from the design phase and implement it by developing custom
    and error logs. Provide the mechanism to filter, enable, and disable the logs
    and features. This helps to debug the scripts both in the development and maintenance
    phases of framework designing. QTP provides various options for debugging scripts,
    actions, and functional libraries.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计阶段计划调试，并通过开发自定义和错误日志来实现。提供过滤、启用和禁用日志和功能的机制。这有助于在框架设计的开发和维护阶段调试脚本。QTP为调试脚本、动作和功能库提供了各种选项。
- en: Debugging with QTP
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用QTP进行调试
- en: QTP provides various ways to debug scripts that are a part of functional libraries
    or actions. To debug the script, execute it from the start to a certain step in
    the script or from a certain step to the end of the script or action. The following
    section describes the various techniques provided by QTP to debug the script.
    Ensure that the application is open at the relevant location before starting to
    debug the scripts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: QTP为调试属于功能库或动作的脚本提供了各种方法。要调试脚本，从脚本或动作的开始执行到某个步骤，或从某个步骤执行到脚本或动作的结束。以下部分描述了QTP提供的各种调试脚本的技术。在开始调试脚本之前，请确保应用程序已打开相关位置。
- en: Run to step
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行到步骤
- en: When this option is clicked on, it runs the test from the beginning of the script
    or action (**Expert View** only) to the current location in the test or action,
    and stops the execution at a particular step. To run the test from the beginning,
    navigate to **Resources** | **Run to Step** or press *Ctrl* + *F10*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击此选项时，它将从脚本或动作的开始（仅限**专家视图**）运行测试到测试或动作的当前位置，并在特定步骤停止执行。要从开始运行测试，导航到**资源**
    | **运行到步骤**或按*Ctrl* + *F10*。
- en: Debug from step
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从步骤调试
- en: To debug from a step, instead of the beginning of the script or action, use
    the **Debug from Step** option; it allows you to debug from a specific step in
    the test or action. To debug from a specific step, navigate to **Resources** |
    **Debug from Step**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要从步骤进行调试，而不是从脚本或动作的开始，使用**从步骤调试**选项；它允许您从测试或动作的特定步骤进行调试。要从特定步骤进行调试，导航到**资源**
    | **从步骤调试**。
- en: Run from step
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从步骤运行
- en: Instruct QTP to run the action from a particular step instead of from the beginning
    of the script or action. To do this, navigate to **Resources** | **Run from Step**.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 指示QTP从特定步骤而不是从脚本的开始或动作的开始运行动作。为此，导航到**资源** | **从步骤运行**。
- en: In the **Expert View**, the **Run from Step** option runs the test from the
    selected script to the end of the action (or until it reaches a breakpoint). Using
    the **Run from Step** option in this mode ignores any iteration. However, if the
    action contains nested actions, QTP runs the nested actions for the defined number
    of iterations of the nested action.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在**专家视图**中，**从步骤运行**选项将从所选脚本运行到动作的结束（或直到达到断点）。在此模式下使用**从步骤运行**选项将忽略任何迭代。然而，如果动作包含嵌套动作，QTP将运行嵌套动作，直到达到嵌套动作定义的迭代次数。
- en: Run from action
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从动作运行
- en: This option runs the test from the beginning of the script to the beginning
    of the selected action and then pauses the run session. Navigate to the **Test
    Flow** pane and right-click on **Run from Action**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项将从脚本的开始运行测试到所选动作的开始，然后暂停运行会话。导航到**测试流程**面板，右键单击**从动作运行**。
- en: Debug from action
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从动作调试
- en: Instruct QTP to begin a debug session and pause it at the beginning of the selected
    action. Navigate to the **Test Flow** pane and right-click on **Debug from Action**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 指示QTP从所选动作的开始处开始调试会话并暂停。导航到**测试流程**面板，然后右键单击**从动作开始调试**。
- en: Run to action
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行到动作
- en: Instruct QTP to start a run session from the beginning of the selected action.
    Navigate to the **Test Flow** pane and right-click on **Run to Action**.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 指示QTP从所选动作的开始处开始运行会话。导航到**测试流程**面板，然后右键单击**运行到动作**。
- en: Debugging a functional library
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试函数库
- en: 'Creating a framework requires creating separate function libraries. For better
    maintenance, the steps to debug the functional library are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建框架需要创建单独的函数库。为了更好的维护，调试函数库的步骤如下：
- en: Associate the function library with a test.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将函数库与一个测试关联起来。
- en: In your test, insert a call to at least one of the functions defined in the
    function library.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的测试中，插入对函数库中定义的至少一个函数的调用。
- en: Run the test, suspend the run session, and debug the function library.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行测试，挂起运行会话，并调试函数库。
- en: Tip
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: During a debug session, all documents are read-only and cannot be edited. To
    edit a document during a debug session, we have to stop the debug session.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在调试会话期间，所有文档都是只读的，不能编辑。要在调试会话期间编辑文档，我们必须停止调试会话。
- en: The execution marker may not be displayed correctly when the test script uses
    the `ExecuteFile` statement.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当测试脚本使用`ExecuteFile`语句时，执行标记可能无法正确显示。
- en: Reviewing the checklist for predeployment
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署前的检查清单审查
- en: 'Before deployment, ensure that we review the following points (that exist in
    scripts or are taken care of) for lower maintenance cost of the framework:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署之前，确保我们审查以下点（存在于脚本中或已妥善处理）以降低框架的维护成本：
- en: The test should always have a known start point.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试应该始终有一个已知的起点。
- en: It should always end with the same start point.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应始终以相同的起点结束。
- en: The test should start from a specific point and ensure that the entire infrastructure
    is ready for execution. It would be ideal if we create the script to check the
    resources that are placed for test execution. For example, if the script starts
    its execution by starting the AUT and closes the application at the end of execution,
    the next iteration or test will start from the start point for opening an application.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试应该从特定点开始，并确保整个基础设施已准备好执行。如果脚本通过启动AUT并在执行结束时关闭应用程序来开始其执行，则下一次迭代或测试将从打开应用程序的起点开始。
- en: 'The test should clean up the resources: for example, closing MS Excel, closing
    files, closing tests, and so on.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试应该清理资源：例如，关闭MS Excel、关闭文件、关闭测试等。
- en: 'Configure the values instead of hardcoding; use the environment variables as
    shown in the code snippet that follows, or use dictionary objects:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置值而不是硬编码；使用代码片段中显示的环境变量，或使用字典对象：
- en: '[PRE0]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Appropriate comments and script header
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适当的注释和脚本头部
- en: 'The header allows us to read a brief description about the function or script
    as shown. This helps to make scripts and functions readable and maintainable:'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标头允许我们阅读关于函数或脚本的简要描述，如下所示。这有助于使脚本和函数易于阅读和维护：
- en: '[PRE1]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Readability and appropriate documentation.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可读性和适当的文档。
- en: Script should be maintainable and easy to modify
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本应该是可维护的和易于修改的
- en: The script and function header improve readability and allow modification of
    the code with ease, since it reveals key information and reduces maintenance time.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 脚本和函数头部提高了可读性，并允许轻松修改代码，因为它揭示了关键信息并减少了维护时间。
- en: Error handling and snapshot for errors
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理和错误快照
- en: Ensure that the script contains the code to capture the snapshot using custom
    libraries, the `CaptureBitmap` method, or the `CaptureBitmap` of desktop utility.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保脚本包含使用自定义库、`CaptureBitmap`方法或桌面实用程序的`CaptureBitmap`来捕获快照的代码。
- en: The test should reveal maximum information in case an error occurs.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生错误，测试应该揭示最大信息。
- en: The error messages should be clear and concise.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 错误信息应该是清晰和简洁的。
- en: Logging utilities
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志工具
- en: The logging utilities are a must to provide information and error logs.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日志工具是必须的，以提供信息和错误日志。
- en: Code should have proper synchronization
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码应该有适当的同步
- en: Ensure that the code has the ability to deal with synchronization issues by
    using `wait`, `wait` property, `exist`, `enable`, and `sync.`
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保代码能够通过使用`wait`、`wait`属性、`exist`、`enable`和`sync`来处理同步问题。
- en: Graceful exit
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优雅退出
- en: Ensure that the code appropriately allows graceful exit using `Exit` `Function`,
    `Exit` `For`, `Exit` `Test`, and `Exit` `Action`.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保代码能够适当地使用`Exit` `Function`、`Exit` `For`、`Exit` `Test`和`Exit` `Action`实现优雅退出。
- en: Custom logs
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义日志
- en: 'All of the given techniques are useful to test the scripts but when we design
    the framework, there must be some abstraction and a set of layers to reach the
    actual point of error. The custom logs reveal information about how and where
    the error condition has occurred. A good logging mechanism displays the relevant
    message and snapshots of the error as well. Custom logs should provide the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的这些技术都对测试脚本有用，但当我们设计框架时，必须有某些抽象和一系列层来达到实际错误点。自定义日志揭示了错误条件发生的方式和位置。良好的日志机制会显示相关的消息和错误的快照。自定义日志应提供以下内容：
- en: Enabling logging
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用日志记录
- en: Disabling logging
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用日志记录
- en: Filtering logs
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤日志
- en: Enabling logging
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用日志记录
- en: The simplest way to debug is to use the `print` or `MsgBox` statements. The
    `Print` statement displays the message in the QTP log window and `MsgBox` displays
    the message box where the user needs to click on **OK** explicitly. It is not
    usually appreciable to use the `MsgBox` option since it requires human intervention,
    but it helps to fix the issues quickly in a few cases.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 调试的最简单方法是使用`print`或`MsgBox`语句。`Print`语句在QTP日志窗口中显示消息，而`MsgBox`显示消息框，用户需要明确点击**确定**。通常不推荐使用`MsgBox`选项，因为它需要人工干预，但在某些情况下它有助于快速解决问题。
- en: 'The debug version of the framework allows us to print or display messages to
    reveal the information required to find issues. QTP also provides the `Reporter`
    object to report the messages into the **Run Result** window. Apart from the `print`
    and `MsgBox` statements, logging is an important tool for debugging. The example
    that follows demonstrates how to enable or disable logging:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 框架的调试版本允许我们打印或显示消息以揭示查找问题所需的信息。QTP还提供了`Reporter`对象，可以将消息报告到**运行结果**窗口。除了`print`和`MsgBox`语句外，日志记录是调试的重要工具。以下示例演示了如何启用或禁用日志记录：
- en: Use the `Filter` property of the `Reporter` object with the `rfEnableAll` option
    to display all the messages using the `Reporter` object
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`Reporter`对象的`Filter`属性和`rfEnableAll`选项，通过`Reporter`对象显示所有消息
- en: Use the `Debug` variable in the environment to turn the log messages `ON`
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用环境中的`Debug`变量将日志消息`ON`
- en: Use the `MsgBox` statement to display the message in the window
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`MsgBox`语句在窗口中显示消息
- en: Use the `print` statement to print the values in QTP's print log
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`print`语句在QTP的打印日志中打印值
- en: '[PRE2]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Disabling logs
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用日志
- en: 'Disabling the log messages does just the opposite of enabling the messages:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用日志消息与启用消息正好相反：
- en: Use the `Filter` property of the `Reporter` object with the `rfDisableAll` option
    to display all the messages
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`Reporter`对象的`Filter`属性和`rfDisableAll`选项显示所有消息
- en: Use the `Debug` variable in the environment to turn the log messages `OFF`
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用环境中的`Debug`变量将日志消息`OFF`
- en: Comment using the `MsgBox` statement
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`MsgBox`语句进行注释
- en: Comment using the `print` statement
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`print`语句进行注释
- en: Filtering logs
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤日志
- en: 'The log message displays one of the following statuses when a test step has
    been executed:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当测试步骤执行后，日志消息会显示以下状态之一：
- en: Error
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误
- en: Warning
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警告
- en: Fail
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 失败
- en: Done or Info
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成或信息
- en: In some cases, Fatal is also a category for the log message type.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，致命也是日志消息类型的分类之一。
- en: 'QTP''s `Reporter` object allows us to display four types of messages using
    the `ReportEvent` method. The syntax for `ReportEvent` is shown as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: QTP的`Reporter`对象允许我们使用`ReportEvent`方法显示四种类型的消息。`ReportEvent`的语法如下所示：
- en: '[PRE3]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `ReportEvent` method reports an event to the **Run Result** window. This
    method allows us to notify the user for various events.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`ReportEvent`方法将事件报告到**运行结果**窗口。此方法允许我们通知用户各种事件。'
- en: 'The following is the status of the **Run Result** window:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为**运行结果**窗口的状态：
- en: '| Event status | Action |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 事件状态 | 操作 |'
- en: '| --- | --- |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `0` or `micPass` | This reports the passed message to the **Run Result**
    window |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `0`或`micPass` | 这会将通过的消息报告到**运行结果**窗口 |'
- en: '| `1` or `micFail` | This reports the failed message to the **Run Result**
    window |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `1`或`micFail` | 这会将失败的消息报告到**运行结果**窗口 |'
- en: '| `2` or `micDone` | This reports the completion of the step in the **Run Result**
    window |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `2`或`micDone` | 这会在**运行结果**窗口中报告步骤的完成 |'
- en: '| `3` or `micWarning` | This sends a warning message to the **Run Result**
    window |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `3`或`micWarning` | 这会将警告消息发送到**运行结果**窗口 |'
- en: 'The following is an example of using the `ReportEvent` method:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用`ReportEvent`方法的示例：
- en: '[PRE4]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once the `ReportEvent` method is executed, the result is shown in the **Run
    Result** window. The following screenshot shows the icon along with the message
    to indicate the possible results:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦执行了`ReportEvent`方法，结果将在**运行结果**窗口中显示。以下截图显示了图标以及表示可能结果的提示信息：
- en: '![Filtering logs](img/1027EN_05_01.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![过滤日志](img/1027EN_05_01.jpg)'
- en: 'The following table lists the `Filter` options in the `Reporter` object:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了`Reporter`对象中的`Filter`选项：
- en: '| EventStatus | Action |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 事件状态 | 操作 |'
- en: '| --- | --- |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `0` or `rfEnableAll` | Reports all the events to the **Run Result** window
    |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `0` 或 `rfEnableAll` | 将所有事件报告到**运行结果**窗口 |'
- en: '| `1` or `rfEnableErrorsAndWarnings` | Reports the warning and failed status
    to the **Run Result** window |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `1` 或 `rfEnableErrorsAndWarnings` | 向**运行结果**窗口报告警告和失败状态 |'
- en: '| `2` or `rfEnableErrorsOnly` | Reports the failed status to the **Run Result**
    window |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `2` 或 `rfEnableErrorsOnly` | 向**运行结果**窗口报告失败状态 |'
- en: '| `3` or `rfDisableAll` | Does not report any status to the **Run Result**
    window |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `3` 或 `rfDisableAll` | 不向**运行结果**窗口报告任何状态 |'
- en: The test version versus the debug version
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试版本与调试版本的区别
- en: 'In the framework test automation, we write the debug support code (debug code)
    that will not be released in the final program. The debug code makes sure that
    the code is correct at a certain point, or that it has correct values. The debug
    code can also be commented and uncommented on as well. This may be time consuming,
    therefore we prefer ON/OFF debugging. The debug code is not executed in the test
    version, but in case we need to debug the code we can enable the debug code. This
    becomes the debug version. The following sample code shows how we can enable and
    disable logging:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在框架测试自动化中，我们编写不会在最终程序中发布的调试支持代码（调试代码）。调试代码确保代码在某个点上正确，或者具有正确的值。调试代码也可以进行注释和取消注释。这可能会很耗时，因此我们更喜欢开启/关闭调试。调试代码在测试版本中不执行，但如果我们需要调试代码，我们可以启用调试代码。这变成了调试版本。以下示例代码显示了我们可以如何启用和禁用日志记录：
- en: '[PRE5]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Deployment
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署
- en: 'After the test automation framework is completed and tested, it needs to be
    released for automation engineers, SMEs, or even business users. The release activity
    follows from the completed development process. It includes all the operations
    to prepare a system for assembly and transfer it for use. Therefore, it must determine
    the resources required to operate and collect information for carrying out subsequent
    activities of the deployment process. Deployment is a process that starts after
    release. In the release process, the following artifacts are delivered but may
    vary based on the project''s need:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试自动化框架完成并测试后，需要将其发布给自动化工程师、领域专家或甚至业务用户。发布活动从完成后的开发流程中继而来。它包括所有为组装系统做准备并将系统用于使用的操作。因此，它必须确定操作所需的资源并收集信息以执行部署过程的后续活动。部署是在发布之后开始的过程。在发布过程中，以下工件将被交付，但可能根据项目的需求而有所不同：
- en: Release notes
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布说明
- en: Mapping document (traceability matrix)
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档映射（可追溯性矩阵）
- en: Design/architecture document
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计/架构文档
- en: Configuration files
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置文件
- en: Deployment guide
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署指南
- en: User guide
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户指南
- en: Deployment is a set of activities that makes scripts (frameworks) available
    for use. During the process of deployment, make sure that the QTP-required patches
    and add-ins are installed. Ensure that all the required parameters are configured.
    After deployment, the test automation repository is created in the local drive's
    folder or in the test management tool.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 部署是一系列使脚本（框架）可供使用的活动。在部署过程中，确保安装了QTP所需的补丁和插件。确保所有必需的参数都已配置。部署后，测试自动化存储库将在本地驱动器的文件夹或测试管理工具中创建。
- en: Maintenance
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护
- en: 'Maintenance includes error corrections, enhancement of capabilities, deletion
    of obsolete capabilities, and optimization. It is a process of evaluating, controlling,
    and making modifications that lead to changes in the code, GUI and flows of the
    application, and automation scripts. In a typical software project life cycle,
    maintenance leads to enhancement. A common perception of maintenance is that it
    merely involves fixing defects. All maintenance activities can be categorized
    into four classes as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 维护包括错误纠正、功能增强、删除过时功能以及优化。这是一个评估、控制和进行修改的过程，导致代码、GUI和应用程序流程以及自动化脚本的更改。在典型的软件项目生命周期中，维护导致增强。维护的常见观念是它仅涉及修复缺陷。所有维护活动都可以分为以下四个类别：
- en: '**Adaptive**: This modifies the system to cope with changes in the environment
    or AUT.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适应性**：这修改了系统以应对环境或AUT的变化。'
- en: '**Perfective**: This implements new or changed user requirements, which concern
    functional enhancements.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完善性**：这实现了新的或更改的用户需求，这些需求涉及功能增强。'
- en: '**Corrective**: This involves diagnosing and fixing errors, possibly the ones
    found by users.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**纠正性**：这涉及诊断和修复错误，可能是用户发现的错误。'
- en: '**Preventive**: This increases software maintainability or reliability to prevent
    problems in the future.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预防性**：这增加了软件的可维护性或可靠性，以防止未来出现问题。'
- en: 'One or more of the following are kept up-to-date as the AUT is updated over
    time:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 随着自动测试（AUT）随时间更新，以下之一或多个将保持最新：
- en: '**Test objects:** When a new version or patch is released it may be required
    to change test objects, their properties, and adding or removing the test objects.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试对象**：当发布新版本或补丁时，可能需要更改测试对象、它们的属性，以及添加或删除测试对象。'
- en: '**Parameters in OR:** It may be required to change the OR parameters that reflect
    the changes in the AUT. Update the object descriptions as the object properties
    may change; this can be done in the following two ways:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OR中的参数**：可能需要更改反映AUT变化的OR参数。随着对象属性可能发生变化，更新对象描述；这可以通过以下两种方式完成：'
- en: Manually change the object properties
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动更改对象属性
- en: Run the test in the **Update Run** mode or **Maintenance Run** mode
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**更新运行**模式或**维护运行**模式下运行测试
- en: Both of these modes are explained in the following section.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种模式将在以下部分中解释。
- en: We can delete, change, or add new releases of the test object; this results
    in the removal or addition of test objects. The test objects are added or removed
    and redistributed to the OR with changes.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以删除、更改或添加测试对象的新版本；这导致测试对象的删除或添加。测试对象被添加或删除，并随着更改重新分配到OR中。
- en: Script/library maintenance
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚本/库维护
- en: With changes in the flow, the addition of functionality and modification in
    the scripts and libraries needs to be updated. While designing the framework,
    consider how the scripts and functional libraries should be changed. In the design
    phase, make sure that the design is robust enough to accommodate minimal changes
    or no changes at all.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 随着流程的变化，功能性和脚本和库的修改需要更新。在设计框架时，考虑脚本和功能库应该如何更改。在设计阶段，确保设计足够健壮，足以适应最小或无变化。
- en: Automation test repository maintenance
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化测试库维护
- en: To maintain the frameworks, we need to periodically clean up the obsolete resources
    or documents, such as log files, result folders, and test data.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了维护框架，我们需要定期清理过时的资源或文档，例如日志文件、结果文件夹和测试数据。
- en: QTP provides two options for maintaining scripts. These are explained in the
    following section.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: QTP提供了两种维护脚本的方法。这些将在以下部分中解释。
- en: The Maintenance Run mode
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**维护运行模式**'
- en: When the script runs in the **Maintenance Run** mode and the object has changed,
    it offers to update the properties and steps or keep the original object and step
    intact. If QTP fails to recognize the test object, it asks the user to point the
    object in the AUT and then provide the option to update the properties or keep
    the original object or step. If the changed checkpoint values are not updated,
    they will fail in the case of a mismatch.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 当脚本在**维护运行**模式下运行且对象发生变化时，它会提供更新属性和步骤或保持原始对象和步骤不变的选择。如果QTP无法识别测试对象，它会要求用户在AUT中指向对象，然后提供更新属性或保持原始对象或步骤的选项。如果更改的检查点值未更新，它们将在不匹配的情况下失败。
- en: The Update Run mode
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**更新运行模式**'
- en: 'The **Update Run** mode allows us to do the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**更新运行**模式允许我们执行以下操作：'
- en: Update the test object descriptions
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新测试对象描述
- en: Update the checkpoints and output values
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新检查点和输出值
- en: Update the active screen images and values
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新活动屏幕图像和值
- en: Decide on what is required to update and select the option(s) as shown in the
    preceding list. In the case that QTP fails to recognize the object, it will throw
    an error. It updates the object if the object has changed without intimating the
    user.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 决定需要更新什么，并选择前面列表中所示选项。如果QTP无法识别对象，它将抛出错误。如果对象已更改，它将更新对象而不会通知用户。
- en: Enhancement
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增强
- en: Enhancement starts with the analysis and assessment of the impact of changes
    on the scripts. Enhance the test, debug it, and then release it.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 增强过程始于分析变更对脚本的影响。增强测试，调试它，然后发布。
- en: 'The key steps in the enhancement process are shown as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 增强过程中的关键步骤如下所示：
- en: Understand the changes and their impact
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解变更及其影响
- en: Change the scripts and document them
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改脚本并对其进行文档化
- en: Test
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Debug and fix errors
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试并修复错误
- en: Release
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布
- en: The overall goal is to achieve low maintenance cost. The issues in the maintenance
    phase are both managerial and technical. Test automation faces various managerial
    issues such as estimating costs, changing customer priorities, and staffing, whereas
    examples of technical issues are working with limited understanding, impact analysis,
    and testing. The framework allows low maintenance costs due to its test automation
    repository structure and standard ways to add, remove, and modify the scripts
    and libraries.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 总体目标是实现低维护成本。维护阶段的问题既包括管理问题也包括技术问题。测试自动化面临各种管理问题，例如估算成本、改变客户优先级和人员配置，而技术问题的例子包括理解有限、影响分析和测试。该框架由于其测试自动化存储库结构和添加、删除和修改脚本和库的标准方式，允许低维护成本。
- en: Summary
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter places emphasis on the techniques required in maintaining the framework.
    Debugging is an important technique for identifying and fixing the issue quickly.
    The next chapter talks about using JavaScript, which allows interaction with the
    DOM in the web page and uses XPath to create the script.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了维护框架所需的技术。调试是快速识别和修复问题的关键技术。下一章将讨论使用JavaScript，它允许与网页中的DOM进行交互，并使用XPath创建脚本。
