- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Growing Your Career
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last chapter, we talked about soft skills, those things that aren’t,
    for the most part at least, technical in nature. You learned how those skills
    and qualities are things that you can develop in yourself and that will aid you
    in your career aspirations.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is, in a sense, an extension of that last one. However, rather
    than focusing on soft skills, we’ll focus largely on the kinds of things you can
    do to develop yourself in terms of your technical ability. This will be done with
    an eye on one thing: growing your career.'
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s important to think about how you can improve yourself, especially if you
    have aspirations beyond simply getting an entry-level web developer job. So, in
    this chapter, you’ll learn about some of the more advanced positions you might
    look to as you grow, and how you can develop the skills to get there. This will
    include things such as pursuing certifications, contributing to open source projects
    in order to learn and demonstrate your abilities, and the idea of side projects,
    something I talked about in the last chapter as well (so if you’re looking for
    the one thing I consider to be of primary importance, that’s probably a good indicator
    right there: talking about it in two chapters!). I’ll also discuss ways you can
    work to keep up with changes in the industry, something that is of paramount importance.'
  prefs: []
  type: TYPE_NORMAL
- en: Putting all of this together, I will attempt to give you pointers that, if followed,
    should allow you to keep up with the industry – as well as any of us can, anyway
    – and always be advancing your skillset in pursuit of climbing the web developer
    career ladder as you desire.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’ll cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: ABC – Always Be Coding!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing Source is your friend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Certifying your greatness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping up with the Joneses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giving back to get back
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced positions to aspire to
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ABC – Always Be Coding!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In *Glengarry Glen Ross*, a movie about the dark, cutthroat side of sales, the
    character Blake, played by Alec Baldwin, gives a rather famous speech about the
    phrase “always be closing.” He illustrates this phrase on a blackboard by explaining
    it as “ABC.” In the context of that movie, it’s discussing how a good salesperson
    is always trying to close a sale, always trying to push that last little bit to
    get the prospective buyer to bite and finalize a deal.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of web development, I’m playing the part of Blake and rephrasing
    ABC to mean “Always Be Coding”!
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s a simple enough concept: web development is a very fast-paced field. So
    fast, in fact, that we make all sorts of jokes about it. The framework that is
    the belle of the ball one week might be verboten the following week. Well, I’m
    exaggerating a little bit for effect there, but once you’ve been doing this for
    a while, you’ll start to realize it’s not nearly as exaggerated as you’d wish
    it was, sometimes! Keeping up is a chore for anyone, believe me!'
  prefs: []
  type: TYPE_NORMAL
- en: 'This means that the skills you have can be less appealing before long if you
    aren’t careful. What it also means is that if you don’t use a particular set of
    skills for a while, they tend to atrophy. I spent about six years in the 80s doing
    nothing but Assembly language programming, a very low-level language that looks
    something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, look, you’re not even *remotely* supposed to understand that! But here’s
    the thing: *neither do I*! And I literally *wrote* that code! The thing is, I
    haven’t done Assembly coding in almost 30 years at this point, so those skills
    have long since drained from my brain. It’s not *quite* gibberish to me at this
    point, as some pieces of Assembly knowledge still float around in the back of
    my mind, but it’s pretty *close* to gibberish!'
  prefs: []
  type: TYPE_NORMAL
- en: 'If I had been doing Assembly these past few decades, though, the story would
    be very different. Those skills would be fresh in my mind, and this would be second
    nature like it used to be. So, the trick is ABC: Always Be Coding!'
  prefs: []
  type: TYPE_NORMAL
- en: Now, the natural question to ask is what to code, and early in your career,
    the simple answer is *anything*! I said as much in the last chapter too, but there,
    it was in the context of learning, and how learning by doing is usually the best
    way to solidify knowledge in your brain. But even if you aren’t learning new skills,
    it’s also important to maintain old ones. While Assembly is a language I’ll likely
    never have to use professionally in my life (and there’s even a low chance I’ll
    do it in my own projects), practicing any type of coding keeps the more general
    “programming skills” fresh.
  prefs: []
  type: TYPE_NORMAL
- en: 'That’s the thing: *specific* skills can be allowed to fade, but just the general
    knowledge of how to program, and how to write code, is something that you can’t
    allow to fade. And the best way I know to avoid that is to always keep those juices
    flowing by always coding.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the last chapter, I talked about personal projects and how games are an
    excellent choice that can keep your coding abilities strong and maybe even expand
    them. While I stand by games being a fantastic choice, it certainly isn’t the
    only choice. It almost doesn’t matter what you code, as long as you code *something*.
    Another possibility I like to suggest is a **PIM**, a **personal information manager**.
    This is an application that allows you to store, manage, and utilize important
    pieces of personal information, usually things such as contacts, appointments,
    and notes. I like this idea so much, in fact, that I’ve used such a project in
    a good number of my books, as you can see in *Figure 12**.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.1: A montage of several of the PIM applications I’ve written over
    the years](img/B18315_12_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.1: A montage of several of the PIM applications I’ve written over
    the years'
  prefs: []
  type: TYPE_NORMAL
- en: It’s a good choice because, like games, you’ll have to confront a lot of different
    programming topics, and they can also be done with any technology. You can, of
    course, build it with React and Node, Angular and Java, or just plain HTML + CSS
    + JS with client-side data storage. Or, do it in Python and have a purely text-based
    interface. You can host it in a cloud provider if you like, or on your own home
    server. It works in any permutation of technologies and is challenging enough
    to keep your skills sharp while not being overly difficult.
  prefs: []
  type: TYPE_NORMAL
- en: But again, this is just one idea. Hopefully, you‘ve begun to realize that you
    like coding and building websites, solving problems, and all of what goes into
    it. If so, then finding ways to continually be coding, either working on one project
    or another, probably won‘t be so difficult. And again, none of it has to see the
    light of day! Nothing says you have to share your work with anyone else, or even
    use it after you write it. In fact, you don‘t necessarily even have to *finish*
    a project! My private source code repository is littered with aborted projects
    and ideas I dropped halfway through for one reason or another, and most developers
    are that way.
  prefs: []
  type: TYPE_NORMAL
- en: But you know what? I go back to those projects a lot because I realize that
    some part of it is still valuable. And even though they weren’t completed, I gained
    experience in new technologies from them, experimented with new techniques and
    ideas, and just generally sharpened my skills as I worked on them, and that’s
    what ABC is all about.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, writing code is only one part of keeping your skills sharp. Reading
    code is just as important, and there‘s a facility that I find a lot of developers
    forget or ignore these days, one I‘ve mentioned before but that is worth a second
    mention, and that‘s good ‘ole View Source.
  prefs: []
  type: TYPE_NORMAL
- en: Viewing Source is your friend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There’s a common saying that, for a developer, *reading* code is just as important
    as writing code. In fact, many would say it’s *more* important. It’s also said
    that most developers spend more time reading code than writing code – whether
    it’s understanding an existing code base they must support, reading through their
    own code to remember how they did things, or reading the code of others for learning,
    it’s a skill all of its own.
  prefs: []
  type: TYPE_NORMAL
- en: Seeing how others have done things is an especially valuable exercise. To be
    sure, it isn’t always easy because you will inevitably run into things you don’t
    know, be it techniques, styles, new libraries, or what have you. It can be an
    exercise in frustration, but it’s too valuable to let that stop you.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, I mentioned the View Source option, which has been a part of web
    browsers for decades now. This is something that developers sometimes forget is
    there! To some extent, that‘s because browser developer tools have mostly taken
    the place of View Source, but no matter how you do it specifically, I’m generically
    talking about the idea of looking at the work of others.
  prefs: []
  type: TYPE_NORMAL
- en: When you go to a website and see something cool, in most cases, you can use
    View Source or developer tools to examine the code. Now, this isn‘t quite as true
    as it used to be due to modern developer techniques. In the olden days of the
    late 90s/early 2000s, View Source was great because what you got was pure, untouched
    HTML, CSS, and JS. There was no mystery; it was all right there for you to examine
    and learn from.
  prefs: []
  type: TYPE_NORMAL
- en: That’s still true in the sense that HTML, CSS, and JS are the lingua franca
    of the web. No matter what developer tools, libraries, frameworks, or toolkits
    you use to build a website, it always boils down to HTML, CSS, and JS. There may
    be many different abstractions on top of the final code that the browser runs,
    but it still boils down to those three in the end.
  prefs: []
  type: TYPE_NORMAL
- en: But the final form that the browser uses to display the web page can differ
    drastically nowadays from what the developer wrote owing to those abstractions.
    If they developed the web page with TypeScript, for example, the output code can
    sometimes look drastically different in its final JS form. Or, if they used Angular
    or React, then the code they wrote can look virtually nothing like what runs in
    the browser. There are also tools called **obfuscators**, which explicitly try
    to make the code look as different as possible and explicitly more difficult to
    read. There are also compressors (called **minifiers**) that try to minimize the
    size of the code in an attempt to make loading the page more efficient, but this
    too can make it harder to read. So, code is sometimes hard to read by accident,
    and sometimes on purpose, but it ultimately makes View Source less useful than
    it used to be.
  prefs: []
  type: TYPE_NORMAL
- en: Still, you can sometimes gain valuable insights even by looking at obfuscated
    code. Even if you can’t quite work out the exact code that is responsible for
    a given effect, for example, you may still be able to get a conceptual idea of
    how it’s done, which is often all you’re really after.
  prefs: []
  type: TYPE_NORMAL
- en: While modern code may be difficult to read, there are some things to be aware
    of that can help. The main one is something called **source maps**. These are
    special files that can be part of the output when compressing or obfuscating JS,
    or when transpiling from TypeScript to JS, offering a way to map code within a
    file, as seen in the browser, back to its original source code. They enable a
    developer to examine code more easily by showing the original source code in a
    code viewer or debugger, even if the code running in the browser (or Node, or
    another runtime environment) is the minified or transpiled version. This mapping
    between the code at runtime and the original source code is crucial for debugging
    purposes and being able to learn from it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Source maps are completely optional, unfortunately, so there‘s no guarantee
    they will be present. But when they are, what you wind up with is final code in
    a file named `example.min.js` that might look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This can be used just as any JS file is in a web page, as shown in the following
    simple HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It doesn’t really matter for this discussion, but so you’re not left hanging,
    `document.write()` is a function that writes content to the HTML document at whatever
    location it‘s at. So, in this case, it writes out the result of calling `a(2,
    2)`, then a `<br>` tag to jump to the next line, and then the output of calling
    `s(10, 5)`.
  prefs: []
  type: TYPE_NORMAL
- en: Now, that JS code in `example.min.js` isn’t actually too bad to look at! You
    can tell from it that you have two functions, `a()` and `s()`, where `a()` adds
    two numbers, while `s()` subtracts two numbers (which is why you see 4 and 5 respectively
    written on the page). It’s rare with modern development tools that you’ll wind
    up with something that simple and easy to grasp.
  prefs: []
  type: TYPE_NORMAL
- en: 'But notice that second line, the one that is a comment. This is the magic sauce:
    it provides developer tools a link between this minified code and a source map
    file specific to `example.min.js`. The source map file might look something like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Don’t worry about what any of that means because you, as a human-type person,
    aren’t generally expected to look at source map files directly. It’s not meant
    for us; it’s meant for tools. And when those tools consume this file, the result
    is that in browser dev tools, you’ll now effectively have access to the original
    source file. That’s because the source map file knows how to, in a sense, translate
    from the minified version to the original source file, which is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'In *Figure 12**.2*, you can see the list of files loaded for this example,
    which includes `example.js` (you can try this example by running `npx` http-server
    in the code directory for this chapter; it will start a server that you can then
    access using the URLs displayed, at which point you’ll be able to see the same
    thing in dev tools for yourself, as shown on these pages):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.2: An example of source maps in browser dev tools](img/B18315_12_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.2: An example of source maps in browser dev tools'
  prefs: []
  type: TYPE_NORMAL
- en: This allows you to have the best of both worlds! You can use all the fancy,
    new frameworks, libraries, and toolkits, and all the great minification/obfuscation
    tools you want, while still being able to effectively debug your live code. And
    it also allows others to still get value from your code as a learning experience.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not just for learning about how others have done things, though, that View
    Source is so valuable. Another thing it allows you to do is to “think like a hacker”
    to find security vulnerabilities in your work.
  prefs: []
  type: TYPE_NORMAL
- en: Thinking like a hacker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What I mean by “think like a hacker” is the idea that you can use View Source,
    and browser developer tools in general, to put on your “white hat” and find vulnerabilities
    in your own code.
  prefs: []
  type: TYPE_NORMAL
- en: Types of hackers
  prefs: []
  type: TYPE_NORMAL
- en: Hackers – people who examine websites and applications looking for security
    vulnerabilities – come in several varieties, typically denoted by “hat color.”
    White hat hackers, otherwise known as “ethical hackers,” are those who operate
    legally and with the consent of a target with the express intent of finding and
    disclosing vulnerabilities. These people are often engaged by companies to find
    flaws in their sites. Black hats are those who use their skills for illegal or
    malicious purposes. Their motives frequently involve financial gain, espionage,
    or just to cause chaos. Grey hats fall somewhere in between, in that they look
    for vulnerabilities with the intent of disclosing them rather than exploiting
    them for nefarious purposes, but they do not operate with the consent or pre-knowledge
    of a target. Companies often have a love/hate relationship with grey hats because
    while it’s good for someone like that to find a problem and let the company know
    before the black hats do, it’s still rather disconcerting to get a report from
    someone unsolicited.
  prefs: []
  type: TYPE_NORMAL
- en: You have to change your mindset to do this, looking at the code not for what
    it is but for what you can do with it. Can you, for example, find a password embedded
    in the code that is used when calling your REST API? That’s a very obvious security
    problem; however, it won’t usually be that easy, so you’ll have to start coming
    at this sideways. Like, can you see a place where you might be able to hack the
    code to add some nefarious SQL to a server call – a SQL injection attack, in other
    words?
  prefs: []
  type: TYPE_NORMAL
- en: As long as it‘s your own code, this is all perfectly fine. But there‘s nothing
    to stop you from putting on your grey hat instead and looking at other people’s
    code too. As alluded to in the previous note box, you have to be careful about
    that because not every company will appreciate you doing so. But it can still
    be a learning experience for you because you can start to see patterns that you
    should avoid in your own work. Seeing the mistakes made by others is a valuable
    thing!
  prefs: []
  type: TYPE_NORMAL
- en: Don’t be afraid to dig in and see how others have done things; whether for security
    purposes or not, that’s the bottom line. View Source is there for you to do so,
    as are the more advanced dev tools available in modern browsers. With them, you
    can learn a lot if you take the time to do so.
  prefs: []
  type: TYPE_NORMAL
- en: Another way you can enhance your skills, as well as your employability, is certifications,
    those shiny pieces of (oftentimes virtual, nowadays) paper that purport to tell
    others what you know. Let‘s see what those are all about!
  prefs: []
  type: TYPE_NORMAL
- en: Certifying your greatness
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Certifications, those (sometimes) shiny pieces of paper that (sometimes) hang
    on your wall, are a way to declare to the world “I know all about X!” where X
    is some technology or skill. They are like college degrees but without the need
    to sit in a classroom. You see, you can go take a test on, for example, web development,
    and if you pass, you’ll get a certification that is meant to say that you have
    attained a certain level of skill in web development.
  prefs: []
  type: TYPE_NORMAL
- en: There are hundreds if not thousands of certifications available. Some are administered
    by private companies (probably most of them are) on the specific technologies
    that are their primary source of income, some by government agencies, and some
    by organizations whose entire business model is providing certification exams.
    They cover all sorts of topics from cloud computing to cybersecurity, networking,
    AI and ML, data management and analysis, and project management.
  prefs: []
  type: TYPE_NORMAL
- en: Some certifications are free, but most cost money to get. How much? Anywhere
    from a few tens of dollars to thousands. Some are frankly very easy; the tests
    are fairly superficial and don’t require in-depth knowledge. Others – such as
    the networking tests administered by the company Cisco – are kind of notorious
    for being very difficult and requiring hands-on demonstrations of your skill.
  prefs: []
  type: TYPE_NORMAL
- en: 'But before you think about getting a certification of any kind, it’s worth
    asking a simple question: is it really worth the time, money, and effort?'
  prefs: []
  type: TYPE_NORMAL
- en: Are they worth getting?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: People in the technology world have historically had a bit of a love/hate relationship
    with certifications, and the thinking about them has changed over time. 20-30
    years ago, almost any certification was worth something. They set you apart from
    the field when it came to getting hired because not everyone had them. At that
    time, spending a few hundred or even a few thousand dollars collecting a few certifications
    was a good way to help get your foot in the door, or perhaps help you get a raise
    or promotion.
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, it’s not quite so clear-cut. Some people put little stock in certifications
    at all because at the end of the day, if you’re someone who knows how to study
    and take tests, the thinking goes that you could conceivably get many certifications
    without having any actual experience in the topic you’re testing for.
  prefs: []
  type: TYPE_NORMAL
- en: To give a concrete example of that, nearly 25 years ago, I got a Novell administrator’s
    certification, where Novell is a long-gone operating system that used to be pretty
    popular in data centers. I knew the basics of Novell, sure, and I had a *little
    bit* of hands-on experience, but I was in no way qualified to be an actual administrator
    of a real production Novell system. Despite that, I picked up a study book, read
    it cover to cover a time or two, and managed to pass the test because I’ve always
    been pretty good at regurgitating information for tests. So, effectively, that
    certification never really indicated my true level of knowledge about Novell;
    it much more just showed my ability to study and pass a test.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, that’s how some people see *any* certification these days. But
    I think that’s unfair, because not all certifications are created equal. Some,
    like the Novell test, can be passed by someone with just basic knowledge and experience,
    but that would never have worked for one of the Cisco tests, for example. Those
    require you to really know your stuff and to be able to show it in practical ways.
  prefs: []
  type: TYPE_NORMAL
- en: As a general statement, certifications become less important over time because
    your past experience, in a sense, becomes your certification. If you’ve actually
    built one or more complex websites, then that shows me, as a hiring manager, what
    you know better than virtually any certification ever could.
  prefs: []
  type: TYPE_NORMAL
- en: So, it may sound like this is all a bit contradictory, and that’s because, in
    a sense, it is! There’s a tension here.
  prefs: []
  type: TYPE_NORMAL
- en: On the one hand, if you’re trying to get your first job and don’t have a lot
    of experience to show, then I would say there is some value in certifications.
    They won’t have the same value to every interviewer regardless, but for those
    who give them more weight, it may be the difference between getting hired and
    not. I would say, don’t spend an inordinate amount of time and money on them,
    though; look for the ones that (a) aren’t too expensive, and (b) you can pass
    based on what you *actually* know and without a huge investment of study time.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, as you build up some real work experience, my personal opinion
    – which I don’t believe I’m alone in – is to not put *as much* stock in certifications.
    It may still make sense to pursue one every now and again in a more targeted and
    focused way, such as if you are looking to switch positions and want to have as
    much evidence that you can do the new job as possible. But “collecting certifications”
    – where you just keep getting them with the thought that it *may* be beneficial
    to your career generally – is probably a bit of wasted time, effort, and money.
    It’s probably better to spend the time building things to gain experience through
    doing, so you have more demonstrative evidence of your skills.
  prefs: []
  type: TYPE_NORMAL
- en: For what it’s worth, early in my career, I went through a phase of collecting
    certifications. At last count, I held something like 90 different certifications.
    While some, such as the Novell one, didn’t really reflect my knowledge and abilities
    at the time, a lot of them actually did. But either way, the simple fact is that
    they never had any tangible benefit to my career. They didn’t help me get my first
    job (I didn’t have any before then), nor did they help me get any big salary increase
    later (proving what I could do on the job very much did, though). Do I feel all
    that time and money was worth it? No, I honestly don’t. I think it’s true that
    I learned some things from the studying I did for them, though, so in that sense,
    I probably did get some benefit, but not enough to justify the time and money.
  prefs: []
  type: TYPE_NORMAL
- en: So, if you’re going to go for certifications at all, I think doing so surgically
    is the smart move; that’s the point of that anecdote.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say you decide to pursue certifications, whether to help get your first
    job or later on, for whatever reason. With so many certifications out there, how
    do you choose which to go after? Let’s look at some of the most popular ones these
    days and see what it takes to get them, and which are likely to have the most
    benefit to you.
  prefs: []
  type: TYPE_NORMAL
- en: Specific certifications to pursue
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Knowing which certifications have more intrinsic worth to the greatest number
    of people is a very difficult task. Most of it comes down to opinion and subjective
    measures. Still, some generally do tend to float to the top when people discuss
    them. Here’s a list of the ones that appear to me – based on some online research
    – to be the most worth getting, broken down by category.
  prefs: []
  type: TYPE_NORMAL
- en: General web development
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These are certifications that show skills in a variety of areas that a web
    developer might be expected to have some expertise in:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Adobe Certified Expert (ACE) Web Specialist*: Administered by Adobe, it focuses
    on Adobe’s web design and development tools and is ideal for frontend developers
    ([https://learning.adobe.com/certification.html](https://learning.adobe.com/certification.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Certified Web Professional (CWP)*: Certified by the International Web Association,
    it offers specializations in web design, e-commerce, and web development ([https://iwanet.org/profdevel](https://iwanet.org/profdevel))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Full Stack Web Developer Nanodegree*: Administered by Udacity, a training
    platform, it covers frontend and backend skills, database management, and API
    usage ([https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd0044](https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd0044))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Oracle Certified Professional Java SE Programmer*: Administered by Oracle,
    it validates expertise in Java, a common language for backend development ([https://education.oracle.com/oracle-certification-path/pFamily_48](https://education.oracle.com/oracle-certification-path/pFamily_48))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Certified Responsive Web Designer (CRWD)*: Administered by freeCodeCamp, a
    learning platform, it confirms skills in creating responsive, user-friendly web
    designs ([https://www.freecodecamp.org/learn/2022/responsive-web-design](https://www.freecodecamp.org/learn/2022/responsive-web-design))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud computing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Certifications in cloud computing are generally solid ones that will carry
    a fair bit of meaning to a lot of people:'
  prefs: []
  type: TYPE_NORMAL
- en: '*AWS Certified Developer Associate*: Administered by Amazon, it involves developing
    and maintaining applications on AWS ([https://aws.amazon.com/certification/certified-developer-associate](https://aws.amazon.com/certification/certified-developer-associate))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Amazon Web Services (AWS) Certified Solutions Architect*: Administered by
    Amazon, it focuses on designing distributed systems on AWS ([https://aws.amazon.com/certification/certified-solutions-architect-associate](https://aws.amazon.com/certification/certified-solutions-architect-associate))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft Certified Azure Developer Associate*: Administered by Microsoft,
    it targets developers to design, build, test, and maintain cloud solutions on
    Azure ([https://learn.microsoft.com/en-us/credentials/certifications/azure-developer](https://learn.microsoft.com/en-us/credentials/certifications/azure-developer))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Google Certified Professional Cloud Architect*: Administered by Google, it
    focuses on designing and managing solutions on Google Cloud, including AI and
    ML solutions ([https://cloud.google.com/learn/certification/cloud-architect](https://cloud.google.com/learn/certification/cloud-architect))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cybersecurity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Cybersecurity is a critical topic these days, whether you’re looking for a
    job in cybersecurity directly or just want to show that, as a web developer, you
    have a good grasp on this important topic:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Certified Information Systems Security Professional (CISSP)*: Administered
    by ISC2, it is an advanced-level certification for IT pros who are serious about
    careers in information security ([https://www.isc2.org/certifications/cissp](https://www.isc2.org/certifications/cissp))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Certified Information Security Manager (CISM)*: Administered by ISACA, it
    focuses on the management and governance of information security ([https://www.isaca.org/credentialing/cism](https://www.isaca.org/credentialing/cism))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Certified Web Application Security Tester (C-WAST)*: Administered by Udemy,
    an educational platform, it focuses on identifying and mitigating web application
    vulnerabilities ([https://www.udemy.com/course/certified-web-application-tester/?couponCode=24T5FS31824](https://www.udemy.com/course/certified-web-application-tester/?couponCode=24T5FS31824))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*GIAC Web Application Penetration Tester (GWAPT)*: Administered by GIAC Certifications,
    it validates skills in web application security testing and penetration testing
    ([https://www.giac.org/certifications/web-application-penetration-tester-gwapt](https://www.giac.org/certifications/web-application-penetration-tester-gwapt))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Networking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As you know, networking is fundamental to being a web developer, and while
    these certifications aren’t ones I would recommend for a web developer as they
    are far more advanced, they are nevertheless examples of certifications that would
    carry a lot of weight if attained:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Cisco Certified Network Associate (CCNA)*: Administered by Cisco, it is an
    entry-level certification that covers basic networking concepts ([https://www.cisco.com/c/en/us/training-events/training-certifications/certifications/associate/ccna.html](https://www.cisco.com/c/en/us/training-events/training-certifications/certifications/associate/ccna.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Cisco Certified Network Professional (CCNP)*: Administered by Cisco, it covers
    more advanced networking topics, requiring a deeper knowledge and understanding
    of network solutions ([https://www.cisco.com/c/en/us/training-events/training-certifications/certifications/professional/ccnp-enterprise.html](https://www.cisco.com/c/en/us/training-events/training-certifications/certifications/professional/ccnp-enterprise.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data management and analytics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Dealing with data is a big part of software development generally, so certifications
    that deal with those skills have a fair bit of intrinsic value:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Certified Data Professional (CDP)*: Administered by O*NET, a site for occupational
    information, it is a comprehensive certification program for data professionals
    ([https://www.onetonline.org/link/certinfo/12605-B](https://www.onetonline.org/link/certinfo/12605-B))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft Certified Data Analyst Associate*: Administered by Microsoft, it
    focuses on skills needed to transform, analyze, and visualize data in Microsoft
    Power BI ([https://learn.microsoft.com/en-us/credentials/certifications/power-bi-data-analyst-associate](https://learn.microsoft.com/en-us/credentials/certifications/power-bi-data-analyst-associate))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artificial intelligence and machine learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As you know, AI and ML are big and growing topics, so naturally, certifications
    in them will have some intrinsic meaning:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Microsoft Certified Azure AI Engineer Associate*: Administered by Microsoft,
    it focuses on using cognitive services, ML, and knowledge mining to architect
    and implement Microsoft AI solutions ([https://learn.microsoft.com/en-us/credentials/certifications/azure-ai-engineer](https://learn.microsoft.com/en-us/credentials/certifications/azure-ai-engineer))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*IBM Data Science Professional Certificate*: Administered by IBM and Coursera
    (a learning platform), this certification covers data science, ML, and AI, using
    various tools and technologies ([https://www.coursera.org/professional-certificates/ibm-data-science](https://www.coursera.org/professional-certificates/ibm-data-science))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project management
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Like networking, these certifications aren’t ones you would typically want
    to pursue as a web developer. But you know what? Some people eventually come to
    realize that they like the project management side of things more than the development
    side of things, so it’s good to know about certifications that might be of interest
    at that point, or just if you want to have a broader base of expertise generally:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Project Management Professional (PMP)*: Administered by PMI and recognized
    globally, it shows your competency to lead project teams and achieve project goals
    ([https://www.pmi.org/certifications/project-management-pmp](https://www.pmi.org/certifications/project-management-pmp))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Certified ScrumMaster (CSM)*: Administered by the Scrum Alliance, it focuses
    on Agile project management, particularly in software development, and how to
    act as a Scrum Master, the person who leads the daily standups and other aspects
    of an Agile project ([https://www.scrumalliance.org/get-certified/scrum-master-track/certified-scrummaster](https://www.scrumalliance.org/get-certified/scrum-master-track/certified-scrummaster))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I would say that attaining any of these certifications would look good on a
    resume, would be a benefit to helping get your first job, and might have some
    benefit to advancing your career later. I would definitely say that these – as
    of the time of this writing – will probably carry more weight with more people
    than most other certifications, so if you’re going to get any at all, these are
    the ones that I’d suggest should be at or near the top of your list.
  prefs: []
  type: TYPE_NORMAL
- en: So, you get some certifications, and you get your first job, and you know that
    you should Always Be Coding to keep your skills sharp. What else can you do to
    ensure and advance your career? It’s all about keeping an eye on what’s going
    on in the industry and keeping an eye on what others are doing and learning as
    much from them as you can. Let’s talk about some strategies for doing that.
  prefs: []
  type: TYPE_NORMAL
- en: Keeping up with the Joneses
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IT field, and web development in particular, is an ever-changing, ever-expanding
    field that has new things to learn every time you turn around. Keeping pace with
    everything is practically a full-time job all on its own. We’ve spoken about several
    things over the last few chapters that you can use to keep up, such as meetups
    and conferences, but the good news is that the web itself provides a great many
    resources to do this from the comfort of your own home.
  prefs: []
  type: TYPE_NORMAL
- en: There are many websites out there that you can frequent to get the latest tech
    news, trends, opinions, and introductions to the latest and greatest on offer.
    Some are better than others, naturally, so trying to find the cream of the crop
    can be tricky. But never fear, that’s what I’m here for!
  prefs: []
  type: TYPE_NORMAL
- en: The following are some of the sites I personally find to provide the most value.
    No doubt, there are other good ones, but if you visit these often – and I personally
    like to glance at them on a nearly daily basis – I think you’ll do yourself a
    service and have a good feel for what’s going on in the industry. The importance
    of keeping an eye on the industry as a whole cannot be understated, as you gain
    a lot of insight about what others are doing and what technologies you should
    focus on, so it’s definitely a valuable use of your time, especially with good
    sites such as these.
  prefs: []
  type: TYPE_NORMAL
- en: A List Apart
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A List Apart ([https://alistapart.com](https://alistapart.com)) is a website
    that provides news specifically geared toward people – both designers and developers
    – who make websites. It has a focus on web standards and best practices in its
    articles, which makes it valuable for any web developer. On A List Apart, you’ll
    find topics ranging from coding to design, user experience, content strategies,
    and industry and process news.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.3: A List Apart](img/B18315_12_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.3: A List Apart'
  prefs: []
  type: TYPE_NORMAL
- en: Daily.dev
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Daily.dev ([https://app.daily.dev](https://app.daily.dev)) is another “aggregator”
    site in that it provides links to the content of others in one easy-to-use, concise
    interface. You’ll find a wide range of topics and article types, but all with
    a focus on software development generally. Web development gets a lot of attention
    here, though not exclusively.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18315_12_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.4: Daily.dev'
  prefs: []
  type: TYPE_NORMAL
- en: As a bonus, Daily.dev makes it easy to submit content, so if the spirit moves
    you, this is a good site to introduce the world to any articles you may yourself
    write at some point!
  prefs: []
  type: TYPE_NORMAL
- en: dZone
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Over a million developers – as of the time of this writing – are members of
    dZone ([https://dzone.com/](https://dzone.com/)), which means it’s a prominent
    programming news hub for today’s professional developers. The site covers everything
    from agile to cloud technologies, DevOps, big data, ML/Al, performance tuning,
    and more. It’s a valuable source for the latest insights from every corner of
    the industry and is good for both beginners and experienced developers alike.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.5: dZone](img/B18315_12_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.5: dZone'
  prefs: []
  type: TYPE_NORMAL
- en: Hacker News (Y Combinator)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Hacker News, sometimes called Y Combinator ([https://news.ycombinator.com](https://news.ycombinator.com)),
    is like Reddit but specifically for developers! Hacker News is one of the most
    well-known and respected sites for developer, technical, and science news. It’s
    a very sparse site that may not be the prettiest to look at, but is very fast
    and easy to navigate. It’s one of the best resources to keep up-to-date with and
    is frequently where industry discussions take place. For example, hundreds of
    developers got involved to discuss the massive AWS S3 outage on February 28, 2017,
    in real time. While some of its articles will be more theoretical and educational,
    others, such as that one, will turn into real-time discussions that anyone can
    read and take part in.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.6: Hacker News](img/B18315_12_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.6: Hacker News'
  prefs: []
  type: TYPE_NORMAL
- en: InfoQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The tagline of InfoQ ([https://www.infoq.com](https://www.infoq.com)) is “Facilitating
    the spread of knowledge and innovation in professional software development,”
    and a glance at its home page shows that it takes that mantra seriously by providing
    a good cross-section of articles for you. While I think I would say that InfoQ
    tends to skew a little bit toward more experienced developers, it does still have
    lower-level materials for other skill levels to get something from. It also has
    links to presentations and podcasts, many of which offer great value in exchange
    for some of your time.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.7: InfoQ](img/B18315_12_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.7: InfoQ'
  prefs: []
  type: TYPE_NORMAL
- en: SD Times
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SD Times ([https://sdtimes.com](https://sdtimes.com)), short for Software Development
    Times, is something of a digital newspaper made for developers of all kinds. Its
    content covers topics including DevOps, testing, security, teams and culture,
    and system architecture. It offers news, of course, but in addition, also has
    webinars on specific topics, white papers, and podcasts. You may initially be
    fooled by the home page because it might look like there’s not all that much there,
    but scroll down a bit and explore the menus and you’ll find there’s actually quite
    a bit.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.8: SD Times](img/B18315_12_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.8: SD Times'
  prefs: []
  type: TYPE_NORMAL
- en: Technology Radar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Finally, if you’re looking for a great graphical representation of the emerging
    and hot technologies you should be looking at, Technology Radar ([https://www.thoughtworks.com/radar](https://www.thoughtworks.com/radar))
    is a great choice. A product of Thoughtworks, which is a well-known technology
    consultancy, Technology Radar shows you languages and frameworks, techniques,
    tools, and platforms, and whether you should – in the learned opinion – be holding
    up on using them (because they may be on their way out of developers’ minds),
    assessing whether they are appropriate for your use, putting them to use in a
    trial mode, or outright adopting them. In other words: it seeks to give you an
    idea of what technologies are hot right now, up and coming, or on their way out.
    Given the clearly opinionated nature of this site, you, of course, have to evaluate
    what it’s saying for yourself. But a well-known and generally well-respected group
    of people who definitely know their stuff providing this kind of guidance can
    be a very valuable resource.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.9: Technology Radar](img/B18315_12_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.9: Technology Radar'
  prefs: []
  type: TYPE_NORMAL
- en: Reading news sites is of great value, something you pretty much *have* to do
    in this field. But something else you can do – and in my opinion *should* do whenever
    possible – is look for ways to put your skills to actual use to both build and
    demonstrate your abilities. While this has clear benefits for you, it also has
    benefits for others, so it’s a win-win! Let’s see some ways you can accomplish
    this now.
  prefs: []
  type: TYPE_NORMAL
- en: Giving back to get back
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over my many years as a developer/architect/lead/technical manager, one thing
    that I’ve come to understand is that when you help others, you almost always wind
    up helping yourself in the process. This comes in many forms. Helping a coworker
    with a problem often leads to you gaining insights you didn’t have before. Teaching
    others helps solidify knowledge in your own mind. And when you contribute to projects,
    you gain a sense of accomplishment on top of whatever technical benefits you also
    get.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, I always look for ways I can “give back” to others. I say give back
    because we all depend on others, whether they taught us, helped us through problems,
    or simply created software and tools that we depend on. Looking for opportunities
    to do the same thing yourself is a great way to build your skillset and other
    intangible qualities too.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s talk about some ways you might look to give back. Which way works for
    you is something you, of course, need to discover for yourself, and this is by
    no means an exhaustive list. But hopefully, it gives you some ideas going forward
    on things you might do.
  prefs: []
  type: TYPE_NORMAL
- en: Open source contributions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the best – and also one of the easiest – ways to give back is to contribute
    to open-source projects (the abbreviation **FOSS**, short for **free/open-source
    software**, is typically used, and I will do so here). You can, of course, start
    your own; there’s nothing wrong with that and it has a lot of benefits. But here,
    I’m focusing on finding projects you like and contributing to them.
  prefs: []
  type: TYPE_NORMAL
- en: A lot of developers are nervous about getting involved in projects, especially
    early on in their own learning, because they figure there’s nothing they could
    possibly contribute. Let me assure you that this is wrong! FOSS projects are often
    in need of people doing things that don’t require a high level of technical skill.
    For example, documentation is something that a lot of projects are lacking and
    that the maintainers of projects are all too happy to have people help with.
  prefs: []
  type: TYPE_NORMAL
- en: 'In fact, your relative inexperience could actually be a blessing: writing simpler
    “introductory” documentation, as someone new to using a project would need, is
    something you can probably handle since you would have to go through that learning
    process yourself to be able to write such documentation. You may well save others
    time getting up to speed with such a contribution, which is for sure a valuable
    thing.'
  prefs: []
  type: TYPE_NORMAL
- en: There’s no permission to get – you just start writing! You’ll likely need to
    clone the project’s repo, as was discussed in [*Chapter 4*](B18315_04.xhtml#_idTextAnchor105).
    That gives you a local copy on your own machine that you can then start hacking
    at without any risk to the existing project’s code. If things don’t go well, it’s
    no big deal; you can always clone a fresh copy and start again, no harm no foul.
  prefs: []
  type: TYPE_NORMAL
- en: But eventually, when you’ve made good progress, you can send a pull request
    (assuming the project is using GitHub) when you believe the documentation is ready.
    To be sure, there’s no guarantee it will be accepted, or that there won’t be comments
    sent back about things they’d like to see. But very often, you’ll get a great,
    big “thank you!” and an immediate acceptance.
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the existing bugs for a project and submitting fixes is another great
    way to contribute. It’s obviously great for the project to get bugs resolved,
    but it’s fantastic for you too because not only does it help you learn the code
    base of the project so you can contribute more in the future, but it means you’re
    reading code and learning from it, so selfishly, it’s going to benefit you greatly.
    And you don’t need to tackle the trickiest bugs right off the bat! Finding ones
    that appear to be on the simpler side, even “silly” things such as maybe a label
    on a screen having a spelling mistake, can get your foot in the door.
  prefs: []
  type: TYPE_NORMAL
- en: Eventually, you can look at a project and think “Okay, what feature could I
    add that I think people would like?” and go for it. When you get to this point,
    you may want to have some discussions on a message forum or mailing list of Discord
    – however the project members communicate – to get some level of buy-in so you
    don’t wind up wasting a lot of time on something that ultimately won’t have a
    chance of being accepted (then again, just the experience of building the feature
    can benefit you, so keep that in mind too). It’s also good to know you won’t start
    working on something that a project member is already working on.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe the website of the project is a bit lacking. In such a case, you might
    offer to build something a bit more robust. Things are a little different in this
    regard than they used to be because most FOSS projects are hosted on sites such
    as GitHub, and they may not have their own unique website, as was most common
    years ago. But it’s still the case that projects will often want to have their
    own “face,” so to speak, even if they’re hosted on GitHub, and offering to build
    that – and maybe offering up some design ideas or prototypes to make the case
    – can be something that will be valued too.
  prefs: []
  type: TYPE_NORMAL
- en: You can also often get involved in FOSS projects just by becoming an **SME**,
    or **subject matter expert**. If you get to know a project well, you can begin
    to help people on message forums who are having problems. That’s a contribution
    that will be appreciated not only by the users of the project but also by the
    maintainers, since they can then focus more on writing code than helping people.
  prefs: []
  type: TYPE_NORMAL
- en: FOSS is all about community at the end of the day, so finding ways you can help
    the community is what it’s all about. Whether that means documentation, coding,
    or just answering questions, it all counts.
  prefs: []
  type: TYPE_NORMAL
- en: Presentations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another way to give back is to give presentations at events such as user groups
    and meetups. This will help you solidify your technical knowledge because, of
    course, you’ll need to study and learn to create your presentation and to be prepared
    for questions. But this also has the benefit of getting you experience in speaking
    to a crowd, which is a valuable skill to have.
  prefs: []
  type: TYPE_NORMAL
- en: All you really need to do is choose a topic you’re confident about and find
    a suitable group to present to. The website [meetup.com](http://meetup.com) is
    a great resource for this. You’ll likely want to start small, so find smaller,
    local groups that deal with the topic you want to present, and simply contact
    the organizers. Those folks are usually quite receptive to someone wanting to
    give a presentation because otherwise, they have to put in effort to find people
    themselves. It’s always good to make peoples’ jobs easier!
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve never given a presentation before, it will be quite nerve-racking
    at first. Speaking in front of a crowd, whether large or small, is something that
    frightens people. As with most things, the more you do it, the more comfortable
    with it you’ll become, so I say, jump in with both feet! Face the nerves and fight
    through them!
  prefs: []
  type: TYPE_NORMAL
- en: 'That said, how do you give a good presentation? Some general guidelines can
    help you do this:'
  prefs: []
  type: TYPE_NORMAL
- en: Assuming you have a slide deck built in something such as Microsoft PowerPoint,
    have just one topic per slide. You want to be sure you don’t overload your audience
    with too much information at once, and overly dense slides do just that.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Show, don’t just tell. This is as good advice for presentations as it is for
    fiction writing. If you can show the results of a bit of code, then do so, rather
    than simply telling your audience what it will do.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t simply read your slides! This is a very common problem, and it gets noticed
    quickly. Your audience can read the slide just fine on their own; your job is
    to expand on what’s there as they read it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Going hand-in-hand with the previous point: limit each slide to one or maybe
    two sentences. Again, overly-dense slides just split the audience’s attention.
    They’re there to hear you speak, not read a bunch of text. One or two sentences
    that frame what you’re saying are all you need.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each slide should account for a minute or two of time, generally speaking. Presentations,
    such as stories, should keep moving at a decent pace. There will, of course, be
    exceptions, but keeping things moving at this rate is a good general guideline.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use graphics when possible. As they say, a picture is worth a thousand words.
    A good image, graph, or screenshot can tell a story better than a bunch of words,
    whether printed or spoken (well, sometimes – each instance has to be examined
    on its own merits – but it’s a good guideline generally).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If possible, have one or two “WOW!” moments in your presentation. This might
    be near the end where you put everything you’ve said together in some way, or
    it might be right at the start where you demonstrate something impressive that
    you’ll be discussing. Or it may be one or two moments in between. In any case,
    it’s a great way to get and keep your audience engaged and feeling like they are
    spending their time well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And, of course, practice! Many people like to present in a mirror; others prefer
    to get their significant other to listen to them. There are even places online
    where you can practice in front of “people,” even in VR! One such site is [https://virtualorator.com](https://virtualorator.com),
    which allows you to practice in a simulated environment that is very similar to
    the real thing, assuming you have the appropriate VR equipment.
  prefs: []
  type: TYPE_NORMAL
- en: Blogging
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Something else you can do is write independent articles – blogging, as we call
    it today. Sites such as [medium.com](http://medium.com) make this very easy to
    do and can potentially earn you some money in the process.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started is as easy as signing up for an account, and then starting to
    type! You’ll need to do all the appropriate research on whatever topic you’re
    writing about, create examples if appropriate, and learn to edit and review your
    work before publishing. But there’s no real barrier to entry other than your own
    drive and motivation.
  prefs: []
  type: TYPE_NORMAL
- en: Medium isn’t the only such site, nor do you even have to use such a site. You
    can instead self-host your articles, perhaps using something such as WordPress,
    or just creating your own site from scratch, which has the bonus of showing off
    what you can do. The big difference is that using a site such as Medium will likely
    get your work in front of more people faster because technical readers congregate
    there, in a sense, whereas if it’s your own site, you’ll need to get into advertising
    and awareness yourself. You could start on Medium and build a bit of an audience
    who knows your work and then migrate to your own site as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'When writing such articles, a few things to remember are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: It’s inevitable, no matter how well you think you’ve done, that *someone* is
    going to criticize your work. It’s just the reality of the world we live in. So,
    be ready for it when it comes, grow a thick skin, and see whether there’s anything
    of value in the criticism. There could be a nugget of truth wrapped in some unkind
    words that you can get some benefit from if you can find it (of course, there
    will always be a few people who are just mean for the sake of being mean, so you’ll
    need to learn how and when to simply ignore people too).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember that your articles don’t necessarily need to be huge and grandiose
    to bring value to people. Sometimes, just a few paragraphs might be all someone
    needs to have a “eureka!” moment, and they’ll thank you for it just as much as
    if you had written a full-length book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose topics that you’re passionate about. People can usually tell when a writer
    is just going through the motions or when they are actually excited about what
    they’re writing about. Be the latter, because it always comes across better.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical reviewer for authors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another way you can give back is to be a technical reviewer of books such as
    this one!
  prefs: []
  type: TYPE_NORMAL
- en: Whenever an author writes a technical book, they need people to go over it and
    keep them honest, making sure they haven’t made any technical mistakes. Writing
    a book ain’t easy, believe me, and no matter how hard you try, there’s usually
    something that doesn’t work right. Maybe there are differences across operating
    systems you didn’t know about. Maybe there are different versions of libraries
    that you didn’t use when writing the example code that breaks those examples.
    Maybe you simply didn’t explain something as clearly as you thought you did. All
    of this is where technical reviewers come into play.
  prefs: []
  type: TYPE_NORMAL
- en: Being a technical reviewer requires you to read, test, and look for problems
    that readers might encounter. Sometimes, you’ll have to be an expert yourself
    in the topic the book is about, but often, it can almost be better if you aren’t.
    That’s because it’s logical to think that most technical books are being read
    by people who are trying to learn, not by those who are already experts in a given
    topic. Given that supposition, it therefore makes sense that a technical reviewer
    might not be either (though, certainly, you would always be expected to have *some*
    knowledge going in – it largely comes down to how a given publisher approaches
    things).
  prefs: []
  type: TYPE_NORMAL
- en: How do you get a gig as a technical reviewer? Well, there are essentially three
    ways. One is that you can be someone who is found and approached. For example,
    if you’ve written a bunch of articles on React, then a publisher working on a
    React book might notice you and approach you, recognizing that you’re someone
    who knows their stuff. Another way is to know the author. Authors are often asked
    whether they know anyone who could serve as a technical reviewer, so if you have
    a strong network then you may get asked by people you are acquainted with who
    are writing books. The third way is to simply approach a publisher! Go to their
    website and look for contact links for editors, or maybe acquisition people, and
    send them a note saying you’re interested in being a technical reviewer. You might
    not hit paydirt right away, but you also may find your name added to a list that
    gets you contacted later on.
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll give you a bonus fourth way, too: read existing books, look for mistakes,
    and send error data to the publisher. Not only will you hone your technical reviewer
    skills and help authors and publishers, but you might get noticed if you submit
    many, and that could lead to opportunities later.'
  prefs: []
  type: TYPE_NORMAL
- en: Writing books yourself
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Of course, you may, at some point, move beyond being a blogger or technical
    reviewer and decide that writing a book yourself might be something you want to
    do.
  prefs: []
  type: TYPE_NORMAL
- en: Publishers such as Packt are pretty receptive to new authors, so if it’s something
    you think you might want to do then definitely give it a shot. You may even get
    approached by a publisher at some point if they see your writing out there already,
    but you can always approach them yourself. Most if not all publishers have links
    on their sites that direct you on how to submit book proposals to them. Typically,
    that involves submitting some overview information about what you want to write,
    and often, they’ll want a rough outline that shows what the book will be like
    too.
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s kind of like fishing, really: you drop some bait in the water in the form
    of your proposal, and then wait for a bite! Once it comes, then the hard work
    begins!'
  prefs: []
  type: TYPE_NORMAL
- en: And while it’s a lot of hard work, it has big benefits for you. For starters,
    learning and practicing how to explain yourself clearly is one, given that’s a
    key requirement of any book. Another benefit is that as an author, there’s an
    expectation that you know the material you write about well, but since no one
    knows it all, you may have to do some research and learn about it as you go.
  prefs: []
  type: TYPE_NORMAL
- en: And, having on your resume that you wrote a book or two doesn’t look half-bad!
  prefs: []
  type: TYPE_NORMAL
- en: Plus, should you wind up writing a hit book, there can be some very nice financial
    benefits too. The publishing industry has gotten a bit tougher since the internet
    became what it is today, but people do still read and even often prefer books,
    so there can still be gold in them thar hills. But even if you don’t get rich
    writing a book, the benefits you get from it aside from money can make it a worthwhile
    experience. Just keep in mind that it’s going to be a lot of hard work, so be
    prepared for that going in. But as long as you are, go for it, I say!
  prefs: []
  type: TYPE_NORMAL
- en: Mentoring
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The final way you can give back is to become a mentor. I focus more on being
    a mentor because being a teacher usually requires standardized certifications,
    degrees, and other accreditations. Being a mentor, however, normally doesn’t.
  prefs: []
  type: TYPE_NORMAL
- en: Who can you mentor? Well, it can really be anyone, but one good possibility
    is older folks around your town. Perhaps there is a senior center near you, or
    an active center for older adults. These types of places sometimes have night
    sessions for people who want to learn technical skills. Now, there may not be
    quite as much call for web development learning there, but you never know! And
    even if there’s not, teaching people how to use computers generally, and how to
    use the World Wide Web, can be very valuable to them and help you ensure you know
    your basics too.
  prefs: []
  type: TYPE_NORMAL
- en: Another way you can sometimes get into mentoring is to frequent online social
    sites where people are discussing web development and look for people who are
    themselves looking for help. Sometimes, you’ll see someone outright asking for
    a mentor, someone to guide them in their learning. Jump in and offer to help them!
  prefs: []
  type: TYPE_NORMAL
- en: There are also some sites specific to finding and being mentors. One example
    is [mentorcruise.com](http://mentorcruise.com). While you can become a mentor
    on this site and earn some money, that will oftentimes be a secondary concern
    to simply helping people. Being a mentor is a time commitment, though, so you
    have to make sure you’re ready for that. That might entail a lot of time or not
    very much at all; it simply depends on the arrangement you make.
  prefs: []
  type: TYPE_NORMAL
- en: The overarching message of this section is that you help yourself in various
    ways when you help others. Yes, that might be in the form of additional income,
    but that’s not really what it’s all about. It’s really about the positive feelings
    you get from helping others, and the benefits to your skills and knowledge that
    come from helping others with theirs.
  prefs: []
  type: TYPE_NORMAL
- en: But regardless of whether you choose to mentor or not, it’s all probably driving
    toward building your career over time, advancing yourself through various positions
    as you grow. Let’s talk about some of the positions you might aspire to.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced positions to aspire to
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To be a web developer is, on its own, a fine goal. And you may find it to be
    completely rewarding and fulfilling. I had a manager many years ago who willingly
    took a pay *cut* just so he could go back to being just a programmer because he
    loved that part of his job but discovered he really hated the management part
    of it.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, some people find out that they enjoy managing people, directing
    projects, and doing all the sorts of things that managers and higher-ups typically
    do. And there may come a time when you’re looking around, having been a web developer
    for a while, and you start to think, “I might be ready for new challenges.”
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, web developers can progress through several advanced stages in
    their career if they want to, all the way up to executive positions such as chief
    information officer. To give you an idea of the types of jobs you might wind up
    doing in your potential career progression, let’s look at some of the most common
    titles you might encounter.
  prefs: []
  type: TYPE_NORMAL
- en: To be clear, there is no definitive guide to getting ahead in this field (or
    really any other!). But given what is generally known about the various roles
    and what they require, we can put together some general advice that should help
    you get to each new role.
  prefs: []
  type: TYPE_NORMAL
- en: Senior developer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After gaining enough practical experience, a web developer can advance to a
    senior role where they’ll focus on more complex projects, as well as start to
    become a mentor to junior developers and generally lead development efforts from
    a technical perspective.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: More advanced programming skills in various languages and frameworks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A strong understanding of software development methodologies and be able to
    apply them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience with the tools of the trade outside of programming, such as database
    management and performance optimization, is a must
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Start to mentor junior developers in order to demonstrate your leadership and
    communication skills. Look for opportunities where you can help people.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take on more complex tasks to showcase your problem-solving and project management
    abilities. When a challenging part of a system comes up, raise your hand to do
    it and then take control of the effort.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demonstrate continuous learning of new technologies to stay current and increase
    value to the organization. When decisions are being made about how to do things,
    bring new ideas and technologies to the table *where they* *make sense*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical lead
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this role, you would be responsible for overseeing the technical aspects
    of projects over a wide range of concerns, ensuring that the development team
    meets the project’s technical requirements and standards. You would also, at this
    point, act as something of a bridge between the development team and management.
    The difference between a senior developer and a lead developer is often razor-thin
    and, commonly, only one of these roles might exist in a given organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Proven experience in leading development projects in a senior role
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demonstrated problem-solving, technical, and team management skills over the
    course of several projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to translate business requirements into technical solutions is necessary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Work to show that you can work across departments, communicating with other
    teams to facilitate smoother project execution. Showing you can put all the pieces
    together is key.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advocate for best practices in code quality, testing, and maintainability. Be
    a leader in enhancing the quality of the projects you work on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage project timelines and deliverables effectively to show organizational
    capabilities. You don’t need to be a project manager yourself, but you do need
    to work hand-in-hand with project managers and help organize the projects you
    are both working on to show you can perform those duties.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Architect
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Architects, whether software, web, or system architects, are responsible for
    the design and overall architecture of a project, focusing on concerns such as
    scalability, security, and integration with other systems. They make high-level
    design choices and set technical standards including the tooling to be used, the
    platform to be built on, and the coding standards to be adhered to. This is the
    point where, usually, you stop coding on a daily basis, though many architects
    still find some time to code a little bit, but you’ll spend more time on things
    such as diagrams, documentation, and meetings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A deep understanding of system design, architecture patterns, and best practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience in designing scalable, secure, and robust systems will be needed,
    demonstrated across several projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Knowledge of various architectural styles, frameworks, and other foundational
    technologies that projects are built on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Design and implement systems that align with business goals, proving strategic
    thinking. When working on projects, look for opportunities where you can make
    suggestions for things that will proactively make the business stakeholders happy,
    solving problems they may not even realize they have.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lead architectural reviews and decision-making processes. Get yourself involved
    in the meetings where the decisions are made and don’t be afraid to speak up!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribute to the technology roadmap and innovation strategies of the organization.
    Showing that you understand the business and what it needs from technology is
    what it’s all about.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is usually the first purely management role a developer reaches and involves
    overseeing multiple development teams, managing budgets, and ensuring project
    timelines are met. Development managers handle the technical and personnel management
    of their teams, but they rely on others to deal with a lot of the day-to-day technical
    details. It’s critical, though, that a development manager has a good technical
    foundation to be able to communicate effectively with their teams.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Strong, demonstrated leadership, and effective people management skills
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Budgeting and resource allocation experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proficiency in project management methodologies and tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Develop and mentor teams to build a strong department. Look for opportunities
    where you can suggest ways to reorganize teams to be more effective.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cultivate relationships with other departments to align development efforts
    with business needs. Yes, we’re effectively talking about networking here, because
    having a web of people you can call upon and work well with shows you’re ready
    for this role.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Director of engineering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At this level, a person oversees all engineering or development activities within
    an organization, sets the strategic direction for the development department,
    and works closely with other executives to align technical projects with business
    goals. This isn’t quite considered an executive-level position usually, but someone
    in this role will definitely spend a lot of time talking to executives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Strategic planning and execution skills
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extensive experience in managing large and diverse technology teams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A strong and deep understanding of the core business and an ability to align
    technology with company aims
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Develop long-term technology strategies that support business goals. This shows
    that you are thinking at a high level, in a global sense, about the entire business
    and what it does.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Foster innovation and continuous improvement in technology practices. You’ll
    need to not only make suggestions but push to make things happen every chance
    you get.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage stakeholder relationships and communicate technology strategy effectively.
    This means ensuring everyone is happy and pulling in the same direction across
    the business and technology people.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vice president of technology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The VP of technology has a broader role that may encompass several departments,
    areas of technology, or lines of business. This role requires leading large teams
    and being responsible for the technological direction and vision of the company.
    Here, you’re definitely out of the technology game in terms of implementing anything
    yourself. Instead, you’re deciding what large groups of people will do.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Experience in a senior technology leadership role (there are no two ways about
    it)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deep understanding of not only the business but also the industry and market
    trends the business operates in
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to lead large-scale technology initiatives and transformations over
    a long period of time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Drive technology vision and ensure it integrates with the overall business strategy.
    You’re the idea person at this point, the one who people look to when deciding
    what resources should go toward.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lead and inspire large technology teams across different areas. You’re not just
    a figurehead, but inspiring people is part of the gig!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Establish strong governance and processes for technology management. Things
    such as regulatory concerns become a big part of your job at that point, depending
    on the industry.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chief technology officer (CTO)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is our first entry into the C-suite, which is the colloquialism given to
    anyone with a title beginning with chief, or C. They are one of the executives
    of a company. The CTO is responsible for the technological roadmap of the company,
    focusing on integrating new technologies, overseeing the engineering department,
    and making decisions that align with the company’s strategic goals. This is, in
    some ways, more of a business role than a technology role, though the overall
    size of the organization is a big factor into what degree this is the case.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A track record of innovative, technological solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong business and technology strategic planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience in leading technology at a strategic level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the actions to take to advance to this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Work to define and drive the company’s technological agenda to foster innovation
    and growth. It’s big-vision time here, with goals that will affect the entire
    company.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build and maintain high-level relationships with partners, vendors, and industry
    leaders. In a sense, an executive position such as CTO is all about relationships,
    both inside the company and without.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure the alignment of technology functions with business goals at a high level.
    Anything that doesn’t advance the overall goals of the company is something you
    should work to fix.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chief information officer (CIO)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As compared to a CTO, the CIO definitely has a more business-oriented focus.
    They manage the organization’s IT infrastructure at large, and the services provided
    to support business goals. The CIO is involved in strategic planning at a global
    level, determines investments in technology, and ensures that the company’s technology
    infrastructure supports its overall business objectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Requirements of this role might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Extensive experience in IT management and strategic planning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deep understanding of how technology affects various aspects of the business
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong leadership skills, financial knowledge, and strategic business planning
    skills
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Actions to take to advance to this role include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Oversee the company’s technological infrastructure to ensure it meets strategic
    business objectives. You’ll most likely be at a CTO level at this point, so it’s
    really a question of doing well in that role.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop and implement IT policies and systems that align with corporate goals.
    You’re truly driving the boat now, so you have to have a good vision of how things
    should be and push everyone below you to implement it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lead digital transformation initiatives and manage the organization’s IT investments.
    Look for opportunities where you can drastically change the way things are done
    from a technological perspective and transform them (when it makes sense, of course
    – don’t just do things for the sake of doing things!).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transitioning through these roles demands an evolving blend of technical expertise,
    leadership skills, strategic thinking, and a deep understanding of both technology
    and business, more so the higher up the ladder you go. Networking, continuous
    learning, and gaining experience in various aspects of technology and management
    are essential for advancing to these higher-level positions, as are solid communication
    and interpersonal skills.
  prefs: []
  type: TYPE_NORMAL
- en: Note that these titles may not be the same in every organization, and some may
    not exist at all, while there may be others that aren’t shown here. But these
    are fairly typical and should provide a good idea of the progression you might
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: To advance through these jobs, you must not only excel in technical abilities
    but also develop strong leadership, strategic thinking, and business skills. Networking,
    pursuing ongoing education opportunities, and staying on top of industry changes
    also play a critical role in navigating the career path from web developer to
    CIO.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the roadmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'That’s it! You did it! You’ve uncovered all the squares, as Figure *12**.10*
    shows:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 12.10: \uFEFFThe roadmap, now completed](img/B18315_12_10_NEW.jpg)"
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.10: The roadmap, now completed'
  prefs: []
  type: TYPE_NORMAL
- en: The last three – **Ongoing Growth**, **Open Source Contributions**, and **Certifications**
    – close out the roadmap. You can now see all the elements that go into being a
    modern-day web developer, and all the skills and abilities you need to cultivate
    to have a gainful career in this industry. Congratulations! It was a long journey,
    but a fruitful one!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at some ways you can work to advance your career.
    We discussed how the idea of ABC – Always Be Coding – is key to keeping your skills
    sharp and fresh. We talked about how certifications may (or may not) have value
    in convincing people of your knowledge. We also looked at some websites you can
    frequent to keep you up-to-date on all the latest industry news and happenings.
  prefs: []
  type: TYPE_NORMAL
- en: We discussed ways you can “give back” by helping others while, in the process,
    helping yourself learn and stay sharp. Finally, we looked at some of the career
    goals you may have, roles you might aspire to, what’s required of them, and (some
    of) what it takes to achieve them.
  prefs: []
  type: TYPE_NORMAL
- en: Whew – and that’s it, dear reader, you did it! You finished the entire book!
    I hope, at this point, you have a clear picture of what is required of you as
    an aspiring web developer, and I hope I’ve been able to build with you a solid
    foundation of knowledge from which you can build a successful career. Most of
    all, I hope I’ve at least helped develop in you a feeling of “Hey, this could
    actually be fun and fulfilling!” because I believe that can be the case if you
    decide this is a path for you.
  prefs: []
  type: TYPE_NORMAL
- en: Good luck in your journey, and I hope to see you as a colleague down the road!
  prefs: []
  type: TYPE_NORMAL
