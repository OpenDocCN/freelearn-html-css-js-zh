["```js\n$ node --version\nv22.9.0\n$ npm --version\n10.8.3\n```", "```js\n$ mkdir consuming-modules\n$ cd consuming-modules\n```", "```js\n$ touch require-express.js\n```", "```js\n    $ npm init\n    ```", "```js\n    {\n      \"name\": \"consuming-modules\",\n      \"version\": \"1.0.0\",\n      \"main\": \"require-express.js\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" &&\n          exit 1\"\n      },\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"description\": \"\"\n    }\n    ```", "```js\n    $ npm install express\n    ```", "```js\n    {\n      \"name\": \"consuming-modules\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"main\": \"require-express.js\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" &&\n          exit 1\"\n      },\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"express\": \"^4.18.2\"\n      }\n    }\n    ```", "```js\n    const express = require('express');\n    ```", "```js\n    $ node require-express.js\n    internal/modules/cjs/loader.js:979\n      throw err;\n      ^\n    Error: Cannot find module 'express'\n    ```", "```js\n$ npm init --yes\n```", "```js\n$ npm config set init.author.name \"Your Name\"\n```", "```js\n$ ls node_modules\n     |-- accepts\n     |-- escape-html\n     |-- ipaddr.js\n     |-- raw-body\n     |-- array-flatten\n     |-- etag\n     |-- media-typer\n     |-- safe-buffer\n     |-- ...\n```", "```js\n\"express\": \"^4.18.2\"\n```", "```js\nconst express = require('express');\n```", "```js\nconst file = require('./file.js');\n```", "```js\n$ npm install --save-dev --save-exact semistandard\n```", "```js\n{\n  \"name\": \"consuming-modules\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"require-express.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"express\": \"^4.18.2\"\n  },\n  \"devDependencies\": {\n    \"semistandard\": \"17.0.0\"\n  }\n}\n```", "```js\n$ ./node_modules/semistandard/bin/cmd.js\n```", "```js\n$ npm install --global lolcatjs\n```", "```js\n$ which lolcatjs\n/Users/bgriggs/.nvm/versions/node/v20.11.0/bin/lolcatjs\n```", "```js\n$ lolcatjs --help\n```", "```js\n$ npx lolcatjs\n```", "```js\n    $ git clone git@github.com:username/temperature-converter.git\n    Cloning into 'temperature-converter'...\n    remote: Enumerating objects: 5, done.\n    remote: Counting objects: 100% (5/5), done.\n    remote: Compressing objects: 100% (5/5), done.\n    remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0\n    Receiving objects: 100% (5/5), done.\n    ```", "```js\n    $ cd temperature-converter\n    $ ls\n    LICENSE   README.md\n    ```", "```js\n    $ git status\n    On branch main\n    Your branch is up to date with 'origin/main'.\n    nothing to commit, working tree clean\n    ```", "```js\n    $ npm init\n    ```", "```js\n    {\n      \"name\": \"temperature-converter\",\n      \"version\": \"0.1.0\",\n      \"description\": \"Converts temperatures between Fahrenheit and Celsius.\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n      },\n      \"keywords\": [\n        \"temperature\",\n        \"converter\",\n        \"utility\"\n      ],\n      \"author\": \"Beth Griggs\",\n      \"license\": \"MIT\",\n      \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/BethGriggs/temperature-converter.git\"\n      },\n      \"bugs\": {\n        \"url\": \"https://github.com/BethGriggs/temperature-converter/issues\"\n      },\n      \"homepage\": \"https://github.com/BethGriggs/temperature-converter#readme\"\n    }\n    ```", "```js\n    $ git add package.json README.md\n    $ git commit --message \"first commit\"\n    $ git push origin main\n    ```", "```js\n    Enumerating objects: 6, done.\n    Counting objects: 100% (6/6), done.\n    Delta compression using up to 10 threads\n    Compressing objects: 100% (4/4), done.\n    Writing objects: 100% (4/4), 1020 bytes | 1020.00 KiB/s, done.\n    Total 4 (delta 1), reused 0 (delta 0), pack-reused 0\n    remote: Resolving deltas: 100% (1/1), completed with 1 local object.\n    To github.com:username/temperature-converter.git\n       c0f53ef..6d27a2a  main -> main\n    ```", "```js\n$ touch index.js\n```", "```js\n$ touch test.js\n```", "```js\n    $ npm install --save-dev --save-exact semistandard\n    ```", "```js\n    // Convert Fahrenheit to Celsius\n    function fahrenheitToCelsius(fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n    ```", "```js\n    // Convert Celsius to Fahrenheit\n    function celsiusToFahrenheit(celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n    ```", "```js\n    // Export the conversion functions\n    module.exports = {\n        fahrenheitToCelsius,\n        celsiusToFahrenheit\n    };\n    ```", "```js\n    $ node --print \"require('./').fahrenheitToCelsius(100)\"\n    37.77777777777778\n    $ node --print \"require('./').celsiusToFahrenheit(37)\"\n    98.6\n    ```", "```js\n    const assert = require('assert');\n    const { fahrenheitToCelsius, celsiusToFahrenheit }\n      = require('./index');\n    // Test fahrenheitToCelsius\n    assert.strictEqual(fahrenheitToCelsius(32), 0, '32°F should be 0');\n    assert.strictEqual(fahrenheitToCelsius(212), 100, '212°F should be 100');\n    // Test celsiusToFahrenheit\n    assert.strictEqual(celsiusToFahrenheit(0), 32, '0°C should be 32');\n    assert.strictEqual(celsiusToFahrenheit(100), 212, '100°C should be 212');\n    console.log('All tests passed!');\n    ```", "```js\n    $ node test.js\n    All tests passed!\n    ```", "```js\n      \"scripts\": {\n        \"lint\": \"semistandard *.js\",\n        \"test\": \"node test.js\"\n      },\n    ```", "```js\n    $ npm run lint\n    > temperature-converter@0.1.0 lint\n    > semistandard *.js\n    ```", "```js\n    $ npm run lint -- --fix\n    ```", "```js\n    $ npm test\n    > temperature-converter@0.1.0 test\n    > node test.js\n    All tests passed!\n    ```", "```js\n    $ git add package.json package-lock.json index.js test.js\n    $ git commit --message 'implement temperature converter, add tests'\n    $ git push origin main\n    ```", "```js\n    $ npm login\n    npm notice Log in on https://registry.npmjs.org/\n    Login at:\n    https://www.npmjs.com/login?next=/login/cli/{UUID}\n    Press ENTER to open in the browser...\n    Logged in on https://registry.npmjs.org/.\n    ```", "```js\n    # Temperature Converter Module\n     A simple Node.js module for converting temperatures between Fahrenheit and Celsius.\n    # Example usage\n    ```", "```js\n    # Running Tests\n     To run tests and ensure the module is working as expected, navigate to the module's root directory and execute:\n    ```", "```js\n    # License\n    This project is licensed under the MIT License.\n    ```", "```js\n    {\n      \"name\": \"@npmusername/temperature-converter\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Converts temperatures between Fahrenheit and Celsius.\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"lint\": \"semistandard *.js\",\n        \"test\": \"node test.js\"\n      },\n      \"keywords\": [\n        \"temperature\",\n        \"converter\",\n        \"utility\"\n      ],\n      \"author\": \"Forename Surname\",\n      \"license\": \"MIT\",\n      \"devDependencies\": {\n        \"semistandard\": \"17.0.0\"\n      },\n      \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/username/temperature-converter.git\"\n      },\n      \"bugs\": {\n        \"url\": \"https://github.com/username/temperature-converter/issues\"\n      },\n      „homepage\": „https://github.com/username/temperature-converter#readme\"\n    }\n    ```", "```js\n    $ git add .\n    $ git commit --message \"v1.0.0\"\n    $ git push origin main\n    $ git tag v1.0.0\n    $ git push origin v1.0.0\n    ```", "```js\n    $ npm publish --access=public\n    ```", "```js\n$ npm publish --access=public\n```", "```js\n  \"scripts\": {\n    \"prepublishOnly\": \"npm run lint\",\n    \"lint\": \"semistandard *.js\",\n    \"test\": \"node test.js\"\n  }\n```", "```js\n\"prepublishOnly\": \"npm run lint && npm test\",\n```", "```js\n# Dependency directories\ntest/\n```", "```js\n$ npm config set registry https://registry.your-registry.npme.io/\n```", "```js\n$ npm config get registry\nhttps://registry.npmjs.org/\n```", "```js\n$ npm config list\n; \"user\" config from /Users/bgriggs/.npmrc\n; node bin location = /Users/bgriggs/.nvm/versions/node/v22.9.0/bin/node\n; node version = v22.9.0\n; npm local prefix = /Users/bgriggs/Node.js-Cookbook/Chapter05/temperature-converter\n; npm version = 10.2.4\n; cwd = /Users/bgriggs/Node.js-Cookbook/Chapter05/temperature-converter\n; HOME = /Users/bgriggs\n; Run `npm config ls -l` to show all defaults\n```", "```js\nregistry= https://registry.your-registry.npme.io/\n```", "```js\n$ mkdir ecmascript-modules\n$ cd ecmascript-modules\n```", "```js\n$ touch index.js circle.js rectangle.js\n```", "```js\n    $ npm init --yes\n    ```", "```js\n    {\n      \"name\": \"ecmascript-modules\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"type\": \"module\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\"\n    }\n    ```", "```js\n    const PI = Math.PI;\n    function area(radius) {\n      return PI * radius * radius;\n    }\n    function circumference(radius) {\n      return 2 * PI * radius;\n    }\n    export default area;\n    export { circumference };\n    ```", "```js\n    function area(length, width) {\n      return length * width;\n    }\n    function perimeter(length, width) {\n      return 2 * (length + width);\n    }\n    export { area, perimeter };\n    ```", "```js\n    $ touch mathUtils.js\n    ```", "```js\n    export function round(number, precision) {\n      const factor = Math.pow(10, precision);\n      return Math.round(number * factor) / factor;\n    }\n    ```", "```js\n    import circleArea, { circumference } from './circle.js';\n    import * as rectangle from './rectangle.js';\n    import { round } from './mathUtils.js';\n    function calculateCircleMetrics(radius) {\n      console.log(`Circle with radius ${radius}:`);\n      console.log(`Area: ${round(circleArea(radius),\n        2)}`);\n      console.log(`Circumference:\n        ${round(circumference(radius), 2)}`);\n    }\n    function calculateRectangleMetrics(length, width) {\n      console.log(`\\nRectangle with length ${length}\n        and width ${width}:`);\n      console.log(`Area: ${round(rectangle.area(length,\n        width), 2)}`);\n      console.log(`Perimeter:\n        ${round(rectangle.perimeter(length, width),\n        2)}`);\n    }\n    calculateCircleMetrics(5);\n    calculateRectangleMetrics(10, 5);\n    ```", "```js\n    $ node index.js\n    Circle with radius 5:\n    Area: 78.54\n    Circumference: 31.42\n    Rectangle with length 10 and width 5:\n    Area: 50\n    Perimeter: 30\n    ```", "```js\n    // Importing a CommonJS module in ESM\n    import cjsModule from './module.cjs';\n    console.log(cjsModule.someFunction());\n    ```", "```js\n    // Dynamically importing a CommonJS module\n    import('./module.cjs').then((cjsModule) => {\n      console.log(cjsModule.someFunction());\n    });\n    ```", "```js\n// CJS wrapper for an ESM module\nconst esmModule = await import('./module.mjs');\nmodule.exports = esmModule.default;\n```"]