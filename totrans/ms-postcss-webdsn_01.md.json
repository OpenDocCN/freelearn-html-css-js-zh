["```js\n    node –v\n\n    ```", "```js\n    npm init\n\n    ```", "```js\n    npm install --global gulp\n\n    ```", "```js\n    npm install --save-dev gulp\n\n    ```", "```js\n    npm install --save-dev gulp-postcss\n\n    ```", "```js\n    npm install --save-dev autoprefixer\n\n    ```", "```js\n    body {\n      display: flex;\n      background: green;\n    }\n    ```", "```js\n    gulp styles\n\n    ```", "```js\n    npm install --save-dev gulp-sourcemaps\n\n    ```", "```js\n    var autoprefixer = require('autoprefixer');\n    var sourcemaps = require('gulp-sourcemaps');\n\n    ```", "```js\n    .pipe(postcss([ autoprefixer ]))\n    .pipe(sourcemaps.init())\n    .pipe(sourcemaps.write('maps/'))\n    .pipe(gulp.dest('dest/'));\n    ```", "```js\n    gulp styles\n\n    ```", "```js\n    npm install -–save-dev cssnano\n    npm install -–save-dev gulp-rename\n\n    ```", "```js\n    gulp.task('rename', ['styles'], function () {\n      return gulp.src('dest/example.css')\n       .pipe(postcss([ cssnano ]))\n       .pipe(rename('example.min.css'))\n        .pipe(gulp.dest(\"dest/\"));\n    });\n\n    gulp.task('default', ['styles', 'rename']);\n    ```", "```js\n    var sourcemaps = require('gulp-sourcemaps');\n    var rename = require('gulp-rename');\n    var cssnano = require('cssnano');\n\n    ```", "```js\n    gulp.task('styles', function() {\n    ```", "```js\n    gulp\n\n    ```", "```js\n    .pipe(rename('example.min.css'))\n    .pipe(sourcemaps.init())\n    .pipe(sourcemaps.write('maps/'))\n    .pipe(gulp.dest(\"dest/\"));\n```", "```js\ngulp.task('default', ['styles', 'rename', 'sourcemaps']);\n\nvar watcher = gulp.watch('src/*.css', ['default']);\nwatcher.on('change', function(event) {\n  console.log('File ' + event.path + ' was ' + event.type + ',     running tasks...');\n});\n\n```", "```js\n    npm install stylelint\n\n    ```", "```js\n    var cssnano = require('cssnano');\n    var stylelint = require('stylelint');\n    var reporter = require('postcss-reporter');\n\n    ```", "```js\n    gulp.task(\"lint-styles\", function() {\n      return gulp.src(\"src/*.css\")\n        .pipe(postcss([ stylelint({ \n          \"rules\": {\n            \"color-no-invalid-hex\": 2,\n            \"declaration-colon-space-before\": [2, \"never\"],\n            \"indentation\": [2, 2],\n            \"number-leading-zero\": [2, \"always\"]\n          }\n        }),\n        reporter({\n          clearMessages: true,\n        })\n      ]))\n    });\n    ```", "```js\n    gulp\n\n    ```", "```js\n    .pipe(postcss([ stylelint({ \n        \"rules\": {\n          \"color-no-invalid-hex\": true,\n          …\n        }\n      }),\n```"]