["```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    alert(`Vue.version = ${Vue.version}`);\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\">First div</div>\n```", "```js\n<div>The rest of the page is not managed by \n```", "```js\n    Vue.js</div>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      template : \"This div is managed with Vue.js\"\n```", "```js\n    });\n```", "```js\n// mount the Vue.js application on the <div> having the \n```", "```js\n    // id \"app\"\n```", "```js\n    var vm = app.mount(\"div#app\");    \n```", "```js\n</script>\n```", "```js\n</html>\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      template : \"The counter is: {{count}}\",\n```", "```js\n      data() {\n```", "```js\n// return an object containing the reactive \n```", "```js\n        // variables\n```", "```js\n        return {\n```", "```js\n          count : 0\n```", "```js\n        }\n```", "```js\n      }\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n</script>\n```", "```js\n</html>\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      template : \"The counter is: {{count}}\",\n```", "```js\n      data() {\n```", "```js\n        // return an object containing the reactive \n```", "```js\n        // variables\n```", "```js\n        return {\n```", "```js\n          count : 0\n```", "```js\n        }\n```", "```js\n      }\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n    setInterval(function() {\n```", "```js\n      vm.count += 1;\n```", "```js\n    }, 1000);\n```", "```js\n</script>\n```", "```js\n</html>\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      template : \"<counter />\"\n```", "```js\n    });\n```", "```js\n    app.component(\"counter\", {\n```", "```js\n      template : \"The counter is: {{count}}\",\n```", "```js\n      data() {\n```", "```js\n        return {\n```", "```js\n          count : 0\n```", "```js\n        }\n```", "```js\n      }\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n</script>\n```", "```js\n</html>\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script>\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      template : \"<counter />\"\n```", "```js\n    });\n```", "```js\n    app.component(\"counter\", {\n```", "```js\n      template : \"The counter is: {{count}}\",\n```", "```js\n      data() {\n```", "```js\n        return {\n```", "```js\n          count : 0\n```", "```js\n        }\n```", "```js\n      },\n```", "```js\n      created() {\n```", "```js\n        setInterval(()=>{  // do not use the function()\n```", "```js\n                           // form here,\n```", "```js\n                           // otherwise the \"this\" object\n```", "```js\n                           // would not be the same\n```", "```js\n          this.count++;\n```", "```js\n        }, 1000);\n```", "```js\n      }\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      count: 0\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : \"The counter is: {{count}}\",\n```", "```js\n  created() {\n```", "```js\n    setInterval(() => {\n```", "```js\n      this.count += 1;\n```", "```js\n    }, 1000)\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script type=\"module\">\n```", "```js\n    import Counter from \"./counter.js\";\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      components : {\n```", "```js\n        Counter:Counter\n```", "```js\n      },\n```", "```js\n      template : \"<counter />\"   // or \"<Counter />\"\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      count: 0\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `{{time()}} &nbsp;&nbsp; The counter is: \n```", "```js\n  {{count}}`,\n```", "```js\n  created() {\n```", "```js\n    setInterval(() => {\n```", "```js\n      this.count += 1;\n```", "```js\n    }, 1000)\n```", "```js\n  },\n```", "```js\n  methods : {\n```", "```js\n    time() {\n```", "```js\n     // return time as HH:MM:SS\n```", "```js\n     var date = new Date();\n```", "```js\n     var hour = date.getHours();\n```", "```js\n     var min = date.getMinutes();\n```", "```js\n     var sec = date.getSeconds();\n```", "```js\n     if (hour < 10) hour = \"0\" + hour;\n```", "```js\n     if (min < 10) min = \"0\" + min;\n```", "```js\n     if (sec < 10) sec = \"0\" + sec;\n```", "```js\n     return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      count: 0\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n template : `{{time()}} &nbsp;&nbsp; The counter is: \n```", "```js\n  {{count}}, double is: {{countX2}}`,\n```", "```js\n  created() {\n```", "```js\n    setInterval(() => {\n```", "```js\n      this.count += 1;\n```", "```js\n    }, 1000)\n```", "```js\n  },\n```", "```js\n  methods : {\n```", "```js\n    time() {\n```", "```js\n     // return time as HH:MM:SS\n```", "```js\n     var date = new Date();\n```", "```js\n     var hour = date.getHours();\n```", "```js\n     var min = date.getMinutes();\n```", "```js\n     var sec = date.getSeconds();\n```", "```js\n     if (hour < 10) hour = \"0\" + hour;\n```", "```js\n     if (min < 10) min = \"0\" + min;\n```", "```js\n     if (sec < 10) sec = \"0\" + sec;\n```", "```js\n     return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  computed : {\n```", "```js\n    countX2() {\n```", "```js\n      return 2 * this.count;\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script type=\"module\">\n```", "```js\n    import Counter from \"./counter.js\";\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      components : {\n```", "```js\n        Counter:Counter\n```", "```js\n      },\n```", "```js\n      template : \"<counter start='10' />\"\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      count : parseInt(this.start),  // we initialize the\n```", "```js\n                                     // count to the value\n```", "```js\n                                     // of start\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `{{time()}} &nbsp;&nbsp; The counter is: \n```", "```js\n  {{count}}, double is: {{countX2}}`,\n```", "```js\n  created() {\n```", "```js\n    var timer = setInterval(() => {\n```", "```js\n      this.count += 1;\n```", "```js\n    }, 1000)\n```", "```js\n  },\n```", "```js\n  methods : {\n```", "```js\n    time() {\n```", "```js\n     // return time as HH:MM:SS\n```", "```js\n     var date = new Date();\n```", "```js\n     var hour = date.getHours();\n```", "```js\n     var min = date.getMinutes();\n```", "```js\n     var sec = date.getSeconds();\n```", "```js\n     if (hour < 10) hour = \"0\" + hour;\n```", "```js\n     if (min < 10) min = \"0\" + min;\n```", "```js\n     if (sec < 10) sec = \"0\" + sec;\n```", "```js\n     return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  computed : {\n```", "```js\n    countX2() {\n```", "```js\n      return 2 * this.count;\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  props : [\n```", "```js\n    \"start\"\n```", "```js\n  ]\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\ntemplate : `\n```", "```js\n  {{time()}} &nbsp;&nbsp;\n```", "```js\n  <span v-if='count<=20'>The counter is: {{count}}</span>\n```", "```js\n`,\n```", "```js\ntemplate : `\n```", "```js\n  {{time()}} &nbsp;&nbsp;\n```", "```js\n  <span v-if='count<=20'>The counter is: {{count}}</span>\n```", "```js\n  <span v-else>The counter has exceeded 20, it is: \n```", "```js\n  {{count}}</span>\n```", "```js\n`,\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      counts : [\"Counter 1\", \"Counter 2\", \"Counter 3\", \n```", "```js\n      \"Counter 4\", \"Counter 5\"]\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <ul>\n```", "```js\n      <li v-for=\"count in counts\">\n```", "```js\n        <span>{{count}}</span>\n```", "```js\n      </li>\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      counts : [\"Counter 1\", \"Counter 2\", \"Counter 3\", \n```", "```js\n      \"Counter 4\", \"Counter 5\"]\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <ul>\n```", "```js\n      <li v-for=\"(count, index) in counts\">\n```", "```js\n        <span>Index {{index}} : {{count}}</span>\n```", "```js\n      </li>\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n}\n```", "```js\nexport default Counter;\n```", "```js\n<li v-for=\"(count, index) in counts\" :key=\"index\">\n```", "```js\nconst Counter = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      count : 10\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    Without v-model:\n```", "```js\n<input type=\"text\" :value=\"count\" /> &nbsp;&nbsp; \n```", "```js\n      count = {{count}} <br><br>\n```", "```js\n    With v-model:\n```", "```js\n<input type=\"text\" v-model=\"count\" /> &nbsp;&nbsp; \n```", "```js\n      count = {{count}}\n```", "```js\n  `,\n```", "```js\n}\n```", "```js\nexport default Counter;\n```"]