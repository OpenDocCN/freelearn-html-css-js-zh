["```js\nvar gameResources = [\"assets/cover.png\",\n  \"assets/tile_0.png\",\n  \"assets/tile_1.png\",\n  \"assets/tile_2.png\",\n  \"assets/tile_3.png\",\n  \"assets/tile_4.png\",\n  \"assets/tile_5.png\",\n  \"assets/tile_6.png\",\n  \"assets/tile_7.png\"\n];\n\n```", "```js\nvar gameScene = cc.Scene.extend({\n  onEnter:function () {\n    this._super();\n    gameLayer = new game();\n    gameLayer.init();\n    this.addChild(gameLayer);\n  }\n});\n\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    for(i=0;i<16;i++){\n      var tile = cc.Sprite.create(\"assets/cover.png\");\n      this.addChild(tile,0);\n      tile.setPosition(49+i%4*74,400-Math.floor(i/4)*74);\n    }\n  }\n});\n```", "```js\nvar gameScene = cc.Scene.extend({\n  // same as before\n});\n\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var gradient = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n this.addChild(gradient);\n    for(i=0;i<16;i++){\n      var tile = cc.Sprite.create(\"assets/cover.png\");\n      this.addChild(tile,0);\n      tile.setPosition(49+i%4*74,400-Math.floor(i/4)*74);\n    }\n  }\n});\n```", "```js\nvar gameScene = cc.Scene.extend({\n  onEnter:function () {\n    // same as before\n  }\n});\n\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var gradient = cc.LayerGradient.create(cc.c4b(0,0,0,255), cc.c4b(0x46,0x82,0xB4,255));\n    this.addChild(gradient);\n    for(i=0;i<16;i++){\n      var tile = new MemoryTile();\n      this.addChild(tile,0);\n      tile.setPosition(49+i%4*74,400-Math.floor(i/4)*74);\n    }\n  }\n}); \nvar MemoryTile = cc.Sprite.extend({\n ctor:function() {\n this._super();\n this.initWithFile(\"assets/cover.png\");\n }\n});\n\n```", "```js\nvar tile = cc.Sprite.create(\"assets/cover.png\");\n```", "```js\nvar tile = new MemoryTile();\n\n```", "```js\nvar MemoryTile = cc.Sprite.extend({\n  ctor:function() {\n    this._super();\n    this.initWithFile(\"assets/cover.png\");\n  }\n})\n```", "```js\nvar MemoryTile  = cc.Sprite.extend({\n  ctor:function() {\n    this._super();\n    this.initWithFile(\"assets/cover.png\");\n    cc.eventManager.addListener(listener.clone(), this);\n  }\n})\n```", "```js\nvar listener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    var target = event.getCurrentTarget();\n    var location = target.convertToNodeSpace(touch.getLocation());\n    var targetSize = target.getContentSize();\n    var targetRectangle = cc.rect(0, 0, targetSize.width, targetSize.height);\n    if (cc.rectContainsPoint(targetRectangle, location)) {\n      console.log(\"I picked a tile!!\");\n    }\n  }\n})\n```", "```js\nvar listener = cc.EventListener.create({\n```", "```js\ncc.eventManager.addListener(listener.clone(), this);\n\n```", "```js\nevent: cc.EventListener.TOUCH_ONE_BY_ONE,\n```", "```js\nswallowTouches: true,\n```", "```js\nonTouchBegan: function (touch, event) {\n```", "```js\nvar target = event.getCurrentTarget();\n```", "```js\nvar location = target.convertToNodeSpace(touch.getLocation());\n```", "```js\nvar targetSize = target.getContentSize();\n```", "```js\nvar targetRectangle = cc.rect(0, 0, targetSize.width, targetSize.height);\n```", "```js\nif (cc.rectContainsPoint(targetRectangle, location)) {\n```", "```js\ncc.eventManager.addListener(listener.clone(), this);\n\n```", "```js\nvar gameArray = [0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7];\nvargameScene = cc.Scene.extend({\n  onEnter:function () {\n    // same as before\n  }\n});\n```", "```js\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var gradient = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n    this.addChild(gradient);\n    for(i=0;i<16;i++){\n      var tile = new MemoryTile();\n      tile.pictureValue = gameArray[i];\n      this.addChild(tile,0);\n      tile.setPosition(49+i%4*74,400-Math.floor(i/4)*74);\n    }\n  }\n});\n```", "```js\nvar listener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    var target = event.getCurrentTarget();\n    var location = target.convertToNodeSpace(touch.getLocation());\n    var targetSize = target.getContentSize();\n    var targetRectangle = cc.rect(0, 0, targetSize.width, targetSize.height);\n    if (cc.rectContainsPoint(targetRectangle, location)) {\n      target.initWithFile(\"assets/tile_\"+target.pictureValue+\".png\");\n    }\n  }\n}\n```", "```js\nVar gameArray = [0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7];\nvar pickedTiles = [];\n\n```", "```js\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan: function (touch, event) {\n    if(pickedTiles.length<2){\n      var target = event.getCurrentTarget();\n      var location = target.convertToNodeSpace(touch.getLocation());\n      var targetSize = target.getContentSize();\n      var targetRectangle = cc.rect(0, 0, targetSize.width, targetSize.height);\n      if (cc.rectContainsPoint(targetRectangle, location)) {\n        if(pickedTiles.indexOf(target)==-1){\n          target.initWithFile(\"assets/tile_\"+target.pictureValue+\".png\";\n          pickedTiles.push(target);\n          if(pickedTiles.length==2){\n            checkTiles();\n          }\n        }\n      }\n    }\n  }\n})\n```", "```js\nfunction checkTiles(){\nvar listener = cc.EventListener.create({\n  function checkTiles(){\n    var pause = setTimeout(function(){\n      if(pickedTiles[0].pictureValue!=pickedTiles[1].pictureValue){\n        pickedTiles[0].initWithFile(\"assets/cover.png\");\n        pickedTiles[1].initWithFile(\"assets/cover.png\");\n      }\n      else{\n        gameLayer.removeChild(pickedTiles[0]);\n        gameLayer.removeChild(pickedTiles[1]);\n      }\n      pickedTiles = [];\n    },2000);\n  }\n```", "```js\nVar gameArray = [0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7];\nvar pickedTiles = [];\nvar scoreText;\nvar moves=0;\n\n```", "```js\nvar shuffle = function(v){\nfor(var j, x, i = v.length; i; j = parseInt(Math.random() * i),x = v[--i], v[i] = v[j], v[j] = x);\nreturn v;\n};\n\n```", "```js\nvargameScene = cc.Scene.extend({\n  onEnter:function () {\n    gameArray = shuffle(gameArray);\n    this._super();\n    gameLayer = new game();\n    gameLayer.init();\n    this.addChild(gameLayer);\n  }\n});\n```", "```js\nvar game = cc.Layer.extend({\n  init:function () {\n    this._super();\n    var gradient = cc.LayerGradient.create(cc.color(0,0,0,255), cc.color(0x46,0x82,0xB4,255));\n    this.addChild(gradient);\n    scoreText = cc.LabelTTF.create(\"Moves: 0\",\"Arial\",\"32\",cc.TEXT_ALIGNMENT_CENTER);\n    this.addChild(scoreText);\n    scoreText.setPosition(90,50);\n    for(i=0;i<16;i++){\n      var tile = new MemoryTile();\n      tile.pictureValue = gameArray[i];\n      this.addChild(tile,0);\n      tile.setPosition(49+i%4*74,400-Math.floor(i/4)*74);\n    }\n  }\n});\n```", "```js\nfunction checkTiles(){\n  moves++;\n  scoreText.setString(\"Moves: \"+moves);\n  var pause = setTimeout(function(){\n    if(pickedTiles[0].pictureValue!=pickedTiles[1].pictureValue){\n      pickedTiles[0].initWithFile(\"assets/cover.png\");\n      pickedTiles[1].initWithFile(\"assets/cover.png\");\n    }\n    else{\n      gameLayer.removeChild(pickedTiles[0]);\n      gameLayer.removeChild(pickedTiles[1]);\n    }\n    pickedTiles = [];\n  },2000);\n}\n```"]