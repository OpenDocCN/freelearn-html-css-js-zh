["```js\n$ ionic start MySimpleAuth blank $ cd MySimpleAuth\n```", "```js\n$ npm install auth0-js @auth0/cordova --save\n```", "```js\n$ ionic cordova plugin add cordova-plugin-safariviewcontroller\n\n$ ionic cordova plugin add cordova-plugin-customurlscheme --variable URL_SCHEME={YOUR_PACKAGE_ID} --variable ANDROID_SCHEME={YOUR_PACKAGE_ID} --variable ANDROID_HOST={YOUR_DOMAIN} --variable ANDROID_PATHPREFIX=/cordova/{YOUR_PACKAGE_ID}/callback \n```", "```js\n<preference name=\"AndroidLaunchMode\" value=\"singleTask\" />\n```", "```js\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport Auth0Cordova from '@auth0/cordova';\nimport Auth0 from 'auth0-js';\n\nconst auth0Config = {\n  // needed for auth0\n  clientID: 'sIQavE9jev8VXOTQkeb2Cn62m9s9faLN',\n\n  // needed for auth0cordova\n  clientId: 'sIQavE9jev8VXOTQkeb2Cn62m9s9faLN',\n  domain: 'imtest.auth0.com',\n  callbackURL: location.href,\n  packageIdentifier: 'io.ionic.imtest'\n};\n\n@Injectable()\nexport class AuthProvider {\n  auth0 = new Auth0.WebAuth(auth0Config);\n  accessToken: string;\n  idToken: string;\n  user: any;\n\n  constructor(public zone: NgZone) {\n    this.user = this.getStorageVariable('profile');\n    this.idToken = this.getStorageVariable('id_token');\n  }\n\n  private getStorageVariable(name) {\n    return JSON.parse(window.localStorage.getItem(name));\n  }\n\n  private setStorageVariable(name, data) {\n    window.localStorage.setItem(name, JSON.stringify(data));\n  }\n\n  private setIdToken(token) {\n    this.idToken = token;\n    this.setStorageVariable('id_token', token);\n  }\n\n  private setAccessToken(token) {\n    this.accessToken = token;\n    this.setStorageVariable('access_token', token);\n  }\n\n  public isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return Date.now() < expiresAt;\n  }\n\n  public login() {\n    const client = new Auth0Cordova(auth0Config);\n\n    const options = {\n      scope: 'openid profile offline_access'\n    };\n\n    client.authorize(options, (err, authResult) => {\n      if(err) {\n        throw err;\n      }\n\n      this.setIdToken(authResult.idToken);\n      this.setAccessToken(authResult.accessToken);\n\n      const expiresAt = JSON.stringify((authResult.expiresIn * 1000) \n      + \n      new Date().getTime());\n      this.setStorageVariable('expires_at', expiresAt);\n\n      this.auth0.client.userInfo(this.accessToken, (err, profile)=> \n      {\n        if(err) {\n          throw err;\n        }\n\n        profile.user_metadata = profile.user_metadata || {};\n        this.setStorageVariable('profile', profile);\n        this.zone.run(() => {\n          this.user = profile;\n        });\n      });\n    });\n  }\n\n  public logout() {\n    window.localStorage.removeItem('profile');\n    window.localStorage.removeItem('access_token');\n    window.localStorage.removeItem('id_token');\n    window.localStorage.removeItem('expires_at');\n\n    this.idToken = null;\n    this.accessToken = null;\n    this.user = null;\n  }\n\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { AuthProvider } from '../providers/auth/auth';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthProvider\n  ]\n})\nexport class AppModule {}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Home Page\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    <div *ngIf=\"!auth.isAuthenticated()\">\n        <button ion-button block color=\"primary\" (click)=\"auth.login()\">Log In</button>\n    </div>\n\n    <div *ngIf=\"auth.isAuthenticated()\">\n      <ion-card>\n        <img [src]=\"auth.user.picture\" />\n        <ion-card-content>\n          <ion-card-title>{{ auth.user.name }}</ion-card-title>\n        </ion-card-content>\n      </ion-card>\n      <button ion-button block color=\"primary\" \n      (click)=\"auth.logout()\">Logout</button>\n    </div>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth/auth';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController, public auth: AuthProvider) {\n\n  }\n\n}\n```", "```js\n$ ionic cordova run android\n```", "```js\nconst auth0Config = {   \n    clientID: ''  \n    clientId: '',   \n    domain: '',   \n    callbackURL: location.href,   \n    packageIdentifier: '' \n};\n```", "```js\n$ ionic start MyiOSPush blank\n$ cd MyiOSPush\n```", "```js\n$ ionic cordova plugin add onesignal-cordova-plugin\n$ npm install --save @ionic-native/onesignal\n```", "```js\nsudo gem install cocoapods\npod repo update\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { OneSignal } from '@ionic-native/onesignal';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    OneSignal,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Push Notification\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <h2 class=\"big-square\" *ngIf=\"!this.messages.length\">\n    You have no message\n  </h2>\n  <h3 class=\"sub-title\" *ngIf=\"!!this.messages.length\">\n    Your messages\n  </h3>\n  <ion-card *ngFor=\"let msg of messages\">\n    <ion-card-header>\n      {{ msg.title }}\n    </ion-card-header>\n    <ion-card-content>\n      {{ msg.text }}\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { NavController, Platform } from 'ionic-angular';\nimport { OneSignal } from '@ionic-native/onesignal';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public messages = [];\n  public clicked: Boolean = false;\n  constructor(public navCtrl: NavController, public oneSignal: OneSignal, platform: Platform, private changeDetector: ChangeDetectorRef) {\n    platform.ready().then(() => {\n      this.oneSignalConfig();\n    });\n  }\n\n  oneSignalConfig() {\n    this.oneSignal.startInit(\"94218e7a-2307-41fa-9bc3-20783b4cde9a\");\n\n    this.oneSignal.handleNotificationReceived().subscribe((value:any) => {\n      let msg = value.payload;\n      this.messages.push({\n        title: msg.title,\n        text: msg.body\n      });\n      this.changeDetector.detectChanges();\n    });\n    this.oneSignal.endInit();\n  }\n}\n```", "```js\npage-home {\n    .center {\n        text-align: center;\n    }\n    h2.big-square {\n        text-align: center;\n        padding: 50px;\n        color: #D91E18;\n        background: #F9BF3B;\n    }\n    h3.sub-title {\n        text-align: center;\n        padding: 10px;\n        color: #446CB3;\n        background: #E4F1FE;\n    }\n    ion-card ion-card-header {\n        padding: 10px 16px;\n        background: #F9690E;\n        color: white;\n    }\n    ion-card ion-card-header + ion-card-content,\n    ion-card .item + ion-card-content {\n        padding-top: 16px;\n    }\n}\n```", "```js\n$ ionic cordova run ios \n```", "```js\n oneSignalConfig() {\n    this.oneSignal.startInit(\"94218e7a-2307-41fa-9bc3-20783b4cde9a\");\n\n    this.oneSignal.handleNotificationReceived().subscribe((value:any) => {\n      let msg = value.payload;\n      this.messages.push({\n        title: msg.title,\n        text: msg.body\n      });\n      this.changeDetector.detectChanges();\n    });\n    this.oneSignal.endInit();\n  }\n```", "```js\n<ion-card *ngFor=\"let msg of messages\"> \n  <ion-card-header> \n    {{ msg.title }} \n  </ion-card-header> \n  <ion-card-content> \n    {{ msg.text }} \n  </ion-card-content> \n</ion-card>\n```", "```js\n$ ionic start MyAndroidPush blank\n$ cd MyAndroidPush\n```", "```js\n$ ionic cordova plugin add onesignal-cordova-plugin\n$ npm install --save @ionic-native/onesignal\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { OneSignal } from '@ionic-native/onesignal';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    OneSignal,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Push Notification\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <h2 class=\"big-square\" *ngIf=\"!this.messages.length\">\n    You have no message\n  </h2>\n  <h3 class=\"sub-title\" *ngIf=\"!!this.messages.length\">\n    Your messages\n  </h3>\n  <ion-card *ngFor=\"let msg of messages\">\n    <ion-card-header>\n      {{ msg.title }}\n    </ion-card-header>\n    <ion-card-content>\n      {{ msg.text }}\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { NavController, Platform } from 'ionic-angular';\nimport { OneSignal } from '@ionic-native/onesignal';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public messages = [];\n  public clicked: Boolean = false;\n  constructor(public navCtrl: NavController, public oneSignal: OneSignal, platform: Platform, private changeDetector: ChangeDetectorRef) {\n    platform.ready().then(() => {\n      this.oneSignalConfig();\n    });\n  }\n\n  oneSignalConfig() {\n    this.oneSignal.startInit(\"94218e7a-2307-41fa-9bc3-20783b4cde9a\", \"539293856976\");\n    this.oneSignal.handleNotificationReceived().subscribe((value:any) => {\n      // do something when notification is received\n      let msg = value.payload;\n      this.messages.push({\n        title: msg.title,\n        text: msg.body\n      });\n      this.changeDetector.detectChanges();\n    });\n    this.oneSignal.endInit();\n  }\n} \n```", "```js\npage-home {\n .center {\n     text-align: center;\n }\n h2.big-square {\n     text-align: center;\n     padding: 50px;\n     color: #D91E18;\n     background: #F9BF3B;\n }\n h3.sub-title {\n     text-align: center;\n     padding: 10px;\n     color: #446CB3;\n     background: #E4F1FE;\n }\n ion-card ion-card-header {\n     padding: 10px 16px;\n     background: #F9690E;\n     color: white;\n }\n ion-card ion-card-header + ion-card-content,\n ion-card .item + ion-card-content {\n     padding-top: 16px;\n }\n}\n```", "```js\n$ ionic cordova run android\n```"]