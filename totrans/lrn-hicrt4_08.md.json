["```js\n<script type=\"text/javascript\" \n src=\"img/highcharts-more.js\"></script>\n```", "```js\n            series: [{\n                type: 'waterfall',\n                upColor: Highcharts.getOptions().colors[0],\n                color: '#E64545',\n                data: [{\n                    name: 'Product Sales',\n                    y: 63700\n                }, {\n                    name: 'Renew Contracts',\n                    y: 27000\n                }, {\n                    name: 'Total Revenue',\n                    isIntermediateSum: true,\n                    color: '#4F5F70'\n                }, {\n                    name: 'Expenses',\n                    y: -43000\n                }, {\n                    name: 'Net Profit',\n                    isSum: true,\n                    color: Highcharts.getOptions().colors[1]\n                }]\n           }]\n```", "```js\n      plotOptions: {\n          series: {\n              borderWidth: 0,\n              dataLabels: {\n                  enabled: true,\n                  style: {\n                      fontWeight: 'bold'\n                  },\n                  color: 'white',\n                  formatter: function() {\n                      return Highcharts.numberFormat(this.y / 1000, 1, '.') + ' k';\n                  }\n              }\n          }\n      },\n```", "```js\n            chart: {\n                renderTo: 'container',\n                inverted: true\n            },\n            ....,\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        inside: false,\n                        style: {\n                            fontWeight: 'bold'\n                        },\n                        color: '#E64545',\n                        formatter: ....\n                    }\n                }\n            },\n            series: [{\n                type: 'waterfall',\n                upColor: Highcharts.getOptions().colors[0],\n                color: '#E64545',\n                name: 'Q1 Revenue',\n                data: [{\n                    name: 'Product A Sales',\n                    y: 63700,\n                    dataLabels: {\n                        color: Highcharts.getOptions().colors[0]\n                    }\n                }, {\n                    name: 'Product B Sales',\n                    y: 33800,\n                    dataLabels: {\n                        color: Highcharts.getOptions().colors[0]\n                    }\n                }, {\n                    // Product C & Renew Maintenance\n                    ....\n                }, {\n                    name: 'Total Revenue',\n                    isIntermediateSum: true,\n                    color: '#4F5F70',\n                    dataLabels: {\n                        color: '#4F5F70'\n                    }\n                }, {\n                    name: 'Staff Cost',\n                    y: -83000\n                }, {\n                    // Staff Cost, Office Rental and Tax\n                    ....\n                }, {\n                    name: 'Net Profit',\n                    isSum: true,\n                    color: Highcharts.getOptions().colors[1],\n                    dataLabels: {\n                        color: Highcharts.getOptions().colors[1]\n                    }\n            }]\n```", "```js\n<script type=\"text/javascript\" src=\"img/funnel.js\"></script>\n```", "```js\nseries: [{\n      type: 'funnel',\n      width: '60%',\n      height: '80%',\n      neckWidth: '20%',\n      dataLabels: {\n          format: '{point.name} - {y}',\n          color: '#222'\n      },\n      title: {\n          text: \"Product from Web Visits to Sales\"\n      },\n      data: [{\n          name: 'Website visits',\n          y: 29844\n      }, {\n          name: 'Product downloads',\n          y: 9891\n      }, {\n          ....\n      }]\n}]\n```", "```js\n             series: [{\n                type: 'waterfall',\n                ....\n                data: [{\n                    ....\n                }, {\n                    name: 'Product B Sales',\n                    y: 33800,\n                    drilldown: 'productB',\n                    ....\n               }]\n             }],\n             drilldown: {\n                drillUpButton: {\n                    position: {\n                        verticalAlign: 'bottom',\n                        align: 'center',\n                        y: -20\n                    }\n                },\n                series: [{\n                    type: 'funnel',\n                    id: 'productB',\n```", "```js\n        title: {\n            text: \"The global wealth pyramid\",\n            align: 'left',\n            x: 0,\n            style: {\n                fontSize: '13px',\n                fontWeight: 'bold'\n            }\n        },\n        credits: {\n            text: 'Source: James Davies, ....',\n            position: {\n                align: 'left',\n                verticalAlign: 'top',\n                y: 40,\n                x: 10\n            },\n            style: {\n                fontSize: '9px'\n            }\n        },\n        series: [{\n            type: 'pyramid',\n            width: '70%',\n            reversed: true,\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b> ({point.y:,.1f}%)',\n                },\n            data: [{\n                name: '3,207 m',\n                y: 68.7,\n                color: 'rgb(159, 192, 190)'\n            }, {\n                name: '1,066 m',\n                y: 22.9,\n                color: 'rgb(140, 161, 191)'\n            }, {\n                name: '361 m',\n                y: 7.7,\n                color: 'rgb(159, 165, 157)'\n            }, {\n                name: '32 m',\n                y: 0.7,\n                color: 'rgb(24, 52, 101)'\n            }]\n        }]\n```", "```js\n        chart: {\n            renderTo: 'container',\n            // Force axes to show the title\n            showAxes: true,\n            ....\n        },\n        xAxis: {\n            title: {\n                text: \"Number of adults (percentage of world population)\"\n            },\n            // Only want the title, not the line\n            lineWidth: 0\n        },\n        yAxis: [{\n            // Left Y-axis\n            title: {\n                align: 'low',\n                text: 'Wealth',\n                rotation: 0,\n                x: 30\n            },\n            // Don't show the numbers\n            labels: {\n                enabled: false\n            },\n            gridLineWidth: 0,\n            min: 0,\n            max: 100,\n            reversed: true,\n            ....\n        }, {\n            // Center Y-axis\n            title: {\n                text: ''\n            },\n            // Same setting to hide the labels and lines\n            ....\n        }, {\n            // Right Y-axis\n            opposite: true,\n            title: {\n                align: 'low',\n                text: 'Total Wealth <br>(percent of world)',\n                rotation: 0,\n                x: -70\n           },\n            // Same setting to hide the labels and lines\n            ....\n```", "```js\n            plotLines: [{\n                value: 40,\n                label: {\n                    text: '< USD 10,000',\n                    x: 20\n                },\n                width: 1, \n            }, {\n                value: 30,\n                label: {\n                    text: 'USD 10,000 - 100,000',\n                    x: 35\n                },\n                width: 1\n            }, {\n```", "```js\n<script src=\"img/heatmap.js\"></script>\n```", "```js\n        chart: {\n            renderTo: 'container',\n            type: 'heatmap',\n            inverted: true\n        },\n```", "```js\n  xAxis: {\n      tickWidth: 0,\n      // Only show a subset of countries\n      categories: [ \n          'United States', 'Japan', 'United Kingdom', \n          'Venezuela', 'Singapore', 'Switzerland', 'China' \n      ]\n  },\n  yAxis: {\n      title: { text: null },\n      opposite: true,\n      offset: 8,\n      categories: [ 'Aug 2010', 'Sept', 'Oct', 'Nov', 'Dec', ...\n```", "```js\n          colorAxis: {\n                min: -0.9,\n                max: 30,\n                stops: [\n                    [0, '#1E579F'],\n                    // -6.6\n                    [0.085, '#467CBA'],\n                    // -6\n                    [0.1, '#487EBB'],\n                    // -2\n                    [0.2, '#618EC4'],\n                    // -1\n                    [0.225, '#7199CA'],\n                    // -0.2\n                    [0.245, '#9CB4D9'],\n                    // Around 0\n                    [0.25, '#C1C1C1'],\n                    // Around 0.2\n                    [0.256, '#ECACA8'],\n                    // Around 10\n                    [0.5, '#D02335'],\n                    // Around 20\n                    [0.75, '#972531'],\n                    [1.0, '#93212E']\n                ],\n                labels: {\n                    enabled: true\n                }\n          }\n```", "```js\n    title: {\n        text: \"Feeling the Heat: Global Inflation\",\n        align: 'left',\n        style: {\n            fontSize: '14px'\n        }\n    },\n    subtitle: {\n        text: \"From Aug 2010 - Aug 2011\",\n        align: 'left',\n        style: {\n            fontSize: '12px'\n        }\n    },\n    legend: {\n        align: 'right',\n        verticalAlign: 'top',\n        floating: true,\n        x: -60,\n        y: -5\n    },\n    credits: {\n        text: 'Sources: CEIC Data; national statistical ....',\n        position: {\n            y: -30\n        }\n    },  \n```", "```js\n        series: [{\n            dataLabels: {\n                enabled: true,\n                color: 'white'\n            },\n            // Country Category Index, Month/Year Index, Inflation\n            data: [ \n                // US\n                [ 0, 0, 1.1 ],\n                [ 0, 1, 1.1 ],\n                ....,\n                // Japan\n                [ 1, 0, -0.9 ],\n                [ 1, 1, -0.6 ],\n```", "```js\n     yAxis: {\n         title: { text: null },\n         gridLineWidth: 0,\n         minorTickWidth: 1,\n         max: 8,\n         min: 0,\n         offset: 8,\n         labels: {\n             style: { .... },\n             formatter: ....,\n```", "```js\n     colorAxis: {\n         dataClasses: [{\n             color: '#2D5C18',\n             from: 0,\n             to: 2\n         }, {\n             color: '#3B761D',\n             from: 2,\n             to: 4\n         }, {\n             color: '#70AD28',\n             from: 4,\n             to: 6\n         }, {\n             color: '#81C02E',\n             from: 6,\n             to: 8\n         }]\n     },\n```", "```js\n   plotOptions: {\n       heatmap: {\n           nullColor: '#D2E4B4',\n           borderWidth: 1,\n           borderColor: '#D2E4B4',\n       },\n   },\n```", "```js\n     xAxis: {\n            tickWidth: 0,\n            categories: [ 'Food', '', 'Water', '', 'Sleep', \n                          '', 'Internet' ],\n            lineWidth: 0,\n            ....,\n     },\n```", "```js\nseries: [{\n    data: [  [ 0, 7, 7 ], [ 0, 6, 6 ], [ 0, 5, 5 ], [ 0, 4, 4 ],\n             [ 0, 3, 3 ], [ 0, 2, 2 ], [ 0, 1, 1 ], [ 0, 0, 0 ],\n             [ 2, 0, 0 ], [ 2, 1, 1 ], [ 2, 2, 2 ], [ 2, 3, 3 ],\n             [ 2, 4, 4 ], [ 2, 5, 5 ],\n```", "```js\n        [ 4, 0, 0 ],\n        [ 4, 1, 1 ],\n        [ 4, 1.5, null ],\n\n        [ 6, 0, 0 ],\n        [ 6, 0.25, null ]\n```"]