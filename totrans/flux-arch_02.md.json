["```js\n// A Flux store with state.\nclass Store {\n  constructor() {\n\n    // The initial state of the store.\n    this.state = { clickable: false };\n\n    // All of the state transformations happen\n    // here. The \"action.type\" property is how it\n    // determines what changes will take place.\n    dispatcher.register((e) => {\n\n      // Depending on the type of action, we\n      // use \"Object.assign()\" to assign different\n      // values to \"this.state\".\n      switch (e.type) {\n        case 'show':\n          Object.assign(this.state, e.payload,\n            { clickable: true });\n          break;\n        case 'hide':\n          Object.assign(this.state, e.payload,\n            { clickable: false });\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n\n// Creates a new store instance.\nvar store = new Store();\n\n// Dispatches a \"show\" action.\ndispatcher.dispatch({\n  type: 'show',\n  payload: { display: 'block' }\n});\n\nconsole.log('Showing', store.state);\n// → Showing {clickable: true, display: \"block\"}\n\n// Dispatches a \"hide\" action.\ndispatcher.dispatch({\n  type: 'hide',\n  payload: { display: 'none' }\n});\n\nconsole.log('Hiding', store.state);\n// → Hiding {clickable: false, display: \"none\"}\n```"]