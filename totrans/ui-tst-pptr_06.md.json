["```js\nfunction getFunc() {\n    let word = 'world'; \n    return function() {\n        console.log('Hello ' + word);\n    }\n}\ngetFunc()();\n```", "```js\nfunction getFunc(name) {\n    return function() {\n        console.log('Hello ' + name);\n    }\n}\ngetFunc('world')();\ngetFunc('mars')();\n```", "```js\nconst browser = await puppeteer.launch({headless: false, defaultViewport: null});\nconst page = await browser.newPage();\nconst name = 'world';\nawait page.evaluate(() => alert('Hello ' + name));\nbrowser.close();\n```", "```js\nconsole.log(await page.evaluate('document.URL'));\n```", "```js\nconsole.log(await page.evaluate(() => document.URL));\n```", "```js\nconsole.log((() => alert('Hello ' + name)).toString());\n```", "```js\n() => alert('Hello ' + name)\n```", "```js\nconst browser = await puppeteer.launch({headless: false, defaultViewport: null});\nconst page = await browser.newPage();\nconst name = 'world';\nawait page.evaluate((n) => alert('Hello ' + n), name);\nbrowser.close();\n```", "```js\nconst passwordInput = await this.page.$('#password');\n```", "```js\nconst passwordInput = (await page.evaluateHandle(() => window.passwordInput)).asElement();\n```", "```js\nconst counter = await page.evaluateHandle(() => {\n    window.counter = { count: 2}; \n    return window.counter;\n});\nawait counter.evaluate((c, inc) => c.count += inc, 3);\nawait page.evaluate(() => alert(window.counter.count));\n```", "```js\nconst counter = await page.evaluateHandle(() => {\n    counter = { count: 2}; \n    return counter;\n});\n```", "```js\nawait counter.evaluate((c, inc) => c.count += inc, 3);\n```", "```js\nawait counter.evaluate(c => c.count += 3);\n```", "```js\nawait page.evaluate(c => c.count += 3, counter);\n```", "```js\nasync getStock(productName) {\n    const productDiv = (await this.page.$x(`//a[text()=\"${productName}\"]/../..`))[0];\n    const stockElement = (await productDiv.$x('./h6'))[0];\n    return await stockElement.evaluate(e => e.innerText);\n}\n```", "```js\nasync getInnerText(el) { \n    return await el.evaluate(el => el.innerText);\n}\n```", "```js\nreturn await this.page.evaluate(() => document.querySelector('#navbarTop .nav-link').innerText);\n```", "```js\nreturn await this.page.$eval('#navbarTop .nav-link', el => el.innerText);\n```", "```js\nawait el.evaluate(el => el.click());\n```", "```js\nconst emailInput = await page.$('#email');\nawait emailInput.evaluate(e => e.disabled = true);\n```", "```js\nconst checkoutBtn = (await page.$x('//button[contains(text(),\"Checkout\")]'))[0];\ncheckoutBtn.evaluate(el => el.classList.remove('is-disabled'));\nawait checkoutBtn.click();\n```", "```js\nconst images = await page.evaluateHandle(() => \n  Array.from(document.querySelectorAll('IMG')).filter(e => !e.naturalWidth));\n(await images.evaluate(e => e.length)).should.equal(0);\n```", "```js\n(await page.evaluateHandle(() => \n  Array.from(document.querySelectorAll('IMG')).filter(\n    e => !e.naturalWidth).length)).should.equal(0);\n```", "```js\nawait page.goto('https://www.packtpub.com/tech/javascript/');\nconst cookieLink = await page.waitForSelector('.accept_all', { timeout : 1000}).catch(e => e);\nif (cookieLink) {\n    await cookieLink.click();\n}\n```", "```js\nawait Promise.all([\n    page.waitForSelector('.counter.qty.empty'),\n    page.waitForSelector('.add-to-cart')\n]);\n```", "```js\nconst cartIsOnePromise = page.waitForFunction(() => document.querySelector('.counter.qty .counter-number').innerText.trim() === '1');\nconst cartIsTwoPromise = page.waitForFunction(() => document.querySelector('.counter.qty .counter-number').innerText.trim() === '2');\n```", "```js\nconst addToCartButtons = await page.$$('.add-to-cart');\nawait addToCartButtons[0].click();\n```", "```js\nawait page.waitForFunction(async () => {\n    const element = document.querySelector('.block-minicart');\n    let currentHeight = element.getBoundingClientRect().height;\n    let stopMovingCounter = 0;\n    await new Promise((resolve) => {\n        const stoppedMoving = function() {\n            if (element.getAttribute('style') !== 'display: block;') {\n                setTimeout(stoppedMoving, 20);\n            }\n            if(element.getBoundingClientRect().height > 0 && currentHeight === element.getBoundingClientRect().height) {\n                stopMovingCounter++;\n            } else {\n                stopMovingCounter = 0;\n                currentHeight = element.getBoundingClientRect().height;\n            }       \n            if(stopMovingCounter === 10) {\n              resolve();\n            }\n            setTimeout(stoppedMoving, 20);\n        };\n        stoppedMoving();\n    });\n    return true;\n});\n```", "```js\nawait page.click('#btn-minicart-close');\n```", "```js\nawait cartIsOnePromise;\n```", "```js\nawait addToCartButtons[1].click();\nawait cartIsTwoPromise;\n```", "```js\nlet observer = new MutationObserver(list => console.log(list[0].target.nodeValue));\nobserver.observe(\n  document.querySelector('.counter.qty .counter-number'), \n  {\n    characterData: true, \n    attributes: false, \n    childList: false, \n    subtree: true\n  });\n```", "```js\nconst reachedToTwo = new Promise((resolve) => {\n    page.exposeFunction('notifyCartChange', i => {\n        if(i ==='2') \n            resolve();\n    })\n});\nawait page.evaluate(() => {\n    let observer = new MutationObserver(list => notifiyCartChange(list[0].target.nodeValue));\n    observer.observe(\n        document.querySelector('.counter.qty .counter-number'), \n        {\n            characterData: true, \n            attributes: false, \n            childList: false, \n            subtree: true\n        });\n});\n```", "```js\nawait reachedToTwo;\n```"]