- en: Chapter 6. Simulating, Building, Packaging, and Deploying an App/Project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter we will learn how to prepare the application for production
    by previewing it (testing on the browser), packaging, building, and deploying.
    So in this chapter we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Previewing and publishing an Ext JS Project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previewing and publishing a Sencha Touch Project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emulating a Sencha Touch app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Packaging a Sencha Touch app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previewing, publishing, and building a project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section we will learn what the **Build**, **Publish**, and **Preview**
    buttons in the toolbar do. These buttons are the same for an Ext JS project or
    Sencha Touch project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Previewing, publishing, and building a project](img/9819OS_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let's start with the **Build** button. This button will not do the production
    build for us. The only thing this button does is to compile and save the project.
    For Ext JS projects, the build must be done manually (Sencha Architect 2.2 and
    earlier versions do not have support). For Sencha Touch projects, we will learn
    how to do it later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: All the functionalities we will learn throughout this chapter are only available
    when the project is saved. So please click on **Save**, choose where you will
    save the project, and then have some fun!
  prefs: []
  type: TYPE_NORMAL
- en: Previewing a project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Preview** button will open the default browser of your computer, and
    will render the `app.html` file on it, meaning it will execute the application
    on the browser. So, when we click on it, a popup will be displayed asking what
    is the **URL prefix** of the root of the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Previewing a project](img/9819OS_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As our project was already created inside the `htdocs` folder from the `Xampp`
    directory, we simply need to inform the localhost path and the path of the application.
    Then, the application will be opened in the browser as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Previewing a project](img/9819OS_06_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Every time you click on the **Preview** button, the same popup will be displayed.
    You can click on the **Do not show** checkbox, so it will not be displayed again.
  prefs: []
  type: TYPE_NORMAL
- en: Publishing a project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Publish** button simply makes a copy of your code to a specific directory.
    It will not copy Sencha Architect files or source control files (`.svn`, `.git`,
    and so on).
  prefs: []
  type: TYPE_NORMAL
- en: 'So for example, let''s say you are working on a project locally, but there
    is a webserver you want to publish to test this application. You need to click
    on the **Publish** button, and if it is the first time you are clicking on this
    button for a particular project, a popup will be displayed as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Publishing a project](img/9819OS_06_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, click on **Browse** and select the directory where the files will be
    copied. It needs to be a different directory than your project''s root folder.
    When you click on **Continue**, Sencha Architect will run a script and will copy
    all the files to the specified directory, as we can see in the screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Publishing a project](img/9819OS_06_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can change the settings any time by clicking on the **Setting** button
    and **Project** tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Publishing a project](img/9819OS_06_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Introducing Sencha Cmd and Sencha Architect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sencha Architect is a great developer tool for Sencha Projects. Sencha also
    has this other tool called Sencha Cmd that allows developers to create, build,
    emulate, and package projects using the command line terminal. Sencha Architect
    allows us to build, emulate, and package natively Sencha Touch projects. And for
    this reason, there is integration between these two tools. So to get the most
    out of them, we need to have Sencha Cmd installed as well.
  prefs: []
  type: TYPE_NORMAL
- en: To download it, please go to [http://www.sencha.com/products/sencha-cmd/download](http://www.sencha.com/products/sencha-cmd/download)
    and download the appropriate version according to the operating system you are
    using.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before we begin, we also need to have the Java JDK installed with the environment
    variables configured ([http://docs.oracle.com/javase/tutorial/essential/environment/paths.html](http://docs.oracle.com/javase/tutorial/essential/environment/paths.html)),
    we need to have Ruby installed ([http://www.ruby-lang.org](http://www.ruby-lang.org)),
    and Sass ([http://sass-lang.com/](http://sass-lang.com/)), and Compass ([http://compass-style.org/](http://compass-style.org/))
    as well. You can find all these steps on the Sencha Cmd documentation at: [http://docs.sencha.com/touch/2.2.0/#/guide/command](http://docs.sencha.com/touch/2.2.0/#/guide/command).'
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, we have also learned that when we create a Sencha Touch
    project, it points to the SDK from Sencha servers. To be able to emulate and package
    the app, we will need to have Sencha Touch locally as well. Simply download it
    from the Sencha website ([http://www.sencha.com/products/touch/download/](http://www.sencha.com/products/touch/download/))
    and unzip to a directory of your preference. And then, we are good to go!
  prefs: []
  type: TYPE_NORMAL
- en: Emulating a Sencha Touch app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For all Sencha Touch projects, after you save it, you will see a button on
    the toolbox named **Package** as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on the **Package** button is the first step that we need to take prior
    to emulating the app. When we click on it, a screen is displayed as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The first thing we need to do is to download and install **Sencha Cmd** (*1*).
    If you already did it, then you need to set the path of where you installed Sencha
    Cmd (*2*). The next step is to verify if everything is ok, by clicking on the
    **Verify** button (*3*). The output should be a window, which will pop up (terminal)
    and Sencha Architect will try to execute the `sencha` command just to make sure
    everything is ok. If it's ok, just click on **Save** (*4*).
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Next, go to the **Setup project with Cmd** vertical tab. Notice that the **Install
    plug-ins** tab now has a green bullet. Our goal is to have all the tabs with green
    bullets. This means we have the setup completed and we are ready to emulate or
    build an app natively.
  prefs: []
  type: TYPE_NORMAL
- en: In this second tab, we need to inform Sencha Architect about the directory where
    Sencha Touch SDK is installed locally (*2*). If you do not have it yet, download
    it and unzip it to a directory of your preference (*1*).
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: One very important thing we need to pay attention to is the combination of the
    Sencha Touch version we are using with the Sencha Cmd version. For Sencha Touch
    2.0.x, we need to use Sencha SDK Tools 2.x (this is an older version of Sencha
    Cmd). For Sencha Touch 2.1.x we need to use Sencha Cmd 3.0.x, and for Sencha Touch
    2.2.x we need to use Sencha Cmd 3.1.x. To make sure we are using the correct version,
    always check the official forum for more information ([http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions](http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions)).
    If we do not use the correct version, we can get errors such as "The current working
    directory is not a recognized Sencha SDK or application folder."
  prefs: []
  type: TYPE_NORMAL
- en: 'And at last, click on the **Setup Project with Cmd** button (*3*). A terminal
    window will be displayed. In this terminal, the `sencha generate app` command
    will be executed, passing the projects configuration (name and path) as parameters
    to the command (as required):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: And the final step, we need to click on the third vertical tab, which is **Package
    settings** (again, notice that the two previous tabs have the green bullet, meaning
    the previous steps are ok).
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When we create a Sencha Touch app manually (not using Sencha Architect) using
    Sencha Cmd and the `sencha generate app` command, it creates a file named `packager.json`
    with all the information we need to give Sencha Cmd and Sencha Touch to emulate
    and create the native app for us. We need to do the same thing now. But this `packager.json`
    can be created automatically by clicking on the **Add Package Settings** button.
    When you click on it, the result will be as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Emulating a Sencha Touch app](img/9819OS_06_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Three things we need to pay attention to: first, all the bullets from the vertical
    tabs are green. This means we can start emulating and packaging natively now.
    Second, a **packager** was created (**Current Package Settings**) and we can configure
    as we would like to (emulate, build native for Android or iOS). And third, the
    **packager** was added as a resource on the project, meaning we could also have
    done this manually (like when creating any other resource).'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's see how to emulate for iOS and Android (the only platforms supported
    by Sencha Cmd).
  prefs: []
  type: TYPE_NORMAL
- en: iOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First of all, to emulate an app for iOS, you need to have a Mac OS. So this
    step is only for Mac OSusers, and will not work if you are using Windows or Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Secondly, you need to have XCode installed as well ([https://developer.apple.com/xcode/](https://developer.apple.com/xcode/)).
    It is free and you can download it directly from the App Store.
  prefs: []
  type: TYPE_NORMAL
- en: By default, all the packager configurations come ready for the iOS platform,
    so we simply need to click on the down arrow icon from the **Package** button
    from the toolbar and then select **Simulate**. Again, a terminal window will be
    opened and will run the `sencha app build native` command. And then our app will
    be emulated!
  prefs: []
  type: TYPE_NORMAL
- en: '![iOS](img/9819OS_06_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Troubleshooting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In case you get errors while trying to emulate for iOS, with the **iOS Simulator**
    opened go to the menu and select **Reset Contents and Settings…**, then click
    on **Reset**. And then, try to simulate it again by clicking on **Simulate**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Troubleshooting](img/9819OS_06_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Android
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To emulate an Android app, you only need to have the Android SDK installed ([http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)).
    But it is highly recommended that you have Eclipse with the ADT plugin (information
    at [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)).
    It is much easier to set up and configure everything that you need prior to beginning
    with Android development. You can use any operating system (Mac OS, Linux, or
    Windows) to emulate or package an Android app.
  prefs: []
  type: TYPE_NORMAL
- en: There are three things we need to configure on the packager file. The first
    one is to change the **platform** from **iOSSimulator** to **AndroidEmulator**.
    The second thing is the **sdkPath**; you need to inform the complete path where
    you unzipped the Android SDK on your machine. And the third thing is the `androidAPILevel`;
    just make sure you have the API Level installed as well.
  prefs: []
  type: TYPE_NORMAL
- en: '![Android](img/9819OS_06_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Before we click on the **Simulate** button in **Package** again, we need to
    start the Android emulator manually. For iOS, the emulator is started automatically;
    for Android, we need to do it manually. Open the **Android Virtual Device Manager**
    from Eclipse or start it from the command line ([http://developer.android.com/tools/devices/index.html](http://developer.android.com/tools/devices/index.html)).
    Make sure you have an **Android Virtual Device** (**AVD**) for the **API Level**
    you set on the packager:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android](img/9819OS_06_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, click on the **Simulate** button in **Package** from the Sencha Architect
    toolbar and wait a little bit. The app will be emulated on the AVD as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android](img/9819OS_06_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When you are emulating an app for the first time on an AVD, it can take a while,
    so please be a little patient.
  prefs: []
  type: TYPE_NORMAL
- en: Packaging (native) a Sencha Touch App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After all the testing that we have done, it is time to test on a real device!
  prefs: []
  type: TYPE_NORMAL
- en: '![Packaging (native) a Sencha Touch App](img/9819OS_06_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The configurations are the same for iOS and Android (that we have set up on
    the previous topic). Now, if we want to test on a real device, we simply need
    to change the **platform** to **iOS** or **Android** as demonstrated in the previous
    screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: iOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Testing an app on a real Apple device requires a few more steps. We first need
    to create a provisioning profile on the iOS developer center. And to have an account
    for the iOS developer center ([https://developer.apple.com/account/ios/overview.action](https://developer.apple.com/account/ios/overview.action)),
    you need to pay 99 USD annually to Apple. But if you only want to emulate the
    app, you do not need to pay anything!
  prefs: []
  type: TYPE_NORMAL
- en: So the first step is to create the provisioning profile. Make sure the **applicationId**
    (**App ID**) is the same as set on the packager. You also need to set the **bundleSeedId**
    (you can also find what your **bundleSeedId** is on your iOS developer account).
    You need to download the provisioning profile file and also set the path on the
    **provisionProfile** configuration from the packager. The **certificateAlias**,
    **certificatePass**, and **certificatePath** are not mandatory. If you have all
    the configurations required already on Xcode, Sencha Cmd will find it and you
    don't need to worry about it.
  prefs: []
  type: TYPE_NORMAL
- en: '![iOS](img/9819OS_06_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To learn more about deploying apps on Apple real devices, please go to [http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices](http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices).
  prefs: []
  type: TYPE_NORMAL
- en: Once you have everything in place, just click on the **Simulate** button in
    **Package** again. And of course, your iDevice must be connected to your computer
    using an USB cable.
  prefs: []
  type: TYPE_NORMAL
- en: Android
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To be able to test an app on a real Android device you do not need to pay for
    it. You simply need to have a debug keystore. If you use Eclipse with an ADT plugin
    ([http://developer.android.com/tools/sdk/eclipse-adt.html](http://developer.android.com/tools/sdk/eclipse-adt.html)),
    it is going to create one for you already as demonstrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Android](img/9819OS_06_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you need to, you can also create the keystore manually. Please see the *Create
    a Certificate* section from the guide at: [http://docs.sencha.com/architect/2/#!/guide/deploy](http://docs.sencha.com/architect/2/#!/guide/deploy).'
  prefs: []
  type: TYPE_NORMAL
- en: Then, when you have your Android device connected to your computer (do not forget
    to enable **developer configurations** on the **device settings**), you simply
    need to click on the **Package** | **Simulate** button from the toolbar again
    and wait until the app is installed.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more information about testing apps on a real Android device, please go
    to [http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/](http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/).
  prefs: []
  type: TYPE_NORMAL
- en: Windows Phone 8 and Blackberry 10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unfortunately, Sencha Cmd does not support emulating and packaging apps to Windows
    Phone 8 and Blackberry 10, although Sencha Touch 2.2 and later versions have support
    for Windows Phone 8 and Blackberry 10 themes (as we learned in the previous chapter).
  prefs: []
  type: TYPE_NORMAL
- en: However, we can create a Blackberry 10 app ([http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html](http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html))
    and use the **Publish** button (from the Sencha Architect toolbar) to copy the
    files from the Sencha Architect project to the Blackberry 10 app project. The
    Blackberry 10 SDK is available for Mac OS, Linux, and Windows.
  prefs: []
  type: TYPE_NORMAL
- en: The same can be done with a Windows Phone 8\. Simply create the Windows Phone
    8 project (JavaScript project) using Visual Studio 2012 (there is an Express version
    specific for Windows Phone 8—and it is free) and publish the Sencha Architect
    project files to the specific directories of the Windows Phone 8 project. Just
    remember you need to have the Windows 8 Pro version to be able to develop and
    emulate apps for Windows Phone 8\. Windows Phone 8 development and emulation is
    not available on previous Windows OS (Windows Vista, Windows 7, and Windows XP),
    and neither is it available on Mac OS and Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we learned how to preview and publish Ext JS and Sencha Touch
    apps within Sencha Architect. We have also learned how to use Sencha Architect
    with Sencha Cmd to emulate and package natively iOS and Android apps. And at last,
    we learned a few tips of how to use the same code to create Blackberry 10 and
    Windows Phone 8 apps.
  prefs: []
  type: TYPE_NORMAL
- en: So now it is time to let the creativity flow and create awesome apps and publish
    them on different app stores from different platforms! Hope you had a good time
    reading this book.
  prefs: []
  type: TYPE_NORMAL
- en: Happy coding!
  prefs: []
  type: TYPE_NORMAL
