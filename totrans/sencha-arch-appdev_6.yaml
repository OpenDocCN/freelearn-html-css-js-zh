- en: Chapter 6. Simulating, Building, Packaging, and Deploying an App/Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章：模拟、构建、打包和部署应用程序/项目
- en: 'In this chapter we will learn how to prepare the application for production
    by previewing it (testing on the browser), packaging, building, and deploying.
    So in this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何通过预览（在浏览器中进行测试）、打包、构建和部署来准备应用程序以供生产使用。因此，在本章中，我们将涵盖：
- en: Previewing and publishing an Ext JS Project
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预览和发布 Ext JS 项目
- en: Previewing and publishing a Sencha Touch Project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预览和发布 Sencha Touch 项目
- en: Emulating a Sencha Touch app
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟 Sencha Touch 应用
- en: Packaging a Sencha Touch app
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打包 Sencha Touch 应用
- en: Previewing, publishing, and building a project
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预览、发布和构建项目
- en: 'In this section we will learn what the **Build**, **Publish**, and **Preview**
    buttons in the toolbar do. These buttons are the same for an Ext JS project or
    Sencha Touch project:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习工具栏中的**构建**、**发布**和**预览**按钮的功能。这些按钮对于 Ext JS 项目或 Sencha Touch 项目都是相同的：
- en: '![Previewing, publishing, and building a project](img/9819OS_06_01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![预览、发布和构建项目](img/9819OS_06_01.jpg)'
- en: Let's start with the **Build** button. This button will not do the production
    build for us. The only thing this button does is to compile and save the project.
    For Ext JS projects, the build must be done manually (Sencha Architect 2.2 and
    earlier versions do not have support). For Sencha Touch projects, we will learn
    how to do it later in this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从**构建**按钮开始。这个按钮不会为我们执行生产构建。这个按钮唯一能做的就是编译并保存项目。对于 Ext JS 项目，构建必须手动完成（Sencha
    Architect 2.2 及更早版本不支持）。对于 Sencha Touch 项目，我们将在本章后面学习如何进行。
- en: All the functionalities we will learn throughout this chapter are only available
    when the project is saved. So please click on **Save**, choose where you will
    save the project, and then have some fun!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中将学习的所有功能仅在项目保存时才可用。因此，请点击**保存**，选择您要保存项目的地方，然后享受乐趣吧！
- en: Previewing a project
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预览项目
- en: 'The **Preview** button will open the default browser of your computer, and
    will render the `app.html` file on it, meaning it will execute the application
    on the browser. So, when we click on it, a popup will be displayed asking what
    is the **URL prefix** of the root of the project:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**预览**按钮将打开您的计算机的默认浏览器，并在其上渲染`app.html`文件，这意味着它将在浏览器上执行应用程序。因此，当我们点击它时，将显示一个弹出窗口，询问项目的根目录的**URL
    前缀**：'
- en: '![Previewing a project](img/9819OS_06_02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![预览项目](img/9819OS_06_02.jpg)'
- en: 'As our project was already created inside the `htdocs` folder from the `Xampp`
    directory, we simply need to inform the localhost path and the path of the application.
    Then, the application will be opened in the browser as shown in the following
    screenshot:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的项目已经从“Xampp”目录中的“htdocs”文件夹创建，我们只需通知本地主机路径和应用程序路径。然后，应用程序将在浏览器中打开，如下面的截图所示：
- en: '![Previewing a project](img/9819OS_06_03.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![预览项目](img/9819OS_06_03.jpg)'
- en: Every time you click on the **Preview** button, the same popup will be displayed.
    You can click on the **Do not show** checkbox, so it will not be displayed again.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每次您点击**预览**按钮时，都会显示相同的弹出窗口。您可以选择点击**不再显示**复选框，这样它就不会再次显示。
- en: Publishing a project
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布项目
- en: The **Publish** button simply makes a copy of your code to a specific directory.
    It will not copy Sencha Architect files or source control files (`.svn`, `.git`,
    and so on).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**发布**按钮只是将您的代码复制到特定的目录。它不会复制 Sencha Architect 文件或源控制文件（`.svn`, `.git` 等）。'
- en: 'So for example, let''s say you are working on a project locally, but there
    is a webserver you want to publish to test this application. You need to click
    on the **Publish** button, and if it is the first time you are clicking on this
    button for a particular project, a popup will be displayed as shown in the following
    screenshot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设您正在本地工作在一个项目上，但您想将应用程序发布到 Web 服务器上进行测试。您需要点击**发布**按钮，如果这是您第一次为特定项目点击此按钮，将显示如下截图所示的弹出窗口：
- en: '![Publishing a project](img/9819OS_06_04.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![发布项目](img/9819OS_06_04.jpg)'
- en: 'Then, click on **Browse** and select the directory where the files will be
    copied. It needs to be a different directory than your project''s root folder.
    When you click on **Continue**, Sencha Architect will run a script and will copy
    all the files to the specified directory, as we can see in the screenshot:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击**浏览**并选择要复制文件的目录。它需要与项目根文件夹不同的目录。当您点击**继续**时，Sencha Architect 将运行一个脚本并将所有文件复制到指定的目录，如图所示：
- en: '![Publishing a project](img/9819OS_06_05.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![发布项目](img/9819OS_06_05.jpg)'
- en: 'You can change the settings any time by clicking on the **Setting** button
    and **Project** tab:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击**设置**按钮和**项目**选项卡来随时更改设置：
- en: '![Publishing a project](img/9819OS_06_06.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![发布项目](img/9819OS_06_06.jpg)'
- en: Introducing Sencha Cmd and Sencha Architect
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Sencha Cmd 和 Sencha Architect
- en: Sencha Architect is a great developer tool for Sencha Projects. Sencha also
    has this other tool called Sencha Cmd that allows developers to create, build,
    emulate, and package projects using the command line terminal. Sencha Architect
    allows us to build, emulate, and package natively Sencha Touch projects. And for
    this reason, there is integration between these two tools. So to get the most
    out of them, we need to have Sencha Cmd installed as well.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Sencha Architect 是一个专为 Sencha 项目设计的优秀开发工具。Sencha 还有一个名为 Sencha Cmd 的其他工具，允许开发者使用命令行终端创建、构建、模拟和打包项目。Sencha
    Architect 允许我们原生地构建、模拟和打包 Sencha Touch 项目。因此，这两个工具之间有集成。因此，为了充分利用它们，我们需要安装 Sencha
    Cmd。
- en: To download it, please go to [http://www.sencha.com/products/sencha-cmd/download](http://www.sencha.com/products/sencha-cmd/download)
    and download the appropriate version according to the operating system you are
    using.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下载它，请访问 [http://www.sencha.com/products/sencha-cmd/download](http://www.sencha.com/products/sencha-cmd/download)
    并根据您使用的操作系统下载适当的版本。
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Before we begin, we also need to have the Java JDK installed with the environment
    variables configured ([http://docs.oracle.com/javase/tutorial/essential/environment/paths.html](http://docs.oracle.com/javase/tutorial/essential/environment/paths.html)),
    we need to have Ruby installed ([http://www.ruby-lang.org](http://www.ruby-lang.org)),
    and Sass ([http://sass-lang.com/](http://sass-lang.com/)), and Compass ([http://compass-style.org/](http://compass-style.org/))
    as well. You can find all these steps on the Sencha Cmd documentation at: [http://docs.sencha.com/touch/2.2.0/#/guide/command](http://docs.sencha.com/touch/2.2.0/#/guide/command).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们还需要安装 Java JDK 并配置环境变量 ([http://docs.oracle.com/javase/tutorial/essential/environment/paths.html](http://docs.oracle.com/javase/tutorial/essential/environment/paths.html))，安装
    Ruby ([http://www.ruby-lang.org](http://www.ruby-lang.org))，Sass ([http://sass-lang.com/](http://sass-lang.com/))
    以及 Compass ([http://compass-style.org/](http://compass-style.org/))。您可以在 Sencha
    Cmd 文档中找到所有这些步骤：[http://docs.sencha.com/touch/2.2.0/#/guide/command](http://docs.sencha.com/touch/2.2.0/#/guide/command)。
- en: Throughout this book, we have also learned that when we create a Sencha Touch
    project, it points to the SDK from Sencha servers. To be able to emulate and package
    the app, we will need to have Sencha Touch locally as well. Simply download it
    from the Sencha website ([http://www.sencha.com/products/touch/download/](http://www.sencha.com/products/touch/download/))
    and unzip to a directory of your preference. And then, we are good to go!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书的整个过程中，我们还了解到，当我们创建一个 Sencha Touch 项目时，它会指向 Sencha 服务器上的 SDK。为了能够模拟和打包应用，我们还需要在本地安装
    Sencha Touch。只需从 Sencha 网站下载 ([http://www.sencha.com/products/touch/download/](http://www.sencha.com/products/touch/download/))
    并解压缩到您偏好的目录即可。然后，我们就可以开始了！
- en: Emulating a Sencha Touch app
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟 Sencha Touch 应用
- en: 'For all Sencha Touch projects, after you save it, you will see a button on
    the toolbox named **Package** as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有 Sencha Touch 项目，在保存后，您将在工具箱中看到一个名为**打包**的按钮，如下截图所示：
- en: '![Emulating a Sencha Touch app](img/9819OS_06_07.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![模拟 Sencha Touch 应用](img/9819OS_06_07.jpg)'
- en: 'Clicking on the **Package** button is the first step that we need to take prior
    to emulating the app. When we click on it, a screen is displayed as shown in the
    following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**打包**按钮是我们模拟应用之前需要采取的第一步。当我们点击它时，将显示一个屏幕，如下截图所示：
- en: '![Emulating a Sencha Touch app](img/9819OS_06_08.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![模拟 Sencha Touch 应用](img/9819OS_06_08.jpg)'
- en: The first thing we need to do is to download and install **Sencha Cmd** (*1*).
    If you already did it, then you need to set the path of where you installed Sencha
    Cmd (*2*). The next step is to verify if everything is ok, by clicking on the
    **Verify** button (*3*). The output should be a window, which will pop up (terminal)
    and Sencha Architect will try to execute the `sencha` command just to make sure
    everything is ok. If it's ok, just click on **Save** (*4*).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是下载并安装**Sencha Cmd** (*1*)。如果您已经完成了，那么您需要设置 Sencha Cmd 安装路径 (*2*)。下一步是点击**验证**按钮
    (*3*) 来验证一切是否正常。输出应该是一个窗口，它将弹出（终端），Sencha Architect 将尝试执行 `sencha` 命令以确保一切正常。如果一切正常，只需点击**保存**
    (*4*)。
- en: '![Emulating a Sencha Touch app](img/9819OS_06_09.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![模拟 Sencha Touch 应用](img/9819OS_06_09.jpg)'
- en: Next, go to the **Setup project with Cmd** vertical tab. Notice that the **Install
    plug-ins** tab now has a green bullet. Our goal is to have all the tabs with green
    bullets. This means we have the setup completed and we are ready to emulate or
    build an app natively.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到**使用Cmd设置项目**垂直标签。注意，**安装插件**标签现在有一个绿色的子弹。我们的目标是让所有标签都有绿色的子弹。这意味着我们已经完成了设置，并且我们准备好模拟或构建原生应用了。
- en: In this second tab, we need to inform Sencha Architect about the directory where
    Sencha Touch SDK is installed locally (*2*). If you do not have it yet, download
    it and unzip it to a directory of your preference (*1*).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第二个标签中，我们需要通知Sencha Architect关于本地安装Sencha Touch SDK的目录（*2*）。如果您还没有，请下载它并将其解压缩到您偏好的目录（*1*）。
- en: '![Emulating a Sencha Touch app](img/9819OS_06_10.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![模拟Sencha Touch应用](img/9819OS_06_10.jpg)'
- en: One very important thing we need to pay attention to is the combination of the
    Sencha Touch version we are using with the Sencha Cmd version. For Sencha Touch
    2.0.x, we need to use Sencha SDK Tools 2.x (this is an older version of Sencha
    Cmd). For Sencha Touch 2.1.x we need to use Sencha Cmd 3.0.x, and for Sencha Touch
    2.2.x we need to use Sencha Cmd 3.1.x. To make sure we are using the correct version,
    always check the official forum for more information ([http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions](http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions)).
    If we do not use the correct version, we can get errors such as "The current working
    directory is not a recognized Sencha SDK or application folder."
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要特别注意的一件非常重要的事情是我们使用的Sencha Touch版本与Sencha Cmd版本的结合。对于Sencha Touch 2.0.x，我们需要使用Sencha
    SDK Tools 2.x（这是Sencha Cmd的一个较旧版本）。对于Sencha Touch 2.1.x，我们需要使用Sencha Cmd 3.0.x，而对于Sencha
    Touch 2.2.x，我们需要使用Sencha Cmd 3.1.x。为了确保我们使用的是正确的版本，请始终查看官方论坛以获取更多信息（[http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions](http://www.sencha.com/forum/forumdisplay.php?98-Sencha-Architect-2.x-Help-amp-Discussions)）。如果我们没有使用正确的版本，我们可能会得到诸如“当前工作目录不是一个已识别的Sencha
    SDK或应用程序文件夹”的错误。
- en: 'And at last, click on the **Setup Project with Cmd** button (*3*). A terminal
    window will be displayed. In this terminal, the `sencha generate app` command
    will be executed, passing the projects configuration (name and path) as parameters
    to the command (as required):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击**使用Cmd设置项目**按钮（*3*）。将显示一个终端窗口。在这个终端中，将执行`sencha generate app`命令，并将项目配置（名称和路径）作为参数传递给命令（如要求）：
- en: '![Emulating a Sencha Touch app](img/9819OS_06_11.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![模拟Sencha Touch应用](img/9819OS_06_11.jpg)'
- en: And the final step, we need to click on the third vertical tab, which is **Package
    settings** (again, notice that the two previous tabs have the green bullet, meaning
    the previous steps are ok).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步，我们需要点击第三个垂直标签，即**打包设置**（再次注意，前两个标签都有绿色的子弹，这意味着前面的步骤是正确的）。
- en: '![Emulating a Sencha Touch app](img/9819OS_06_12.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![模拟Sencha Touch应用](img/9819OS_06_12.jpg)'
- en: 'When we create a Sencha Touch app manually (not using Sencha Architect) using
    Sencha Cmd and the `sencha generate app` command, it creates a file named `packager.json`
    with all the information we need to give Sencha Cmd and Sencha Touch to emulate
    and create the native app for us. We need to do the same thing now. But this `packager.json`
    can be created automatically by clicking on the **Add Package Settings** button.
    When you click on it, the result will be as shown in the following screenshot:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们手动创建一个Sencha Touch应用（不使用Sencha Architect），使用Sencha Cmd和`sencha generate app`命令时，它会创建一个名为`packager.json`的文件，其中包含我们需要提供给Sencha
    Cmd和Sencha Touch以模拟和为我们创建原生应用的所有信息。我们现在需要做同样的事情。但这个`packager.json`可以通过点击**添加打包设置**按钮自动创建。当你点击它时，结果将如以下截图所示：
- en: '![Emulating a Sencha Touch app](img/9819OS_06_13.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![模拟Sencha Touch应用](img/9819OS_06_13.jpg)'
- en: 'Three things we need to pay attention to: first, all the bullets from the vertical
    tabs are green. This means we can start emulating and packaging natively now.
    Second, a **packager** was created (**Current Package Settings**) and we can configure
    as we would like to (emulate, build native for Android or iOS). And third, the
    **packager** was added as a resource on the project, meaning we could also have
    done this manually (like when creating any other resource).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要注意的三件事：首先，所有来自垂直标签的子弹都是绿色的。这意味着我们现在可以开始本地模拟和打包了。其次，创建了一个**打包器**（**当前打包设置**），我们可以按照自己的意愿进行配置（模拟，为Android或iOS构建原生应用）。第三，**打包器**被添加为项目资源，这意味着我们也可以手动完成这项工作（就像创建任何其他资源一样）。
- en: Now, let's see how to emulate for iOS and Android (the only platforms supported
    by Sencha Cmd).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何模拟 iOS 和 Android（Sencha Cmd 支持的唯一平台）。
- en: iOS
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS
- en: First of all, to emulate an app for iOS, you need to have a Mac OS. So this
    step is only for Mac OSusers, and will not work if you are using Windows or Linux.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了模拟 iOS 应用，您需要有一个 Mac OS。因此，此步骤仅适用于 Mac OS 用户，如果您使用 Windows 或 Linux 则不会生效。
- en: Secondly, you need to have XCode installed as well ([https://developer.apple.com/xcode/](https://developer.apple.com/xcode/)).
    It is free and you can download it directly from the App Store.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，您还需要安装 XCode ([https://developer.apple.com/xcode/](https://developer.apple.com/xcode/))。它是免费的，您可以直接从
    App Store 下载。
- en: By default, all the packager configurations come ready for the iOS platform,
    so we simply need to click on the down arrow icon from the **Package** button
    from the toolbar and then select **Simulate**. Again, a terminal window will be
    opened and will run the `sencha app build native` command. And then our app will
    be emulated!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，所有打包器配置都为 iOS 平台准备好了，所以我们只需从工具栏的 **Package** 按钮点击下拉箭头图标，然后选择 **Simulate**。同样，将打开一个终端窗口并运行
    `sencha app build native` 命令。然后我们的应用将被模拟！
- en: '![iOS](img/9819OS_06_14.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![iOS](img/9819OS_06_14.jpg)'
- en: Troubleshooting
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故障排除
- en: In case you get errors while trying to emulate for iOS, with the **iOS Simulator**
    opened go to the menu and select **Reset Contents and Settings…**, then click
    on **Reset**. And then, try to simulate it again by clicking on **Simulate**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在尝试模拟 iOS 时遇到错误，请打开 **iOS Simulator**，转到菜单并选择 **Reset Contents and Settings…**，然后点击
    **Reset**。然后，通过点击 **Simulate** 再次尝试模拟。
- en: '![Troubleshooting](img/9819OS_06_15.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![Troubleshooting](img/9819OS_06_15.jpg)'
- en: Android
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android
- en: To emulate an Android app, you only need to have the Android SDK installed ([http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)).
    But it is highly recommended that you have Eclipse with the ADT plugin (information
    at [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)).
    It is much easier to set up and configure everything that you need prior to beginning
    with Android development. You can use any operating system (Mac OS, Linux, or
    Windows) to emulate or package an Android app.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要模拟 Android 应用，您只需要安装 Android SDK ([http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html))。但强烈建议您安装带有
    ADT 插件的 Eclipse（信息见 [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)）。在开始
    Android 开发之前，设置和配置您所需的一切会容易得多。您可以使用任何操作系统（Mac OS、Linux 或 Windows）来模拟或打包 Android
    应用。
- en: There are three things we need to configure on the packager file. The first
    one is to change the **platform** from **iOSSimulator** to **AndroidEmulator**.
    The second thing is the **sdkPath**; you need to inform the complete path where
    you unzipped the Android SDK on your machine. And the third thing is the `androidAPILevel`;
    just make sure you have the API Level installed as well.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在打包文件中，我们需要配置三件事情。第一件事是将 **platform** 从 **iOSSimulator** 更改为 **AndroidEmulator**。第二件事是
    **sdkPath**；您需要告知您在机器上解压 Android SDK 的完整路径。第三件事是 `androidAPILevel`；只需确保您已安装相应的
    API Level。
- en: '![Android](img/9819OS_06_16.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![Android](img/9819OS_06_16.jpg)'
- en: 'Before we click on the **Simulate** button in **Package** again, we need to
    start the Android emulator manually. For iOS, the emulator is started automatically;
    for Android, we need to do it manually. Open the **Android Virtual Device Manager**
    from Eclipse or start it from the command line ([http://developer.android.com/tools/devices/index.html](http://developer.android.com/tools/devices/index.html)).
    Make sure you have an **Android Virtual Device** (**AVD**) for the **API Level**
    you set on the packager:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们再次点击 **Package** 中的 **Simulate** 按钮之前，我们需要手动启动 Android 模拟器。对于 iOS，模拟器会自动启动；对于
    Android，我们需要手动启动。从 Eclipse 打开 **Android Virtual Device Manager** 或从命令行启动它 ([http://developer.android.com/tools/devices/index.html](http://developer.android.com/tools/devices/index.html))。确保您有一个
    **Android Virtual Device** (**AVD**) 用于您在打包文件中设置的 **API Level**：
- en: '![Android](img/9819OS_06_17.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Android](img/9819OS_06_17.jpg)'
- en: 'Then, click on the **Simulate** button in **Package** from the Sencha Architect
    toolbar and wait a little bit. The app will be emulated on the AVD as shown in
    the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 Sencha Architect 工具栏的 **Package** 中点击 **Simulate** 按钮，稍等片刻。应用将在 AVD 上模拟，如下截图所示：
- en: '![Android](img/9819OS_06_18.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Android](img/9819OS_06_18.jpg)'
- en: When you are emulating an app for the first time on an AVD, it can take a while,
    so please be a little patient.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 AVD 上第一次模拟应用时，可能需要一些时间，所以请稍加耐心。
- en: Packaging (native) a Sencha Touch App
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打包（原生）Sencha Touch应用
- en: After all the testing that we have done, it is time to test on a real device!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们完成所有测试后，是时候在真实设备上测试了！
- en: '![Packaging (native) a Sencha Touch App](img/9819OS_06_19.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![打包（原生）Sencha Touch应用](img/9819OS_06_19.jpg)'
- en: The configurations are the same for iOS and Android (that we have set up on
    the previous topic). Now, if we want to test on a real device, we simply need
    to change the **platform** to **iOS** or **Android** as demonstrated in the previous
    screenshot.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: iOS和Android（我们在前面的主题中已设置）的配置是相同的。现在，如果我们想在真实设备上测试，我们只需将**平台（platform**）更改为**iOS**或**Android**，如前一个屏幕截图所示。
- en: iOS
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS
- en: Testing an app on a real Apple device requires a few more steps. We first need
    to create a provisioning profile on the iOS developer center. And to have an account
    for the iOS developer center ([https://developer.apple.com/account/ios/overview.action](https://developer.apple.com/account/ios/overview.action)),
    you need to pay 99 USD annually to Apple. But if you only want to emulate the
    app, you do not need to pay anything!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实苹果设备上测试一个应用需要更多步骤。我们首先需要在iOS开发者中心创建一个配置文件。并且要有一个iOS开发者中心的账户([https://developer.apple.com/account/ios/overview.action](https://developer.apple.com/account/ios/overview.action))，你需要每年向苹果支付99美元。但如果你只想模拟应用，你不需要支付任何费用！
- en: So the first step is to create the provisioning profile. Make sure the **applicationId**
    (**App ID**) is the same as set on the packager. You also need to set the **bundleSeedId**
    (you can also find what your **bundleSeedId** is on your iOS developer account).
    You need to download the provisioning profile file and also set the path on the
    **provisionProfile** configuration from the packager. The **certificateAlias**,
    **certificatePass**, and **certificatePath** are not mandatory. If you have all
    the configurations required already on Xcode, Sencha Cmd will find it and you
    don't need to worry about it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一步是创建配置文件。确保**应用ID（App ID**）与打包器上设置的一致。你还需要设置**捆绑种子ID（bundleSeedId**）（你还可以在你的iOS开发者账户中找到你的**捆绑种子ID**）。你需要下载配置文件，并从打包器中将路径设置在**provisionProfile**配置中。**证书别名（certificateAlias**）、**证书密码（certificatePass**）和**证书路径（certificatePath**）不是必需的。如果你已经在Xcode上有了所有需要的配置，Sencha
    Cmd会找到它，你不需要担心。
- en: '![iOS](img/9819OS_06_20.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![iOS](img/9819OS_06_20.jpg)'
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about deploying apps on Apple real devices, please go to [http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices](http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于在苹果真实设备上部署应用的信息，请访问[http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices](http://mobiforge.com/developing/story/deploying-iphone-apps-real-devices)。
- en: Once you have everything in place, just click on the **Simulate** button in
    **Package** again. And of course, your iDevice must be connected to your computer
    using an USB cable.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪后，只需再次点击**包**中的**模拟**按钮。当然，你的iDevice必须通过USB线连接到电脑。
- en: Android
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android
- en: 'To be able to test an app on a real Android device you do not need to pay for
    it. You simply need to have a debug keystore. If you use Eclipse with an ADT plugin
    ([http://developer.android.com/tools/sdk/eclipse-adt.html](http://developer.android.com/tools/sdk/eclipse-adt.html)),
    it is going to create one for you already as demonstrated in the following screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要在真实Android设备上测试一个应用，你不需要为此付费。你只需要有一个调试密钥库。如果你使用带有ADT插件的Eclipse([http://developer.android.com/tools/sdk/eclipse-adt.html](http://developer.android.com/tools/sdk/eclipse-adt.html))，它将为你创建一个，如以下屏幕截图所示：
- en: '![Android](img/9819OS_06_21.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![Android](img/9819OS_06_21.jpg)'
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you need to, you can also create the keystore manually. Please see the *Create
    a Certificate* section from the guide at: [http://docs.sencha.com/architect/2/#!/guide/deploy](http://docs.sencha.com/architect/2/#!/guide/deploy).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要，你也可以手动创建密钥库。请参阅指南中的*创建证书*部分：[http://docs.sencha.com/architect/2/#!/guide/deploy](http://docs.sencha.com/architect/2/#!/guide/deploy)。
- en: Then, when you have your Android device connected to your computer (do not forget
    to enable **developer configurations** on the **device settings**), you simply
    need to click on the **Package** | **Simulate** button from the toolbar again
    and wait until the app is installed.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，当你的Android设备连接到电脑时（不要忘记在**设备设置**中启用**开发者配置**），你只需再次点击工具栏中的**包**|**模拟**按钮，等待应用安装完成。
- en: Note
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about testing apps on a real Android device, please go
    to [http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/](http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于在真实 Android 设备上测试应用程序的信息，请访问 [http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/](http://mobile.tutsplus.com/tutorials/connecting-physical-android-devices-to-your-development-machine/)。
- en: Windows Phone 8 and Blackberry 10
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows Phone 8 和 Blackberry 10
- en: Unfortunately, Sencha Cmd does not support emulating and packaging apps to Windows
    Phone 8 and Blackberry 10, although Sencha Touch 2.2 and later versions have support
    for Windows Phone 8 and Blackberry 10 themes (as we learned in the previous chapter).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Sencha Cmd 不支持模拟和打包应用程序到 Windows Phone 8 和 Blackberry 10，尽管 Sencha Touch
    2.2 及更高版本支持 Windows Phone 8 和 Blackberry 10 主题（正如我们在上一章所学到的）。
- en: However, we can create a Blackberry 10 app ([http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html](http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html))
    and use the **Publish** button (from the Sencha Architect toolbar) to copy the
    files from the Sencha Architect project to the Blackberry 10 app project. The
    Blackberry 10 SDK is available for Mac OS, Linux, and Windows.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们可以创建一个 Blackberry 10 应用程序 ([http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html](http://developer.blackberry.com/html5/documentation/creating_a_bb10_app_2007539_11.html))，并使用
    Sencha Architect 工具栏中的 **发布** 按钮将文件从 Sencha Architect 项目复制到 Blackberry 10 应用程序项目。Blackberry
    10 SDK 可用于 Mac OS、Linux 和 Windows。
- en: The same can be done with a Windows Phone 8\. Simply create the Windows Phone
    8 project (JavaScript project) using Visual Studio 2012 (there is an Express version
    specific for Windows Phone 8—and it is free) and publish the Sencha Architect
    project files to the specific directories of the Windows Phone 8 project. Just
    remember you need to have the Windows 8 Pro version to be able to develop and
    emulate apps for Windows Phone 8\. Windows Phone 8 development and emulation is
    not available on previous Windows OS (Windows Vista, Windows 7, and Windows XP),
    and neither is it available on Mac OS and Linux.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于 Windows Phone 8，只需使用 Visual Studio 2012 创建 Windows Phone 8 项目（JavaScript
    项目）（有一个针对 Windows Phone 8 的 Express 版本，并且是免费的）并将 Sencha Architect 项目文件发布到 Windows
    Phone 8 项目的特定目录。只需记住，您需要拥有 Windows 8 Pro 版本才能开发并模拟 Windows Phone 8 应用程序。Windows
    Phone 8 开发和模拟在之前的 Windows 操作系统（Windows Vista、Windows 7 和 Windows XP）上不可用，同样在 Mac
    OS 和 Linux 上也不可用。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we learned how to preview and publish Ext JS and Sencha Touch
    apps within Sencha Architect. We have also learned how to use Sencha Architect
    with Sencha Cmd to emulate and package natively iOS and Android apps. And at last,
    we learned a few tips of how to use the same code to create Blackberry 10 and
    Windows Phone 8 apps.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在 Sencha Architect 中预览和发布 Ext JS 和 Sencha Touch 应用程序。我们还学习了如何使用
    Sencha Architect 与 Sencha Cmd 一起模拟和打包原生 iOS 和 Android 应用程序。最后，我们还了解了一些使用相同代码创建
    Blackberry 10 和 Windows Phone 8 应用的技巧。
- en: So now it is time to let the creativity flow and create awesome apps and publish
    them on different app stores from different platforms! Hope you had a good time
    reading this book.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在是时候让创意流淌，创建令人惊叹的应用程序并将它们发布到不同平台的不同应用商店了！希望您阅读这本书时过得愉快。
- en: Happy coding!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 开源快乐！
