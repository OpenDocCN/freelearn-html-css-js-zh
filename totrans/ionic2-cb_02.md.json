["```js\n$ sudo npm install -g cordova ionic ios-sim\n\n```", "```js\n    $ ionic start PagesAndTabs tabs --v2 \n    $ cd PagesAndTabs\n    $ code .\n\n    ```", "```js\n    <ion-tabs>\n      <ion-tab [root]=\"tab1Root\" tabTitle=\"One\" tabIcon=\"water\"></ion-tab>\n      <ion-tab [root]=\"tab2Root\" tabTitle=\"Two\" tabIcon=\"leaf\"></ion-tab>\n      <ion-tab [root]=\"tab3Root\" tabTitle=\"Three\" tabIcon=\"flame\"></ion-tab>\n    </ion-tabs>\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>One</ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n      <h2>Welcome to Ionic 2 Tabs!</h2>\n      <p>\n        This starter project comes with simple tabs-based layout for apps\n        that are going to primarily use a Tabbed UI.\n      </p>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n\n    import { NavController } from 'ionic-angular';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n\n      constructor(public navCtrl: NavController) {\n\n      }\n\n      ionViewWillEnter() {\n        console.log('Enter Page 1');\n      }\n\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Two\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <ion-item>\n          <ion-input type=\"text\" placeholder=\"First Name\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-input type=\"text\" placeholder=\"Last Name\"></ion-input>\n        </ion-item>\n      </ion-list>\n      <div padding>\n        <button ion-button primary block>Create Account</button>\n      </div>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n\n    @Component({\n      selector: 'page-about',\n      templateUrl: 'about.html'\n    })\n    export class AboutPage {\n\n      constructor(public navCtrl: NavController) {\n\n      }\n\n      ionViewWillEnter() {\n        console.log('Enter Page 2');\n      }\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Three\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-slides #mySlider index=0 (ionDidChange)=\"onSlideChanged($event)\">\n\n        <ion-slide style=\"background-color: green\">\n          <h2>Slide 1</h2>\n        </ion-slide>\n\n        <ion-slide style=\"background-color: blue\">\n          <h2>Slide 2</h2>\n        </ion-slide>\n\n        <ion-slide style=\"background-color: red\">\n          <h2>Slide 3</h2>\n        </ion-slide>\n\n      </ion-slides>\n    </ion-content>\n    ```", "```js\n    import { Component, ViewChild } from '@angular/core';\n    import { Slides, NavController } from 'ionic-angular';\n\n    @Component({\n      selector: 'page-contact',\n      templateUrl: 'contact.html'\n    })\n    export class ContactPage {\n      @ViewChild('mySlider') slider: Slides;\n\n      constructor(public navCtrl: NavController) {\n\n      }\n\n      ionViewWillEnter() {\n        console.log('Enter Page 3');\n      }\n\n      onSlideChanged(e) {\n        let currentIndex = this.slider.getActiveIndex();\n        console.log(\"You are on Slide \", (currentIndex + 1));\n      }\n\n    }\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nimport { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from 'ionic-native';\nimport { TabsPage } from '../pages/tabs/tabs';\n```", "```js\n@Component({\n  template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n  rootPage = TabsPage;\n\n  constructor(platform: Platform) {\n    platform.ready().then(() => {\n      StatusBar.styleDefault();\n    });\n  }\n}\n```", "```js\nclass Example {}\n```", "```js\nexport class Example {}\n```", "```js\nplatform.ready().then(() => {\n\n});\n```", "```js\nplatform.ready().then(function() {\n\n});\n```", "```js\nvar a1 = a.map( s => s.length );\n```", "```js\nvar a1 = a.map(function(s){ return s.length });\n```", "```js\nimport { Component } from '@angular/core';\nimport { HomePage } from '../home/home';\nimport { AboutPage } from '../about/about';\nimport { ContactPage } from '../contact/contact';\n```", "```js\n@Component({\n  template:\n  ` <ion-tabs>\n      <ion-tab [root]=\"tab1Root\" tabTitle=\"One\" tabIcon=\"water\"></ion-tab>\n      <ion-tab [root]=\"tab2Root\" tabTitle=\"Two\" tabIcon=\"leaf\"></ion-tab>\n      <ion-tab [root]=\"tab3Root\" tabTitle=\"Three\" tabIcon=\"flame\"></ion-tab>\n   </ion-tabs>`\n})\n```", "```js\nconsole.log(\"string text line 1\\n\"+\n\"string text line 2\");\n```", "```js\nconsole.log(`string text line 1\nstring text line 2`);\n```", "```js\nexport class TabsPage {\n  tab1Root: any = HomePage;\n  tab2Root: any = AboutPage;\n  tab3Root: any = ContactPage;\n\n  constructor() {\n  }\n}\n```", "```js\n<ion-tabs>\n    <ion-tab><ion-tab>\n</ion-tabs>\n```", "```js\n<ion-content padding>\n  <h2>Welcome to Ionic 2 Tabs!</h2>\n  <p>\n    This starter project comes with simple tabs-based layout for apps that are going to primarily use a Tabbed UI.\n  </p>\n</ion-content>\n```", "```js\n<ion-title>One</ion-title>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n  ionViewWillEnter() {\n    console.log('Enter Page 2');\n  }\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Three\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-slides #mySlider index=0 (ionDidChange)=\"onSlideChanged($event)\">\n\n    <ion-slide style=\"background-color: green\">\n      <h2>Slide 1</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: blue\">\n      <h2>Slide 2</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: red\">\n      <h2>Slide 3</h2>\n    </ion-slide>\n\n  </ion-slides>\n</ion-content>\n```", "```js\n    $ ionic start LeftRightMenu sidemenu --v2\n    $ cd LeftRightMenu\n\n    ```", "```js\n    import { Component, ViewChild } from '@angular/core';\n    import { Nav, Platform } from 'ionic-angular';\n    import { StatusBar, Splashscreen } from 'ionic-native';\n\n    import { Page1 } from '../pages/page1/page1';\n    import { Page2 } from '../pages/page2/page2';\n\n    @Component({\n      templateUrl: 'app.html'\n    })\n    export class MyApp {\n      @ViewChild(Nav) nav: Nav;\n      text: string = '';\n      rootPage: any = Page1;\n      pages: Array<{title: string, component: any}>;\n\n      constructor(public platform: Platform) {\n        this.initializeApp();\n\n        // used for an example of ngFor and navigation\n        this.pages = [\n          { title: 'Page One', component: Page1 },\n          { title: 'Page Two', component: Page2 }\n        ];\n\n      }\n\n      initializeApp() {\n        this.platform.ready().then(() => {\n          // Okay, so the platform is ready and our plugins are available.\n          // Here you can do any higher level native things you might need.\n          StatusBar.styleDefault();\n          Splashscreen.hide();\n        });\n      }\n\n      openPage(page) {\n        // Reset the content nav to have just this page\n        // we wouldn't want the back button to show in this scenario\n        this.nav.setRoot(page.component);\n      }\n\n      rightMenuClick(text) {\n        this.text = text;\n      }  \n    }\n    ```", "```js\n    <ion-menu id=\"leftMenu\" [content]=\"content\" side=\"left\" type=\"overlay\">\n      <ion-header>\n        <ion-toolbar>\n          <ion-title>Menu</ion-title>\n        </ion-toolbar>\n      </ion-header>\n\n      <ion-content>\n        <ion-list>\n          <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\n            {{p.title}}\n          </button>\n        </ion-list>\n      </ion-content>\n\n    </ion-menu>\n\n    <ion-menu id=\"rightMenu\" [content]=\"content\" side=\"right\" type=\"reveal\">\n      <ion-header>\n        <ion-toolbar>\n          <ion-title>Items</ion-title>\n        </ion-toolbar>\n      </ion-header>\n\n      <ion-content>\n        <ion-list>\n          <button ion-item (click)=\"rightMenuClick('Item One')\">\n            Item One\n          </button>\n          <button ion-item (click)=\"rightMenuClick('Item Two')\">\n            Item Two\n          </button>\n        </ion-list>\n\n        <ion-card *ngIf=\"text\">\n          <ion-card-content>\n            You just clicked {{ text }}\n          </ion-card-content>\n        </ion-card>\n      </ion-content>\n\n    </ion-menu>\n\n    <!-- Disable swipe-to-go-back because it's poor UX to combine STGB with side menus -->\n    <ion-nav [root]=\"rootPage\" #content swipeBackEnabled=\"false\"></ion-nav>\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>Getting Started</ion-title>\n\n        <ion-buttons start>\n          <button ion-button menuToggle=\"leftMenu\">\n            <ion-icon name=\"menu\"></ion-icon>\n          </button>\n        </ion-buttons> \n\n        <ion-buttons end>\n          <button ion-button menuToggle=\"rightMenu\">\n            <ion-icon name=\"menu\"></ion-icon>\n          </button> \n        </ion-buttons> \n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding class=\"getting-started\">\n      <h3>Welcome to the Menu Experiment</h3>\n      <p>\n         You can open both left and right menu using below buttons or top navigation bar!\n      </p>\n      <ion-row>\n        <ion-col width-50>\n          <button ion-button primary block menuToggle=\"leftMenu\">Toggle Left</button>\n        </ion-col>\n        <ion-col width-50>\n          <button ion-button primary block menuToggle=\"rightMenu\">Toggle Right</button>\n        </ion-col>\n      </ion-row>\n\n    </ion-content>\n    ```", "```js\n    .getting-started {\n\n      p {\n        margin: 20px 0;\n        line-height: 22px;\n        font-size: 16px;\n      }\n\n    }\n\n    .bar-button-menutoggle {\n      display: inline-flex;\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>Page Two</ion-title>\n\n        <ion-buttons start>\n          <button ion-button menuToggle=\"leftMenu\">\n            <ion-icon name=\"menu\"></ion-icon>\n          </button>\n        </ion-buttons> \n\n        <ion-buttons end>\n          <button ion-button menuToggle=\"rightMenu\">\n            <ion-icon name=\"menu\"></ion-icon>\n          </button> \n        </ion-buttons> \n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <button ion-item *ngFor=\"let item of items\" (click)=\"itemTapped($event, item)\">\n          <ion-icon [name]=\"item.icon\" item-left></ion-icon>\n          {{item.title}}\n          <div class=\"item-note\" item-right>\n            {{item.note}}\n          </div>\n        </button>\n      </ion-list>\n      <div *ngIf=\"selectedItem\" padding>\n        You navigated here from <b>{{selectedItem.title}}</b>\n      </div>\n    </ion-content>\n    ```", "```js\n    @import \"../pages/page1/page1\";\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nside=\"left\" type=\"overlay\"\n```", "```js\nside=\"right\" type=\"reveal\"\n```", "```js\n<ion-nav id=\"nav\" [root]=\"rootPage\" #content swipeBackEnabled=\"false\"></ion-nav>\n```", "```js\n    <ion-list>\n      <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\n        {{p.title}}\n      </button>\n    </ion-list>\n```", "```js\n    <ion-card *ngIf=\"text\">\n      <ion-card-content>\n        You just clicked {{ text }}\n      </ion-card-content>\n    </ion-card>\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>Getting Started</ion-title>\n\n    <ion-buttons start>\n      <button ion-button menuToggle=\"leftMenu\">\n        <ion-icon name=\"menu\"></ion-icon>\n      </button>\n    </ion-buttons> \n\n    <ion-buttons end>\n      <button ion-button menuToggle=\"rightMenu\">\n        <ion-icon name=\"menu\"></ion-icon>\n      </button> \n    </ion-buttons> \n  </ion-navbar>\n</ion-header>\n```", "```js\n  <ion-row>\n    <ion-col width-50>\n      <button primary block menuToggle=\"leftMenu\">Toggle Left</button>\n    </ion-col>\n    <ion-col width-50>\n      <button primary block menuToggle=\"rightMenu\">Toggle Right</button>\n    </ion-col>\n  </ion-row>\n```", "```js\n    $ ionic start Navigation blank --v2\n    $ cd Navigation\n\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { OtherPage } from '../pages/otherPage/otherPage';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        OtherPage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage,\n        OtherPage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Home\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n      <ion-card>\n        <ion-card-header>\n          NavPush 1\n        </ion-card-header>\n        <ion-card-content>\n          <p>Use both <code>navPush</code> and <code>navParams</code></p>\n          <button ion-button block [navPush]=\"otherPage\" [navParams]=\"myString\">OtherPage 1</button>\n        </ion-card-content>\n      </ion-card>\n\n      <ion-card>\n        <ion-card-header>\n          NavPush 2\n        </ion-card-header>\n        <ion-card-content>\n          <p>Use only <code>navPush</code> and pass an array instead</p>\n          <ion-list>\n            <ion-item>\n              <ion-label floating>Name</ion-label>\n              <ion-input type=\"text\" [(ngModel)]=\"myJSON.text\"></ion-input>\n            </ion-item>\n          </ion-list>\n          <div>\n            <button ion-button block color=\"secondary\" [navPush]=\"otherPage\"[navParams]=\"myJSON\">OtherPage 2</button>\n          </div>\n        </ion-card-content>\n      </ion-card>\n\n      <ion-card>\n        <ion-card-header>\n          NavPush 3\n        </ion-card-header>\n        <ion-card-content>\n          <p>Use click event to trigger <code>nav.push</code> in Javascript </p>\n          <button ion-button block color=\"dark\" (click)=\"gotoOtherPage()\">OtherPage 3</button>\n        </ion-card-content>\n      </ion-card>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { OtherPage } from '../otherPage/otherPage';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      public myString: string = 'Example 1 - This is just a string';\n      public myJSON: any = {text: ''};\n      otherPage: any = OtherPage;\n\n      constructor(public navCtrl: NavController) {\n      }\n\n      gotoOtherPage() {\n        this.navCtrl.push(OtherPage, {text: 'Example 3 - This is an object'});\n      }\n    }\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Other Page\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-card *ngIf=\"params.data\">\n        <ion-card-header>\n          params.data\n        </ion-card-header>\n        <ion-card-content>\n          {{ params.data | json }}\n        </ion-card-content>\n      </ion-card>\n\n      <button ion-button block (click)=\"goBack()\">\n        goBack()\n      </button>\n      <button ion-button block navPop>\n        nav-pop\n      </button>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController, NavParams } from 'ionic-angular';\n\n    @Component({\n      selector: 'other-page',\n      templateUrl: 'OtherPage.html'\n    })\n    export class OtherPage {\n      constructor(public navCtrl: NavController, public params: NavParams) {\n      }\n\n      goBack() {\n        this.navCtrl.pop();\n      }\n\n      onPageWillEnter() {\n        console.log('Enter OtherPage');\n      }\n    }\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nimport {Page, NavController, NavParams} from 'ionic/ionic';\n```", "```js\n  public myString: string = 'Example 1 - This is just a string';\n  public myJSON: any = {text: ''};\n  otherPage: any = OtherPage;\n\n  constructor(public navCtrl: NavController) {\n  }\n```", "```js\n  gotoOtherPage() {\n    this.navCtrl.push(OtherPage, {text: 'Example 3 - This is an object'});\n  }\n```", "```js\n    <button block [navPush]=\"otherPage\" [navParams]=\"myString\">OtherPage 1</button>\n    ```", "```js\n    <button ion-button block color=\"secondary\" [navPush]=\"otherPage\" [navParams]=\"myJSON\">OtherPage 2</button>\n    ```", "```js\n    <button block dark (click)=\"gotoOtherPage()\">OtherPage 3</button>\n    ```", "```js\nconstructor(public navCtrl: NavController, public params: NavParams) {\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Other Page\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n```", "```js\n  <ion-card *ngIf=\"params.data\">\n    <ion-card-header>\n      params.data\n    </ion-card-header>\n    <ion-card-content>\n      {{ params.data | json }}\n    </ion-card-content>\n  </ion-card>\n```", "```js\n  <button block (click)=\"goBack()\">\n    goBack()\n  </button>\n```", "```js\n  <button block navPop>\n    nav-pop\n  </button>\n```"]