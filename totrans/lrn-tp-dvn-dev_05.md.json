["```js\n/* src/Ch05/Ch05_Variants.re */\ntype education = *School* | *College* | *Postgrad* | *Other*; /* (1) */\n\ntype poNumber = string;\ntype paymentMethod = *Cash* | *PurchaseOrder*(poNumber); /* (2) */\n\nlet *bobEducation* = *College*; /* (3) */\nlet *bobPaymentMethod* = *Cash*;\nlet *jimEducation* = *Other*;\nlet *jimPaymentMethod* = *PurchaseOrder*(\"PO-1234\"); /* (4) */\n```", "```js\n// JavaScript\nconst *bobPaymentMethod* = {*type*: 'PaymentMethod.Cash'};\nconst *jimPaymentMethod* = \n{\n  *type*: 'PaymentMethod.PurchaseOrder',\n  *poNumber*: 'PO-1234'\n};\n```", "```js\n/* src/Ch05/Ch05_PatternMatching.re */\ntype paymentMethod = *Ch05_Variants*.paymentMethod = /* (1) */\n| *Cash*\n| *PurchaseOrder*(*Ch05_Variants*.poNumber);\n\nlet *paymentMethodThanks*(*paymentMethod*) = switch (*paymentMethod*) { /* (2) */\n| *Cash* => \"Thank you for your cash payment\"\n| *PurchaseOrder*(*poNumber*) =>\n  \"Thank you for your purchase order # \" ++ *poNumber*\n};\n```", "```js\nswitch (*expr*) {\n| *pat1* => *res1*\n| *pat2* => *res2*\n...\n| *patN* => *resN*\n}\n```", "```js\n/* src/Ch05/Ch05_PatternMatchOrder.re */\ntype person = *Ch04_RecordLiterals*.person = {*id*: int, *name*: string};\n\nlet *classifyId*(*id*) = switch (*id*) {\n| 1 | 2 | 3 | 4 | 5 => \"Low\" /* (1) */\n| 6 | 7 | 8 | 9 | 10 => \"Medium\"\n| _ => \"High\"\n};\n\nlet *greet1*(*person*) = switch (*person.id*, *person.name*) { /* (2) */\n| (_, \"Dave\") => \"I'm sorry, Dave, I can't let you do that.\"\n| (1, _) => \"Hello, boss.\"\n| (*id*, *name*) => \"Hi, \" ++ *name* ++ \" with ID \" ++ *string_of_int*(*id*) ++ \"!\"\n};\n\nlet *greet2*(*person*) = switch (*person*) {\n| {*name*: \"Dave\"} => \"I'm sorry, Dave, I can't let you do that.\" /* (3) */\n| {*id*: 1} => \"Hello, boss.\"\n| {*id*, *name*} => \"Hi, \" ++ *name* ++ \" with ID \" ++ *string_of_int*(*id*) ++ \"!\"\n};\n```", "```js\nlet 3 = 3;\nlet *getPoNumber*(*paymentMethod*) = \n{\n  let *PurchaseOrder*(*poNumber*) = *paymentMethod*;\n  *poNumber*\n};\n```", "```js\n(Output from bsb -w)\n  Warning number 8\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_PatternMatchOrder.re 22:5\n\n  20 │ };\n  21 │ \n  22 │ let 3 = 3;\n\n  You forgot to handle a possible value here, for example: \n0\n```", "```js\n(Output from bsb -w)\n  Warning number 8\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_VariantPatternMatching.re 13:7-29\n\n  11 │ \n  12 │ let getPoNumber(paymentMethod) = {\n  13 │   let PurchaseOrder(poNumber) = paymentMethod;\n  14 │   poNumber\n  15 │ };\n\n  You forgot to handle a possible value here, for example: \nCash\n```", "```js\n/* src/Ch05/Ch05_Branching.re */\ntype education = *Ch05_Variants*.education = /* (1) */\n| *School*\n| *College*\n| *Postgrad*\n| *Other*;\n\ntype paymentMethod = *Ch05_Variants*.paymentMethod =\n| *Cash*\n| *PurchaseOrder*(*Ch05_Variants*.poNumber);\n\n/** Returns purchase order IDs that start with 'ACME', otherwise\n    nothing. */\nlet *getAcmeOrder*(*paymentMethod*) = switch (*paymentMethod*) {\n| *PurchaseOrder*(*poNumber*)\n  /* (2),                                      (3) */\n  when *String.sub*(*poNumber*, 0, 4) == \"ACME\" => *Some*(*poNumber*)\n| _ => *None* /* (4) */\n};\n\nlet *decidePaymentMethod*(*orderTotal*, *orderId*) =\n if (*orderTotal* <= 50.0) *Cash* /* (5) */\n else *PurchaseOrder*(\"PO-\" ++ *orderId*);\n```", "```js\n(Output from bsb -w)\n  Warning number 8\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_Branching.re 25:5\n\n  23 │   else PurchaseOrder(\"PO-\" ++ orderId);\n  24 │ \n  25 │ let 3 = 3;\n\n  You forgot to handle a possible value here, for example: \n0\n```", "```js\n// bsconfig.json\n{\n  // ... rest of the file ...\n  \"warnings\": \n  {\n    \"error\": \"+8\"\n  }\n}\n```", "```js\n(Output from bsb -w)\n  Warning number 8\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_Branching.re 25:5\n\n  23 │   else PurchaseOrder(\"PO-\" ++ orderId);\n  24 │ \n  25 │ let 3 = 3;\n\n  You forgot to handle a possible value here, for example: \n0\n\n  We've found a bug for you!\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_Branching.re\n\n  Some fatal warnings were triggered (1 occurrences)\n```", "```js\n/* src/Ch05/Ch05_PolymorphicVariantBasics.re */\nlet *colour* = *`Red*; /* (1) */\nlet *angle* = *`degrees*(45.0); /* (2) */\n\ntype event = [ /* (3) */\n| *`clickTap*(int, int) /* x, y */\n| *`keypress*(char)\n| *`pointerMove*(int, int, int, int) /* x1, y1, x2, y2 */\n];\n\ntype mobileEvent = [\n| event /* (4) */\n| *`deviceShake*(int) /* how many times */\n| *`accel*(float) /* m/s^2 */\n];\n\nlet *pressA*: mobileEvent = *`keypress*('a'); /* (5) */\n/* let *shakeThrice*: event = *`deviceShake*(3); /* (6) */ */\n```", "```js\n(Output from bsb -w)\n  We've found a bug for you!\n  /Users/yawar/src/learning-tydd-reason/src/Ch05/Ch05_PolymorphicVariantBasics.re 18:26-40\n\n  16 │ \n  17 │ let pressA: mobileEvent = `keypress('a'); /* (5) */\n  18 │ let shakeThrice: event = `deviceShake(3); /* (6) */\n\n  This has type:\n    [> `deviceShake(int) ]\n  But somewhere wanted:\n    event\n  The second variant type does not allow tag(s) `deviceShake\n```", "```js\n/* src/Ch05/Ch05_PolymorphicVariantInputs.re */\nlet *eventToString*(*event*) = switch (*event*) {\n| *`clickTap*(*x*, *y*) => {j|`clickTap($*x*, $*y*)|j} /* (1), (2) */\n| *`keypress*(*char*) => {j|`keypress($*char*)|j}\n| *`pointerMove*(*x1*, *y1*, *x2*, *y2*) => {j|`pointerMove($*x1*, $*y1*, $*x2*, $*y2*)|j}\n| *`deviceShake*(*times*) => {j|`deviceShake($*times*)|j}\n| *`accel*(*mssq*) => {j|`accel($*mssq*)|j}\n};\n\n/* (3) */\nlet *pressAString* = *eventToString*(*Ch05_PolymorphicVariantBasics.pressA*);\n\n/* (4) */\nlet *`degrees*(*angleVal*) = *Ch05_PolymorphicVariantBasics.angle*;\n```", "```js\n[<\n| *`accel*('a)\n| *`clickTap*('b, 'c)\n| *`deviceShake*('d)\n| *`keypress*('e)\n| *`pointerMove*('f, 'g, 'h, 'i)\n] =>\nstring\n```", "```js\n/* src/Ch05/Ch05_PolymorphicVariantOutputs.re */\nlet *stringToColour*(*string*) = switch (*string*) {\n| \"red\" => *`red*\n| \"green\" => *`green*\n| \"blue\" => *`blue*\n| _ => *`unknown* /* we need to handle the edge case */\n};\n```", "```js\nstring => [> *`blue* | *`green* | *`red* | *`unknown*]\n```", "```js\n/* src/Ch05/Ch05_GADTs.re */\ntype poNumber = string;\n\ntype paymentMethod =\n| *Cash*: paymentMethod\n| *PurchaseOrder*(poNumber): paymentMethod; /* (1) */\n\nlet *paymentCash* = *Cash*; /* (2) */\n\nlet *paymentMessage*(*paymentMethod*) = switch (*paymentMethod*) {\n| *Cash* => \"Paid in cash\" /* (3) */\n| *PurchaseOrder*(*poNumber*) => {j|Paid with PO#$*poNumber*|j}\n};\n```", "```js\n/* src/Ch05/Ch05_CrmPerson.re */\ntype education = *Ch05_Variants*.education =\n| *School*\n| *College*\n| *Postgrad*\n| *Other*;\n\ntype t = {*id*: int, *name*: string, education}; /* (1) */\n\n/* (2) */\nlet *bob* = {*id*: 1, *name*: \"Bob\", *education*: *College*};\nlet *jim* = {*id*: 2, *name*: \"Jim\", *education*: *Other*};\n```", "```js\n/* src/Ch05/Ch05_PersonList.re */\ntype t = *Node*(*Ch05_CrmPerson*.t, t) | *Empty*; /* (1) */\n\nlet *people* = *Ch05_CrmPerson*.(*Node*(*bob*, *Node*(*jim*, *Empty*))); /* (2) */\n\nlet rec *greet*(*t*) = switch (*t*) { /* (3) */\n| *Node*(*person*, *list*) => { /* (4) */\n    *print_endline*(\"Hello, \" ++ *person.name* ++ \"!\");\n    *greet*(*list*)\n  }\n| *Empty* => () /* (5) */\n};\n```"]