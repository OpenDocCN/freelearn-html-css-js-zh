["```js\nFROM node:8\nRUN yarn\nRUN yarn run build\nCMD node dist/index.js\n```", "```js\n$ sudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n```", "```js\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n```", "```js\n$ sudo apt-key fingerprint 0EBFCD88\n\n pub 4096R/0EBFCD88 2017-02-22\n Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88\n uid Docker Release (CE deb) <docker@docker.com>\n sub 4096R/F273FCD8 2017-02-22\n```", "```js\n$ sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n```", "```js\n$ sudo apt update\n```", "```js\n$ sudo apt remove -y docker docker-engine docker.io\n```", "```js\n$ sudo apt install -y docker-ce\n```", "```js\n$ sudo docker version\nClient:\n Version:      18.03.1-ce\n API version:  1.37\n Go version:   go1.9.5\n Git commit:   9ee9f40\n Built:        Thu Apr 26 07:17:38 2018\n OS/Arch:      linux/amd64\n Experimental: false\n Orchestrator: swarm\n\nServer:\n Engine:\n Version:      18.03.1-ce\n API version:  1.37 (minimum version 1.12)\n Go version:   go1.9.5\n Git commit:   9ee9f40\n Built:        Thu Apr 26 07:15:45 2018\n OS/Arch:      linux/amd64\n Experimental: false\n```", "```js\n$ docker pull docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4\n6.2.4: Pulling from elasticsearch/elasticsearch-oss\n469cfcc7a4b3: Pull complete \n8e27facfa9e0: Pull complete \ncdd15392adc7: Pull complete \n19ff08a29664: Pull complete \nddc4fd93fdcc: Pull complete \nb723bede0878: Pull complete \nDigest: sha256:2d9c774c536bd1f64abc4993ebc96a2344404d780cbeb81a8b3b4c3807550e57\nStatus: Downloaded newer image for docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4\n```", "```js\n$ docker images\nREPOSITORY                                          TAG    IMAGE ID      SIZE\ndocker.elastic.co/elasticsearch/elasticsearch-oss   6.2.4  3822ba554fe9  424MB\n```", "```js\n$ sudo systemctl stop elasticsearch.service\n$ sudo systemctl status elasticsearch.service\n● elasticsearch.service - Elasticsearch\n Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; disabled; vend\n Active: inactive (dead)\n Docs: http://www.elastic.co\n```", "```js\n$ docker run --name elasticsearch -e \"discovery.type=single-node\" -d -p 9200:9200 -p 9300:9300 docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4\n```", "```js\n$ docker ps\nCONTAINER ID        IMAGE                                                     COMMAND                  CREATED             STATUS              PORTS                                            NAMES\na415f4b646e3        docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4   \"/usr/local/bin/dock\\u2026\"   About an hour ago   Up About an hour    0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   elasticsearch\n```", "```js\n$ tree a415f4b646e3a715dc9fa446744934fc99ea33dd28761456381b9b7f6dcaf76b/\na415f4b646e3a715dc9fa446744934fc99ea33dd28761456381b9b7f6dcaf76b/\n├── checkpoints\n├── config.v2.json\n├── a415f4b646e3a715dc9fa446744934fc99ea33dd28761456381b9b7f6dcaf76b-json.log\n├── hostconfig.json\n├── hostname\n├── hosts\n├── mounts\n│   └── shm\n├── resolv.conf\n└── resolv.conf.hash\n3 directories, 7 files\n```", "```js\n$ docker stop a415f4b646e3\na415f4b646e3\n$ yarn run test:e2e    # This should fail\n```", "```js\n$ docker ps -a\n```", "```js\n$ docker run --name elasticsearch -e \"discovery.type=single-node\" -d -p 9200:9200 -p 9300:9300 docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4\n```", "```js\n$ docker inspect a415f4b646e3\n[\n {\n \"Id\": \"a415f4b646e3a71...81b9b7f6dcaf76b\",\n \"Created\": \"2018-05-10T19:37:55.565685206Z\",\n \"Image\": \"sha256:3822ba554fe9...adf11f6a59bde0139\",\n \"Name\": \"/elasticsearch\",\n \"Driver\": \"overlay2\",\n \"NetworkSettings\": {\n \"Ports\": {\n \"9200/tcp\": [{\n \"HostIp\": \"0.0.0.0\",\n \"HostPort\": \"9200\"\n }],\n \"9300/tcp\": [{\n \"HostIp\": \"0.0.0.0\",\n \"HostPort\": \"9300\"\n }]\n },\n \"Gateway\": \"172.17.0.1\",\n \"IPAddress\": \"172.17.0.2\",\n ...\n }\n ...\n }\n]\n```", "```js\n$ docker inspect -f '{{.NetworkSettings.IPAddress}}' elasticsearch\n172.17.0.2\n```", "```js\n$ docker run -p <host-port>:<container-port>\n```", "```js\n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\na415f4b646e3 docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4 \"/usr/local/bin/dock…\" 2 hours ago Up 2 hours 0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp elasticsearch\n$ docker port a415f4b646e3\n9300/tcp -> 0.0.0.0:9300\n9200/tcp -> 0.0.0.0:9200\n```", "```js\n#!/bin/bash\n\n# Set environment variables from .env and set NODE_ENV to test\nsource <(dotenv-export | sed 's/\\\\n/\\n/g')\nexport NODE_ENV=test\n\n# Make sure our local Elasticsearch service is not running\necho -ne '  5% [##                                      ] Stopping local Elasticsearch service      \\r'\nsudo systemctl stop elasticsearch.service\n# Download Elasticsearch Docker image\necho -ne ' 10% [####                                    ] Downloading Elasticsearch image           \\r'\ndocker pull docker.elastic.co/elasticsearch/elasticsearch-oss:${ELASTICSEARCH_VERSION} > /dev/null\n# Get the Image ID for the Elasticsearch\necho -ne ' 20% [########                                ] Retrieving Elasticsearch image ID         \\r'\nELASTICSEARCH_DOCKER_IMAGE_ID=$(docker images docker.elastic.co/elasticsearch/elasticsearch-oss --format '{{.ID}}')\n# Get all running containers using the ELasticsearch Docker image and remove them\necho -ne ' 25% [##########                              ] Removing Existing Elasticsearch Containers\\r'\ndocker ps -a --filter \"ancestor=${ELASTICSEARCH_DOCKER_IMAGE_ID}\" --format '{{.ID}}' | xargs -I_cid -- bash -c 'docker stop _cid && docker rm _cid' > /dev/null\n# Run the Elasticsearch Docker image\necho -ne ' 35% [##############                          ] Initiating Elasticsearch Container        \\r'\ndocker run --name elasticsearch -e \"discovery.type=single-node\" -d -p ${ELASTICSEARCH_PORT}:9200 -p 9300:9300 docker.elastic.co/elasticsearch/elasticsearch-oss:${ELASTICSEARCH_VERSION} > /dev/null\n\n# Polling to see if the Elasticsearch daemon is ready to receive a response\nTRIES=0\nRETRY_LIMIT=50\nRETRY_INTERVAL=0.4\nELASTICSEARCH_READY=false\nwhile [ $TRIES -lt $RETRY_LIMIT ]; do\n  if curl --silent localhost:${ELASTICSEARCH_PORT} -o /dev/null; then\n    ELASTICSEARCH_READY=true\n    break\n  else\n    sleep $RETRY_INTERVAL\n    let TRIES=TRIES+1\n  fi\ndone\n\necho -ne ' 50% [####################                    ] Elasticsearch Container Initiated         \\r'\nTRIES=0\n\nif $ELASTICSEARCH_READY; then\n  # Clean the test index (if it exists)\n  echo -ne ' 55% [######################                  ] Cleaning Elasticsearch Index              \\r'\n  curl --silent -o /dev/null -X DELETE \"$ELASTICSEARCH_HOSTNAME:$ELASTICSEARCH_PORT/$ELASTICSEARCH_INDEX_TEST\"\n\n  # Run our API server as a background process\n  echo -ne ' 60% [########################                ] Initiating API                            \\r'\n  yarn run serve > /dev/null &\n\n  # Polling to see if the server is up and running yet\n  SERVER_UP=false\n  while [ $TRIES -lt $RETRY_LIMIT ]; do\n    if netstat -tulpn 2>/dev/null | grep -q \":$SERVER_PORT_TEST.*LISTEN\"; then\n      SERVER_UP=true\n      break\n    else\n      sleep $RETRY_INTERVAL\n      let TRIES=TRIES+1\n    fi\n  done\n\n  # Only run this if API server is operational\n  if $SERVER_UP; then\n    echo -ne ' 75% [##############################          ] API Initiated                             \\r'\n    # Run the test in the background\n    echo -ne ' 80% [################################        ] Running E2E Tests                         \\r'\n    npx dotenv cucumberjs spec/cucumber/features -- --compiler js:babel-register --require spec/cucumber/steps &\n\n    # Waits for the next job to terminate - this should be the tests\n    wait -n\n  fi\nfi\n\n# Stop all Elasticsearch Docker containers but don't remove them\necho -ne ' 98% [####################################### ] Tests Complete                            \\r'\necho -ne ' 99% [####################################### ] Stopping Elasticsearch Containers         \\r'\ndocker ps -a --filter \"ancestor=${ELASTICSEARCH_DOCKER_IMAGE_ID}\" --format '{{.ID}}' | xargs -I{} docker stop {} > /dev/null\necho '100% [########################################] Complete                                    '\n\n# Terminate all processes within the same process group by sending a SIGTERM signal\nkill -15 0\n```", "```js\nINSTRUCTION arguments\n```", "```js\n# This is a docker comment\n```", "```js\nFROM ubuntu:bionic\n```", "```js\nFROM node:8\n```", "```js\nCOPY [--chown=<user>:<group>] <src>... <dest>\n```", "```js\nWORKDIR /root/\n COPY . .\n```", "```js\nRUN yarn\nRUN yarn run build\n```", "```js\nCMD node dist/index.js\n```", "```js\n$ docker build [context] -f [path/to/Dockerfile]\n```", "```js\n$ docker build . -f ./Dockerfile\n```", "```js\n$ docker build .\n```", "```js\n$ du -ahd1 | sort -rh\n323M    .\n202M    ./.git\n99M     ./node_modules\n21M     ./docs\n880K    ./dist\n564K    ./src\n340K    ./coverage\n176K    ./.nyc_output\n168K    ./spec\n140K    ./yarn-error.log\n128K    ./yarn.lock\n20K     ./scripts\n8.0K    ./.vscode\n8.0K    ./.env.example\n8.0K    ./.env\n4.0K    ./package.json\n4.0K    ./.nvmrc\n4.0K    ./.gitmodules\n4.0K    ./.gitignore\n4.0K    ./.dockerignore\n4.0K    ./Dockerfile\n4.0K    ./.babelrc\n```", "```js\n*\n!src/**\n!package.json\n!yarn.lock\n!spec/openapi/hobnob.yaml\n!.babelrc\n!.env\n```", "```js\n$ docker build -t hobnob:0.1.0 .\n$ docker images\nREPOSITORY   TAG     IMAGE ID        CREATED           SIZE\nhobnob       0.1.0   827ba45ed363    34 seconds ago    814MB\n```", "```js\n$ docker run --env-file ./.env --name hobnob -d -p 8080:8080 hobnob:0.1.0\n```", "```js\n$ docker logs hobnob\nyarn run v1.5.1\n$ node dist/index.js\nHobnob API server listening on port 8080!\n```", "```js\n$ curl localhost:8080/users\n[]\n\n$ curl -X POST http://localhost:8080/users/ \\\n -H 'Content-Type: application/json' \\\n -d '{\n \"email\": \"e@ma.il\",\n \"digest\": \"$2y$10$6.5uPfJUCQlcuLO/SNVX3u1yU6LZv.39qOzshHXJVpaq3tJkTwiAy\"}'\nmsb9amMB4lw6tgyQapgH\n\n$ curl localhost:8080/users\n[{\"email\":\"e@ma.il\"}]\n```", "```js\n$ docker volume create --name esdata\n```", "```js\n$ docker run \\\n --name elasticsearch \\\n -e \"discovery.type=single-node\" \\\n -d \\\n -p 9200:9200 -p 9300:9300 \\ \n -v esdata:/usr/share/elasticsearch/data \\\n docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4\n```", "```js\n$ docker exec -it hobnob bash\nroot@23694a23e80b#\n```", "```js\nroot@23694a23e80b# ps -eo pid,ppid,user,args --sort pid\nPID  PPID USER     COMMAND\n 1     0 root     /bin/sh -c node dist/index.js\n 7     1 root     node dist/index.js\n 17     0 root     bash\n 23    17 root     ps -eo pid,ppid,user,args --sort pid\n```", "```js\nFROM node:8\n\nWORKDIR /root\nCOPY . .\nRUN [\"yarn\"]\nRUN [\"yarn\", \"run\", \"build\"]\n\nCMD [\"node\", \"dist/index.js\"]\n```", "```js\n# ps -eo pid,ppid,user,args --sort pid\nPID  PPID USER     COMMAND\n  1     0 root     node dist/index.js\n 19     0 root     bash\n 25    19 root     ps -eo pid,ppid,user,args --sort pid\n```", "```js\n$ docker run --init --env-file ./.env --name hobnob -d -p 8080:8080 hobnob:0.1.0\n```", "```js\nUSER node\nWORKDIR /home/node\n```", "```js\nCOPY . .\n```", "```js\nCOPY --chown=node:node . .\n```", "```js\nCOPY --chown=node:node . .\nRUN [\"yarn\"]\nRUN [\"yarn\", \"run\", \"build\"]\n```", "```js\nCOPY --chown=node:node [\"package*.json\", \"yarn.lock\", \"./\"]\nRUN [\"yarn\"]\nCOPY --chown=node:node . .\nRUN [\"yarn\", \"run\", \"build\"]\n```", "```js\nFROM ubuntu:bionic\nRUN apt update && apt install git\nRUN [\"git\", \"clone\", \"git@github.com:d4nyll/hobnob.git\"]\n```", "```js\n$ docker images\nREPOSITORY   TAG       IMAGE ID        CREATED        SIZE\nalpine       latest    3fd9065eaf02    4 months ago   4.15MB\nubuntu       latest    452a96d81c30    2 weeks ago    79.6MB\ndebian       latest    8626492fecd3    2 weeks ago    101MB\nopensuse     latest    35057ab4ef08    3 weeks ago    110MB\ncentos       latest    e934aafc2206    5 weeks ago    199MB\nfedora       latest    cc510acfcd70    7 days ago     253MB\n```", "```js\n$ docker pull node:8-alpine\n$ docker pull node:8-slim\n$ docker images node\nREPOSITORY TAG IMAGE ID CREATED SIZE\nnode 8-slim 65ab3bed38aa 2 days ago 231MB\nnode 8-alpine fc3b0429ffb5 2 days ago 68MB\nnode 8 78f8aef50581 2 weeks ago 673MB\n```", "```js\nFROM node:8-alpine\n\nUSER node\nWORKDIR /home/node\n\nCOPY --chown=node:node [\"package*.json\", \"yarn.lock\", \"./\"]\nRUN [\"yarn\"]\nCOPY --chown=node:node . .\nRUN [\"yarn\", \"run\", \"build\"]\n\nCMD [\"node\", \"dist/index.js\"]\n```", "```js\n$ docker rmi hobnob:0.1.0\n$ docker build -t hobnob:0.1.0 . --no-cache\n$ docker images\nREPOSITORY   TAG      IMAGE ID         CREATED          SIZE\nhobnob       0.1.0    e0962ccc28cf     9 minutes ago    210MB\n```", "```js\n$ docker exec -it 27459e1123d4 sh\n~ $ pwd\n/home/node\n~ $ du -ahd1\n4.0K    ./.ash_history\n588.0K  ./dist\n4.0K    ./.babelrc\n4.0K    ./package.json\n20.0K   ./spec\n128.0K  ./yarn.lock\n564.0K  ./src\n138.1M  ./.cache\n8.0K    ./.yarn \n```", "```js\n\n98.5M   ./node_modules\n237.9M  .\n```", "```js\nRUN find . ! -name dist ! -name node_modules -maxdepth 1 -mindepth 1 -exec rm -rf {} \\;\n```", "```js\nFROM node:8-alpine\nUSER node\nWORKDIR /home/node\nCOPY --chown=node:node . .\nRUN yarn && find . ! -name dist ! -name node_modules -maxdepth 1 -mindepth 1 -exec rm -rf {} \\;\nCMD [\"node\", \"dist/index.js\"]\n```", "```js\n$ docker images\nREPOSITORY    TAG     IMAGE ID       CREATED         SIZE\nhobnob        0.1.0   fc57d9875bb5   3 seconds ago   122MB\n```", "```js\nFROM node:8-alpine as builder\nUSER node\nWORKDIR /home/node\n\nCOPY --chown=node:node . .\nRUN [\"yarn\"]\nCOPY --chown=node:node . .\nRUN [\"yarn\", \"run\", \"build\"]\nRUN find . ! -name dist ! -name node_modules -maxdepth 1 -mindepth 1 -exec rm -rf {} \\;\n\nFROM node:8-alpine\nUSER node\nWORKDIR /home/node\nCOPY --chown=node:node --from=builder /home/node .\nCMD [\"node\", \"dist/index.js\"]\n```", "```js\n$ docker images\nREPOSITORY    TAG      IMAGE ID        CREATED         SIZE\nhobnob        0.1.0    5268f2a4176b    5 seconds ago   122MB\n<none>        <none>   f722d00c2dbf    9 seconds ago   210MB\n```", "```js\n$ docker run -it --net host --pid host --userns host --cap-add audit_control \\\n> -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \\\n> -v /var/lib:/var/lib \\\n> -v /var/run/docker.sock:/var/run/docker.sock \\\n> -v /usr/lib/systemd:/usr/lib/systemd \\\n> -v /etc:/etc --label docker_bench_security \\\n> docker/docker-bench-security\nUnable to find image 'docker/docker-bench-security:latest' locally\nlatest: Pulling from docker/docker-bench-security\nff3a5c916c92: Pull complete\n7caaf50dd5e3: Pull complete\n0d533fc1d632: Pull complete\n06609d132a3c: Pull complete\nDigest: sha256:133dcb7b8fd8ae71576e9a298871177a2513520a23b461746bfb0ef1397bfa07\nStatus: Downloaded newer image for docker/docker-bench-security:latest\n# ------------------------------------------------------------------------------\n# Docker Bench for Security v1.3.4\n#\n# Docker, Inc. (c) 2015-\n#\n# Checks for dozens of common best-practices around deploying Docker containers in production.\n# Inspired by the CIS Docker Community Edition Benchmark v1.1.0.\n# ------------------------------------------------------------------------------\n\n[INFO] 1 - Host Configuration\n[WARN] 1.1 - Ensure a separate partition for containers has been created\n[NOTE] 1.2 - Ensure the container host has been Hardened\n...\n[PASS] 7.9 - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)\n[PASS] 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)\n\n[INFO] Checks: 73\n[INFO] Score: 8\n```"]