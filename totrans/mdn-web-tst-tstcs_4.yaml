- en: '*Chapter 4:* Building a Test Suite with TestCafe'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 4 章：使用 TestCafe 构建测试套件*'
- en: Now, as we've been through the main concepts of TestCafe and reviewed its arsenal,
    let's draw a weapon and write some tests! The main goal here will be to get familiar
    with how to write a set of end-to-end tests (a test suite) with TestCafe. This
    is extremely important because the testing techniques that we will cover are universal
    and can be reused to write automated tests for any web project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经了解了 TestCafe 的主要概念并审查了其工具箱，让我们拿起武器并编写一些测试！此处的首要目标将是熟悉如何使用 TestCafe 编写一组端到端测试（测试套件）。这非常重要，因为我们将涵盖的测试技术是通用的，可以重用于编写任何
    Web 项目的自动化测试。
- en: 'To sum up, this chapter will cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，本章将涵盖以下主要主题：
- en: Creating a test.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建测试。
- en: Debugging the tests.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试测试。
- en: Writing the test project log in tests.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在测试项目中编写测试项目日志。
- en: Adding verifications to the test project.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向测试项目中添加验证。
- en: Adding custom code execution to the test project.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在测试项目中添加自定义代码执行。
- en: Adding more tests.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加更多测试。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'As we mentioned in [*Chapter 3*](B16280_03_Final_JM_ePub.xhtml#_idTextAnchor043)*,
    Setting Up the Environment*, while writing code throughout this book, we will
    follow some coding conventions: indent with two spaces for `.json` files, four
    spaces for `.js` files, use semicolons, and use single quotes. We will also utilize
    JavaScript ES6+ syntax, including template strings.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 [*第 3 章*](B16280_03_Final_JM_ePub.xhtml#_idTextAnchor043)*，设置环境* 中提到的，在编写本书中的代码时，我们将遵循一些编码约定：`.json`
    文件使用两个空格缩进，`.js` 文件使用四个空格缩进，使用分号，并使用单引号。我们还将利用 JavaScript ES6+ 语法，包括模板字符串。
- en: 'All code examples for this chapter can be found on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的所有代码示例都可以在 GitHub 上找到：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4).
- en: Creating a test
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在测试项目中创建测试。
- en: TestCafe supports tests written using JavaScript, TypeScript, or CoffeeScript
    with all modern features, such as arrow functions and `async/await`. In addition
    to that, TestCafe will automatically transpile TypeScript and CoffeeScript code
    before running tests, so you do not need to tackle it on your own.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe 支持使用 JavaScript、TypeScript 或 CoffeeScript 编写的测试，并具有所有现代功能，如箭头函数和 `async/await`。除此之外，TestCafe
    还会在运行测试之前自动将 TypeScript 和 CoffeeScript 代码转换为 JavaScript，因此您无需自己处理。
- en: As we agreed initially, throughout this book we will be using JavaScript to
    write the tests.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们最初商定的，在本书中我们将使用 JavaScript 编写测试。
- en: 'In continuation of our previous efforts from [*Chapter 3*](B16280_03_Final_JM_ePub.xhtml#_idTextAnchor043)*,
    Setting Up the Environment*, we already have `test-project` folder with the `.testcaferc.json`
    configuration file in it. So, let''s start by opening any shell (for example,
    we will use Terminal with bash) and following the next steps:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在延续我们之前在 [*第 3 章*](B16280_03_Final_JM_ePub.xhtml#_idTextAnchor043)*，设置环境* 的努力之后，我们已经在
    `test-project` 文件夹中有了 `.testcaferc.json` 配置文件。因此，让我们首先打开任何 shell（例如，我们将使用带有 bash
    的终端）并遵循以下步骤：
- en: 'Go to `test-project` folder and create a folder for our tests:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `test-project` 文件夹并为我们的测试创建一个文件夹：
- en: '[PRE0]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now go to that folder and create a `basic-tests.js` file:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，请转到该文件夹并创建一个 `basic-tests.js` 文件：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Open `basic-tests.js` in a code editor (or IDE) of your choice and let's create
    a simple test.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您选择的代码编辑器（或 IDE）中打开 `basic-tests.js` 并让我们创建一个简单的测试。
- en: 'We will start by including the `testcafe` module:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先将包括 `testcafe` 模块：
- en: '[PRE2]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we declare a fixture using the `fixture` function:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们使用 `fixture` 函数声明一个固定测试：
- en: '[PRE3]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Declare the first test using the `test` function:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `test` 函数声明第一个测试：
- en: '[PRE4]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As we selected Redmine ([http://demo.redmine.org/](http://demo.redmine.org/))
    as our test project, set this URL as a starting page for all tests in the `''My
    first set of tests''` fixture using the `page` function:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们选择了 Redmine ([http://demo.redmine.org/](http://demo.redmine.org/)) 作为我们的测试项目，请使用
    `page` 函数将此 URL 设置为 `'My first set of tests'` 固定测试的起始页面：
- en: '[PRE5]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests1.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests1.js).'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在 GitHub 上审查和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests1.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests1.js).
- en: As we now have an empty test structure, let's run it and inspect the output.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们现在有一个空的测试结构，让我们运行它并检查输出。
- en: Running the test
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行测试
- en: 'We can easily run the test from a command shell by executing a single command
    with the target browser and file path:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在命令行中执行单个命令，指定目标浏览器和文件路径，轻松运行测试：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The shell output will look like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Shell输出将看起来像这样：
- en: '![Figure 4.1: Shell output after the test run'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.1：测试运行后的Shell输出]'
- en: '](img/Figure_4.01_B16280.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: Figure 4.1 – Shell output after the test run
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 测试运行后的Shell输出
- en: 'TestCafe will automatically spawn the chosen browser instance and will start
    running the test. As you can see in the test output: `The "src", "browsers" options
    from the configuration file will be ignored.` This means that we already specified
    our default browser and path to the tests in `.testcaferc.json` (you can see it
    here: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/.testcaferc.json#L3](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/.testcaferc.json#L3))
    and the command shell options that we provided just overrode the defaults.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe将自动启动所选的浏览器实例，并开始运行测试。正如您在测试输出中看到的那样：“配置文件中的`src`、`browsers`选项将被忽略。”这意味着我们已经在`.testcaferc.json`中指定了我们的默认浏览器和测试的路径（您可以在[这里](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/.testcaferc.json#L3)看到它），我们提供的命令行选项已经覆盖了默认设置。
- en: 'So, we can now simplify our test run command even more:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在可以进一步简化测试运行命令：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now TestCafe will just take the default options from `.testcaferc.json` and
    the result of the test run will be the same. We will review more **Command-Line
    Interface** (**CLI**) settings later on in the [*Chapter 5*](B16280_05_Final_JM_ePub.xhtml#_idTextAnchor125)*,
    Improving the Tests*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，TestCafe将仅从`.testcaferc.json`中获取默认选项，测试运行的结果将与之前相同。我们将在[*第5章*](B16280_05_Final_JM_ePub.xhtml#_idTextAnchor125)*，改进测试*中稍后回顾更多的**命令行界面**（**CLI**）设置。
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Keep the browser that is running tests active and do not minimize the browser
    window. Minimized browser windows and inactive tabs tend to get shifted to a reduced
    resource consumption mode where tests are not guaranteed to be executed correctly.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 保持运行测试的浏览器处于活动状态，不要最小化浏览器窗口。最小化的浏览器窗口和未激活的标签页往往会切换到资源消耗减少的模式，在这种模式下，测试可能无法正确执行。
- en: Performing actions
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行动作
- en: 'Now let''s perform some actions on the page:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来在页面上执行一些动作：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests2.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests2.js).'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests2.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests2.js)。
- en: The previous fixture contains a simple test that clicks the `t`. The test controller
    object lets us access the API of the test run. The `await` keyword should be used
    when calling test actions or action chains to wait for them to complete.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的设置包含一个简单的测试，点击`t`。测试控制器对象让我们可以访问测试运行的API。在调用测试动作或动作链时，应该使用`await`关键字等待它们完成。
- en: As we learned how to run a basic test, let's touch the ground on how to deal
    with debugging and errors.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经学会了如何运行基本测试，让我们谈谈如何处理调试和错误。
- en: Debugging the tests
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试测试
- en: 'Now let''s see how we can debug our tests. We will review it in two blocks:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何调试我们的测试。我们将分两个部分来回顾：
- en: Debugging tests in TestCafe.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TestCafe中调试测试。
- en: Debugging tests in Chrome Developer Tools.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Chrome开发者工具中调试测试。
- en: Let's take a look.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看。
- en: Debugging tests in TestCafe
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在TestCafe中调试测试
- en: 'Let''s use the code from the previous example to create a `basic-test-wrong.js`
    file with a slightly modified class name in the selector:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用上一个示例中的代码，创建一个`basic-test-wrong.js`文件，并在选择器中稍作修改类名：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-test-wrong.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-test-wrong.js).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-test-wrong.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-test-wrong.js)。
- en: 'The class name `.login-wrong` is used instead of `.login` to provoke the **element
    not found** error. Let''s launch our test to confirm this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `.login-wrong` 类名而不是 `.login` 来引发 **元素未找到** 错误。让我们启动我们的测试以确认这一点：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output will look like this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于这样：
- en: '![Figure 4.2: Shell output after the test run with the error'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.2：测试运行后带有错误的 Shell 输出'
- en: '](img/Figure_4.02_B16280.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.02_B16280.jpg)'
- en: Figure 4.2 – Shell output after the test run with the error
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 4.2 – 测试运行后带有错误的 Shell 输出
- en: As you can see, TestCafe outputs the error and the line of code where it occurred.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，TestCafe 输出了错误及其发生的位置。
- en: 'But how do you debug the test even before it failed? For that purpose, TestCafe
    has the `t.debug` method. Let''s add it to our test:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 但在测试失败之前，您如何调试测试呢？为此，TestCafe 提供了 `t.debug` 方法。让我们将其添加到我们的测试中：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This method is used to pause the test execution and debug it with the browser''s
    developer tools. You will see some buttons to navigate the test run flow in the
    footer of the browser window:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法用于暂停测试执行，并使用浏览器的开发者工具进行调试。您将在浏览器窗口的页脚中看到一些按钮，用于导航测试运行流程：
- en: '**Unlock Page**: Allows us to interact with the browser page that is currently
    open.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解锁页面**：允许我们与当前打开的浏览器页面进行交互。'
- en: '**Resume**: Allows us to continue the test run.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复**：允许我们继续测试运行。'
- en: '**Next Action**: Executes the next action or assertion:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**下一步操作**：执行下一个操作或断言：'
- en: '![Figure 4.3 – TestCafe debug buttons'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.3 – TestCafe 调试按钮'
- en: '](img/Figure_4.03_B16280.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.03_B16280.jpg)'
- en: Figure 4.3 – TestCafe debug buttons
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 4.3 – TestCafe 调试按钮
- en: 'And the output will look like this:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于这样：
- en: '![Figure 4.4: Shell output in debug mode'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.4：调试模式下的 Shell 输出'
- en: '](img/Figure_4.04_B16280.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.04_B16280.jpg)'
- en: Figure 4.4 – Shell output in debug mode
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 4.4 – 调试模式下的 Shell 输出
- en: As you can see, TestCafe outputs the line of code where `t.debug` method is
    called.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，TestCafe 输出了调用 `t.debug` 方法的代码行。
- en: 'You can also run the tests with `--debug-mode` flag. It will enable debugging
    and pause the test execution right before the first action or assertion:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用 `--debug-mode` 标志来运行测试。这将启用调试并在第一次操作或断言之前暂停测试执行：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Or you can use the `--debug-on-fail` flag. It will pause the test when it fails
    and will allow you to view the tested page and determine the cause of the failure:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用 `--debug-on-fail` 标志。当测试失败时，它将暂停测试，并允许您查看测试页面并确定失败的原因：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: When you are satisfied with the page debugging, just click the **Finish** button
    in the footer to kill the test execution process.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当您对页面调试满意时，只需点击页脚中的 **完成** 按钮即可终止测试执行过程。
- en: Now let's see how to debug a test in Chrome Dev Tools.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何在 Chrome Dev Tools 中调试测试。
- en: Debugging tests in Chrome Developer Tools
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Chrome 开发者工具中调试测试
- en: 'Another useful way to debug the tests is to do it through Node.js in Chrome
    Developer Tools. You will need Google Chrome and Node.js v8 or higher to perform
    all the actions. To debug using the Chrome Developer Tool, follow these steps:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种调试测试的有用方法是通过 Chrome 开发者工具中的 Node.js 进行。您需要 Google Chrome 和 Node.js v8 或更高版本来执行所有操作。要使用
    Chrome 开发者工具进行调试，请按照以下步骤操作：
- en: 'Firstly, put the `debugger` keyword in test code where you want the process
    to stop:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在测试代码中放置 `debugger` 关键字，以便在您希望进程停止的地方：
- en: '[PRE14]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then, to activate Node.js debugging mode, add the `--inspect-brk` flag to the
    test run command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，为了激活 Node.js 调试模式，将 `--inspect-brk` 标志添加到测试运行命令中：
- en: '[PRE15]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Open Google Chrome and navigate to chrome://inspect. In the **Remote Target**
    section, find the Node.js debugger and click **Inspect**. Chrome will launch Developer
    Tools and the debugger will stop test execution at the first line. Click the **Resume
    script execution** button to continue:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Google Chrome 并导航到 chrome://inspect。在 **远程目标** 部分，找到 Node.js 调试器并点击 **检查**。Chrome
    将启动开发者工具，调试器将在第一行停止测试执行。点击 **恢复脚本执行** 按钮继续：
- en: '![Figure 4.5: Google Chrome Developer Tools debugger'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.5：Google Chrome 开发者工具调试器'
- en: '](img/Figure_4.05_B16280.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.05_B16280.jpg)'
- en: Figure 4.5 – Google Chrome Developer Tools debugger
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 4.5 – Google Chrome 开发者工具调试器
- en: As you can see the test execution gets paused at the line with `debugger` keyword
    allowing you to debug the code.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，测试执行在带有 `debugger` 关键字的行上暂停，允许您调试代码。
- en: Now, as have learned how to debug the test code, let's go further and write
    some login tests for our test project.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经学会了如何调试测试代码，让我们进一步编写一些针对测试项目的登录测试。
- en: Writing the test project log in tests
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在测试中编写测试项目日志
- en: As we discussed in [*Chapter 1*](B16280_01_Final_JM_ePub.xhtml#_idTextAnchor013)*,
    Why TestCafe*, we will need a test user to log in to the portal and perform any
    further tests. So, let's start with creating a new user with an email address
    – `test_user_testcafe_poc{randomDigits}@sharklasers.com` – and password – `test_user_testcafe_poc`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第一章*](B16280_01_Final_JM_ePub.xhtml#_idTextAnchor013)*，为什么选择TestCafe*中讨论的那样，我们需要一个测试用户登录到门户并执行任何进一步的测试。因此，让我们从创建一个带有电子邮件地址的新用户开始——`test_user_testcafe_poc{randomDigits}@sharklasers.com`——以及密码——`test_user_testcafe_poc`。
- en: 'Let''s declare the following test to register a new user in `basic-tests.js`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们声明以下测试以在`basic-tests.js`中注册新用户：
- en: '[PRE16]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The test will perform the following actions:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test clicks on the **Register** link:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**注册**链接：
- en: '[PRE17]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The test fills in the **Login** field:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**登录**字段：
- en: '[PRE18]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The test fills in the **Password** field:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**密码**字段：
- en: '[PRE19]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The test fills in the **Confirmation** field:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**确认**字段：
- en: '[PRE20]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The test fills in the **First name** field:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**名字**字段：
- en: '[PRE21]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The test fills in the **Last name** field:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**姓氏**字段：
- en: '[PRE22]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The test fills in the **Email** field:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**电子邮件**字段：
- en: '[PRE23]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The test clicks on the **Submit** button:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**提交**按钮：
- en: '[PRE24]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests3.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests3.js).'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看并下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests3.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests3.js)。
- en: 'As you can see in the previous code block, we are using `1234` as a random
    number for now. It is simple, but we will have to manually update this number
    each time we want to create a unique user. Let''s improve it to be done automatically
    by adding a simple open source library that will generate a timestamp for us.
    Open a shell and execute the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在之前的代码块中所看到的，我们现在使用`1234`作为随机数。这很简单，但每次我们想要创建一个唯一的用户时，我们都需要手动更新这个数字。让我们通过添加一个简单的开源库来自动完成这项工作，该库将为我们生成时间戳。打开shell并执行以下命令：
- en: '[PRE25]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This will install the `js-automation-tools` library and save it to the list
    of our project''s dependencies in `package.json`. Now let''s update the code to
    generate random digits with this library:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这将安装`js-automation-tools`库并将其保存到`package.json`中我们项目的依赖列表中。现在让我们更新代码以使用这个库生成随机数字：
- en: '[PRE26]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests4.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests4.js).'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看并下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests4.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests4.js)。
- en: As you can now see, each time we run the test an email with a unique set of
    digits such as `test_user_testcafe_poc1588556993141@sharklasers.com` is generated,
    so we don't have to worry about new users anymore.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如您现在所看到的，每次我们运行测试时，都会生成一个带有唯一数字集的电子邮件，例如`test_user_testcafe_poc1588556993141@sharklasers.com`，所以我们不再需要担心新用户了。
- en: Note
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can read more about the `js-automation-tools` library and how to use all
    its features here: [https://github.com/Marketionist/js-automation-tools](https://github.com/Marketionist/js-automation-tools).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处了解更多关于`js-automation-tools`库及其所有功能的信息：[https://github.com/Marketionist/js-automation-tools](https://github.com/Marketionist/js-automation-tools)。
- en: 'And so, as we now have a test that creates new Redmine user, let''s go forward
    and add a log in test:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，既然我们现在有一个创建新Redmine用户的测试，让我们继续添加一个登录测试：
- en: '[PRE27]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The test will perform the following actions:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test clicks on the **Sign in** link:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**登录**链接：
- en: '[PRE28]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The test fills in the **Login** field:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**登录**字段：
- en: '[PRE29]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The test fills in the **Password** field:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写了**密码**字段：
- en: '[PRE30]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The test clicks on the **Login** button:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**登录**按钮：
- en: '[PRE31]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests5.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests5.js).'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看并下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests5.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests5.js)。
- en: As we now have all actions we need for creating users and logging in, let's
    add some verifications to make these two tests complete.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们现在已经拥有了创建用户和登录所需的所有操作，让我们添加一些验证来完成这两个测试。
- en: Adding verifications to the test project
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在测试项目中添加验证
- en: Normally, each test should perform some actions and then check the result. As
    we already know from [*Chapter 2*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*,
    Exploring TestCafe Under the hood*, TestCafe provides us with `t.expect`method
    to perform theassertions and verify the results of each test. So, let's add corresponding
    assertions to finalize user creation and log in tests.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，每个测试都应该执行一些操作，然后检查结果。正如我们已经在[*第二章*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*，探索TestCafe内部结构*中了解到的那样，TestCafe为我们提供了`t.expect`方法来执行断言并验证每个测试的结果。因此，让我们添加相应的断言来完成用户创建和登录测试。
- en: Adding assertion for the user creation test
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为用户创建测试添加断言
- en: 'So, the expected result for the user creation test is the **Your account has
    been activated. You can now log in.** notification, which should be displayed:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，用户创建测试的预期结果是**您的账户已激活。您现在可以登录。**通知，它应该显示：
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: As you can see in the final assertion for the user creation test, we are getting
    a notification element by its id and then comparing its inner text value with
    the expected result.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在用户创建测试的最终断言中看到的那样，我们通过其id获取一个通知元素，然后将其内部文本值与预期结果进行比较。
- en: Adding assertion for the log in test
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在登录测试中添加断言
- en: 'The expected result for the log in test will be a block with the username of
    the currently active user that should be displayed in the top-right corner of
    the page:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 登录测试的预期结果将是一个包含当前活跃用户名的块，它应该显示在页面的右上角：
- en: '[PRE33]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests6.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests6.js).'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests6.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests6.js)。
- en: To demonstrate one more approach to assertions, in the login test we are verifying
    that the block with the username of the currently active user is present on the
    page.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示断言的另一种方法，在登录测试中，我们验证当前活跃用户的用户名块是否在页面上。
- en: Adding the log out test
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加登出测试
- en: 'Let''s also add a log out test to finish up with the `Redmine log in tests`
    fixture:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再添加一个登出测试，以完成`Redmine 登录测试`的固定装置：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Note
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests7.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests7.js).'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests7.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests7.js)。
- en: 'As you can see, we are performing two assertions in the log out test:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们在登出测试中执行了两个断言：
- en: Verifies that the block with the currently active user is not present on the
    page.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证当前活跃用户的块不在页面上。
- en: Verifies that the **Sign in** link is present on the page.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证**登录**链接是否在页面上。
- en: As we already have three tests in our test suite, let's add more and review
    how a custom code can be executed in TestCafe.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经在测试套件中有了三个测试，让我们再添加一些，并查看如何在TestCafe中执行自定义代码。
- en: Adding custom code execution to the test project
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在测试项目中添加自定义代码执行
- en: 'As we already learned from the [*Chapter 2*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*,
    Exploring TestCafe Under the Hood*, TestCafe lets you write code to be executed
    on the tested page; this way you can get web elements, URLs, and so on. Special
    kinds of functions are used to execute your code on the client side in the browser:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经在[*第二章*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*，探索TestCafe内部结构*中学到的那样，TestCafe允许您编写在测试页面上执行的代码；这样，您可以获取网页元素、URL等。特殊类型的函数用于在浏览器客户端执行您的代码：
- en: '`Selector`: To obtain any DOM elements.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Selector`：用于获取任何DOM元素。'
- en: '`ClientFunction`: To obtain any data from the client side.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ClientFunction`：用于从客户端获取任何数据。'
- en: These functions should be used in the same way as ordinary async functions,
    and you can use parameters to pass data inside such functions. The selector API
    provides methods and properties to select elements on the page and get their state.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数应与普通异步函数以相同的方式使用，并且您可以使用参数在函数内部传递数据。选择器API提供了方法和属性来选择页面上的元素并获取其状态。
- en: 'To keep a proper structuring of the tests, it is recommended to group them
    by fixture. So, let''s add a `Redmine entities creation tests` fixture and a `Create
    a new project` test to see how custom code execution works:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持测试的正确结构，建议按测试用例分组。因此，让我们添加一个`Redmine entities creation tests`测试用例和一个`创建新项目`测试用例，以查看自定义代码执行的工作方式：
- en: '[PRE35]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The test will perform the following actions:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE36]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击顶部面板中的**项目**链接：
- en: '[PRE37]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The test clicks on the **New project** link:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**新项目**链接：
- en: '[PRE38]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The test fills in the **Name** field:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写**名称**字段：
- en: '[PRE39]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The test clicks on the **Create** button:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**创建**按钮：
- en: '[PRE40]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The test verifies that **Successful creation.** notification is displayed:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证**创建成功**通知显示：
- en: '[PRE41]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The test verifies that the page URL contains the name of the project:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证页面URL是否包含项目名称：
- en: '[PRE42]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Note
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests8.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests8.js).'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests8.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests8.js)。
- en: As our first fixture contains all login tests, a new fixture was created to
    include all tests for new entities creation. In addition to that, we added `ClientFunction`
    and introduced `getPageUrl` function to execute custom code and get the URL of
    the current page.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的第一个测试用例包含了所有登录测试，因此创建了一个新的测试用例来包含所有新实体创建的测试。除此之外，我们还添加了`ClientFunction`并引入了`getPageUrl`函数来执行自定义代码并获取当前页面的URL。
- en: 'And the output will look like this:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 4.6: Shell output with two fixtures'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.6：带有两个测试用例的Shell输出'
- en: '](img/Figure_4.06_B16280.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 4.06_B16280.jpg](img/Figure_4.06_B16280.jpg)'
- en: Figure 4.6 – Shell output with two fixtures
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – 带有两个测试用例的Shell输出
- en: Now, as we have fixtures for Redmine log in tests and Redmine entities creation
    tests, let's continue filling them up.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于我们有了Redmine登录测试和Redmine实体创建测试的测试用例，让我们继续填充它们。
- en: Adding more tests
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加更多测试
- en: Let's continue writing more tests and structuring them into sets divided by
    fixtures.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续编写更多测试，并将它们结构化到按测试用例划分的集合中。
- en: Adding the new issue creation test
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加新的问题创建测试
- en: 'We will start from `Create a new issue` test in the `Redmine entities creation
    tests` fixture:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从`Redmine entities creation tests`测试用例中的`创建新问题`测试用例开始：
- en: '[PRE43]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Note how we are creating a second set of random digits. We need them as now
    the tests are creating two projects, and each project should have a unique name:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们正在创建第二组随机数字。我们需要它们，因为现在测试正在创建两个项目，每个项目都应该有一个独特的名称：
- en: '[PRE44]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The test will perform the following actions:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE45]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The test creates a new project:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新的项目：
- en: '[PRE46]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击顶部面板中的**项目**链接：
- en: '[PRE47]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The test clicks on the project link:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击项目链接：
- en: '[PRE48]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The test clicks on the **New issue** link:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**新问题**链接：
- en: '[PRE49]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The test fills in the **Subject** field:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写**主题**字段：
- en: '[PRE50]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The test fills in the **Description** field:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试填写**描述**字段：
- en: '[PRE51]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The test sets **Priority** to **High**:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试将**优先级**设置为**高**：
- en: '[PRE52]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The test clicks on the **Create** button:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**创建**按钮：
- en: '[PRE53]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The test verifies that created notification is displayed:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证创建的通知显示：
- en: '[PRE54]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests9.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests9.js).'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests9.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests9.js)。
- en: Adding the new issue is displayed on a project page test
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加问题创建显示在项目页面上的测试
- en: 'Let''s move forward and add a test to verify that the issue is displayed on
    a project page:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续添加一个测试来验证问题是否显示在项目页面上：
- en: '[PRE55]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The test will perform the following actions:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE56]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The test creates a new project:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新项目：
- en: '[PRE57]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The test creates a new issue:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新问题：
- en: '[PRE58]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击顶部面板中的**项目**链接：
- en: '[PRE59]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The test clicks on the project link:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击项目链接：
- en: '[PRE60]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The test clicks on the **Issues** link:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**问题**链接：
- en: '[PRE61]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The test verifies that the issue''s **Subject** is displayed:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证问题的**主题**是否显示：
- en: '[PRE62]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Note
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests10.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests10.js).'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests10.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests10.js)。
- en: Adding the issue editing test
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加问题编辑测试
- en: 'Now let''s add a new fixture, `Redmine entities editing tests`, and add a test
    for issue editing:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加一个新的测试用例，`Redmine实体编辑测试`，并添加一个问题编辑测试：
- en: '[PRE63]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The test will perform the following actions:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE64]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The test creates a new project:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新项目：
- en: '[PRE65]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The test creates a new issue:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新问题：
- en: '[PRE66]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击顶部面板中的**项目**链接：
- en: '[PRE67]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The test clicks on the project link:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击项目链接：
- en: '[PRE68]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The test clicks on the **Issues** link:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**问题**链接：
- en: '[PRE69]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The test clicks on the issue link:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击问题链接：
- en: '[PRE70]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The test clicks on the **Edit** link:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**编辑**链接：
- en: '[PRE71]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'The test clears the **Subject** field and fills it in with a new subject:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试清除**主题**字段并填写新的主题：
- en: '[PRE72]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The test sets `Normal`:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试设置`正常`：
- en: '[PRE73]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'The test clicks on the **Submit** button:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**提交**按钮：
- en: '[PRE74]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'The test verifies that the **Successful update.** notification is displayed:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证**成功更新**通知是否显示：
- en: '[PRE75]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Note
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests11.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests11.js).'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests11.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests11.js)。
- en: 'There are two interesting things to point out in this code example:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码示例中有两点值得指出：
- en: As CSS selectors cannot access the element's text, the `.withText` method is
    used to get the element by its text. Addressing the element by its text is more
    stable than doing it with `option[value="5"]` as the value attribute can change
    if more options will be added to the dropdown. The other possible solution to
    get the element by its text can be to use XPath selector containing the text.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于CSS选择器无法访问元素的文本，因此使用`.withText`方法通过文本获取元素。通过文本定位元素比使用`option[value="5"]`更稳定，因为如果下拉菜单中添加了更多选项，值属性可能会改变。另一种通过文本获取元素的方法是使用包含文本的XPath选择器。
- en: The `.selectText` and `.pressKey` methods are used to clear the field from its
    current text. This approach emulates real user behavior. Select all text in the
    input field and press the *delete* keyboard button to remove it.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`.selectText`和`.pressKey`方法清除字段中的当前文本。这种方法模拟了真实用户的行为。选择输入字段中的所有文本并按下*删除*键盘按钮以删除它。
- en: Adding the updated issue is displayed on a project page test
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在项目页面测试中显示添加了更新的问题
- en: 'Now let''s verify that the updated issue is displayed on a project page:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们验证更新的问题是否显示在项目页面上：
- en: '[PRE76]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The test will perform the following actions:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE77]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The test creates a new project:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新项目：
- en: '[PRE78]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'The test creates a new issue:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建一个新问题：
- en: '[PRE79]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击顶部面板中的**项目**链接：
- en: '[PRE80]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The test clicks on the project link:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击项目链接：
- en: '[PRE81]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'The test clicks on the **Issues** link:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**问题**链接：
- en: '[PRE82]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The test clicks on the issue link:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击问题链接：
- en: '[PRE83]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'The test clicks on the **Edit** link:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**编辑**链接：
- en: '[PRE84]'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The test clears the **Subject** field and fills it in with a new subject:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试清除**主题**字段并填写新的主题：
- en: '[PRE85]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'The test sets **Priority** to **Normal**:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试将**优先级**设置为**正常**：
- en: '[PRE86]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'The test clicks on the **Submit** button:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**提交**按钮：
- en: '[PRE87]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'The test clicks on the **Issues** link:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击**问题**链接：
- en: '[PRE88]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The test verifies that the updated issue''s **Subject** is displayed:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试验证更新的问题的**主题**是否显示：
- en: '[PRE89]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Note
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests12.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests12.js).'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests12.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests12.js)。
- en: Adding the issue searching test
  id: totrans-313
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加问题搜索测试
- en: 'Let''s add a test for searching the issue:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个用于搜索问题的测试：
- en: '[PRE90]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The test will perform the following actions:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 该测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试登录：
- en: '[PRE91]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'The test creates a new project:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试创建一个新的项目：
- en: '[PRE92]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The test creates a new issue:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试创建一个新的问题：
- en: '[PRE93]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'The test opens the **Search** page:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试打开**搜索**页面：
- en: '[PRE94]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'The test types the issue''s subject into the **Search** field:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试将问题的主题输入到**搜索**字段中：
- en: '[PRE95]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'The test clicks on the **Submit** button:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击**提交**按钮：
- en: '[PRE96]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'The test verifies that the issue is displayed:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试验证问题是否显示：
- en: '[PRE97]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Note
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests13.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests13.js).'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests13.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests13.js)。
- en: Adding the issue deletion test
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加问题删除测试
- en: 'Now let''s add a `Redmine entities deletion tests` fixture and `Delete the
    issue` test to demonstrate how to handle native browser dialogs:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们添加一个`Redmine实体删除测试`固定装置和`删除问题`测试来演示如何处理原生浏览器对话框：
- en: '[PRE98]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'The test will perform the following actions:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 该测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试登录：
- en: '[PRE99]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'The test creates a new project:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试创建一个新的项目：
- en: '[PRE100]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The test creates a new issue:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试创建一个新的问题：
- en: '[PRE101]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击顶部面板中的**项目**链接：
- en: '[PRE102]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The test clicks on the project link:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击项目链接：
- en: '[PRE103]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'The test clicks on the **Issues** link:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击**问题**链接：
- en: '[PRE104]'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'The test clicks on the issue link:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击问题链接：
- en: '[PRE105]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: The test clicks on the **Delete** link.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试点击**删除**链接。
- en: 'The test confirms the deletion in the browser modal window:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试确认在浏览器模态窗口中删除：
- en: '[PRE106]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'The test verifies that the issue is not displayed:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试验证问题不会显示：
- en: '[PRE107]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The test verifies that the **No data to display** notification is displayed:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该测试验证是否显示**无数据可显示**的通知：
- en: '[PRE108]'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Note
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests14.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests14.js).'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests14.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests14.js)。
- en: 'There''s one interesting thing to note in this test: we are using the `.setNativeDialogHandler`
    method before the browser dialog window will be triggered. We are passing a simple
    arrow function inside this method: `() => true`. All it does is just return `true`.
    It should be done this way to answer OK (confirm) to the browser dialog window
    when it will appear (you can read more about this method in [*Chapter 2*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*,
    TestCafe under the Hood*, and here: [https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setnativedialoghandler.html](https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setnativedialoghandler.html)).'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个测试中有一个有趣的事情需要注意：我们在浏览器对话框窗口触发之前使用`.setNativeDialogHandler`方法。我们在这个方法中传递了一个简单的箭头函数：`()
    => true`。它所做的只是返回`true`。这样做是为了在浏览器对话框窗口出现时回答“确定”（确认）（你可以在[*第2章*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*，TestCafe内部机制*和这里：[https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setnativedialoghandler.html](https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setnativedialoghandler.html)了解更多关于此方法的信息）。
- en: Adding the file uploading test
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加文件上传测试
- en: 'To demonstrate how to work with uploading files, let''s add an `Upload a file`
    test to the `Redmine entities creation tests` fixture. But before that, we will
    need to create a sample file that we will use for uploading, so open a shell and
    execute the following:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示如何处理上传文件，让我们向`Redmine实体创建测试`固定装置添加一个`上传文件`测试。但在那之前，我们需要创建一个用于上传的样本文件，所以打开shell并执行以下命令：
- en: '[PRE109]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: In the preceding commands, we are creating the `uploads` folder inside the `tests`
    folder, and then creating `test-file.txt` inside it.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，我们在`tests`文件夹内创建了一个`uploads`文件夹，然后在其中创建了`test-file.txt`。
- en: 'Now, as we have a dummy file prepared (you can see it on GitHub too: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/tree/master/ch4/test-project/tests/uploads/test-file.txt](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/tree/master/ch4/test-project/tests/uploads/test-file.txt)),
    let''s create a file uploading test:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，因为我们已经准备了一个虚拟文件（你也可以在GitHub上看到：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/tree/master/ch4/test-project/tests/uploads/test-file.txt](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/tree/master/ch4/test-project/tests/uploads/test-file.txt))，让我们创建一个文件上传测试：
- en: '[PRE110]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'The test will perform the following actions:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE111]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The test creates a new project:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建了一个新项目：
- en: '[PRE112]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了顶部面板中的**项目**链接：
- en: '[PRE113]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'The test clicks on the project link:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了项目链接：
- en: '[PRE114]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'The test clicks on the **Files** link:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**文件**链接：
- en: '[PRE115]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'The test clicks on the **New** **file** link:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**新建** **文件**链接：
- en: '[PRE116]'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'The test sets the path to a file:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试设置文件路径：
- en: '[PRE117]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'The test clicks on the **Add** button:'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**添加**按钮：
- en: '[PRE118]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'The test verifies that a link to the file is displayed:'
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证文件链接显示：
- en: '[PRE119]'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'The test verifies that the MD5 checksum is displayed:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证MD5校验和显示：
- en: '[PRE120]'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Note
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests15.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests15.js).'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests15.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests15.js)。
- en: 'There''s one interesting thing to note in this test: we are using the `.setFilesToUpload`
    method to inject the file path to the file upload input on the page (you can read
    more about this method in the [*Chapter 2*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*,
    TestCafe under the Hood*, and here: [https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setfilestoupload.html](https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setfilestoupload.html)).'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个测试中有一个需要注意的有趣事情：我们使用`.setFilesToUpload`方法将文件路径注入到页面上的文件上传输入框中（你可以在[*第2章*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)*，*TestCafe内部机制*，以及这里了解更多关于这个方法的信息：[https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setfilestoupload.html](https://devexpress.github.io/testcafe/documentation/reference/test-api/testcontroller/setfilestoupload.html))。
- en: Adding the file deletion test
  id: totrans-391
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加文件删除测试
- en: 'Now let''s add one final test, `Delete the file`, to the `Redmine entities
    deletion tests` fixture:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们向`Redmine实体删除测试`固定装置添加一个最后的测试，`删除文件`：
- en: '[PRE121]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'The test will perform the following actions:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 测试将执行以下操作：
- en: 'The test logs in:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试登录：
- en: '[PRE122]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'The test creates a new project:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试创建了一个新项目：
- en: '[PRE123]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'The test uploads a new file:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试上传了一个新文件：
- en: '[PRE124]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'The test clicks on the **Projects** link in the top panel:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了顶部面板中的**项目**链接：
- en: '[PRE125]'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'The test clicks on the project link:'
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了项目链接：
- en: '[PRE126]'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'The test clicks on the **Files** link:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了**文件**链接：
- en: '[PRE127]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: The test clicks on the trash bin icon.
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试点击了垃圾桶图标。
- en: 'The test confirms the deletion in the browser modal window:'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试确认在浏览器模态窗口中删除：
- en: '[PRE128]'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'The test verifies that a link to the file is not displayed:'
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证文件链接未显示：
- en: '[PRE129]'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'The test verifies that the MD5 checksum is not displayed:'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试验证MD5校验和未显示：
- en: '[PRE130]'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Note
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 备注
- en: 'You can also review and download this file on GitHub: [https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests16.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests16.js).'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在GitHub上查看和下载此文件：[https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests16.js](https://github.com/PacktPublishing/Modern-Web-Testing-with-TestCafe/blob/master/ch4/test-project/tests/basic-tests16.js)。
- en: 'One interesting thing to note in this test is how to get the element with a
    chain of methods: `Selector(''.filename a'').withText(''test-file.txt'').parent(''.file'').find(''.buttons
    a'').withAttribute(''data-method'', ''delete'')`. Here, we are getting a link
    that has `test-file.txt` text, then searching for its parent element with the
    `file` class, then searching among its descendants for a link with the `data-method="delete"`
    attribute. This will guarantee that we clicked on the delete link for the corresponding
    file. You can read more about how to select the elements here: [https://devexpress.github.io/testcafe/documentation/guides/basic-guides/select-page-elements.html](https://devexpress.github.io/testcafe/documentation/guides/basic-guides/select-page-elements.html).'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个测试中需要注意的一个有趣的事情是如何通过一系列方法获取元素：`Selector('.filename a').withText('test-file.txt').parent('.file').find('.buttons
    a').withAttribute('data-method', 'delete')`。在这里，我们正在获取一个包含`test-file.txt`文本的链接，然后搜索其具有`file`类的父元素，然后在其后代中搜索具有`data-method="delete"`属性的链接。这将确保我们点击了对应文件的删除链接。您可以在此处了解更多有关如何选择元素的信息：[https://devexpress.github.io/testcafe/documentation/guides/basic-guides/select-page-elements.html](https://devexpress.github.io/testcafe/documentation/guides/basic-guides/select-page-elements.html)。
- en: Summary
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we have concentrated on how to write tests for a real-life
    project. We crafted four sets of tests (fixtures) for the Redmine demo portal:
    log in tests, entity creation tests, entity editing tests, and entity deletion
    tests.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们专注于如何为现实生活中的项目编写测试。我们为Redmine演示门户制作了四组测试（固定装置）：登录测试、实体创建测试、实体编辑测试和实体删除测试。
- en: Also, we learned some useful techniques such as how to debug tests, execute
    custom code, assert elements, clear inputs, press keys, confirm native browser
    alerts, upload files, and chain element selectors. All of these lessons can be
    applied to pretty much any other web project.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还学习了一些有用的技术，例如如何调试测试、执行自定义代码、断言元素、清除输入、按键、确认原生浏览器警报、上传文件以及链式元素选择器。所有这些课程都可以应用到几乎任何其他Web项目中。
- en: As our set of tests in now ready, in the next chapter we will be adding setup
    and teardown sections to our current code to improve its structure and enhance
    its maintainability.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的测试集现在已经准备好了，在下一章中，我们将向当前代码中添加设置和拆卸部分，以改进其结构并增强其可维护性。
