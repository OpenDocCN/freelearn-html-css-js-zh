["```js\n    const logger = console;\n    logger.log('Server started on port 3000');\n    logger.error('Database connection failed: connection\n      timeout');\n    logger.info('User login successful: userId=12345');\n    ```", "```js\n    {\n      \"level\": \"error\",\n      \"time\": \"2024-06-26T12:34:57.890Z\",\n      \"service\": \"my-microservice\",\n      \"buildInfo\": {\n        \"nodeVersion\": \"v16.13.0\",\n        \"commitHash\": \"abc123def456\"\n      },\n      \"msg\": \"Failed to connect to database\",\n      \"eventId\": \"evt-2000\",\n      \"correlationId\": \"corr-67890\",\n      \"stack\": \"Error: Connection timeout\\n    at Object.<anonymous> (/path/to/your/file.js:15:19)\\n    at Module._compile (internal/modules/cjs/loader.js:999:30)\\n    at Module.load (internal/modules/cjs/loader.js:985:32)\\n    at Function.Module._load (internal/modules/cjs/loader.js:878:14)\\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:71:12)\\n    at internal/main/run_main_module.js:17:47\",\n      \"source\": {\n        \"file\": \"/path/to/your/file.js\",\n        \"line\": 15,\n        \"function\": \"logError\"\n      }\n    }\n    ```", "```js\nnpm install -E winston morgan\n```", "```js\nconst winston = require('winston');\nconst logger = winston.createLogger({\n    level: process.env.LOG_LEVEL || 'info',\n    defaultMeta: {\n        service: \"account-microservice\",\n        buildInfo: {\n            version: '1.0.0',\n            nodeVersion: process.version\n        }\n    },\n    transports:\n        [new winston.transports.Console({\n            format: winston.format.combine(\n                winston.format.colorize(),\n                winston.format.simple()\n            )\n        }),\n        new winston.transports.File({\n            format: winston.format.combine(\n                winston.format.json(),\n                winston.format.timestamp()\n            ),\n            filename: 'combined.log'\n        }),\n        new winston.transports.File({\n            format: winston.format.combine(\n                winston.format.json(),\n                winston.format.timestamp()\n            ),\n            filename: 'error.log',\n            level: 'error'\n        })\n        ]\n});\nmodule.exports = {\n    logger\n};\n```", "```js\nconst accountService = require('../services/account');\nconst { logger } = require('../log/logger');\nconst getAccountById = async (req, res) => {\n    logger.info('getAccountById method called', { accountId: req.params.id });\n….\n```", "```js\n{\n  \"buildInfo\": {\n    \"nodeVersion\": \"v20.12.1\",\n    \"version\": \"1.0.0\"\n  },\n  \"level\": \"info\",\n  \"message\": \"account service started\",\n  \"port\": 3001,\n  \"service\": \"account-microservice\"\n}\n{\n  \"accountId\": \"6658ae5284432e40604018d5\",\n  \"buildInfo\": {\n    \"nodeVersion\": \"v20.12.1\",\n    \"version\": \"1.0.0\"\n  },\n  \"level\": \"info\",\n  \"message\": \"getAccountById method called\",\n  \"service\": \"account-microservice\"\n}\n```", "```js\nconst fs = require('fs');\nconst path = require('path');\nconst morgan = require('morgan');\nconst { logger } = require('../log/logger-logstash');\nconst morganFormat = JSON.stringify({\n    method: ':method',\n    url: ':url',\n    status: ':status',\n    responseTime: ':response-time ms',});\n// Path to the combined.log file\nconst logFilePath = path.join(__dirname,\n  '../../combined.log');\n// Create a write stream for the log file\nconst logFileStream = fs.createWriteStream(logFilePath,\n  { flags: 'a' });\n// Custom message handler function for logging\nfunction messageHandler(message) {\n    const parsedMessage = JSON.parse(message.trim());\n    // Write log to logstash\n    logger.info('Request received for logging',\n      parsedMessage);\n    // Also write the log to combined.log file\n    logFileStream.write(`${message}\\n`);\n}\n// Create morgan middleware with custom format and stream\nconst morganMiddleware = morgan(morganFormat, {\n    stream: {\n        write: messageHandler,\n    },\n});\nmodule.exports = morganMiddleware;\n```", "```js\nconst morganMiddleware = require('./morganmiddleware');\nconst app = express();\napp.use(morganMiddleware);\n```", "```js\ninput {\n  tcp {\n    port => 5000\n  }\n}\nfilter {\n  json {\n    source => \"message\"\n  }\n}\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    index => \"app-%{+YYYY.MM.dd}\"\n  }\n  stdout { }\n}\n```", "```js\nconst winston = require('winston');\nconst LogstashTransport = require('winston-logstash\n  /lib/winston-logstash-latest.js');\nconst serviceName = 'account-microservice'\nconst logstashTransport = new LogstashTransport({\n    host: 'localhost',\n    port: 5000\n})\nconst logger = winston.createLogger({\n    level: 'info',\n    format: winston.format.combine(winston\n      .format.timestamp(), winston.format.json()),\n    defaultMeta: {\n        service: serviceName,\n        buildInfo: {\n            nodeVersion: process.version\n        }\n    },\n    transports: [\n        new winston.transports.Console({\n            format: winston.format.combine(\n                winston.format.colorize(),\n                winston.format.simple()\n            )\n        }),\n        logstashTransport\n    ]\n})\nmodule.exports = {\n    logger\n};\n```", "```js\nconst { logger } = require('./log/logger-logstash');\n```"]