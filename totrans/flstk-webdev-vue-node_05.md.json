["```js\n<script type=\"text/javascript\" src=\"img/vue.js\"></script>\n```", "```js\n<script type=\"text/javascript\" src=\"img/vue.js\"></script>\n```", "```js\n$ npm install vue\n```", "```js\n$ npm install -g vue-cli\n```", "```js\n$ vue init webpack movie_rating_app\n```", "```js\n$ cd movie_rating_app\n$ npm run dev\n```", "```js\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js'\n  },\n  output: {\n```", "```js\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport router from './router';\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n el: '#app',\n router,\n template: '<App/>',\n components: { App },\n});\n```", "```js\n<template>\n <div id=\"app\">\n <img src=\"img/logo.png\">\n <router-view/>\n </div>\n</template>\n\n<script>\nexport default {\n name: 'app',\n};\n</script>\n\n<style>\n#app {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n -webkit-font-smoothing: antialiased;\n -moz-osx-font-smoothing: grayscale;\n text-align: center;\n color: #2c3e50;\n margin-top: 60px;\n}\n</style>\n```", "```js\n<template>\n <div>\n </div>\n</template>\n```", "```js\n<template>\n <div>\n Hello World\n </div>\n</template>\n```", "```js\n<img src=\"img/logo.png\">\n```", "```js\n@import './home.css';\n```", "```js\n<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nimport './assets/stylesheets/main.css'; \nexport default {\n  name: 'App',\n};\n</script>\n```", "```js\n#app {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n -webkit-font-smoothing: antialiased;\n -moz-osx-font-smoothing: grayscale;\n text-align: center;\n color: #2c3e50;\n margin-top: 60px;\n width: 100%;\n}\n```", "```js\n$ npm install bootstrap bootstrap-vue vuetify --save\n```", "```js\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport BootstrapVue from 'bootstrap-vue'; \nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nimport App from './App';\nimport router from './router';\n\nVue.use(BootstrapVue);\nVue.use(Vuetify);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>',\n});\n```", "```js\n...\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://unpkg.com/vuetify/dist/vuetify.min.css\" rel=\"stylesheet\">\n    <title>movie_rating_app</title>\n  </head>\n...\n```", "```js\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://unpkg.com/vuetify/dist/vuetify.min.css\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons\" rel=\"stylesheet\">\n    <title>movie_rating_app</title>\n  </head>\n```", "```js\n<template>\n <v-app id=\"inspire\">\n <v-navigation-drawer\n fixed\n v-model=\"drawer\"\n app\n >\n <v-list dense>\n <router-link v-bind:to=\"{ name: 'Home' }\" class=\"side_bar_link\">\n <v-list-tile>\n <v-list-tile-action>\n <v-icon>home</v-icon>\n </v-list-tile-action>\n <v-list-tile-content>Home</v-list-tile-content>\n </v-list-tile>\n </router-link>\n <router-link v-bind:to=\"{ name: 'Contact' }\" class=\"side_bar_link\">\n <v-list-tile>\n <v-list-tile-action>\n <v-icon>contact_mail</v-icon>\n </v-list-tile-action>\n <v-list-tile-content>Contact</v-list-tile-content>\n </v-list-tile>\n </router-link>\n </v-list>\n </v-navigation-drawer>\n <v-toolbar color=\"indigo\" dark fixed app>\n <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n <v-toolbar-title>Home</v-toolbar-title>\n </v-toolbar>\n <v-content>\n <v-container fluid>\n <div id=\"app\">\n <router-view/>\n </div>\n </v-container>\n </v-content>\n <v-footer color=\"indigo\" app>\n <span class=\"white--text\">&copy; 2018</span>\n </v-footer>\n </v-app>\n</template>\n\n<script>\nimport './assets/stylesheets/main.css';\n\nexport default {\n data: () => ({\n drawer: null,\n }),\n props: {\n source: String,\n },\n};\n</script>\n```", "```js\n#app {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n -webkit-font-smoothing: antialiased;\n -moz-osx-font-smoothing: grayscale;\n text-align: center;\n color: #2c3e50;\n}\n\n#inspire {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n}\n\n.container.fill-height {\n align-items: normal;\n}\n\na.side_bar_link {\n text-decoration: none;\n}\n```", "```js\n<template>\n <v-layout>\n this is home\n </v-layout>\n</template>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport HelloWorld from '@/components/HelloWorld';\nimport Contact from '@/components/Contact';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'HelloWorld',\n      component: HelloWorld,\n    },\n {\n path: '/contact',\n name: 'Contact',\n component: Contact,\n },\n  ],\n});\n```", "```js\n<template>\n <v-layout>\n this is contact\n </v-layout>\n</template>\n```", "```js\n<template>\n  <v-app id=\"inspire\">\n    <v-navigation-drawer\n      fixed\n      v-model=\"drawer\"\n      app\n    >\n      <v-list dense>\n <router-link v-bind:to=\"{ name: 'Home' }\" class=\"side_bar_link\">\n          <v-list-tile @click=\"\">\n            <v-list-tile-action>\n              <v-icon>home</v-icon>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '@/components/Home';\nimport Contact from '@/components/Contact';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home,\n    },\n    {\n      path: '/contact',\n      name: 'Contact',\n      component: Contact,\n    },\n  ],\n});\n```", "```js\n<div class='app'></div>\n```", "```js\n<template>\n  <v-layout>\n    <div v-text=\"message\"></div>\n  </v-layout>\n</template>\n<script type=\"text/javascript\">\nexport default {\n data() {\n return {\n message: 'Hello there, how are you this morning?',\n };\n },\n};\n</script>\n```", "```js\n<template>\n  <v-layout row wrap>\n <v-flex xs12>\n <div v-text=\"message\"></div>\n </v-flex>\n <v-flex xs12>\n <v-btn color=\"primary\" v-on:click=\"reply\">Reply</v-btn>\n </v-flex>\n </v-layout>\n</template>\n<script type=\"text/javascript\">\nexport default {\n  data() {\n    return {\n      message: 'Hello there, how are you this morning?',\n    };\n  },\n  methods: {\n reply() {\n this.message = \"I'm doing great. Thank You!\";\n },\n },\n};\n</script>\n```", "```js\n<template>\n  <v-layout row wrap>\n    <v-flex xs12>\n      <div>{{message}}</div>\n    </v-flex>\n    <v-flex xs12>\n      <v-btn color=\"primary\" v-on:click=\"reply\">Reply</v-btn>\n    </v-flex>\n  </v-layout>\n</template>\n<script type=\"text/javascript\">\n  export default {\n    data () {\n      return {\n        message: 'Hello there, how are you?',\n      }\n    },\n    methods: {\n      reply () {\n        this.message = \"I'm doing great. Thank You!\"\n      }\n    }\n  }\n</script>\n```", "```js\n<template>\n <v-layout row wrap>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">Batman vs Superman</div>\n <span class=\"grey--text\">2016 ‧ Science fiction film/Action fiction ‧ 3h 3m</span>\n </div>\n </v-card-title>\n <v-card-text>\n It's been nearly two years since Superman's (Henry Cavill) colossal battle with Zod (Michael Shannon) devastated the city of Metropolis. The loss of life and collateral damage left many feeling angry and helpless, including crime-fighting billionaire Bruce Wayne (Ben Affleck). Convinced that Superman is now a threat to humanity, Batman embarks on a personal vendetta to end his reign on Earth, while the conniving Lex Luthor (Jesse Eisenberg) launches his own crusade against the Man of Steel.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">Logan</div>\n <span class=\"grey--text\">2017 ‧ Drama/Science fiction film ‧ 2h 21m</span>\n </div>\n </v-card-title>\n <v-card-text>\n In the near future, a weary Logan (Hugh Jackman) cares for an ailing Professor X (Patrick Stewart) at a remote outpost on the Mexican border. His plan to hide from the outside world gets upended when he meets a young mutant (Dafne Keen) who is very much like him. Logan must now protect the girl and battle the dark forces that want to capture her.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">Star Wars: The Last Jedi</div>\n <span class=\"grey--text\">2017 ‧ Fantasy/Science fiction film ‧ 2h 35m</span>\n </div>\n </v-card-title>\n <v-card-text>\n Luke Skywalker's peaceful and solitary existence gets upended when he encounters Rey, a young woman who shows strong signs of the Force. Her desire to learn the ways of the Jedi forces Luke to make a decision that changes their lives forever. Meanwhile, Kylo Ren and General Hux lead the First Order in an all-out assault against Leia and the Resistance for supremacy of the galaxy.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">Wonder Woman</div>\n <span class=\"grey--text\">2017 ‧ Fantasy/Science fiction film ‧ 2h 21m</span>\n </div>\n </v-card-title>\n <v-card-text>\n Before she was Wonder Woman (Gal Gadot), she was Diana, princess of the Amazons, trained to be an unconquerable warrior. Raised on a sheltered island paradise, Diana meets an American pilot (Chris Pine) who tells her about the massive conflict that's raging in the outside world. Convinced that she can stop the threat, Diana leaves her home for the first time. Fighting alongside men in a war to end all wars, she finally discovers her full powers and true destiny.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">Dunkirk</div>\n <span class=\"grey--text\">2017 ‧ Drama/Thriller ‧ 2 hours</span>\n </div>\n </v-card-title>\n <v-card-text>\n In May 1940, Germany advanced into France, trapping Allied troops on the beaches of Dunkirk. Under air and ground cover from British and French forces, troops were slowly and methodically evacuated from the beach using every serviceable naval and civilian vessel that could be found. At the end of this heroic mission, 330,000 French, British, Belgian and Dutch soldiers were safely evacuated.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">The Revenant</div>\n <span class=\"grey--text\">2015 ‧ Drama/Thriller ‧ 2h 36m</span>\n </div>\n </v-card-title>\n <v-card-text>\n While exploring the uncharted wilderness in 1823, frontiersman Hugh Glass (Leonardo DiCaprio) sustains life-threatening injuries from a brutal bear attack. When a member (Tom Hardy) of his hunting team kills his young son (Forrest Goodluck) and leaves him for dead, Glass must utilize his survival skills to find a way back to civilization. Grief-stricken and fueled by vengeance, the legendary fur trapper treks through the snowy terrain to track down the man who betrayed him.\n </v-card-text>\n <v-card-actions>\n <v-btn flat color=\"purple\">Rate this movie</v-btn>\n <v-spacer></v-spacer>\n </v-card-actions>\n </v-card>\n </v-flex>\n </v-layout>\n</template>\n```", "```js\n#app {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n -webkit-font-smoothing: antialiased;\n -moz-osx-font-smoothing: grayscale;\n text-align: center;\n color: #2c3e50;\n width: 100%;\n}\n\n#inspire {\n font-family: 'Avenir', Helvetica, Arial, sans-serif;\n}\n\n.container.fill-height {\n align-items: normal;\n}\n\na.side_bar_link {\n text-decoration: none;\n}\n\n.card__title--primary, .card__text {\n text-align: left;\n}\n\n.card {\n height: 100% !important;\n}\n```", "```js\n<template>\n <v-app id=\"inspire\">\n <v-navigation-drawer\n fixed\n v-model=\"drawer\"\n app\n >\n <v-list dense>\n <router-link v-bind:to=\"{ name: 'Home' }\" class=\"side_bar_link\">\n <v-list-tile>\n <v-list-tile-action>\n <v-icon>home</v-icon>\n </v-list-tile-action>\n <v-list-tile-content>Home</v-list-tile-content>\n </v-list-tile>\n </router-link>\n <router-link v-bind:to=\"{ name: 'Contact' }\" class=\"side_bar_link\">\n <v-list-tile>\n <v-list-tile-action>\n <v-icon>contact_mail</v-icon>\n </v-list-tile-action>\n <v-list-tile-content>Contact</v-list-tile-content>\n </v-list-tile>\n </router-link>\n </v-list>\n </v-navigation-drawer>\n <v-toolbar color=\"indigo\" dark fixed app>\n <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n <v-toolbar-title>Home</v-toolbar-title>\n <v-spacer></v-spacer>\n <v-toolbar-items class=\"hidden-sm-and-down\">\n <v-btn flat v-bind:to=\"{ name: 'AddMovie' }\">Add Movie</v-btn>\n </v-toolbar-items>\n </v-toolbar>\n <v-content>\n <v-container fluid>\n <div id=\"app\">\n <router-view/>\n </div>\n </v-container>\n </v-content>\n <v-footer color=\"indigo\" app>\n <span class=\"white--text\">&copy; 2018</span>\n </v-footer>\n </v-app>\n</template>\n\n<script>\nimport './assets/stylesheets/main.css';\n\nexport default {\n data: () => ({\n drawer: null,\n }),\n props: {\n source: String,\n },\n};\n</script>\n```", "```js\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css'; \nimport BootstrapVue from 'bootstrap-vue';\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nimport App from './App';\nimport router from './router';\n\nVue.use(BootstrapVue);\nVue.use(Vuetify);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n el: '#app',\n router,\n components: { App },\n template: '<App/>',\n});\n```", "```js\n<v-toolbar color=\"indigo\" dark fixed app>\n <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n <v-toolbar-title>Home</v-toolbar-title>\n <v-spacer></v-spacer>\n <v-toolbar-items class=\"hidden-sm-and-down\">\n <v-btn flat v-bind:to=\"{ name: 'AddMovie' }\">Add Movie</v-btn>\n </v-toolbar-items>\n</v-toolbar>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '@/components/Home';\nimport Contact from '@/components/Contact';\nimport AddMovie from '@/components/AddMovie';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home,\n    },\n    {\n      path: '/contact',\n      name: 'Contact',\n      component: Contact,\n    },\n    {\n path: '/movies/add',\n name: 'AddMovie',\n component: AddMovie,\n },\n  ],\n});\n```", "```js\n<template>\n <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n <v-text-field\n label=\"Movie Name\"\n v-model=\"name\"\n :rules=\"nameRules\"\n required\n ></v-text-field>\n <v-text-field\n name=\"input-7-1\"\n label=\"Movie Description\"\n v-model=\"description\"\n multi-line\n ></v-text-field>\n <v-select\n label=\"Movie Release Year\"\n v-model=\"release_year\"\n :items=\"years\"\n ></v-select>\n <v-text-field\n label=\"Movie Genre\"\n v-model=\"genre\"\n ></v-text-field>\n <v-btn\n @click=\"submit\"\n :disabled=\"!valid\"\n >\n submit\n </v-btn>\n <v-btn @click=\"clear\">clear</v-btn>\n </v-form>\n</template>\n```", "```js\n<template>\n...\n</template>\n<script>\nexport default {\n data: () => ({\n valid: true,\n name: '',\n description: '',\n genre: '',\n release_year: '',\n nameRules: [\n v => !!v || 'Movie name is required',\n ],\n select: null,\n years: [\n '2018',\n '2017',\n '2016',\n '2015',\n ],\n }),\n methods: {\n submit() {\n if (this.$refs.form.validate()) {\n // Perform next action\n }\n },\n clear() {\n this.$refs.form.reset();\n },\n },\n};\n</script>\n```", "```js\n <v-form v-model=\"valid\" ref=\"form\" lazy-validation> \n```", "```js\n<v-text-field\n  label=\"Movie Name\"\n  v-model=\"name\"\n  :rules=\"nameRules\"\n  required\n></v-text-field>\n```", "```js\n<script>\nexport default {\n  data: () => ({\n    valid: true,\n    name: '',\n    description: '',\n    genre: '',\n    release_year: '',\n    nameRules: [\n      v => !!v || 'Movie name is required',\n    ],\n    select: null,\n    years: [\n '2018',\n '2017',\n '2016',\n '2015',\n ],\n  }),\n  methods: {\n    submit() {\n      if (this.$refs.form.validate()) {\n        // Perform next action\n      }\n    },\n    clear() {\n      this.$refs.form.reset();\n    },\n  },\n};\n</script>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '@/components/Home';\nimport Contact from '@/components/Contact';\nimport AddMovie from '@/components/AddMovie';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home,\n    },\n    {\n      path: '/contact',\n      name: 'Contact',\n      component: Contact,\n    },\n    {\n      path: '/movies/add',\n      name: 'AddMovie',\n      component: AddMovie,\n    },\n  ],\n});\n```", "```js\nnpm install express --save\n```", "```js\n$ npm install morgan body-parser cors mongoose --save\n```", "```js\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst morgan = require('morgan');\nconst fs = require('fs');\n\nconst app = express();\nconst router = express.Router();\napp.use(morgan('combined'));\napp.use(bodyParser.json());\napp.use(cors());\n\n//connect to mongodb\nmongoose.connect('mongodb://localhost/movie_rating_app', function() {\n console.log('Connection has been made');\n})\n.catch(err => {\n console.error('App starting error:', err.stack);\n process.exit(1);\n});\n\nrouter.get('/', function(req, res) {\n res.json({ message: 'API Initialized!'});\n});\n\nconst port = process.env.API_PORT || 8081;\napp.use('/', router);\napp.listen(port, function() {\n console.log(`api running on port ${port}`);\n});\n```", "```js\n//connect to mongodb\nmongoose.connect('mongodb://localhost/movie_rating_app', function() {\n  console.log('Connection has been made');\n})\n.catch(err => {\n  console.error('App starting error:', err.stack);\n  process.exit(1);\n});\n```", "```js\n$ mongod\n```", "```js\n$ node server.js\n```", "```js\n$ npm run dev\n```", "```js\n$ node server.js \n```", "```js\n$ node server.js\n```", "```js\n$ npm install nodemon --save \n```", "```js\n$ nodemon server.js\n```", "```js\nconst mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\nconst MovieSchema = new Schema({\n name: String,\n description: String,\n release_year: Number,\n genre: String,\n});\n\nconst Movie = mongoose.model('Movie', MovieSchema)\nmodule.exports = Movie;\n```", "```js\nconst MovieSchema = require('../models/Movie.js');\n\nmodule.exports.controller = (app) => {\n // add a new movie\n app.post('/movies', (req, res) => {\n const newMovie = new MovieSchema({\n name: req.body.name,\n description: req.body.description,\n release_year: req.body.release_year,\n genre: req.body.genre,\n });\n\n newMovie.save((error, movie) => {\n if (error) { console.log(error); }\n res.send(movie);\n });\n });\n};\n```", "```js\n...\n//connect to mongodb\nmongoose.connect('mongodb://localhost/movie_rating_app', function() {\n  console.log('Connection has been made');\n})\n.catch(err => {\n  console.error('App starting error:', err.stack);\n  process.exit(1);\n});\n\n// Include controllers\nfs.readdirSync(\"controllers\").forEach(function (file) {\n if(file.substr(-3) == \".js\") {\n const route = require(\"./controllers/\" + file)\n route.controller(app)\n }\n})\n\nrouter.get('/', function(req, res) {\n  res.json({ message: 'API Initialized!'});\n});\n...\n```", "```js\nnpm install axios --save\n```", "```js\n<v-select\n      label=\"Movie Release Year\"\n      v-model=\"select\"\n      :items=\"years\"\n    ></v-select>\n    <v-text-field\n      label=\"Movie Genre\"\n      v-model=\"genre\"\n    ></v-text-field>\n    <v-btn\n @click=\"submit\"\n :disabled=\"!valid\"\n >\n      submit\n    </v-btn>\n    <v-btn @click=\"clear\">clear</v-btn>\n```", "```js\n...\nmethods: {\n    submit() {\n if (this.$refs.form.validate()) {\n // Perform next action\n }\n },\n    clear() {\n      this.$refs.form.reset();\n    },\n  },\n...\n```", "```js\n<script>\nimport axios from 'axios';\n\nexport default {\n  data: () => ({\n    valid: true,\n    name: '',\n    description: '',\n    genre: '',\n    release_year: '',\n    nameRules: [\n      v => !!v || 'Movie name is required',\n    ],\n    select: null,\n    years: [\n      '2018',\n      '2017',\n      '2016',\n      '2015',\n    ],\n  }),\n  methods: {\n    submit() {\n if (this.$refs.form.validate()) {\n return axios({\n method: 'post',\n data: {\n name: this.name,\n description: this.description,\n release_year: this.release_year,\n genre: this.genre,\n },\n url: 'http://localhost:8081/movies',\n headers: {\n 'Content-Type': 'application/json',\n },\n })\n .then(() => {\n this.$router.push({ name: 'Home' });\n this.$refs.form.reset();\n })\n .catch(() => {\n });\n }\n return true;\n },\n    clear() {\n      this.$refs.form.reset();\n    },\n  },\n};\n</script>\n```", "```js\n$ mongo\n$ use movie_rating_app\n$ db.movies.find()\n```", "```js\n<template>\n  <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n    <v-text-field\n      label=\"Movie Name\"\n      v-model=\"name\"\n      :rules=\"nameRules\"\n      required\n    ></v-text-field>\n    <v-text-field\n      name=\"input-7-1\"\n      label=\"Movie Description\"\n      v-model=\"description\"\n      multi-line\n    ></v-text-field>\n    <v-select\n      label=\"Movie Release Year\"\n      v-model=\"release_year\"\n      required\n :rules=\"releaseRules\"\n      :items=\"years\"\n    ></v-select>\n    <v-text-field\n      label=\"Movie Genre\"\n      v-model=\"genre\"\n      required\n :rules=\"genreRules\"\n    ></v-text-field>\n    <v-btn\n      @click=\"submit\"\n      :disabled=\"!valid\"\n    >\n      submit\n    </v-btn>\n    <v-btn @click=\"clear\">clear</v-btn>\n  </v-form>\n</template>\n<script>\n  import axios from 'axios';\n\n  export default {\n    data: () => ({\n      valid: true,\n      name: '',\n      description: '',\n      genre: '',\n      release_year: '',\n      nameRules: [\n        (v) => !!v || 'Movie name is required'\n      ],\n      genreRules: [\n v => !!v || 'Movie genre year is required',\n v => (v && v.length <= 80) || 'Genre must be less than equal to 80 characters.',\n ],\n releaseRules: [\n v => !!v || 'Movie release year is required',\n ],\n      select: null,\n      years: [\n        '2018',\n        '2017',\n        '2016',\n        '2015'\n      ],\n      checkbox: false\n    }),\n    methods: {\n      submit () {\n        if (this.$refs.form.validate()) {\n          return axios({\n            method: 'post',\n            data: {\n              name: this.name,\n              description: this.description,\n              release_year: this.release_year,\n              genre: this.genre\n            },\n            url: 'http://localhost:8081/movies',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          .then((response) => {\n            this.$router.push({ name: 'Home' });\n            this.$refs.form.reset();\n          })\n          .catch((error) => {\n          });\n        }\n      },\n      clear () {\n        this.$refs.form.reset()\n      }\n    }\n  }\n</script>\n```", "```js\n$ npm install vue-swal --save\n```", "```js\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\n\nimport BootstrapVue from 'bootstrap-vue';\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nimport VueSwal from 'vue-swal';\nimport App from './App';\nimport router from './router';\n\nVue.use(BootstrapVue);\nVue.use(Vuetify);\nVue.use(VueSwal);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>',\n});\n```", "```js\n...\nmethods: {\n  submit() {\n    if (this.$refs.form.validate()) {\n      return axios({\n        method: 'post',\n        data: {\n          name: this.name,\n          description: this.description,\n          release_year: this.release_year,\n          genre: this.genre,\n        },\n        url: 'http://localhost:8081/movies',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(() => {\n          this.$swal(\n 'Great!',\n 'Movie added successfully!',\n 'success',\n );\n          this.$router.push({ name: 'Home' });\n          this.$refs.form.reset();\n        })\n        .catch(() => {\n          this.$swal(\n 'Oh oo!',\n 'Could not add the movie!',\n 'error',\n );\n        });\n    }\n    return true;\n  },\n  clear() {\n    this.$refs.form.reset();\n  },\n},\n...\n```", "```js\nconst MovieSchema = require('../models/Movie.js');\n\nmodule.exports.controller = (app) => {\n  // fetch all movies\n app.get('/movies', (req, res) => {\n MovieSchema.find({}, 'name description release_year genre', (error, movies) => {\n if (error) { console.log(error); }\n res.send({\n movies,\n });\n });\n });\n\n  // add a new movie\n  app.post('/movies', (req, res) => {\n    const newMovie = new MovieSchema({\n      name: req.body.name,\n      description: req.body.description,\n      release_year: req.body.release_year,\n      genre: req.body.genre,\n    });\n\n    newMovie.save((error, movie) => {\n      if (error) { console.log(error); }\n      res.send(movie);\n    });\n  });\n};\n```", "```js\n<template>\n  <v-layout row wrap>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">Batman vs Superman</div>\n            <span class=\"grey--text\">2016 ‧ Science fiction film/Action \n            fiction ‧ 3h 3m</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          It's been nearly two years since Superman's (Henry Cavill) colossal battle with Zod (Michael Shannon) devastated the city of Metropolis. The loss of life and collateral damage left many feeling angry and helpless, including crime-fighting billionaire Bruce Wayne (Ben Affleck). Convinced that Superman is now a threat to humanity, Batman embarks on a personal vendetta to end his reign on Earth, while the conniving Lex Luthor (Jesse Eisenberg) launches his own crusade against the Man of Steel.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">Logan</div>\n            <span class=\"grey--text\">2017 ‧ Drama/Science fiction film ‧ \n            2h 21m</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          In the near future, a weary Logan (Hugh Jackman) cares for an ailing Professor X (Patrick Stewart) at a remote outpost on the Mexican border. His plan to hide from the outside world gets upended when he meets a young mutant (Dafne Keen) who is very much like him. Logan must now protect the girl and battle the dark forces that want to capture her.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">Star Wars: The Last Jedi</div>\n            <span class=\"grey--text\">2017 ‧ Fantasy/Science fiction film \n            ‧ 2h 35m</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          Luke Skywalker's peaceful and solitary existence gets upended when he encounters Rey, a young woman who shows strong signs of the Force. Her desire to learn the ways of the Jedi forces Luke to make a decision that changes their lives forever. Meanwhile, Kylo Ren and General Hux lead the First Order in an all-out assault against Leia and the Resistance for supremacy of the galaxy.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">Wonder Woman</div>\n            <span class=\"grey--text\">2017 ‧ Fantasy/Science fiction film \n            ‧ 2h 21m</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          Before she was Wonder Woman (Gal Gadot), she was Diana, princess of the Amazons, trained to be an unconquerable warrior. Raised on a sheltered island paradise, Diana meets an American pilot (Chris Pine) who tells her about the massive conflict that's raging in the outside world. Convinced that she can stop the threat, Diana leaves her home for the first time. Fighting alongside men in a war to end all wars, she finally discovers her full powers and true destiny.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">Dunkirk</div>\n            <span class=\"grey--text\">2017 ‧ Drama/Thriller ‧ 2 \n            hours</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          In May 1940, Germany advanced into France, trapping Allied troops on the beaches of Dunkirk. Under air and ground cover from British and French forces, troops were slowly and methodically evacuated from the beach using every serviceable naval and civilian vessel that could be found. At the end of this heroic mission, 330,000 French, British, Belgian and Dutch soldiers were safely evacuated.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">The Revenant</div>\n            <span class=\"grey--text\">2015 ‧ Drama/Thriller ‧ 2h \n            36m</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          While exploring the uncharted wilderness in 1823, frontiersman Hugh Glass (Leonardo DiCaprio) sustains life-threatening injuries from a brutal bear attack. When a member (Tom Hardy) of his hunting team kills his young son (Forrest Goodluck) and leaves him for dead, Glass must utilize his survival skills to find a way back to civilization. Grief-stricken and fueled by vengeance, the legendary fur trapper treks through the snowy terrain to track down the man who betrayed him.\n        </v-card-text>\n        <v-card-actions>\n          <v-btn flat color=\"purple\">Rate this movie</v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Movies',\n  data() {\n    return {\n      movies: [],\n    };\n  },\n  mounted() {\n    this.fetchMovies();\n  },\n  methods: {\n    async fetchMovies() {\n      return axios({\n        method: 'get',\n        url: 'http://localhost:8081/movies',\n      })\n        .then((response) => {\n          this.movies = response.data.movies;\n        })\n        .catch(() => {\n        });\n    },\n  },\n};\n</script>\n```", "```js\n<template>\n  <v-layout row wrap>\n    <v-flex xs4 v-for=\"movie in movies\" :key=\"movie._id\">\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">{{ movie.name }}</div>\n            <span class=\"grey--text\">{{ movie.release_year }} ‧ {{ movie.genre }}</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          {{ movie.description }}\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n...\n```", "```js\n<template>\n  <v-layout row wrap>\n    <v-flex xs4 v-for=\"movie in movies\" :key=\"movie._id\">\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">\n <v-btn flat v-bind:to=\"`/movies/${movie._id}`\">\n {{ movie.name }}\n </v-btn>\n </div>\n            <span class=\"grey--text\">{{ movie.release_year }} ‧ {{ movie.genre }}</span>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          {{ movie.description }}\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n```", "```js\n<template>\n <v-layout row wrap>\n <v-flex xs4>\n <v-card>\n <v-card-title primary-title>\n <div>\n <div class=\"headline\">{{ movie.name }}</div>\n <span class=\"grey--text\">{{ movie.release_year }} ‧ {{ movie.genre }}</span>\n </div>\n </v-card-title>\n <h6 class=\"card-title\">Rate this movie</h6>\n <v-card-text>\n {{ movie.description }}\n </v-card-text>\n </v-card>\n </v-flex>\n </v-layout>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n name: 'Movie',\n data() {\n return {\n movie: [],\n };\n },\n mounted() {\n this.fetchMovie();\n },\n methods: {\n async fetchMovie() {\n return axios({\n method: 'get',\n url: `http://localhost:8081/api/movies/${this.$route.params.id}`,\n })\n .then((response) => {\n this.movie = response.data;\n })\n .catch(() => {\n });\n },\n },\n};\n</script>\n```", "```js\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '@/components/Home';\nimport Contact from '@/components/Contact';\nimport AddMovie from '@/components/AddMovie';\nimport Register from '@/components/Register';\nimport Login from '@/components/Login';\nimport Movie from '@/components/Movie';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home,\n    },\n    {\n      path: '/contact',\n      name: 'Contact',\n      component: Contact,\n    },\n    {\n      path: '/movies/add',\n      name: 'AddMovie',\n      component: AddMovie,\n    },\n    {\n path: '/movies/:id',\n name: 'Movie',\n component: Movie,\n },\n  ],\n});\n```", "```js\nconst MovieSchema = require('../models/Movie.js');\n\nmodule.exports.controller = (app) => {\n  // fetch all movies\n  app.get('/movies', (req, res) => {\n    MovieSchema.find({}, 'name description release_year genre', (error, movies) => {\n      if (error) { console.log(error); }\n      res.send({\n        movies,\n      });\n    });\n  });\n\n  // fetch a single movie\n app.get('/api/movies/:id', (req, res) => {\n MovieSchema.findById(req.params.id, 'name description release_year genre', (error, movie) => {\n if (error) { console.error(error); }\n res.send(movie);\n });\n });\n\n  // add a new movie\n  app.post('/movies', (req, res) => {\n    const newMovie = new MovieSchema({\n      name: req.body.name,\n      description: req.body.description,\n      release_year: req.body.release_year,\n      genre: req.body.genre,\n    });\n\n    newMovie.save((error, movie) => {\n      if (error) { console.log(error); }\n      res.send(movie);\n    });\n  });\n};\n```", "```js\n$ npm install vue-star-rating --save\n```", "```js\n<template>\n  <v-layout row wrap>\n    <v-flex xs4>\n      <v-card>\n        <v-card-title primary-title>\n          <div>\n            <div class=\"headline\">{{ movie.name }}</div>\n            <span class=\"grey--text\">{{ movie.release_year }} ‧ {{ movie.genre }}</span>\n          </div>\n        </v-card-title>\n <h6 class=\"card-title\" v-if=\"current_user\">Rate this movie</h6>\n        <v-card-text>\n          {{ movie.description }}\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport axios from 'axios';\nimport Vue from 'vue';\nimport StarRating from 'vue-star-rating';\n\nconst wrapper = document.createElement('div');\n// shared state\nconst state = {\n note: 0,\n};\n// crate component to content\nconst RatingComponent = Vue.extend({\n data() {\n return { rating: 0 };\n },\n watch: {\n rating(newVal) { state.note = newVal; },\n },\n template: `\n <div class=\"rating\">\n How was your experience getting help with this issues?\n <star-rating v-model=\"rating\" :show-rating=\"false\"></star-rating>\n </div>`,\n components: { 'star-rating': StarRating },\n});\n\nconst component = new RatingComponent().$mount(wrapper);\n\nexport default {\n  name: 'Movie',\n  data() {\n    return {\n      movie: [],\n    };\n  },\n  mounted() {\n    this.fetchMovie();\n  },\n  methods: {\n    async rate() {\n this.$swal({\n content: component.$el,\n buttons: {\n confirm: {\n value: 0,\n },\n },\n }).then(() => {\n const movieId = this.$route.params.id;\n return axios({\n method: 'post',\n data: {\n rate: state.note,\n },\n url: `http://localhost:8081/movies/rate/${movieId}`,\n headers: {\n 'Content-Type': 'application/json',\n },\n })\n .then(() => {\n this.$swal(`Thank you for rating! ${state.note}`, 'success');\n })\n .catch((error) => {\n const message = error.response.data.message;\n this.$swal('Oh oo!', `${message}`, 'error');\n });\n });\n },\n    async fetchMovie() {\n      return axios({\n        method: 'get',\n        url: `http://localhost:8081/api/movies/${this.$route.params.id}`,\n      })\n        .then((response) => {\n          this.movie = response.data;\n        })\n        .catch(() => {\n        });\n    },\n  },\n};\n</script>\n```", "```js\n...\n<h6 class=\"card-title\" v-if=\"current_user\" @click=\"rate\">Rate this movie</h6>\n...\n```", "```js\nvar Movie = require(\"../models/Movie\");\n\nmodule.exports.controller = (app) => {\n  // fetch all movies\n  app.get(\"/movies\", function(req, res) {\n    Movie.find({}, 'name description release_year genre', function (error, movies) {\n      if (error) { console.log(error); }\n       res.send({\n        movies: movies\n      })\n    })\n  })\n\n  // fetch a single movie\n  app.get(\"/api/movies/:id\", function(req, res) {\n    Movie.findById(req.params.id, 'name description release_year \n    genre', function (error, movie) {\n      if (error) { console.error(error); }\n      res.send(movie)\n    })\n  })\n\n  // rate a movie\n app.post('/movies/rate/:id', (req, res) => {\n const rating = new Rating({\n movie_id: req.params.id,\n user_id: req.body.user_id,\n rate: req.body.rate,\n })\n\n rating.save(function (error, rating) {\n if (error) { console.log(error); }\n res.send({\n movie_id: rating.movie_id,\n user_id: rating.user_id,\n rate: rating.rate\n })\n })\n })\n\n  // add a new movie\n  app.post('/movies', (req, res) => {\n    const movie = new Movie({\n      name: req.body.name,\n      description: req.body.description,\n      release_year: req.body.release_year,\n      genre: req.body.genre\n    })\n\n    movie.save(function (error, movie) {\n      if (error) { console.log(error); }\n      res.send(movie)\n    })\n  })\n}\n```", "```js\nconst mongoose = require('mongoose')\nconst Schema = mongoose.Schema\nconst RatingSchema = new Schema({\n movie_id: String,\n user_id: String,\n rate: Number\n})\n\nconst Rating = mongoose.model(\"Rating\", RatingSchema)\nmodule.exports = Rating\n```", "```js\nconst Movie = require(\"../models/Movie\");\nconst Rating = require(\"../models/Rating\");\n```"]