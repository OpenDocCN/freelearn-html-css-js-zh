- en: Chapter 4. jQueryMX
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 jQueryMX
- en: jQueryMX is a collection of jQuery libraries that provides functionality necessary
    to implement and organize large JavaScript applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: jQueryMX 是一组 jQuery 库，提供了实现和组织大型 JavaScript 应用程序所需的功能。
- en: It provides classical inheritance simulation, model-view-controller layers to
    provide logically separated codebase. It also provides useful DOM helpers, custom
    events, and language helpers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了经典的继承模拟，模型-视图-控制器层以提供逻辑上分离的代码库。它还提供了有用的 DOM 辅助工具、自定义事件和语言辅助工具。
- en: In this chapter we will go through the most common or most interesting ones.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍最常见或最有趣的例子。
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the full plugins list go to [http://javascriptmvc.com/docs.html#!jquerymx](http://javascriptmvc.com/docs.html#!jquerymx).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取完整的插件列表，请访问 [http://javascriptmvc.com/docs.html#!jquerymx](http://javascriptmvc.com/docs.html#!jquerymx)。
- en: We use the existing `Todo` application folder structure to play around with
    jQueryMX plugins.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用现有的 `Todo` 应用程序文件夹结构来尝试 jQueryMX 插件。
- en: 'In the `Todo` folder create a `jquerymx_playground` folder with two files using
    the following code snippet:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Todo` 文件夹中创建一个 `jquerymx_playground` 文件夹，包含两个文件，使用以下代码片段：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When a code snippet is indicated as run in the console it means paste and execute
    the example in Google Chrome Console on the opened index.html page. We can use
    any web browser console such as Firebug, however, Google Chrome (and Safari) seem
    to be among the best at the moment and have a very handy code complementation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当代码片段指示在控制台中运行时，意味着将示例粘贴并执行在打开的 index.html 页面上的 Google Chrome 控制台。我们可以使用任何网络浏览器控制台，如
    Firebug，然而，目前 Google Chrome（和 Safari）似乎是最好的，并且具有非常方便的代码补全功能。
- en: $.Class
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: $.Class
- en: '$.Class provides classical inheritance simulation based on John Resig''s *Simple
    JavaScript Inheritance* found at [http://ejohn.org/blog/simple-javascript-inheritance/](http://ejohn.org/blog/     simple-javascript-inheritance/).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '$.Class 提供了基于 John Resig 的 *Simple JavaScript Inheritance* 的经典继承模拟，该模拟可在 [http://ejohn.org/blog/simple-javascript-inheritance/](http://ejohn.org/blog/     simple-javascript-inheritance/) 找到。'
- en: Tip
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The class signature is `$.Class( [NAME , STATIC,] PROTOTYPE ) -> Class`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 类签名是 `$.Class( [NAME , STATIC,] PROTOTYPE ) -> Class`。
- en: The `class` method is available to all class instances whereas the `instance`
    method is available only to a particular instance.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`class` 方法对所有类实例都可用，而 `instance` 方法仅对特定实例可用。'
- en: 'Let''s write some examples in the file `jquerymx_playground_0.js`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在文件 `jquerymx_playground_0.js` 中编写一些示例：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the console we can see that classes are created. Lets create some instances
    as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中，我们可以看到类已被创建。让我们按照以下方式创建一些实例：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can execute instance methods as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下方式执行实例方法：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the following sections, let's break down the code and see what happened here.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，让我们分解代码并看看这里发生了什么。
- en: The first parameter
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一个参数
- en: Using `$.Class` we created a new class with the name `Account` passing the string
    `Bank.Account` as a first parameter. By using the dot notation we created a namespace
    `Bank`. This is why we created a new instance of the class `Account` we called
    `Bank.Account`. In this case `Bank` is just an empty object to help us create
    nice and tidy application object structure.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `$.Class`，我们创建了一个名为 `Account` 的新类，将字符串 `Bank.Account` 作为第一个参数传递。通过使用点表示法，我们创建了一个命名空间
    `Bank`。这就是为什么我们创建了一个名为 `Bank.Account` 的 `Account` 类的新实例。在这种情况下，`Bank` 只是一个空对象，帮助我们创建整洁的应用程序对象结构。
- en: An alternative namespace, for example, could *CompanyName.Product.SomeClass*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以有一个替代命名空间，如 `CompanyName.Product.SomeClass`。
- en: The second parameter
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二个参数
- en: As the second parameter we passed object with properties, which are class properties
    shared with all classes instances.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个参数，我们传递了一个具有属性的对象，这些属性是所有类实例共享的类属性。
- en: 'In our case class method `getType` from the `Account` class is available in
    the `SavingAccount` class. We can thus type the following in the console:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，`Account` 类的 `getType` 类方法在 `SavingAccount` 类中可用。因此，我们可以在控制台中输入以下内容：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The third parameter
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三个参数
- en: 'As the third parameter we passed an object with properties, which are instance
    properties shared with all instances. We thus type the following command in the
    console:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第三个参数，我们传递了一个具有属性的对象，这些属性是所有实例共享的实例属性。因此，我们在控制台中输入以下命令：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Method override
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法重写
- en: In the `getType` instance method example, we can see how to override methods
    in the children objects.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `getType` 实例方法示例中，我们可以看到如何在子对象中重写方法。
- en: 'In `SavingAccount` we override the `getType` method by adding an additional
    `Hello` string to the ancestor method of the same name, and call ancestor method
    using the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在`SavingAccount`中，我们通过向同名祖先方法添加额外的`Hello`字符串来覆盖`getType`方法，并使用以下方式调用祖先方法：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In case we don''t want to use the same name, we can use the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不希望使用相同的名称，可以使用以下：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Life cycle
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生命周期
- en: In both class and instance we can use the predefined method `setup` and `init`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在类和实例中，我们都可以使用预定义的方法`setup`和`init`。
- en: If it exists it is always called, so there is no need to call it manually.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它存在，它总是会被调用，因此没有必要手动调用它。
- en: The `setup` method is called first, then the `init` method. In most cases there
    is no need to use the `setup` method.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`setup`方法首先被调用，然后是`init`方法。在大多数情况下，不需要使用`setup`方法。'
- en: $.Model
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: $.Model
- en: $.Model is the application data layer. It provides an easy way to connect to
    the services that provide RESTful APIs, listen to data changes, and bind HTML
    elements to models, deferrers, and validations.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: $.Model是应用程序数据层。它提供了一种简单的方法来连接提供RESTful API的服务，监听数据变化，并将HTML元素绑定到模型、延迟器和验证。
- en: $.Model is very handy; we don't need to manually write XHR calls using jQuery's
    Ajax method for instance. We can map our backend API using $.Model and then use
    its methods to pull/push data to the server.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: $.Model非常方便；我们不需要手动使用jQuery的Ajax方法编写XHR调用。我们可以使用$.Model映射我们的后端API，然后使用其方法从服务器拉取/推送数据。
- en: We can organize $.Models with a list using `$.Model.List`, which is similar
    to Backbone.js's collections ([http://backbonejs.org/#Collection](http://backbonejs.org/#Collection)).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`$.Model.List`列表来组织$.Models，这与Backbone.js的集合([http://backbonejs.org/#Collection](http://backbonejs.org/#Collection))类似。
- en: 'Let''s write some code in the file `jquerymx_playground_1.js`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在文件`jquerymx_playground_1.js`中编写一些代码：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Lets break down this code and see what happened here:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解这段代码，看看这里发生了什么：
- en: The code starting from `$.Model` is responsible for mapping API to our model.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`$.Model`开始的代码负责将API映射到我们的模型。
- en: The lines starting with `$.fixtures` are responsible for imitating server responses.
    Fixtures are very helpful when we need to start development without the web server
    API being ready or available.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以`$.fixtures`开头的行负责模拟服务器响应。当我们需要在没有准备好或不可用的Web服务器API的情况下开始开发时，固定值非常有用。
- en: The `bind` method in the `model` class is responsible for binding model methods
    `update` and `create`. We can try using them to see how they work from the web
    browser console by executing these methods on the instance of `AccountModel`.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model`类中的`bind`方法负责绑定模型方法`update`和`create`。我们可以尝试使用它们，通过在`AccountModel`实例上执行这些方法来查看它们在浏览器控制台中的工作方式。'
- en: $.View
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: $.View
- en: $.View is a client-side template solution. It populates HTML templates with
    data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: $.View是一个客户端模板解决方案。它使用数据填充HTML模板。
- en: 'It comes with four pre-packaged template engines, which can be downloaded from
    the following websites:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 它包含四个预包装的模板引擎，可以从以下网站下载：
- en: '**EJS**: [http://embeddedjs.com](http://embeddedjs.com) (default one created
    by JMVC team)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EJS**：[http://embeddedjs.com](http://embeddedjs.com)（由JMVC团队创建的默认模板）'
- en: '**Jaml**: [http://javascriptmvc.com/docs.html#!Jaml](http://javascriptmvc.com/docs.html#!Jaml)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jaml**：[http://javascriptmvc.com/docs.html#!Jaml](http://javascriptmvc.com/docs.html#!Jaml)'
- en: '**Micro**: [http://javascriptmvc.com/docs.html#!Micro](http://javascriptmvc.com/docs.html#!Micro)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Micro**：[http://javascriptmvc.com/docs.html#!Micro](http://javascriptmvc.com/docs.html#!Micro)'
- en: '**jQuery** **templates**: [http://api.jquery.com/category/plugins/templates](http://api.jquery.com/category/plugins/templates)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jQuery** **模板**：[http://api.jquery.com/category/plugins/templates](http://api.jquery.com/category/plugins/templates)'
- en: It's easy to extend it by using `$.View.register`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`$.View.register`很容易扩展它。
- en: Templates can be embedded in the HTML documents or loaded synchronously or asynchronously
    from external files. $.View supports template caching and bundling in the production
    builds.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 模板可以嵌入到HTML文档中，或者从外部文件同步或异步加载。$.View支持生产构建中的模板缓存和打包。
- en: Embedded
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌入
- en: 'Templates are embedded in the HTML documents as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 模板如下嵌入到HTML文档中：
- en: 'Let''s copy the following code into `index.html` file:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将以下代码复制到`index.html`文件中：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Also, copy the following code into file `jquerymx_playground_2.js`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以将以下代码复制到文件`jquerymx_playground_2.js`中：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the console, type the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中，输入以下内容：
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As a result, the following DOM node should be created:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，应该创建以下DOM节点：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: External
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 外部
- en: 'This method of using templates is the most common one, since it allows for
    better organization of the project file''s structure:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这种使用模板的方法是最常见的，因为它允许更好地组织项目文件的结构：
- en: 'Create a file `message.ejs` and copy the previous template into it. The file
    content should look as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`message.ejs`的文件，并将之前的模板复制到其中。文件内容应如下所示：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Type the following in the console:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中输入以下内容：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The object with the property message is passed into the HTML method which uses
    `message.ejs` file to render the text "Awesome" in place of `<%= message %>` and
    then append it into the body DOM node.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 具有message属性的object被传递到HTML方法中，该方法使用`message.ejs`文件将文本"Awesome"渲染到`<%= message
    %>`的位置，并将其附加到body DOM节点中。
- en: The result should be the same as in the embedded one.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该与内嵌的结果相同。
- en: Sub-templates
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 子模板
- en: 'Inside a template we can embed another template, as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在模板内部我们可以嵌入另一个模板，如下所示：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: $.Controller
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: $.Controller
- en: The `$.Controller` plugin helps to create an organized, memory leak-free JavaScript
    code.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Controller`插件帮助创建一个有组织、无内存泄漏的JavaScript代码。'
- en: 'A great example of how to use `$.Controller` is the `Todos` controller from
    [Chapter 1](ch01.html "Chapter 1. Getting Started with JavaScriptMVC"), *Getting
    Started with JavaScriptMVC*, is as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`$.Controller`的一个很好的例子是来自[第1章](ch01.html "第1章. 使用JavaScriptMVC入门")的`Todos`控制器，*使用JavaScriptMVC入门*，如下所示：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: DOM helpers
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DOM助手
- en: DOM helpers extensions add a set of useful plugins for the DOM. They are described
    in the following sections.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: DOM助手扩展为DOM添加了一组有用的插件。它们将在以下章节中描述。
- en: $.cookie
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.cookie
- en: The `$.cookie` plugin contains useful methods to manage cookies.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.cookie`插件包含用于管理cookie的有用方法。'
- en: 'Let''s paste the following code into the `jquerymx_cookie.js` file:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`jquerymx_cookie.js`文件中：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can create a cookie in the console using the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令在控制台中创建一个cookie：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In the resources tab we can see that cookie has been created.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在资源标签中我们可以看到已经创建了cookie。
- en: 'We can get a cookie using it''s cookie name, as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用cookie名称来获取cookie，如下所示：
- en: '[PRE19]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can also delete a cookie using the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用以下命令删除cookie：
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: $.fn.compare
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.fn.compare
- en: The `$.fn.compare` plugin compares two nodes and returns a number describing
    how they are positioned each together.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.fn.compare`插件比较两个节点，并返回一个数字，描述它们相对于彼此的位置。'
- en: 'Let''s paste following code into the `jquerymx_compare.js` file:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`jquerymx_compare.js`文件中：
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the console, run the following command:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, run the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，运行以下命令：
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In the first case we should get `4` and in the second case `2`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种情况下我们应该得到`4`，在第二种情况下得到`2`。
- en: 'Here is what the numbers mean:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这里数字的含义如下：
- en: '`0`: The elements are identical'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`: 元素是相同的'
- en: '`1`: The nodes are in different documents (or one is outside of a document)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`: 节点在不同的文档中（或一个在文档之外）'
- en: '`2`: `strong` precedes `p`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`: `strong`在`p`之前'
- en: '`4`: `p` precedes `strong`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4`: `p`在`strong`之前'
- en: '`8`: `strong` contains `p`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`8`: `strong`包含`p`'
- en: '`16`: `p` contains `strong`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`16`: `p`包含`strong`'
- en: $.fn.selection
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.fn.selection
- en: The `$.fn.selection` plugin sets or gets current text selection on any element.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.fn.selection`插件设置或获取任何元素上的当前文本选择。'
- en: 'Let''s paste the following code into the `jquerymx_selection.js` file:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`jquerymx_selection.js`文件中：
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In the console, run the following command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: It should return `null`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回`null`。
- en: 'Now, select some part of the text and run the command again, it should return
    an object as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，选择文本的一部分并再次运行命令，它应该返回以下对象：
- en: '[PRE26]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To set the selection, use the following command:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置选择，使用以下命令：
- en: '[PRE27]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: $.fn.within
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.fn.within
- en: The `$.fn.within` plugin returns the elements that are within the given position.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.fn.within`插件返回给定位置内的元素。'
- en: 'Let''s paste the following code into the `jquerymx_within.js` file:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`jquerymx_within.js`文件中：
- en: '[PRE28]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In the console, run the following command:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE29]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: It should return an array containing all `p` elements with a position left 30
    px and top 20 px.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回一个包含所有左位置为30 px和上位置为20 px的`p`元素的数组。
- en: $.Range
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.Range
- en: The `$.Range` plugin contains useful methods that operate on text selections
    to support creating, moving, and comparing selections.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Range`插件包含对文本选择进行操作的有用方法，以支持创建、移动和比较选择。'
- en: 'Let''s paste the following code into the `jquerymx_range.js` file:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`jquerymx_range.js`文件中：
- en: '[PRE30]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In the console, run the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE31]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: To get the current range, select some portion of the text and execute the code
    again and compare the returned objects.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取当前范围，选择文本的一部分并再次执行代码，然后比较返回的对象。
- en: 'To get the current selection text, run the following command in the console:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取当前选择文本，请在控制台中运行以下命令：
- en: '[PRE32]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: $.route
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.route
- en: The `$.route` plugin contains useful methods to manage the application state.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.route` 插件包含用于管理应用程序状态的有用方法。'
- en: 'Let''s paste the following code into the `jquerymx_route.js` file:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_route.js` 文件中：
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'At the end of the URL, type the following:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在 URL 的末尾，输入以下内容：
- en: '[PRE34]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Then, type the following command and observe the console output:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入以下命令并观察控制台输出：
- en: '[PRE35]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Another example of routing can be found in [Chapter 1](ch01.html "Chapter 1. Getting
    Started with JavaScriptMVC"), *Getting Started with JavaScriptMVC*, in the `Todo`
    application.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个路由示例可以在 `Todo` 应用程序的 [第 1 章](ch01.html "第 1 章. 使用 JavaScriptMVC 入门") *使用
    JavaScriptMVC 入门* 中找到。
- en: Special events
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特殊事件
- en: Special events extensions add a set of special events plugins.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊事件扩展添加了一组特殊事件插件。
- en: $.Drag and $.Drop
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.Drag 和 $.Drop
- en: The `$.Drag` and `$.Drop` plugins contain the drag and drop events.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Drag` 和 `$.Drop` 插件包含拖放事件。'
- en: 'Let''s paste the following code into the `jquerymx_draganddrop.js` file:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_draganddrop.js` 文件中：
- en: '[PRE36]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Language helpers
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 语言辅助工具
- en: Language helpers are a set of jQuery plugins. They are described in the following
    sections.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 语言辅助工具是一组 jQuery 插件。它们将在以下章节中描述。
- en: $.Object
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.Object
- en: 'The `$.Object` plugin contains the following three useful methods:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Object` 插件包含以下三个有用方法：'
- en: '`same`: It compares two objects'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`same`：它比较两个对象'
- en: '`subset`: It checks if an object is a set of another object'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset`：它检查一个对象是否是另一个对象的集合'
- en: '`subsets`: It returns the subsets of an object'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subsets`：它返回对象的子集'
- en: same
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: same
- en: The `same` method can compare two objects. It supports nested objects. We can
    also specify if the comparison is case sensitive or if we can skip a particular
    property comparison.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`same` 方法可以比较两个对象。它支持嵌套对象。我们还可以指定比较是否区分大小写或是否跳过特定属性的比较。'
- en: 'Let''s paste the following code into the `jquerymx_object.js` file:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_object.js` 文件中：
- en: '[PRE37]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'In the console, run the following command:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE38]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: It should return `false`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回 `false`。
- en: 'Now try to ignore the case:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在尝试忽略大小写：
- en: '[PRE39]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: It should return `true`, since `property_2` and all its children are compared
    with the ignore case flag.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回 `true`，因为 `property_2` 及其所有子项都与忽略大小写标志进行比较。
- en: 'To ignore the case in a particular property we can specify it as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 要忽略特定属性的区分大小写，我们可以指定如下：
- en: '[PRE40]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The result should be `true` as well.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 结果也应该为 `true`。
- en: $.Observe
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.Observe
- en: The `$.Observe` plugin provides an observer pattern for the JavaScript objects
    and arrays.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Observe` 插件为 JavaScript 对象和数组提供观察者模式。'
- en: 'Let''s paste the following code into the `jquerymx_observe.js` file:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_observe.js` 文件中：
- en: '[PRE41]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'In the console, run the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE42]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Next, run the following command:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，运行以下命令：
- en: '[PRE43]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The same number should be displayed.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 应该显示相同的数字。
- en: 'Change the value of the `number` property using the following command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令更改 `number` 属性的值：
- en: '[PRE44]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Since we bound the anonymous function to the `change` event, which is emitted
    when any of the observable object property has changed, `console.log` with all
    passed information, should be displayed.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将匿名函数绑定到 `change` 事件，该事件在任何可观察对象属性发生变化时发出，因此应该显示带有所有传递信息的 `console.log`。
- en: 'Please note that `oData` is a copy of data, so the command:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`oData` 是数据的副本，因此命令：
- en: '[PRE45]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Is different from:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 与以下内容不同：
- en: '[PRE46]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: $.String
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.String
- en: The `$.String` plugin contains useful string methods.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.String` 插件包含有用的字符串方法。'
- en: 'Let''s paste following code into the `jquerymx_string.js` file:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_string.js` 文件中：
- en: '[PRE47]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: deparam
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: deparam
- en: This method converts URL parameters into an object literal.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法将 URL 参数转换为对象字面量。
- en: 'In the console run the following command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE48]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'It should convert string into the following object:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该将字符串转换为以下对象：
- en: '[PRE49]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: $.toJSON
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.toJSON
- en: The `$.toJSON` plugin contains useful object methods.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.toJSON` 插件包含有用的对象方法。'
- en: 'Let''s paste the following code into the `jquerymx_tojson.js` file:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `jquerymx_tojson.js` 文件中：
- en: '[PRE50]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'In the console, run the following command:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE51]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: It should return a JSON representation of a given object.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回给定对象的 JSON 表示形式。
- en: $.Vector
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.Vector
- en: The `$.Vector` plugin contains useful methods to create and operate on vectors.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.Vector` 插件包含用于创建和操作向量的有用方法。'
- en: 'Let''s paste the following code into the `jquerymx_vector.js` file:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将以下代码粘贴到 `jquerymx_vector.js` 文件中：
- en: '[PRE52]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'In the console, run the following command:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中，运行以下命令：
- en: '[PRE53]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: It should return a new `Vector` instance.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该返回一个新的 `Vector` 实例。
- en: Summary
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we learned what jQueryMX plugins have to offer and how we can
    use them to make our day-to-day coding more efficient.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 jQueryMX 插件能提供什么，以及我们如何使用它们来使我们的日常编码更加高效。
- en: In the next chapter we will learn about dependency management tool, StealJS.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习关于依赖管理工具 StealJS。
