["```js\nconst Alexa = require('alexa-sdk');\n```", "```js\nconst helloHandler = {\n    canHandle(handlerInput) {\n        return handlerInput.requestEnvelope.request.type === 'IntentRequest' &&\n            handlerInput.requestEnvelope.request.intent.name === 'hello';\n    },\n    handle(handlerInput) {\n        const speechText = `Hello from Sam's new intent!`;\n\n        return handlerInput.responseBuilder\n            .speak(speechText)\n            .getResponse();\n    }\n};\n```", "```js\nexports.handler = Alexa.SkillBuilders.custom()\n    .addRequestHandlers(\n        helloHandler)\n    .lambda();\n```", "```js\nconst Alexa = require('alexa-sdk');\n\nexports.handler = Alexa.SkillBuilders.custom()\n    .addRequestHandlers()\n    .lambda();\n```", "```js\nconst LaunchRequestHandler = {\n    canHandle(handlerInput) {\n        return handlerInput.requestEnvelope.request.type === 'LaunchRequest';\n    },\n    handle(handlerInput) {\n        const speechText = `Hi there, I'm Car Helper. You can ask me to suggest a car for you.`;\n\n        return handlerInput.responseBuilder\n            .speak(speechText)\n            .reprompt(speechText)\n            .getResponse();\n    }\n};\n```", "```js\nconst WhichCarHandler = {\n    canHandle(handlerInput) {\n        return handlerInput.requestEnvelope.request.type === 'IntentRequest' &&\n            handlerInput.requestEnvelope.request.intent.name === 'whichCar';\n    },\n    async handle(handlerInput) {}\n}\n```", "```js\nconst slots = handlerInput.requestEnvelope.request.intent.slots;\nconst {size, cost, gears, doors} = slots;\n```", "```js\nif (!size.value || !(size.value === 'large' || size.value === 'medium' || size.value === 'small')) {\n    const slotToElicit = 'size';\n    const speechOutput = 'What size car do you want? Please say either small, medium or large.';\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .addElicitSlotDirective(slotToElicit)\n        .getResponse();\n}\n\nif (!cost.value || !(cost.value === 'luxury' || cost.value === 'value')){\n    console.log('incorrect cost')\n    const slotToElicit = 'cost';\n    const speechOutput = 'Are you looking for a luxury or value car?';\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .addElicitSlotDirective(slotToElicit)\n        .getResponse();\n}\n```", "```js\nif (size.value === 'large' && ( !gears.value || !(gears.value === 'automatic' || gears.value === 'manual') )){\n    // missing or incorrect gears\n    const slotToElicit = 'gears';\n    const speechOutput = 'Do you want an automatic or a manual transmission?';\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .addElicitSlotDirective(slotToElicit)\n        .getResponse();\n}\n\nif (size.value === 'small' && ( !doors.value || !(doors.value == 3 || doors.value == 5) )){\n    // missing or incorrect doors\n    const slotToElicit = 'doors';\n    const speechOutput = 'Do you want 3 or 5 doors?';\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .addElicitSlotDirective(slotToElicit)\n        .getResponse();\n}\n```", "```js\nconst cars = [\n     {name: 'fiat500', size:'small', cost: 'luxury', doors: 3, gears: 'manual'},\n     {name: 'fordFiesta', size:'small', cost: 'luxury', doors: 5, gears: 'manual'},\n     {name: 'hyundaiI10', size:'small', cost: 'value', doors: 3, gears: 'manual'},\n     {name: 'peugeot208', size:'small', cost: 'value', doors: 5, gears: 'manual'},\n\n     {name: 'vauxhallAstra', size:'medium', cost: 'value', doors: 5, gears: 'manual'},\n     {name: 'vwGolf', size:'medium', cost: 'luxury', doors: 5, gears: 'manual'},\n\n     {name: 'scodaOctaviaAuto', size:'large', cost: 'value', doors: 5, gears: 'automatic'},\n     {name: 'fordCmax', size:'large', cost: 'value', doors: 5, gears: 'manual'},\n     {name: 'mercedesEClass', size:'large', cost: 'luxury', doors: 5, gears: 'automatic'},\n     {name: 'vauxhallInsignia', size:'large', cost: 'luxury', doors: 5, gears: 'manual'}\n ];\n```", "```js\n// find the ideal car\nlet chosenCar = cars.filter(car => {\n    return (car.size === size.value && car.cost === cost.value && \n        (gears.value ? car.gears === gears.value : true) && \n        (doors.value ? car.doors == doors.value: true));\n});\n```", "```js\nif (chosenCar.length !== 1) {\n    const speechOutput = `Unfortunately I couldn't find the best car for you. You can say \"suggest a car\" if you want to try again.`;\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .getResponse();\n}\n```", "```js\n{\n    \"make\": \"Vauxhall\",\n    \"model\": \"Astra\",\n    \"rrp\": 16200,\n    \"fuelEcon\": \"44-79 mpg\",\n    \"dimensions\": \"4.258 m L x 1.799 m W x 2.006 m H\",\n    \"NCAPSafetyRating\": \"5 star\",\n    \"cargo\": 370\n}\n```", "```js\nconst AWS = require('aws-sdk');\nvar s3 = new AWS.S3();\n```", "```js\nvar params = {\n    Bucket: YOUR BUCKET NAME, \n    Key: `${chosenCar[0].name}.json`\n};\n\nreturn new Promise((resolve, reject) => {\n    s3.getObject(params, function(err, data) {\n        if (err) { // an error occurred\n            console.log(err, err.stack);\n            reject(handleS3Error(handlerInput));\n        } else { // successful response\n            console.log(data);\n            resolve(handleS3Data(handlerInput, data));\n        }\n    });\n})\n```", "```js\nconst handleS3Error = handlerInput => {\n    const speechOutput = `I've had a problem finding the perfect car for you.`\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .getResponse();\n};\n\nfunction handleS3Data(data){\n    let body = JSON.parse(data.Body);\n    console.log('body= ', body);\n    let { make, model, rrp, fuelEcon, dimensions, NCAPSafetyRating, cargo} = body;\n    let speech = `I think that a ${make} ${model} would be a good car for you. \n    They're available from ${rrp} pounds, get ${fuelEcon} and have a ${cargo} litre boot.`;\n    return handlerInput.responseBuilder\n        .speak(speechOutput)\n        .getResponse();\n}\n```", "```js\n\"slots\": {\n    \"size\": null,\n    \"cost\": null,\n    \"gears\": null,\n    \"doors\": null\n},\n\"name\": \"whichCar\"\n```", "```js\n\"slots\": {\n    \"size\": { \"value\": \"large\"},\n    \"cost\": { \"value\": \"luxury\"},\n    \"gears\": { \"value\": \"automatic\"},\n    \"doors\": { \"value\": null}\n},\n```"]