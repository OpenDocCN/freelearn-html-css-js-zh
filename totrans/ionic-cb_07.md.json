["```js\n$ ionic start MyCamera blank\n$ cd MyCamera\n```", "```js\n$ ionic plugin add cordova-plugin-camera\n$ npm install --save @ionic-native/camera\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Camera\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-row class=\"center\">\n    <ion-col width-50>\n      <button ion-button (click)=\"getPicture(1)\">Show Camera</ button>\n    </ion-col>\n    <ion-col width-50>\n      <button ion-button (click)=\"getPicture(0)\">Show Album</ button>\n    </ion-col>\n  </ion-row>\n  <ion-item class=\"no-border\">\n    <ion-label>Return image file URI</ion-label>\n    <ion-toggle energized [(ngModel)]=\"useURI\">\n    </ion-toggle>\n  </ion-item>\n  <ion-card>\n    <img [src]=\"imageData\" *ngIf=\"imageData\" />\n    <ion-card-content>\n      <ion-card-title>\n        <div *ngIf=\"useURI\">\n          Using URI\n        </div>\n        <div *ngIf=\"!useURI\">\n          Using Base64\n        </div>\n      </ion-card-title>\n      <p *ngIf=\"useURI\">\n        Your URI is {{ imageData }}\n      </p>\n      <p *ngIf=\"!useURI\">\n        Your Base64 image has {{ (imageData + '').length }} bytes\n      </p>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component, Input } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Camera } from '@ionic-native/camera';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public imageData: string;\n  @Input('useURI') useURI: Boolean = true;\n  constructor(public navCtrl: NavController, public camera:Camera) {\n\n  }\n\n  getPicture(sourceType) {\n    this.camera.getPicture({\n      quality: 50,\n      allowEdit: true,\n      encodingType: this.camera.EncodingType.JPEG,\n      saveToPhotoAlbum: false,\n      destinationType: this.useURI ? this.camera.DestinationType.\n        FILE_URI : this.camera.DestinationType.DATA_URL,\n      targetWidth: 800,\n      targetHeight: 800,\n      sourceType: sourceType\n    }).then((imageData) => {\n      if (this.useURI) {\n        this.imageData = imageData;\n      } else {\n        this.imageData = \"data:image/jpeg;base64,\" + imageData;\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n```", "```js\npage-home {\n    center {\n        text-align: center;\n    }\n    .no-border .item-inner {\n        border-bottom: 0;\n    }\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Camera } from '@ionic-native/camera';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Camera,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic cordova run ios\n```", "```js\n$ ionic cordova run android \n```", "```js\n<button ion-buton (click)=\"getPicture(1)\">Show Camera</button>\n<button ion-buton (click)=\"getPicture(1)\">Show Camera</button>\n\n```", "```js\n<img [src]=\"imageData\" *ngIf=\"imageData\" /> \n```", "```js\n<ion-toggle energized [(ngModel)]=\"useURI\"></ion-toggle> \n```", "```js\n@Input('useURI') useURI: Boolean = true; \n```", "```js\nCamera.getPicture({ \n    quality: 50, \n    allowEdit: true, \n    encodingType: Camera.EncodingType.JPEG, \n    saveToPhotoAlbum: false, \n    destinationType: this.useURI ? Camera.DestinationType.FILE_URI\n     : Camera.DestinationType.DATA_URL, \n    targetWidth: 800, \n    targetHeight: 800, \n    sourceType: sourceType \n}).then((imageData) => { \n    if (this.useURI) { \n      this.imageData = imageData; \n    } else { \n      this.imageData = \"data:image/jpeg;base64,\" + imageData; \n    } \n}, (err) => { \n    console.log(err); \n}); \n```", "```js\n$ ionic start LinkSocialShare blank\n$ cd LinkSocialShare\n```", "```js\n$ ionic plugin add cordova-plugin-x-socialsharing\n$ npm install --save @ionic-native/social-sharing\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Home\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-card>\n    <ion-item>\n      <h2 #messageSubject>Ionic Developer</h2>\n      <p>May 5, 2016</p>\n    </ion-item>\n    <img src=\"img/600x390\">\n    <ion-card-content>\n      <p #messageBody>Wow Ionic is so awesome. I gotta share this to other people.</p>\n    </ion-card-content>\n    <ion-row>\n      <ion-col>\n        <button ion-button color=\"primary\" clear small icon-left>\n          <ion-icon name=\"thumbs-up\"></ion-icon>\n          <div>12 Likes</div>\n        </button>\n      </ion-col>\n      <ion-col>\n        <button ion-button color=\"primary\" clear small icon-left \n        (click)=\"sendShare(messageBody.innerText, \n    messageSubject.innerText,'http://ionicframework.com/docs/v2/')\">\n          <ion-icon name=\"ios-share\"></ion-icon>\n          <div>Share</div>\n        </button>\n      </ion-col>\n      <ion-col center text-center>\n        <ion-note>\n          11h ago\n        </ion-note>\n      </ion-col>\n    </ion-row>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { SocialSharing } from '@ionic-native/social-sharing';\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController, public socialSharing: SocialSharing) {\n\n  }\n\n  sendShare(message, subject, url) {\n    this.socialSharing.share(message, subject, null, url);\n  }\n\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SocialSharing } from '@ionic-native/social-sharing';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    SocialSharing,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic run ios\n$ ionic run android\n```", "```js\n<ion-item> \n  <h2 #messageSubject>Ionic Developer</h2> \n  <p>May 5, 2016</p> \n</ion-item> \n```", "```js\n<ion-card-content> \n  <p #messageBody>Wow Ionic 2 is so awesome. I gotta share this to other people.</p> \n</ion-card-content> \n```", "```js\n<button ion-button color=\"primary\" clear small icon-left \n          (click)=\"sendShare(messageBody.innerText,\n           messageSubject.innerText, \n           'http://ionicframework.com/docs/v2/')\">\n```", "```js\nimport { SocialSharing } from '@ionic-native/social-sharing';\n```", "```js\nsendShare(message, subject, url) { \n  SocialSharing.share(message, subject, null, url); \n} \n```", "```js\n$ ionic start Notifications blank\n$ cd Notifications\n```", "```js\n$ ionic cordova plugin add cordova-plugin-local-notification\n$ npm install --save @ionic-native/local-notifications\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Local Notifications\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-item padding>\n    <ion-label color=\"primary\" stacked>Notification Message</ion-label>\n    <ion-input placeholder=\"Enter Notification Text here\" [(ngModel)]=\"message\"></ion-input>\n  </ion-item>\n  <button full ion-button color=\"primary\" (click)=\"showNotification('now')\">Show Notification</button>\n  <ion-item padding>\n    <ion-label>Time in seconds</ion-label>\n    <ion-datetime displayFormat=\"ss Second\" placeholder=\"\" [(ngModel)]=\"time\"></ion-datetime>\n  </ion-item>\n  <button full ion-button color=\"primary\" (click)=\"showNotification('future')\">Schedule a Notification</button>\n  <button full ion-button color=\"primary\" (click)=\"clearNotifications()\">Clear all Notifications</button>\n</ion-content>\n\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  notifications:Array<any> = [];\n  id: number = 1;\n  message:string;\n  time:number;\n  constructor(public navCtrl: NavController,\n    private localNotifications: LocalNotifications) {\n  }\n\n  showNotification(type) {\n    if(type === 'now') {\n      this.localNotifications.schedule({\n        id: this.id,\n        text: this.message,\n      });\n    } else {\n      this.localNotifications.schedule({\n        id: this.id,\n        text: this.message,\n        at: new Date(new Date().getTime() + this.time * 100),\n      });\n    }\n    this.id++;\n  }\n\n  clearNotifications() {\n    this.localNotifications.clearAll();\n  }\n\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { LocalNotifications } from '@ionic-native/local-notifications';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    LocalNotifications,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic run ios\n$ ionic run android\n```", "```js\n<ion-content padding>\n  <ion-item padding>\n    <ion-label color=\"primary\" stacked>Notification Message</ion-label>\n    <ion-input placeholder=\"Enter Notification Text here\" [(ngModel)]=\"message\"></ion-input>\n  </ion-item>\n  <button full ion-button color=\"primary\" (click)=\"showNotification('now')\">Show Notification</button>\n  <ion-item padding>\n    <ion-label>Time in seconds</ion-label>\n    <ion-datetime displayFormat=\"ss Second\" placeholder=\"\" [(ngModel)]=\"time\"></ion-datetime>\n  </ion-item>\n  <button full ion-button color=\"primary\" (click)=\"showNotification('future')\">Schedule a Notification</button>\n  <button full ion-button color=\"primary\" (click)=\"clearNotifications()\">Clear all Notifications</button>\n</ion-content> \n```", "```js\nimport { LocalNotifications } from '@ionic-native/local-notifications';\n```", "```js\nshowNotification(type) {\n    if(type === 'now') {\n      this.localNotifications.schedule({\n        id: this.id,\n        text: this.message,\n      });\n    } else {\n      this.localNotifications.schedule({\n        id: this.id,\n        text: this.message,\n        at: new Date(new Date().getTime() + this.time * 100),\n      });\n    }\n    this.id++;\n  }\n```", "```js\n$ ionic start FingerAuth blank\n$ cd FingerAuth\n```", "```js\n$ ionic cordova plugin add cordova-plugin-fingerprint-aio\n$ npm install --save @ionic-native/fingerprint-aio\n```", "```js\n<ion-content padding>\n  <h1 padding>Secrets</h1>\n  <p *ngIf=\"!isAvailable\">This Device doesn't have Fingerprint Sensor</p>\n  <p *ngIf=\"isAvailable && quote\">{{quote.joke}}</p>\n  <button id=\"reveal-button\" color=\"primary\" *ngIf=\"!!isAvailable\" ion-button round (click)=\"authenticate()\">Reveal a Secret</button>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController, Platform } from 'ionic-angular';\nimport { HttpClient } from '@angular/common/http';\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  quote:any = {};\n  isAvailable: Boolean;\n  constructor(public navCtrl: NavController, \n    private faio: FingerprintAIO,\n    private http: HttpClient,\n    private platform: Platform) {\n\n  }\n\n  ionViewDidLoad() {\n    this.checkAvailablity();\n  }\n\n  checkAvailablity() {\n    this.platform.ready()\n    .then(()=> {\n      this.faio.isAvailable().then((value)=> {\n        console.log(value);\n        this.isAvailable = true\n      }).catch(() => {\n        this.isAvailable = false;\n      });\n    });\n  }\n\n  authenticate() {\n    this.faio.show({\n      clientId: 'Ionic Fingerprint Auth',\n      clientSecret: 'password', //Only necessary for Android\n      localizedFallbackTitle: 'Use Pin', //Only for iOS\n      localizedReason: 'Please authenticate' //Only for iOS\n    })\n    .then((result: any) => {\n      this.reveal();\n    });\n  }\n\n  reveal() {\n    const url = \"http://api.icndb.com/jokes/random/\";\n    this.http.get(url)\n    .subscribe((data:any) => {\n      this.quote = data.value;\n    });\n  }\n\n}\n```", "```js\npage-home {\n    ion-content {\n        .scroll-content {\n            text-align:center;\n            background-color: black;\n            color:white;\n\n            #reveal-button {\n                height:200px;\n                width:200px;\n                border-radius:100%;\n            }\n        }\n    }\n\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    FingerprintAIO,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic cordova run ios\n$ ionic cordova run android\n```", "```js\n<ion-content padding>\n  <h1 padding>Secrets</h1>\n  <p *ngIf=\"!isAvailable\">This Device doesn't have Fingerprint Sensor</p>\n  <p *ngIf=\"isAvailable && quote\">{{quote.joke}}</p>\n  <button id=\"reveal-button\" color=\"primary\" *ngIf=\"!!isAvailable\" ion-button round (click)=\"authenticate()\">Reveal a Secret</button>\n</ion-content>\n```", "```js\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio'; \n```", "```js\n  authenticate() {\n    this.faio.show({\n      clientId: 'Ionic Fingerprint Auth',\n      clientSecret: 'password', //Only necessary for Android\n      localizedFallbackTitle: 'Use Pin', //Only for iOS\n      localizedReason: 'Please authenticate' //Only for iOS\n    })\n    .then((result: any) => {\n      this.reveal();\n    });\n  }\n```", "```js\n$ ionic start MediaPlayer blank\n$ cd MediaPlayer\n```", "```js\n$ ionic cordova plugin add cordova-plugin-music-controls\n$ npm install --save @ionic-native/music-controls\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Music Player\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    <ion-item> \n      <ion-thumbnail item-left>\n        <img src=\"img/{{track.art}}\">\n      </ion-thumbnail>\n      <div item-content style=\"width:100%\">\n        <p><strong>{{track.title}}</strong> ⚬ \n        <em>{{track.artist}}</em></p>\n      </div>\n    </ion-item>\n\n    <ion-row id=\"music-controls\">\n      <ion-col (click)=\"play()\"><ion-icon name=\"play\"></ion-icon></ion-col>\n      <ion-col (click)=\"pause()\"><ion-icon name=\"pause\"></ion-icon></ion-col>\n    </ion-row>\n</ion-content> \n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { MusicControls } from '@ionic-native/music-controls';\nimport { AudioProvider} from '../../services/audio-service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  track = {\n    src: 'https://ia801609.us.archive.org/16/items/nusratcollection_20170414_0953/Man%20Atkiya%20Beparwah%20De%20Naal%20Nusrat%20Fateh%20Ali%20Khan.mp3',\n    artist: 'Nusrat Fateh Ali Khan',\n    title: 'Man Atkiya Beparwah De Naal',\n    art: 'https://ia801307.us.archive.org/31/items/mbid-42764450-04e5-459e-b022-00847fc8fb94/mbid-42764450-04e5-459e-b022-00847fc8fb94-12391862253_thumb250.jpg',\n    preload: 'metadata' // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off\n  };\n\n  constructor(public navCtrl: NavController, public musicControls:MusicControls,\n  public audioProvider: AudioProvider) {}\n\n  play() {\n    this.audioProvider.play(this.track.src);\n    this.createControls();\n  }\n\n  pause() {\n    this.audioProvider.pause();\n    this.musicControls.updateIsPlaying(false);\n  }\n\n  createControls() {\n    this.musicControls.create({\n      track : this.track.title,\n      artist : this.track.artist, \n      cover : this.track.art, \n      isPlaying : true, \n      hasPrev : false,\n      hasNext : false,\n      dismissable : true, \n    });\n\n    this.musicControls.subscribe().subscribe(action => {\n      const message = JSON.parse(action).message;\n      switch(message) {\n        case 'music-controls-play':\n          this.play();\n        break;\n\n        case 'music-controls-pause':\n          this.pause();\n        break;\n      }\n    });\n\n    this.musicControls.listen();\n  }\n}\n```", "```js\npage-home {\n    #music-controls {\n        text-align:center;\n        font-size: 2.5rem;\n    }\n}\n```", "```js\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AudioProvider {\n    track:any;\n    isPaused: Boolean = false;\n    url;\n    play(url) {\n        if(this.url !== url) {\n            this.url = url;\n            this.track = new Audio(url);\n            this.track.load();\n        }\n        this.track.play();\n    }\n    pause() {\n        this.track.pause();\n        this.isPaused = true;\n    }\n}\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { MusicControls } from '@ionic-native/music-controls';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { AudioProvider} from '../services/audio-service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    MusicControls,\n    AudioProvider,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n$ ionic cordova run ios\n$ ionic cordova run android\n```", "```js\n<ion-content padding>\n    <ion-item> \n      <ion-thumbnail item-left>\n        <img src=\"img/{{track.art}}\">\n      </ion-thumbnail>\n      <div item-content style=\"width:100%\">\n        <p><strong>{{track.title}}</strong> ⚬ <em>{{track.artist}}</em>\n      </p>\n      </div>\n    </ion-item>\n\n    <ion-row id=\"music-controls\">\n      <ion-col (click)=\"play()\"><ion-icon name=\"play\"></ion-icon></ion-col>\n      <ion-col (click)=\"pause()\"><ion-icon name=\"pause\"></ion-icon></ion-col>\n    </ion-row>\n</ion-content>\n```", "```js\n createControls() {\n    this.musicControls.create({\n      track : this.track.title,\n      artist : this.track.artist, \n      cover : this.track.art, \n      isPlaying : true, \n      hasPrev : false,\n      hasNext : false,\n      dismissable : true, \n    });\n\n    this.musicControls.subscribe().subscribe(action => {\n      const message = JSON.parse(action).message;\n      switch(message) {\n        case 'music-controls-play':\n          this.play();\n        break;\n\n        case 'music-controls-pause':\n          this.pause();\n        break;\n      }\n    });\n\n    this.musicControls.listen();\n  }\n```", "```js\nexport class AudioProvider {\n    track:any;\n    isPaused: Boolean = false;\n    url;\n    play(url) {\n        if(this.url !== url) {\n            this.url = url;\n            this.track = new Audio(url);\n            this.track.load();\n        }\n        this.track.play();\n        this.isPaused = false;\n    }\n    pause() {\n        this.track.pause();\n        this.isPaused = true;\n    }\n\n}\n```", "```js\n    $ ionic start TaxiApp blank\n    $ cd TaxiApp\n```", "```js\n    $ ionic platform remove ios\n    $ ionic platform add ios@3.9.0\n    $ ionic platform add android\n```", "```js\n $ cordova plugin add cordova-plugin-googlemaps --variable \n API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"` \n```", "```js\n$ cordova plugin add cordova-plugin-googlemaps --variable \n API_KEY_FOR_ANDROID=\"key\" --variable API_KEY_FOR_IOS=\"key\"\n```", "```js\n<ion-content [ngClass]=\"{'no-scroll': mapRendered}\">\n  <div id=\"map\">\n    <button ion-button color=\"dark\" (click)=\"getMyLocation()\">PICK ME UP</button>\n  </div>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController, Platform } from 'ionic-angular';\nimport {\n  GoogleMaps,GoogleMap,GoogleMapsEvent,GoogleMapOptions,\n  CameraPosition,LatLng,MarkerOptions,Marker\n} from '@ionic-native/google-maps';\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public map: GoogleMap;\n  public mapRendered: Boolean = false;\n\n  constructor(public navCtrl: NavController, public platform: Platform) {\n    this.platform.ready().then(() => {\n      this.showMap();\n    });\n  }\n\n  showMap() {\n    let mapOptions: GoogleMapOptions = {\n      camera: {\n        target: {\n          lat: 43.0741904,\n          lng: -89.3809802\n        },\n        zoom: 18,\n        tilt: 30\n      }\n    };\n\n    this.map = GoogleMaps.create('map', mapOptions);\n    this.map.one(GoogleMapsEvent.MAP_READY)\n    .then(() => {\n      console.log('Map is ready!');\n      this.mapRendered = true;\n    });\n  }\n\n  getMyLocation() {\n    this.map.getMyLocation().then((location) => {\n      var msg = [\"I am here:\\n\",\n        \"latitude:\" + location.latLng.lat,\n        \"longitude:\" + location.latLng.lng].join(\"\\n\");\n      let position = {\n        target: location.latLng,\n        zoom: 15\n      };\n      this.map.moveCamera(position);\n      let markerOptions: MarkerOptions = {\n        'position': location.latLng,\n        'title': msg\n      };\n      this.map.addMarker(markerOptions).then((marker:Marker) => {\n        marker.showInfoWindow();\n      });\n    });\n  }\n}\n```", "```js\nion-app._gmaps_cdv_ .nav-decor{\n    background-color: transparent !important;\n}\n\npage-home {\n    text-align: center;\n    #map {\n        height: 100%;\n        z-index: 9999;\n    }\n    .no-scroll {\n        .scroll-content {\n            overflow-y: hidden;\n        }\n    }\n}\n```", "```js\n$ ionic cordova run ios\n$ ionic cordova run android\n```", "```js\nimport {\n  GoogleMaps,GoogleMap,GoogleMapsEvent,GoogleMapOptions,\n  CameraPosition,LatLng,MarkerOptions,Marker\n} from '@ionic-native/google-maps';\n```", "```js\n\"*-Info.plist\": { \n  \"parents\": { \n    \"Google Maps API Key\": [ \n      { \n        \"xml\": \"<string>YOUR_IOS_API_KEY_IS_HERE</string>\", \n        \"count\": 1 \n      } \n    ] \n  } \n} \n```", "```js\n\"plugin.google.maps\": { \n  \"API_KEY_FOR_IOS\": \"YOUR_IOS_API_KEY_IS_HERE\", \n  \"PACKAGE_NAME\": \"com.ionicframework.starter\" \n} \n```"]