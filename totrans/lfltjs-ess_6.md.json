["```js\nvar result = SELECT * from MyTable;\ndocument.getElementById['results'].innerHTML= result;\n```", "```js\nfunction showResults(){document.getElementById['results'].innerHTML= result;};\nvar result = query(SELECT * from MyTable, showResults);\ndoWhateverElseYouNeed();\n```", "```js\nrequire('http').createServer(function (req, res) {\n   if ('/' == req.url){\n         res.writeHead(200, { 'Content-Type': 'text/html' });\n   require('fs').createReadStream('leafletessentials.html') .pipe(res);\n        } \n}).listen(3000);\n```", "```js\n require('http').createServer(function (req, res) {\n   if ('/' == req.url){\n         res.writeHead(200, { 'Content-Type': 'text/html' });\n   require('fs').createReadStream('leafletessentialsAjax.html') .pipe(res);\n        } else if ('/getpoints'==req.url){\n         res.writeHead(200, { 'Content-Type': 'application/json' });\n         res.end(JSON.stringify([{\"lat\":35,\"long\":-106}]));\n   } else {\n         res.writeHead(404);\n         res.end('The page you requested '+req.url+' was not found');\n   }\n}).listen(3000);\n```", "```js\nmap.on('click',function(){\nvar xhReq = new XMLHttpRequest();\nxhReq.open(\"GET\", \"getpoints\", true); \nxhReq.send(); \nvar serverResponse = xhReq.responseText;\nvar d=JSON.parse(serverResponse);\nL.marker([d[0].lat,d[0].long]).addTo(map).bindPopup(\"Added via AJAX call to Node.js\").openPopup();\n});\n```", "```js\nvar lat=Math.random()*(36-35)+35;\nvar lon=Math.random()*(-107+106)-106;\nres.end(JSON.stringify([{\"lat\":lat,\"long\":lon}]));\n```", "```js\nnpm install –g connect\n\n```", "```js\n    [{\"lat\":35,\"long\":-106}]\n\n    ```", "```js\n    {\n    \"name\": \"leafletessentials\",\n    \"version\": \"0.0.1\",\n    \"dependencies\": {\"connect\": \"2.21.1\"}\n    }\n    ```", "```js\nvar connect = require('connect')\nvar server = connect();\nserver.use(connect.static(__dirname+ '/www'));\nserver.listen(3000);\n```", "```js\necho '{}' > package.json\nnpm install jade –save\n\n```", "```js\necho '{}' > package.json\nnpm install express –save\n\n```", "```js\n{\n\"name\": \"leafletessentials\",\n\"version\": \"0.0.1\",\n\"dependencies\": {\n   \"express\": \"4.4.5\",\n   \"jade\": \"1.3.1\"\n }\n}\n```", "```js\nnpm install\n\n```", "```js\ndoctype html\nhtml(lang=\"en\")\n   head\n          title= title\nlink(rel='stylesheet', href='http://cdn.leafletjs.com/leaflet- 0.7.2/leaflet.css')\nscript(src=\"img/leaflet.js\")\n   body\n   #map(style='width:'+900+'px;'+'height:'+800+'px')\n   script(type='text/javascript').\nvar map = L.map('map', {center: [35.10418, -106.62987],\tzoom: 9});\nvar base = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png').addTo(map);\nL.marker([35.10418, -106.62987]).addTo(map).bindPopup(\"A Lonely Marker\").openPopup();\nmap.on('click',function(){var xhReq = new XMLHttpRequest();xhReq.open(\"GET\", \"getpoints\", false);xhReq.send(null);var serverResponse = xhReq.responseText;var d=JSON.parse(serverResponse);L.marker ([d[0].lat,d[0].long]).addTo(map).bindPopup (\"Added via AJAX call to Node.js\").openPopup();});\n```", "```js\nvar express=require('express')\nvar app = express();\napp.set('view engine', 'jade');\napp.get('/', function(req,res){\n   res.render('LeafletEssentials',{title:\"Leaflet Essentials\"});\n   \t});\napp.get('/getpoints', function(req,res){\n   res.send([{'lat':35,'long':-106])\n});\nvar server = app.listen(3000);\n```", "```js\npython setup.py install\n\n```", "```js\nfrom pymongo import Connection\nfrom pymongo import GEO2D\ndb=Connection().albuquerque\ndb.publicart.create_index([(\"loc\",GEO2D)])\ndb.publicart.insert({\"loc\":[35.1555,-106.591838],\"name\":\"Almond Blossom/Astronomy\",\"popup\":http://farm8.staticflickr.com/7153/6831137393_fa38634fd7_m.jpg })\n  db.publicart.insert({\"loc\":[35.0931,-106.664177], \"name\":\"Formas Esperando Palabra de Otros Mundos\",\"popup\": \"http://farm3.staticflickr.com/2167/2479129916_0d861b2600.jpg\"})\nprint \" Completed…\"\n```", "```js\n    import cherrypy\n    from pymongo import Connection,GEO2D\n    ```", "```js\n    class mongocherry(object):    \n        def index(self):\n    ```", "```js\n    output =[]\n\n    output.append(\"<HTML><HEAD><TITLE>QUERY MONGODB</TITLE></HEAD><BODY><h1>Query MongoDB</h1><link rel='stylesheet' href='http://cdn.leafletjs.com/leaflet- 0.7.2/leaflet.css' /><style> html, body, #map {padding: 0;margin: 0;height: 100%;}</style></head><body><script src='http://cdn.leafletjs.com/leaflet- 0.7.2/leaflet.js'></script><div id='map'></div><script>var map = L.map('map',{center: [35.10418, -106.62987],zoom: 9});L.tileLayer ('http://{s}.tile.osm.org/{z}/{x}/{y}.png').addTo(map);\")\n    ```", "```js\n    db=Connection().albuquerque\n    for x in db.publicart.find():\n    output.append(\"L.marker([\"+str(x[\"loc\"][0])+\",\"+str(x[\"loc\" ][1])+\"]).addTo(map).bindPopup(\\\"\"+x[\"name\"]+\"<img src='\"+x[\"popup\"]+\"'>\\\");\")\n    ```", "```js\n    output.append('</SCRIPT></BODY></HTML>')\n    i=0\n    html=\"\"\n    while i<len(output):\n       html+=str(output[i])\n       i+=1\n    return html\n    ```", "```js\n    index.exposed = True\n    cherrypy.config.update({'server.socket_host': '127.0.0.1',\n    'server.socket_port': 8000,\n    }) \n    cherrypy.quickstart(mongocherry())\n    ```", "```js\npython mongocherry.py\n\n```", "```js\nimport cherrypy\nfrom pymongo import Connection,GEO2D\nfrom cherrypy import tools\nimport json\n```", "```js\n    class mongocherry(object):\n        @cherrypy.expose\n        def index(self):\n             db=Connection().albuquerque\n             output =[]\n        output.append(\"<HTML><HEAD><TITLE>QUERY MONGODB</TITLE></HEAD><BODY><h1>Query MongoDB</h1><link rel='stylesheet' href='http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css' /><style> html, body, #map {padding: 0;margin: 0;height: 100%;}</style></head><body><script src='http://cdn.leafletjs.com/leaflet- 0.7.2/leaflet.js'></script><div id='map'></div><script>var lat; var lon; var map = L.map('map',{center: [35.10418, - 106.62987],zoom: 9});L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png') .addTo(map);map.on('click',function(e){var a=String(e.latlng).split(\\\",\\\");lat=a[0].split(\\\"(\\\");lon=a [1].split(\\\")\\\");var xhReq = new XMLHttpRequest();var s=\\\"getdata?x=\\\";var s2=String(lat[1]);var s3=\\\"&y=\\\";var s4=String(lon[0]);var url=s.concat(s2,s3,s4); xhReq.open(\\\"GET\\\", url, false); xhReq.send(null); var serverResponse = xhReq.responseText; var d=JSON.parse(serverResponse);L.marker([d[0].lat,d[0].long]) .addTo(map);L.marker([d[1].lat,d[1].long]).addTo(map);L.mar ker([d[2].lat,d[2].long]).addTo(map);});\")\n    ```", "```js\n       output.append(\"</SCRIPT></BODY></HTML>\")\n       i=0\n       html=\"\"\n       while i<len(output):\n             html+=str(output[i])\n             i+=1\n\n      return html \n    ```", "```js\n        @cherrypy.expose\n        @tools.json_out()\n        def getdata(self,x,y):\n       db=Connection().albuquerque\n       data=[]\n       lat=float(x)\n       long=float(y)\n       for doc in db.publicart.find({\"loc\": {\"$near\": [lat, long]}}).limit(3): \n        data.append({'lat':str(doc[\"loc\"][0]),'long':str(doc[\"loc\"][1])})\n      return data\n    ```", "```js\n    cherrypy.config.update({'server.socket_host': '127.0.0.1',\n                             'server.socket_port': 8000,\n                            }) \n    cherrypy.quickstart(mongocherry())\n    ```", "```js\nHtmlElement head = webBrowser1.Document.GetElementsByTagName(\"head\")[0];\nHtmlElement scriptEl = webBrowser1.Document.CreateElement(\"script\");\nIHTMLScriptElement element = (IHTMLScriptElement)scriptEl.DomElement;\nelement.text = \"var mymarker; function addPoints() { mymarker = new L.marker([36.104743, -106.629925]); map.addLayer(mymarker); mymarker.bindPopup('HELLO <br>Added By C#.'); }\";\nhead.AppendChild(scriptEl);\nwebBrowser1.Document.InvokeScript(\"addPoints\");\n```", "```js\nusing MongoDB.Bson;\nusing MongoDB.Driver;\nusing MongoDB.Driver.Linq;\nusing MongoDB.Driver.Builders;\n```", "```js\n    StringBuilder myString = new StringBuilder();\n    myString.Append(\"function addPoints() {\");\n    ```", "```js\n    var client = new MongoClient(\"mongodb://localhost:27017\");\n    var server = client.GetServer();\n    var database = server.GetDatabase(\"albuquerque\");\n    var collection = database.GetCollection(\"publicart\");\n    ```", "```js\n                foreach (var document in collection.FindAll())\n                {\n                    myString.Append(\"L.marker([\" + document[\"loc\"][0] + \",\" + document[\"loc\"][1] + \"]).addTo(map).bindPopup(\\\"\" + document[\"name\"] + \"<br><img src='\" + document[\"popup\"] + \"'>\\\");\" + \"\\r\\n\");\n                }\n    ```", "```js\n                myString.Append(\"}\");\n    ```", "```js\n    HtmlElement head = webBrowser1.Document.GetElementsByTagName(\"body\")[0];\n    HtmlElement scriptElement = webBrowser1.Document.CreateElement(\"script\");\n    IHTMLScriptElement addPointsElement = (IHTMLScriptElement)scriptElement.DomElement;\n    addPointsElement.text = myString.ToString();\n    head.AppendChild(scriptElement);\n    webBrowser1.Document.InvokeScript(\"addPoints\");\n    ```", "```js\n    <style>\n      html, body, #map {\n          padding: 0;\n          margin: 0;\n          height: 100%;\n        }\n    #points.hidden {\n     display: none;\n    }\n    </style>\n    <body>\n    <div id=\"map\"></div>\n    <div id=\"points\"></div>\n\n    ```", "```js\n    map.on('click',function(e){L.marker(e.latlng).addTo(map).bi \n    ndPopup(\"SEARCH LOCATION\").openPopup();\n    var a=String(e.latlng).split(\",\");\n    var lat=a[0].split(\"(\");\n    var lon=a[1].split(\")\");\n    document.getElementById(\"points\").innerHTML = lat[1]+\",\"+lon[0];\n    });\n    ```", "```js\n    string hiddenHTML = webBrowser1.Document.GetElementById(\"points\").InnerHtml;\n    string[] thePoints = hiddenHTML.Split(',');\n    ```", "```js\n    var client = new MongoClient(\"mongodb://localhost:27017\");\n    var server = client.GetServer();\n    var database = server.GetDatabase(\"albuquerque\");\n    var collection = database.GetCollection(\"publicart\");\n    ```", "```js\n    var query = Query.Near(\"loc\", double.Parse(thePoints[0]), double.Parse(thePoints[1]));\n    StringBuilder myLocString = new StringBuilder();\n    myLocString.Append(\"function addLocPoints() {\");\n    ```", "```js\n                foreach (BsonDocument item in collection.Find(query).SetLimit(5))\n                {\n                    BsonElement loc = item.GetElement(\"loc\");\n                    string g = loc.Value.ToString();\n                    string x = g.Trim(new Char[] { '[', ']' });\n                    String[] a = x.Split(',');\n\n                    myLocString.Append(\"L.marker([\" + a[0] + \",\" + a[1] + \"]).addTo(map).bindPopup(\\\"\" + item[\"name\"] + \"<br><img src='\" + item[\"popup\"] + \"'>\\\");\" + \"\\r\\n\");\n                }\n    ```", "```js\n    myLocString.Append(\"}\");\n    HtmlElement head = webBrowser1.Document.GetElementsByTagName(\"body\")[0];\n    HtmlElement scriptElement = webBrowser1.Document.CreateElement(\"script\");\n    IHTMLScriptElement addPointsElement = (IHTMLScriptElement)scriptElement.DomElement;\n    addPointsElement.text = myLocString.ToString();\n    head.AppendChild(scriptElement);\n    webBrowser1.Document.InvokeScript(\"addLocPoints\");\n    ```"]