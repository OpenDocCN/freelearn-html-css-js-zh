["```js\n<script>\n  import { fade } from 'svelte/transition';\n</script>\n<div transition:fade>some text here</div>\n```", "```js\n<script>\n  import { fade, blur } from 'svelte/transition';\n</script>\n<div in:fade out:blur>some text here</div>\n```", "```js\n<div transition:blur>some text here</div>\n```", "```js\n<div in:blur out:blur>some text here</div>\n```", "```js\n<script>\n  import { fly } from 'svelte/transition';\n</script>\n<div transition:fly={{ x: 200, y: 100 }}>Content goes here</div>\n```", "```js\n<script>\n  import { fly } from 'svelte/transition';\n</script>\n<div in:fly={{ x: 200, y: 100 }} out:fly={{ x: -200, y: 50 }}>Content goes here</div>\n```", "```js\n<script>\n  import { fade } from 'svelte/transition';\n</script>\n<div transition:fade=fade transition will start with a 500 ms delay after it is mounted onto the DOM, and the transition will last for 1000 ms.\nOn the other hand, `easing` is a function that is responsible for controlling the pacing of the animation. By adjusting the `easing` function, you can create animations that start slow and end fast, start fast and end slow, or follow a custom pattern, giving you even more control over the look and feel of your animations.\nSvelte comes with a collection of built-in `easing` functions, which can be imported from `svelte/easing`. These `easing` functions can then be applied to transitions, as seen in the following code:\n\n```", "```js\n{#if condition}\n  <div in:fade>some content</div>\n  <div transition:blur>more content</div>\n{/if}\n```", "```js\n{#if condition}\n  <div out:fade>some content</div>\n  <div transition:blur>more content</div>\n{/if}\n```", "```js\n{#if condition}\n  <div in:fade>Element with fade transition</div>\n  <div>Static element without transition</div>\n  <div transition:slide>Element with slide transition</div>\n{/if}\n```", "```js\n{#each items as item (item.id)}\n  <div in:fade out:slide>{item.name}</div>\n{/each}\n```", "```js\n{#if condition}\n  <p transition:blur>paragraph 1</p>\n  {#each items as item (item.id)}\n    <div transition:fade>{item.name}</div>\n  {/each}\n  <p>paragraph 2</p>\n{/if}\n```", "```js\n{#if condition}\n  <div in:fade|global>some text here</div>\n{/if}\n```", "```js\n{#if condition1}\n  <div transition:fade>first div</div>\n  {#if condition2}\n    <div transition:fade>second div</div>\n    <div transition:fade|global>third div</div>\n  {/if}\n{/if}\n```", "```js\n@keyframes example {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(1.75);\n  }\n}\n```", "```js\n<div style=\"animation: example 4s 1s 1;\">Animated element</div>\n```", "```js\ndiv.style.opacity = 0;\n```", "```js\nlet start;\nconst duration = 4000; // 4 seconds\nfunction loop(timestamp) {\n  if (!start) start = timestamp;\n  // get the progress in percentage\n  const progress = (timestamp – start) / duration;\n  // Update the DOM element's styles based on progress\n  if (progress > 1) {\n    div.style.opacity = 0;\n    div.style.transform = 'scale(1.75)';\n  } else {\n    div.style.opacity = 1 – progress;\n    const scale = 1 + progress * 0.75;\n    div.style.transform = `scale(${scale})`;\n    // continue animating, schedule the next loop\n    requestAnimationFrame(loop);\n  }\n}\n// Start the animation\nrequestAnimationFrame(loop);\n```", "```js\n<script>\n  import { fly } from 'svelte/transition';\n</script>\n<div in:fly={{ x: 50, y: 30 }}>Some text here</div>\n```", "```js\n@keyframes fly-in-unique-id {\n  0% {\n    transform: translate(50px, 30px);\n    opacity: 0;\n  }\n  100% {\n    transform: translate(0, 0);\n    opacity: 1;\n  }\n}\n```", "```js\n<script>\n  import { fly } from 'svelte/transition';\n</script>\n<div in:fly={{ x: 50, y: 30, duration: 500, delay: 200 }}>Some text here</div>\n```", "```js\ndiv.style.animation = 'fly-in-unique-id 500ms 200ms 1';\n```", "```js\n\n```"]