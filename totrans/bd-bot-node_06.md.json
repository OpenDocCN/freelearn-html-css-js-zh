["```js\nmkdir slackbot\ncd slackbot\n\n```", "```js\nnpm init\n\n```", "```js\nnpm install --save botkit\n\n```", "```js\n\"engines\": { \n    \"node\": \">=5.6.0\" \n} \n\n```", "```js\nvar Botkit = require('Botkit'); \nvar os = require('os'); \n\nvar controller = Botkit.slackbot({ \n    debug: false, \n}); \n\nvar bot = controller.spawn({ \n    token: \"<SLACK_BOT_TOKEN>\" \n}).startRTM(); \n\ncontroller.hears('hello',['direct_message','direct_mention','mention'],function(bot,message) { \n  bot.reply(message,'Hello there!'); \n}); \n\n```", "```js\ndb.createCollection(\"ReferenceDocuments\")\n\n```", "```js\n{ \n   \"title\": \"Research Planning Checklist\", \n   \"description\": \"This excel sheet provides guidelines for better research plan...\", \n   \"version\": \"1.1\", \n   \"url\": \"<Document URL goes here...>\", \n   \"keywords\": [\"Plan\",\"Research Plan\",\"Checklist\",\"SWOT\"] \n} \n\n```", "```js\n>db.ReferenceDocuments.insert({\n\"title\": \"Research Planning Checklist\",\"description\": \"This excel sheet provides guidelines for better research plan...\",\"version\": \"1.1\",\"url\": \"<Document URL goes here...>\",\"keywords\": [\"Plan\",\"Research Plan\",\"Checklist\",\"SWOT\"] })\n\n```", "```js\n>db.ReferenceDocuments.createIndex({keywords:\"text\"})\n\n```", "```js\ndb.ReferenceDocuments.find({$text:{$search:\"template\"}},{limit:3})\n\n```", "```js\nnpm install mongojs\n\n```", "```js\nvar Botkit = require('Botkit'); \nvar os = require('os'); \n\nvar mongojs = require('mongojs'); \nvar db = mongojs('127.0.0.1:27017/BotDB',['ReferenceDocuments']); \n\nvar controller = Botkit.slackbot({ \n    debug: false \n}); \n\nvar bot = controller.spawn({ \n    token: \"<SLACK_BOT_TOKEN>\" \n}).startRTM(); \n\ncontroller.hears('hello',['direct_message','direct_mention','mention'],function(bot,message) { \n  bot.reply(message,'Hello there!'); \n\n  db.ReferenceDocuments.find({title:\"Newsletter Template\"},function (err, docs) { \n     bot.reply(message,'I have a document with title:'+ docs[0].title); \n  }) \n\n}); \n\n```", "```js\nvar mongojs = require('mongojs'); \nvar db = mongojs('127.0.0.1:27017/BotDB',['ReferenceDocuments']); \n\n```", "```js\ndb.ReferenceDocuments.find({title:\"Newsletter Template\"},function (err, docs) { \n     bot.reply(message,'I have a document with title:'+ docs[0].title); \n  }) \n\n```", "```js\nUse BotDB\ndb.ReferenceDocuments.update(\n { title: \"Competitive analysis using SWOT\"},\n { $set:\n {\n url: \"<YOUR AMAZON S3 URL FOR THIS DOCUMENT>\"\n }\n }\n)\n\n```", "```js\nvar Botkit = require('Botkit'); \nvar os = require('os'); \n\nvar mongojs = require('mongojs'); \nvar db = mongojs('127.0.0.1:27017/BotDB',['ReferenceDocuments']); \n\nvar controller = Botkit.slackbot({ \n    debug: false \n}); \n\nvar bot = controller.spawn({ \n    token: \"<SLACK_BOT_TOKEN>\" \n}).startRTM(); \n\ncontroller.hears('hello',['direct_message','direct_mention','mention'],function(bot,message) { \n  bot.reply(message,'Hello there!'); \n}); \n\ncontroller.hears(['docs','template','research documentation','documents'], \n                 ['direct_message','direct_mention','mention'],function(bot,message) { \n  bot.startConversation(message, askForKeywords); \n}); \n\naskForKeywords = function(response, convo) { \n  convo.ask(\"Pl. type the word or keywords for document search.\", function(response, convo) { \n    convo.say(\"Awesome! Wait for a moment. Will search documents for word(s) *\" + response.text +\"*\"); \n    searchDocuments(response, convo); \n    convo.next(); \n  }); \n} \n\nsearchDocuments = function(response, convo) { \nvar qtext =\"\"\"+response.text+\"\"\";     \n    db.ReferenceDocuments.find({$text:{$search:qtext}},{},{limit:3},function (err, docs) { \n         var attachments = [];   \n         docs.forEach(function(d) {  \n            var attachment= { \n                \"title\": d.title, \n                \"title_link\": d.url, \n                \"text\": d.description, \n                \"color\": '#3AA3E3', \n                \"footer\": \"From Amazon S3 | Version \" +d.version                 \n                };       \n             attachments.push(attachment); \n           }); \n\n        convo.say({ \n            text: '*Document(s):*', \n            attachments: attachments, \n        }) \n    }); \n} \n\ndb.on('error', function (err) { \n    console.log('Database error', err) \n}) \n\ndb.on('connect', function () { \n    console.log('Database connected') \n}) \n\n```", "```js\ncontroller.hears(['docs','template','research documentation','documents'], \n                 ['direct_message','direct_mention','mention'],function(bot,message) { \n  bot.startConversation(message, askForKeywords); \n}); \n\n```", "```js\naskForKeywords = function(response, convo) { \n  convo.ask(\"Pl. type the word or keywords for document search.\", function(response, convo) { \n    convo.say(\"Awesome! Wait for a moment. Will search documents for word(s) *\" + response.text +\"*\"); \n    searchDocuments(response, convo); \n    convo.next(); \n  }); \n} \n\n```", "```js\nsearchDocuments = function(response, convo) { \nvar qtext =\"\"\"+response.text+\"\"\";     \n    db.ReferenceDocuments.find({$text:{$search:qtext}},{},{limit:3},function (err, docs) { \n         var attachments = [];   \n         docs.forEach(function(d) {  \n            var attachment= { \n                \"title\": d.title, \n                \"title_link\": d.url, \n                \"text\": d.description, \n                \"color\": '#3AA3E3', \n                \"footer\": \"From Amazon S3 | Version \" +d.version                 \n                };       \n             attachments.push(attachment); \n           }); \n\n        convo.say({ \n            text: '*Document(s):*', \n            attachments: attachments, \n        }) \n    }); \n} \n\n```"]