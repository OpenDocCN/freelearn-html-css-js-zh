["```js\nvar A = 2;\n```", "```js\n2+3;\n```", "```js\nint age = 20;\nvar flag;\nif (age<18) {\n  flag=true;\n}\nelse {\n  flag=false;\n}\n```", "```js\nvar xyz={};\n```", "```js\nvar studentInfo =  {  age:24, Name:\"Ali\" };\n```", "```js\nfunction greetings() {\n  alert(\"Happy New Year\");\n}\ngreetings();\n```", "```js\nvar abc=function() {\n  return 1;\n};\n\n var xyz=function foo() {\n  return 2;\n};\n```", "```js\nvar f = function f ( function foo() );\n```", "```js\nget=abc[xyz];\nabc[xyz]=set;\nget = abc [1]; // get value at array abc index 1 \n```", "```js\n document.write (\"hello world\");\n```", "```js\nFunction.getvalue(5);\nMath.max(2,3);\n```", "```js\nfunction add(a, b) {\n  b = typeof b !== 'undefined' ?  b : 0; // if b not defined set it to 0\n  return a+b;\n}\n\nadd(10); // returns 10\n```", "```js\nNew myObj();\n```", "```js\n    var x = 10;\n    console.log(eval(\"x * 5\")); //50\n    ```", "```js\n    var abc = 'global scope';\n        function directEval() {\n            'use strict';\n            var abc = 'local scope';\n            console.log(eval('abc')); // local scope\n        }\n    ```", "```js\n    var abc = 'global scope';\n        function indirectEval() {\n            'use strict';\n            var abc = 'local scope';\n            // eval via call()\n            console.log(eval.call(null, 'abc')); // global scope\n            console.log(window.eval('abc')); // global scope\n            console.log((1, eval)('abc')); // global scope\n            // eval with a different name\n            var abceval = eval;\n            console.log(abceval('abc')); // global scope\n            var obj = { eval: eval };\n            console.log(obj.eval('abc')); // global scope\n        }\n    ```", "```js\n9 + 11 = 20\n```", "```js\nA + B\n```", "```js\nA++;\n```", "```js\n++A;\n```", "```js\n<condition> ? <true>: <false>;\n```", "```js\nvar a=2;\na=(2+a)*1/a;// a=2\nconsole.log(a); // prints 2\n```", "```js\nvar a = 3;\nvar b = 4;\nvar c = a + b;\nDocument.Write(\"The value of c is \" + c);\nDocument.Write(3+1);\n```", "```js\nThe value of c is 7\n4\n```", "```js\ndocument.write(\"Apple \"+\"Banana\");\n```", "```js\nApple Banana\n```", "```js\nvar a = 6;\nvar b = 4;\nvar c = a - b;\nDocument.Write(\"The value of c is \" + c);\nDocument.Write(3-1);\n```", "```js\nThe value of c is 2\n2\n```", "```js\nvar a = 3;\nvar b = 4;\nvar c = a * b;\nDocument.Write(\"The value of c is \" + c);\nDocument.Write(3*1);\n```", "```js\nThe value of c is 12\n3\n```", "```js\nvar a = 5;\nvar b = 2;\nvar c = a % b;\nDocument.Write(\"The value of c is \" + c);\nDocument.Write(10%3);\n```", "```js\nThe value of c is 1\n1\n```", "```js\nvar a = 3;\nvar b = 4;\nvar c = a * b;\nDocument.Write(\"The value of c is \" + c);\nDocument.Write(3*1);\n```", "```js\nThe value of c is 12\n3\n```", "```js\nI = 0; // I contains 0\nI++; // this line is equivalent to I = I + 1 \n```", "```js\nI = 1\n```", "```js\nI = 0; // I contains 0\nI--; // this line is equivalent to I = I - 1 \n```", "```js\nI = - 1\n```", "```js\nvar a= true && true; // it will be true\nvar b=true && false;//it will be false\n```", "```js\nvar a= true  ||  true; // it will be true\nvar b=true  ||  false;// it will be true\n```", "```js\nif(abc != 0){\n //if abc is not equal to 0 run this block\n}else{\n //if abc = 0 then run this block\n}\n```", "```js\nvar a=!false //it will print true\nvar b=!true //it will print false\n```", "```js\nvar x=2;\nconsole.log(\"The value of x is \" + x);\n```", "```js\nThe value of x is 2\n```", "```js\nvar abc = 2;\nabc += 10;\nconsole.log(abc); //12\n```", "```js\nvar abc = 10;\nabc -= 2;\nconsole.log(abc); //8\n```", "```js\nvar abc = 5;\nabc *= 5;\nconsole.log(abc); //25\n```", "```js\nvar abc = 5;\nabc /= 5;\nconsole.log(abc); //1\n```", "```js\nvar abc = 10;\nabc %= 3;\nconsole.log(abc); //1\n```", "```js\nvar abc = 5;\nabc **= 2;\nconsole.log(abc); //25\n```", "```js\nif(2<3) { //returns true\n  //block of code\n}\n```", "```js\nif(2 <= 3) { //returns true\n  //block of code\n}\n```", "```js\nif(2>3) { //returns false\n  //block of code\n}\n```", "```js\nif(3 >= 3) { //returns true\n  //block of code\n}\n```", "```js\nif(2!=3) { //returns true\n  //block of code\n}\n```", "```js\nif(2==3) { //returns false\n  //block of code\n}\n```", "```js\nif(3 === 3) { //returns true\n  //block of code\n}\nif(3 === \"3\") { //returns false\n  //block of code\n}\n```", "```js\nDocument.Write(\"hello world\");\n```", "```js\nvar a=20; var b=2;var c=a*b; document.write(c);\n```", "```js\nvar a=20;\nDocument.Write(a);\n```", "```js\nx = Math.PI;\n  cx = Math.cos(x);\n  alert(\"cos(\" + x + \") = \" + cx);\n```", "```js\nif(x<10) //  if x is less than 10 then x is incremented {\n  x++;\n}\n```", "```js\nfor(i=0; i<10; i++)\n{} /*  Empty  */\n```", "```js\nfunction myFunction() {\n  //block of code\n}\n```", "```js\nvar a =5;\nvar b = 23.5;\nvar c = \"Good morning\";\n```", "```js\nvar a=2;\nvar b=3;\nfunction Addition(x,y) {\n  return x+y;\n}\nvar c= Addition(a,b)\nDocument.Write(\"The value of c is \" + c)\n```", "```js\nThe value of c is 5\n```", "```js\nif(condition) {\n  // block of code\n}\n```", "```js\nvar cAge=25;\nIf (cAge>18) {\n  document.write (\"You must have CNIC\");\n}// if age is above 18 it displays that you must have a CNIC  \n```", "```js\nif(condition 1) {\n  // block of code\n}\nelse if(condition 2) {\n  //block of code\n}\nelse {\n  //  block of code\n}\n```", "```js\nif(condition 1) {\n  // block of code\n}\nelse if(condition 2) {\n  // block of code\n}\nelse if(condition 3) {\n  // block of code\n}\nelse {\n  // block of code\n}\n```", "```js\nvar person=\"Manager\";\nIf(person==\"Admin\") {\n  Document.Write(\"I am visiting it\");\n}\nElse if(person==\"Manager\") {\n  Document.Write(\"I am accessing it\");\n}\nElse {\n  document.write(\"hello kitty\");\n}\n```", "```js\nswitch(condition/expression)\n  case expression 1:\n    //block of code\n  break;\n  case expression 2:\n    //block of code\n  break;\n\n  case expression 3:\n    //block of code\n  break;\n\n  default:\n    //block of code\n  break;\n```", "```js\nSwitch (personName)\n  case \"Jack\":\n    alert(\"my name is Jack\");\n  Break;\n  case \"Ahmed\":\n    alert(\"my name is Ahmed\");\n  break;\n  default:\n    alert(\"my name is Talha\");\n  break;\n```", "```js\n    for (initialization; condition; increment / decrement) {\n      //code block\n    }\n    ```", "```js\nvar i; // declares the variable i\nfor(i=1; i < 5 ; i++) {\n  Document.Write(\"basic counter:\"+i);\n  Document.Write(\"<br/>\");\n}\n```", "```js\nBasic counter:1\nBasic counter:2\nBasic counter:3\nBasic counter:4\n```", "```js\nwhile (condition expression) {\n  // code block\n}\n```", "```js\nvar count= 0;\nWhile(count<5) {\n  Document.Write(\"count\");\n  Document.Write(\"<br/>\");\n  count++;\n}\n```", "```js\n1\n2\n3\n4\n```", "```js\nDo {\n  //statement\n}\nWhile(condition);\n```", "```js\nvar i=1;\nDo {\n  document.write(\"The value of i is \" + i + \"</br>\");\n  i++;\n}\nWhile(i<6);\n```", "```js\nThe value of i is 1\nThe value of i is 2\nThe value of i is 3\nThe value of i is 4\nThe value of i is 5\n```", "```js\nFor (property in object) {\n  //code block\n}\n```", "```js\nvar I;\nFor (I is navigator) {\n  Document.Write(i);\n}\nDocument.Write(\"The loop ends here\");\n```", "```js\nAny loop(condition) {\n  //block of code that will be executed\n  break;\n  //block of code that won't get executed\n}\n```", "```js\nvar i=1;\nWhile(i<10) {\n  if(i==3) {\n    Document.Write(\"Breaking from if loop\");\n    Break;\n  }\n  Document.Write(\"The value of i is \" + i);\n  i+=2;\n}\n```", "```js\nThe value of i is 1\nBreaking from if loop\nThe value of i is 3\n```", "```js\nAny loop(condition) {\n  //block of code that will be executed\n  Any loop (condition) {\n    //block of code that will be executed\n    continue;\n    block of code that wont be executed\n  }\n  //block of code  that will be executed\n}\n```", "```js\nvar i=1;\nWhile(i<5) {\n  if(i==3) //skip the iteration {\n    Document.Write(\"Continue statement encountered\");\n    continue;\n  }\n  Document.Write(\"The value of i is \" + i);\n  i=i+2;\n}\n```", "```js\nThe value of i is 1\nContinue statement encountered\n```", "```js\nfunction myfunc(x, y) {\n  //some block of code\n  return x;\n}\nDocument.Write(\"The result is \" + myfunc(2, 3));\n```", "```js\nFunction multiply(a,b) {\n  return a*B;\n}\nvar mul=multiply(2,3);\nDocument.Write(\"The result is \"+ mul);\n```", "```js\nThe result is 6\n```", "```js\ntry {\n  //block of code\n  throw \"error\";\n  //block of code\n}\ncatch(error) {\n  //block of code\n}\n```", "```js\nTry {\n  document.write( \"hello world);//the code will throw an error due to the missing \"\n}\nCatch(error) {\n  Error.messageTxt;\n}\n```", "```js\nTry {//generate exception}\nCatch {//error handling code}\nFinally {//block of code which runs after try and catch}\n```", "```js\nvar person=[];\nPerson[1]=\"Ali\";\nPerson[20]=\"Ahmed\";\nAlert(person.length);// it will be 21 length\n```", "```js\nvar students= [\"Ali\",\"Ahmed\",\"Amina\"];\n```", "```js\nvar students=new Array (\"Ali,\"Ahmed\",\"Amina\");\n```", "```js\nvar a1=[];\nvar a2=[2];\nvar a3=[1,2,3];\nvar a4=['hi', [2]];\n```", "```js\nvar a1=new array(); // new empty array\nvar a2=new array(2); // new array of size 2\nvar a3= new array(1,2,3); // new array containing 1, 2, 3\n```", "```js\nvar obj=[\"abc\"];\nvar start=obj[0]; //its is for reading\n\nDocument.Write(start);\n\nvar obj[1]=\"hello\";\ni=\"world\";\nObj[i]=\"hello world\";//writing\nDocument.Write(obj[i]);\n```", "```js\nHello world\n```", "```js\nvar a=5;\nvar b=2;\nvar c=new array();\nFor(i=0;i<5;i++) {\n  C[i]=new array();\n  for For(j=0;j<5;j++)\n  c[i][j];  }}\n}\n```", "```js\nvar num=new Array[1,2,3];\nDocument. write (num.length);\n```", "```js\n3\n```", "```js\nvar fruits = [\"Apple\", \"Banana\"];\n```", "```js\nArray.prototype is an array itself.\nArray.isArray(Array.prototype); // true\n```", "```js\nvar alpha = ['a', 'b', 'c'],\nvar numeric = [1, 2, 3];\nvar alphaNumeric = alpha.concat(numeric);\nconsole.log(alphaNumeric); // Result: ['a', 'b', 'c', 1, 2, 3]\n```", "```js\nfunction isBigEnough(element, index, array) {\n  return element >= 10;\n}\n[12, 5, 8, 130, 44].every(isBigEnough);   // false\n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```", "```js\nfunction logArrayElements(element, index, array) {\n  console.log('a[' + index + '] = ' + element);\n}\n\n// Note elision, there is no member at 2 so it isn't visited\n[2, 5, , 9].forEach(logArrayElements);\n// logs:\n// a[0] = 2\n// a[1] = 5\n// a[3] = 9\n```", "```js\nvar a = ['One', 'Two', 'Three'];\nvar var1 = a.join();      // assigns 'One,Two,Three' to var1\nvar var2 = a.join(', ');  // assigns 'One, Two, Three' to var2\nvar var3 = a.join(' + '); // assigns 'One + Two + Three' to var3\nvar var4 = a.join('');    // assigns 'OneTwoThree' to var4\n```", "```js\nvar myColours = ['Yellow', 'Black', 'Blue', 'Green'];\nconsole.log(myColours); // ['Yellow', 'Black', 'Blue', 'Green']\nvar popped = myColours.pop();\nconsole.log(myColours); // ['Yellow', 'Black', 'Blue' ] \nconsole.log(popped); // 'Green'\n```", "```js\nvar sports = ['cricket', 'baseball'];\nvar total = sports.push('football');\n\nconsole.log(sports); // ['cricket', 'baseball', 'football']\nconsole.log(total);  // 3\n```", "```js\nvar array = [2, 5, 9];\narray.indexOf(9);     // 2\narray.indexOf(7);     // -1 if not found\n```", "```js\nvar array = [2, 5, 9, 2];\narray.indexOf(2);     // 3\narray.indexOf(7);     // -1 if not found\n```", "```js\nvar myArray = ['one', 'two', 'three'];\nmyArray.reverse(); \n\nconsole.log(myArray) // ['three', 'two', 'one']\n```", "```js\nvar myColours = ['Yellow', 'Black', 'Blue', 'Green'];\nconsole.log(myColours); // ['Yellow', 'Black', 'Blue', 'Green']\nvar shifted = myColours.shift();\nconsole.log(myColours); // ['Black', 'Blue', 'Green'] \nconsole.log(shifted); // 'Green'\n```", "```js\nvar arr = [1, 2, 3];\narr.unshift(0); // arr is [0, 1, 2, 3]\n```", "```js\nvar fruits = ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango'];\nvar citrus = fruits.slice(1, 3);\n\n// citrus contains ['Orange','Lemon']\n```", "```js\nvar myCars = ['Audi', 'BMW', 'Ferrari', 'Volkswagen'];\n\n// removes 0 elements from index 2, and inserts 'Toyota'\nvar removed = myCars.splice(2, 0, 'Toyota');\n// myCars is ['Audi', 'BMW', 'Toyota', 'Volkswagen']\n// removed is [], no elements removed\n```", "```js\nvar fruit = ['cherries', 'apples', 'bananas'];\nfruit.sort(); // ['apples', 'bananas', 'cherries']\n```", "```js\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr'];\nvar myVar = monthNames.toString(); // 'Jan,Feb,Mar,Apr' to myVar.\n```", "```js\nvar numbers = [1, 4, 9];\nvar roots = numbers.map(Math.sqrt);\n```", "```js\n[1, 2, 3]\n```", "```js\nfunction isBigEnough(value) {\n  return value >= 10;\n}\nvar filtered = [12, 5, 8, 130, 44].filter(isBigEnough);\n```", "```js\n[12, 130, 44]\n```", "```js\n[0, 1, 2, 3, 4].reduce(function(previousValue, currentValue, index, array) {\n  return previousValue + currentValue;\n});\n```", "```js\nfunction logArrayElements(element, index, array) {\n  console.log('a[' + index + '] = ' + element);\n}\n\n// Note elision, there is no member at 2 so it isn't visited\n[2, 5, , 9].forEach(logArrayElements);\n// logs:\n// a[0] = 2\n// a[1] = 5\n// a[3] = 9\n```", "```js\nvar array = [2, 5, 9];\narray.indexOf(9);     // 2\narray.indexOf(7);     // -1 if not found\n```", "```js\nvar array = [2, 5, 9, 2];\narray.indexOf(2);     // 3\narray.indexOf(7);     // -1 if not found\n```", "```js\nfunction isBigEnough(element, index, array) {\n  return element >= 10;\n}\n[12, 5, 8, 130, 44].every(isBigEnough);   // false\n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```", "```js\nfunction isBiggerThan10(element, index, array) {\n  return element > 10;\n}\n[2, 5, 8, 1, 4].some(isBiggerThan10);  // false\n[12, 5, 8, 1, 4].some(isBiggerThan10); // true\n```", "```js\nvar total = [0, 1, 2, 3].reduceRight(function(a, b) {\n  return a + b;\n});\n```"]