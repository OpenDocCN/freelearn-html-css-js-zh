["```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nexport interface HelloProps {\n  name: string;\n}\nclass HelloComponent extends React.Component<HelloProps, {}> {\n  render() {\n    return <div>Hello {this.props.name}</div>;\n  }\n}\nReactDOM.render(\n  <HelloTypeScript name=\"Matt\" />,\n  document.getElementById('root')\n);\n```", "```js\nrender() {\n  return <div>Hello {this.props.name}</div>;\n}\n```", "```js\n    npx create-react-app my-app --template typescript\n    ```", "```js\n    npx create-react-app my-app --template typescript\n    npx: installed 67 in 4.26s\n    Creating a new React app in /Users/mattmorgan/mine/The-TypeScript-Workshop/Chapter14/Exercise01/my-app. \n    Installing packages. This might take a couple of minutes.\n    Installing react, react-dom, and react-scripts with cra-template-typescript...\n    yarn add v1.22.10\n    [1/4] 🔍  Resolving packages...\n    [2/4] 🚚  Fetching packages...\n    // […]\n    warning \" > @testing-library/user-event@12.6.2\" has unmet peer dependency \"@testing-library/dom@>=7.21.4\".\n    success Uninstalled packages.\n    ✨  Done in 10.28s.\n    Success! Created my-app at /Users/mattmorgan/mine/The-TypeScript-Workshop/Chapter15/Exercise15.01/my-app\n    Inside that directory, you can run several commands:\n      yarn start - Starts the development server.\n      yarn build - Bundles the app into static files for production.\n      yarn test -    Starts the test runner.\n      yarn eject    Removes this tool and copies build dependencies, configuration files and scripts into the app directory. If you do this, you can't go back!\n    We suggest that you begin by typing:\n      cd my-app\n      yarn start\n    Happy hacking!\n    ```", "```js\n    cd my-app\n    yarn start\n    ```", "```js\n    Compiled successfully! \n    You can now view my-app in the browser.\n    Local:            http://localhost:3000\n    On Your Network:  http://192.168.7.92:3000\n    Note that the development build is not optimized.\n    To create a production build, use yarn build.\n    ```", "```js\n    yarn build\n    yarn run v1.22.10\n    react-scripts build\n    Creating an optimized production build...\n    Compiled successfully.\n    ```", "```js\n      41.2 KB  build/static/js/2.311d60e9.chunk.js\n      1.39 KB  build/static/js/3.73a1c5a5.chunk.js\n      1.17 KB  build/static/js/runtime-main.f12bc2d0.js\n      615 B    build/static/js/main.fe0fc6c6.chunk.js\n      531 B    build/static/css/main.8c8b27cf.chunk.css\n    ```", "```js\n    yarn global add serve\n    serve -s build\n    Find out more about deployment here:https://cra.link/deployment\n    ✨  Done in 7.88s.\n    ```", "```js\n    PASS  src/App.test.tsx\n      ✓ renders learn react link (23 ms)\n    Test Suites: 1 passed, 1 total\n    Tests:       1 passed, 1 total\n    Snapshots:   0 total\n    Time:        2.295 s\n    Ran all test suites related to changed files.\n    Watch Usage\n     › Press a to run all tests.\n     › Press f to run only failed tests.\n     › Press q to quit watch mode.\n     › Press p to filter by a filename regex pattern.\n     › Press t to filter by a test name regex pattern.\n     › Press Enter to trigger a test run.\n    ```", "```js\n    npx create-react-app router-app --template typescript\n    cd router-app\n    ```", "```js\n    yarn add react-router-dom\n    yarn add -D @types/react-router-dom\n    % yarn add react-router-dom\n    yarn add v1.22.10\n    [1/4] 🔍  Resolving packages...\n    [2/4] 🚚  Fetching packages...\n    [3/4] 🔗  Linking dependencies...\n    warning \" > @testing-library/user-event@12.6.2\" has unmet peer dependency \"@testing-library/dom@>=7.21.4\".\n    [4/4] 🔨  Building fresh packages...\n    success Saved lockfile.\n    success Saved 8 new dependencies.\n    info Direct dependencies\n    └─ react-router-dom@5.2.0\n    info All dependencies\n    ├─ hoist-non-react-statics@3.3.2\n    ├─ mini-create-react-context@0.4.1\n    ├─ path-to-regexp@1.8.0\n    ├─ react-router-dom@5.2.0\n    ├─ react-router@5.2.0\n    ├─ resolve-pathname@3.0.0\n    ├─ tiny-warning@1.0.3\n    └─ value-equal@1.0.1\n    ✨  Done in 4.86s.\n    % yarn add -D @types/react-router-dom\n    yarn add v1.22.10\n    [1/4] 🔍  Resolving packages...\n    [2/4] 🚚  Fetching packages...\n    [3/4] 🔗  Linking dependencies...\n    warning \" > @testing-library/user-event@12.6.2\" has unmet peer dependency \"@testing-library/dom@>=7.21.4\".\n    [4/4] 🔨  Building fresh packages...\n    success Saved lockfile.\n    success Saved 2 new dependencies.\n    info Direct dependencies\n    └─ @types/react-router-dom@5.1.7\n    info All dependencies\n    ├─ @types/react-router-dom@5.1.7\n    └─ @types/react-router@5.1.11\n    ✨  Done in 4.59s.\n    ```", "```js\n    import React from 'react';\n    const Add = () => <div>Add a new story</div>;\n    export default Add;\n    ```", "```js\n    import React from 'react';\n    const Home = () => <div>You are home!</div>;\n    export default Home;\n    ```", "```js\n    import React from 'react';\n    const SignIn = () => <div>Sign in here</div>;\n    export default SignIn;\n    ```", "```js\n    import React from 'react';\n    const SignUp = () => <div>Sign up here</div>;\n    export default SignUp;\n    ```", "```js\n    import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n    ```", "```js\n    function App() {\n      return (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      );\n    }\n    ```", "```js\n    import Home from './pages/Home';\n    ```", "```js\n    <Route path=\"/add\" component={Add} />\n    <Route path=\"/signin\" component={SignIn} />\n    <Route path=\"/signup\" component={SignUp} />\n    ```", "```js\n    <Link to=\"/\">home</Link>\n    ```", "```js\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">home</Link>\n        </li>\n        <li>\n          <Link to=\"add\">add</Link>\n        </li>\n        <li>\n          <Link to=\"signin\">signin</Link>\n        </li>\n        <li>\n          <Link to=\"signup\">signup</Link>\n        </li>\n      </ul>\n    </nav>\n    ```", "```js\n    import React from 'react';\n    import { Link } from 'react-router-dom';\n    const NavBar = () => (\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">home</Link>\n          </li>\n          <li>\n            <Link to=\"add\">add</Link>\n          </li>\n          <li>\n            <Link to=\"signin\">signin</Link>\n          </li>\n          <li>\n            <Link to=\"signup\">signup</Link>\n          </li>\n        </ul>\n      </nav>\n    );\n    export default NavBar;\n    ```", "```js\n    import './App.css';\n    import React from 'react';\n    import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n    import NavBar from './components/NavBar';\n    import Add from './pages/Add';\n    import Home from './pages/Home';\n    import SignIn from './pages/SignIn';\n    import SignUp from './pages/SignUp';\n    function App() {\n      return (\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/add\" component={Add} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n          </Switch>\n        </Router>\n      );\n    }\n    export default App;\n    ```", "```js\nimport React, { Component } from 'react';\ninterface Comp1Props {\n  text: string;\n}\nexport default class Comp1 extends Component<Comp1Props> {\n  render() {\n    const { text } = this.props;\n    return <div>{text}</div>;\n  }\n}\n```", "```js\nimport React, { Component } from 'react';\ninterface Comp1Props {\n  text: string;\n}\ninterface Comp1State {\n  value: boolean\n}\nexport default class Comp1 extends Component<Comp1Props, Comp1State> {\n  render() {\n    ...\n}\n```", "```js\nimport React from 'react';\ninterface Comp2Props {\n  text: string;\n}\nexport default function Comp2({ text }: Comp2Props) {\n  return <div>{text}</div>;\n}\n```", "```js\nimport React from 'react';\ninterface Comp3Props {\n  text: string;\n}\nconst Comp3 = ({ text }: Comp3Props) => <div>{text}</div>;\nexport default Comp3;\n```", "```js\nimport React from 'react';\nexport const Comp3 = ({ text }:{ text: string }) => <div>{text}</div>;\n```", "```js\nimport { createElement } from 'react';\ninterface Comp4Props {\n  text: string;\n}\nconst Comp4 = ({ text }: Comp4Props) => createElement('div', null, text);\nexport default Comp4;\n```", "```js\nimport React, { Component } from 'react';\ninterface Comp1Props {\n  text: string;\n}\ninterface Comp1State {\n  clicks: number;\n}\nexport default class Comp1 extends Component<Comp1Props, Comp1State> {\n  constructor(props: Comp1Props) {\n    super(props);\n    this.state = { clicks: 0 };\n  }\n  handleClick = () => {\n    this.setState({ clicks: this.state.clicks + 1 });\n  };\n  render() {\n    const { text } = this.props;\n    return (\n      <div>\n        {text}\n        <div>\n          <button onClick={this.handleClick}>{this.state.clicks} clicks</button>\n        </div>\n      </div>\n    );\n  }\n}\n```", "```js\nimport React, { useState } from 'react';\ninterface Comp2Props {\n  text: string;\n}\nexport default function Comp2({ text }: Comp2Props) {\n  const [clicks, setClicks] = useState(0);\n  const handleClick = () => setClicks(clicks + 1);\n  return (\n    <div>\n      {text}\n      <div>\n        <button onClick={handleClick}>{clicks} clicks</button>\n      </div>\n    </div>\n  );\n}\n```", "```js\n    export const ClickContext = createContext();\n    ```", "```js\n    export const ClickProvider = ({ children }) => {\n      const [clicks, setClicks] = useState(0);\n      return (\n        <ClickContext.Provider value={{ clicks, setClicks }}>\n          {children}\n        </ClickContext.Provider>\n      );\n    };\n    ```", "```js\n    interface Clicks {\n      clicks: number;\n      setClicks: Dispatch<SetStateAction<number>>;\n    }\n    interface ContextProps {\n      children: ReactNode;\n    }\n    ```", "```js\n    import React, {\n      createContext,\n      Dispatch,\n      ReactNode,\n      SetStateAction,\n      useState,\n    } from 'react';\n    interface Clicks {\n      clicks: number;\n      setClicks: Dispatch<SetStateAction<number>>;\n    }\n    interface ContextProps {\n      children: ReactNode;\n    }\n    export const ClickContext = createContext<Clicks>({\n      clicks: 0,\n      setClicks: () => {},\n    });\n    export const ClickProvider = ({ children }: ContextProps) => {\n      const [clicks, setClicks] = useState(0);\n      return (\n        <ClickContext.Provider value={{ clicks, setClicks }}>\n          {children}\n        </ClickContext.Provider>\n      );\n    };\n    ```", "```js\n    import React, { useContext } from 'react';\n    import { ClickContext } from '../providers/ClickProvider';\n    const Clicker = () => {\n      const { clicks, setClicks } = useContext(ClickContext);\n      const handleClick = () => setClicks(clicks + 1);\n      return <button onClick={handleClick}>Add a click</button>;\n    };\n    export default Clicker;\n    ```", "```js\n    import React, { useContext } from 'react';\n    import { ClickContext } from '../providers/ClickProvider';\n    const Display = () => {\n      const { clicks } = useContext(ClickContext);\n      return <div>{clicks}</div>;\n    };\n    export default Display;\n    ```", "```js\n    import './App.css';\n    import React from 'react';\n    import Clicker from './components/Clicker';\n    import Display from './components/Display';\n    import { ClickProvider } from './providers/ClickProvider';\n    function App() {\n      return (\n        <ClickProvider>\n          <Clicker />\n          <Display />\n        </ClickProvider>\n      );\n    }\n    export default App;\n    ```", "```js\n    const firebaseConfig = {\n      apiKey: \"abc123\",\n      authDomain: \"blog-xxx.firebaseapp.com\",\n      projectId: \"blog-xxx\",\n      storageBucket: \"blog-xxx.appspot.com\",\n      messagingSenderId: \"999\",\n      appId: \"1:123:web:123abc\"\n    };\n    ```"]