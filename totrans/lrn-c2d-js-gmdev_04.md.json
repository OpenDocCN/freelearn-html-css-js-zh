["```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPEplist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n    <dict>\n        <key>frames</key>\n        <dict>\n            <key>background.png</key>\n            <dict>\n                <key>frame</key>\n                <string>{{2,2},{96,64}}</string>\n                <key>offset</key>\n                <string>{0,0}</string>\n                <key>rotated</key>\n                <false/>\n                <key>sourceColorRect</key>\n                <string>{{0,0},{96,64}}</string>\n                <key>sourceSize</key>\n                <string>{96,64}</string>\n            </dict>\n            <key>crate.png</key>\n            <dict>\n                <key>frame</key>\n                <string>{{39,68},{5,5}}</string>\n                <key>offset</key>\n                <string>{0,0}</string>\n                <key>rotated</key>\n                <false/>\n                <key>sourceColorRect</key>\n                <string>{{0,0},{5,5}}</string>\n                <key>sourceSize</key>\n                <string>{5,5}</string>\n            </dict>\n        </dict>\n    </plist>\n```", "```js\nvar gameResources = [\n  \"assets/spritesheet.plist\",\n  \"assets/spritesheet.png\"\n];\n```", "```js\ncc.game.onStart = function(){\n  cc.view.setDesignResolutionSize(480, 320, cc.ResolutionPolicy.SHOW_ALL);\n  cc.LoaderScene.preload(gameResources, function () {\n    cc.director.runScene(new gameScene());\n  }, this);\n};\ncc.game.run();\n\nvarmyGame = new cocos2dGame(gameScene);\n```", "```js\nvar level = [\n  [1,1,1,1,1,1,1],\n  [1,1,0,0,0,0,1],\n  [1,1,3,0,2,0,1],\n  [1,0,0,4,0,0,1],\n  [1,0,3,1,2,0,1],\n  [1,0,0,1,1,1,1],\n  [1,1,1,1,1,1,1]\n];\n```", "```js\nvar gameScene = cc.Scene.extend({\n  onEnter:function () {\n  this._super();\n    gameLayer = new game();\n    gameLayer.init();\n    this.addChild(gameLayer);\n  }\n});\n```", "```js\nvar game  = cc.Layer.extend({\n  init:function () {\n    this._super();\n    cache = cc.spriteFrameCache;\n    cache.addSpriteFrames(\"assets/spritesheet.plist\", \"assets/spritesheet.png\");\n    var backgroundSprite = cc.Sprite.create(cache.getSpriteFrame(\"background.png\"));\n    backgroundSprite.setPosition(240,160);\n    backgroundSprite.setScale(5);\n    this.addChild(backgroundSprite);\n    var levelSprite =  cc.Sprite.create(cache.getSpriteFrame(\"level.png\"));\n    levelSprite.setPosition(240,110);\n    levelSprite.setScale(5);\n    this.addChild(levelSprite);\n  }\n```", "```js\ncache = cc.spriteFrameCache;\ncache.addSpriteFrames(\"assets/spritesheet.plist\", \"assets/spritesheet.png\");\n```", "```js\nvar backgroundSprite = cc.Sprite.create(cache.getSpriteFrame(\"background.png\"));\n```", "```js\nbackgroundSprite.setScale(5);\n```", "```js\nvar game  = cc.Layer.extend({\n  init:function () {\n    this._super();\n    cache = cc.spriteFrameCache;\n    cache.addSpriteFrames(\"assets/spritesheet.plist\", \"assets/spritesheet.png\");\n    var backgroundSprite = cc.Sprite.create(cache.getSpriteFrame(\"background.png\"));\n    backgroundSprite.getTexture().setAliasTexParameters();\n    backgroundSprite.setPosition(240,160);\n    backgroundSprite.setScale(5);\n    this.addChild(backgroundSprite);\n    var levelSprite =  cc.Sprite.create(cache.getSpriteFrame(\"level.png\"));\n    levelSprite.setPosition(240,110);\n    levelSprite.setScale(5);\n    this.addChild(levelSprite);\n  }\n});\n```", "```js\nvar cratesArray = [];\nvar playerPosition;\nvar playerSprite;\n```", "```js\nvar game  = cc.Layer.extend({\n  init:function () {\n    this._super();\n    // same as before\n    this.addChild(levelSprite);\n    for(i=0;i<7;i++){\n      cratesArray[i]=[];\n      for(j=0;j<7;j++){\n        switch(level[i][j]){\n          case 4:\n          case 6:\n          playerSprite = cc.Sprite.create(cache.getSpriteFrame(\"player.png\"));\n          playerSprite.setPosition(165+25*j,185-25*i);\n          playerSprite.setScale(5);\n          this.addChild(playerSprite);\n          playerPosition = {x:j,y:i};\n          cratesArray[i][j]=null;\n          break;\n          case 3:\n          case 5:\n          var crateSprite = cc.Sprite.create(cache.getSpriteFrame(\"crate.png\"));\n          crateSprite.setPosition(165+25*j,185-25*i);\n          crateSprite.setScale(5);\n          this.addChild(crateSprite);\n          cratesArray[i][j]=crateSprite;\n          break;\n          default:\n          cratesArray[i][j]=null;\n        }\n      }\n    }\n  }\n});\n```", "```js\nvar startTouch;\nvar endTouch;\nvar swipeTolerance = 10;\n```", "```js\nvar game  = cc.Layer.extend({\n  init:function () {\n    // same as before\n    cc.eventManager.addListener(listener, this);\n     }\n});\n```", "```js\nvar listener = cc.EventListener.create({\n  event: cc.EventListener.TOUCH_ONE_BY_ONE,\n  swallowTouches: true,\n  onTouchBegan:function (touch,event) {\n    startTouch = touch.getLocation();\n    return true;\n  },\n  onTouchEnded:function(touch, event){\n    endTouch = touch.getLocation();\n    swipeDirection();\n  }\n});\n```", "```js\nfunction swipeDirection(){\n  var distX = startTouch.x - endTouch.x;\n  var distY = startTouch.y - endTouch.y;\n  if(Math.abs(distX)+Math.abs(distY)>swipeTolerance){\n    if(Math.abs(distX)>Math.abs(distY)){\n      if(distX>0){\n        playerSprite.setPosition(playerSprite.getPosition().x-25,playerSprite.getPosition().y);\n        //move(-1,0);\n      }\n      else{\n        playerSprite.setPosition(playerSprite.getPosition().x+25,playerSprite.getPosition().y);\n        //move(1,0);\n      }\n    }\n    else{\n      if(distY>0){\n        playerSprite.setPosition(playerSprite.getPosition().x,playerSprite.getPosition().y-25);\n        //move(0,1);\n      }\n      else{\n        playerSprite.setPosition(playerSprite.getPosition().x,playerSprite.getPosition().y+25);\n        //move(0,-1);\n      }\n    }\n  }\n}\n```", "```js\nvar distX = startTouch.x - endTouch.x;\nvar distY = startTouch.y - endTouch.y;\n```", "```js\nif(Math.abs(distX)+Math.abs(distY)>swipeTolerance){\n```", "```js\nif(Math.abs(distX)>Math.abs(distY)){\n```", "```js\nif(distX>0){\n```", "```js\nfunction swipeDirection(){\n  var distX = startTouch.x - endTouch.x;\n  var distY = startTouch.y - endTouch.y;\n  if(Math.abs(distX)+Math.abs(distY)>swipeTolerance){\n    if(Math.abs(distX)>Math.abs(distY)){\n      if(distX>0){\n        move(-1,0);\n      }\n      else{\n        move(1,0);\n      }\n    }\n    else{\n      if(distY>0){\n        move(0,1);\n      }\n      else{\n        move(0,-1);\n      }\n    }\n  }\n}\n```", "```js\nfunction move(deltaX,deltaY){\n  switch(level[playerPosition.y+deltaY][playerPosition.x+deltaX]){\n    case 0:\n    case 2:\n    level[playerPosition.y][playerPosition.x]-=4;\n    playerPosition.x+=deltaX;\n    playerPosition.y+=deltaY;\n    level[playerPosition.y][playerPosition.x]+=4;\n    playerSprite.setPosition(165+25*playerPosition.x,185-25*playerPosition.y);\n    break;\n    case 3:\n    case 5:\n    if(level[playerPosition.y+deltaY*2][playerPosition.x+deltaX*2]==0 || level[playerPosition.y+deltaY*2][playerPosition.x+deltaX*2]==2){\n      level[playerPosition.y][playerPosition.x]-=4;\n      playerPosition.x+=deltaX;\n      playerPosition.y+=deltaY;\n      level[playerPosition.y][playerPosition.x]+=1;\n      playerSprite.setPosition(165+25*playerPosition.x,185-25*playerPosition.y);\n      level[playerPosition.y+deltaY][playerPosition.x+deltaX]+=3;\n      var movingCrate = cratesArray[playerPosition.y][playerPosition.x];\n      movingCrate.setPosition(movingCrate.getPosition().x+25*deltaX,movingCrate.getPosition().y-25*deltaY);\n      cratesArray[playerPosition.y+deltaY][playerPosition.x+deltaX]=movingCrate;\n      cratesArray[playerPosition.y][playerPosition.x]=null;\n    }\n    break;\n  }\n}\n```"]