["```js\nlet s = \"Hello\";\nconsole.log(\n  s.concat(\" there!\")\n  .toUpperCase()\n  .replace(\"THERE\", \"you\")\n  .concat(\" You're amazing!\")\n); \n```", "```js\nHELLO you! You're amazing! \n```", "```js\nlet x = 7;\nconsole.log(Number.isNaN(x)); \n```", "```js\nconsole.log(isNaN(x)); \n```", "```js\nlet uri = \"https://www.example.com/submit?name=maaike van putten\";\nlet encoded_uri = encodeURI(uri);\nconsole.log(\"Encoded:\", encoded_uri);\nlet decoded_uri = decodeURI(encoded_uri);\nconsole.log(\"Decoded:\", decoded_uri); \n```", "```js\nEncoded: https://www.example.com/submit?name=maaike%20van%20putten\nDecoded: https://www.example.com/submit?name=maaike van putten \n```", "```js\nlet uri = \"https://www.example.com/submit?name=maaike van putten\";\nlet encoded_uri = encodeURIComponent(uri);\nconsole.log(\"Encoded:\", encoded_uri);\nlet decoded_uri = decodeURIComponent(encoded_uri);\nconsole.log(\"Decoded:\", decoded_uri); \n```", "```js\nEncoded: https%3A%2F%2Fwww.example.com%2Fsubmit%3Fname%3Dmaaike%20van%20putten\nDecoded: https://www.example.com/submit?name=maaike van putten \n```", "```js\nlet str_int = \"6\";\nlet int_int = parseInt(str_int);\nconsole.log(\"Type of \", int_int, \"is\", typeof int_int); \n```", "```js\nType of 6 is number \n```", "```js\nlet str_float = \"7.6\";\nlet int_float = parseInt(str_float);\nconsole.log(\"Type of\", int_float, \"is\", typeof int_float);\nlet str_binary = \"0b101\";\nlet int_binary = parseInt(str_binary);\nconsole.log(\"Type of\", int_binary, \"is\", typeof int_binary); \n```", "```js\nType of 7 is number\nType of 0 is number \n```", "```js\nlet str_nan = \"hello!\";\nlet int_nan = parseInt(str_nan);\nconsole.log(\"Type of\", int_nan, \"is\", typeof int_nan); \n```", "```js\nType of NaN is number \n```", "```js\nlet str_float = \"7.6\";\nlet float_float = parseFloat(str_float);\nconsole.log(\"Type of\", float_float, \"is\", typeof float_float); \n```", "```js\nType of 7.6 is number \n```", "```js\nlet str_version_nr = \"2.3.4\";\nlet float_version_nr = parseFloat(str_version_nr);\nconsole.log(\"Type of\", float_version_nr, \"is\", typeof float_version_nr); \n```", "```js\nType of 2.3 is number \n```", "```js\nlet str_int = \"6\";\nlet float_int = parseFloat(str_int);\nconsole.log(\"Type of\", float_int, \"is\", typeof float_int); \n```", "```js\nType of 6 is number \n```", "```js\nlet str_binary = \"0b101\";\nlet float_binary = parseFloat(str_binary);\nconsole.log(\"Type of\", float_binary, \"is\", typeof float_binary);\nlet str_nan = \"hello!\";\nlet float_nan = parseFloat(str_nan);\nconsole.log(\"Type of\", float_nan, \"is\", typeof float_nan); \n```", "```js\nType of 0 is number\nType of NaN is number \n```", "```js\n<html>\n  <body>\n    <input onchange=\"go(this)\"></input>\n    <script>\n      function go(e) {\n        eval(e.value);\n      }\n    </script>\n  </body>\n</html> \n```", "```js\ndocument.body.style.backgroundColor = \"pink\"; \n```", "```js\nlet arr = [\"grapefruit\", 4, \"hello\", 5.6, true];\nfunction printStuff(element, index) {\n  console.log(\"Printing stuff:\", element, \"on array position:\", index);\n}\narr.forEach(printStuff); \n```", "```js\nPrinting stuff: grapefruit on array position: 0\nPrinting stuff: 4 on array position: 1\nPrinting stuff: hello on array position: 2\nPrinting stuff: 5.6 on array position: 3\nPrinting stuff: true on array position: 4 \n```", "```js\nlet arr = [\"squirrel\", 5, \"Tjed\", new Date(), true];\nfunction checkString(element, index) {\n  return typeof element === \"string\";\n}\nlet filterArr = arr.filter(checkString);\nconsole.log(filterArr); \n```", "```js\n[ 'squirrel', 'Tjed' ] \n```", "```js\nconsole.log(arr.every(checkString)); \n```", "```js\narr = [\"grapefruit\", 4, \"hello\", 5.6, true];\narr.copyWithin(0, 3, 4); \n```", "```js\n[ 5.6, 4, 'hello', 5.6, true ] \n```", "```js\narr = [\"grapefruit\", 4, \"hello\", 5.6, true];\narr.copyWithin(0, 3, 5); \n```", "```js\n[ 5.6, true, 'hello', 5.6, true ] \n```", "```js\nlet arr = [\"grapefruit\", 4, \"hello\", 5.6, true, false];\narr.copyWithin(0, 3);\nconsole.log(arr); \n```", "```js\n[ 5.6, true, false, 5.6, true, false ] \n```", "```js\nlet arr = [1, 2, 3, 4];\nlet mapped_arr = arr.map(x => x + 1);\nconsole.log(mapped_arr); \n```", "```js\n[ 2, 3, 4, 5 ] \n```", "```js\nlet bb = [\"so\", \"bye\", \"bye\", \"love\"];\nconsole.log(bb.lastIndexOf(\"bye\")); \n```", "```js\nlet bb = [\"so\", \"bye\", \"bye\", \"love\"];\nconsole.log(bb.lastIndexOf(\"hi\")); \n```", "```js\n[\"Laurence\", \"Mike\", \"Larry\", \"Kim\", \"Joanne\", \"Laurence\", \"Mike\", \"Laurence\", \"Mike\", \"Laurence\", \"Mike\"] \n```", "```js\n [ 'Laurence', 'Mike', 'Larry', 'Kim', 'Joanne' ] \n```", "```js\nlet s1 = \"Hello \";\nlet s2 = \"JavaScript\";\nlet result = s1.concat(s2);\nconsole.log(result); \n```", "```js\nHello JavaScript \n```", "```js\nlet result = \"Hello JavaScript\";\nlet arr_result = result.split(\" \");\nconsole.log(arr_result); \n```", "```js\n[ 'Hello', 'JavaScript' ] \n```", "```js\nlet favoriteFruits = \"strawberry,watermelon,grapefruit\";\nlet arr_fruits = favoriteFruits.split(\",\");\nconsole.log(arr_fruits); \n```", "```js\n[ 'strawberry', 'watermelon', 'grapefruit' ] \n```", "```js\nlet letters = [\"a\", \"b\", \"c\"];\nlet x = letters.join();\nconsole.log(x); \n```", "```js\na,b,c \n```", "```js\nlet letters = [\"a\", \"b\", \"c\"];\nlet x = letters.join('-');\nconsole.log(x); \n```", "```js\na-b-c \n```", "```js\nlet poem = \"Roses are red, violets are blue, if I can do JS, then you             can too!\";\nlet index_re = poem.indexOf(\"re\");\nconsole.log(index_re); \n```", "```js\nlet indexNotFound = poem.indexOf(\"python\");\nconsole.log(indexNotFound); \n```", "```js\nif(poem.indexOf(\"python\") != -1) {\n  // do stuff\n} \n```", "```js\nlet searchStr = \"When I see my fellow, I say hello\";\nlet pos = searchStr.search(\"lo\");\nconsole.log(pos); \n```", "```js\nlet notFound = searchStr.search(\"JavaScript\");\nconsole.log(notFound); \n```", "```js\nlet lastIndex_re = poem.lastIndexOf(\"re\");\nconsole.log(lastIndex_re); \n```", "```js\nlet pos1 = poem.charAt(10);\nconsole.log(pos1); \n```", "```js\nlet pos2 = poem.charAt(1000);\nconsole.log(pos2); \n```", "```js\nlet str = \"Create a substring\";\nlet substr1 = str.slice(5);\nlet substr2 = str.slice(0,3);\nconsole.log(\"1:\", substr1);\nconsole.log(\"2:\", substr2); \n```", "```js\n1: e a substring\n2: Cre \n```", "```js\nlet hi = \"Hi buddy\";\nlet new_hi = hi.replace(\"buddy\", \"Pascal\");\nconsole.log(new_hi); \n```", "```js\nlet new_hi2 = hi.replace(\"not there\", \"never there\");\nconsole.log(new_hi2); \n```", "```js\nlet s3 = \"hello hello\";\nlet new_s3 = s3.replace(\"hello\", \"oh\");\nconsole.log(new_s3); \n```", "```js\nlet s3 = \"hello hello\";\nlet new_s3 = s3.replaceAll(\"hello\", \"oh\");\nconsole.log(new_s3); \n```", "```js\nlet low_bye = \"bye!\";\nlet up_bye = low_bye.toUpperCase();\nconsole.log(up_bye); \n```", "```js\nBYE! \n```", "```js\nlet caps = \"HI HOW ARE YOU?\";\nlet fixed_caps = caps.toLowerCase();\nconsole.log(fixed_caps); \n```", "```js\nhi how are you? \n```", "```js\nlet caps = \"HI HOW ARE YOU?\";\nlet fixed_caps = caps.toLowerCase();\nlet first_capital = fixed_caps.charAt(0).toUpperCase().concat(fixed_caps.slice(1));\nconsole.log(first_capital); \n```", "```js\nlet encouragement = \"You are doing great, keep up the good work!\";\nlet bool_start = encouragement.startsWith(\"You\");\nconsole.log(bool_start); \n```", "```js\nlet bool_start2 = encouragement.startsWith(\"you\");\nconsole.log(bool_start2); \n```", "```js\nlet bool_start3 = encouragement.toLowerCase().startsWith(\"you\");\nconsole.log(bool_start3); \n```", "```js\nlet bool_end = encouragement.endsWith(\"Something else\");\nconsole.log(bool_end); \n```", "```js\nI love JavaScript \n```", "```js\n2 l3v1 j0v0scr2pt \n```", "```js\nlet x = 34;\nconsole.log(isNaN(x));\nconsole.log(!isNaN(x));\nlet str = \"hi\";\nconsole.log(isNaN(str)); \n```", "```js\nfalse\ntrue\ntrue \n```", "```js\nlet str1 = \"5\";\nconsole.log(isNaN(str1)); \n```", "```js\nlet x = 3;\nlet str = \"finite\";\nconsole.log(isFinite(x));\nconsole.log(isFinite(str));\nconsole.log(isFinite(Infinity));\nconsole.log(isFinite(10 / 0)); \n```", "```js\ntrue\nfalse\nfalse\nfalse \n```", "```js\nlet x = 3;\nlet str = \"integer\";\nconsole.log(Number.isInteger(x));\nconsole.log(Number.isInteger(str));\nconsole.log(Number.isInteger(Infinity));\nconsole.log(Number.isInteger(2.4)); \n```", "```js\ntrue\nfalse\nfalse\nfalse \n```", "```js\nlet x = 1.23456;\nlet newX = x.toFixed(2); \n```", "```js\nlet x = 1.23456;\nlet newX = x.toFixed(3); \nconsole.log(x, newX); \n```", "```js\nlet x = 1.23456;\nlet newX = x.toPrecision(2); \n```", "```js\nlet x = 1.23456;\nlet newX = x.toPrecision(4); \nconsole.log(newX); \n```", "```js\nlet highest = Math.max(2, 56, 12, 1, 233, 4);\nconsole.log(highest); \n```", "```js\nlet lowest = Math.min(2, 56, 12, 1, 233, 4);\nconsole.log(lowest); \n```", "```js\nlet highestOfWords = Math.max(\"hi\", 3, \"bye\");\nconsole.log(highestOfWords); \n```", "```js\nlet result = Math.sqrt(64);\nconsole.log(result); \n```", "```js\nlet result2 = Math.pow(5, 3);\nconsole.log(result2); \n```", "```js\nlet x = 6.78;\nlet y = 5.34;\nconsole.log(\"X:\", x, \"becomes\", Math.round(x));\nconsole.log(\"Y:\", y, \"becomes\", Math.round(y)); \n```", "```js\nX: 6.78 becomes 7\nY: 5.34 becomes 5 \n```", "```js\nconsole.log(\"X:\", x, \"becomes\", Math.ceil(x));\nconsole.log(\"Y:\", y, \"becomes\", Math.ceil(y)); \n```", "```js\nX: 6.78 becomes 7\nY: 5.34 becomes 6 \n```", "```js\nlet negativeX = -x;\nlet negativeY = -y;\nconsole.log(\"negativeX:\", negativeX, \"becomes\", Math.ceil(negativeX));\nconsole.log(\"negativeY:\", negativeY, \"becomes\", Math.ceil(negativeY)); \n```", "```js\nnegativeX: -6.78 becomes -6\nnegativeY: -5.34 becomes -5 \n```", "```js\nconsole.log(\"X:\", x, \"becomes\", Math.floor(x));\nconsole.log(\"Y:\", y, \"becomes\", Math.floor(y)); \n```", "```js\nX: 6.78 becomes 6\nY: 5.34 becomes 5 \n```", "```js\nconsole.log(\"negativeX:\", negativeX, \"becomes\", Math.floor(negativeX));\nconsole.log(\"negativeY:\", negativeY, \"becomes\", Math.floor(negativeY)); \n```", "```js\nnegativeX: -6.78 becomes -7\nnegativeY: -5.34 becomes -6 \n```", "```js\nconsole.log(\"X:\", x, \"becomes\", Math.trunc(x));\nconsole.log(\"Y:\", y, \"becomes\", Math.trunc(y)); \n```", "```js\nX: 6.78 becomes 6\nY: 5.34 becomes 5 \n```", "```js\nnegativeX: -6.78 becomes -6\nnegativeY: -5.34 becomes –5 \n```", "```js\nlet x = 2;\nlet exp = Math.exp(x);\nconsole.log(\"Exp:\", exp);\nlet log = Math.log(exp);\nconsole.log(\"Log:\", log); \n```", "```js\nExp: 7.38905609893065\nLog: 2 \n```", "```js\nlet currentDateTime = new Date();\nconsole.log(currentDateTime); \n```", "```js\n2021-06-05T14:21:45.625Z \n```", "```js\nlet now2 = Date.now();\nconsole.log(now2); \n```", "```js\n1622902938507 \n```", "```js\nlet milliDate = new Date(1000);\nconsole.log(milliDate); \n```", "```js\n1970-01-01T00:00:01.000Z \n```", "```js\nlet stringDate = new Date(\"Sat Jun 05 2021 12:40:12 GMT+0200\");\nconsole.log(stringDate); \n```", "```js\n2021-06-05T10:40:12.000Z \n```", "```js\nlet specificDate = new Date(2022, 1, 10, 12, 10, 15, 100);\nconsole.log(specificDate); \n```", "```js\n2022-02-10T12:10:15.100Z \n```", "```js\nlet d = new Date();\nconsole.log(\"Day of week:\", d.getDay());\nconsole.log(\"Day of month:\", d.getDate());\nconsole.log(\"Month:\", d.getMonth());\nconsole.log(\"Year:\", d.getFullYear());\nconsole.log(\"Seconds:\", d.getSeconds());\nconsole.log(\"Milliseconds:\", d.getMilliseconds());\nconsole.log(\"Time:\", d.getTime()); \n```", "```js\nDay of week: 6\nDay of month: 5\nMonth: 5\nYear: 2021\nSeconds: 24\nMilliseconds: 171\nTime: 1622903604171 \n```", "```js\nd.setFullYear(2010);\nconsole.log(d); \n```", "```js\n2010-06-05T14:29:51.481Z \n```", "```js\nd.setMonth(9);\nconsole.log(d); \n```", "```js\n2010-10-05T14:30:39.501Z \n```", "```js\nd.setDate(10);\nconsole.log(d); \n```", "```js\n2010-10-10T14:34:25.271Z \n```", "```js\nd.setHours(10);\nconsole.log(d); \n```", "```js\n2010-10-10T10:34:54.518Z \n```", "```js\nd.setTime(1622889770682);\nconsole.log(d); \n```", "```js\n2021-06-05T10:42:50.682Z \n```", "```js\nlet d1 = Date.parse(\"June 5, 2021\");\nconsole.log(d1); \n```", "```js\n1622851200000 \n```", "```js\nlet d2 = Date.parse(\"6/5/2021\");\nconsole.log(d2); \n```", "```js\n1622851200000 \n```", "```js\nconsole.log(d.toDateString()); \n```", "```js\nSat Jun 05 2021 \n```", "```js\nconsole.log(d.toLocaleDateString()); \n```", "```js\n6/5/2021 \n```", "```js\n    var c = \"http://www.google.com?id=1000&n=500\";\n    var e = encodeURIComponent(c); \n    ```", "```js\n    const arr = [\"hi\",\"world\",\"hello\",\"hii\",\"hi\",\"hi World\",\"Hi\"];\n    console.log(arr.lastIndexOf(\"hi\")); \n    ```", "```js\n    const arr = [\"Hi\",\"world\",\"hello\",\"Hii\",\"hi\",\"hi World\",\"Hi\"];\n    arr.copyWithin(0, 3, 5);\n    console.log(arr); \n    ```", "```js\n    const arr = [\"Hi\",\"world\",\"hello\",\"Hii\",\"hi\",\"hi World\",\"Hi\"];\n    const arr2 = arr.filter((element,index)=>{\n        const ele2 = element.substring(0, 2);\n        return (ele2 == \"hi\");\n    });\n    console.log(arr2); \n    ```"]