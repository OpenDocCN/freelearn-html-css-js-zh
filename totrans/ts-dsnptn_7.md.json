["```js\n$ npm install webpack -g\n\n```", "```js\nvar Foo = require('./foo'); \n\nFoo.test(); \n\n```", "```js\nexports.test = function test() { \n  console.log('Hello, Webpack!'); \n}; \n\n```", "```js\n$ webpack ./client/src/index.js ./client/out/bundle.js\n\n```", "```js\n'use strict'; \n\nconst Path = require('path'); \n\nmodule.exports = { \n  entry: './src/index', \n  output: { \n    path: Path.join(__dirname, 'out'), \n    filename: 'bundle.js' \n  } \n}; \n\n```", "```js\n$ npm install typescript ts-loader --save-dev\n\n```", "```js\nimport * as Foo from './foo'; \n\nFoo.test(); \n\n```", "```js\nexport function test() { \n  console.log('Hello, Webpack!'); \n} \n\n```", "```js\n{ \n  \"compilerOptions\": { \n    \"target\": \"es5\", \n    \"module\": \"commonjs\" \n  }, \n  \"exclude\": [ \n    \"out\", \n    \"node_modules\" \n  ] \n} \n\n```", "```js\n'use strict'; \n\nconst Path = require('path'); \n\nmodule.exports = { \n  entry: './src/index', \n  output: { \n    path: Path.join(__dirname, 'bld'), \n    filename: 'bundle.js' \n  }, \n resolve: { \n    extensions: ['', '.webpack.js', '.web.js', '.ts', '.js'] \n  }, \n  module: { \n    loaders: [ \n      { test: /\\.ts$/, loader: 'ts-loader' } \n    ] \n  } \n}; \n\n```", "```js\nmodule.exports = { \n  ... \n  ts: { \n      transpileOnly: true \n  } \n}; \n\n```", "```js\nmodule.exports = { \n  entry: ['./src/index', './src/bar'], \n  ... \n  plugins: [ \n    new Webpack.optimize.CommonsChunkPlugin({ \n      name: 'common', \n      filename: 'common.js' \n    }) \n  ] \n}; \n\n```", "```js\n$ npm install glob --saved-dev\n\n```", "```js\nconst glob = require('glob'); \n\nmodule.exports = { \n entry: glob \n    .sync('./src/pages/*/*.ts') \n    .filter(path => \n      Path.basename(path, '.ts') === \n      Path.basename(Path.dirname(path)) \n    ), \n  ... \n}; \n\n```", "```js\n$ npm install tslint -g\n\n```", "```js\n$ tslint --init\n\n```", "```js\n$ tslint */src/**/*.ts\n\n```", "```js\n\"scripts\": { \n  \"build-client\": \"cd client && webpack\", \n  \"build-server\": \"tsc --project server\", \n  \"build\": \"npm run build-client && npm run build-server\", \n  \"lint\": \"tslint ./*/src/**/*.ts\", \n  \"test-client\": \"cd client && mocha\", \n  \"test-server\": \"cd server && mocha\", \n  \"test\": \"npm run lint && npm run test-client && npm run test-server\" \n} \n\n```", "```js\n$ git flow init -d\n\n```", "```js\n$ git flow feature start <feature-name>\n\n```", "```js\n$ git flow feature finish <feature-name>\n\n```", "```js\n$ git flow release start <version>\n\n```", "```js\n$ git flow release finish <version>\n\n```", "```js\n$ git flow hotfix start <hotfix-name>\n\n```", "```js\n$ git flow hotfix finish <hotfix-name>\n\n```", "```js\n#!/bin/sh\nnpm run test\n\n```", "```js\n$ npm install pre-commit --save-dev\n\n```", "```js\n{ \n  .. \n  \"script\": { \n    \"test\": \"istanbul cover ...\" \n  }, \n  \"pre-commit\": [\"test\"] \n} \n\n```", "```js\n     $ git remote add origin https://github.com/<username>/<repo>.git\n     $ git push -u origin master\n\n    ```", "```js\nlanguage: node_js \nnode_js: \n  - \"4\" \n  - \"6\" \nbefore_script: \n  - npm run build \n\n```", "```js\n![building status](https://api.travis-ci.org/<username>/<repo>.svg) \n\n```", "```js\n     $ mkdir deployment.git\n     $ cd deployment.git\n     $ git init --bare\n\n    ```", "```js\n     $ cd ../demo-project\n     $ git remote add deployment ../deployment.git\n     $ git push -u deployment master\n\n    ```"]