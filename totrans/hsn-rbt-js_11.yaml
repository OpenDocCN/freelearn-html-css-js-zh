- en: Building a NodeBots Swarm
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建NodeBots集群
- en: Our NodeBots can now sense and display information about the world around them,
    and gather information from the internet for display. Now, it's time to look at
    NodeBots talking to each other. We will also use this chapter to talk about where
    to go from here—JavaScript is available on so many different boards and devices,
    and in so many new and exciting ways!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的NodeBots可以感知并显示周围世界的信息，并从互联网收集信息进行显示。现在，是时候看看NodeBots之间如何交流了。我们还将利用本章讨论从这里开始的方向——JavaScript可以在许多不同的板子和设备上使用，以及许多新的和令人兴奋的方式！
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Project – connecting multiple NodeBots
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目 – 连接多个NodeBots
- en: Expanding your NodeBots knowledge
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展你的NodeBots知识
- en: Continuing on your NodeBots adventure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 继续你的NodeBots冒险
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you can optionally use a second Raspberry Pi with Wireless
    internet access. You can also just use the one you have and we'll pretend it is
    two different Pis. You'll also need your TSL2591 Light Sensor, your Pi Cobbler,
    and a few breadboard wires.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你可以选择使用带有无线互联网访问的第二个Raspberry Pi。你也可以只使用你现有的设备，我们将假装它是两个不同的Pi。你还需要你的TSL2591光传感器、你的Pi
    Cobbler和几根面包板线。
- en: The code for this chapter is available at [https://github.com/PacktPublishing/Hands-On-Robotics-with-JavaScript/tree/master/Chapter11](https://github.com/PacktPublishing/Hands-On-Robotics-with-JavaScript/tree/master/Chapter11).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可在[https://github.com/PacktPublishing/Hands-On-Robotics-with-JavaScript/tree/master/Chapter11](https://github.com/PacktPublishing/Hands-On-Robotics-with-JavaScript/tree/master/Chapter11)找到。
- en: Project – connecting multiple NodeBots
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目 – 连接多个NodeBots
- en: In this project, we'll use an `npm` module that allows us to set up a Raspberry
    Pi broker on a Pi—if you have one Pi, we'll have it talk to itself as if it's
    two separate devices, and if you have a second Pi, we'll have them talk to each
    other.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将使用一个`npm`模块，它允许我们在Pi上设置Raspberry Pi代理——如果你有一个Pi，我们将让它像两个不同的设备一样相互通信，如果你有第二个Pi，我们将让它们相互通信。
- en: Optional – setting up a second Raspberry Pi
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可选 – 设置第二个Raspberry Pi
- en: If you are only using your original Pi, skip this section.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只使用你的原始Pi，请跳过这一部分。
- en: Use the instructions in [Chapter 1](bab2feb9-9667-4f8b-bb2e-1702009b87b4.xhtml), *Setting
    Up Your Development Environment*, to set up your second Pi. You do not need a
    cobbler or any other accessories for this project; if you use a second Pi, you
    just need a good power source and a microSD card set up as stated in [Chapter
    1](bab2feb9-9667-4f8b-bb2e-1702009b87b4.xhtml), *Setting Up Your Development Environment*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[第1章](bab2feb9-9667-4f8b-bb2e-1702009b87b4.xhtml)中的说明，*设置你的开发环境*，来设置你的第二个Pi。你不需要Cobbler或其他任何配件来完成这个项目；如果你使用第二个Pi，你只需要一个良好的电源和一个按照[第1章](bab2feb9-9667-4f8b-bb2e-1702009b87b4.xhtml)中的说明设置的microSD卡，*设置你的开发环境*。
- en: If you are using two Pis, the Pi without the cobbler is the broker Pi, and your
    original Pi with the cobbler is the client Pi.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用两个Pi，没有Cobbler的Pi是代理Pi，而你原始的带有Cobbler的Pi是客户端Pi。
- en: 'If you are using two Pis, you will want to set the hostname of the broker Pi
    so that they don''t collide. To do this, run the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用两个Pi，你将想要设置代理Pi的主机名，以便它们不会冲突。为此，请运行以下命令：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then select Network Options, followed by Hostname with the arrow keys. Set the
    hostname to something you'll remember (I used `nodebotanist-pi-broker.local`).
    Then, save and exit `raspi-config` and reboot the Pi.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用箭头键选择网络选项，然后选择主机名。将主机名设置为你能记住的东西（我使用了`nodebotanist-pi-broker.local`）。然后，保存并退出`raspi-config`，并重新启动Pi。
- en: 'When you want to start a session on the broker Pi, you''ll now use your custom
    hostname; for example, if I want to SSH into my broker Pi, I run the following
    command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想要在代理Pi上启动会话时，你现在将使用你自定义的主机名；例如，如果我想SSH到我的代理Pi，我会运行以下命令：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Setting up your project files and folders
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置你的项目文件和文件夹
- en: 'You''ll want to create two separate project folders for this project: `client`
    and `broker.` Create these folders and run the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要为这个项目创建两个单独的项目文件夹：`client` 和 `broker`。创建这些文件夹并运行以下命令：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the `client` folder, run the following command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在`client`文件夹中，运行以下命令：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the `broker` folder, run the following command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `broker` 文件夹中，运行以下命令：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then, in both folders, create an `index.js` and a `.env` file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在两个文件夹中，创建一个`index.js`和一个`.env`文件。
- en: If you're using one Pi
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你只有一个Pi
- en: 'Move both the `client` and `broker` folders to the Pi, navigate to the `client`
    folder in your Pi SSH session, and run the following commands:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, navigate to the `broker` folder and run the following commands:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, reboot the Pi:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you're using two Pis
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Move the `client` folder to your original Pi, SSH into your original Pi, navigate
    to the `client` folder, and run the following commands:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, move the `broker` folder to the second Pi you set up, SSH into it, navigate
    to the `broker` folder, and run the following commands:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, reboot the broker Pi:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now that we have our project dependencies in place and installed, it's time
    to wire up this project up.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Adding a light sensor to the Pi
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you are using one Pi, wire the light sensor to it. If you are using two
    Pis, wire the light sensor to the client Pi. The following diagram should match
    either your sole Pi or your client Pi:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c2e6ceaa-ae97-4a5c-b1e6-20616c88965b.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: Now we can set up the MQTT broker on the Pi.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Creating an MQTT broker on the Pi
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are using two Pis, carry out this entire section on the broker Pi. If
    you are using one Pi, do all of this on your one Pi.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: We're going to use the Mosca library to set up an MQTT broker on our Pi. The
    `mosca npm` library makes it really easy to set up and start an MQTT broker. All
    we need is a running mongoDB instance (which we took care of in the last step,
    *Setting up light sensor*).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `broker` folder (either on your original or broker Pi), in the `index.js`
    file, we''re going to set up `mosca`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We now have our MQTT broker ready to go! Time to program our client.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Programming the MQTT client – have the Pi Report Home
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In your `client` folder (and your client Pi if you''re using two Pis), open
    up the `index.js` file and write a script to gather light sensor data every time
    it changes with a threshold of `10` (to prevent too many MQTT messages):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, before the `board.on(''ready'')` handler, construct your MQTT client
    connection, and add an `mqttClient.on()` handler that subscribes to the `light`
    topic:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Then, inside the `board.on('ready')` handler, we'll add the code that publishes
    light data to our MQTT broker.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now that we've coded our client, we need to set environment variables and get
    it running.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: If you're using one Pi
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the `client` folder, create a `.env` file, and add the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Make sure to move the `client` and `broker` folders to your Pi one last time.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: If you're using two Pis
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'On the client Pi, in the `client` folder, create a `.env` file with the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Replace `[broker Pi hostname]` with the hostname you created back in the *Setting
    up a Second Raspberry Pi* section.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Move the `client` folder to the client Pi one last time.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Now, it's time to get the code running!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Running our MQTT project
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The instructions are slightly different for the one Pi and two Pi setups, but
    the end result should look the same.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: If you're using one Pi
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'SSH into your Pi, navigate to the `client` folder, and run the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This will cause our client to run in the background and re-start if necessary,
    so we can see the `console.log()` output from our broker. It will also ensure
    that our script is running as root, so that the Johnny-Five code will work properly.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使我们的客户端在后台运行，并在必要时重新启动，这样我们就可以看到经纪人的`console.log()`输出。它还将确保我们的脚本以root用户身份运行，这样Johnny-Five代码才能正常工作。
- en: 'Then, navigate to the `broker` folder, and run the following command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，导航到`broker`文件夹，并运行以下命令：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You should start to see broker messages moving on the console as you change
    the light on the sensor; this is the MQTT client we set up in our `client` folder
    communicating with the MQTT broker on a different port.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你改变传感器上的灯光时，你应该开始在控制台看到经纪人的消息正在移动；这是我们`client`文件夹中设置的MQTT客户端在与不同端口上的MQTT经纪人进行通信。
- en: If you're using two Pis
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你使用两个树莓派
- en: 'SSH into your client Pi, navigate to the `client` folder, and run the following
    command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过SSH连接到你的客户端树莓派，导航到`client`文件夹，并运行以下命令：
- en: '[PRE19]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This will cause our client to run in the background and re-start if necessary,
    so we can see the `console.log()` output from our broker. It also ensures that
    our script is run as root, so that the Johnny-Five code will work properly.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使我们的客户端在后台运行，并在必要时重新启动，这样我们就可以看到经纪人的`console.log()`输出。它还确保我们的脚本以root用户身份运行，以便Johnny-Five代码能够正常工作。
- en: 'Then, SSH into your broker Pi, navigate to the `broker` folder, and run the
    following command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过SSH连接到你的经纪人树莓派，导航到`broker`文件夹，并运行以下命令：
- en: '[PRE20]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: You should start to see broker messages moving through on the console as you
    change the light on the sensor; this is the two Pis speaking to each other using
    MQTT! Your client Pi is publishing messages to the broker, which `console.log()`
    them, but you could also connect with other clients that use this data!
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在传感器上改变灯光时，你应该开始在控制台看到经纪人的消息正在移动；这是两个树莓派正在使用MQTT相互通信！你的客户端树莓派正在向经纪人发布消息，它通过`console.log()`记录这些消息，但你也可以连接到使用这些数据的其他客户端！
- en: You've now built the beginning of your first NodeBots swarm! Now it's time to
    take a peek at the wide world of NodeBots that falls outside the scope of this
    book.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经构建了你第一个NodeBots集群的开端！现在是时候看看这本书范围之外的NodeBots的广阔世界了。
- en: Expanding your NodeBots knowledge
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展你的NodeBots知识
- en: The NodeBots universe is huge and expanding everyday! In fact, we've only really
    started exploring the world of Johnny-Five.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: NodeBots宇宙非常庞大，每天都在扩展！实际上，我们只是刚刚开始探索Johnny-Five的世界。
- en: Using Johnny-Five on other boards
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在其他板子上使用Johnny-Five
- en: 'The Raspberry Pi we used in this book is just one of over 40 boards supported
    by Johnny-Five. Just a peek at the platform support page of the Johnny-Five website
    makes this clear:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中我们使用的树莓派只是Johnny-Five支持的40多块板子中的一块。只需浏览一下Johnny-Five网站的平台支持页面，就可以清楚地看到这一点：
- en: '![](img/dd677979-9ef0-4cf5-9bd2-871f53e97a2e.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd677979-9ef0-4cf5-9bd2-871f53e97a2e.png)'
- en: 'The best news is that *the code you''ve written in this book can be transferred
    to most of the boards pictured here.* There are only two steps to porting your
    code: changing the pin numbers and making sure the board you are switching to
    offers the functionality you need.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 最棒的消息是，你在这本书中编写的代码可以转移到这里展示的大多数板子上。将你的代码移植到其他板子只需要两个步骤：更改引脚号码，并确保你切换到的板子提供了你需要的功能。
- en: Figuring out pin numbers
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定引脚号码
- en: Changing pin numbers means you need to know what pins on your new board complete
    which tasks. For instance, if you were moving your I2C LCD from the Pi to the
    Arduino Uno, you'd need to know where the SDA and SCL pins are located on the
    Uno.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 改变引脚号码意味着你需要知道你新板上的哪些引脚完成哪些任务。例如，如果你正在将I2C LCD从树莓派移动到Arduino Uno，你需要知道SDA和SCL引脚在Uno上的位置。
- en: 'The best way to get this information is to search the internet for [board name]
    pinout, and searching for an image such as the following for the Uno:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 获取这些信息最好的方式是在互联网上搜索[板子名称]引脚图，并为Uno搜索如下所示的图片：
- en: '![](img/17e4fc81-e082-474f-9d77-1ccdcaf7d730.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17e4fc81-e082-474f-9d77-1ccdcaf7d730.png)'
- en: A pinout of the ARDUINO Board and ATMega328PU ([https://commons.wikimedia.org/wiki/File:Pinout_of_ARDUINO_Board_and_ATMega328PU.svg](https://commons.wikimedia.org/wiki/File:Pinout_of_ARDUINO_Board_and_ATMega328PU.svg)) by pighixxx is
    licensed under *Creative Commons Attribution-Share Alike 4.0 International* ([https://en.wikipedia.org/wiki/Creative_Commons](https://en.wikipedia.org/wiki/Creative_Commons)).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Then, you can match the pins up from there.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Checking the platform support page
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Some boards support protocols and peripherals that others do not: the Arduino
    Uno has analog-in pins while the Pi does not, but the Pi has USB support while
    the Uno does not. Luckily, the Johnny-Five documentation, under *Platform Support*,
    tells you what is and isn''t supported. The Uno is shown here as an example:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/497e0a67-33a8-4139-a598-868a89747299.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: Now that you've got a glimpse at where you can continue your adventure within
    Johnny-Five, let's take a look at the even larger NodeBots world outside.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Other node robotics platforms
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There's a wide world of NodeBots out there, and this list is by no means exhaustive.
    But let's take our first step into that wider world.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: The Tessel 2
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Tessel project sought to create a Node.js native robotics project at a
    relatively low cost but with a great user experience, and they really have done
    a great job (disclaimer: I''m on the Tessel project team as a contributing member).
    In hardware terms, it''s much like a Raspberry Pi—it runs Node.js on top of Linux;
    but not only is it a different form of Linux, the `tessel-cli` abstracts away
    much of the `ssh-ing` and Linux commands that we had to do for the Pi. The Tessel
    2 is the current model, and it supports Johnny-Five right out of the box. To learn
    more, visit the Tessel project website at [https://tessel.io/](https://tessel.io/).'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0d22d755-cab7-4c7b-89ed-940692674220.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: Image used with open-source license from https://github.com/tessel/project
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: The Espruino ecosystem
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are also bots outside the Johnny-Five ecosystem that run versions of JavaScript
    instead of full Node.js. One very popular set is the Espruino project boards.
    There's the Espruino main board, Espruino Wi-Fi, the Espruino Pico, Puck.js, Pixl.js,
    and an MDBT42Q breakout available at the time of writing. The Espruino project
    is headed up by Gordon Williams, you can find the boards at [https://www.adafruit.com/?q=Espruino](https://www.adafruit.com/?q=Espruino),
    while further information is available at [http://www.espruino.com/](http://www.espruino.com/).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f1caeb49-3347-4215-976c-ac324e10b46b.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
- en: 'The Espruino family holds a dear place in my heart, as it powered one of my
    first ever NodeBots, a light-up dress:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e3af641d-7bf6-453b-baed-bc4c3af25819.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: The author giving a panel talk at NodeConf US 2014 in her light-up dress shown
    in the above image
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Programming graphically with Node-RED
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Node-RED is a project that allows you to graphically program using blocks and
    write blocks using Node.js. Its graphical interface makes many tasks easier to
    grasp for younger soon-to-be programmers:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED是一个项目，它允许你使用块进行图形编程，并使用Node.js编写块。它的图形界面使许多任务对年轻的未来程序员来说更容易理解：
- en: '![](img/7f0c4b56-c4d9-4a88-bf81-c2d16719dee7.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f0c4b56-c4d9-4a88-bf81-c2d16719dee7.png)'
- en: Image used with an open-source license from https://github.com/node-red/node-red
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 使用开源许可从https://github.com/node-red/node-red获取的图片
- en: Again, this list just scratches the surface of the ever-burgeoning NodeBots
    world, and I encourage you to explore and find what works for you!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这个列表只是触及了不断扩大的NodeBots世界的表面，我鼓励你们去探索并找到适合你们的方法！
- en: Continuing on your NodeBots adventure
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 继续你的NodeBots冒险
- en: Here are a few pieces of advice I've curated over the years to help you continue
    on your NodeBots journey; I hope they help you and I can't wait to see what you
    build!
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些我在过去几年中整理的建议，希望能帮助你们继续NodeBots之旅；我希望它们能帮到你们，我迫不及待地想看看你们会构建什么！
- en: Figuring out what to build
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定要构建什么
- en: 'I tend to keep a note file open on my phone of cool things I''d like to have.
    Then, I go through that list and think: *can I build this?* I make sure not to
    consider whether I can buy it straight-up right away—sometimes it''s more fun
    to build the thing you want instead of just buying it, and about 90% of the time,
    you end up being able to build a project that suits you instead of making do with
    a store-bought item that doesn''t quite do everything you need.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我倾向于在我的手机上打开一个笔记文件，记录我想拥有的酷东西。然后，我会浏览这个清单，思考：*我能构建这个吗？* 我确保不要考虑是否可以立即直接购买——有时候构建你想要的东西比直接购买更有趣，而且大约90%的时间，你最终能构建一个适合你的项目，而不是将就使用商店里不完全满足你需求的成品。
- en: Reaching out to the NodeBots community
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与NodeBots社区取得联系
- en: Join us on Gitter at [https://gitter.im/rwaldron/johnny-five](https://gitter.im/rwaldron/johnny-five).
    We love to help troubleshoot problems and answer questions! When you see someone
    doing NodeBots on Twitter, Reddit, and so on, make sure to reach out! Collaboration
    brings solutions and innovation, and it's a case of the more the merrier in the
    Johnny-Five and NodeBots community!
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的Gitter群组[https://gitter.im/rwaldron/johnny-five](https://gitter.im/rwaldron/johnny-five)。我们乐于帮助解决问题和回答问题！当你看到有人在Twitter、Reddit等地方做NodeBots时，确保与他们取得联系！合作带来解决方案和创新，在Johnny-Five和NodeBots社区中，人越多越有益！
- en: Where to go to learn more about Electronics
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习更多关于电子的地方
- en: 'Here''s a small selection of books that help teach electronics and related
    skills to those of you who aren''t electrical engineers; I find them super helpful
    for when I have a hardware problem on my projects:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些书籍的小选集，可以帮助那些不是电气工程师的人学习电子和相关技能；我发现它们在我项目遇到硬件问题时非常有帮助：
- en: '*The Adafruit Guide to Excellent Soldering* ([https://learn.adafruit.com/adafruit-guide-excellent-soldering/tools](https://learn.adafruit.com/adafruit-guide-excellent-soldering/tools)).
    If you don''t know how to solder, or you''ve just been winging it, give this a
    read to make sure your soldering isn''t what''s stopping your project from working.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《*Adafruit优秀焊接指南*》（[https://learn.adafruit.com/adafruit-guide-excellent-soldering/tools](https://learn.adafruit.com/adafruit-guide-excellent-soldering/tools)）。如果你不知道如何焊接，或者你只是随意尝试，读一读这本书，确保你的焊接技术不是阻碍你的项目工作的原因。
- en: '*Practical Guide to Electronics for Inventors, Fourth Edition*, by Paul Scherz.
    This is a thick book and a dense read, but is a great reference work if you want
    to learn how electronic components work without doing differential equations.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《*发明家电子实用指南，第四版*》，作者Paul Scherz。这是一本厚重的书，内容密集，但如果你想学习电子组件的工作原理而不需要做微分方程，这是一本很好的参考书。
- en: '*Getting Started in Electronics*, by Forrest M Mims III. Do you need something
    a bit lighter than the Practical Guide? This book is a seminal work in hobbyist
    electronics, and this series of project notebooks teaches you how to use components
    to build fun and educational projects.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《*电子入门*》，作者Forrest M Mims III。你需要一本比《实用指南》更轻便的书吗？这本书是业余电子爱好者的经典之作，这个项目笔记本系列教你如何使用组件构建有趣且富有教育意义的项目。
- en: Summary
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we completed our NodeBots journey together by learning how
    to get our NodeBots to talk to each other (or themselves). Then, we delved into
    the wider world of Johnny-Five and NodeBots. Finally, we looked at good reads
    to continue your quest for knowledge regarding electronics and related skills.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过学习如何让我们的NodeBots相互交流（或与自己交流）共同完成了NodeBots之旅。然后，我们深入了解了Johnny-Five和NodeBots的更广阔世界。最后，我们推荐了一些优秀的读物，以继续你在电子和相关技能方面的知识探索之旅。
- en: I love to see what my readers build—please feel free to reach me at `@nodebotani.st`
    or `@nodebotanist` on twitter to show me what you have come up with—even if it's
    a blinking LED and you're just proud to show it, I'm always happy to see it.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢看到读者们所创造的成果——请随时通过`@nodebotani.st`或`@nodebotanist`在推特上联系我，向我展示您的作品——即使它只是一个闪烁的LED灯，您只是自豪地想展示它，我也总是很高兴看到。
- en: Thank you so much for reading. I appreciate my readers and wish you all the
    best!
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢您的阅读。我非常感激我的读者，并祝愿大家一切顺利！
