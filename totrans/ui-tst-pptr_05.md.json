["```js\nconst jobs = await page.$$('.jobs li');\nexpect(jobs).not.be.empty;\n```", "```js\nawait page.waitForSelector('.jobs li');\nconst jobs = await page.$$('.jobs li');\nexpect(jobs).not.be.empty;\n```", "```js\nconst title = await page.waitForSelector('#hireme .header .grid--cell.fl1');\nexpect(await title.evaluate(e => e.innerText)).to.contain('job');\n```", "```js\nawait loginModel.go();\nawait loginModel.login(config.username, config.password);\nawait page.waitForResponse(config.productImage);\n```", "```js\nawait loginModel.go();\nconst promise = page.waitForResponse(config.productImage);\nawait loginModel.login(config.username, config.password);\nawait promise;\n```", "```js\nconst promise = page.waitForRequest(r => r.url().includes('redux-dal'));\npage.goto('https://weather.com/');\nconst request = await promise;\nconst json = JSON.parse(request.postData());\nexpect(json[0].params.geocode).not.be.empty;\n```", "```js\nawait page.goto('https://www.packtpub.com/');\nconst search = await page.$('#search');\nawait search.type('Puppeteer');\nawait Promise.all([\n    page.waitForNavigation(),\n    search.press('Enter')\n]);\nconst textResult = await page.$eval('[data-ui-id=\"page-title-wrapper\"]', e => e.innerText);\nexpect(textResult).to.be.equal(`Search results for: 'Puppeteer'`);\n```", "```js\npage.on('response', response => \n  console.log('Response URL: ' + response.url()));\nawait page.goto('https://www.packtpub.com/');\n```", "```js\npage.on('response', response => {\n  if(response.request().resourceType() === 'image') {\n    console.log('Image URL: ' + response.url());\n  }\n});\nawait page.goto('https://www.packtpub.com/');\n```", "```js\nconst listenToImages = response => {\n  if(response.request().resourceType() === 'image') {\n    console.log('Image URL from function: ' + response.url());\n  }\n};\npage.on('response', listenToImages);\n```", "```js\npage.removeListener('response', listenToImages);\n```", "```js\npage.once('response', r => console.log(r.url()));\n```", "```js\nawait loginModel.go();\nconst promise = new Promise(resolve => \n  page.on('response', r => {\n    if (r.url() === config.productImage) {\n      resolve(r);\n    }\n  }));\nawait loginModel.login(config.username, config.password);\nawait promise;\n```", "```js\nconst [newPage] = Promise.all([\n  new Promise(resolve => page.once('popup', resolve)),\n  page.click('someselector')\n]);\n```", "```js\nconst [newPage] = Promise.all([\n  new Promise(resolve => browser.once('targetcreated', resolve )),\n  page.click('someselector')\n]);\n```"]