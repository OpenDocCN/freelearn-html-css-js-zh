["```js\nExt.define('Examples.plugin.ChartDownload', {\n\n  alias : 'plugin.chartdownload',\n\n  config : {\n    chartXtype: 'chart',\n    downloadButtonText: 'Download as image',\n    chartNotFoundErrorMsg: 'No valid chart type found!',\n    errorText: 'Error'\n  }\nâ€¦\n```", "```js\ninit : function(container) {\n\n  this.container = container;\n\n  if (!container.rendered) {\n    container.on('afterrender', this.handleAfterRender, this);\n  } else {\n    this.handleAfterRender();\n  }\n\n}\n```", "```js\nhandleAfterRender : function(container) {\n\n  this.chart = this.container.down(this.getChartXtype());\n\n  if(!Ext.isDefined(this.chart) || this.chart ==null){\n    Ext.Function.defer(function(){\n      this.showErrorMessage({\n        title: this.getErrorText(),\n        text: this.getChartNotFoundErrorMsg()\n      })\n    }, 1000, this);\n  }\n\n  else{\n\n    this.addDownloadButton();\n  }\n\n},\n```", "```js\naddDownloadButton: function(){\n\n  var toolbar = this.getToolbar(),\n  itemsToAdd = [],\n  placeholder = '->',\n  button = {\n    iconCls : 'icon-export',\n    text : this.getDownloadButtonText(),\n    handler: this.saveChart,\n    scope : this\n  };\n\n  if(toolbar.items.items.length === 0){\n    itemsToAdd.push(placeholder);\n  }\n\n  itemsToAdd.push(button);\n  toolbar.add(itemsToAdd); \n}\n```", "```js\ngetToolbar: function(){\n\n  var dockedItems = this.container.getDockedItems(),\n  toolbar = null,\n  hasToolbar = false;\n\n  if(dockedItems.length>0){\n    Ext.each(dockedItems, function(item){\n      if(item.xtype ==='toolbar' && item.dock == 'bottom'){\n        hasToolbar = true;\n        toolbar = item;\n        return false;\n      }\n    });\n  }\n\n  if(!hasToolbar){\n    toolbar = this.container.addDocked({\n      xtype: 'toolbar',\n      dock: 'bottom'\n    })[0];\n  }\n\n  return toolbar;\n\n}\n```", "```js\nsaveChart: function(){\n\n  this.chart.save({\n    type : 'image/png'\n  });\n\n}\n```", "```js\nExt.define('Examples.view.chartdownloadplugin.ChartDownloadPluginWindow', {\n  extend : 'Ext.Window',\n  alias : 'widget.chartdownloadpluginwindow',\n  requires : ['Examples.view.chartdownloadplugin.Chart',\n             'Examples.plugin.ChartDownload'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      modal : true,\n      width : 400,\n      height : 300,\n      title : 'ChartDownloadPlugin',\n      layout : {\n        type:'fit'\n      },\n      plugins:['chartdownload'],\n        items : [Ext.create('Examples.view.chartdownloadplugin.Chart')],\n      buttons : [{\n        text : 'OK',\n        handler : function() {\n          this.close();\n        },\n        scope : this\n      }]\n    });\n    this.callParent(arguments);\n  }\n});\n```", "```js\nExt.define('Examples.view.chartdownloadplugin.ChartDownloadPluginWindow', {\n  extend : 'Ext.Window',\n  alias : 'widget.chartdownloadpluginwindow',\n  requires : ['Examples.view.chartdownloadplugin.Chart',\n          'Examples.plugin.ChartDownload'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      modal : true,\n      width : 400,\n      height : 300,\n      title : 'ChartDownloadPlugin',\n      layout : {\n        type:'fit'\n      },\n      items : [{\n        xtype:'panel',\n        plugins:['chartdownload'],\n        layout:'fit',\n        items:[Ext.create('Examples.view.chartdownloadplugin.Chart')]\n      }],\n      buttons : [{\n        text : 'OK',\n        handler : function() {\n          this.close();\n        },\n        scope : this\n      }]\n    });\n    this.callParent(arguments);\n\n  }\n});\n```"]