- en: Chapter 7. Accessing the Device Sensors and Locations API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。访问设备传感器和位置API
- en: '*The use of device sensors opens the doors to sophisticated apps, which may
    improve user experience and enhance the capabilities of a modern app. It''s very
    important for a mobile developer to understand the power and limitations of device
    sensors in order to effectively use the APIs provided by the PhoneGap framework.
    Location data allows a mobile developer to tag every piece of information with
    the device''s position. In this chapter, you will also learn to couple the Location
    API with your app.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用设备传感器为复杂应用打开了大门，这些应用可能会改善用户体验并增强现代应用的功能。对于移动开发者来说，了解设备传感器的功能和限制，以便有效地使用PhoneGap框架提供的API，是非常重要的。位置数据允许移动开发者将每条信息与设备的地理位置标记。在本章中，您还将学习如何将位置API与您的应用结合使用。*'
- en: 'In this chapter, you will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将：
- en: Learn which are the most common device sensors and how to use them in order
    to enhance the user experience
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习最常见的设备传感器及其如何用于增强用户体验
- en: Get an overview of the device orientation and device motion events using the
    accelerometer
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用加速度计了解设备方向和设备运动事件概述
- en: Learn how to work with device sensors directly with JavaScript
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何直接使用JavaScript与设备传感器协同工作
- en: Learn how to use the Compass API of PhoneGap
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用PhoneGap的指南针API
- en: Learn about geolocation and how its data is available in the device
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解地理位置及其数据在设备中的可用性
- en: Learn how to use the PhoneGap Geolocation API and how to integrate the Google
    Maps API in an app
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用PhoneGap地理位置API以及如何在应用中集成Google Maps API
- en: Location data allows a mobile developer to tag every piece of information with
    the device's position. This kind of meat tagging enables the use of very contextualized
    apps. The PhoneGap framework provides a Geolocation API that is simple to use,
    easy to understand, and very powerful.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 位置数据允许移动开发者将每条信息与设备的地理位置标记。这种基于内容的标记使得使用非常具体的应用成为可能。PhoneGap框架提供了一个简单易用、易于理解且功能强大的地理位置API。
- en: Introducing device sensors
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍设备传感器
- en: 'Humans have senses (touch, hear, smell, and so on); a phone has digital "senses":
    touch, geolocation, orientation, and motion. A sensor is a device component that
    measures a physical quantity and converts it into a signal that is understandable
    to software. Modern mobile phones come with a variety of sensors that can support
    users when completing their daily tasks. By tapping into a device sensor, you
    can enhance the end user experience and develop sophisticated apps.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 人类有感官（触觉、听觉、嗅觉等）；手机有数字“感官”：触觉、地理位置、方向和运动。传感器是测量物理量并将其转换为软件可理解的信号的设备组件。现代智能手机配备了各种传感器，可以在用户完成日常任务时提供支持。通过访问设备传感器，您可以增强最终用户的使用体验并开发复杂的应用。
- en: Sensors can be hardware-based or software-based. Hardware-based sensors are
    physical components built into a handset or tablet device. They derive their data
    by directly measuring specific environmental properties such as acceleration,
    geomagnetic field strength, or angular change. Software-based sensors are not
    physical devices, although they mimic hardware-based sensors.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器可以是基于硬件的或基于软件的。基于硬件的传感器是嵌入到手机或平板电脑中的物理组件。它们通过直接测量特定的环境属性（如加速度、地磁场强度或角度变化）来获取数据。基于软件的传感器不是物理设备，尽管它们模仿基于硬件的传感器。
- en: Typical device sensors are the **accelerometer**, **gyroscope**, **compass**,
    **barometer**, **orientation sensor**, and so on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的设备传感器包括**加速度计**、**陀螺仪**、**指南针**、**气压计**、**方向传感器**等。
- en: 'Not all devices, nor their operating systems support the same sensors, so you
    have to know which devices you want to target before considering which sensors
    to use in your app. The device sensors typically are divided into the following
    categories:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有设备及其操作系统都支持相同的传感器，因此在考虑在您的应用中使用哪些传感器之前，您必须知道您想要针对哪些设备。设备传感器通常分为以下几类：
- en: Motion sensors
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运动传感器
- en: Environmental sensors
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境传感器
- en: Position sensors
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 位置传感器
- en: The **motion sensors** measure acceleration forces and rotational forces along
    the three axes. Hardware parts such as the accelerometer, gravity sensors, gyroscopes,
    and rotational vector sensors belong to this category. The **environmental sensors**
    measure various environmental parameters such as ambient air temperature and pressure,
    illumination, and humidity. The barometers, photometers, and thermometers belong
    to this category of sensors. The **position sensors** measure the physical position
    of a device.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**运动传感器**测量沿三个轴的加速度力和旋转力。属于这一类别的硬件部件包括加速度计、重力传感器、陀螺仪和旋转矢量传感器。**环境传感器**测量各种环境参数，如环境空气温度和压力、照明和湿度。气压计、光度计和温度计属于这类传感器。**位置传感器**测量设备的物理位置。'
- en: As already mentioned, each operating system offers different sensors. From a
    developer's point of view, this means that to work on different platforms, you
    have to understand how sensors work on each one. When working with PhoneGap, you
    can safely use the **Accelerometer** and **Compass** APIs across different platforms.
    Furthermore, you can rely on the **onboard browser** capabilities to get additional
    sensor information such as the device orientation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，每个操作系统都提供不同的传感器。从开发者的角度来看，这意味着要在不同的平台上工作，你必须了解每个平台上传感器的工作方式。当使用PhoneGap时，你可以安全地在不同平台上使用**加速度计**和**指南针**API。此外，你可以依赖**内置浏览器**的功能来获取额外的传感器信息，例如设备方向。
- en: The accelerometer is actually made up of three accelerometers and each one measures
    the changes in velocity (that is, linear acceleration) overtime along the linear
    path on the axes *x*, *y*, and *z*. Combining the data of the three accelerometers,
    you can get the device movement and orientation.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 加速计实际上由三个加速度计组成，每个加速度计都测量沿轴 *x*、*y* 和 *z* 的线性路径上的速度变化（即线性加速度）随时间的变化。结合三个加速度计的数据，你可以得到设备的运动和方向。
- en: The gyroscope is always part of the motion sensors and it measures the rate
    of rotation around the three axes, usually **roll**, **pitch**, and **yaw**.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 陀螺仪始终是运动传感器的一部分，它测量围绕三个轴的旋转速率，通常是**翻滚**、**俯仰**和**偏航**。
- en: The magnetometer measures the strength of the magnetic field surrounding the
    device and in the absence of any strong local fields, these measurements will
    refer to the magnetic field of the Earth. In this way, the device is able to determine
    its **heading** with respect to the geomagnetic North Pole; using the heading
    values, it's possible to determine the yaw of the device too. Magnetic heading
    updates are available even if the user has switched off location updates in the
    settings application; the reported values are positive numbers from **0** to **360**.
    The real heading of the user, when they are holding the device in landscape mode,
    is the reported heading plus 90 degrees.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 磁力计测量设备周围磁场以及在没有任何强局部场的情况下，这些测量将参照地球的磁场。这样，设备能够确定其相对于地磁北极的**航向**；使用航向值，也可以确定设备的**偏航**。即使用户在设置应用中关闭了位置更新，磁航向更新也是可用的；报告的值是从**0**到**360**的正数。当用户以横向模式握持设备时，用户的实际航向是报告的航向加上90度。
- en: The iOS platform provides all the common sensors a developer can expect such
    as accelerometer, magnetometer, gyroscope, and the proximity sensor.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: iOS平台提供了开发者可以期待的所有常见传感器，例如加速度计、磁力计、陀螺仪和接近传感器。
- en: 'The Android platform provides four additional sensors that allows you to monitor
    various environmental properties: ambient **humidity**, **luminance**, ambient
    **pressure**, and ambient **temperature**. All the sensors are hardware-based
    and are available only if a manufacturer has built them into a device.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Android平台提供了四个额外的传感器，允许你监控各种环境属性：环境**湿度**、**亮度**、环境**压力**和环境**温度**。所有传感器都是基于硬件的，并且只有当制造商将它们集成到设备中时才可用。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find a complete demo of the Android sensors on the Google Play store;
    just search and install the *Android Sensor Box* app.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Google Play商店找到Android传感器的完整演示；只需搜索并安装*Android Sensor Box*应用程序。
- en: The Windows Phone 7.5/8 platform offers wide support for sensors. You can use
    the **Inclinometer** sensor to detect the pitch, roll, and yaw of the device or
    you can create complex 3D apps using the **Quaternion** sensor (quaternion is
    the quotient of two directed lines in a three-dimensional space). For a complete
    overview of the Windows Phone sensor APIs, please refer to the online documentation
    at [http://msdn.microsoft.com/library/windows/apps/windows.devices.sensors](http://msdn.microsoft.com/library/windows/apps/windows.devices.sensors).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 7.5/8平台对传感器提供了广泛的支持。你可以使用**倾斜仪**传感器来检测设备的俯仰、滚转和偏航，或者你可以使用**四元数**传感器（四元数是三维空间中两条有向线的商）来创建复杂的3D应用程序。有关Windows
    Phone传感器API的完整概述，请参阅[http://msdn.microsoft.com/library/windows/apps/windows.devices.sensors](http://msdn.microsoft.com/library/windows/apps/windows.devices.sensors)在线文档。
- en: 'The location capabilities of a device rely on several sensors called position
    sensors. Devices normally use multiple positioning methods to provide different
    granularities of location data. The sources of position data vary in terms of
    accuracy, startup time, and power signature, and include the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 设备的位置能力依赖于几个被称为位置传感器的传感器。设备通常使用多种定位方法来提供不同粒度的位置数据。位置数据的来源在准确性、启动时间和功耗特征方面有所不同，包括以下内容：
- en: GPS
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPS
- en: A-GPS
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A-GPS
- en: Cell tower triangulation
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 细胞塔三角测量
- en: Wi-Fi triangulation
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wi-Fi三角测量
- en: IP address
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址
- en: With the continuous evolution of sensors, end user expectations are growing
    and the quality of the apps available on the market is increasing.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 随着传感器的持续发展，最终用户的需求在增长，市场上可用的应用程序质量也在提高。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Lapka Electronics** released a set of sensors and an app that is able to
    translate environmental data to read values easily. Using their sensors and app,
    you can measure electromagnetic pollution, humidity, amounts of nitrates in raw
    foods and drinking water, and so on. More information about these sensors is available
    online at [http://mylapka.com/](http://mylapka.com/).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lapka Electronics**发布了一套传感器和应用程序，能够将环境数据转换为易于读取的数值。使用他们的传感器和应用程序，你可以测量电磁污染、湿度、原始食品和饮用水中硝酸盐的含量等。有关这些传感器的更多信息可在[http://mylapka.com/](http://mylapka.com/)在线获取。'
- en: Sensors and human-computer interaction
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传感器和人与计算机的交互
- en: Sensors evolved and are still evolving very fast and are influencing how creative
    people are designing apps. The new generation of apps rely on voice commands,
    gestures, and more in order to allow the user to control apps in a more intuitive
    way. An app is now able to perceive the user's intentions based on the sensor
    data it collects. The use of sensors to make apps (and computers) more intuitive
    to control is known as **perceptual computing**. This initiative is led by Intel
    and has various applications including video conferencing, gaming, and so on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器的发展非常迅速，并且仍在快速发展，影响着创意人士如何设计应用程序。新一代应用程序依赖于语音命令、手势等，以便用户能够以更直观的方式控制应用程序。现在，应用程序能够根据收集到的传感器数据感知用户意图。使用传感器使应用程序（和计算机）更易于控制的做法被称为**感知计算**。这一倡议由英特尔领导，包括视频会议、游戏等多种应用。
- en: By contrast, **augmented reality** is about extending how humans interface with
    the physical world through computers. Using an augmented reality interface, you
    can add additional information to the external environment and create amazing
    and useful apps. On mobile devices, the implementation of an augmented reality
    application heavily depends on the sensors on the devices, such as video cameras
    and orientation sensor.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，**增强现实**是关于通过计算机扩展人类与物理世界的交互方式。使用增强现实界面，你可以向外部环境添加更多信息，并创建令人惊叹且有用的应用程序。在移动设备上，增强现实应用程序的实现高度依赖于设备上的传感器，例如视频摄像头和方向传感器。
- en: A nice example of the kind of interactions you can reach through sensors is
    an app for iOS named **Car Finder**. The app stores the position of a car when
    the user takes a picture of it and then provides to the user the information needed
    to find where he/she had parked the car.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过传感器可以实现的交互类型的一个很好的例子是iOS上名为**Car Finder**的应用程序。当用户拍照时，应用程序会存储汽车的位置，然后向用户提供找到他/她停车位置所需的信息。
- en: The capability to use sensors and the data they return is increasingly paramount
    for mobile developers. The sensors supported by PhoneGap are limited, but PhoneGap
    is simply a wrapper that makes it easier to separate your presentation layer from
    the native device code. For this reason, you can start to write additional native
    code around the PhoneGap wrapper to extend its capabilities.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于移动开发者来说，使用传感器及其返回的数据的能力越来越重要。PhoneGap支持的传感器有限，但PhoneGap只是一个包装器，使得将你的表示层与原生设备代码分离变得更容易。因此，你可以在PhoneGap包装器周围开始编写额外的原生代码来扩展其功能。
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An interesting resource on sensor development is available on the Microsoft
    website at [http://research.microsoft.com/en-us/groups/sendev/](http://research.microsoft.com/en-us/groups/sendev/),
    where you can find papers and resources to help you get started with sensors.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft网站上有一个关于传感器开发的有趣资源，网址为[http://research.microsoft.com/en-us/groups/sendev/](http://research.microsoft.com/en-us/groups/sendev/)，在那里你可以找到帮助你开始使用传感器的论文和资源。
- en: Accelerometer
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加速度计
- en: The PhoneGap Accelerometer API allows you to detect the device movement change
    values relative to device orientation. Note that the accelerometer detects the
    values as a delta movement relative to the current device position. Even more
    important, it takes into consideration the effect of gravity (that is, *9.81 m/s*^(*2*)),
    so that when a device is lying flat on a table facing up, the value returned should
    be *x = 0*, *y = 0*, and *z = 9.81*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap加速度计API允许你检测设备相对于设备方向的运动变化值。请注意，加速度计将值检测为相对于当前设备位置的增量运动。更重要的是，它考虑了重力效应（即*9.81
    m/s*^(*2*)），因此当设备平放在桌子上朝上时，返回的值应该是*x = 0*，*y = 0*，和*z = 9.81*。
- en: 'As with any other plugin, you have to install the plugin before you can use
    it in your project. The plugin can be added to your project using the following
    command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他插件一样，在使用项目之前，你必须先安装该插件。可以使用以下命令将插件添加到项目中：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the plugin is installed on the project, a `navigator.Accelerometer` global
    object, is created and it is available to use once the `deviceready` event is
    fired. However, it is recommended that you still check for its presence before
    using it:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦插件安装到项目中，就会创建一个`navigator.Accelerometer`全局对象，并在`deviceready`事件触发后可用。然而，建议在使用之前仍然检查其存在：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can detect the device acceleration data using the `getCurrentAcceleration`
    method or by setting up a watcher through the `watchAcceleration` method. Both
    methods are available on the `navigator.accelerometer` object and accept similar
    arguments.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`getCurrentAcceleration`方法或通过`watchAcceleration`方法设置监视器来检测设备加速度数据。这两种方法都在`navigator.accelerometer`对象上可用，并接受类似的参数。
- en: The `getCurrentAcceleration` method accepts a success and a failure callback
    function as an argument and doesn't return anything. The `watchAcceleration` method
    accepts an additional argument in order to define the options and return a reference
    to the current watcher.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`getCurrentAcceleration`方法接受一个成功和失败回调函数作为参数，并且不返回任何内容。`watchAcceleration`方法接受一个额外的参数，用于定义选项并返回当前监视器的引用。'
- en: 'In order to constantly watch the acceleration data, you have to define the
    frequency at which you want to recover data and store the value returned by the
    `watchAcceleration` method in a variable:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了持续监控加速度数据，你必须定义你想要恢复数据的频率，并将`watchAcceleration`方法返回的值存储在一个变量中：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `onSuccess` handler receives an `Acceleration` object as an argument, accessing
    its property and making it possible to read the acceleration on each axis:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`onSuccess`处理程序接收一个`Acceleration`对象作为参数，访问其属性，使得能够读取每个轴上的加速度：'
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The failure handler doesn''t receive any argument, but it''s pretty useful
    to handle possible errors when accessing the device''s accelerometer:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 失败处理程序不接收任何参数，但在处理访问设备加速度计时可能出现的错误时非常有用：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In order to stop watching the accelerometer data, it''s sufficient to call
    the `clearWatch` method defined on the `accelerator` object, passing the reference
    to the variable previously used to store the result of the `watchAcceleration`
    method:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了停止监控加速度计数据，只需调用定义在`accelerator`对象上的`clearWatch`方法，并传递之前用于存储`watchAcceleration`方法结果的变量引用即可：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This method doesn't accept any additional handler.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法不接受任何额外的处理程序。
- en: Tip
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: All the sensor APIs of PhoneGap work in a similar way; you will always have
    to use a `getCurrentSENSOR` and a `watchSENSOR` method (where `SENSOR` is the
    name of the sensor) to obtain data from the sensor. In order to stop watching
    a sensor, you will always use the `clearWatch` method.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap 的所有传感器 API 都以类似的方式工作；您将始终需要使用 `getCurrentSENSOR` 和 `watchSENSOR` 方法（其中
    `SENSOR` 是传感器的名称）从传感器获取数据。为了停止监视传感器，您将始终使用 `clearWatch` 方法。
- en: Detecting shakes
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检测晃动
- en: Using the information recovered from the accelerometer API, it's possible to
    understand whether the user is shaking the device.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用从加速度计 API 恢复的信息，可以了解用户是否在晃动设备。
- en: Device orientation events
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设备方向事件
- en: The cordova-plugin-device-motion plugin only supports access to the acceleration
    information. In order to handle the orientation changes, you have to rely on the
    JavaScript APIs of the target platform browser. When you want to update the user
    interface when the device orientation changes, you have to use CSS media queries;
    any other business logic can be handled using JavaScript due to the fact that
    PhoneGap uses the web view to render the app user interface.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: cordova-plugin-device-motion 插件仅支持访问加速度信息。为了处理方向变化，您必须依赖于目标平台浏览器的 JavaScript
    API。当您想要在设备方向改变时更新用户界面时，您必须使用 CSS 媒体查询；任何其他业务逻辑都可以使用 JavaScript 处理，因为 PhoneGap
    使用网页视图来渲染应用的用户界面。
- en: 'Using JavaScript, you can set up a listener for the `orientationchange` event
    and another listener for the `deviceorientation` event in order to handle the
    device orientation. The first event is fired each time the orientation of the
    device changes; the second event is fired when the physical orientation of the
    device changes. Both the listeners have to be registered to the `window` object:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JavaScript，您可以设置一个监听器来处理 `orientationchange` 事件，并设置另一个监听器来处理 `deviceorientation`
    事件，以处理设备方向。第一个事件在设备方向每次改变时触发；第二个事件在设备物理方向改变时触发。两个监听器都必须注册到 `window` 对象：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `orientationchange` event handler is commonly used to detect the screen
    orientation after it has changed. Once the orientation changes, the app receives
    a notification for several events. The following table summarizes these events
    and the orientation property value:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`orientationchange` 事件处理器通常用于检测屏幕方向改变后的屏幕方向。一旦方向改变，应用会接收到几个事件的通知。以下表格总结了这些事件和方向属性值：'
- en: '| Device and user gesture | Events fired | Orientation |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 设备和用户手势 | 触发的事件 | 方向 |'
- en: '| --- | --- | --- |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| iPad to landscape | `resize``orientationchange` | 090 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| iPad 横屏 | `resize` `orientationchange` | 090 |'
- en: '| iPad to portrait | `resize``orientationchange` | 900 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| iPad 竖屏 | `resize` `orientationchange` | 900 |'
- en: '| iPhone to landscape | `resize``orientationchange` | 090 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| iPhone 横屏 | `resize` `orientationchange` | 090 |'
- en: '| iPhone to portrait | `resize``orientationchange` | 900 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| iPhone 竖屏 | `resize` `orientationchange` | 900 |'
- en: '| Android phone to landscape | `orientationchange``resize` | 9090 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 安卓手机横屏 | `orientationchange` `resize` | 9090 |'
- en: '| Android phone to portrait | `orientationchange``resize` | 00 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 安卓手机竖屏 | `orientationchange` `resize` | 00 |'
- en: 'The `deviceorientation` event is very powerful. It returns to the handler an
    instance of the `DeviceOrientationEvent` event with the following information:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`deviceorientation` 事件非常强大。它将包含以下信息的 `DeviceOrientationEvent` 事件实例返回给处理器：'
- en: '`alpha`: This returns the rotation of the device around the *z* axis'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha`：这返回设备绕 *z* 轴的旋转'
- en: '`beta`: This returns the rotation of the device around the *x* axis'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta`：这返回设备绕 *x* 轴的旋转'
- en: '`gamma`: This returns the rotation of the device around the *y* axis'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gamma`：这返回设备绕 *y* 轴的旋转'
- en: Tip
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In order to improve the performance of your app, consider using the `event-handler`
    function to do no more than save current values from the sensor data into variables.
    Then, move your calculations or DOM manipulations into a new function executed
    at a fixed time.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高您应用的性能，考虑使用 `event-handler` 函数仅保存当前从传感器数据到变量的值。然后，将您的计算或 DOM 操作移动到在固定时间执行的新函数中。
- en: Handling orientation with JavaScript
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 JavaScript 处理方向
- en: It's time to put into practice what you have learned about the device orientation
    events. Let's work on a very basic sample that is able to show the screen orientation
    in a `div` element rotated according to the device's physical orientation.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候将您所学的设备方向事件知识付诸实践了。让我们来处理一个非常基础的示例，该示例能够根据设备的物理方向在 `div` 元素中显示屏幕方向。
- en: Time for action – handling device orientation with JavaScript
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用 JavaScript 处理设备方向
- en: 'Execute the following steps:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Open the command-line tool and create a new PhoneGap project named `orientationevents`,
    and add the platforms you want to target for this example.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，创建一个名为 `orientationevents` 的新 PhoneGap 项目，并添加你想要针对此示例的目标平台。
- en: 'Install the plugin to your project:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将插件安装到你的项目中：
- en: '[PRE7]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Go to the `www` folder, open the `index.html` file, and add `div` with the
    `#orientation` ID inside the main `div` of the app beneath `#deviceready`:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `www` 文件夹，打开 `index.html` 文件，并在应用下方的 `#deviceready` 主要 `div` 内添加带有 `#orientation`
    ID 的 `div`：
- en: '[PRE8]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Go to the `css` folder and define two new rules inside the `index.css` file
    to give a border and a bigger font size to `div` and its content. You can even
    add the CSS styles directly to the `head` section of your HTML page:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `css` 文件夹，并在 `index.css` 文件内定义两个新规则，为 `div` 及其内容添加边框和更大的字体大小。你甚至可以直接将 CSS
    样式添加到 HTML 页面的 `head` 部分：
- en: '[PRE9]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Go to the `js` folder, open the `index.js` file, and define a new function
    to easily detect whether the device can handle the `orientationchange` and `deviceorientation`
    events. Alternatively, you can even have the script embedded in your HTML page:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `js` 文件夹，打开 `index.js` 文件，并定义一个新函数，以便轻松检测设备是否可以处理 `orientationchange` 和 `deviceorientation`
    事件。或者，你甚至可以将脚本直接嵌入到你的 HTML 页面中：
- en: '[PRE10]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `deviceready` function, add two listeners if the device supports the
    `orientationchange` and `deviceorientation` events:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `deviceready` 函数中，如果设备支持 `orientationchange` 和 `deviceorientation` 事件，则添加两个监听器：
- en: '[PRE11]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Define the `orientationChanged` event handler and use it to print the current
    device orientation on screen:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义 `orientationChanged` 事件处理程序，并使用它来在屏幕上打印当前设备方向：
- en: '[PRE12]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Define the handler for the `deviceorientation` event and use the information
    provided by the device''s sensor to change the 3D transformation of the `div`
    orientation:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义 `deviceorientation` 事件的处理程序，并使用设备传感器的信息来改变 `div` 方向的 3D 变换：
- en: '[PRE13]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Open the command-line tool again, locate the main project folder, and then compile
    the app and test it on every platform you previously added.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次打开命令行工具，定位主项目文件夹，然后编译应用并在你之前添加的每个平台上进行测试。
- en: 'Here is the complete code of this example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是这个示例的完整代码：
- en: '[PRE14]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*What just happened?*'
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You handled the orientation events using JavaScript and deployed the result
    to a device using PhoneGap. The app is able to get the device screen orientation
    and the current position in real time.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用 JavaScript 处理了方向事件，并通过 PhoneGap 将结果部署到设备上。该应用能够实时获取设备屏幕方向和当前位置。
- en: Compass
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Compass
- en: The PhoneGap Compass API allows you to obtain the direction that the device
    is pointing to. The compass is a sensor that detects the direction or heading
    in which the device is pointed and returns the heading of the device in degrees
    using values from `0` to `359.99`. The Compass API works similarly to the Accelerometer
    API; in fact, you can read the current device heading or you can define a watcher
    in order to continuously read the heading value.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap Compass API 允许你获取设备指向的方向。罗盘是一个传感器，可以检测设备指向的方向或航向，并使用 `0` 到 `359.99`
    的值返回设备的航向（以度为单位）。Compass API 与加速度计 API 的工作方式类似；实际上，你可以读取设备的当前航向，或者定义一个监视器以连续读取航向值。
- en: 'The Compass API is available on the `compass` property of the `navigator` object
    and exposes the following functions:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Compass API 可在 `navigator` 对象的 `compass` 属性上找到，并公开以下函数：
- en: '`compass.getCurrentHeading`: This reads the current compass heading through
    a handler'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compass.getCurrentHeading`: 这通过处理程序读取当前的罗盘方向'
- en: '`compass.watchHeading`: This reads the compass heading at a specific time interval
    through a handler and returns a reference to it'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compass.watchHeading`: 这通过处理程序在特定时间间隔读取罗盘方向，并返回对其的引用'
- en: '`compass.clearWatch`: This stops a previously defined time interval reading
    handler'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compass.clearWatch`: 这将停止之前定义的时间间隔读取处理程序'
- en: 'The `getCurrentHeading` and `watchHeading` functions accept very similar arguments;
    the only difference is the last argument of the `watchHeading` function that allows
    you to configure it. In order to read the current heading of the device, it is
    sufficient to execute the `getCurrentHeading` function, specifying a success and
    an error handler:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`getCurrentHeading` 和 `watchHeading` 函数接受非常相似的参数；唯一的区别是 `watchHeading` 函数的最后一个参数，允许你配置它。为了读取设备的当前航向，只需执行
    `getCurrentHeading` 函数，指定成功和错误处理程序即可：'
- en: '[PRE15]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `onSuccess` handler receives as an argument a `CompassHeading` object with
    the following properties:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`onSuccess`处理器接收一个`CompassHeading`对象作为参数，具有以下属性：'
- en: '`magneticHeading`: This is the heading in degrees from `0` to `359.99`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`magneticHeading`：这是从`0`到`359.99`度的航向'
- en: '`trueHeading`: This is the heading relative to the geographic North Pole in
    degrees'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trueHeading`：这是相对于地理北极的航向，以度为单位'
- en: '`headingAccuracy`: This is the deviation between the reported heading and the
    true heading in degrees'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`headingAccuracy`：这是报告航向与真实航向之间的偏差，以度为单位'
- en: '`timestamp`: This is the time at which this heading was determined'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp`：这是确定此航向的时间'
- en: 'The error handler receives a `CompassError` object as an argument; the `CompassError`
    object has a property named `code` that returns two possible values such as `CompassError.COMPASS_INTERNAL_ERR`
    or `CompassError.COMPASS_NOT_SUPPORTED`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 错误处理器接收一个`CompassError`对象作为参数；`CompassError`对象有一个名为`code`的属性，它返回两个可能的值，例如`CompassError.COMPASS_INTERNAL_ERR`或`CompassError.COMPASS_NOT_SUPPORTED`：
- en: '[PRE16]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `watchHeading` function works like the `getCurrentHeading` function. The
    only difference is that it accepts an additional `CompassOption` object that allows
    you to set up how often to retrieve the compass heading in milliseconds (that
    is, frequency) and the change in degrees required to initiate the success handler
    (that is, filter):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`watchHeading`函数与`getCurrentHeading`函数类似。唯一的区别是它接受一个额外的`CompassOption`对象，允许您设置以毫秒（即频率）为单位检索指南针航向的频率以及触发成功处理器的度数变化（即过滤器）：'
- en: '[PRE17]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In order to stop watching the heading value changes, it is sufficient to use
    the `clearWatch` function and the reference to the current heading watcher:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 为了停止监视航向值的变化，只需使用`clearWatch`函数和当前航向监视器的引用即可：
- en: '[PRE18]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `trueHeading` property of the `CompassHeading` object is not supported on
    Android. It returns the same value as `magneticHeading`, and the `headingAccuracy`
    value will always be `0` as there is no difference between `magneticHeading` and
    `trueHeading`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`CompassHeading`对象的`trueHeading`属性在Android上不受支持。它返回与`magneticHeading`相同的值，并且`headingAccuracy`值始终为`0`，因为在`magneticHeading`和`trueHeading`之间没有差异。'
- en: On iOS, the `trueHeading` property is returned only when location services are
    running using the `watchLocation` function.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS上，只有当使用`watchLocation`函数运行位置服务时，才会返回`trueHeading`属性。
- en: Creating a compass
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建指南针
- en: 'Reading the current heading of a device is a common task for a developer in
    several use cases such as traffic apps, augmented reality apps, or any app that
    incorporates a sense of direction. Let''s see how to create a complete compass
    with PhoneGap:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 读取设备的当前航向是开发者在多个用例中的常见任务，例如交通应用、增强现实应用或任何包含方向感的应用。让我们看看如何使用PhoneGap创建一个完整的指南针：
- en: Note
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The images used to render the compass are available under the Creative Commons
    license at [http://commons.wikimedia.org/wiki/File:Compass.svg](http://commons.wikimedia.org/wiki/File:Compass.svg).
    Before starting to work on this example, download the image and create three separate
    PNG files for the background, dial, and arrow. As it's a SVG vector file, you
    can handle each layer of the image and edit it as your wish. To edit the image,
    you can use any vector editing applications such as Adobe Illustrator or a free
    application such as Inkscape.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 用于渲染指南针的图像可在Creative Commons许可证下在[http://commons.wikimedia.org/wiki/File:Compass.svg](http://commons.wikimedia.org/wiki/File:Compass.svg)找到。在开始此示例之前，请下载该图像并创建三个单独的PNG文件，分别用于背景、表盘和箭头。由于这是一个SVG矢量文件，您可以处理图像的每一层，并按需编辑它。要编辑图像，您可以使用任何矢量编辑应用程序，例如Adobe
    Illustrator或免费应用程序Inkscape。
- en: Time for action – using the Compass API
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手时间 - 使用指南针API
- en: 'Execute the following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Open the command-line tool, create a new PhoneGap project named `compass`, and
    add the platforms you want to target for this example.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，创建一个名为`compass`的新PhoneGap项目，并添加您想要针对此示例的目标平台。
- en: 'Add the Compass API plugin using the following command:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令添加Compass API插件：
- en: '[PRE19]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Go to the `www` folder and open the `index.html` file. The three `div` tags
    are used to handle the compass arrows and the background:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`www`文件夹，打开`index.html`文件。三个`div`标签用于处理指南针箭头和背景：
- en: '[PRE20]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Go to the `css` folder, open the `index.css` file, and define the rules needed
    to have a separate background for each element of the compass:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`css`文件夹，打开`index.css`文件，并定义指南针每个元素所需的单独背景规则：
- en: '[PRE21]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Go to the `js` folder, open the `index.js` file, and add a new variable in
    order to store a reference to the watcher that you will define to monitor the
    device heading. Alternatively, you can have the scripts embedded directly in the
    page:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`js`文件夹，打开`index.js`文件，添加一个新变量以存储你将定义的用于监控设备航向的监视器的引用。或者，你也可以直接在页面上嵌入脚本：
- en: '[PRE22]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Locate the `deviceready` function and add inside it the snippet of code needed
    in order to check the device heading every 150 milliseconds:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到`deviceready`函数，并在其中添加每150毫秒检查设备航向所需的代码片段：
- en: '[PRE23]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create a new function named `onCompassSuccess` and inside its body, start to
    read the heading data stored in the received argument; use it to rotate the compass
    elements:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`onCompassSuccess`的新函数，并在其主体内部开始读取存储在接收到的参数中的航向数据；使用它来旋转指南针元素：
- en: '[PRE24]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Define the function to capture the failures, if any:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个函数来捕获可能出现的失败：
- en: '[PRE25]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Open the command-line tool again, locate the main project folder, compile the
    app, and test it on every platform you previously added.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次打开命令行工具，定位到主项目文件夹，编译应用程序，并在你之前添加的每个平台上进行测试。
- en: 'For the example, we just saw, you can find the complete code here:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们刚才看到的例子，你可以在这里找到完整的代码：
- en: '[PRE26]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '*What just happened?*'
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You implemented a real, cross-platform compass using the PhoneGap API. In the
    process, you learned how to use a pretty complex feature of mobile device sensors.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用PhoneGap API实现了一个真正的、跨平台的指南针。在这个过程中，你学习了如何使用移动设备传感器的一个相当复杂的功能。
- en: An introduction to geolocation
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地理定位简介
- en: The term **geolocation** is used in order to refer to the identification process
    of the real-world geographic location of an object. Devices that are able to detect
    the user's position are becoming more common each day and we are now used to getting
    content based on our location (**geo targeting**).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**地理定位**用于指代识别物体在现实世界中的地理位置的过程。能够检测用户位置的设备越来越常见，我们现在已经习惯了根据我们的位置获取内容（**地理定位**）。
- en: Using the **Global Positioning System** (**GPS**)—a space-based satellite navigation
    system that provides location and time information consistently across the globe—you
    can now get the accurate location of a device. During the early 1970s, the US
    military created Navstar, which is a defense navigation satellite system. Navstar
    was the system that created the basis for the GPS infrastructure used today by
    billions of devices. As of October 2014, 68 GPS satellites have been successfully
    placed in the orbit around the Earth (refer to [http://en.wikipedia.org/wiki/List_of_GPS_satellite_launches](http://en.wikipedia.org/wiki/List_of_GPS_satellite_launches)
    for a detailed report about the past and planned launches).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**全球定位系统**（**GPS**）——一个基于空间的卫星导航系统，它在全球范围内持续提供位置和时间信息——你现在可以获取设备的准确位置。在20世纪70年代初，美国军方创建了Navstar，这是一个防御导航卫星系统。Navstar是今天数十亿设备使用的GPS基础设施的基础。截至2014年10月，已有68颗GPS卫星成功送入地球轨道（有关过去和计划发射的详细报告，请参阅[http://en.wikipedia.org/wiki/List_of_GPS_satellite_launches](http://en.wikipedia.org/wiki/List_of_GPS_satellite_launches)）。
- en: 'The location of a device is represented through a point. This point is comprised
    of two components: latitude and longitude. There are many methods for modern devices
    to determine the location information; these include the following:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 设备的位置通过一个点来表示。这个点由两个组成部分组成：纬度和经度。现代设备有许多确定位置信息的方法；以下是一些方法：
- en: GPS
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPS
- en: IP address
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址
- en: GSM/CDMA cell IDs
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GSM/CDMA小区ID
- en: Wi-Fi and Bluetooth MAC address
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wi-Fi和蓝牙MAC地址
- en: Each approach delivers the same information; what changes is the accuracy of
    the device's position. The GPS satellites continuously transmit information that
    can parse; for example, the general health of the GPS array, roughly where all
    of the satellites are in orbit, information on the precise orbit or path of the
    transmitting satellite, and the time of the transmission. The receiver calculates
    its own position by timing the signals sent by any of the satellites in the array
    that is visible.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 每种方法都提供相同的信息；变化的是设备位置的准确性。GPS卫星持续传输可解析的信息；例如，GPS阵列的一般健康状况，所有卫星的大致轨道位置，传输卫星的精确轨道或路径信息，以及传输时间。接收器通过计算阵列中任何可见卫星发送的信号的传输时间来计算自己的位置。
- en: Note
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The process of measuring the distance from a point to a group of satellites
    in order to locate a position is known as **trilateration**. The distance is determined
    using the speed of light as a constant, along with the time that the signal left
    the satellites.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 测量从一点到一组卫星的距离以确定位置的过程称为 **三角测量法**。距离是通过使用光速作为常数以及信号离开卫星的时间来确定的。
- en: 'The emerging trend in mobile development is GPS-based "people discovery" apps
    such as Highlight, Sonar, Banjo, and Foursquare. Each app has different features
    and has been built for different purposes, but all of them share the same killer
    feature: using location as a piece of metadata in order to filter information
    according to the user''s needs.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 移动开发中出现的趋势是基于 GPS 的“人脉发现”应用，如 Highlight、Sonar、Banjo 和 Foursquare。每个应用都有不同的功能，并且为不同的目的而构建，但它们都共享同一个杀手级功能：使用位置作为元数据的一部分，以便根据用户的需求过滤信息。
- en: The PhoneGap Geolocation API
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PhoneGap 定位 API
- en: The Geolocation API is not a part of the HTML5 specification, but it is tightly
    integrated with mobile development. The PhoneGap Geolocation API and the W3C Geolocation
    API mirror each other; both define the same methods and relative arguments. There
    are several devices that already implement the W3C Geolocation API; for those
    devices, you can use native support instead of the PhoneGap API.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 定位 API 不是 HTML5 规范的一部分，但它与移动开发紧密集成。PhoneGap 定位 API 和 W3C 定位 API 相互映射；两者定义了相同的方法和相对参数。有几款设备已经实现了
    W3C 定位 API；对于这些设备，你可以使用原生支持而不是 PhoneGap API。
- en: Note
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As per the HTML specification, the user has to explicitly allow the website
    or the app to use the device's current position.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 HTML 规范，用户必须明确允许网站或应用使用设备的当前位置。
- en: 'The Geolocation API is exposed through the `geolocation` object child of the
    `navigator` object and consists of the following three methods:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 定位 API 通过 `navigator` 对象的 `geolocation` 子对象公开，并包含以下三个方法：
- en: '`getCurrentPosition()`: This returns the device position'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getCurrentPosition()`: 这将返回设备位置'
- en: '`watchPosition()`: This watches for changes in the device position'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`watchPosition()`: 这将监视设备位置的变化'
- en: '`clearWatch()`: This stops the watcher for the device''s position changes'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clearWatch()`: 这将停止设备位置变化的监视器'
- en: 'The `watchPosition()` and `clearWatch()` methods work in the same way that
    the `setInterval()` and `clearInterval()` methods work; in fact, the first one
    returns an identifier that is passed in to the second one. The `getCurrentPosition()`
    and `watchPosition()` methods mirror each other and take the same arguments: a
    success and a failure callback function and an optional `configuration` object.
    The `configuration` object is used in order to specify the maximum age of a cached
    value of the device''s position, in order to set a timeout after which the method
    will fail and specify whether the application requires only accurate results:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`watchPosition()` 和 `clearWatch()` 方法的工作方式与 `setInterval()` 和 `clearInterval()`
    方法相同；实际上，第一个方法返回一个标识符，该标识符传递给第二个方法。`getCurrentPosition()` 和 `watchPosition()`
    方法相互映射，并接受相同的参数：一个成功回调函数和一个失败回调函数，以及一个可选的 `configuration` 对象。`configuration` 对象用于指定设备位置缓存的最高年龄，以便在方法失败后设置超时，并指定应用程序是否只需要精确结果：'
- en: '[PRE27]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Tip
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Only the first argument is mandatory, but it's recommended to always handle
    the failure use case.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 只有第一个参数是必需的，但建议始终处理失败用例。
- en: 'The success handler function receives a `Position` object as an argument. Accessing
    its properties, you can read the device''s coordinates and the creation timestamp
    of the object that stores the coordinates:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 成功处理函数接收一个 `Position` 对象作为参数。访问其属性，你可以读取设备的坐标和存储坐标的对象的创建时间戳：
- en: '[PRE28]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `coords` property of the `Position` object contains a `Coordinates` object;
    so far, the most important properties of this object are `longitude` and `latitude`.
    Using those properties, it's possible to start to integrate positioning information
    as relevant metadata in your app.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`Position` 对象的 `coords` 属性包含一个 `Coordinates` 对象；到目前为止，该对象最重要的属性是 `longitude`（经度）和
    `latitude`（纬度）。使用这些属性，你可以开始将定位信息作为相关元数据集成到你的应用中。'
- en: 'The failure handler receives a `PositionError` object as an argument. Using
    the `code` and the `message` property of this object, you can gracefully handle
    every possible error:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 失败处理函数接收一个 `PositionError` 对象作为参数。使用该对象的 `code` 和 `message` 属性，你可以优雅地处理每个可能出现的错误：
- en: '[PRE29]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The `message` property returns a detailed description of the error and the
    `code` property returns an integer; the possible values are represented through
    the following pseudo constants:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`message`属性返回错误的详细描述，而`code`属性返回一个整数；可能值通过以下伪常量表示：'
- en: '`PositionError.PERMISSION_DENIED`: This indicates that the user denied the
    app to use the device''s current position'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PositionError.PERMISSION_DENIED`：这表示用户拒绝了应用使用设备的当前位置'
- en: '`PositionError.POSITION_UNAVAILABLE`: This indicates that the position of the
    device cannot be determined'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PositionError.POSITION_UNAVAILABLE`：这表示无法确定设备的位置'
- en: Note
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to recover the last available position when the `POSITION_UNAVAILABLE`
    error is returned, you have to write a custom plugin that uses the platform-specific
    API. Android and iOS have this feature. You can find a detailed example at [http://stackoverflow.com/questions/10897081/retrieving-last-known-geolocation-phonegap](http://stackoverflow.com/questions/10897081/retrieving-last-known-geolocation-phonegap).
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想在返回`POSITION_UNAVAILABLE`错误时恢复最后可用的位置，你必须编写一个使用平台特定API的自定义插件。Android和iOS都有这个功能。你可以在[http://stackoverflow.com/questions/10897081/retrieving-last-known-geolocation-phonegap](http://stackoverflow.com/questions/10897081/retrieving-last-known-geolocation-phonegap)找到详细的示例。
- en: '`PositionError.TIMEOUT`: This indicates that the specified timeout has elapsed
    before the implementation could successfully acquire a new `Position` object.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PositionError.TIMEOUT`：这表示在实现成功获取新的`Position`对象之前，指定的超时时间已过。'
- en: Note
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: JavaScript doesn't support constants such as Java and other object-oriented
    programming languages. With the term "pseudo constants," I refer to those values
    that should never change in a JavaScript app.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript不支持Java和其他面向对象编程语言中的常量。术语“伪常量”指的是在JavaScript应用中不应更改的值。
- en: 'One of the most common tasks to perform with the device position information
    is to show the device location on a map. You can quickly perform this task by
    integrating Google Maps in your app; the only requirement is a valid API key.
    To get the key, use the following steps:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 使用设备位置信息执行的最常见任务之一是在地图上显示设备位置。你可以通过在应用中集成Google Maps快速完成此任务；唯一的要求是有效的API密钥。要获取密钥，请按照以下步骤操作：
- en: Visit the APIs' console at [https://code.google.com/apis/console](https://code.google.com/apis/console)
    and log in with your Google account.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问API控制台[https://code.google.com/apis/console](https://code.google.com/apis/console)，并使用您的Google账户登录。
- en: Select **APIs & auth** in the left-hand side menu.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧菜单中选择**APIs & auth**。
- en: Select **Google Maps JavaScript API** and activate the service.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Google Maps JavaScript API**并激活该服务。
- en: Time for action – showing device position with Google Maps
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用Google Maps显示设备位置
- en: 'Get ready to add a map renderer to the PhoneGap default app template. Execute
    the following steps:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 准备向PhoneGap默认应用模板添加地图渲染器。执行以下步骤：
- en: 'Open the command-line tool and create a new PhoneGap project named `MapSample`:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具并创建一个名为`MapSample`的新PhoneGap项目：
- en: '[PRE30]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Change the working directory to the newly created project:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将工作目录更改为新创建的项目：
- en: '[PRE31]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Add the required platform to the project. For example, we will add Android
    to this project:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所需的平台添加到项目中。例如，我们将向此项目添加Android：
- en: '[PRE32]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Add the Geolocation API plugin using the following command:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令添加Geolocation API插件：
- en: '[PRE33]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Go to the `www` folder, open the `index.html` file, remove all the existing
    content, and add a `div` element with the `id` value as `#map` inside the `body`
    tag:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`www`文件夹，打开`index.html`文件，删除所有现有内容，并在`body`标签内添加一个`div`元素，其`id`值为`#map`：
- en: '[PRE34]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Include the `cordova.js` file that will be added to the app at runtime:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包含将在运行时添加到应用的`cordova.js`文件：
- en: '[PRE35]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Add a new `script` tag to include the Google Maps JavaScript library. Replace
    the `YOUR_API_KEY` value with your actual Google Maps API key:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新的`script`标签以包含Google Maps JavaScript库。将`YOUR_API_KEY`值替换为您的实际Google Maps
    API密钥：
- en: '[PRE36]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a new CSS style to give an appropriate size to the `div` element and
    its content:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的CSS样式以给`div`元素及其内容一个适当的大小：
- en: '[PRE37]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'In the JavaScript section, define a new function named `initMap`:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在JavaScript部分，定义一个名为`initMap`的新函数：
- en: '[PRE38]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'In the body of the function, define an `options` object in order to specify
    how the map has to be rendered:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在函数体中，定义一个`options`对象以指定地图的渲染方式：
- en: '[PRE39]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Add to the body of the `initMap` function the code to initialize the rendering
    of the map and to show a marker representing the current device''s position over
    it:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`initMap`函数体中添加初始化地图渲染的代码以及显示代表当前设备位置的标记的代码：
- en: '[PRE40]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Define a function to use as the success handler and call from its body the
    `initMap` function previously defined:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个函数作为成功处理程序使用，并在其主体中调用之前定义的`initMap`函数：
- en: '[PRE41]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Define another function in order to have a failure handler that is able to
    notify the user that something went wrong:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义另一个函数，以便有一个能够通知用户出错的失败处理程序：
- en: '[PRE42]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Go into the `deviceready` function and add as the last statement the call to
    the Geolocation API needed to recover the device''s position:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入`deviceready`函数，并将调用Geolocation API以恢复设备位置的调用作为最后一条语句添加：
- en: '[PRE43]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Open the command-line tool, build the app, and then run it on your testing
    devices:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，构建应用，然后在测试设备上运行它：
- en: '[PRE44]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Here is the project''s complete code for your reference:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是项目的完整代码，供你参考：
- en: '[PRE45]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '*What just happened?*'
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You integrated Google Maps inside an app. This map is an interactive map most
    users are familiar with—the most common gestures are already working and the Google
    Street View controls are already enabled.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 你在应用中集成了Google Maps。这个地图是大多数用户都熟悉的交互式地图——最常见的手势已经生效，Google街景控制也已经启用。
- en: Tip
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'To successfully load the Google Maps API on iOS, it''s mandatory to whitelist
    the `googleapis.com` and `gstatic.com` domains. Open the `.plist` file of the
    project as source code (right-click on the file and then **Open As** | **Source
    Code**) and add the following array of domains:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要在iOS上成功加载Google Maps API，必须将`googleapis.com`和`gstatic.com`域名列入白名单。将项目的`.plist`文件作为源代码打开（右键单击文件，然后选择**打开方式**
    | **源代码**)，并添加以下域名数组：
- en: '[PRE46]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Other geolocation data
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他地理位置数据
- en: 'In the previous example, you only used the `latitude` and `longitude` properties
    of the `position` object that you received. There are other attributes that can
    be accessed as properties of the `Coordinates` object:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，你只使用了接收到的`position`对象中的`latitude`和`longitude`属性。还有其他属性可以作为`Coordinates`对象的属性访问：
- en: '`altitude`: This gives the height of the device, in meters, above the sea level'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`海拔`: 这表示设备相对于海平面的高度，单位为米'
- en: '`accuracy`: This gives the accuracy level of the latitude and longitude, in
    meters; it can be used to show a radius of accuracy when mapping the device''s
    position'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accuracy`: 这表示纬度和经度的精度级别，单位为米；它可以用来在映射设备位置时显示精度半径'
- en: '`altitudeAccuracy`: This gives the accuracy of the altitude in meters'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`altitudeAccuracy`: 这表示海拔的精度，单位为米'
- en: '`heading`: This gives the direction of the device in degrees clockwise from
    true north'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`heading`: 这表示设备相对于真北顺时针方向的方位角'
- en: '`speed`: This gives the current ground speed of the device in meters per second'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`速度`: 这表示设备当前的地速，单位为每秒米'
- en: The `latitude` and `longitude` properties are the best supported of these properties,
    and the ones that will be most useful when communicating with remote APIs. The
    other properties are mainly useful if you're developing an application for which
    geolocation is a core component of its standard functionality, such as apps that
    make use of this data to create a flow of information contextualized to the geolocation
    data. The `accuracy` property is the most important of these additional features,
    because as an application developer, you typically won't know which particular
    sensor is giving you the location and you can use the `accuracy` property as a
    range in your queries to external services.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`latitude`和`longitude`属性是这些属性中支持最好的，也是在与远程API通信时最有用的属性。其他属性主要在你开发的应用中地理位置是其标准功能的核心组件时有用，例如使用这些数据创建与地理位置数据相关的信息流的应用。`accuracy`属性是这些附加功能中最重要的，因为作为应用程序开发者，你通常不知道哪个特定的传感器提供了位置信息，你可以使用`accuracy`属性作为查询外部服务时的范围。'
- en: There are several APIs that allow you to discover interesting data related to
    a place; among these, the most interesting are the Google Places API and the Foursquare
    API.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个API允许你发现与地点相关的有趣数据；在这些API中，最有趣的是Google Places API和Foursquare API。
- en: Note
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Google Places and Foursquare online documentation is very well organized
    and it's the right place to start if you want to dig deeper into these topics.
    You can access the Google Places docs at [https://developers.google.com/maps/documentation/javascript/places](https://developers.google.com/maps/documentation/javascript/places)
    and Foursquare at [https://developer.foursquare.com/](https://developer.foursquare.com/).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Google 地点（Google Places）和 Foursquare 在线文档组织得非常好，如果你想要深入了解这些主题，这是一个很好的起点。你可以通过[https://developers.google.com/maps/documentation/javascript/places](https://developers.google.com/maps/documentation/javascript/places)访问
    Google 地点文档，以及[https://developer.foursquare.com/](https://developer.foursquare.com/)访问
    Foursquare。
- en: Summary
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to work with device sensors to enhance the
    functionality of your app. You also learned how to get the geolocation information
    from a device and how to integrate external geolocation service in the app. Furthermore,
    you continued to gain an understanding of the PhoneGap APIs that allow you to
    create powerful native apps.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用设备传感器来增强你应用程序的功能。你还学习了如何从设备获取地理位置信息，以及如何在应用程序中集成外部地理位置服务。此外，你继续了解
    PhoneGap API，这些 API 允许你创建强大的原生应用程序。
- en: In the next chapter, you will start to work with some advanced concepts of using
    PhoneGap.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将开始学习使用 PhoneGap 的一些高级概念。
