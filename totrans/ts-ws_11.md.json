["```js\nConsole.WriteLine(\"We will wait 10 s\");\nThread.Sleep(10000);\nConsole.WriteLine(\"... 10 seconds later\");\nThread.Sleep(15000);\nConsole.WriteLine(\"... 15 more seconds later\");\n```", "```js\nconsole.log(\"We will wait 10 s\");\nsetTimeout(() => {\n    console.log(\"... 10 seconds later\");\n    setTimeout(() => {\n        console.log(\"... 15 more seconds later\");\n    }, 15000);\n}, 10000);\n```", "```js\nconsole.log(\"First\");\nconsole.log(\"Second\");\n```", "```js\nFirst\nSecond\n```", "```js\nfunction sayHello(name){\n    console.log(`Hello ${name}`);\n}\nfunction first(){\n    second();\n}\nfunction second(){\n    third();\n}\nfunction third(){\n    sayHello(\"Bob\");\n}\nfirst();\n```", "```js\n    function inner () {\n    }\n    function middle () {\n    }\n    function outer () {\n    }\n    ```", "```js\n    function inner () {\n        console.log(\"    Inside inner function\");\n    }\n    ```", "```js\n    function middle () {\n        console.log(\"  Starting middle function\");\n        inner();\n        console.log(\"  Finishing middle function\");\n    }\n    ```", "```js\n    function outer () {\n        console.log(\"Starting outer function\");\n        middle();\n        console.log(\"Finishing outer function\");\n    }\n    ```", "```js\n    outer();\n    ```", "```js\n    tsc stack.ts\n    ```", "```js\n    node stack.js\n    ```", "```js\n    Starting outer function\n      Starting middle function\n        Inside inner function\n      Finishing middle function\n    Finishing outer function\n    ```", "```js\nfunction sayHello() {\n    console.log(\"Hello\");\n}\nsayHello();\n```", "```js\nfunction sayHello() {\n    console.log(\"Hello\");\n}\nfunction sayHi() {\n    console.log(\"Hi\");\n}\nsayHello();\nsayHi();\nsayHello();\n```", "```js\nfunction sayHello() {\n    console.log(\"Hello\");\n}\ndocument.addEventListener(\"click\", sayHello);\n```", "```js\nsetTimeout(function() {\n    console.log(\"After one second\");\n}, 1000);\n```", "```js\n    console.log(\"Printed immediately\");\n    ```", "```js\n    setTimeout(function() {\n        console.log(\"Printed after one second\");\n    }, 1000);\n    setTimeout(function() {\n        console.log(\"Printed after two second\");\n    }, 2000);\n    ```", "```js\n    tsc delays-1.ts\n    ```", "```js\n    node delays-1.js\n    ```", "```js\n    Printed immediately\n    Printed after one second\n    Printed after two second\n    ```", "```js\n    console.log(\"Printed immediately\");\n    setTimeout(function() {\n        console.log(\"Printed after two second\");\n    }, 2000);\n    setTimeout(function() {\n        console.log(\"Printed after one second\");\n    }, 1000);\n    ```", "```js\n    setTimeout(function() {\n        console.log(\"Printed after two second\");\n    }, 2000);\n    setTimeout(function() {\n        console.log(\"Printed after one second\");\n    }, 1000);\n    console.log(\"Printed immediately\");\n    ```", "```js\n    setTimeout(function() {\n        console.log(\"#1 Printed immediately?\");\n    }, 0);\n    ```", "```js\n    console.log(\"#2 Printed immediately.\");\n    ```", "```js\n    tsc delays-2.ts\n    ```", "```js\n    node delays-2.js\n    ```", "```js\n    #2 Printed immediately.\n    #1 Printed immediately?;\n    ```", "```js\ninterface OpenLibraryAuthor {\n  personal_name: string;\n  photos: number[];\n}\n```", "```js\nconst xhr = new XMLHttpRequest();\n```", "```js\nconst url = \"https://openlibrary.org/authors/OL9388A.json\";\nxhr.open(\"GET\", url);\n```", "```js\nxhr.send();\n```", "```js\nconst showData = () => {\n  if (xhr.status != 200) {\n    console.log(`An error occured ${xhr.status}: ${xhr.statusText}`);\n  } else {\n    const response: OpenLibraryAuthor = JSON.parse(xhr.response);\n    const body = document.getElementsByTagName(\"body\")[0];\n\n    const image = document.createElement(\"img\");\n    image.src = `http://covers.openlibrary.org/a/id/${response.photos[0]}-M.jpg`;\n    body.appendChild(image);\n    const name = document.createElement(\"h1\");\n    name.innerHTML = response.personal_name;\n    body.appendChild(name);\n  }\n};\n```", "```js\nxhr.onload = showData;\n```", "```js\n    <script src=\"img/shakespeare.js\"></script>\n```", "```js\n    const numbers = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"];\n    ```", "```js\n    setTimeout(function() {\n        console.log(numbers[0]);\n    }, 1000);\n    ```", "```js\n    tsc counting-1.ts\n    ```", "```js\n    node counting-1.js\n    ```", "```js\n    One\n    ```", "```js\n    setTimeout(function() {\n        console.log(numbers[0]);\n        setTimeout(function() {\n            console.log(numbers[1]);\n        }, 1000);\n    }, 1000);\n    ```", "```js\n    One\n    Two\n    ```", "```js\n    setTimeout(function() {\n        console.log(numbers[0]);\n        setTimeout(function() {\n            setTimeout(function() {\n                console.log(numbers[2]);\n            }, 1000);\n            console.log(numbers[1]);\n        }, 1000);\n    }, 1000);\n    ```", "```js\n    setTimeout(function() {\n        console.log(numbers[0]);\n        setTimeout(function() {\n            setTimeout(function() {\n                console.log(numbers[2]);\n                setTimeout(function() {\n                    console.log(numbers[3]);\n                    setTimeout(function() {\n                        console.log(numbers[4]);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n            console.log(numbers[1]);\n        }, 1000);\n    }, 1000);\n    ```", "```js\n    One\n    Two\n    Three\n    Four\n    Five\n    ```", "```js\nconst getShakespeareData = () => {\n  const result = new Promise<OpenLibraryAuthor>((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      const url = \"https://openlibrary.org/authors/OL9388A.json\";\n      xhr.open(\"GET\", url);\n      xhr.send();\n      xhr.onload = () => {\n        if (xhr.status != 200) {\n            reject({\n                error: xhr.status,\n                message: xhr.statusText\n            })\n        } else {\n            const response: OpenLibraryAuthor = JSON.parse(xhr.response);\n            resolve(response);\n        }\n      }\n  });\n  return result;\n};\n```", "```js\ngetShakespeareData()\n  .then(author => {\n    const body = document.getElementsByTagName(\"body\")[0];\n\n    const image = document.createElement(\"img\");\n    image.src = `http://covers.openlibrary.org/a/id/${author.photos[0]}-M.jpg`;\n    body.appendChild(image);\n    const name = document.createElement(\"h1\");\n    name.innerHTML = author.personal_name;\n    body.appendChild(name);\n  })\n  .catch(error => {\n    console.log(`An error occured ${error.error}: ${error.message}`);\n  })\n```", "```js\n    const numbers = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"];\n    ```", "```js\n    const delay = (ms: number) => {\n        const result = new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                resolve();\n            }, ms)\n        });\n        return result;\n    }\n    ```", "```js\n    delay(1000)\n    .then(() => console.log(numbers[0]))\n    ```", "```js\n    tsc counting-2.ts\n    ```", "```js\n    node counting-2.js\n    ```", "```js\n    One\n    ```", "```js\n    delay(1000)\n    .then(() => console.log(numbers[0]))\n    .then(() => delay(1000)) \n    ```", "```js\n    delay(1000)\n    .then(() => console.log(numbers[0]))\n    .then(() => delay(1000))\n    .then(() => console.log(numbers[1])) \n    ```", "```js\n    delay(1000)\n    .then(() => console.log(numbers[0]))\n    .then(() => delay(1000))\n    .then(() => console.log(numbers[1]))\n    .then(() => delay(1000))\n    .then(() => console.log(numbers[2]))\n    .then(() => delay(1000))\n    .then(() => console.log(numbers[3]))\n    .then(() => delay(1000))\n    .then(() => console.log(numbers[4])) \n    ```", "```js\n    let promise = Promise.resolve();\n    ```", "```js\n    for (const number of numbers) {\n        promise = promise\n            .then(() => delay(1000))\n            .then(() => console.log(number))\n    };}\n    ```", "```js\n    One\n    Two\n    Three\n    Four\n    Five\n    ```", "```js\nfunction run() {\n    getShakespeareData()\n    .then(author => {\n        const body = document.getElementsByTagName(\"body\")[0];\n\n        const image = document.createElement(\"img\");\n        image.src = `http://covers.openlibrary.org/a/id/${author.photos[0]}-M.jpg`;\n        body.appendChild(image);\n        const name = document.createElement(\"h1\");\n        name.innerHTML = author.personal_name;\n        body.appendChild(name);\n    })\n    .catch(error => {\n        console.log(`An error occured ${error.error}: ${error.message}`);\n    })\n}\nrun();\n```", "```js\nasync function run() {\n```", "```js\n    const author = await getShakespeareData();\n    const body = document.getElementsByTagName(\"body\")[0];\n\n    const image = document.createElement(\"img\");\n    image.src = `http://covers.openlibrary.org/a/id/${author.photos[0]}-M.jpg`;\n    body.appendChild(image);\n\n    const name = document.createElement(\"h1\");\n    name.innerHTML = author.personal_name;\n    body.appendChild(name);\n```", "```js\nasync function run () {\n  try {\n    const author = await getShakespeareData();\n    const body = document.getElementsByTagName(\"body\")[0];\n\n    const image = document.createElement(\"img\");\n    image.src = `http://covers.openlibrary.org/a/id/${author.photos[0]}-M.jpg`;\n    body.appendChild(image);\n\n    const name = document.createElement(\"h1\");\n    name.innerHTML = author.personal_name;\n    body.appendChild(name);\n  } catch (error) {\n    console.log(`An error occured ${error.error}: ${error.message}`);\n  }\n}\n```", "```js\n    const numbers = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"];\n    ```", "```js\n    const delay = (ms: number) => {\n        const result = new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                resolve();\n            }, ms)\n        });\n        return result;\n    }\n    ```", "```js\n    async function countNumbers() {\n    }\n    countNumbers();\n    ```", "```js\n    async function countNumbers() {\n        await delay(1000);\n        console.log(numbers[0]);\n    }\n    ```", "```js\n    tsc counting-3.ts\n    ```", "```js\n    node counting-3.js\n    ```", "```js\n    One\n    ```", "```js\n    async function countNumbers() {\n        await delay(1000);\n        console.log(numbers[0]);\n        await delay(1000);\n        console.log(numbers[1]);\n        await delay(1000);\n        console.log(numbers[2]);\n        await delay(1000);\n        console.log(numbers[3]);\n        await delay(1000);\n        console.log(numbers[4]);\n    }\n    ```", "```js\n    for (const number of numbers) {\n        await delay(1000);\n        console.log(number);\n    };\n    ```", "```js\n    One\n    Two\n    Three\n    Four\n    Five\n    ```"]