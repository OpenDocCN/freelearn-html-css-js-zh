["```js\nnpm install serverless@1.x --global\n\n```", "```js\n serverless --version\n\n```", "```js\nserverless create --template aws-nodejs --name hello-serverless\n\n```", "```js\n    module.exports.hello = (event, context, callback) => \n    {\n\n        const response =\n        {\n              statusCode: 200,   \n              body: JSON.stringify({\n                  message: `Hello, ${event.name}!`\n            })\n        };\n\n        callback(null, response);\n    };\n\n```", "```js\n    {\n      \"callbackWaitsForEmptyEventLoop\": true,\n      \"logGroupName\": \"/aws/lambda/hello-serverless-dev-hello\",\n      \"logStreamName\":\n        \"2017/07/15/[$LATEST]01a23456bcd7890ef12gh34i56jk7890\",\n      \"functionName\": \"hello-serverless-dev-hello\",\n      \"memoryLimitInMB\": \"1024\",\n      \"functionVersion\": \"$LATEST\",\n      \"invokeid\": \"1234a567-8901-23b4-5cde-fg67h8901i23\",\n      \"awsRequestId\": \"1234a567-8901-23b4-5cde-fg67h8901i23\",\n      \"invokedFunctionArn\": \"arn:aws:lambda:us-east-1:1234567890:\n        function:hello-serverless-dev-hello\"\n    }\n\n```", "```js\n    service: hello-serverless\n\n    provider:\n      name: aws\n      runtime: nodejs6.10\n\n    functions:\n      hello:\n        handler: handler.hello\n\n```", "```js\n    functions:\n      hello:\n        handler: handler.hello\n        memorySize: 128 # measured in megabytes\n        timeout: 10 # measured in seconds\n\n```", "```js\n    provider:\n      name: aws\n      runtime: nodejs6.10\n      memorySize: 512\n      timeout: 30\n\n```", "```js\n serverless deploy\n\n```", "```js\n        provider:\n          name: aws\n          runtime: nodejs6.10\n          stage: production\n          region: eu-west-1\n\n```", "```js\n serverless deploy --stage production --region eu-west-1\n\n```", "```js\n serverless deploy function --function hello\n\n```", "```js\n        {\n          \"name\": \"Serverless\"\n        }\n\n```", "```js\n serverless invoke --function hello --path event.json\n\n```", "```js\n serverless invoke --function hello --stage test --region eu-west-1\n\n```", "```js\n serverless invoke local --function hello --path event.json\n\n```", "```js\n    {\n      \"errorMessage\": \"Process exited before completing request\"\n    }\n\n```", "```js\n serverless invoke --function hello --log\n\n```", "```js\n    START RequestId: 1ab23cde-4567-89f0-1234-56g7hijk8901\n    Version: $LATEST2017-05-15 15:27:03.471 (-03:00) \n        1ab23cde-4567-89f0-1234-56g7hijk8901\n ReferenceError: x is not defined \n at module.exports.hello (/var/task/handler.js:9:3)\n    END RequestId: 1ab23cde-4567-89f0-1234-56g7hijk8901\n    REPORT RequestId: 1ab23cde-4567-89f0-1234-\n    56g7hijk8901 \n    Duration: 60.26 ms\n    Billed Duration: 100 ms        \n    Memory Size: 128 MB      \n    Max Memory Used: 17 MB\n\n    Process exited before completing request\n\n```", "```js\n serverless logs --function hello\n\n```", "```js\n serverless logs --function hello --filter error --startTime 30m\n\n```", "```js\n serverless logs --function hello --tail\n\n```", "```js\n        functions:\n          hello:\n            handler: handler.hello\n events:\n - http: GET my-service/resource\n\n```", "```js\n serverless deploy\n\n```", "```js\nhttps://[key].execute-api.[region].amazonaws.com/[stage]/[path]\n\n```", "```js\n        https://[key].execute-api.us-east-1.amazonaws.com/dev/my-service/resource?name=Serverless&foo=bar\n\n```", "```js\n        {\n          \"name\": \"Serverless\",\n          \"foo\": \"bar\"\n        }\n\n```", "```js\n        module.exports.hello = (event, context, callback) => {\n\n          const response = {\n            statusCode: 200,   \n            body: JSON.stringify({\n              message: `Hello, ${event.queryStringParameters.name}!`\n            })\n          };\n\n          callback(null, response);\n        };\n\n```", "```js\n    module.exports.hello = (event, context, callback) => {\n\n      const response = {\n        statusCode: 200, \n        headers: {\n \"Access-Control-Allow-Origin\": \"https://www.example.com\" },        body: JSON.stringify({\n          message: \"Hello, ${event.queryStringParameters.name}!\"\n        })\n      };\n\n      callback(null, response);\n    };\n\n```", "```js\n \"Access-Control-Allow-Origin\": \"*\"\n\n```", "```js\n serverless remove\n\n```", "```js\n serverless remove --stage production --region eu-west-1\n\n```", "```js\n        module.exports.catNames = (event, context, callback) => {\n\n          const catNames = require('cat-names');\n\n          const response = {\n            statusCode: 200,   \n            body: JSON.stringify({\n              message: catNames.random()\n            })\n          };\n\n          callback(null, response);\n        };\n\n```", "```js\nservice: cat-names\n        provider:\n          name: aws\n          runtime: nodejs6.10\n        functions:\n          catNames:\n            handler: handler.catNames\n package:\n exclude:\n - package.json\n            - event.json\n            - tests/**\n - LICENSE\n - README.md\n\n```", "```js\n serverless deploy \n serverless invoke --function catNames\n\n```", "```js\n    provider:\n      name: aws\n      runtime: nodejs6.10\n iamRoleStatements:\n - Effect: \"Allow\"\n Action:\n - 's3:PutObject'\n - 's3:GetObject'\n Resource: \"arn:aws:s3:::my-bucket-name/*\"\n\n```", "```js\n    module.exports.testPermissions = (event, context, callback) => {\n\n      const AWS = require('aws-sdk');\n      const s3 = new AWS.S3();\n      const bucket = 'my-bucket-name';\n      const key = 'my-file-name';\n      const write = { \n        Bucket: bucket, \n        Key: key, \n        Body: 'Test' \n      };\n\n      s3.putObject(write, (err, data) => {\n        if (err) return callback(err);\n\n        const read = { Bucket: bucket, Key: key };\n        s3.getObject(read, (err, data) => {\n          if (err) return callback(err);\n\n          const response = {\n            statusCode: 200,   \n            body: data.Body.toString()\n          };\n\n          callback(null, response);\n        });\n      });\n    };\n\n```", "```js\n    functions:\n      processLog:\n        handler: handler.processLog\n        events:\n          - s3:\n              bucket: my-bucket-name\n              event: s3:ObjectCreated:*\n              rules:\n                - prefix: logs/\n                - suffix: .txt\n\n```", "```js\n    functions:\n      processTask:\n        handler: handler.processTask\n        events:\n          - schedule: rate(15 minutes)\n\n```", "```js\n    - schedule: cron(0 9 ? * MON-FRI *)\n\n```", "```js\n    module.exports.hello = (event, context, callback) => {\n\n      const html = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <title>Page Title</title>\n          </head>\n          <body>\n            <h1>Hello</h1>\n          </body>\n        </html>`;\n\n      const response = {    \n        statusCode: 200, \n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'text/html'\n        }, \n        body: html\n      };\n\n      callback(null, response);\n    };\n\n```", "```js\n        provider:\n          name: aws\n          runtime: nodejs6.10\n          stage: ${env:DEPLOYMENT_STAGE}\n\n```", "```js\n        iamRoleStatements:\n          - Effect: \"Allow\"\n             Action:\n              - 's3:PutObject'\n              - 's3:GetObject'\n            Resource: \"arn:aws:s3:::{opt:bucket-name}/*\"\n\n```", "```js\n        functions:\n          hello:\n            handler: handler.hello\n            events:\n              - schedule: ${file(my-vars.yml):schedule}\n\n```", "```js\n npm install serverless-plugin-typescript --save-dev\n\n```", "```js\n        plugins:\n          - serverless-plugin-typescript\n\n```", "```js\n export async function hello(event, context, callback) {\n\n          const response = {\n            statusCode: 200,   \n            body: JSON.stringify({\n              message: 'Hello, TypeScript!'\n            })\n          };\n\n          callback(null, response);\n        }\n\n```", "```js\n serverless deploy\n        serverless invoke --function hello\n\n```", "```js\n serverless info\n\n```", "```js\n serverless install --url <github-project-url>\n\n```", "```js\n serverless install \\\n          --url https://github.com/eahefnawy/serverless-mailer\n\n```", "```js\n serverless install \\\n          --url https://github.com/zanon-io/serverless-store\n\n```"]