["```js\nconst express = require('express')\nconst api = express.Router()\n\nconst logIn = (username, password) => {\n    // Logic Here    \n}\n\napi\n  .route('/auth')\n  .post((req, res, next) => {\n    // Logic here\n  })\n\nmodule.exports = api\n```", "```js\nconst express = require('express')\nconst api = express.Router()\n\nconst logIn = (username, password) => {\n    if (username === 'admin' && password === 'admin') {\nconst userData = {\n name: \"Admin\"\n }\n return generateToken(userData)\n }\n return null\n}\n\napi\n...\n```", "```js\n$ npm install jsonwebtoken --save\n```", "```js\nconst express = require('express')\nconst jwt = require('jsonwebtoken')\nconst api = express.Router()\n\n...\n```", "```js\n...\nconst logIn = (username, password) => {\n    if (username == 'admin' && password == 'admin') {        \n        let userData = {\n            name: \"Admin\"\n        }        \n        return generateToken(userData)        \n    } else {\n        return null\n    }    \n}\n\nconst generateToken = userData => {\n return jwt.sign(userData, \"s3cret\", { expiresIn: '3h' })\n} ...\n```", "```js\n...\n\nconst generateToken = (userData) => {\n   return jwt.sign(userData, \"s3cret\", { expiresIn: '3h' })\n}\n\napi\n  .route('/auth')\n  .post((req, res, next) => {\n    let { username, password } = req.body\n let token = logIn(username, password)\n if (token) {\n res.send(token)\n } else {\n next(new Error(\"Authentication failed\"))\n }\n  })\n\nmodule.exports = api\n```", "```js\nconst express = require('express')\n..\nconst seurityApi = require('./src/routes/security-api')\nconst mongooseConfig = require('./src/config/mongoose-connection')\nconst app = express()\n\napp.use(bodyParser.json())\napp.use(teamsApi)\napp.use(seurityApi)\n...\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"username\":\"admin\", \"password\":\"admin\"}' localhost:3000/auth\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk1NzYwMDEsImV4cCI6MTUxOTU4NjgwMX0.4cNGYgz_BZZz5GEfN6MS3pkreGTkUBqJS1FZVC3_ew\n```", "```js\n\nconst logIn = (username, password) => {\n    if (username == 'admin' && password == 'admin') {\n\n        let userData = {\n            name: \"Admin\",\n            permissions: [\"admin:create:match\", \"admin:update:scores\"]\n        }\n\n        return generateToken(userData)\n\n    } else {\n        return null\n    }\n\n}\n```", "```js\nconst mongoose = require('mongoose')\n\nconst MatchSchema = new mongoose.Schema({\n    team_1: {\n      type: String,        \n      min: 3,\n      max: 100,\n      required: true\n    },\n   team_2: {\n      type: String,\n      min: 3,\n      max: 100,\n      required: true\n    },\n    score: {\n      team_1: Number,\n      team_2: Number\n    }\n})\n\nmodule.exports = mongoose.model('match', MatchSchema)\n```", "```js\nconst express = require('express')\nconst api = express.Router()\n\napi\n  .route('/admin/match/:id?')\n  .post((req, res, next) => {\n\n     // logic to create Match\n\n  })\n   .put((req, res, next) => {\n\n     // logic to update Scores\n\n  })\n\nmodule.exports = api\n```", "```js\nconst express = require('express')\nconst api = express.Router()\nconst Match = require('../models/match')\n\napi\n  .route('/admin/match/:id?')\n  .post((req, res, next) => {\n      const match = new Match(req.body)\n match.save()\n .then(data => res.json(data))\n .catch(err => next(err) )\n  })\n   .put((req, res, next) => {\n\n     // logic to update Match\n\n  })\n\nmodule.exports = api\n```", "```js\nconst express = require('express')\n...\nconst adminApi = require('./src/routes/admin-api')\nconst mongooseConfig = require('./src/config/mongoose-connection')\nconst app = express()\n\napp.use(bodyParser.json())\napp.use(teamsApi)\napp.use(seurityApi)\napp.use(adminApi)\n\napp.use((err, req, res, next) => {\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"team_1\": \"Peru\", \"team_2\": \"Chile\", \"score\": { \"team_1\": 20, \"team_2\": 0} }'  localhost:3000/admin/match/\n\n{\"__v\":0,\"team_1\":\"Peru\",\"team_2\":\"Chile\",\"_id\":\"5a94a2b8221bb505c92d801c\",\"score\":{\"team_1\":20,\"team_2\":0}}\n```", "```js\nconst express = require('express')\nconst api = express.Router()\nconst Match = require('../models/match')\n\napi\n  .route('/matches')\n  .get((req, res, next) => {\n     Match.find().exec()\n        .then(matches => res.json(matches))\n        .catch(err => next(err))\n  })\n\nmodule.exports = api\n```", "```js\n...\nconst adminApi = require('./src/routes/admin-api')\nconst matchesApi = require('./src/routes/matches-api')\nconst mongooseConfig = require('./src/config/mongoose-connection')\nconst app = express()\n\napp.use(bodyParser.json())\napp.use(teamsApi)\napp.use(seurityApi)\napp.use(adminApi)\napp.use(matchesApi)\n\n...\n```", "```js\n$ curl localhost:3000/matches\n\n[{\"_id\":\"5a949f982c1fda05b8c5c00a\",\"team_1\":\"Peru\",\"team_2\":\"Chile\",\"__v\":0,\"score\":{\"team_1\":20,\"team_2\":0}}]\n```", "```js\n...\nconst Match = require('../models/match')\n\nconst updateScore = async (matchId, teamId) => {\n try {\n let match = await Match.findById(matchId)\n\n if (match == null) throw new Error(\"Match not found\")\n\n if (teamId == 'team_1') {\n match.score.team_1++;\n } else {\n match.score.team_2++;\n }\n\n match = await match.save()\n return match\n\n } catch (err) {\n throw err\n }\n}\n\napi\n  .route('/admin/match/:id?')\n...\n```", "```js\n...\napi\n  .route('/admin/match/:id?')\n  .post((req, res, next) => {\n     ...\n  })\napi\n  .route('/admin/match/scores/:id')\n .post((req, res, next) => {\n\n const matchId = req.params.id\n const teamId = req.body.teamId\n\n updateScore(matchId, teamId)\n .then(match => res.json(match))\n .catch(err => next(err))\n })\n...\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"teamId\": \"team_1\" }'  localhost:3000/admin/match/scores/5a94a2b8221bb505c92d801c\n\n{\"_id\":\"5a94a2b8221bb505c92d801c\",\"team_1\":\"Peru\",\"team_2\":\"Chile\",\"__v\":0,\"score\":{\"team_1\":21,\"team_2\":0}}\n```", "```js\n$ npm install --save express-jwt express-jwt-permissions\n```", "```js\n...\nconst Match = require('../models/match')\nconst auth =require('express-jwt')\n\nconst updateScore = async (matchId, teamId) => {\n  ...\n}\n\napi\n  .route('/admin/match/:id?')\n  .post(auth({ secret: 's3cret'}),\n  (req, res, next) => {\n    ...\n  })\n...\n```", "```js\nreturn jwt.sign(userData, \"s3cret\", { expiresIn: '3h' })\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"team_1\": \"Peru\", \"team_2\": \"France\", \"score\": { \"team_1\": 5, \"team_2\": 5} }'  localhost:3000/admin/match/ {\"error\":\"No authorization token was found\"}\n\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"username\":\"admin\", \"password\":\"admin\"}' localhost:3000/auth\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk2OTgyMjksImV4cCI6MTUxOTcwOTAyOX0.HQiz-NbBDBc9kVyBRNUeMsrDexEsk92WXoRyijNp1Rk \n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk2OTgyMjksImV4cCI6MTUxOTcwOTAyOX0.HQiz-NbBDBc9kVyBRNUeMsrDexEsk92WXoRyijNp1Rk\" -d '{\"team_1\": \"Peru\", \"team_2\": \"France\", \"score\": { \"team_1\": 5, \"team_2\": 5} }'  localhost:3000/admin/match/\n\n{\"__v\":0,\"team_1\":\"Peru\",\"team_2\":\"France\",\"_id\":\"5a94c2559e11b6089b2b265e\",\"score\":{\"team_1\":5,\"team_2\":5}}\n```", "```js\n...\nconst auth =require('express-jwt')\nconst guard = require('express-jwt-permissions')()\n\nconst updateScore = async (matchId, teamId) => {\n  ...\n}\n\napi\n  .route('/admin/match/:id?')\n  .post(auth({ secret: 's3cret'}),\n    guard.check('admin:create:match'),\n    (req, res, next) => {\n\n      ...    \n\n  })\n...\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk2OTgyMjksImV4cCI6MTUxOTcwOTAyOX0.HQiz-NbBDBc9kVyBRNUeMsrDexEsk92WXoRyijNp1Rk\" -d '{\"team_1\": \"Peru\", \"team_2\": \"Brasil\", \"score\": { \"team_1\": 80, \"team_2\": 5} }'  localhost:3000/admin/match/\n\n{\"error\":\"Permission Denied\"}\n```", "```js\n...\nconst logIn = (username, password) => {\n    if (username == 'admin' && password == 'admin') {\n\n        let userData = {\n            name: \"Admin\"\n        }\n\n        return generateToken(userData)\n\n    } else {\n        return null\n    }\n\n}\n...\n```", "```js\n...    \n    let userData = {\n       name: \"Admin\",\n      permissions: [\"admin:create:match\"] \n    }\n...\n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -d '{\"username\":\"admin\", \"password\":\"admin\"}' localhost:3000/auth\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk2OTk4MzIsImV4cCI6MTUxOTcxMDYzMn0.cVTtJHcbQ2J76s6uRjuySCWq4dKXlNzAfInl0ZLgri \n```", "```js\n$ curl -X POST -H \"Content-type: application/json\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW4iLCJpYXQiOjE1MTk2OTgyMjksImV4cCI6MTUxOTcwOTAyOX0.HQiz-NbBDBc9kVyBRNUeMsrDexEsk92WXoRyijNp1Rk\" -d '{\"team_1\": \"Peru\", \"team_2\": \"China\", \"score\": { \"team_1\": 5, \"team_2\": 5} }'  localhost:3000/admin/match/\n\n{\"__v\":0,\"team_1\":\"Peru\",\"team_2\":\"China\",\"_id\":\"5a94c87987d2820a0d1931e7\",\"score\":{\"team_1\":5,\"team_2\":5}}\n```", "```js\n$ cd /some/path\n$ git clone https://github.com/EriksonMurrugarra/AureliaAuth0\n```", "```js\n$ cd AureliaAuth0\n$ npm install\n...\n$ au run --watch\n\nWriting app-bundle.js...\nWriting vendor-bundle.js...\nFinished 'writeBundles'\nApplication Available At: http://localhost:9000\nBrowserSync Available At: http://localhost:3001\n```", "```js\n...  \nauth0 = new auth0.WebAuth({\n    domain: 'eriksonmurrugarra.auth0.com',\n clientID: 'LBmldq5O0XHPYz4SAyMr03ThgfMOiHs7',\n redirectUri: 'http://localhost:9000/callback',\n audience: 'https://eriksonmurrugarra.auth0.com/userinfo',\n responseType: 'token id_token',\n scope: 'openid'\n  })\n...\n```"]