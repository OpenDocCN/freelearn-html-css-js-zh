["```js\n<script>\n  console.log('inline script');\n</script>\n```", "```js\n(() => {\n  const node = document.createElement('p');\n  node.innerText = 'async.js: async script executed';\n  document.body.appendChild(node);\n})();\n```", "```js\n(() => {\n  const node = document.createElement('p');\n  node.innerText = 'script.js: blocking script executed';\n  document.body.appendChild(node);\n})();\n```", "```js\n<script>\n  (() => {\n    const node = document.createElement('p');\n    node.innerText = 'inline: script 1 executed';\n    document.body.appendChild(node);\n  })();\n</script>\n<script src=\"img/async.js\" async></script>\n<script src=\"img/script.js\"></script>\n<script>\n  (() => {\n    const node = document.createElement('p');\n    node.innerText = 'inline: script 2 executed';\n    document.body.appendChild(node);\n  })();\n</script>\n```", "```js\n(() => {\n  const node = document.createElement('p');\n  node.innerText = 'defer.js: defer script executed';\n  document.body.appendChild(node);\n})();\n```", "```js\n<!-- no change to inline script 1 -->\n<script src=\"img/defer.js\" defer></script>\n<script src=\"img/async.js\" async></script>\n<script src=\"img/script.js\"></script>\n<!-- no change to inline script 2 -->\n```", "```js\nconst node = document.createElement('p');\nnode.innerText = 'module.js: type=\"module\" executed';\ndocument.body.appendChild(node);\n```", "```js\nconst node = document.createElement('p');\nnode.innerText = 'module-async.js: type=\"module\"\n  async executed';\ndocument.body.appendChild(node);\n```", "```js\n<!-- no change to inline scripts -->\n<script type=\"module\">\n  const node = document.createElement('p');\n  node.innerText = 'inline: type=\"module\" executed';\n  document.body.appendChild(node);\n</script>\n<script src=\"img/module-async.js\" type=\"module\" async>\n  </script>\n<script src=\"img/module.js\" type=\"module\"></script>\n<!-- no change to existing external scripts -->\n```", "```js\nlink element:\n```", "```js\n<head>\n  <link rel=\"preconnect\" href=\"https://example.com\" />\n</head>\n```", "```js\n<head>\n  <link rel=\"preload\" href=\"async.js\" as=\"script\" />\n  <link rel=\"modulepreload\" href=\"module-async.js\"\n    as=\"script\" />\n</head>\n```", "```js\nimport React from 'react';\nimport Script from 'next/script';\nexport default function Index() {\n  return (\n    <>\n      <h1>Next.js Script Strategy</h1>\n      <Script>{`console.log('inline script 1');`}</Script>\n      <Script\n        strategy=\"beforeInteractive\"\n        dangerouslySetInnerHTML={{\n          __html: `console.log('inline script 2');`,\n        }}\n      ></Script>\n    </>\n  );\n}\n```", "```js\nimport React from 'react';\nimport Script from 'next/script';\nexport default function Index() {\n  return (\n    <>\n      {/* no change to h1 or inline script 1 */}\n      <Script src=\"img/lazyOnload.js\" strategy=\"lazyOnload\" />\n      <Script src=\"img/afterInteractive.js\" strategy=\\\n        \"afterInteractive\" />\n      <Script src=\"img/beforeInteractive.js\" strategy=\n        \"beforeInteractive\" />\n      {/* no change to inline script 2 */}\n    </>\n  );\n}\n```", "```js\nconst nextConfig = {\n  // no change necessary to other config fields\n  experimental: {\n    nextScriptWorkers: true,\n  },\n};\nmodule.exports = nextConfig;\n```", "```js\n▲ Next.js 13.5.4\n- Local:        http://localhost:3000\n- Experiments (use at your own risk):\n    · nextScriptWorkers\n✓ Ready in 2.4s\n```", "```js\nconsole.log('analytics.js: loaded');\nasync function trackPageLoad() {\n  const responseJson = await fetch(\n    'https://jsonplaceholder.typicode.com/posts',\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        page: window.location.pathname,\n        origin: window.location.origin,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    },\n  ).then((response) => response.json());\n  console.log('analytics.js: page load fetch response',\n    responseJson);\n}\ntrackPageLoad();\n```", "```js\nimport React from 'react';\nimport Script from 'next/script';\nexport default function Worker() {\n  return (\n    <>\n      <h1>Next.js Script \"worker\" experimental\n         Strategy</h1>\n      <Script src=\"img/analytics.js\" strategy=\"worker\" />\n      <Script src=\"img/lazyOnload.js\" strategy=\"lazyOnload\" />\n      <Script src=\"img/afterInteractive.js\" strategy=\n        \"afterInteractive\" />\n      <Script src=\"img/beforeInteractive.js\" strategy=\n        \"beforeInteractive\" />\n    </>\n  );\n}\n```"]