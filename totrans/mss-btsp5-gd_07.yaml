- en: '*Chapter 6*: Understanding and Using the Bootstrap 5 Utility API'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will learn how to use the **utility API** to generate and
    add new simple and complex utilities as well as overwrite, modify, and remove
    existing utilities.
  prefs: []
  type: TYPE_NORMAL
- en: It’s useful to know how to use the utility API when you need to make small adjustments
    to your components or general layout, for example, to control the spacing or sizing
    of elements, add contextual color, change the border, or create a layout based
    on **flexbox**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: About the utility API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the utility API syntax
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the utility API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For the two last sections, there will be plenty of code examples to help understand
    the powerful utility API.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To preview the examples, you will need a code editor and a browser. The source
    code for all code examples can be found here: [https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide](https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will need a Sass compiler to compile the Sass files to CSS. Please see [*Chapter
    2*](B17143_02_epub.xhtml#_idTextAnchor033), *Using and Compiling Sass*, for different
    ways to do this.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: About the utility API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Bootstrap 5 features a so-called utility API, which is used to generate the
    different utility classes and/or CSS custom properties (also referred to as CSS
    variables). It works in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: The `_utilities.scss` file contains the `$utilities` variable, which is a Sass
    map containing various settings used by the utility API. It’s actually multiple
    maps that are merged into one single map with nested maps using the `map-merge()`
    Sass function. There are 83 groups of utility classes, which are grouped by their
    name. Their settings and values differ in each of them, but some of them share
    some of the values (such as some of the flex utilities sharing the `flex` class
    prefix).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `$utilities` variable is used in the `utilities/_api.scss` file, which is
    imported after all the other Bootstrap 5 elements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the `utilities/_api.scss` file, the `$utilities` variable is passed as an
    argument to a `generate-utility()` mixin, which is located in the `mixins/_utilities.scss`
    file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `generate-utility()` mixin is the largest and most advanced of Bootstrap
    5’s various mixins found in the `mixin` subfolder. This is where the real magic
    happens when a Sass map with the required and optional values is passed to it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We won’t learn how the Sass code in the utility API works in detail, but instead,
    we will learn its syntax and see different examples of how we can use it to generate
    and add both simple and complex new utilities as well as overwrite, modify, and
    remove existing utilities.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the utility API syntax
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s now take a look at the syntax of the utility API. First is an overview
    of the syntax with all the options: one line of comment above each line of code
    per option. In the comments, you can see the name and, in brackets, whether the
    option is required or optional, and in the line of code, you can see the name
    followed by the type of values accepted in square brackets as well as the default
    value (if any) in brackets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: We will go through each of these options and see what they do together with
    some examples.
  prefs: []
  type: TYPE_NORMAL
- en: About the code examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For all code examples in this chapter, the Bootstrap 5 imports have been reduced
    to include just the necessary ones when working with the utility API. For the
    examples in this section related to the utility API syntax, the required imports
    in the top of the SCSS files are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'For the other examples related to using the utility API, the required imports
    in the top of the SCSS files are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'After the required imports, we import the default utilities, add our own custom
    code, and finally, import the utilities API. It looks something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have seen the structure of the SCSS files for this chapter, we can
    omit the code that’s simply importing the Bootstrap 5 partials and focus on the
    custom code. The HTML examples have also been reduced to show only the necessary
    code. Remember, for each code example, there are file references to the full example
    with all the imports in place.
  prefs: []
  type: TYPE_NORMAL
- en: Name
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is the name of the utility, which should be a string in quotes. It’s not
    used in the generated CSS, so it’s more a way of organizing the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: CSS property
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The CSS property should be written without any quotes and must be a valid CSS
    property. It can be one CSS property (most common) or a space-separated list of
    CSS properties. It’s used for the CSS rule and is also the default class name
    if the `class` key is not defined.
  prefs: []
  type: TYPE_NORMAL
- en: One CSS property
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here’s an example with one CSS property:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-single/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-single/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-single/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple CSS properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here’s an example with multiple CSS properties:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-multiple/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-multiple/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-property-multiple/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This specifies the values for the specified CSS property, which are used when
    generating the class names and CSS rules.
  prefs: []
  type: TYPE_NORMAL
- en: 'It can be a space-separated list of values to use both in the class name and
    CSS rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, you can use a map if you don’t want the class name to be the same as the
    value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s use our first example with one CSS property again and change the values
    from a list to a map:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/values/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/values/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: 'It’s also possible to refer to a Sass variable that stores the list or map:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/values/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Class
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This option is used to change the `class` prefix used in the compiled CSS.
    This is optional, and the prefix should be written without quotes. Consider our
    first example from before:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/class/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/class/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/class/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: CSS variable utilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a Boolean option that can be used to generate CSS variables for the
    selector instead of regular CSS rules.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s change our first example to generate CSS variables instead of regular
    CSS rules:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-variable-utilities/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-variable-utilities/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-variable-utilities/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: 'This HTML must be combined with the following CSS, which is located in the
    `<style>` tag of the HTML file in our example:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/css-variable-utilities/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: The CSS selector targets all the paragraph elements on the page that have a
    class starting with `font-weight`, and it then sets the font weight using the
    `--bs-fw` variable stored together with the various class names.
  prefs: []
  type: TYPE_NORMAL
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: CSS variable name
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This option defines the prefix for the CSS variable utilities coming after
    the default `--bs-` prefix, which we used together with `css-var: true` in the
    previous example like this: `css-variable-name: fw`. The full prefix, as we saw,
    then became `--bs-fw`.'
  prefs: []
  type: TYPE_NORMAL
- en: Local CSS variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using this Boolean option, the utility API will still generate CSS rules, but
    also local CSS variables within these rules. You must specify a Sass map as the
    value, where the keys of the map are the CSS variable names, and the values of
    the map are the CSS variable values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s change our first example to also generate local CSS variables:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/local-css-variables/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE170]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE171]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE172]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE173]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE174]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE175]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE176]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/local-css-variables/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE177]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE178]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE179]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE180]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE181]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE182]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE183]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE184]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE185]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE186]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE187]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE188]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/local-css-variables/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE189]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE190]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE191]'
  prefs: []
  type: TYPE_PRE
- en: 'This HTML must be combined with the following CSS, which is located in the
    `<style>` tag of the HTML file in our example:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/local-css-variables/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE192]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE193]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE194]'
  prefs: []
  type: TYPE_PRE
- en: The CSS selector targets all the paragraph elements on the page that have a
    class starting with `font-weight`, and it then sets the font weight using the
    `--bs-font-weight-opacity` variable stored together with the various class names.
  prefs: []
  type: TYPE_NORMAL
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: State
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This option is used to generate pseudo-class variations in addition to the normal
    utility classes. You can specify a single pseudo-class or a space-separated list
    of pseudo-classes. When using the `state` option, the utility API will generate
    class names for that pseudo-class, and the name of the pseudo-class will be appended
    to the class names.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s change our first example yet again:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/state/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE195]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE196]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE197]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE198]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE199]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE200]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE201]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE202]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE203]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE204]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/state/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE205]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE206]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE207]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE208]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE209]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE210]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/state/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE211]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE212]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE213]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser and hover over the paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: Responsive
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Boolean option is used to generate responsive utilities across all breakpoints.
    It will insert the device abbreviations as an infix to the class names.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s make our example responsive:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/responsive/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE214]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE215]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE216]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE217]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE218]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE219]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE220]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE221]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE222]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE223]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/responsive/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE224]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE225]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE226]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE227]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE228]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE229]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE230]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE231]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE232]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE233]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE234]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE235]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE236]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE237]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/responsive/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE238]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE239]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE240]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE241]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE242]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE243]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE244]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE245]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE246]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser and resize the browser
    window.
  prefs: []
  type: TYPE_NORMAL
- en: RFS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Boolean option will enable fluid rescaling with the RFS Sass plugin. You
    will learn more about this plugin in [*Chapter 10*](B17143_10_epub.xhtml#_idTextAnchor227)*,
    Using Bootstrap 5 with Advanced Sass and CSS Features*.
  prefs: []
  type: TYPE_NORMAL
- en: Print
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Boolean option will, in addition to the normal utility classes, generate
    utility classes for print as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use our example one last time:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/print/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE247]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE248]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE249]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE250]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE251]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE252]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE253]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE254]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE255]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE256]'
  prefs: []
  type: TYPE_PRE
- en: 'This compiles to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/print/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE257]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE258]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE259]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE260]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE261]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE262]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE263]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE264]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of this utility by using it with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/api-syntax/print/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE265]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE266]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE267]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser and then select **Print**
    in your browser’s menu. This will open a **Print** dialog where you can see a
    preview of the page with the print styles applied.
  prefs: []
  type: TYPE_NORMAL
- en: RTL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Boolean option specifies whether the utility should be included in the
    RTL version of the compiled stylesheet. This is a version of Bootstrap 5 with
    support for right-to-left text across layout, components, and utilities.
  prefs: []
  type: TYPE_NORMAL
- en: '!important'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All utility classes generated with the utility API have `!important` added to
    be sure they overwrite styling for components and modifier classes. This can be
    disabled by setting the `$enable-important-utilities` option to `false`, which
    we saw earlier in [*Chapter 4*](B17143_04_epub.xhtml#_idTextAnchor079), *Bootstrap
    5 Global Options and Colors*.
  prefs: []
  type: TYPE_NORMAL
- en: More examples of the syntax
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To see more examples of the syntax for the utility API, you can go through the
    `_utilities.scss` file in Bootstrap 5\. Here, you will see the syntax being used
    to generate all the default utility classes found in Bootstrap 5.
  prefs: []
  type: TYPE_NORMAL
- en: Using the utility API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have seen what the syntax of the utility API looks like, and we will now
    see some examples of how to use it for different purposes. First, we will see
    examples of how to generate and add both simple and complex new utilities, and
    then we will see examples of how to overwrite, modify, and remove existing utilities.
    To do this, we’re going to use the following two Sass functions: `map-merge()`
    (to merge existing maps) and `map-get()` (to get a value associated with a key
    from a specified Sass map).'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a simple utility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we will generate and add a simple cursor utility, which can be used to
    change the cursor when hovering over specific elements. We’re specifying the name
    of the utility (`"cursor"`), the CSS property to use (`cursor`), and the values
    to use for that CSS property (`auto context-menu copy grab help pointer wait`).
    These are the minimum required options to specify when using the utility API.
  prefs: []
  type: TYPE_NORMAL
- en: Before using the syntax of the utility API, we’re merging the existing utility
    settings in the `$utilities` variable with this new utility using the `map-merge()`
    Sass function. This is done to avoid overwriting the `$utilities` variable and
    losing all the default utilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-simple-utility/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE268]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE269]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE270]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE271]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE272]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE273]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE274]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE275]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE276]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE277]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE278]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE279]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE280]'
  prefs: []
  type: TYPE_PRE
- en: 'This will compile all the default utilities, as well as the following new utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-simple-utility/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE281]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE282]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE283]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE284]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE285]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE286]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE287]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of these utilities by using it with the following
    HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-simple-utility/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE288]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE289]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE290]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE291]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE292]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE293]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE294]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser and hover with the mouse
    on the different elements.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a complex utility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, here’s an example of how to generate and add a complex opacity utility
    with a lot of the options being used. We’re specifying the name of the utility
    (`"opacity"`), the CSS property to use (`opacity`), the values to use for that
    CSS property as a Sass map (so that the class names can be different from the
    CSS values), the class prefix to use (`o`), and the state to make this utility
    work on `hover`, and we enable the `responsive` and `print` options.
  prefs: []
  type: TYPE_NORMAL
- en: Once again, we’re merging the existing utilities with this new one using the
    `map-merge()` function.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-complex-utility/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE295]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE296]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE297]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE298]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE299]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE300]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE301]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE302]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE303]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE304]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE305]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE306]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE307]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE308]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE309]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE310]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE311]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE312]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE313]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE314]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE315]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE316]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE317]'
  prefs: []
  type: TYPE_PRE
- en: 'This will compile all the default utilities, as well as the following new utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-complex-utility/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE318]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE319]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE320]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE321]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE322]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE323]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE324]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE325]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE326]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE327]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE328]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE329]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE330]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE331]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE332]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE333]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE334]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE335]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE336]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE337]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE338]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE339]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE340]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of these utilities by using it with the following
    HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/add-complex-utility/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE341]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE342]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE343]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE344]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE345]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE346]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE347]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE348]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE349]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE350]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE351]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE352]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE353]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE354]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE355]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE356]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE357]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE358]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE359]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE360]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE361]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE362]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE363]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE364]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser and hover with the mouse
    on the different elements.
  prefs: []
  type: TYPE_NORMAL
- en: Overwriting a utility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can overwrite an existing utility by using the same name. This method can
    be used to modify a utility as well, but you must be careful then and use all
    of the same options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example of how to overwrite the sizing utility for `"width"` with
    a new `"width"` utility that has many more values specified:'
  prefs: []
  type: TYPE_NORMAL
- en: Part-1/chapter-6/examples/overwrite-utility/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE365]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE366]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE367]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE368]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE369]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE370]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE371]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE372]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE373]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE374]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE375]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE376]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE377]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE378]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE379]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE380]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE381]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE382]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE383]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE384]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE385]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE386]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE387]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE388]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE389]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE390]'
  prefs: []
  type: TYPE_PRE
- en: 'This will compile all the default utilities, as well as the following new utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/overwrite-utility/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE391]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE392]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE393]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE394]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE395]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE396]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE397]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE398]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE399]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE400]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE401]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of these utilities by using it with the following
    HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/overwrite-utility/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE402]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE403]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE404]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE405]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE406]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE407]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE408]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE409]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE410]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE411]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE412]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE413]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE414]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE415]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE416]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE417]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE418]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE419]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE420]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE421]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE422]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE423]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying a utility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It’s possible to modify an existing utility. In this example, we will rename
    the `class` prefix for the `"margin-start"` utility from `.ms-*` to `.ml-*`. This
    will now be identical to the prefix used in Bootstrap 4\. This time, we’re going
    to use the `map-get()` function to get the current value of the `"margin-start"`
    property from the `$utilities` variable to be able to merge it with the `class:
    ml` property, which will then overwrite the existing `class: ms` property. The
    code looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/modify-utility/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE424]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE425]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE426]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE427]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE428]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE429]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE430]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE431]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE432]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE433]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE434]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE435]'
  prefs: []
  type: TYPE_PRE
- en: 'This will compile all the default utilities, as well as the following new utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/modify-utility/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE436]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE437]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE438]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE439]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE440]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE441]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE442]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now see the effect of these utilities by using it with the following
    HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/modify-utility/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE443]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE444]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE445]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE446]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE447]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE448]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE449]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE450]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE451]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE452]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser. The renamed class for
    the `margin-left` utility now works.
  prefs: []
  type: TYPE_NORMAL
- en: Removing a utility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It’s possible to remove a utility from the existing set of utilities. Here,
    you can see how to remove the `"user-select"` and `"pointer-events"` interaction
    utilities by setting their values to `null`:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/remove-utility/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE453]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE454]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE455]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE456]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE457]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE458]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE459]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE460]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE461]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE462]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE463]'
  prefs: []
  type: TYPE_PRE
- en: This will compile all the default utilities except for the `"user-select"` and
    `"pointer-events"` utilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now see that these utilities have indeed been removed by trying to use
    them with the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-6/examples/remove-utility/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE464]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE465]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE466]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE467]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE468]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE469]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE470]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE471]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE472]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE473]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE474]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE475]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE476]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE477]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE478]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE479]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE480]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE481]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE482]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE483]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE484]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE485]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE486]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE487]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE488]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE489]'
  prefs: []
  type: TYPE_PRE
- en: To see this in action, open the HTML file in a browser. The utilities for `"user-select"`
    and `"pointer-events"` no longer work.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have now learned all about the utility API, which is a very powerful tool
    built into Bootstrap 5\. This is also the last chapter about customizing Bootstrap
    5 and the last in this first part of the book. In the next part of this book,
    we will see how all of this can be put into practice as we build a complete website
    and customize it in many different ways using Sass and some custom JavaScript.
  prefs: []
  type: TYPE_NORMAL
