["```js\n{\n  \"name\": \"TwitterFeedShower\",\n  \"description\": \"Show Twitter feed\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"twit\": \"*\"\n  },\n  \"main\": \"index.js\"\n}\n```", "```js\nvar http = require('http'),\n  fs = require('fs'),\n  port = 3000,\n  files = [],\n  debug = true;\n```", "```js\nvar app = http.createServer(function (req, res) {\n  if(req.url.indexOf(\"/tweets/\") === 0) {\n    // ... getting tweets\n  } else {\n    serveAssets(req, res);\n  }\n}).listen(port, '127.0.0.1');\nconsole.log(\"Server listening on port \" + port);\n```", "```js\nvar serveAssets = function(req, res) {\n  var file = req.url === '/' ? 'html/page.html' : req.url;\n  if(!files[file] || debug) {\n    try {\n      files[file] = {\n        content: fs.readFileSync(__dirname + \"/\" + file),\n        ext: file.split(\".\").pop().toLowerCase()\n      }\n    } catch(err) {\n      res.writeHead(404, {'Content-Type': 'plain/text'});\n      res.end('Missing resource: ' + file);\n      return;\n    }\n  }\n  respond(files[file], res);\n}\n```", "```js\nvar respond = function(file, res) {\n  var contentType;\n  switch(file.ext) {\n    case \"css\": contentType = \"text/css\"; break;\n    case \"html\": contentType = \"text/html\"; break;\n    case \"js\": contentType = \"application/javascript\"; break;\n    case \"ico\": contentType = \"image/ico\"; break;\n    default: contentType = \"text/plain\";\n  }\n  res.writeHead(200, {'Content-Type': contentType});\n  res.end(file.content);\n}\n```", "```js\nvar Twit = require('twit');\nvar T = new Twit({\n  consumer_key: '...',\n  consumer_secret: '...',\n  access_token: '...',\n  access_token_secret: '...'\n});\nvar numOfTweets = 10;\n```", "```js\nvar app = http.createServer(function (req, res) {\n  if(req.url.indexOf(\"/tweets/\") === 0) {\n    var handle = req.url.replace(\"/tweets/\", \"\");\n    T.get(\"statuses/user_timeline\", { screen_name: handle, count: numOfTweets }, function(err, reply) {\n      res.writeHead(200, {'Content-Type': 'application/json'});\n      res.end(JSON.stringify(reply));\n    });\n  } else {\n    serveAssets(req, res);\n  }\n}).listen(port, '127.0.0.1');\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"say-hello\">\n  <div class=\"content\">{{name}}</div>\n</script>\n```", "```js\nApp.Person = Ember.Object.extend({\n  firstname: '',\n  lastname: '',\n  hi: function() {\n    var name = this.get(\"firstname\") + \" \" + this.get(\"lastname\");\n    alert(\"Hello, my name is \" + name);\n  }\n});\nvar person = App.Person.create();\nperson.set(\"firstname\", \"John\");\nperson.set(\"lastname\", \"Black\");\nperson.hi();\n```", "```js\nApp.Person = Ember.Object.extend({\n  firstname: '',\n  lastname: '',\n  hi: function() {\n    alert(\"Hello, my name is \" + this.get(\"name\"));\n  },\n    name: function() {\n        return this.get(\"firstname\") + \" \" + this.get(\"lastname\");\n    }.property(\"firstname\", \"lastname\")\n});\nvar person = App.Person.create();\nperson.set(\"firstname\", \"John\");\nperson.set(\"lastname\", \"Black\");\nperson.hi();\n```", "```js\nname: function(key, value) {\n  if (arguments.length > 1) {\n        var nameParts = value.split(/\\s+/);\n        this.set('firstname', nameParts[0]);\n        this.set('lastname',  nameParts[1]);\n    }\n    return this.get(\"firstname\") + \" \" + this.get(\"lastname\");\n}.property(\"firstname\", \"lastname\")\n```", "```js\nApp = Ember.Application.create();\nApp.Router.map(function() {\n  this.resource('post', { path: '/post/:post_id' }, function() {\n    this.route('edit', { path: '/edit' });\n    this.resource('comments', function() {\n      this.route('new');\n    });\n  });\n});\n```", "```js\nedit route. That's because the name of the path is the same as the route name.\n```", "```js\nApp.CommentsController = Ember.ObjectController.extend({\n  // ...\n});\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"post/index\">\n  <section>\n    <h1>{{title}}</h1>\n    <p>{{text}}</p>\n  </section>\n</script>\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"say-hello\">\n  Hello, <b>{{view.name}}</b>\n</script>\n```", "```js\nvar view = Ember.View.create({\n  templateName: \"say-hello\",\n  name: \"user\",\n  click: function(evt) {\n    alert(\"Clicked.\");\n  }\n});\nview.append();\n```", "```js\nApp.PostRoute = Ember.Route.extend({\n  model: function() {\n    return Ember.$.getJSON(\"/posts.json\");\n  }\n});\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"post/index\">\n  <section>\n    <h1>{{title}}</h1>\n    <p>{{text}}</p>\n  </section>\n</script>\n\nApp.PostIndexRoute = Ember.Route.extend({\n  model: function() {\n    return {\n      title: \"Title of the post\",\n      text: \"Text of the post\"\n    }\n  }\n})\n```", "```js\nApp.Router.map(function() {\n  this.route(\"books\");\n});\n```", "```js\n<!doctype html>\n<html>\n    <head>\n        <title>Get Twitter Feed</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/styles.css\">\n    </head>\n    <body>\n\n        <script src=\"img/jquery-1.10.2.js\"></script>\n        <script src=\"img/handlebars-1.1.2.js\"></script>\n        <script src=\"img/ember-1.3.1.js\"></script>\n        <script src=\"img/scripts.js\"></script>\n    </body>\n</html>\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"social-feed\">\n    <div class=\"wrapper\">\n        <h1>Social feed</h1>\n        <section>\n            {{outlet}}\n        </section>\n    </div>\n</script>\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"social-feed/index\">\n    {{input \n        type=\"text\" \n        value=handle \n        placeholder=\"type a Twitter handle\"\n    }}\n    <a href=\"javascript:void(0);\" class=\"get-tweets-button\" {{action getTweets}}>Get Tweets</a>\n</script>\n```", "```js\n<script type=\"text/x-handlebars\" data-template-name=\"social-feed/tweets\">\n    <h3>Tweets of {{{formattedHandle}}}:</h3>\n    <hr />\n    <ul>\n    {{#each}}\n        <li>{{formatTweet text}}</li>\n    {{/each}}\n    </ul>\n    {{#link-to 'social-feed.index'}}back{{/link-to}}\n</script>\n```", "```js\nApp = Ember.Application.create();\nApp.Router.map(function() {\n  this.resource('social-feed', { path: '/' }, function() {\n    this.route(\"tweets\", { path: '/tweets/:handle' });\n  });\n});\n```", "```js\nApp.SocialFeedIndexController = Ember.Controller.extend({\n  handle: '',\n  actions: {\n    getTweets: function() {\n      if(this.get('handle') !== '') {\n        window.location.href = \"#/tweets/\" + this.get('handle');\n        this.set('handle', '');\n      } else {\n        alert(\"Please type a Twitter handle.\");\n      }\n    }\n  }\n});\n```", "```js\nApp.SocialFeedIndexView = Ember.View.extend({\n  didInsertElement: function() {\n    this.$('input').focus();\n  }\n});\n```", "```js\nApp.SocialFeedTweetsRoute = Ember.Route.extend({\n  model: function(params) {\n    this.set('handle', params.handle);\n    return Ember.$.getJSON('/tweets/' + params.handle);\n  },\n  setupController: function(controller, model) {\n    controller.set(\"model\", model);\n         controller.set(\"handle\", this.get('handle'));\n    }\n});\n\nApp.SocialFeedTweetsController = Ember.ArrayController.extend({\n  handle: '',\n  formattedHandle: function() {\n    return \"<a href='http://twitter.com/\" + this.handle + \"'>@\" + this.handle + '</a>';\n  }.property('handle')\n});\n```", "```js\n{{#each}}\n  <li>{{formatTweet text}}</li>\n{{/each}}\n```", "```js\n Ember.Handlebars.registerBoundHelper('formatTweet', function(value) {\n  var exp = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n    return new Handlebars.SafeString(value.replace(exp, \"<a href='$1'>$1</a>\"));\n});\n```"]