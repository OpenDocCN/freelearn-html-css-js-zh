["```js\nExt.define('Examples.view.multiselect.MultiSelectFormPanel', {\n  extend : 'Ext.form.Panel',\n  alias : 'widget.multiselectformpanel',\n  requires : ['Ext.ux.form.MultiSelect'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      bodyPadding : 10,\n      items : [{\n        anchor : '100%',\n        xtype : 'multiselect',\n        fieldLabel : 'Multi Select',\n        name : 'multiselect',\n        store : Ext.create('Examples.store.DummyStore'),\n        valueField : 'name',\n        displayField : 'name',\n        ddReorder : true,\n        listeners : {\n          change : {\n            fn : this.getMultiSelectValue\n          },\n          scope : this\n        }\n      }]\n    });\n    this.callParent(arguments);\n\n  },\n\n  getMultiSelectValue : function() {\n    var title = \"Multiselect values\",\n    value = this.getForm().findField('multiselect').getValue();\n    Ext.Msg.alert(title, value);\n  }\n});\n```", "```js\nExt.define('Examples.view.itemselector.ItemSelectorFormPanel', {\n  extend : 'Ext.form.Panel',\n  alias : 'widget.itemselectorformpanel',\n  requires : ['Ext.ux.form.ItemSelector'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      bodyPadding : 10,\n      items : [{\n        anchor : '100%',\n        xtype: 'itemselector',\n        name: 'itemselector',\n        store : Ext.create('Examples.store.DummyStore'),\n        valueField : 'name',\n        displayField : 'name',\n        fromTitle: 'Available',\n        toTitle: 'Selected'\n\n      }]\n    });\n  this.callParent(arguments);\n\n  }\n});\n```", "```js\nviewConfig: {\n    plugins: { ptype: 'treeviewdragdrop' }\n}\n```", "```js\nExt.define('Examples.view.treeviewdragdrop.TreeViewDragDropTree', {\n    extend : 'Ext.tree.Panel',\n    alias : 'widget.treeviewdragdroptree',\n    requires : ['Examples.store.SampleTreeStore',\n                'Ext.tree.plugin.TreeViewDragDrop'],\n\n    constructor : function(config) {\n\n        Ext.apply(this, {\n            border : false,\n            store : Ext.create('Examples.store.SampleTreeStore'),\n            viewConfig : {\n                plugins : [\n                    'treeviewdragdrop'\n                ]\n            },            \n            useArrows : true\n        });\n\n        this.callParent(arguments);\n\n    }\n});\n```", "```js\nExt.define('Examples.view.checkcolumn.CheckColumnGrid', {\n  extend : 'Ext.grid.Panel',\n  alias : 'widget.checkcolumngrid',\n  requires : ['Examples.store.DummyStore',\n              'Ext.ux.CheckColumn'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      border : false,\n      store : Ext.create('Examples.store.DummyStore'),\n      columns : [{\n        header : 'Name',\n        dataIndex : 'name',\n        flex : 1\n      },{\n        header : 'Birth date',\n        dataIndex : 'birthdate',\n        renderer : Ext.util.Format.dateRenderer('m/d/Y')\n      },{\n        xtype : 'checkcolumn',\n        header : 'Attending?',\n        dataIndex : 'attending'\n      }]\n\n    });\n\n    this.callParent(arguments); \n\n  }\n});\n```", "```js\nExt.define('Examples.view.cellediting.CellEditingGrid', {\n  extend : 'Ext.grid.Panel',\n  alias : 'widget.celleditingGrid',\n  requires : ['Examples.store.DummyStore',\n              'Ext.grid.plugin.CellEditing', \n              'Ext.form.field.Date'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      store : Ext.create('Examples.store.DummyStore'),\n      columns : [{\n        header : 'Name',\n        dataIndex : 'name',\n        flex : 1,\n        editor : 'textfield'\n      },\n      {\n        header : 'Birth date',\n        dataIndex : 'birthdate',\n        renderer : Ext.util.Format.dateRenderer('m/d/Y'),\n        flex : 1,\n        editor : {\n          xtype : 'datefield',\n          allowBlank : false\n        }\n      }],\n      selType : 'cellmodel',\n      plugins : [Ext.create('Ext.grid.plugin.CellEditing', {\n        clicksToEdit : 1\n      })]\n    });\n\n    this.callParent(arguments); \n\n  }\n});\n```", "```js\nExt.define('Examples.view.rowediting.RowEditingGrid',{\n  extend : 'Ext.grid.Panel',\n  alias : 'widget.roweditingGrid',\n  requires : ['Examples.store.DummyStore',\n              'Ext.grid.plugin.RowEditing', \n              'Ext.form.field.Date'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, {\n      store : Ext.create('Examples.store.DummyStore'),\n      columns : [{\n        header : 'Name',\n        dataIndex : 'name',\n        flex : 1,\n        editor : 'textfield'\n      },{\n        header : 'Birth date',\n        dataIndex : 'birthdate',\n        renderer : Ext.util.Format.dateRenderer('m/d/Y'),\n        flex : 1,\n        editor : {\n          xtype : 'datefield',\n          allowBlank : false\n        }\n      }],\n      selType : 'rowmodel',\n      plugins : [Ext.create('Ext.grid.plugin.RowEditing',{\n        clicksToEdit : 1\n      })]\n    });\n\n    this.callParent(arguments);\n\n  }\n});\n```", "```js\nExt.define('Examples.view.livesearch.LiveSearchGrid', {\n  extend : 'Ext.ux.LiveSearchGridPanel',\n  alias : 'widget.livesearchgrid',\n  requires : ['Examples.store.DummyStore'],\n\n  constructor : function(config) {\n\n    Ext.apply(this, { \n      border : false,\n      store : Ext.create('Examples.store.DummyStore'),\n      columns : [{\n        header : 'Name',\n        dataIndex : 'name',\n        flex : 1\n      },{\n        header : 'Birth date',\n        dataIndex : 'birthdate',\n        renderer : Ext.util.Format.dateRenderer('m/d/Y'),\n        flex : 1\n      }]\n    });\n\n    this.callParent(arguments);\n\n  }\n});\n```"]