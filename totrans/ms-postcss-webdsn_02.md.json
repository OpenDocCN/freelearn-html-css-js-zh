["```js\n    npm install --save-dev gulp-sass\n\n    ```", "```js\n    var reporter = require('postcss-reporter');\n    var sass = require('gulp-sass');\n    ```", "```js\n    var cssnano = require('cssnano');\n    ```", "```js\n    .pipe(postcss([ cssnano ]))\n    ```", "```js\n    gulp.task('autoprefixer', ['lint-styles'], function() {\n    return gulp.src('src/*.css')\n    ```", "```js\n    .pipe(sourcemaps.init())\n    .pipe(sourcemaps.write('maps/'))\n    ```", "```js\n    gulp.task('rename', ['lint-styles'], function () {\n      return gulp.src('dest/*.css')\n        .pipe(rename('style.min.css'))\n        .pipe(sourcemaps.init())\n        .pipe(sourcemaps.write('maps/'))\n        .pipe(gulp.dest(\"dest/\"));\n    });\n    ```", "```js\n    gulp.task(\"lint-styles\", ['sass'], function() {\n      return gulp.src(\"src/*.css\")\n        .pipe(postcss([ stylelint({\n          \"rules\": {\n            \"color-no-invalid-hex\": 2,\n            \"declaration-colon-space-before\": [2, \"never\"],\n            \"indentation\": [2, 2],\n            \"number-leading-zero\": [2, \"always\"]\n          }\n        }),\n        reporter({\n          clearMessages: true,\n        })\n      ]))\n    });\n    ```", "```js\n    gulp.task('sass', function () {\n      gulp.src('src/*.scss')\n        .pipe(sass({outputStyle: 'compressed'}).on('error', sass.logError))\n        .pipe(gulp.dest('src/'));\n    });\n    ```", "```js\n    gulp.task('default', ['sass', 'lint-styles', 'autoprefixer', 'rename']);\n    ```", "```js\n    var watcher = gulp.watch('src/*.scss', ['default']);\n    ```", "```js\n    gulp\n\n    ```", "```js\n    npm install --save-dev postcss-css-variables\n\n    ```", "```js\n    var cssvariables = require('postcss-css-variables');\n    ```", "```js\n    var sass = require('gulp-sass');\n    ```", "```js\n    gulp.task('autoprefixer', function() {\n      return gulp.src('src/*.css')\n      .pipe(postcss([ autoprefixer, cssnano, cssvariables(/* options */) ]))\n      .pipe(gulp.dest('dest/'));\n\n    ```", "```js\n    var rename = require('gulp-rename');\n    var cssnano = require('cssnano');\n\n    ```", "```js\n    gulp.task(\"lint-styles\", ['autoprefixer'], function() {\n    ```", "```js\n    gulp.task('sass', function () {\n      gulp.src('src/*.scss')\n      .pipe(sass({outputStyle: 'compressed'})\n        .on('error', sass.logError))\n        .pipe(gulp.dest('src/'));\n    });\n    ```", "```js\n    gulp.task('default', ['lint-styles', 'autoprefixer', 'rename']);\n    ```", "```js\n    var watcher = gulp.watch('src/*.css', ['default']);\n    watcher.on('change', function(event) {\n    ```", "```js\n    :root {\n      --dark-grayish-green: #868a7b;\n      --very-dark-gray: #333333;\n      --white: #fff;\n\n      --fullsize: 100%;\n    }\n    ```", "```js\n    html, body {\n      width: var(--fullsize);\n      padding: 0;\n      margin: 0;\n      height: var(--fullsize);\n      min-width: var(--fullsize);\n      max-width: var(--fullsize);\n      overflow: hidden;\n      background: var(--dark-grayish-green);\n    }\n    ```", "```js\n    img {\n      width: var(--fullsize);\n      height: var(--fullsize);\n    }\n    ```", "```js\n    /* ------ Hover Effect Styles ------ */\n    .info {\n      background: var(--very-dark-gray);\n    }\n    ```", "```js\n    gulp\n\n    ```", "```js\n    var postcss = require('postcss');\n    var cssvariables = require('postcss-css-variables');\n\n    postcss([\n      cssvariables({\n        variables: {\n          'â€”foo-var': { '100px', isImportant: true },\n          '--other-var': { value: '#00CC00' },\n          '--important-var': { value: '#ffCC00' }\n        }\n      })\n    ])\n    .process(css, opts);\n    ```", "```js\n    npm install --save-dev postcss-mixins\n    npm install --save-dev postcss-calc\n    ```", "```js\n    var cssmixins = require('postcss-mixins');\n    var calc = require('postcss-calc');\n    ```", "```js\n    .pipe(postcss([ autoprefixer, cssvariables(/* options */), cssmixins(/* options */), calc(/*options*/) ]))\n    ```", "```js\n    @define-mixin fontstyle $size, $color {\n      font-size: $(size)px;\n      font-size: calc($size/16)rem;\n      color: $color;\n    }\n    ```", "```js\n    h3 {\n      @mixin fontstyle 32, #fff;\n      text-transform: uppercase;\n    ```", "```js\n    .info h3 {\n      @mixin fontstyle 20, #fff;\n\n    ```", "```js\n    .info p {\n      @mixin fontstyle 12, #bbb;\n      padding: 50px 5px;\n    ```", "```js\n    gulp\n\n    ```", "```js\nrequire('postcss-mixins')({\n  mixins: {\n    icons: function (mixin, dir) {\n      fs.readdirSync('/images/' + dir).forEach(function (file) {\n        var icon = file.replace(/\\.svg$/, '');\n        var rule = postcss.rule('.icon.icon-' + icon);\n        rule.append({\n          prop:  'background',\n          value: 'url(' + dir + '/' + file + ')'\n        });\n        mixin.replaceWith(rule);\n      });\n    }\n  }\n});\n```", "```js\n.icon.icon-back { background: url(signin/back.svg) }\n.icon.icon-secret { background: url(signin/secret.svg) }\n```", "```js\n@for $x from 1 to 3 {\n  .grid-$x { width: $(x)px; }\n}\n```", "```js\n.grid-1 {\n  width: 1px\n}\n.grid-2 {\n  width: 2px\n}\n.grid-3 {\n  width: 3px\n}\n```", "```js\n    npm install --save-dev postcss-each\n\n    ```", "```js\n    var eachloop = require('postcss-each');\n    ```", "```js\n    cssvariables(/* options */), cssmixins(/* options */), calc(/*options*/),\n    ```", "```js\n    .pipe(postcss([ autoprefixer, cssnano(), foreach(/*options*/) ]))\n    ```", "```js\n    $social: twitter, linkedin, youtube;\n\n    .social-icon {\n      // shared information here\n      background: 50% no-repeat;\n      background-size: 100%;\n      float: left;\n      height: 50px;\n      width: 50px;\n\n      // unique information loops here\n      @each $network in $social {\n        &.#{$network} {\n          background-image: url(\"../img/#{$network}.png\");\n        }\n      }\n    }\n    ```", "```js\n    gulp\n\n    ```", "```js\n.social-icon {\n  background: 50% no-repeat;\n  background-size: 100%;\n  float: left;\n  height: 50px;\n  width: 50px;\n}\n\n.social-icon.twitter {\n  background-image: url(\"../img/twitter.png\");\n}\n\n.social-icon.linkedin {\n  background-image: url(\"../img/linkedin.png\");\n}\n\n.social-icon.youtube {\n  background-image: url(\"../img/youtube.png\");\n}\n```", "```js\n.social-icon {\n  // shared information here\n  background: 50% no-repeat;\n  background-size: 100%;\n  float: left;\n  height: 50px;\n  width: 50px;\n}\n```", "```js\n@each $media in twitter, linkedin, youtube {\n  . $(img) {\n    background: url('../img/$(media).png');\n  }\n}\n```"]