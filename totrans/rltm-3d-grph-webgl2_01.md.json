["```js\n<html>\n<head>\n  <title>Real-Time 3D Graphics with WebGL2</title>\n  <link rel=\"shortcut icon\" type=\"image/png\" \n   href=\"/common/images/favicon.png\" />\n\n  <style type=\"text/css\">\n    canvas {\n      border: 5px dotted blue;\n    }\n  </style>\n</head>\n<body>\n\n  <canvas id=\"webgl-canvas\" width=\"800\" height=\"600\">\n    Your browser does not support the HTML5 canvas element.\n  </canvas>\n\n</body>\n</html>\n```", "```js\n<style type=\"text/css\">\n  canvas {\n    border: 5px dotted blue;\n  }\n</style>\n```", "```js\n<script type=\"text/javascript\">\n  'use strict';\n\n  function init() {\n    const canvas = document.getElementById('webgl-canvas');\n\n    // Ensure we have a canvas\n    if (!canvas) {\n      console.error('Sorry! No HTML5 Canvas was found on \n       this page');\n      return;\n    }\n\n    const gl = canvas.getContext('webgl2');\n\n    // Ensure we have a context\n    const message = gl\n      ? 'Hooray! You got a WebGL2 context'\n      : 'Sorry! WebGL is not available';\n\n    alert(message);\n  }\n\n  // Call init once the document has loaded\n  window.onload = init;\n</script>\n```", "```js\nconst gl = canvas.getContext('webgl2');\n```", "```js\n<html>\n<head>\n  <title>Real-Time 3D Graphics with WebGL2</title>\n  <link rel=\"shortcut icon\" type=\"image/png\" \n   href=\"/common/images/favicon.png\" />\n\n  <style>\n    canvas {\n      border: 5px dotted blue;\n    }\n  </style>\n\n  <script type=\"text/javascript\">\n    'use strict';\n\n    let gl;\n\n    function updateClearColor(...color) {\n      // The ES6 spread operator (...) allows for us to\n      // use elements of an array as arguments to a function\n      gl.clearColor(...color);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.viewport(0, 0, 0, 0);\n    }\n\n    function checkKey(event) {\n      switch (event.keyCode) {\n        // number 1 => green\n        case 49: {\n          updateClearColor(0.2, 0.8, 0.2, 1.0);\n          break;\n        }\n        // number 2 => blue\n        case 50: {\n          updateClearColor(0.2, 0.2, 0.8, 1.0);\n          break;\n        }\n        // number 3 => random color\n        case 51: {\n          updateClearColor(Math.random(), Math.random(), \n           Math.random(), 1.0);\n          break;\n        }\n        // number 4 => get color\n        case 52: {\n          const color = gl.getParameter(gl.COLOR_CLEAR_VALUE);\n          // Don't let the following line confuse you.\n          // It basically rounds up the numbers to one\n          // decimal cipher for visualization purposes.\n\n          // TIP: Given that WebGL's color space ranges\n          // from 0 to 1 you can multiply these values by 255\n          // to display in their RGB values.\n          alert(`clearColor = (\n            ${color[0].toFixed(1)},\n            ${color[1].toFixed(1)},\n            ${color[2].toFixed(1)}\n          )`);\n          window.focus();\n          break;\n        }\n      }\n    }\n\n    function init() {\n      const canvas = document.getElementById('webgl-canvas');\n\n      if (!canvas) {\n        console.error('Sorry! No HTML5 Canvas was found on this page');\n        return;\n      }\n\n      gl = canvas.getContext('webgl2');\n\n      const message = gl\n        ? 'Hooray! You got a WebGL2 context'\n        : 'Sorry! WebGL is not available';\n\n      alert(message);\n\n      // Call checkKey whenever a key is pressed\n      window.onkeydown = checkKey;\n    }\n\n    window.onload = init;\n  </script>\n</head>\n<body>\n\n  <canvas id=\"webgl-canvas\" width=\"800\" height=\"600\">\n    Your browser does not support the HTML5 canvas element.\n  </canvas>\n\n</body>\n</html>\n```", "```js\n'use strict';\n\n// A set of utility functions for /common operations across our \n// application\nconst utils = {\n\n  // Find and return a DOM element given an ID\n  getCanvas(id) {\n    const canvas = document.getElementById(id);\n\n    if (!canvas) {\n      console.error(`There is no canvas with id ${id} on this \n       page.`);\n      return null;\n    }\n\n    return canvas;\n  },\n\n  // Given a canvas element, return the WebGL2 context\n  getGLContext(canvas) {\n    return canvas.getContext('webgl2') || console.error('WebGL2 is \n     not available in your browser.');\n  }\n\n};\n```", "```js\nfunction init() {\n  const canvas = utils.getCanvas('webgl-canvas');\n  gl = utils.getGLContext(canvas);\n  window.onkeydown = checkKey;\n}\n```"]