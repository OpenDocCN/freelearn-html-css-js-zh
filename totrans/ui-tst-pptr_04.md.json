["```js\nform .algolia-autocomplete input\n```", "```js\n.algolia-autocomplete > input\n```", "```js\nconst emailInput = await this.page.$('#email');\nconst passwordInput = await this.page.$('#password');\n```", "```js\nconst loginBtn = await this.page.$('#login-form [type=submit]');\n```", "```js\nconst productId = config.productToTestId;\nconst productDiv = await this.page.$(`[data-test-product-id=\"${productId}\"]`);\nconst stockElement = await productDiv.$('[data-test-stock]');\nconst priceElement = await productDiv.$('[data-test-price]');\n```", "```js\nconst productName = config.productToTestName;\nconst productDiv = (await this.page.$x(`//a[text()=\"${productName}\"]/../..`))[0];\nconst stockElement = (await productDiv.$('//h6'))[0];\nconst priceElement = (await productDiv.$(' //div[@class=\"row\"]/p[1]'))[0];\n```", "```js\nconst emailInput = await this.page.$('#email');\nawait emailInput.type(user, {delay: 100});\nconst passwordInput = await this.page.$('#password');\nawait passwordInput.type(password, {delay: 100});\n```", "```js\nconst loginBtn = await this.page.$('#login-form [type=submit]');\nawait loginBtn.click();\n```", "```js\nvar switchSelect = await page.$('#viewMode');\nawait switchSelect.select('list');\nexpect(await page.$$('.list-group-item')).not.to.be.empty;\nawait switchSelect.select('grid');\nexpect(await page.$$('.list-group-item')).to.be.empty;\n```", "```js\nvar switchSelect = await page.$('#viewMode');\nawait switchSelect.select('list');\n```", "```js\nawait page.select('#viewMode', 'list');\n```", "```js\nawait page.keyboard.type('Hello World!');\nawait page.keyboard.press('ArrowLeft');\nawait page.keyboard.down('Shift');\nfor (let i = 0; i < ' World'.length; i++) {\n  await page.keyboard.press('ArrowLeft');\n}\nawait page.keyboard.up('Shift');\nawait page.keyboard.press('Backspace');\n```", "```js\nconst browser = await puppeteer.launch({headless: false, defaultViewport: null});\nconst page = await browser.newPage();\nawait page.goto('https://www.github.com/');\nawait page.keyboard.press('Slash');\nawait page.keyboard.type('puppeteer')\nawait page.keyboard.press('Enter');\n```", "```js\nconst startingX = 20;\nconst startingY = 20;\nconst boxMiddle = 16;\n// X turn 1;\nawait page.mouse.click(startingX + boxMiddle, startingY + boxMiddle);\n// Y turn 1;\nawait page.mouse.click(startingX + boxMiddle, startingY + boxMiddle * 3);\n// X turn 2;\nawait page.mouse.click(startingX + boxMiddle * 3, startingY + boxMiddle);\n// Y turn 2;\nawait page.mouse.click(startingX + boxMiddle * 3, startingY + boxMiddle * 3);\n// X turn 3;\nawait page.mouse.click(startingX + boxMiddle * 5, startingY + boxMiddle);\nexpect(await page.$eval('#status', status => status.innerHTML)).to.be('Winner: X');\n```", "```js\nawait page.goto(\"https://www.w3schools.com/howto/howto_css_dropdown.asp\");\nconst btn = await page.$(\".dropbtn\");\nconst  box = await btn.boundingBox();\nawait page.mouse.move(box.x + (box.width / 2), box.y + (box.height / 2));\nconst  option = (await page.$x('//*[text()=\"Link 2\"]'))[0];\nawait option.click();\n```", "```js\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Test\",\n            \"request\": \"launch\",\n            \"runtimeArgs\": [\n                \"run\",\n                \"test\"\n            ],\n            \"runtimeExecutable\": \"npm\",\n            \"skipFiles\": [\n                \"<node_internals>/**\"\n            ],\n            \"type\": \"pwa-node\"\n        },\n    ]\n}\n```"]