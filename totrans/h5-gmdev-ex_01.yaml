- en: Chapter 1. Introducing HTML5 Games
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. HTML5 游戏介绍
- en: '*Hypertext Markup Language, HTML, has been shaping the Internet in the last
    few decades. It defines how content is structured in the Web and the linkage between
    related pages. HTML has kept evolving from version 2 to HTML 4, and later to XHTML
    1.1\. Thanks to the web applications and social networking applications, it the
    era of HTML5 now.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*超文本标记语言，HTML，在过去几十年中一直在塑造互联网。它定义了网页中内容的结构以及相关页面之间的链接。HTML 从版本 2 发展到 HTML 4，再到
    XHTML 1.1。多亏了网络应用程序和社交网络应用程序，我们现在进入了 HTML5 时代。*'
- en: '***Cascading Style Sheet** (**CSS**) defines how web pages are presented visually.
    It styles all HTML elements and the styles of their states, such as hover and
    active.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '***层叠样式表** (**CSS**) 定义了网页的视觉呈现方式。它为所有 HTML 元素及其状态（如悬停和激活）的样式进行定义。'
- en: '*JavaScript is the logic controller of a web page. It makes the web page dynamic
    and provides client-side interaction between the page and users. It accesses the
    HTML through **Document Object Model** (**DOM**). It controls the new HTML features
    via their APIs.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*JavaScript 是网页的逻辑控制器。它使网页变得动态，并提供页面与用户之间的客户端交互。它通过 **文档对象模型** (**DOM**) 访问
    HTML。它通过它们的 API 控制新的 HTML 特性。*'
- en: There are modern web browsers in most desktop and mobile devices. These latest
    web techniques bring us the new game market—the HTML5 games. With the new power
    from these techniques, we can design games with HTML5 elements, CSS3 properties,
    and JavaScript to play in most browsers and mobile devices.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数桌面和移动设备都配备了现代网络浏览器。这些最新的网络技术为我们带来了新的游戏市场——HTML5 游戏。借助这些技术的强大功能，我们可以使用 HTML5
    元素、CSS3 属性和 JavaScript 设计可在大多数浏览器和移动设备上玩的游戏。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Discovering new features in HTML5
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 HTML5 的新特性
- en: Discussing what makes us so excited around HTML5 and CSS3
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论是什么让我们对 HTML5 和 CSS3 如此兴奋
- en: Previewing what games we are going to build in later chapters
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预览后续章节中将要构建的游戏
- en: Preparing the development environment
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备开发环境
- en: So, let's get started.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们开始吧。
- en: Discovering new features in HTML5
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 HTML5 的新特性
- en: There are many new things introduced in HTML5 and CSS3\. Before getting our
    hands dirty by creating the games, let's take an overview of the new features
    and see how we can use them to create games.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 和 CSS3 引入了许多新特性。在动手创建游戏之前，让我们先概述一下这些新特性，看看我们如何利用它们来创建游戏。
- en: Canvas
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Canvas
- en: '**Canvas** is an HTML5 element that provides drawing shapes and bitmap manipulation
    functions in low levels. We can imagine the Canvas element as a dynamic image
    tag. The traditional `<img>` tag shows a static image. This image is usually static
    after it''s loaded. We can change the `<img>` tag to another image source or apply
    styles to the image, but we cannot modify the image''s bitmap context itself.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Canvas** 是一个 HTML5 元素，在低级别上提供绘制形状和位图操作功能。我们可以将 Canvas 元素想象成一个动态的图像标签。传统的
    `<img>` 标签显示一个静态图像。这个图像在加载后通常是静态的。我们可以将 `<img>` 标签更改为另一个图像源或应用样式到图像上，但我们不能修改图像的位图上下文本身。'
- en: On the other hand, Canvas is like a client-side dynamic `<img>` tag. We can
    load images inside it, draw shapes there, and interact with it using JavaScript.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Canvas 类似于客户端动态的 `<img>` 标签。我们可以在其中加载图像，绘制形状，并使用 JavaScript 与之交互。
- en: Canvas plays an important role in HTML5 game development. It is one of our main
    focus areas in this book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Canvas 在 HTML5 游戏开发中扮演着重要的角色。这是我们本书的主要关注领域之一。
- en: Audio
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频
- en: Background music and sound effects are essential elements in game design. HTML5
    comes with native audio support from the `audio` tag. Thanks to this feature,
    we do not require the proprietary Flash Player to play sound effects in our HTML5
    games. However, there have been some restrictions on using Web Audio on the Web.
    We will discuss the usage of the `audio` tag in [Chapter 6](ch06.html "Chapter 6. Adding
    Sound Effects to Your Games"), *Adding Sound Effects to Your Games*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 背景音乐和音效是游戏设计中的基本元素。HTML5 通过 `audio` 标签提供了原生的音频支持。多亏了这个特性，我们不需要专有的 Flash Player
    来在我们的 HTML5 游戏中播放音效。然而，在网络上使用 Web Audio 也有一些限制。我们将在第 6 章 [添加音效到您的游戏](ch06.html
    "第 6 章。添加音效到您的游戏")中讨论 `audio` 标签的使用。
- en: Touch Events
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 触摸事件
- en: Besides the traditional keyboard and mouse events, there are touch events that
    we can use to handle single and multi-touch events. We can design a game that
    works on mobile devices with touches. We can also handle gestures by observing
    the touch patterns.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 除了传统的键盘和鼠标事件外，我们还可以使用触摸事件来处理单点和多点触摸事件。我们可以设计一个适用于移动设备的触摸游戏。我们还可以通过观察触摸模式来处理手势。
- en: GeoLocation
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GeoLocation
- en: '**GeoLocation** lets the web page retrieve the latitude and longitude of the
    user''s computer. For example, Google''s Ingress game makes use of GeoLocation
    to let players play the game in their real city. This feature may not have been
    so useful years ago when everyone was using the Internet with their desktop. There
    are not many things for which we need the accurate location of the road of the
    user. We can get the rough location by analyzing the IP address.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**GeoLocation** 允许网页检索用户的计算机的经纬度。例如，谷歌的 Ingress 游戏就利用 GeoLocation 允许玩家在他们的真实城市中玩游戏。几年前，当每个人都在使用台式机上网时，这个功能可能并不那么有用。我们不需要很多需要用户道路准确位置的事情。我们可以通过分析
    IP 地址来获取大致的位置。'
- en: These days, more and more users are going on the Internet with their powerful
    smartphones. Webkit and other modern mobile browsers are in everyone's pocket.
    GeoLocation lets us design mobile applications and games to play with the inputs
    of a location.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，越来越多的用户使用功能强大的智能手机上网。WebKit 和其他现代移动浏览器都在每个人的口袋里。GeoLocation 允许我们设计可以与位置输入一起使用的移动应用程序和游戏。
- en: WebGL
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WebGL
- en: WebGL extends the Canvas element by providing a set of 3D graphics APIs in the
    web browser. The APIs follow the standard of OpenGL ES 2.0\. WebGL provides a
    powerful GPG-accelerated, 3D rendering API for HTML5 games. Some 3D game engines
    support the export of WebGL, including the popular Unity engine. We can expect
    to see more HTML5 3D games waiting to be released using WebGL.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: WebGL 通过在网页浏览器中提供一组 3D 图形 API 来扩展 Canvas 元素。这些 API 遵循 OpenGL ES 2.0 标准。WebGL
    为 HTML5 游戏提供了一个强大的 GPG 加速的 3D 渲染 API。一些 3D 游戏引擎支持 WebGL 的导出，包括流行的 Unity 引擎。我们可以期待看到更多使用
    WebGL 等待发布的 HTML5 3D 游戏。
- en: The techniques used to create games with WebGL are quite different than using
    Canvas. Creating games in WebGL requires handing the 3D models and using an API
    similar to OpenGL. Therefore, we will not discuss WebGL game development in this
    book.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 WebGL 创建游戏的技术与使用 Canvas 的技术相当不同。在 WebGL 中创建游戏需要处理 3D 模型并使用类似于 OpenGL 的 API。因此，本书不会讨论
    WebGL 游戏开发。
- en: WebGL has a better performance than 2D Canvas because of the GPU-rendering support.
    Some libraries allow a game to use Canvas 2D drawing API, and the tools render
    the canvas by drawing on WebGL to gain performance. Pixi.js ([http://www.pixijs.com](http://www.pixijs.com)),
    EaselJS ([http://blog.createjs.com/webgl-support-easeljs/](http://blog.createjs.com/webgl-support-easeljs/))
    and WebGL-2D ([https://github.com/corbanbrook/webgl-2d](https://github.com/corbanbrook/webgl-2d))
    are several such tools among them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 GPU 渲染支持，WebGL 的性能优于 2D Canvas。一些库允许游戏使用 Canvas 2D 绘图 API，并且工具通过在 WebGL 上绘制来渲染画布以获得性能提升。Pixi.js
    ([http://www.pixijs.com](http://www.pixijs.com))、EaselJS ([http://blog.createjs.com/webgl-support-easeljs/](http://blog.createjs.com/webgl-support-easeljs/))
    和 WebGL-2D ([https://github.com/corbanbrook/webgl-2d](https://github.com/corbanbrook/webgl-2d))
    是其中的一些工具。
- en: WebSocket
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WebSocket
- en: WebSocket is part of the HTML5 spec to connect the web page to a socket server.
    It provides us with a persistent connection between the browser and server. This
    means that the client does not need to poll the server for new data within short
    periods. The server will push updates to the browsers whenever there is any data
    to update. One benefit of this feature is that game players can interact with
    each other in almost real time. When one player does something and sends data
    to the server, we can send the individual player the update to create one-on-one
    real-time page play, or we can iterate all the connections in the server to send
    an event to every other connected browser to acknowledge what the player just
    did. This creates the possibility of building multiplayer HTML5 games.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: WebSocket 是 HTML5 规范的一部分，用于将网页连接到 socket 服务器。它为我们提供了一个浏览器和服务器之间的持久连接。这意味着客户端不需要在短时间内轮询服务器以获取新数据。每当有数据更新时，服务器都会将更新推送到浏览器。这个特性的一个好处是，游戏玩家可以几乎实时地相互交互。当一个玩家做了某事并向服务器发送数据时，我们可以向单个玩家发送更新以创建一对一的实时页面播放，或者我们可以迭代服务器中的所有连接，向每个连接的浏览器发送事件以确认玩家刚刚做了什么。这为构建多人
    HTML5 游戏创造了可能性。
- en: Local storage
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Local storage
- en: HTML5 provides a persistent data storage solution to web browsers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5为网络浏览器提供了一种持久数据存储解决方案。
- en: Local Storage stores key-value pair data persistently. The data is still there
    after the browser terminates. Moreover, the data is not limited to be accessible
    only to the browsers that created it. It is available to all browser instances
    with the same domain. Thanks to Local Storage, we can easily save a game's status,
    such as progress and earned achievements, locally in web browsers.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Local Storage持久存储键值对数据。在浏览器终止后，数据仍然存在。此外，数据不限于只能由创建它的浏览器访问。它对所有具有相同域的浏览器实例都是可用的。多亏了Local
    Storage，我们可以在网络浏览器中轻松地本地保存游戏状态，如进度和获得的成就。
- en: Another database on web browser is IndexedDB. It's key-value pair too, but it
    allows storing objects and querying data with condition.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器上的另一个数据库是IndexedDB。它也是键值对，但它允许存储对象并使用条件查询数据。
- en: Offline applications
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离线应用程序
- en: Normally, we need an Internet connection to browse web pages. Sometimes, we
    can browse cached offline web pages. These cached offline web pages usually expire
    quickly. With the next offline application introduced by HTML5, we can declare
    our cache manifest. This is a list of files that will be stored for later access
    when there is no Internet connection.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们需要网络连接来浏览网页。有时，我们可以浏览缓存的离线网页。这些缓存的离线网页通常很快就会过期。随着HTML5引入的下一个离线应用程序，我们可以声明我们的缓存清单。这是一个将要存储以供未来无网络连接时访问的文件列表。
- en: 'With the cache manifest, we can store all the game graphics, game control JavaScript
    files, CSS stylesheets, and the HTML files locally. We can also pack our HTML5
    games as offline games on the desktop or mobile devices. Players can play the
    games even in the airplane mode. The following screenshot from the Pie Guy game
    ([http://mrgan.com/pieguy](http://mrgan.com/pieguy)) shows an HTML5 game being
    played on an iPhone without an Internet connection; note the little airplane symbol
    indicating the offline status:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用缓存清单，我们可以将所有游戏图形、游戏控制JavaScript文件、CSS样式表和HTML文件本地存储。我们还可以将我们的HTML5游戏打包为桌面或移动设备上的离线游戏。玩家甚至可以在飞行模式下玩游戏。以下来自Pie
    Guy游戏（[http://mrgan.com/pieguy](http://mrgan.com/pieguy)）的截图显示了在没有网络连接的iPhone上玩HTML5游戏；注意表示离线状态的飞机符号：
- en: '![Offline applications](img/B04290_01_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![离线应用程序](img/B04290_01_01.jpg)'
- en: Discovering new features in CSS3
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现CSS3中的新特性
- en: CSS is the presentation layer and HTML is the content layer. It defines how
    the HTML looks. We cannot miss CSS when we create games with HTML5, especially
    DOM-based games. We may purely use JavaScript to create and style the games with
    a Canvas element. However, we need CSS when we create DOM-based HTML5 games. Therefore,
    let's take a look at what is new in CSS3 and how we can use the new properties
    to create games.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: CSS是表示层，HTML是内容层。它定义了HTML的外观。当我们使用HTML5创建游戏时，我们不能忽视CSS，尤其是基于DOM的游戏。我们可能纯粹使用JavaScript通过Canvas元素创建和设计游戏。然而，当我们创建基于DOM的HTML5游戏时，我们需要CSS。因此，让我们看看CSS3中有什么新特性，以及我们如何使用这些新特性来创建游戏。
- en: Instead of directly drawing and interacting on Canvas' drawing board, new CSS3
    properties let us animate the DOM in different ways. This makes it possible to
    make more complicated DOM-based browser games.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 与直接在Canvas的绘图板上绘制和交互不同，新的CSS3属性让我们能够以不同的方式对DOM进行动画处理。这使得制作更复杂的基于DOM的浏览器游戏成为可能。
- en: CSS3 transition
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS3过渡
- en: 'Traditionally, the style changes immediately when we apply a new style to an
    element. CSS3 transition renders in-between styles during the style changes of
    the target elements over duration. For example, here, we have a blue box and want
    to change it to dark blue when we do a mouseover. We can do this by using the
    following code snippets:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，当我们对一个元素应用新的样式时，样式会立即改变。CSS3过渡在目标元素的样式变化过程中渲染中间样式。例如，在这里，我们有一个蓝色盒子，当我们进行鼠标悬停时，我们想将其变为深蓝色。我们可以通过以下代码片段来实现：
- en: '**HTML**:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML**:'
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**CSS**:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The box changes to dark blue immediately when we do a mouseover. With CSS3
    transition applied, we can tween the styles for a specific duration and easing
    value:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们进行鼠标悬停时，盒子会立即变为深蓝色。应用CSS3过渡后，我们可以为特定持续时间和缓动值进行样式插值：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: For all the Packt Publishing books you have purchased, you can download the
    example code files from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您购买的所有 Packt Publishing 书籍，您可以从您的账户下载示例代码文件，账户地址为 [http://www.packtpub.com](http://www.packtpub.com)。如果您在其他地方购买了这本书，您可以访问
    [http://www.packtpub.com/support](http://www.packtpub.com/support) 并注册，以便将文件直接通过电子邮件发送给您。
- en: In the past, we needed JavaScript to calculate and render the in-between styles;
    this is much slower than using CSS3 transition because the browser natively makes
    the effects happen.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，我们需要 JavaScript 来计算和渲染中间样式；这比使用 CSS3 过渡要慢得多，因为浏览器原生地使效果发生。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since some CSS3 specifications are still in the draft stage and not yet fixed,
    implementation from different browser vendors may have some minor differences
    to the W3C spec. Therefore, browser vendors tend to implement their CSS3 properties
    with a vendor prefix to prevent conflict.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于一些 CSS3 规范仍在草案阶段且尚未固定，不同浏览器供应商的实现可能与 W3C 规范存在一些细微差异。因此，浏览器供应商倾向于使用供应商前缀来实现他们的
    CSS3 属性，以防止冲突。
- en: Safari uses the `-webkit-` prefix. Opera uses the `-o-` prefix. Firefox uses
    the `-moz-` prefix and IE uses the `-ms-` prefix. Chrome used to use `-webkit-`,
    but now it doesn't use any prefix after switching its engine to Blink. It is a
    little complex now to declare a CSS3 property, such as flex, with several lines
    of the same rule for several browsers. We can expect the prefix to be dropped
    after the property spec is fixed.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 使用 `-webkit-` 前缀。Opera 使用 `-o-` 前缀。Firefox 使用 `-moz-` 前缀，IE 使用 `-ms-`
    前缀。Chrome 以前使用 `-webkit-`，但现在在切换到 Blink 引擎后不再使用任何前缀。现在声明 CSS3 属性（如 flex）变得有些复杂，因为需要为多个浏览器编写多行相同的规则。我们可以期待在属性规范固定后，前缀将被删除。
- en: In order to make the code cleaner in this book, I will use non-vendor prefix
    for all the properties in this book. I recommend you to use JavaScript-based libraries
    to automatically add the required vendor prefix for different web browsers. The
    prefix-free library ([http://leaverou.github.io/prefixfree/](http://leaverou.github.io/prefixfree/))
    is one of them.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使本书中的代码更简洁，我将使用非供应商前缀来表示本书中所有的属性。我建议您使用基于 JavaScript 的库来自动为不同浏览器添加所需的供应商前缀。Prefix-Free
    库([http://leaverou.github.io/prefixfree/](http://leaverou.github.io/prefixfree/))就是其中之一。
- en: Alternatively, if you are using preprocessors, the compilation process may also
    add the necessary vendor prefix for you.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果您正在使用预处理器，编译过程也可能为您添加必要的供应商前缀。
- en: CSS3 transform
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS3 转换
- en: CSS3 transform lets us scale the elements, rotate them, and translate their
    position. CSS3 transform is divided into 2D and 3D. By combining the transform
    origin and 3D rotation and translation, we can animate 2D graphics in a 3D space.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3 转换允许我们缩放元素、旋转它们以及平移它们的位置。CSS3 转换分为二维和三维。通过结合变换原点、三维旋转和平移，我们可以在三维空间中动画化二维图形。
- en: CSS3 animation
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS3 动画
- en: CSS3 transition is one type of animation. It declares the tweening animation
    between two styles of the elements.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3 过渡是一种动画类型。它声明了元素两种样式之间的缓动动画。
- en: CSS3 animation is one step further in animation. We can define key frames of
    an animation. Each key frame contains a set of properties that should change at
    any particular moment. It is like a set of CSS3 transitions that are applied in
    sequence to the target element.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3 动画在动画方面更进一步。我们可以定义动画的关键帧。每个关键帧包含一组在任何特定时刻应该改变的性质。它就像一系列应用于目标元素的 CSS3 过渡，按顺序应用。
- en: 'The AT-AT Walker ([http://anthonycalzadilla.com/css3-ATAT/index-bones.html](http://anthonycalzadilla.com/css3-ATAT/index-bones.html))
    shows a nice demo on creating a skeleton bone animation with CSS3 animation key
    frames, transform, and transition. This is shown in the following diagram:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: AT-AT 行走者([http://anthonycalzadilla.com/css3-ATAT/index-bones.html](http://anthonycalzadilla.com/css3-ATAT/index-bones.html))展示了使用
    CSS3 动画关键帧、变换和过渡创建骨骼动画的精彩示例。这将在以下图中展示：
- en: '![CSS3 animation](img/B04290_01_02.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![CSS3 动画](img/B04290_01_02.jpg)'
- en: The benefit of creating HTML5 games
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 HTML5 游戏的好处
- en: We have explored several new key features from HTML5 and CSS3\. With these features,
    we can create HTML5 games on browsers. But why do we need to do that? What is
    the benefit of creating HTML5 games?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探讨了 HTML5 和 CSS3 的一些新功能。有了这些功能，我们可以在浏览器上创建 HTML5 游戏。但为什么我们需要这样做？创建 HTML5
    游戏有什么好处？
- en: Free and open standards
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自由和开放标准
- en: The web standards are open and free for use. In contrast, third-party tools
    are usually proprietary and they cost money. With proprietary technologies, the
    support from them may drop because of changes to the company's focus. The standardization
    and openness of HTML5 ensures that we will have browsers that support it.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 网络标准是开放和免费的。相比之下，第三方工具通常是专有的，并且需要付费。随着公司关注点的变化，它们的支持可能会下降。HTML5的标准化和开放性确保我们将拥有支持它的浏览器。
- en: Support for multiple platforms
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持多平台
- en: With the built-in support of all the HTML5 features in modern browsers, we do
    not require the users to preinstall any third-party plugin in order to play any
    file. These plugins are not standard. They usually require an extra plugin installation
    that you may not be able to install. For instance, millions of Apple iOS devices
    around the world do not support third-party plugins, such as Flash Player, in
    their mobile Safari. Despite whatever the reason might be, Apple does not allow
    Flash Player to run on their Mobile Safaris, instead, HTML5 and the related web
    standard are what they get in their browsers. We can reach this user base by creating
    HTML5 games that are optimized for mobiles.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于现代浏览器内置了对所有HTML5特性的支持，我们不需要用户预先安装任何第三方插件来播放任何文件。这些插件并不标准。它们通常需要额外的插件安装，你可能无法安装。例如，全球数以百万计的Apple
    iOS设备在其移动Safari中不支持第三方插件，例如Flash Player。无论原因如何，Apple不允许Flash Player在其移动Safari上运行，相反，他们浏览器中拥有的是HTML5和相关网络标准。我们可以通过创建针对移动设备优化的HTML5游戏来触及这部分用户基础。
- en: Native app-rendering performance in particular scenarios
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特定场景下的原生应用程序渲染性能
- en: When we code the game in a Canvas, there are some rendering engines that can
    translate our Canvas drawing code into OpenGL, thus rendering in native mobile
    device. This means that while we are still coding the game for a web browser,
    our game can gain benefits in mobile devices by the native app OpenGL rendering.
    **Ejecta** ([http://impactjs.com/ejecta](http://impactjs.com/ejecta)) and **CocoonJS**
    ([http://ludei.com/cocoonjs](http://ludei.com/cocoonjs)) are two such engines.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在Canvas中编写游戏代码时，有一些渲染引擎可以将我们的Canvas绘图代码转换为OpenGL，从而在原生移动设备上渲染。这意味着尽管我们仍在为网页浏览器编写游戏，但我们的游戏可以通过原生应用程序OpenGL渲染在移动设备上获得优势。**Ejecta**
    ([http://impactjs.com/ejecta](http://impactjs.com/ejecta)) 和 **CocoonJS** ([http://ludei.com/cocoonjs](http://ludei.com/cocoonjs))
    是这样的两个引擎。
- en: Breaking the boundary of usual browser games
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打破常规浏览器游戏的界限
- en: In traditional game designing, we build games within a boundary box. We play
    video games on a television. We play Flash games in web browsers with a rectangle
    boundary.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的游戏设计中，我们在一个边界框内构建游戏。我们在电视上玩视频游戏。我们在带有矩形边界的网页浏览器中玩Flash游戏。
- en: Using creativity, we are not bound in a rectangle game stage any more. We can
    have fun with all the page elements.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过发挥创意，我们不再受限于矩形游戏舞台。我们可以利用页面上的所有元素来享受乐趣。
- en: 'Twitch ([http://reas.com/twitch/](http://reas.com/twitch/)) is a game from
    Chrome Experiments. It is a collection of mini games where the player has to carry
    the ball from the starting point to the end point. The fun part is that each mini
    game is a small browser window. When the ball reaches the destination point of
    that mini game, it is transferred into the newly created mini game browser to
    continue the journey. The following screenshot shows the whole map of Twitch with
    the individual web browsers:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Twitch ([http://reas.com/twitch/](http://reas.com/twitch/)) 是一个来自Chrome Experiments的游戏。它是一系列迷你游戏，玩家需要将球从起点运送到终点。有趣的是，每个迷你游戏都是一个小的浏览器窗口。当球到达该迷你游戏的终点时，它会被转移到新创建的迷你游戏浏览器中继续旅程。以下截图显示了Twitch的整个地图以及各个独立的网页浏览器：
- en: '![Breaking the boundary of usual browser games](img/B04290_01_03.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![打破常规浏览器游戏的界限](img/B04290_01_03.jpg)'
- en: Building HTML5 games
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建HTML5游戏
- en: Thanks to the new features of HTML5 and CSS3, we can now create an entire game
    in the browser. We can control every element in the DOM. We can animate each document
    object with CSS3\. We have Canvas to dynamically draw things and interact with
    them. We have an audio element to handle the background music and sound effects.
    We also have Local Storage to save game data, and WebSocket to create a real-time
    multiplayer game. Most modern browsers are already supporting these features.
    It is now time to build HTML5 games.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了HTML5和CSS3的新特性，我们现在可以在浏览器中创建整个游戏。我们可以控制DOM中的每一个元素。我们可以使用CSS3对每个文档对象进行动画处理。我们有Canvas来动态绘制事物并与它们交互。我们有音频元素来处理背景音乐和音效。我们还拥有本地存储来保存游戏数据，以及WebSocket来创建实时多人游戏。大多数现代浏览器已经支持这些特性。现在是时候构建HTML5游戏了。
- en: What others are playing with HTML5
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他人在用HTML5做什么
- en: This is a good opportunity to study how different HTML5 games perform by watching
    other HTML5 games that are made with different techniques.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的机会，通过观看使用不同技术制作的HTML5游戏，来研究不同HTML5游戏的性能。
- en: Coca-Cola's Ahh campaign
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可口可乐的Ahh活动
- en: Coca-Cola had run a campaign known as **Ahh** ([http://ahh.com](http://ahh.com))
    with lots of interactive mini games. The interactions combined several techniques
    that included canvas and device rotation. Most of them work well in both desktop
    and mobile devices.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 可口可乐曾推出一项名为**Ahh**([http://ahh.com](http://ahh.com))的活动，其中包含许多互动小游戏。这些互动结合了多种技术，包括画布和设备旋转。大多数游戏在桌面和移动设备上都能很好地运行。
- en: '![Coca-Cola''s Ahh campaign](img/B04290_01_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![可口可乐的Ahh活动](img/B04290_01_04.jpg)'
- en: Asteroid-styled bookmarklet
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以小行星风格的收藏夹
- en: Erik, a web designer from Sweden, created an interesting bookmarklet. This is
    an asteroid-styled game for any web page. Yes, any web page! It shows an abnormal
    way to interact with any web page. It creates a plane on the website you are reading
    from. You can then fly the plane using arrow keys and fire bullets using the space
    bar. The fun part is that the bullets will destroy the HTML elements on the page.
    Your goal is to destroy all the things on the web page that you choose. This bookmarklet
    is another example of breaking the boundary of usual browser games. It tells us
    that we can think outside the box while designing HTML5 games.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 来自瑞典的网页设计师Erik创建了一个有趣的收藏夹。这是一个适用于任何网页的小行星风格游戏。是的，任何网页！它展示了与任何网页交互的一种不寻常的方式。它在你阅读的网站上创建了一个飞机。然后你可以使用箭头键驾驶飞机，并使用空格键开火。有趣的是，子弹会摧毁页面上的HTML元素。你的目标是摧毁你选择的网页上的所有东西。这个收藏夹是打破常规浏览器游戏边界的另一个例子。它告诉我们，在设计HTML5游戏时，我们可以跳出思维定势。
- en: 'The following screenshot shows the plane destroying the contents on the web
    page:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了飞机正在摧毁网页上的内容：
- en: '![Asteroid-styled bookmarklet](img/B04290_01_05.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![以小行星风格的收藏夹](img/B04290_01_05.jpg)'
- en: The bookmarklet is available for installation at [http://kickassapp.com](http://kickassapp.com).
    You can even design the space ship that you control.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个收藏夹可以在[http://kickassapp.com](http://kickassapp.com)安装。你甚至可以设计你控制的宇宙飞船。
- en: X-Type
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: X-Type
- en: The creator of a Canvas-based game engine named Impact, created this X-Type
    ([http://phoboslab.org/xtype/](http://phoboslab.org/xtype/)) shooting game for
    different platforms, including web browsers, iOS, and Wii U. The following screenshot
    shows the game running smoothly in iPhone.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以Canvas为基础的游戏引擎Impact的制作者，为包括网络浏览器、iOS和Wii U在内的不同平台创建了这个X-Type([http://phoboslab.org/xtype/](http://phoboslab.org/xtype/))射击游戏。以下截图显示了游戏在iPhone上运行得非常流畅。
- en: '![X-Type](img/B04290_01_06.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![X-Type](img/B04290_01_06.jpg)'
- en: Cursors.io
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cursors.io
- en: 'Cursors.io ([http://cursors.io](http://cursors.io)) demonstrates a nicely designed
    real-time multiplayer game. Every user controls an anonymous mouse cursor and
    takes a journey through the levels of the game by moving the cursor to the green
    exit. The fun part of the game is that players must help the others to advance
    to the level. There are toggles that some cursors click on them to unlock the
    doors. The anonymous players must take up the role to help the others. Someone
    will take your role so that you can advance to the next level. The more players
    that help you, the higher your chance is to succeed in the game. In case only
    a few players are playing and you can''t experience the game, I have recorded
    my playing screen in 12 x speed (at [http://vimeo.com/109414542](http://vimeo.com/109414542))
    to let you have a glimpse of how this multiplayer game works. This has been captured
    in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Cursors.io ([http://cursors.io](http://cursors.io)) 展示了一个设计精良的实时多人游戏。每个用户控制一个匿名的鼠标光标，通过将光标移动到绿色出口来穿越游戏的各个关卡。游戏的乐趣在于玩家必须帮助他人前进到下一级。有一些开关，某些光标点击它们来解锁门。匿名玩家必须承担起帮助他人的角色。有人会取代你的位置，这样你就可以前进到下一级。帮助你的人越多，你在游戏中成功的几率就越高。如果只有少数玩家在玩，而你无法体验游戏，我已以12倍速录制了我的游戏画面（在[http://vimeo.com/109414542](http://vimeo.com/109414542)），让你一窥这个多人游戏是如何运作的。以下截图展示了这一过程：
- en: '![Cursors.io](img/B04290_01_07.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Cursors.io](img/B04290_01_07.jpg)'
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We will discuss building a multiplayer game in [Chapter 8](ch08.html "Chapter 8. Building
    a Multiplayer Draw-and-Guess Game with WebSockets"), *Building a Multiplayer Draw-and-Guess
    Game with WebSockets*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第8章](ch08.html "第8章。使用WebSocket构建多人绘画猜谜游戏")中讨论构建多人游戏，*使用WebSocket构建多人绘画猜谜游戏*。
- en: What we are going to create in this book
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书将要创建的内容
- en: In the following chapters, we are going to build six games. We are going to
    first create a DOM-based Ping Pong game that can be played by two players in the
    same machine. Then, we will create a memory matching game with CSS3 animation.
    Next, we will use Canvas to create an Untangle puzzle game. Later, we will build
    a music game with audio elements. Then, we will create a multiplayer draw and
    guess game with WebSocket. Lastly, we will use the Box2D JavaScript port to create
    a prototype of a physics car game. The following screenshot shows the memory matching
    game that we will build in [Chapter 3](ch03.html "Chapter 3. Building a Card-matching
    Game in CSS3"), *Building a Card-matching Game in CSS3*. You can play the game
    at [http://makzan.net/html5-games/card-matching/](http://makzan.net/html5-games/card-matching/).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将构建六个游戏。我们首先将创建一个基于DOM的乒乓球游戏，可以在同一台机器上由两名玩家玩。然后，我们将使用CSS3动画创建一个记忆匹配游戏。接下来，我们将使用Canvas创建一个解谜游戏。稍后，我们将构建一个包含音频元素的音乐游戏。然后，我们将使用WebSocket创建一个多人绘画猜谜游戏。最后，我们将使用Box2D
    JavaScript端口创建一个物理赛车游戏的原型。以下截图显示了我们在[第3章](ch03.html "第3章。使用CSS3构建卡牌匹配游戏")中将要构建的记忆匹配游戏，*使用CSS3构建卡牌匹配游戏*。你可以在[http://makzan.net/html5-games/card-matching/](http://makzan.net/html5-games/card-matching/)上玩这个游戏。
- en: '![What we are going to create in this book](img/B04290_01_08.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![本书将要创建的内容](img/B04290_01_08.jpg)'
- en: Preparing the development environment
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备开发环境
- en: The environment for developing HTML5 games is similar to designing websites.
    We need web browsers and a good text editor. Which text editor is good is a never-ending
    debate. Each text editor comes with its own strengths, so just pick your favorite
    one. I personally recommend text editors with multiple cursors, for instance,
    Sublime Text or Brackets. For the browser, we will need modern browsers that support
    the latest HTML5 and CSS3 specs and provide us with handy tools for debugging.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 开发HTML5游戏的环境与设计网站类似。我们需要网络浏览器和一款优秀的文本编辑器。哪款文本编辑器好是一个永无止境的争论。每种文本编辑器都有其自身的优势，所以只需选择你最喜欢的一款。我个人推荐具有多个光标的文本编辑器，例如Sublime
    Text或Brackets。对于浏览器，我们需要支持最新HTML5和CSS3规范的现代浏览器，并为我们提供方便的调试工具。
- en: There are several modern browser choices on the Internet now. They are Apple
    Safari ([http://apple.com/safari/](http://apple.com/safari/)), Google Chrome ([http://www.google.com/chrome/](http://www.google.com/chrome/)),
    Mozilla Firefox ([http://mozilla.com/firefox/](http://mozilla.com/firefox/)),
    and Opera ([http://opera.com](http://opera.com)). These browsers support most
    of the features that we will discuss in the examples in the whole book. I personally
    use Chrome because it has great built-in developer tools. The powerful developer
    tools make it popular with web and game developers.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在互联网上有几种现代浏览器可供选择。它们是Apple Safari ([http://apple.com/safari/](http://apple.com/safari/))、Google
    Chrome ([http://www.google.com/chrome/](http://www.google.com/chrome/))、Mozilla
    Firefox ([http://mozilla.com/firefox/](http://mozilla.com/firefox/))和Opera ([http://opera.com](http://opera.com))。这些浏览器支持本书中将要讨论的大多数特性。我个人使用Chrome，因为它拥有强大的内置开发者工具。强大的开发者工具使其在网页和游戏开发者中非常受欢迎。
- en: We will also need Android phones and an iPad/iPhone to test the games in mobile
    devices. Simulators may also work, but testing with real devices gives closer
    results to real-world usage.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要安卓手机和iPad/iPhone来测试移动设备上的游戏。模拟器也可能有效，但使用真实设备进行测试可以得到更接近现实使用的测试结果。
- en: Summary
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we've learned a lot about the basic information of HTML5 games.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了关于HTML5游戏的基本信息。
- en: Specifically, we covered new features of HTML5 and CSS3\. We gave you a glimpse
    of what techniques we will use to create our games in later chapters—Canvas, audio,
    CSS animation, and more new features were introduced. We will have many new features
    to play with. We discussed why we want to create HTML5 games—we want to meet the
    web standard, meet mobile devices, and break the boundary of a game. We took a
    look at several existing HTML5 games that were created with different techniques,
    which we will also use. You can test these games before we create our own. We
    also previewed the games that we are going to build in the book. At last, we prepared
    our development environments.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们涵盖了HTML5和CSS3的新特性。我们在后续章节中向您展示了我们将使用哪些技术来创建游戏——Canvas、音频、CSS动画以及更多新特性被引入。我们将有许多新特性可以探索。我们讨论了为什么我们要创建HTML5游戏——我们希望满足网络标准，适应移动设备，并打破游戏的界限。我们审视了几种使用不同技术创建的现有HTML5游戏，我们也将使用这些技术。在我们自己创建游戏之前，您可以测试这些游戏。我们还预览了书中将要构建的游戏。最后，我们准备好了我们的开发环境。
- en: Now that we've some background information on HTML5 games, we're ready to create
    our first DOM-based, JavaScript-driven game in the next chapter.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对HTML5游戏有了背景信息，我们准备在下一章创建我们的第一个基于DOM、由JavaScript驱动的游戏。
