["```js\n<div>\n  <div data-bind=\"event: { mouseover: oneLeft }\">\n    Move One Left\n  </div>\n  <div data-bind=\"event: { mouseover: oneRight }\">\n    Move One Right\n  </div>\n  <div style=\"border:solid 1px black;\">\n    <div data-bind=\"css: oneClass\">\n      ( One )\n    </div>\n    <div data-bind=\"css: twoClass\">\n      ( Two )\n    </div>\n    <div style=\"clear:both;\"></div>\n  </div>\n  <button data-bind=\"event: {mousedown: twoLeft }\">Move Two Left</button>\n  <button data-bind=\"event: {mouseup: twoRight }\">Move Two Right</button>\n</div>\n```", "```js\n<style type=\"text/css\">\n.putLeft { float:left; }\n.putRight { float:right; }\n</style>\n```", "```js\n<script>\n    var vm = {\n        oneClass: ko.observable('putLeft'),\n        twoClass: ko.observable('putLeft'),\n        /* mode code coming */\n    };\n    </script>\n```", "```js\noneLeft: function() {\n     this.oneClass('putLeft');\n},\noneRight: function() {\n    this.oneClass('putRight');\n},\ntwoLeft: function() {\n    this.twoClass('putLeft');\n},\ntwoRight: function() {\n    this.twoClass('putRight');\n}\n```", "```js\n< script >\nvar vm = {\n    oneClass: ko.observable('putLeft'),\n    twoClass: ko.observable('putLeft'),\n    oneLeft: function () {\n        this.oneClass('putLeft');\n    },\n    oneRight: function () {\n        this.oneClass('putRight');\n    },\n    twoLeft: function () {\n        this.twoClass('putLeft');\n    },\n    twoRight: function () {\n        this.twoClass('putRight');\n    }\n};\nko.applyBindings(vm); < /script>\n```", "```js\n<p>\n  Will you be bringing your spouse?\n  <input type=\"checkbox\" name=\"bringspouse\" data-bind=\"checked: bringingSpouse\" />\n</p>\n<p>\n  Your Spouse's Name:\n  <input type=\"text\" data-bind=\"value: spouseName, enable: bringingSpouse\" />\n</p>\n```", "```js\n<script>\nvar vm = {\n  bringingSpouse: ko.observable(false),\n  spouseName: ko.observable(\"\")\n};\nko.applyBindings(vm);\n</script>\n```", "```js\n<br/>\n<button data-bind=\"event: {mouseover: reset }\">RESET</button>\n```", "```js\nvar vm = {\n    oneClass: ko.observable('putLeft'),\n    twoClass: ko.observable('putLeft'),\n    oneLeft: function() {\n        this.oneClass('putLeft');\n    },\n    oneRight: function() {\n        this.oneClass('putRight');\n    },\n    twoLeft: function() {\n        this.twoClass('putLeft');\n    },\n    twoRight: function() {\n        this.twoClass('putRight');\n    },\n reset: function(data, event){\n if(event.shiftKey){\n alert(\"Don't hold the shift key!\");\n } else {\n this.oneClass('putLeft');\n this.twoClass('putLeft');\n }\n }\n};\n```", "```js\n<p>Title: <input data-bind=\"textInput: title\" /></p>\n<p>Post: <textarea data-bind=\"textInput: post\" /></textarea></p>\n<p>\n<h2 data-bind=\"text: title\"></h2>\n<div data-bind=\"text: post\"></div>\n</p>\n```", "```js\n<script>\nfunction Blog() {\n  this.title = ko.observable();\n  this.post = ko.observable();\n};\nblog = new Blog();\nko.applyBindings( blog );\n</script>\n```", "```js\n    <input data-bind=\"textInput: title, hasFocus: lookAtTitleBox\" />\n    ```", "```js\n    <button data-bind=\"click: focusTitle\">Focus On Title</button>\n    ```", "```js\n    <span data-bind=\"visible:lookAtTitleBox\">( Enter A Good Title )</span>\n    ```", "```js\n    this.lookAtTitleBox = ko.observable(false);\n    this.focusTitle = function(){\n      this.lookAtTitleBox(true);\n    };\n    ```", "```js\n<!-- Here is the markup code-->\n<br/>\n<p>Title: <input data-bind=\"textInput: title, hasFocus: lookAtTitleBox\" />\n<button data-bind=\"click: focusTitle\">Focus On Title</button>\n<span data-bind=\"visible:lookAtTitleBox\">\n( Enter A Good Title )\n</span>\n</p>\n<p>Post: <textarea data-bind=\"textInput: post\" /></textarea></p>\n<p>\n<h2 data-bind=\"text: title\"></h2>\n<div data-bind=\"html: post\"></div>\n</p>\n```", "```js\n// Here is the script code\n<script>\nfunction Blog() {\n  this.title = ko.observable();\n  this.post = ko.observable();\n  this.lookAtTitleBox = ko.observable(false);\n  this.focusTitle = function(){\n    this.lookAtTitleBox(true);\n  };\n};\nblog = new Blog();\nko.applyBindings( blog );\n</script>\n```", "```js\n<p>\n  <span data-bind=\"click:editTitle\">Title</span>:\n  <input data-bind=\"visible: showTitleEditor, textInput: title, hasFocus:showTitleEditor\" />\n  <span data-bind=\"visible: !showTitleEditor(), html:title, click: editTitle\"></span>\n</p>\n<p>\n  <span data-bind=\"click:editPost\">Post</span>:\n  <textarea data-bind=\"visible: showPostEditor, textInput: post, hasFocus:showPostEditor\" /></textarea>\n  <span data-bind=\"visible: !showPostEditor(), html:post, click: editPost\"></span>\n</p>\n```", "```js\n<script>\nfunction Blog() {\n  this.title = ko.observable('Web 3.0');\n  this.showTitleEditor = ko.observable(false);\n  this.editTitle = function(){\n    this.showTitleEditor(true);\n  };\n\n  this.post = ko.observable('Here is my <strong>Web 3.0</strong> content!');\n  this.showPostEditor = ko.observable(false);\n  this.editPost = function(){\n    this.showPostEditor(true);\n  };\n};\nblog = new Blog();\nko.applyBindings( blog );\n</script>\n```", "```js\n<h2>Checkbox</h2>\n<p>\n  Colors (<span data-bind=\"text: colors\"></span>)<br/>\n  <input type=\"checkbox\" value=\"red\" data-bind=\"checked: colors\" /> Red<br/>\n  <input type=\"checkbox\" value=\"green\" data-bind=\"checked: colors\" /> Green<br/>\n  <input type=\"checkbox\" value=\"blue\" data-bind=\"checked: colors\" /> Blue<br/>\n  <input type=\"checkbox\" value=\"yellow\" data-bind=\"checked: colors\" /> Yellow<br/>\n  <input type=\"checkbox\" value=\"purple\" data-bind=\"checked: colors\" /> Purple<br/>\n</p>\n```", "```js\nfunction VM() {\n  this.colors = ko.observableArray([]);\n};\nvm = new VM();\nko.applyBindings( vm );\n```", "```js\n<h2>Radio</h2>\n<p>\n  Shapes (<span data-bind=\"text: shapes\"></span>)<br/>\n  <input type=\"radio\" value=\"square\" data-bind=\"checked: shapes\" />Square<br/>\n  <input type=\"radio\" value=\"round\" data-bind=\"checked: shapes\" />Round<br/>\n  <input type=\"radio\" value=\"triangle\" data-bind=\"checked: shapes\" />Triangle<br/>\n  <input type=\"radio\" value=\"rectangle\" data-bind=\"checked: shapes\" />Rectangle<br/>\n  <input type=\"radio\" value=\"oval\" data-bind=\"checked: shapes\" />Oval<br/>\n</p>\n```", "```js\nthis.shapes = ko.observableArray([]);\n```", "```js\n  this.foodItems = ko.observableArray([\n    { item: 'bread', itemDisplay: 'Bread' },\n    { item: 'milk', itemDisplay: 'Milk' },\n    { item: 'eggs', itemDisplay: 'Eggs' }\n  ]);\n  this.foods = ko.observableArray(['bread', 'eggs'\"]);\n```", "```js\n<h2>Checkbox</h2>\n<p>\n  Foods (<span data-bind=\"text: foods\"></span>)<br/>\n<div data-bind=\"foreach: {data:foodItems, as: 'food'}\">\n  <input type=\"checkbox\" data-bind=\"checkedValue: $data.item, checked: $root.foods\" />\n  <span data-bind=\"text: food.itemDisplay\"></span><br/>\n</div>\n</p>\n```", "```js\nfunction VM() {\n  this.colors = ko.observableArray([]);\n  this.shapes = ko.observableArray([]);\n  this.foodItems = ko.observableArray([\n    { item: 'bread', itemDisplay: 'Bread' },\n    { item: 'milk', itemDisplay: 'Milk' },\n    { item: 'eggs', itemDisplay: 'Eggs' }\n  ]);\n  this.foods = ko.observableArray([\"bread\",\"eggs\"]);\n};\nvm = new VM();\nko.applyBindings( vm );\n```", "```js\n<p>\n  Colors: ( <span data-bind=\"text: colors\"></span> )\n  <br/>\n  <select data-bind=\"options: colorOptions, \n              value: colors,\n              optionsCaption: 'Choose a color'\"></select>\n</p>\n```", "```js\n<script>\nfunction MyModel(){\n  this.colorOptions = ko.observableArray(['Red','Green','Blue','Yellow','Green']);\n  this.colors = ko.observableArray();\n};\nmyModel = new MyModel();\nko.applyBindings( myModel );\nmyModel.colorOptions.push('Orange');\n</script>\n```", "```js\n<p>\n  Shapes: ( <span data-bind=\"text: shapes\"></span> )\n  <br/>\n  <select size=\"3\" multiple=\"true\"\n    data-bind=\"options: shapeOptions, \n      selectedOptions: shapes\"></select>\n</p>\n```", "```js\nthis.shapeOptions = ko.observableArray(['Square','Circle','Triangle','Rectange', 'Oval']);\nthis.shapes = ko.observableArray();\n```", "```js\n<p>\n  Budget:\n  <br/>\n  <select data-bind=\"options: budgets,\n        optionsText: 'budgetName',\n        value: budget,\n        optionsCaption: 'Pick...'\"></select>\n</p>\n<div>\n  You have chosen a \n  '<span data-bind=\"text: budget() ? budget().budgetType : 'undeclared'\"></span>'\n  budget type.\n</div>\n```", "```js\nthis.budget = ko.observable();\n```", "```js\nvar Budget = function(name, type){\n  this.budgetName = name;\n  this.budgetType = type;\n};\n```", "```js\nthis.budgets = ko.observableArray([\n  new Budget('Electric','expense'),\n  new Budget('Bob Pay','income'),\n  new Budget('Betty Pay','income'),\n  new Budget('Taxes','expense'),\n  new Budget('Gas','expense'),\n  new Budget('Rental House','income'),\n  new Budget('House Payment','expense')\n]);\nthis.budget = ko.observable();\n```", "```js\n<p>\n  <form data-bind=\"submit:addBudget\">\n  Budget Editor:\n  <hr/>\n  Budget:\n  <input data-bind=\"value: newName, valueUpdate: 'afterkeydown'\" /><br/>\n  Type:\n  <select data-bind=\"options: budgetTypes,\n              value: budgetType\"></select><br/>\n  <button type=\"submit\" data-bind=\"enable: newName().length\">Add Budget</button>\n  </form>\n</p>\n```", "```js\nthis.newName = ko.observable(\"\");\nthis.budgetTypes = ko.observableArray(['income','expense']);\nthis.budgetType = ko.observable();\nthis.selectedBudgets = ko.observableArray([]);\nthis.addBudget = function(){\n  var myBudget = new Budget(this.newName(),this.budgetType());\n  if((this.newName() != \"\") \n      && (this.budgets.indexOf(myBudget) < 0) ) {\n    this.budgets.push(myBudget);\n  }\n  this.newName(\"\");\n};\nthis.dropBudget = function(){\n  this.budgets.removeAll(this.selectedBudgets());\n};\nthis.sortBudgets = function(){\n  this.budgets.sort(bCompare);\n};\n```", "```js\nvar bCompare = function(left,right){\n  if(left.budgetName < right.budgetName) {\n    return -1;\n}\n  if(left.budgetName > right.budgetName) {\n    return 1;\n}\n  return 0;\n};\n```", "```js\n<p>\t\n  <select size=\"5\" multiple=\"true\"\n      data-bind=\"options: budgets,\n              optionsText: 'budgetName',\n              selectedOptions: selectedBudgets\"></select>\n</p>\n<p>\n  <button data-bind=\"click: dropBudget\">Drop Budget</button>\n  <button data-bind=\"click: sortBudgets\">Sort Budgets</button>\n</p>\n```", "```js\n<input data-bind=\"value: newName, uniqueName: true\" />\n```", "```js\n<form action='/serverTargetHandlerHere'>\n  <p>You have asked for <span data-bind='text: budget().length'>&nbsp;</span> budget item(s)</p>\n  <table data-bind='visible: budget().length > 0'>\n    <thead>\n      <tr>\n        <th>Budget</th>\n        <th>Amount</th>\n        <th/>\n      </tr>\n    </thead>\n    <tbody data-bind='foreach: budget'>\n      <tr>\n        <td><input data-bind='value: name, uniqueName: true' /></td>\n        <td><input data-bind='value: amount, uniqueName: true' /></td>\n        <td><a href='#' data-bind='click: $root.removeBudget'>Delete</a></td>\n      </tr>\n    </tbody>\n  </table>\n  <button data-bind='click: addBudget'>Add Budget</button>\n  <button data-bind='enable: budget().length > 0,click: save' type''='submit'>Submit</button>\n</form>\n```", "```js\nvar BudgetModel = function(budget) {\n    var self = this;\n    self.budget = ko.observableArray(budget);\n    self.addBudget = function() {\n        self.budget.push({\n            name: \"\",\n            amount: \"\"\n        });\n    };\n    self.removeBudget = function(budget) {\n        self.budget.remove(budget);\n    };\n    self.save = function(form) {\n        alert(\"Could now transmit to server: \" + ko.utils.stringifyJson(self.budget));\n        // To actually transmit to server as a regular form post, write this: ko.utils.postJson($(\"form\")[0], self.budget);\n    };\n};\nvar budget = new BudgetModel([\n    { name: \"Food\", amount: \"560.00\"},\n    { name: \"Utilities\", amount: \"180.00\"},\n    { name: \"Rent\", amount: \"620.00\"},\n    { name: \"Insurance\", amount: \"80.00\"}\n]);\nko.applyBindings( budget );\n```"]