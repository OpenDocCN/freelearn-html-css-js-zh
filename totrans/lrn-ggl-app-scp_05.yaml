- en: Chapter 5. Creating Google Calendar and Drive Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 创建谷歌日历和驱动应用程序
- en: In the previous chapter, you learned how to create Forms programmatically using
    `FormApp`, `ContentService`, and `HtmlService`. Also, you learned how to use the
    `doGet` and `doPost` functions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了如何使用`FormApp`、`ContentService`和`HtmlService`编程创建表单。你还学习了如何使用`doGet`和`doPost`函数。
- en: 'In this chapter, you will learn to:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何：
- en: Create Calendar events
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建日历事件
- en: Enable Google's advanced services
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用谷歌的高级服务
- en: Create a few Drive applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建几个驱动应用程序
- en: The CalendarApp class
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`CalendarApp`类'
- en: The `CalendarApp` class provides direct access to Calendar's basic service.
    This service allows you to read and update your default as well as subscribed
    Calendars. Using GAS, you can create Calendar events, and invite your friends
    programmatically. You can even grab event details and populate them in Sheets.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`CalendarApp`类提供了对日历基本服务的直接访问。此服务允许你读取和更新你的默认日历以及订阅的日历。使用GAS，你可以创建日历事件，并通过编程方式邀请你的朋友。你甚至可以抓取事件详情并将它们填充到表格中。'
- en: Creating Calendar events from a simple description
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从简单描述创建日历事件
- en: 'You can create an event by just passing a description as an argument to the
    `createEventFromDescription` method of the `CalendarApp` class:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将描述作为参数传递给`CalendarApp`类的`createEventFromDescription`方法来创建一个事件：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating simple Calendar events
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建简单的日历事件
- en: 'You can also create events by specifying the title, start time, and end time:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过指定标题、开始时间和结束时间来创建事件：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Creating events with options
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用选项创建事件
- en: 'The following code shows how to create an event with the specified options,
    such as the description and location. Uncomment the `sendInvites` line only if
    you insert the guest''s e-mail ID(s). Use a comma to separate them if there is
    more than one e-mail ID:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了如何使用指定的选项创建事件，例如描述和位置。只有在你插入嘉宾的电子邮件ID时才取消注释`sendInvites`行。如果有多个电子邮件ID，请使用逗号分隔它们：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating events from Sheets data
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从表格数据创建事件
- en: 'To create events from prepopulated Sheets data, create a Sheet named `Events`
    and create column headers as shown here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要从预先填充的表格数据创建事件，创建一个名为`Events`的表格，并创建如所示的头列：
- en: '![Creating events from Sheets data](img/B05010_05_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![从表格数据创建事件](img/B05010_05_01.jpg)'
- en: 'Create the function `createCalendarEventsFromSheetData` as shown here:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建如所示的`createCalendarEventsFromSheetData`函数：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Creating events from an external CSV file's contents
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从外部CSV文件的内容创建事件
- en: Instead of creating events from Sheet data, you can create them from an external
    CSV file uploaded to the Drive. Upload a CSV file with the same headers as in
    the previous task.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 与从表格数据创建事件不同，你可以从上传到驱动的外部CSV文件中创建它们。上传一个与上一个任务中相同的头列的CSV文件。
- en: 'Get the key/ID of the uploaded file and replace it with the following code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 获取上传文件的密钥/ID，并用以下代码替换它：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Enabling advanced Google services
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用高级谷歌服务
- en: Until now, you have been using GAS's basic services, such as `GmailApp` and
    `ContactsApp`. Now it is time to learn how to enable advanced services.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你一直在使用GAS的基本服务，例如`GmailApp`和`ContactsApp`。现在是你学习如何启用高级服务的时候了。
- en: In this task, we are going to use a Calendar service, which is an advanced service,
    so we have to enable it before using it.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个任务中，我们将使用一个高级服务——日历服务，因此在使用之前我们必须启用它。
- en: 'In the script editor, click on **Resources**, and then on **Advanced Google
    services…**, and a pop-up window will open:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本编辑器中，点击**资源**，然后点击**高级谷歌服务…**，将打开一个弹出窗口：
- en: '![Enabling advanced Google services](img/B05010_05_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![启用高级谷歌服务](img/B05010_05_02.jpg)'
- en: 'In the **Advanced Google Services** pop-up window, all the GAS advanced services
    will be listed. Look for the **Calendar API** service, select the latest version
    (it is selected by default), and then enable it if is not already enabled. In
    the following screenshot, you can see that the Calendar API service is enabled:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在**高级谷歌服务**弹出窗口中，所有GAS高级服务都将列出。查找**日历API**服务，选择最新版本（默认选中），然后如果尚未启用，则启用它。在以下屏幕截图中，你可以看到日历API服务已启用：
- en: '![Enabling advanced Google services](img/B05010_05_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![启用高级谷歌服务](img/B05010_05_03.jpg)'
- en: Enabling advanced services only in scripts is not enough, you also need to enable
    it in the Google Developers Console, as indicated in the pop-up window. To do
    so, click on the link provided in the pop-window.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在脚本中启用高级服务是不够的，你还需要在谷歌开发者控制台中启用它，如弹出窗口中所示。为此，请点击弹出窗口中提供的链接。
- en: Then a new browser window or tab will open with popular APIs listed as groups.
    You can see **Calendar API** under the **Google Apps APIs** group. If not listed,
    search the word `calendar` using the search option provided at the top of the
    page.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将打开一个新的浏览器窗口或标签页，其中列出了一些作为组的流行 API。您可以在 **Google Apps APIs** 组下看到 **Calendar
    API**。如果没有列出，请使用页面顶部的搜索选项搜索“calendar”一词。
- en: '![Enabling advanced Google services](img/B05010_05_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![启用高级 Google 服务](img/B05010_05_04.jpg)'
- en: 'Click on **Calendar API** (highlighted in yellow in the preceding screenshot),
    then on the follow-up web page, click on **Enable API**:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **Calendar API**（如前一张截图中所示，用黄色突出显示），然后在随后的网页上点击 **启用 API**：
- en: '![Enabling advanced Google services](img/B05010_05_05.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![启用高级 Google 服务](img/B05010_05_05.jpg)'
- en: That's all; you have enabled Calendar advanced services.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些；您已启用日历高级服务。
- en: Listing all the Calendars
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出所有日历
- en: 'After enabling Calendar advanced services, you can use the `listCalendars`
    function to log all of your Calendars:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 启用日历高级服务后，您可以使用 `listCalendars` 函数记录所有您的日历：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `Calendar.CalendarList.list` object returns a list of all the Calendars,
    provided that the number of Calendars is less than the value of `maxResults`.
    If the number of Calendars is greater than this value, then the `nextPageToken`
    value is used as a page token for the next iteration. A sample output of the log
    is shown here:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`Calendar.CalendarList.list` 对象返回所有日历的列表，前提是日历的数量小于 `maxResults` 的值。如果日历的数量大于此值，则使用
    `nextPageToken` 值作为下一迭代的页面令牌。以下是日志的示例输出：'
- en: '![Listing all the Calendars](img/B05010_05_06.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![列出所有日历](img/B05010_05_06.jpg)'
- en: Listing Calendar events in Sheets
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在表格中列出日历事件
- en: 'To list events from any one Calendar into Sheets, create a new Sheet named
    `ExistingEvents` and add the following function:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要将任何日历的事件列表到表格中，创建一个名为 `ExistingEvents` 的新表格，并添加以下函数：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The function we just mentioned collects all the events from the Calendar, constructs
    a 2-dimensional array, and stores that array in the `ExistingEvents` sheet. A
    sample output of the preceding code is shown here:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚才提到的函数从日历中收集所有事件，构建一个二维数组，并将该数组存储在 `ExistingEvents` 表格中。以下是前面代码的示例输出：
- en: '![Listing Calendar events in Sheets](img/B05010_05_07.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![在表格中列出日历事件](img/B05010_05_07.jpg)'
- en: Syncing events from one Calendar to another Calendar
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从一个日历同步事件到另一个日历
- en: 'The `syncEvents` function (listed in the following code) syncs the last 30
    days events from the source Calendar to the destination Calendar. To test this
    application, create the main function `syncEvents` and other helper functions
    such as `updateEvent_`, `deleteEvent_`, and `insertEvent_`. We are marking those
    events synced from the source to the destination by prefixing `sync:` and enclosing
    an event title/summary in square brackets. For example, if the source event is
    `Example event`, then it will be marked as `[sync:Example event]` and inserted/updated
    in the destination Calendar:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`syncEvents` 函数（如下面的代码中列出）同步源日历到目标日历的最后 30 天事件。为了测试此应用程序，创建主函数 `syncEvents`
    和其他辅助函数，如 `updateEvent_`、`deleteEvent_` 和 `insertEvent_`。我们通过在事件标题/摘要前加上 `sync:`
    并用方括号括起来来标记从源同步到目标的事件。例如，如果源事件是 `Example event`，则它将被标记为 `[sync:Example event]`
    并插入/更新到目标日历中：'
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The previously mentioned `syncEvents` function collects events from the `Source`
    and `Destination` events and processes them as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 之前提到的 `syncEvents` 函数从 `Source` 和 `Destination` 事件中收集事件，并按以下方式处理：
- en: It updates all the events that appear in both the source and destination (common
    to both arrays)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它更新了源和目的地（两个数组都有的）中出现的所有事件
- en: It deletes all the events that are not present in the source but are present
    in the destination (that is, they are present in the destination only)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它删除源中不存在但在目的地中存在的事件（即仅在目的地中出现）
- en: It inserts all the events that appear in the source but not in the destination
    (that is, they are present in the source only)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将源中出现但不在目的地中出现的事件插入（即仅在源中出现）
- en: 'The helper functions are listed here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 辅助函数列在这里：
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Congratulations! You have created a working Calendar sync application.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已创建了一个工作的日历同步应用程序。
- en: The DriveApp class
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`DriveApp` 类'
- en: This class allows you to create, search, and modify files and folders in your
    Drive.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此类允许您在您的 Drive 中创建、搜索和修改文件和文件夹。
- en: 'For reference documentation on the `DriveApp` class, refer to the website:
    [https://developers.google.com/apps-script/reference/drive/drive-app?hl=en](https://developers.google.com/apps-script/reference/drive/drive-app?hl=en).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 关于`DriveApp`类的参考文档，请参阅网站：[https://developers.google.com/apps-script/reference/drive/drive-app?hl=en](https://developers.google.com/apps-script/reference/drive/drive-app?hl=en)。
- en: Creating customized PDF files
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建自定义PDF文件
- en: 'Imagine that you need to create customized PDF files from the Sheet or external
    data. We can create PDF files from the HTML template. You simply need to format
    column headers and put some sample data in a new Sheet (`AddressBook`) as shown
    in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你需要从工作表或外部数据创建自定义PDF文件。我们可以从HTML模板创建PDF文件。你只需格式化列标题，并在新的工作表（`AddressBook`）中放入一些示例数据，如下面的截图所示：
- en: '![Creating customized PDF files](img/B05010_05_10.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义PDF文件](img/B05010_05_10.jpg)'
- en: 'Create the `createPdfs` function in the `Code.gs` file as listed here:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Code.gs`文件中创建`createPdfs`函数，具体步骤如下：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `createPdfs` function gets data from a Sheet, or you can modify it to get
    data from an external source. It creates an HTML template for each row of data,
    converts it to a PDF, and stores it in a Drive folder. Let's assign the `name`,
    `title`, `company`, `address`, `city`, and `zip_pin` variables as global variables.
    Only then can we get those values in an HTML template.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`createPdfs`函数从工作表获取数据，或者你可以修改它以从外部源获取数据。它为每一行数据创建一个HTML模板，将其转换为PDF，并将其存储在Drive文件夹中。让我们将`name`、`title`、`company`、`address`、`city`和`zip_pin`变量分配为全局变量。只有这样，我们才能在HTML模板中获取这些值。'
- en: 'Create an HTML file called `Template.html` and enter the code listed here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Template.html`的HTML文件，并输入以下代码：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This code gets the global variable values as we described and returns customized
    HTML. Update your message and name in the appropriate places. From this HTML template,
    the `createPdfs` function creates PDF files, each of which is customized with
    individual row data from the Sheet. All the PDF files created are saved in Drive
    (`My Drive` | `Letter`) folder.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码获取我们描述的全局变量值，并返回自定义的HTML。在适当的位置更新你的消息和姓名。从这个HTML模板中，`createPdfs`函数创建PDF文件，每个文件都根据工作表中的单个行数据进行了定制。所有创建的PDF文件都保存在Drive（`我的驱动器`
    | `信件`）文件夹中。
- en: 'The content of one of the PDF files (`Aaron.pdf`) created as per the Sheet
    data (row 2) is shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 根据工作表数据（第2行）创建的PDF文件之一（`Aaron.pdf`）的内容如下所示：
- en: '![Creating customized PDF files](img/B05010_05_11.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义PDF文件](img/B05010_05_11.jpg)'
- en: For a sample, we used this template for a simple letter, but you can use any
    type of template, such as an invoice, resume, job application, and more, as per
    your requirements and imagination.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了示例，我们使用了这个模板来创建一封简单的信件，但你可以根据你的需求和想象力使用任何类型的模板，例如发票、简历、求职申请等。
- en: Creating a Drive file routing application
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个Drive文件路由应用
- en: 'This application can move files by matching the name with the criteria terms
    in the `Settings` tab. First of all, create a new Sheet or tab named `Settings`
    and column headings as shown here:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序可以通过匹配`设置`选项卡中的标准术语来移动文件。首先，创建一个新的工作表或选项卡，命名为`设置`，并按以下方式设置列标题：
- en: '![Creating a Drive file routing application](img/B05010_05_08.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个Drive文件路由应用](img/B05010_05_08.jpg)'
- en: 'Also, create the `moveDriveFiles` function as shown in the following code snippet.
    If you run this function, then it moves files from the root folder to the appropriate
    folder as per the settings in the **Settings** Sheet. The destination folder is
    created if it does not already exist. You can also create a trigger to run this
    function at a predefined time or periodically:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，创建`moveDriveFiles`函数，如下面的代码片段所示。如果你运行此函数，则它将根据**设置**工作表中的设置将文件从根文件夹移动到适当的文件夹。如果尚不存在，将创建目标文件夹。你还可以创建一个触发器，在预定时间或定期运行此函数：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Creating a Drive file search application
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个Drive文件搜索应用
- en: 'Now you are going to create a file search application. It can search files
    in Drive with certain criteria in a text field. Create the functions `onOpen`,
    `showSidebar`, and `listDriveFiles` in the `Code.gs` file as listed here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将创建一个文件搜索应用。它可以在文本字段中根据某些标准搜索Drive中的文件。在`Code.gs`文件中创建`onOpen`、`showSidebar`和`listDriveFiles`函数，如下所示：
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `onOpen` function creates an add-ons menu and calls the `showSidebar` function.
    This means whenever the spreadsheet is opened, the add-ons menu is added and the
    sidebar is displayed:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`onOpen`函数创建一个插件菜单并调用`showSidebar`函数。这意味着每次打开电子表格时，都会添加插件菜单并显示侧边栏：'
- en: '[PRE13]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a new HTML file named `Sidebar.html` and put the following code in it:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `Sidebar.html` 的新 HTML 文件，并将以下代码放入其中：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: On opening the spreadsheet or running the `showSidebar` function, the sidebar
    opens as shown in the following screenshot, except the text `Chapter` in the text
    field. You can type any other text to search files. On clicking the **Search**
    button, the script searches the Drive for those files whose name contains the
    text and populates data in the `Files` Sheet.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开电子表格或运行 `showSidebar` 函数时，侧边栏将打开，如以下截图所示，除了文本字段中的 `Chapter` 文本。你可以输入任何其他文本来搜索文件。点击
    **搜索** 按钮后，脚本将在 Drive 中搜索包含该文本的文件，并在 `Files` 工作表中填充数据。
- en: 'The following screenshot shows the sidebar and sample output:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了侧边栏和示例输出：
- en: '![Creating a Drive file search application](img/B05010_05_09.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个驱动文件搜索应用](img/B05010_05_09.jpg)'
- en: Summary
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about, and created, many useful real-world applications,
    including an event sync application. In the next chapter, you will learn how to
    create RSS/Atom readers and language translator applications.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了并创建了许多有用的实际应用，包括一个事件同步应用。在下一章中，你将学习如何创建 RSS/Atom 阅读器和语言翻译应用。
