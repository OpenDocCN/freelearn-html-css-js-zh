["```js\nvar data = [\n    { X: 10, Y: 10 },\n    { X: 60, Y: 60 },\n    { X: 80, Y: 20 }\n];\nvar generator = d3.svg.line()\n    .x(function(d) { return d.X; })\n    .y(function(d) { return d.Y; });\n```", "```js\nsvg.append('path')\n    .datum(data)\n    .attr({\n        d: generator,\n        fill: 'none',\n        stroke: 'steelblue'\n    });\nsvg.append('path')\n    .datum(data)\n    .attr({\n        transform: 'translate(100,0)',\n        d: generator,\n        fill: 'none',\n        stroke: 'steelblue'\n    });\n```", "```js\nvar data = d3.range(100)\n    .map(function(i) {\n        return Math.random() * 30;\n    })\n    .map(function(d, i) {\n            return { X: i * 10, Y: d }\n    });\n```", "```js\nvar generator = d3.svg.area()\n    .y0(100)\n    .x(function(d) { return d.X; })\n    .y1(function (d) { return d.Y; });\n```", "```js\nvar generator = d3.svg.arc()\n    .innerRadius(0)\n    .outerRadius(60)\n    .startAngle(0)\n    .endAngle(Math.PI * 2);\n```", "```js\nvar generator = d3.svg.arc()\n    .innerRadius(30)\n    .outerRadius(60)\n    .startAngle(0)\n    .endAngle(Math.PI * 2);\n```", "```js\nvar generator = d3.svg.arc()\n    .innerRadius(0)\n    .outerRadius(60)\n    .startAngle(45 * Math.PI * 2 / 360)\n    .endAngle(105 * Math.PI * 2 / 360);\n```", "```js\nvar generator = d3.svg.arc()\n    .innerRadius(40)\n    .outerRadius(60)\n    .startAngle(45 * Math.PI * 2/360)\n    .endAngle(105 * Math.PI * 2/360);\n```", "```js\n var data = [21, 32, 35, 64, 83];\n var pieSegments = d3.layout.pie()(data);\n```", "```js\n[[object Object] {\n  data: 21,\n  endAngle: 6.283185307179587,\n  padAngle: 0,\n  startAngle: 5.721709173346517,\n  value: 21\n},\nâ€¦\n] \n```", "```js\nvar arcGenerator = d3.svg.arc()\n    .innerRadius(0)\n    .outerRadius(100)\n    .startAngle(function(d) {\n         return d.startAngle;\n    })\n    .endAngle(function(d) {\n         return d.endAngle;\n    });\nvar colors = d3.scale.category10();\ngroup.selectAll('path')\n    .data(pieSegments)\n    .enter()\n    .append('path')\n    .attr('d', arcGenerator)\n    .style('fill', function(d, i) {\n        return colors(i);\n  });\n```", "```js\nvar source = { x: 500, y: 50 };\nvar targets = [\n    { x: 100, y: 150 },\n    { x: 300, y: 150 },\n    { x: 500, y: 150 },\n    { x: 700, y: 150 },\n    { x: 900, y: 150 }\n];\nvar links = targets.map(function (target) {\n    return { source: source, target: target };\n});\n```", "```js\nsvg.selectAll('path')\n    .data(links)\n    .enter()\n    .append('path')\n    .attr({\n        d: d3.svg.diagonal(),\n        fill: 'none',\n        stroke: '#ccc'\n    });\n```", "```js\nvar line = d3.svg.line()\n    .interpolate(interpolation)\n    .x(function(d) { return xScale(d[0]); })\n    .y(function(d) { return yScale(d[1]); });\n```", "```js\nif (interpolation === \"bundle\") {\n    var tensionsSel = document.getElementById('tensions');\n    var tension = tensionsSel.options[\n        tensionsSel.selectedIndex].value;\n    line.tension(tension);\n}\n```"]