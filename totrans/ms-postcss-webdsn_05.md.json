["```js\n    npm install postcss-assets --save-dev\n\n    ```", "```js\nvar options = {\n  loadPaths: ['img/', 'fonts/'],\n  relativeTo: 'dest/'\n};\n```", "```js\ngulp.task('assets', function() {\n  return gulp.src('src/*.css')\n    .pipe(postcss([ assets(options) ]))\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\ngulp.task('default', ['assets', 'lint-styles', 'rename', 'sourcemap']);\n\n```", "```js\n    npm install postcss-fontpath --save-dev\n\n    ```", "```js\ngulp.task('fonts', function () {\n  return gulp.src('src/*.css').pipe(\n    postcss([ fontpath() ])\n  ).pipe(\n    gulp.dest('dest/')\n  );\n});\n```", "```js\n    .amex { background: #fff url(img/amex.png) no-repeat 0 0; }\n    .cirrus { background: url(img/cirrus.png) no-repeat 0 0; }\n\n    .delta { background: url(img/delta.png) no-repeat 0 0; }\n    .solo { background: url(img/solo.png) no-repeat 0 0; }\n    ```", "```js\n    .amex { background-image: url(../img/sprite.png); background-position: 0 0; background-color: #fff; }\n    .cirrus { background-image: url(../img/sprite.png); background-position: -102px 0; }\n    .delta { background-image: url(../img/sprite.png); background-position: 0 -64px; }\n    .solo { background-image: url(../img/sprite.png); background-position: -102px -64px; }\n    ```", "```js\nvar opts = {\n  stylesheetPath: 'dest/',\n  spritePath    : 'img/sprite.png',\n  path          : 'src/img/'\n};\n```", "```js\ngulp.task('autoprefixer', function() {\n  return gulp.src('src/*.css')\n    .pipe(postcss([ sprites(opts) ]))\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\n    npm install postcss-svg --save-dev\n\n    ```", "```js\nvar evilIcons = require(\"gulp-evil-icons\");\nvar postcssSVG = require('postcss-svg')\n```", "```js\ngulp.task('icons', function () {\n  return gulp.src('src/index.html')\n.pipe(evilIcons())\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\ngulp.task('changecolor', ['icons'], function() {\n  gulp.src('src/style.css')\n  .pipe(postcss([ postcssSVG() ]))\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\ngulp.task('default', ['icons', 'changecolor', 'lint-styles' , 'rename', 'sourcemap' ]);\n```", "```js\nvar watcher = gulp.watch('src/*.*', ['default', 'icons', 'changecolor', 'lint-styles', 'rename', 'sourcemap']);\n```", "```js\n<link rel=\"stylesheet\" href=\"../node_modules/gulp-evil-icons/node_modules/evil-icons/assets/evil-icons.css\">\n```", "```js\n<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\n```", "```js\n<picture>\n  <source srcset=\"../img/landscape.webp\" type=\"image/webp\">\n  <img src=\"img/landscape.jpg\" alt=\"The Oslo Opera House\">\n</picture>\n```", "```js\n    npm install --save-dev gulp-webp \n    npm install --save-dev gulp-webpcss \n\n    ```", "```js\nvar palette = require('postcss-color-palette');\nvar colormix = require('postcss-color-mix')\n```", "```js\ngulp.task('palette', function () {\n  return gulp.src('src/*.css')\n  .pipe(postcss([ autoprefixer, palette({ palette: 'mrmrs' }), colormix() ]))\n  .pipe(gulp.dest('dest/'));\n});\n```", "```js\n#box0 { background: linear-gradient(aqua, blue 50%, purple); }\n\n#box1 { background: linear-gradient(to right, orange, red, yellow); }\n\n#box2 { background: mix(teal, navy, 80%); }\n```", "```js\n    npm install postcss-color-function --save-dev\n    npm install css-color-converter --save-dev\n\n    ```", "```js\nvar colorfunction = require('postcss-color-function');\n```", "```js\ngulp.task('autoprefixer', function() {\n  return gulp.src('src/*.css')\n    .pipe(postcss([  autoprefixer, colorfunction() ]))\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\n#box0 { background-color: #ff0000; }\n```", "```js\n#box1 { background-color: color(red tint(60%)); }\n```", "```js\n#box2 { background-color: color(red lightness(-20%)); }\n```", "```js\n#box3 { background-color: sepia(red, 0.7);}\n```", "```js\n    npm install postcss-functions --save-dev\n    npm install css-color-converter --save-dev\n\n    ```", "```js\nfunction darkenColor (value, frac) {\n  var darken = 1 - parseFloat(frac);\n  var rgba = color(value).toRgbaArray();\n  var r = rgba[0] * darken;\n  var g = rgba[1] * darken;\n  var b = rgba[2] * darken;\n  return color([r,g,b]).toHexString();\n}\n```", "```js\ngulp.task('autoprefixer', function() {\n  return gulp.src('src/*.css')\n  .pipe(postcss([  autoprefixer, functions({\n    functions: {\n      tint: tintColor,\n      darken: darkenColor,\n      sepia: sepiaColor\n    }\n  })\n  ]))\n  .pipe(gulp.dest('dest/'));\n});\n```", "```js\n    npm install postcss-instagram --save-dev\n\n    ```"]