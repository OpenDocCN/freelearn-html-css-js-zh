- en: Chapter 8. Slider Essentials
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章. 滑块基本知识
- en: The Kendo UI framework includes special widgets called sliders that show a slider
    bar on a web page, so that a user can drag a handle to increase and decrease the
    slider in order to choose a value. These sliders normally have tick marks and
    labels that indicate the highest and lowest numbers available as well as range
    between them. These widgets are great visual tools to help users select numbers
    on a fixed scale, instead of just typing in a value that may or may not be appropriate.
    This could be useful in a rating system, for example, or on any input control
    where only a certain set of numbers are allowed. As you will see, Kendo UI allows
    for a good level of configurability, so you can customize the appearance and functionality
    of the UI to suit your needs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Kendo UI框架包括一些特殊的滑块小部件，这些小部件在网页上显示滑块条，用户可以通过拖动手柄来增加或减少滑块以选择一个值。这些滑块通常有刻度和标签，指示可用的最高和最低数字以及它们之间的范围。这些小部件是帮助用户在固定刻度上选择数字的出色视觉工具，而不是仅仅输入一个可能或可能不合适的值。例如，在评分系统中，或者在只允许一组特定数字的任何输入控件中，这可能很有用。正如您将看到的，Kendo
    UI允许进行良好的配置，因此您可以自定义UI的外观和功能以满足您的需求。
- en: Introducing Slider and RangeSlider
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍滑块和范围滑块
- en: The first thing we should cover is the two different types of slider widgets
    that Kendo UI makes available. There is the standard Kendo **UI Slider** widget
    and there is a Kendo **UI RangeSlider** widget. The Kendo UI RangeSlider widget
    is designed for more advanced scenarios where your page needs to capture a range
    (a bottom and a top number) of numbers from a user in a single page element instead
    of just a single value.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先应该介绍的是Kendo UI提供的两种不同类型的滑块小部件。有标准的Kendo **UI 滑块**小部件，还有一个Kendo **UI 范围滑块**小部件。Kendo
    UI范围滑块小部件是为更高级的场景设计的，在这种情况下，你的页面需要在一个页面元素中捕获一个范围（一个底部和一个顶部的数字）而不是仅仅一个值。
- en: It is important to understand that these slider widgets are special visual aids
    for use in supplying a number into an input HTML element. The final output of
    a slider widget is the number that the user has selected and this number is set
    as the value of the input HTML element underneath. This is important so that the
    input element can then be posted inside of an HTML form and used by a web server
    on the other end when the form is posted.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这些滑块小部件是用于向输入HTML元素提供数字的特殊视觉辅助工具是很重要的。滑块小部件的最终输出是用户选择的数字，并且这个数字被设置为输入HTML元素的值。这是很重要的，因为输入元素可以随后被放入HTML表单中，并在表单提交时由另一端的Web服务器使用。
- en: 'Along these lines, be sure to follow this pattern when creating a Kendo UI
    Slider widget on your page:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着这个思路，当在页面上创建Kendo UI滑块小部件时，请务必遵循以下模式：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `kendoSlider` method needs to be bound to an actual input HTML element.
    So what about the Kendo UI RangeSlider widget? It uses two numbers but an input
    control contains only one value. How does it maintain these two separate values?
    The answer is that it uses two input elements inside of a container `div` tag:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`kendoSlider` 方法需要绑定到一个实际的输入HTML元素上。那么Kendo UI范围滑块小部件又是如何呢？它使用两个数字，但输入控件只包含一个值。它是如何维护这两个独立值的呢？答案是，它使用两个输入元素在容器`div`标签内部：'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This way, the Kendo UI RangeSlider widget is created on a `div` element and
    it builds its range values into the two input elements inside of that container
    `div` to properly render it on the page.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，Kendo UI范围滑块小部件就在一个`div`元素上创建，并且将它的范围值构建到该容器`div`内部的两个输入元素中，以便正确地在页面上渲染。
- en: Using Slider and RangeSlider with the MVC extension methods
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用滑块和范围滑块与MVC扩展方法
- en: The following code sample illustrates the basics of instantiating slider widgets
    by using ASP.NET MVC extension methods. The `Name` method must be called for all
    the Kendo widgets to work properly.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码示例展示了使用ASP.NET MVC扩展方法实例化滑块小部件的基本方法。必须调用`Name`方法，以便所有Kendo小部件都能正常工作。
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Implementing the basics
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现基本功能
- en: 'As an introduction, I have created a sample page that shows sliders and range
    sliders in a variety of configurations. We will use this same code sample in the
    following sections where we discuss the features and options. In this sample,
    we have fixed the positions of the elements using CSS absolute positioning. This
    is not necessarily best practice for web page design, but it works to show these
    controls in isolation. In this first code block, we are creating the HTML markup
    necessary to contain the Slider widgets. Each Slider is created on top of a `div`
    element with input elements inside. This will be explained more after the following
    code sample:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作为介绍，我创建了一个示例页面，展示了各种配置下的滑块和范围滑块。在以下几节中讨论功能和选项时，我们将使用相同的代码示例。在这个示例中，我们使用 CSS
    绝对定位固定了元素的位置。这并不一定是网页设计的最佳实践，但它可以用来单独显示这些控件。在这个第一个代码块中，我们创建了包含滑块小部件所需的 HTML 标记。每个滑块都是在包含输入元素的
    `div` 元素上创建的。这将在以下代码示例之后进行解释：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You will see that we have created four separate slider widgets on the page,
    two of them are normal slider widgets and two of them are range slider widgets.
    The following JavaScript code section is what transforms the HTML markup into
    Kendo widgets for the web page. You can also see some of the configuration options
    in these samples, which we will discuss in detail in just a few paragraphs.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到我们在页面上创建了四个独立的滑块小部件，其中两个是普通滑块小部件，另外两个是范围滑块小部件。下面的 JavaScript 代码部分是将 HTML
    标记转换为网页上的 Kendo 小部件。您还可以看到这些示例中的一些配置选项，我们将在接下来的几段中详细讨论。
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is the output from executing the preceding code block:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是执行前面代码块的结果：
- en: '![Implementing the basics](img/4346OT_08_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![实现基本功能](img/4346OT_08_01.jpg)'
- en: We organized the content on the page so that you could see the different slider
    widgets and their output. The two sliders on the left, one vertical and one horizontal,
    are both normal slider widgets. The two sliders on the right side, one vertical
    and one horizontal, are both range slider widgets. I also adjusted properties
    on each of them so that they are showing unique options for the sake of demonstration.
    We will cover these options as we go through the rest of this chapter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们组织了页面上的内容，以便您可以看到不同的滑块小部件及其输出。左侧的两个滑块，一个垂直和一个水平，都是普通滑块小部件。右侧的两个滑块，一个垂直和一个水平，都是范围滑块小部件。我还调整了它们各自的属性，以便在演示中显示独特的选项。我们将在本章的其余部分中介绍这些选项。
- en: Basic implementation using MVC extension methods
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MVC 扩展方法的基本实现
- en: The following code sample illustrates how to instantiate these same sliders
    by using the ASP.NET MVC extension methods. I have only included the actual slider
    widgets, not the full HTML page.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码示例说明了如何使用 ASP.NET MVC 扩展方法实例化这些相同的滑块。我只包括了实际的滑块小部件，而没有包含完整的 HTML 页面。
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Just as in the normal JavaScript and HTML example above, the output from these
    MVC extensions creates the same output. All four of the sliders appear with the
    same options and configuration and also have the same behavior.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上面正常的 JavaScript 和 HTML 示例一样，这些 MVC 扩展生成的输出是相同的。所有四个滑块都带有相同的选项和配置，并且具有相同的行为。
- en: '![Basic implementation using MVC extension methods](img/4346OT_08_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用 MVC 扩展方法的基本实现](img/4346OT_08_01.jpg)'
- en: Using tooltips and pop-up texts
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具提示和弹出文本
- en: 'The slider widgets give several visual cues to the user to indicate their value
    and their control functions. There are tooltips, or hover effects, which indicate
    what the buttons at the end of the sliders will do. These tooltips are always
    present, they do not require any additional configuration or code, although they
    can be customized using the API. The following screenshot shows the tooltip text
    that appears over the **Increase** button:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块小部件向用户提供了几个视觉提示，以指示它们的值和控制功能。有工具提示或悬停效果，指示滑块末尾的按钮将执行的操作。这些工具提示始终存在，不需要任何额外的配置或代码，尽管可以使用
    API 进行自定义。以下截图显示了出现在**增加**按钮上的工具提示文本：
- en: '![Using tooltips and pop-up texts](img/4346OT_08_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示和弹出文本](img/4346OT_08_02.jpg)'
- en: 'The following screenshot shows the tooltip text that appears over the **Decrease**
    button:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了出现在**减少**按钮上的工具提示文本：
- en: '![Using tooltips and pop-up texts](img/4346OT_08_03.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示和弹出文本](img/4346OT_08_03.jpg)'
- en: 'There are also tooltip labels that indicate the value of the tick marks, if
    present, and that indicate how to interact with the slider control by dragging
    with the mouse. The following screenshot shows the tooltip text over the tick
    mark that represents the number **18**:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在，还有工具提示标签指示刻度值，以及指示如何通过鼠标拖动与滑块控件交互。以下截图显示了代表数字**18**的刻度上的工具提示文本：
- en: '![Using tooltips and pop-up texts](img/4346OT_08_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示和弹出文本](img/4346OT_08_04.jpg)'
- en: 'The following screenshot shows the tooltip text over the **drag** handle:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了拖动手柄上的工具提示文本：
- en: '![Using tooltips and pop-up texts](img/4346OT_08_05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示和弹出文本](img/4346OT_08_05.jpg)'
- en: 'Lastly, when a user drags the controls of a range slider widget, the page will
    show a label that indicates the currently selected range. The following screenshot
    shows the tooltip text over the selected range, in this case, showing that the
    handles are positioned at **4** and **15**:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当用户拖动范围滑块小部件的控制时，页面将显示一个标签，指示当前选定的范围。以下截图显示了所选范围内的工具提示文本，在这种情况下，显示手柄位于**4**和**15**：
- en: '![Using tooltips and pop-up texts](img/4346OT_08_11.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示和弹出文本](img/4346OT_08_11.jpg)'
- en: Learning keyboard controls
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习键盘控制
- en: It is also important to note that the slider controls can also be manipulated
    using the keyboard arrow buttons and the *Page Up* and *Page Down* buttons when
    the slider widget has the focus on the page. Pressing the arrow button either
    up or down will increase or decrease the value of the slider by the number contained
    in the `smallStep` property. Pressing *Page Up* or *Page Down* will increase or
    decrease the value of the slider by the number contained in the `largeStep` property.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，当滑块小部件在页面上获得焦点时，可以使用键盘箭头按钮和*Page Up*和*Page Down*按钮来操纵滑块控件。按下向上或向下的箭头按钮将增加或减少滑块的值，该值包含在`smallStep`属性中。按下*Page
    Up*或*Page Down*将增加或减少滑块的值，该值包含在`largeStep`属性中。
- en: 'These properties, `smallStep` and `largeStep`, can be set when the slider widget
    is instantiated in JavaScript as we saw in our earlier sample code:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些属性，`smallStep`和`largeStep`，可以在JavaScript中实例化滑块小部件时设置，正如我们在之前的示例代码中所看到的：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The numbers do not have to be even, they can be any whole number increment that
    makes sense for your application.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 数字不必是偶数，可以是任何对您的应用程序有意义的整数增量。
- en: Customizing the user interface of the slider widgets
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义滑块小部件的用户界面
- en: Many of the properties of the slider widgets can be used to customize how the
    user can interact with them on the web page. The text that shows up in the tooltips
    and tick mark labels can be customized to show different text that may be more
    specific to your page. You can also customize the orientation of the sliders and
    their default values.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块小部件的许多属性都可以用来自定义用户在网页上如何与之交互。显示在工具提示和刻度标记标签中的文本可以自定义，以显示更符合您页面需求的文本。您还可以自定义滑块的朝向及其默认值。
- en: Tooltip customization
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具提示自定义
- en: 'The `tooltip` property of the slider widgets can be customized with a custom
    format or a custom template and can also be disabled completely, if unwanted.
    For example, imagine that your slider widget is intended for the user to select
    degrees (such as on a thermometer). You could customize the format of the tooltip
    to reflect that unique format. You will also see that when changing the format
    of the tooltip, the format of the data labels will automatically change to match
    it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块小部件的`tooltip`属性可以通过自定义格式或自定义模板进行自定义，如果不需要，也可以完全禁用。例如，假设您的滑块小部件旨在让用户选择度数（例如在温度计上）。您可以自定义工具提示的格式以反映这种独特的格式。您还会看到，当更改工具提示的格式时，数据标签的格式也会自动更改以匹配它：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The default format is `"{0}"`, so by adding the degree symbol after this, it
    will appear properly on the page:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认格式是`"{0}"`，因此在此之后添加度数符号，它将正确地显示在页面上：
- en: '![Tooltip customization](img/4346OT_08_06.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![工具提示自定义](img/4346OT_08_06.jpg)'
- en: Notice how the labels and the tooltip both changed to match the new format.
    Also note that I added the format using a degree symbol that was not HTML encoded,
    the Kendo UI system handled the appropriate encoding for me.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意标签和工具提示都更改以匹配新的格式。还要注意，我使用未HTML编码的度数符号添加了格式，Kendo UI系统为我处理了适当的编码。
- en: 'The full options for configuring the `tooltip` property are displayed here:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 配置`tooltip`属性的完整选项在此处显示：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You should not use both a format and a template, since both of those properties
    are designed to customize the display of the tooltips. The template, as you have
    seen in previous chapters, would need to follow the normal Kendo template syntax
    and could be used to create a highly customized tooltip for your slider control.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你不应该同时使用格式和模板，因为这两个属性都是为了自定义提示框的显示而设计的。模板，如你在前面的章节中看到的，需要遵循正常的 Kendo 模板语法，并且可以用来为你的滑块控件创建高度定制的提示框。
- en: Customizing tooltip options using MVC extension methods
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 MVC 扩展方法自定义提示框选项
- en: This is how a configured tooltip looks when using ASP.NET MVC extension methods.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是使用 ASP.NET MVC 扩展方法配置的提示框的外观。
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Remember that, just as in JavaScript, you would not set both the format and
    the template at the same time. Also note that the Kendo library has misspelled
    a word, it has "tempalte" instead of "template". Be sure to check your code here
    in case Telerik has fixed the spelling.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，就像在 JavaScript 中一样，你不会同时设置格式和模板。另外，请注意，Kendo 库拼写了一个单词，它将 "tempalte" 错误地拼写为
    "template"。务必在此处检查你的代码，以防 Telerik 已经修复了拼写错误。
- en: Customizing the default values
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义默认值
- en: 'A slider widget can be configured to start with a specific default value. For
    a normal Kendo slider widget, this comes in the form of the `value` property either
    of the input HTML element or in the initialization of the Kendo slider widget
    in JavaScript, as shown here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块小部件可以被配置为以特定的默认值开始。对于一个普通的 Kendo 滑块小部件，这以输入 HTML 元素的 `value` 属性或在此处所示的 Kendo
    滑块小部件的 JavaScript 初始化形式出现：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Either of these methods will set the initial, or default value of the slider
    widget to the number `4`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法中的任何一种都将滑块小部件的初始值或默认值设置为数字 `4`。
- en: 'For the Kendo range slider, you need to set both of the numbers for the range,
    so you need to use different properties called `selectionStart` and `selectionEnd`
    or set the value properties of both of the inputs in the HTML:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Kendo 范围滑块，你需要设置范围的两个数字，因此你需要使用不同的属性 `selectionStart` 和 `selectionEnd` 或设置
    HTML 中两个输入的值属性：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Both of these methods will set the start of the selected range to `2` and the
    end of the selected range to `8`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法都将选择范围的开始设置为 `2`，并将选择范围的结束设置为 `8`。
- en: Customizing tick placement
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义刻度放置
- en: 'The tick marks and data labels on the slider widgets can also be customized
    by choosing one of four supported options for their display: `topLeft`, `bottomRight`,
    `both`, and `none`. These are set through the configuration property called `tickPlacement`.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 滑块小部件上的刻度和数据标签也可以通过选择四种支持的显示选项之一来自定义：`topLeft`、`bottomRight`、`both` 和 `none`。这些是通过名为
    `tickPlacement` 的配置属性设置的。
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Placing the tick at the top left
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在左上角放置刻度
- en: The `topLeft` tick placement option will place the tick marks on the left side
    of a vertical slider or on the top side of a horizontal slider.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`topLeft` 刻度放置选项将在垂直滑块的左侧或水平滑块的上侧放置刻度。'
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here is the output:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是输出：
- en: '![Placing the tick at the top left](img/4346OT_08_07.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![在左上角放置刻度](img/4346OT_08_07.jpg)'
- en: Placing the tick at the bottom right
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在右下角放置刻度
- en: 'The `bottomRight` tick placement option will place the tick marks on the right
    side of a vertical slider or on the bottom side of a horizontal slider:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`bottomRight` 刻度放置选项将在垂直滑块的右侧或水平滑块的底部放置刻度：'
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Placing the tick at the bottom right](img/4346OT_08_08.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![在右下角放置刻度](img/4346OT_08_08.jpg)'
- en: Placing ticks on both sides
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在两侧放置刻度
- en: 'The `both` tick placement option will place the tick marks on both sides of
    a slider:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`both` 刻度放置选项将在滑块的两侧放置刻度：'
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Placing ticks on both sides](img/4346OT_08_09.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![在两侧放置刻度](img/4346OT_08_09.jpg)'
- en: Removing the ticks entirely
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 完全移除刻度
- en: 'The `none` tick placement option will remove all tick marks from a slider:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`none` 刻度放置选项将从滑块中移除所有刻度：'
- en: '[PRE16]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Removing the ticks entirely](img/4346OT_08_10.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![完全移除刻度](img/4346OT_08_10.jpg)'
- en: Customizing slider orientation
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义滑块方向
- en: 'You have already seen the two orientations of the slider widgets—horizontal
    and vertical, but here is a brief look at the code necessary to enable these two
    options:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到了滑块小部件的两个方向——水平和垂直，但这里简要看看启用这两个选项所需的代码：
- en: '[PRE17]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not set the orientation, the default orientation will be horizontal.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有设置方向，则默认方向将是水平。
- en: Learning API methods
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习 API 方法
- en: 'When interacting with the slider widgets, you must reference the JavaScript
    object through the `data()` method as usual:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 与滑动组件交互时，你必须像往常一样通过 `data()` 方法引用 JavaScript 对象：
- en: '[PRE18]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The enable and disable Methods
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用和禁用方法
- en: The slider widgets support methods for enabling and disabling the controls in
    the web page through the `enable()` and `disable()` methods. The syntax is the
    same for both slider widgets and range slider widgets, assuming you have the correct
    reference to the object through JavaScript.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动组件支持通过 `enable()` 和 `disable()` 方法启用和禁用网页中的控件。假设你通过 JavaScript 正确引用了对象，这两个滑动组件和范围滑动组件的语法是相同的。
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'A disabled slider widget appears as partially transparent, or grayed out, on
    the web page. In the following screenshot, the slider on the left is disabled
    and the slider on the right is enabled:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用的滑动组件在网页上显示为部分透明或灰色。在以下屏幕截图中，左侧的滑动条是禁用的，右侧的滑动条是启用的：
- en: '![The enable and disable Methods](img/4346OT_08_12.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![启用和禁用方法](img/4346OT_08_12.jpg)'
- en: Using the values
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用值
- en: The value of a slider widget can be both set and retrieved from the JavaScript
    API. The syntax is different between the slider and the range slider since they
    each use a different number of values internally.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动组件的值可以通过 JavaScript API 设置和检索。由于它们在内部使用不同数量的值，因此滑动组件和范围滑动组件的语法不同。
- en: Using values from a Kendo slider
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Kendo 滑动组件的值
- en: 'Setting and retrieving values for a Kendo slider is straightforward since it
    contains only a single value, as shown here:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 设置和检索 Kendo 滑动组件的值很简单，因为它只包含一个值，如下所示：
- en: '[PRE20]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Using values from a Kendo range slider
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Kendo 范围滑动组件的值
- en: When setting or retrieving values from a range slider, you must communicate
    using JavaScript arrays so that you can hold both values from the slider object.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当设置或检索范围滑动组件的值时，你必须使用 JavaScript 数组进行通信，以便可以同时持有滑动对象中的两个值。
- en: '[PRE21]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Hooking into events
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件钩子
- en: Just as with the other Kendo UI widgets, event handlers can be bound during
    object instantiation, or later through a JavaScript `bind()` method call. These
    examples will only show the instantiation code.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他 Kendo UI 组件一样，事件处理器可以在对象实例化时绑定，或者稍后通过 JavaScript `bind()` 方法调用。以下示例将仅展示实例化代码。
- en: Using the change event
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用变化事件
- en: The slider widgets will fire a `change` event when the user changes the value
    of a slider either through clicking one of the arrows, moving the slider with
    the mouse, or using the keyboard controls.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户通过点击箭头、使用鼠标移动滑动条或使用键盘控件更改滑动条的值时，滑动组件将触发 `change` 事件。
- en: The change event for a Kendo slider widget
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kendo 滑动组件的变化事件
- en: 'The `change` event for a Kendo slider widget can be bound and used like the
    following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Kendo 滑动组件的 `change` 事件可以像以下那样绑定和使用：
- en: '[PRE22]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The `e.value` property will contain the new value of the slider widget so that
    you can respond to the event properly in your JavaScript code.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`e.value` 属性将包含滑动组件的新值，这样你就可以在 JavaScript 代码中正确地响应事件。'
- en: The change event for a Kendo range slider widget
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kendo 范围滑动组件的变化事件
- en: The `change` event for a Kendo range slider widget can be bound as shown in
    the following code snippet this. It differs from the `change` event for the slider
    widget in that it passes an array to the event handler instead of a single value.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Kendo 范围滑动组件的 `change` 事件可以像以下代码片段所示那样绑定。它与滑动组件的 `change` 事件不同，因为它将数组传递给事件处理器而不是单个值。
- en: '[PRE23]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The slide event
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滑动事件
- en: The `slide` event is identical in syntax to the `change` event, but it only
    fires when the user moves the slider by using the mouse, it will not fire for
    keyboard events or button clicks. The preceding examples for the `change` event
    are valid for the `slide` event as well.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`slide` 事件在语法上与 `change` 事件相同，但它仅在用户使用鼠标移动滑动条时触发，它不会对键盘事件或按钮点击触发。前面的 `change`
    事件示例也适用于 `slide` 事件。'
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The change and slide events with MVC extension methods
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 MVC 扩展方法处理变化和滑动事件
- en: This is how event handlers can be wired up by using ASP.NET MVC extension methods.
    Please note that the output is identical to the one outlined before; this is simply
    the syntax necessary for executing the following code using MVC. See the previous
    sections for more information.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是通过使用 ASP.NET MVC 扩展方法来连接事件处理器的方式。请注意，输出与之前概述的相同；这只是为了执行以下代码所需的语法；有关更多信息，请参阅前面的部分。
- en: '[PRE25]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The Kendo UI Slider and Kendo UI RangeSlider widgets are very handy tools for
    collecting numbers for an input element in a web page. When collecting numbers
    that must fall within a specified range, these widgets are much friendlier than
    returning error messages to the user about a number being invalid. I would suggest
    using them where appropriate to make your site much more interesting for your
    users.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Kendo UI 滑块和 Kendo UI 范围滑块小部件是收集网页中输入元素的数字的非常实用的工具。当收集必须落在指定范围内的数字时，这些小部件比向用户返回关于数字无效的错误消息要友好得多。我建议在适当的地方使用它们，以使您的网站对用户来说更加有趣。
- en: In the next chapter, you will learn about the Splitter and the TreeView widgets
    that allow you to load resizable dynamic content into your pages and to organize
    hierarchical content in a tree-like display. These widgets will help you build
    powerful pages that can handle and load content on the fly and display content
    in organized patterns.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将了解 Splitter 和 TreeView 小部件，这些小部件允许您将可调整大小的动态内容加载到您的页面中，并在树形显示中组织层次内容。这些小部件将帮助您构建强大的页面，可以动态处理和加载内容，并以有组织的模式显示内容。
