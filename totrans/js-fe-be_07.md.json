["```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script type=\"module\">\n```", "```js\n    import GlobalApp from \"./global-app.js\";\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      components : {\n```", "```js\n        GlobalApp:GlobalApp\n```", "```js\n      },\n```", "```js\n      template : \"<GlobalApp />\"\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\nimport Element from \"./element.js\";\n```", "```js\nconst GlobalApp = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      elements : []\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  components : {\n```", "```js\n    Element:Element\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <button>Add Element</button>\n```", "```js\n    <ul></ul>\n```", "```js\n  `,\n```", "```js\n}\n```", "```js\nexport default GlobalApp;\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n  `,\n```", "```js\n}\n```", "```js\nexport default Element;\n```", "```js\nimport Element from \"./element.js\";\n```", "```js\nconst GlobalApp = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      elements : []\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  components : {\n```", "```js\n    Element:Element\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <button @click=\"add()\">Add Element</button>\n```", "```js\n    <ul>\n```", "```js\n<li v-for=\"(element, index) in elements\" \n```", "```js\n      :key=\"index\">{{element}}</li>\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n  methods : {\n```", "```js\n    add() {\n```", "```js\nvar element = \"Element \" + (this.elements.length + \n```", "```js\n      1);  // \"Element X\"\n```", "```js\n      this.elements.push(element);\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default GlobalApp;\n```", "```js\nimport Element from \"./element.js\";\n```", "```js\nconst GlobalApp = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      elements : []\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  components : {\n```", "```js\n    Element:Element\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <button @click=\"add()\">Add Element</button>\n```", "```js\n    <ul>\n```", "```js\n      <Element v-for=\"(element, index) in elements\" \n```", "```js\n      :key=\"index\" :text=\"element\" />\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n  methods : {\n```", "```js\n    add() {\n```", "```js\n      var element = \"Element \" + (this.elements.length + \n```", "```js\n      1);\n```", "```js\n      this.elements.push(element);\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default GlobalApp; \n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span> {{text}} </span>\n```", "```js\n<button> Remove </button> \n```", "```js\n      <button> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\"],\n```", "```js\n}\n```", "```js\nexport default Element;\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script src=\"img/vue@next\"></script>\n```", "```js\n    <style type=\"text/css\">\n```", "```js\n      li {\n```", "```js\n        margin-top:10px;\n```", "```js\n      }\n```", "```js\n      ul button {\n```", "```js\n        margin-left:10px;\n```", "```js\n      }\n```", "```js\n    </style>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n    <div id=\"app\"></div>\n```", "```js\n  </body>\n```", "```js\n  <script type=\"module\">\n```", "```js\n    import GlobalApp from \"./global-app.js\";\n```", "```js\n    var app = Vue.createApp({\n```", "```js\n      components : {\n```", "```js\n        GlobalApp:GlobalApp\n```", "```js\n      },\n```", "```js\n      template : \"<GlobalApp />\"\n```", "```js\n    });\n```", "```js\n    var vm = app.mount(\"div#app\");\n```", "```js\n  </script>\n```", "```js\n</html>\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span> {{text}} </span>\n```", "```js\n      <button @click=\"remove()\"> Remove </button> \n```", "```js\n      <button> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\"],\n```", "```js\n  methods : {\n```", "```js\n    remove() {\n```", "```js\n      // process the click on the Remove button\n```", "```js\n    },\n```", "```js\n  },\n```", "```js\n}\n```", "```js\nexport default Element;.\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span> {{text}} </span>\n```", "```js\n      <button @click=\"remove()\"> Remove </button> \n```", "```js\n      <button> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\", \"index\"],\n```", "```js\n  methods : {\n```", "```js\n    remove() {\n```", "```js\n      // process the click on the Remove button\n```", "```js\n      this.$emit(\"remove\", { index : this.index });\n```", "```js\n    },\n```", "```js\n  },\n```", "```js\n  emits : [\"remove\"]\n```", "```js\n}\n```", "```js\nexport default Element;\n```", "```js\nimport Element from \"./element.js\";\n```", "```js\nconst GlobalApp = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      elements : []\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  components : {\n```", "```js\n    Element:Element\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <button @click=\"add()\">Add Element</button>\n```", "```js\n    <ul>\n```", "```js\n      <Element v-for=\"(element, index) in elements\" \n```", "```js\n      :key=\"index\" :text=\"element\" \n```", "```js\n           :index=\"index\"\n```", "```js\n               @remove=\"remove($event)\"\n```", "```js\n      />\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n  methods : {\n```", "```js\n    add() {\n```", "```js\n      var element = \"Element \" + (this.elements.length + \n```", "```js\n      1);\n```", "```js\n      this.elements.push(element);\n```", "```js\n    },\n```", "```js\n    remove(params) {\n```", "```js\n      var index = params.index;\n```", "```js\nthis.elements.splice(index, 1);  // delete element in \n```", "```js\n                                       // array\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default GlobalApp;\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      input : false   // display element text by default\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span v-if=\"!input\"> {{text}} </span>\n```", "```js\n      <input v-else type=\"text\" :value=\"text\" />\n```", "```js\n      <button @click=\"remove()\"> Remove </button> \n```", "```js\n      <button @click=\"input=true\"> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\", \"index\"],\n```", "```js\n  methods : {\n```", "```js\n    remove() {\n```", "```js\n      // process the click on the Remove button\n```", "```js\n      this.$emit(\"remove\", { index : this.index });\n```", "```js\n    },\n```", "```js\n  },\n```", "```js\n  emits : [\"remove\"]\n```", "```js\n}\n```", "```js\nexport default Element;\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      input : false\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span v-if=\"!input\"> {{text}} </span>\n```", "```js\n      <input v-else type=\"text\" :value=\"text\" \n```", "```js\n       @blur=\"modify($event)\" />\n```", "```js\n      <button @click=\"remove()\"> Remove </button> \n```", "```js\n      <button @click=\"input=true\"> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\", \"index\"],\n```", "```js\n  methods : {\n```", "```js\n    remove() {\n```", "```js\n      // process the click on the Remove button\n```", "```js\n      this.$emit(\"remove\", { index : this.index });\n```", "```js\n    },\n```", "```js\n    modify(event) {\n```", "```js\nvar value = event.target.value;    // value entered \n```", "```js\n                                         // in the field\n```", "```js\n      this.input = false;                // delete input field\n```", "```js\nthis.$emit(\"modify\", { index : this.index, value : \n```", "```js\n      value });   // update element in list\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  emits : [\"remove\", \"modify\"]\n```", "```js\n}\n```", "```js\nexport default Element;\n```", "```js\nimport Element from \"./element.js\";\n```", "```js\nconst GlobalApp = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      elements : []\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  components : {\n```", "```js\n    Element:Element\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <button @click=\"add()\">Add Element</button>\n```", "```js\n    <ul>\n```", "```js\n      <Element v-for=\"(element, index) in elements\" \n```", "```js\n      :key=\"index\" :text=\"element\" \n```", "```js\n        :index=\"index\"\n```", "```js\n        @remove=\"remove($event)\" @modify=\"modify($event)\"\n```", "```js\n      />\n```", "```js\n    </ul>\n```", "```js\n  `,\n```", "```js\n  methods : {\n```", "```js\n    add() {\n```", "```js\n      var element = \"Element \" + (this.elements.length + \n```", "```js\n      1);\n```", "```js\n      this.elements.push(element);\n```", "```js\n    },\n```", "```js\n    remove(params) {\n```", "```js\n      var index = params.index;\n```", "```js\n      this.elements.splice(index, 1);\n```", "```js\n    },\n```", "```js\n    modify(params) {\n```", "```js\n      var index = params.index;\n```", "```js\n      var value = params.value;\n```", "```js\n      this.elements[index] = value;  // new element value\n```", "```js\n    }\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default GlobalApp;\n```", "```js\nconst Element = {\n```", "```js\n  data() {\n```", "```js\n    return {\n```", "```js\n      input : false\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  template : `\n```", "```js\n    <li> \n```", "```js\n      <span v-if=\"!input\"> {{text}} </span>\n```", "```js\n      <input v-else type=\"text\" :value=\"text\" \n```", "```js\n       @blur=\"modify($event)\" ref=\"refInput\" />\n```", "```js\n      <button @click=\"remove()\"> Remove </button> \n```", "```js\n      <button @click=\"input=true\"> Modify </button>\n```", "```js\n    </li>\n```", "```js\n  `,\n```", "```js\n  props : [\"text\", \"index\"],\n```", "```js\n  methods : {\n```", "```js\n    remove() {\n```", "```js\n      // process the click on the Remove button\n```", "```js\n      this.$emit(\"remove\", { index : this.index });\n```", "```js\n    },\n```", "```js\n    modify(event) {\n```", "```js\n      var value = event.target.value;\n```", "```js\n      this.input = false;\n```", "```js\n      this.$emit(\"modify\", { index : this.index, value : \n```", "```js\n      value });\n```", "```js\n    }\n```", "```js\n  },\n```", "```js\n  emits : [\"remove\", \"modify\"],\n```", "```js\n  updated() {\n```", "```js\n// check that the ref=\"refInput\" attribute exists, and \n```", "```js\n    // if so, give focus to the input field\n```", "```js\n    if (this.$refs.refInput) this.$refs.refInput.focus();  \n```", "```js\n  }\n```", "```js\n}\n```", "```js\nexport default Element;\n```"]