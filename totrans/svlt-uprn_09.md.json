["```js\nGITHUB=YOUR_GITHUB_TOKEN_HERE\n```", "```js\n<nav>\n  <ul>\n    <li><a href='/'>Home</a></li>\n    ...\n    <li><a href='/github'>GitHub</a></li>\n  </ul>\n</nav>\n```", "```js\n<script>\n  import { enhance } from '$app/forms';\n  import { invalidate } from '$app/navigation';\n  export let data;\n  export let form;\n  const reload = () => {\n    invalidate('https://api.github.com/repos/');\n  };\n</script>\n{#if form && form.message }\n  {form.status}\n  {form.message}\n{/if}\n<p>\n  Stargazers on the official SvelteKit repo: {data.repo.stargazers_count}\n</p>\n<form method='POST' use:enhance>\n  <button formaction='?/star' on:click={reload}>Star</button>\n  <button formaction='?/unstar' on:click={reload}>Unstar</button>\n</form>\n```", "```js\nconst star_url = 'https://api.github.com/user/starred/sveltejs/kit';\nexport function load({ fetch }) {\n  const repo = fetch( 'https://api.github.com/repos/sveltejs/kit' )\n    .then( response => response.json() );\n  return { repo };\n}\nexport const actions = {\n  star: async({ fetch }) => {\n    const response = fetch(star_url, {\n      method: 'PUT',\n      headers: {\n        'Content-Length': '0',\n      }\n    })\n    .then(response => {\n      const status = response.status;\n      return {\n        status: status,\n        message: (status === 204 ? 'Success!' : 'Error')\n      }\n    });\n    return response;\n  },\n  unstar: async({ fetch }) => {\n    const response = fetch(star_url, {\n      method: 'DELETE'\n    })\n    .then(response => {\n      const status = response.status;\n      return {\n        status: status,\n        message: (status === 204 ? 'Success!' : 'Error')\n      }\n    });\n    return response;\n  },\n}\n```", "```js\nimport { GITHUB } from '$env/static/private';\nexport async function handleFetch( { request, fetch  } ) {\n  if (request.url.startsWith('https://api.github.com/')) {\n    request.headers.set('Accept', 'application/vnd.github+json');\n    request.headers.set('Authorization', 'Bearer ' + GITHUB);\n    request.headers.set('X-GitHub-Api-Version', '2022-11-28');\n  }\n  return fetch(request);\n}\n```", "```js\nimport { GITHUB } from '$env/static/private';\nexport async function handleFetch( { request, fetch  } ) {\n  if (request.url.startsWith('https://api.github.com/')) {\n    request.headers.set('Accept', 'application/vnd.github+json');\n    request.headers.set('Authorization', 'Bearer ' + GITHUB);\n    request.headers.set('X-GitHub-Api-Version', '2022-11-28');\n  }\n  return fetch(request);\n}\nexport async function handle({ event, resolve }) {\n  event.setHeaders({'X-NOT-FROM-GITHUB': 'our value'});\n  const response = await resolve(event);\n  response.headers.set('X-ANOTHER-HEADER', 'something else');\n  return response;\n}\n```", "```js\nexport async function handleError({ error, event }) {\n  console.log('client handled error' + error.message);\n  console.log(event.url);\n  return {message: 'Whoops, looks like you found an error! Sorry about that.'};\n}\n```", "```js\nimport { browser } from '$app/environment';\nconst key = 'DEMO_KEY'; // your API key here\nexport const prerender = true;\nexport function load() {\n  if(browser) {\n    throw new Error('in the browser');\n  }\n  const pic = fetch(`https://api.nasa.gov/planetary/apod?api_key=${key}`)\n    .then(response => {\n      console.log('got response');\n      return response.json();\n    });\n  return {pic};\n}\n```", "```js\nimport { GITHUB } from '$env/static/private';\nimport fs from 'fs';\nexport async function handleFetch( { request, fetch  } ) {\n  if (request.url.startsWith('https://api.github.com/')) {\n    request.headers.set('Accept', 'application/vnd.github+json');\n    request.headers.set('Authorization', 'Bearer ' + GITHUB);\n    request.headers.set('X-GitHub-Api-Version', '2022-11-28');\n  }\n  return fetch(request);\n}\nexport async function handle({ event, resolve }) {\n  event.setHeaders({'X-NOT-FROM-GITHUB': 'our value'});\n  const response = await resolve(event);\n  response.headers.set('another', 'custom value');\n  return response;\n}\nfunction today() {\n  const current = new Date();\n  return current.getDate() + \"-\" +\n         current.getDay() + \"-\" +\n         current.getFullYear() + \" \" +\n         current.getHours() + \":\" +\n         current.getMinutes() + \":\" +\n         current.getSeconds();\n}\nexport async function handleError({ error, event }) {\n  const log = today() + ' ' + error.message + ' @ ' + event.request.url;\n  fs.appendFile('./app.log', log + '\\n', (err) => {\n    if(err) {\n      console.log(err);\n    }\n  });\n  return {\n    error: error.message\n  };\n}\n```", "```js\nimport { error } from '@sveltejs/kit';\nconst star_url= 'https://api.github.com/user/starred/sveltejs/kit';\nexport function load({ fetch }) {\n  throw error(401, {\n    message: 'You don\\'t have permission to see this!',\n    id: crypto.randomUUID()\n  });\n  const repo = fetch( 'https://api.github.com/repos/sveltejs/kit' )\n    .then( response => response.json() );\n  return { repo };\n}\nexport const actions = {\n    // omitted for brevity\n}\n```", "```js\n<script>\n  import { page } from '$app/stores';\n</script>\n{$page.error.message}\n{#if $page.error.id}\n  <p>\n    Error ID: {$page.error.id}\n  </p>\n{/if}\n```"]