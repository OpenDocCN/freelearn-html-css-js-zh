["```js\n$ npm init -y\n```", "```js\n$ npm install esbuild --save-dev\n```", "```js\n{\n  \"name\": \"lib-test-florian-rappl\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Just a test library\",\n  \"keywords\": [],\n  \"author\": \"Florian Rappl\",\n  \"license\": \"MIT\",\n  \"main\": \"lib/index.js\",\n  \"source\": \"src/index.js\",\n  \"scripts\": {\n    \"build\": \"esbuild src/*.js --platform=node --outdir=lib\n      --format=cjs\"\n  },\n  \"devDependencies\": {\n    \"esbuild\": \"^0.15.0\"\n  }\n}\n```", "```js\nimport { readFile } from \"fs\";\nimport { resolve } from \"path\";\nexport function getLibName() {\n  const packagePath = resolve(__dirname,\n    \"../package.json\");\n  return new Promise((resolve, reject) => {\n    readFile(packagePath, \"utf8\", (err, content) => {\n      if (err) {\n        reject(err);\n      } else {\n        const { name, version } = JSON.parse(content);\n        resolve(`${name}@${version}`);\n      }\n    });\n  });\n```", "```js\n$ npm run build\n\n> lib-test-florian-rappl@1.0.0 build /home/node/code/example01\n\n> esbuild src/*.js --platform=node --outdir=lib --format=cjs\n\n  lib/index.js  1.4kb\n\n Done in 2ms\n```", "```js\n$ npm login\n```", "```js\n$ npm publish\n\nnpm notice\n\nnpm notice   lib-test-florian-rappl@1.0.0\n\nnpm notice === Tarball Contents ===\n\nnpm notice 1.5kB lib/index.js\n\nnpm notice 425B  src/index.js\n\nnpm notice 344B  package.json\n\nnpm notice === Tarball Details ===\n\nnpm notice name:          lib-test-florian-rappl\n\nnpm notice version:       1.0.0\n\nnpm notice package size:  1.1 kB\n\nnpm notice unpacked size: 2.3 kB\n\nnpm notice shasum:        2b5d224949f9112eeaee435a876a8ea15ed3e7cd\n\nnpm notice integrity:     sha512-cBq1czwmN4vep[...]/vXrORFGjRjnA==\n\nnpm notice total files:   3\n\nnpm notice\n\n+ lib-test-florian-rappl@1.0.0\n```", "```js\n{\n  \"name\": \"@foo/bar\",\n  // ... like beforehand\n  \"publishConfig\": {\n    \"access\": \"public\"\n  }\n}\n```", "```js\n; Lines starting with a semicolon or\n# with a hash symbol are comments\nregistry=https://mycustomregistry.example.org\n```", "```js\n@foo:registry=https://mycustomregistry.example.org\n```", "```js\n//mycustomregistry.example.org/:username=\"myname\"\n//mycustomregistry.example.org/:_password=\"mysecret\"\n//mycustomregistry.example.org/:email=foo@bar.com\nalways-auth=true\n```", "```js\n$ npx verdaccio\n\n warn --- config file  - ~/.config/verdaccio/config.yaml\n\n info --- plugin successfully loaded: verdaccio-htpasswd\n\n info --- plugin successfully loaded: verdaccio-audit\n\n warn --- http address - http://localhost:4873/ - verdaccio/5.14.0\n```", "```js\n$ npm adduser --registry http://localhost:4873/\n\nUsername: foo\n\nPassword:\n\nEmail: (this IS public) foo@bar.com\n\nLogged in as foo on http://localhost:4873/.\n\n$ npm publish --registry http://localhost:4873\n\nnpm notice\n\nnpm notice   lib-test-florian-rappl@1.0.0\n\nnpm notice === Tarball Contents ===\n\nnpm notice 1.5kB lib/index.js\n\nnpm notice 425B  src/index.js\n\nnpm notice 344B  package.json\n\nnpm notice === Tarball Details ===\n\nnpm notice name:          lib-test-florian-rappl\n\nnpm notice version:       1.0.0\n\nnpm notice package size:  1.1 kB\n\nnpm notice unpacked size: 2.3 kB\n\nnpm notice shasum:        2b5d224949f9112eeaee435a876a8ea15ed3e7cd\n\nnpm notice integrity:     sha512-cBq1czwmN4vep[...]/vXrORFGjRjnA==\n\nnpm notice total files:   3\n\nnpm notice\n\n+ lib-test-florian-rappl@1.0.0\n```", "```js\n{\n  // ... like beforehand\n  \"type\": \"module\",\n  \"main\": \"dist/index.js\",\n  \"exports\": {\n    \".\": {\n      \"browser\": {\n        \"require\": \"./lib/index.min.js\",\n        \"default\": \"./dist/index.min.js\"\n      },\n      \"default\": {\n        \"require\": \"./lib/index.js\",\n        \"default\": \"./dist/index.js\"\n      }\n    }\n  }\n}\n```", "```js\n$ esbuild src/*.js --platform=node --outdir=lib --format=cjs\n```", "```js\n$ esbuild src/*.js --platform=node --outdir=dist --format=esm --define:__dirname=\"'.'\"\n```", "```js\nimport { name, version } from '../package.json';\nexport function getLibName() {\n  return `${name}@${version}`;\n}\n```", "```js\n{\n  // ... like beforehand\n  \"scripts\": {\n    \"build-cjs-node\": \"esbuild src/*.js --platform=node\n      --outdir=lib --format=cjs\",\n    \"build-cjs-browser\": \"esbuild src/*.js --platform=node\n      --outdir=lib --bundle --format=cjs --minify --entry-\n      names=[name].min\",\n    \"build-cjs\": \"npm run build-cjs-node && npm run build-\n      cjs-browser\",\n    \"build-esm-node\": \"esbuild src/*.js --platform=node\n      --outdir=dist --format=esm\",\n    \"build-esm-browser\": \"esbuild src/*.js --platform=node\n      --outdir=dist --bundle --format=esm --minify --entry-\n      names=[name].min\",\n    \"build-esm\": \"npm run build-esm-node && npm run build-\n      esm-browser\",\n    \"build\": \"npm run build-cjs && npm run build-esm\"\n  }\n}\n```", "```js\n$ ./node_modules/.bin/jest --help\n```", "```js\n$ npx jest --help\n```", "```js\n{\n  \"name\": \"@foo/tool\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A simple tool greeting the user.\",\n  \"bin\": {\n    \"hello\": \"lib/hello.js\"\n  },\n  \"license\": \"MIT\"\n}\n```", "```js\n#!/usr/bin/env node\n// check that at least one argument has been provided\nif (process.argv.length < 3) {\n  console.log(\"No argument provided.\");\n  return process.exit(1);\n}\n// take the last argument\nconst name = process.argv.pop();\nconsole.log(`Hello ${name}!`);\n```", "```js\n$ node hello.js\n\nNo argument provided.\n\n$ node index.js foo\n\nHello foo!\n```", "```js\n$ npm publish --registry http://localhost:4873\n```", "```js\n$ npm install @foo/tool --registry http://localhost:4873\n\n$ npx hello bar\n\nHello bar!\n```"]