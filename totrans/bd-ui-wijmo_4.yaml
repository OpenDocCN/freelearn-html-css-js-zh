- en: Chapter 4. Working with Images
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 处理图片
- en: 'This chapter introduces the widgets for working with images: the **carousel**,
    **gallery**, and **lightbox**. The carousel is a simpler form of the gallery widget,
    without thumbnails by default. Both of them are used to display a list of images
    on the page. The carousel is intended to show multiple images at once. The lightbox
    works differently in that it shows a selected image in full size and opens in
    a dialog on top of the page contents.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了用于处理图片的小部件：**轮播**、**相册**和**灯箱**。轮播是相册组件的简化形式，默认情况下没有缩略图。它们都用于在页面上显示一系列图片。轮播旨在一次显示多张图片。灯箱的工作方式不同，它以全尺寸显示选定的图片，并在页面内容上方打开对话框。
- en: Using the carousel widget
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用轮播组件
- en: The carousel widget displays a list of images. The images by default are aligned
    horizontally with previous and next buttons to scroll through them. Captions can
    be displayed at the bottom of each of the images. In the sections that follow,
    I'll show you how to create, configure, and use the carousel widget.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 轮播组件显示一系列图片。默认情况下，图片水平排列，带有上一页和下一页按钮以滚动浏览。可以在每张图片的底部显示标题。在接下来的部分中，我将向您展示如何创建、配置和使用轮播组件。
- en: Creating the carousel widget
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建轮播组件
- en: 'To set up the carousel widget, the width and height of the container element
    needs to be the same as the image sizes. For instance, if your images are 300
    x 200, then the width and height needs to be set in the CSS as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置轮播组件，容器元素的宽度和高度需要与图片尺寸相同。例如，如果您的图片尺寸为300 x 200，那么在CSS中需要设置如下：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With these settings, one image is displayed at a time with next and previous
    buttons on the sides of the image, as shown in the following screenshot:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些设置，一次显示一张图片，图片两侧有上一页和下一页按钮，如下面的截图所示：
- en: '![Creating the carousel widget](img/6067OT_4_02.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![创建轮播组件](img/6067OT_4_02.jpg)'
- en: All of the images used in the example are the same size. This allows us to set
    the container dimensions without cropping or resizing the images.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 例子中使用的所有图片尺寸相同。这允许我们设置容器尺寸而无需裁剪或调整图片大小。
- en: Configuring the carousel widget
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置轮播组件
- en: 'The carousel widget supports a number of settings that let you control the
    features available in the user interface as well as its display. The most useful
    ones are shown as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 轮播组件支持许多设置，让您可以控制用户界面中可用的功能以及其显示。以下是最有用的设置：
- en: '| Setting | Description |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| Setting | 描述 |'
- en: '| --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `display` | This setting specifies the number of images shown |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `display` | 此设置指定显示的图片数量 |'
- en: '| `step` | This setting specifies the number of images scrolled by a transition
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `step` | 此设置指定过渡时滚动的图片数量 |'
- en: '| `orientation` | This setting specifies whether to scroll the images horizontally
    or vertically |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `orientation` | 此设置指定是否水平或垂直滚动图片 |'
- en: '| `showTimer` | This setting allows the images in carousel to be played with
    a timer displaying the progress and a play/pause button |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `showTimer` | 此设置允许轮播中的图片通过显示进度和播放/暂停按钮的计时器进行播放 |'
- en: '| `loop` | This setting allows cycling to continue through the images so that
    the last image returns to the first one |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `loop` | 此设置允许循环浏览图片，以便最后一张图片返回到第一张 |'
- en: 'The following diagram shows the different parts of the carousel widget:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示显示了轮播组件的不同部分：
- en: '![Configuring the carousel widget](img/6067OT_4_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![配置轮播组件](img/6067OT_4_01.jpg)'
- en: Using the display options to show multiple images
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用显示选项显示多张图片
- en: 'To show multiple images with the carousel widget, we increase the width of
    the `wijcarousel` element proportional to the number of images to show. Since
    each image is 300 pixels wide, to show two images at a time, we would set the
    display option to `2` and the width of the element to 600 pixels. As another example,
    to show three images at a time, we set the display options and CSS as shown in
    the code listing:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用轮播组件显示多张图片，我们需要将`wijcarousel`元素的宽度按显示图片的数量成比例增加。由于每张图片宽度为300像素，要一次显示两张图片，我们将显示选项设置为`2`并将元素宽度设置为600像素。作为另一个例子，要一次显示三张图片，我们设置显示选项和CSS，如下所示：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see in the following screenshot, setting the width to 900 pixels
    allows enough room for the next and previous buttons so that they do not overlap
    with the images.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下截图所示，将宽度设置为900像素为下一页和上一页按钮提供了足够的空间，这样它们就不会与图片重叠。
- en: '![Using the display options to show multiple images](img/6067OT_4_03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用显示选项显示多张图片](img/6067OT_4_03.jpg)'
- en: 'We also set the `step` property in the options to `2` so that hitting the next
    button slides the current images to the left so that two of them disappear. Wijmo
    plays a nice animation while sliding the third image into the position of the
    first image. To try out various animation and options, head to [http://wijmo.com/demo/explore/?widget=Carousel&sample=Animation](http://wijmo.com/demo/     explore/?widget=Carousel&sample=Animation).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '我们还在选项中设置了`step`属性为`2`，这样点击下一个按钮时，当前图片会向左滑动，使得其中两张图片消失。Wijmo在将第三张图片滑入第一张图片位置时，会播放一个不错的动画。要尝试各种动画和选项，请访问[http://wijmo.com/demo/explore/?widget=Carousel&sample=Animation](http://wijmo.com/demo/     explore/?widget=Carousel&sample=Animation)。'
- en: Specifying the navigation options
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定导航选项
- en: In addition to the next and previous buttons, a pager can be added to navigate
    to a specific image. The pager comes in many forms, specified by the `pagerType`
    option. The available options are numbers, dots, thumbnails, and a slider. If
    you want to use thumbnails, I recommend switching to the gallery widget as it
    comes with thumbnails by default. The gallery widget is covered in the next section.
    The position settings for a pager, as well as other elements, have fields that
    position elements relative to each other.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 除了下一个和上一个按钮外，还可以添加一个分页器来导航到特定的图片。分页器有多种形式，由`pagerType`选项指定。可用选项有数字、点、缩略图和滑块。如果您想使用缩略图，我建议切换到画廊小部件，因为它默认包含缩略图。画廊小部件将在下一节中介绍。分页器以及其他元素的位置设置字段，用于确定元素之间的相对位置。
- en: 'For a visual display of the position options, refer to the section *Positioning
    the Tooltip* in the next chapter. In this example, we place the pager''s center
    top at the bottom of the carousel with the `my` option and move it left by 10
    pixels with the offset:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于位置选项的视觉展示，请参考下一章中的*定位工具提示*部分。在这个例子中，我们使用`my`选项将分页器的中心顶部放置在轮播图的底部，并通过偏移量向左移动10像素：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Another handy option to make the carousel look cleaner is to display buttons
    on the outside instead of overlapping them with the image.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个使轮播图看起来更整洁的实用选项是将按钮显示在外部，而不是与图片重叠。
- en: 'Putting it all together, we initialize the carousel widget with the pager as
    follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些放在一起，我们初始化轮播图小部件并添加分页器如下：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To center align the carousel, a common pattern is to set the width and let
    the margins be automatically adjusted:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使轮播图居中对齐，一个常见的模式是设置宽度并让边距自动调整：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The end result is a user friendly, clean interface as shown in the following
    screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果是用户友好的、干净的界面，如下面的截图所示：
- en: '![Specifying the navigation options](img/6067OT_4_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![指定导航选项](img/6067OT_4_04.jpg)'
- en: Adding the timer and autoplay
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加计时器和自动播放
- en: 'To let the images play like a slideshow, we only need to set the `auto` option
    to `true`. Along with the `loop` option, the images can play continuously. If
    you have many images to show, you will want to reduce the interval or duration
    when each is shown. Furthermore, the `timer` option allows the user to pause the
    slideshow. The timer in progress looks like the one shown in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要让图片像幻灯片一样播放，我们只需将`auto`选项设置为`true`。结合`loop`选项，图片可以连续播放。如果您有很多图片要展示，您可能需要减少每张图片显示的间隔或持续时间。此外，`timer`选项允许用户暂停幻灯片。进行中的计时器看起来如下面的截图所示：
- en: '![Adding the timer and autoplay](img/6067OT_4_05.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![添加计时器和自动播放](img/6067OT_4_05.jpg)'
- en: 'An example setting to play each image for three seconds before moving onto
    the next one is listed as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例设置，在移动到下一张图片之前，每张图片播放三秒钟：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using the gallery widget
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用画廊小部件
- en: As mentioned in the section on the carousel widget, the gallery widget displays
    navigable thumbnails by default. Selecting a thumbnail shows a larger version
    of the image above it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如同在轮播图小部件部分提到的，画廊小部件默认显示可导航的缩略图。选择一个缩略图将显示其上方的图像的大版本。
- en: Creating the gallery widget
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建画廊小部件
- en: 'As you might expect by now, the Wijmo gallery widget is created with the `wijgallery`
    method:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如您现在可能预料到的，Wijmo画廊小部件是通过`wijgallery`方法创建的：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This gallery is created with as much reuse of the carousel example as possible.
    For the gallery, we only limit the width on the container as it needs space to
    display the thumbnails:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这个画廊尽可能地重用了轮播图示例。对于画廊，我们只限制了容器宽度，因为它需要空间来显示缩略图：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We set the number of thumbnails to 3 due to the horizontal area below our images.
    Wijmo automatically crops the images for the thumbnails. Our gallery widget now
    looks like the one shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们图像下方的水平区域，我们设置了缩略图的数量为3。Wijmo会自动裁剪图像以适应缩略图。我们的图库小部件现在看起来如下截图所示：
- en: '![Creating the gallery widget](img/6067OT_4_06.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![创建图库小部件](img/6067OT_4_06.jpg)'
- en: 'In the example, we used the same HTML list format as for the carousel. Nevertheless,
    the Wijmo documentation recommends another format:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，我们使用了与轮播图相同的HTML列表格式。尽管如此，Wijmo文档建议使用另一种格式：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Although more verbose, this format allows us to specify the thumbnail images.
    Now each 300 x 200 image is accompanied by a 100 x 100 thumbnail. The gallery
    widget automatically resizes images to fit the display area. If you want to resize
    the images in your gallery widget without changing the aspect ratio, refer to
    a blog post by one of the developers at [http://wijmo.com/maintaining-aspect-ratio-in-wijgallery/](http://wijmo.com/maintaining-aspect-ratio-in-wijgallery/).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然更冗长，但这种格式允许我们指定缩略图图像。现在每个300 x 200像素的图像都附有一个100 x 100像素的缩略图。图库小部件会自动调整图像大小以适应显示区域。如果您想在图库小部件中调整图像大小而不改变宽高比，请参考一位开发者在[http://wijmo.com/maintaining-aspect-ratio-in-wijgallery/](http://wijmo.com/maintaining-aspect-ratio-in-wijgallery/)上发表的博客文章。
- en: Playing videos in the gallery widget
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图库小部件中的视频播放
- en: 'To play videos within the gallery widget, you just need to specify a thumbnail
    of the video and a link to it. An example markup with three videos is:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要在图库小部件中播放视频，您只需指定视频的缩略图和链接。以下是一个包含三个视频的示例标记：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The thumbnails will display at the bottom of the gallery. To prevent Wijmo
    from cropping the thumbnails, we can set the `thumbsLength` option to the width
    of the image. Moreover, the `thumbsDisplay` option, which determines the number
    of thumbnails shown, needs to be adjusted. The mode can be set to `swf` for flash
    or `iframe` for other video types. Since we did not specify a caption for the
    video, we set the `showCaption` option to `false`:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 缩略图将在图库的底部显示。为了防止Wijmo裁剪缩略图，我们可以将`thumbsLength`选项设置为图像的宽度。此外，`thumbsDisplay`选项，它决定了显示的缩略图数量，需要调整。模式可以设置为`swf`用于Flash或其他视频类型。由于我们没有为视频指定标题，我们将`showCaption`选项设置为`false`：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In this example, the thumbnails are assumed to be 100 pixels wide. An additional
    library is required to play flash videos. The `swfobject.js` library must be loaded
    before the `wijgallery` method is called. A Wijmo gallery configured to play YouTube
    videos is shown as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，假设缩略图的宽度为100像素。播放Flash视频需要额外的库。必须在调用`wijgallery`方法之前加载`swfobject.js`库。以下是一个配置为播放YouTube视频的Wijmo图库示例：
- en: '![Playing videos in the gallery widget](img/6067OT_4_10.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图库小部件中的视频播放](img/6067OT_4_10.jpg)'
- en: Using the lightbox widget
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用轻量级对话框小部件
- en: The lightbox widget is a tool to give focus to images. It displays the current
    image on top of other page contents in a modal dialog. The Wijmo lightbox widget
    shares many common features with the carousel and gallery widgets, including the
    navigation buttons, timer, and caption area. The lightbox comes with default settings
    that show the control buttons on hover along with an image count. In addition,
    it also adds a close button to the top right corner.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 轻量级对话框小部件是一个用于聚焦图像的工具。它在一个模态对话框中显示在页面其他内容之上的当前图像。Wijmo轻量级对话框小部件与轮播图和图库小部件共享许多共同功能，包括导航按钮、计时器和标题区域。轻量级对话框带有默认设置，当鼠标悬停时显示控制按钮以及图像计数。此外，它还在右上角添加了一个关闭按钮。
- en: Creating the lightbox widget
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建轻量级对话框小部件
- en: 'Unlike the gallery and carousel widgets, the lightbox requires options to be
    specified in the `rel` attribute of the `anchor` element. The following example
    shows the required elements and a script that creates the lightbox:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 与图库和轮播图小部件不同，轻量级对话框需要指定`anchor`元素的`rel`属性中的选项。以下示例显示了所需的元素和创建轻量级对话框的脚本：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The lightbox widget requires an `img` element inside an anchor element. Also,
    the `img` element needs to have a title, which is displayed as a caption. As you''re
    familiar now, we set the `width` attribute of the lightbox to be the width of
    the image. When you call the `wijlightbox` method with no settings and click on
    one of the images, you get an image frame on top of the page contents as shown
    in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 灯箱组件需要在锚点元素内部包含一个`img`元素。此外，`img`元素需要有一个标题，该标题将作为标题显示。如您现在所熟悉的那样，我们将灯箱的`width`属性设置为图像的宽度。当您不带设置调用`wijlightbox`方法并点击其中一张图片时，您会在页面内容上方看到一个图像框架，如下面的截图所示：
- en: '![Creating the lightbox widget](img/6067OT_4_08.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![创建灯箱组件](img/6067OT_4_08.jpg)'
- en: Changing the lightbox widget's appearance
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改灯箱组件的外观
- en: 'The lightbox by default shows navigation and close buttons when hovering over
    it; and play/pause buttons for slideshows are also available. To show these buttons,
    use the `ctrlButtons` option. You may also want to display the lightbox with a
    `modal` view by setting the `modal` option to `true`. To avoid having the navigation
    controls overlap with the images, set the `controlsPosition` property to `outside`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，灯箱在悬停时会显示导航和关闭按钮；同时，幻灯片播放的播放/暂停按钮也可用。要显示这些按钮，请使用`ctrlButtons`选项。您可能还希望通过将`modal`选项设置为`true`来以`modal`视图显示灯箱。为了避免导航控件与图像重叠，请将`controlsPosition`属性设置为`outside`：
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The result is shown as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '![Changing the lightbox widget''s appearance](img/6067OT_4_09.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![更改灯箱组件的外观](img/6067OT_4_09.jpg)'
- en: Summary
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the carousel widget, which is used for displaying
    multiple images, and how to configure it with display and navigation options.
    This chapter also introduced the animation and timer options available for the
    carousel. Next, we learned about the gallery widget and using it to play videos.
    Finally, this chapter concluded with a section on the lightbox widget.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了轮播组件，它用于显示多个图像，以及如何使用显示和导航选项来配置它。本章还介绍了轮播组件可用的动画和计时器选项。接下来，我们学习了画廊组件及其用于播放视频的使用方法。最后，本章以灯箱组件的章节结束。
