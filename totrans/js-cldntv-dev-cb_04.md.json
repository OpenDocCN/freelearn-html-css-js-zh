["```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-spa --path cncb-cdn-spa\n```", "```js\nservice: cncb-cdn-spa\n\nprovider:\n  name: aws\n\nplugins:\n  - serverless-spa-deploy\n  - serverless-spa-config\n\ncustom:\n  spa:\n    files:\n      - source: ./build\n        globs: '**/*'\n        headers:\n          CacheControl: max-age=31536000 # 1 year\n      - source: ./build\n        globs: 'index.html'\n        headers:\n          CacheControl: max-age=300 # 5 minutes\n```", "```js\n{\n \"Resources\": {\n    ...\n    \"WebsiteBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"AccessControl\": \"PublicRead\",\n        \"WebsiteConfiguration\": {\n          \"IndexDocument\": \"index.html\",\n          \"ErrorDocument\": \"index.html\"\n        }\n      }\n    },\n    \"WebsiteDistribution\": {\n      \"Type\": \"AWS::CloudFront::Distribution\",\n      \"Properties\": {\n        \"DistributionConfig\": {\n          \"Comment\": \"Website: test-cncb-cdn-spa (us-east-1)\",\n          \"Origins\": [\n            {\n              \"Id\": \"S3Origin\",\n              \"DomainName\": {\n                \"Fn::Select\": [\n                  1,\n                  {\n                    \"Fn::Split\": [\n                      \"//\",\n                      {\n                        \"Fn::GetAtt\": [\n                          \"WebsiteBucket\",\n                          \"WebsiteURL\"\n                        ]\n                      }\n                    ]\n                  }\n                ]\n              },\n              \"CustomOriginConfig\": {\n                \"OriginProtocolPolicy\": \"http-only\"\n              }\n            }\n          ],\n          \"Enabled\": true,\n          \"PriceClass\": \"PriceClass_100\",\n          \"DefaultRootObject\": \"index.html\",\n          \"CustomErrorResponses\": [\n            {\n              \"ErrorCachingMinTTL\": 0,\n              \"ErrorCode\": 404,\n              \"ResponseCode\": 200,\n              \"ResponsePagePath\": \"/index.html\"\n            }\n          ],\n          \"DefaultCacheBehavior\": {\n            \"TargetOriginId\": \"S3Origin\",\n            \"AllowedMethods\": [\n              \"GET\",\n              \"HEAD\"\n            ],\n            \"CachedMethods\": [\n              \"HEAD\",\n              \"GET\"\n            ],\n            \"Compress\": true,\n            \"ForwardedValues\": {\n              \"QueryString\": false,\n              \"Cookies\": {\n                \"Forward\": \"none\"\n              }\n            },\n            \"MinTTL\": 0,\n            \"DefaultTTL\": 0,\n            \"ViewerProtocolPolicy\": \"allow-all\"\n          }\n        }\n      }\n    }\n  },\n  ...\n}\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-spa@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-spa\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nStack Outputs\nWebsiteDistributionURL: https://dqvo8ga8z7ao3.cloudfront.net\nWebsiteS3URL: http://cncb-cdn-spa-john-websitebucket-1huxcgjseaili.s3-website-us-east-1.amazonaws.com\nWebsiteBucketName: cncb-cdn-spa-john-websitebucket-1huxcgjseaili\nWebsiteDistributionId: E3JF634XQF4PE9\n...\nServerless: Path: ./build\nServerless: File: asset-manifest.json (application/json)\n...\n```", "```js\nhttp://<see WebsiteS3URL output>.s3-website-us-east-1.amazonaws.com\nhttp://<see WebsiteDistributionURL output>.cloudfront.net\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-dns --path cncb-cdn-dns\n```", "```js\nservice: cncb-cdn-dns\n\nprovider:\n  name: aws\n\nplugins:\n  - serverless-spa-deploy\n  - serverless-spa-config\n\ncustom:\n  spa:\n    files:\n      ...   \n  dns:\n    hostedZoneId:  Z1234567890123\n    domainName: example.com\n    endpoint: app.${self:custom.dns.domainName}\n```", "```js\n{\n  \"Resources\": {\n    ...\n    \"WebsiteDistribution\": {\n      \"Type\": \"AWS::CloudFront::Distribution\",\n      \"Properties\": {\n        \"DistributionConfig\": {\n          ...\n          \"Aliases\": [\n            \"app.example.com\"\n          ],\n          ...\n          }\n        }\n      }\n    },\n    \"WebsiteEndpointRecord\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"Properties\": {\n        \"HostedZoneId\": \"Z1234567890123\",\n        \"Name\": \"app.example.com.\",\n        \"Type\": \"A\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"Z2FDTNDATAQYW2\",\n          \"DNSName\": {\n            \"Fn::GetAtt\": [\n              \"WebsiteDistribution\",\n              \"DomainName\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  ...\n}\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-dns@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-dns\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nStack Outputs\nWebsiteDistributionURL: https://dwrdvnqsnetay.cloudfront.net\nWebsiteS3URL: http://cncb-cdn-dns-john-websitebucket-1dwzb5bfkv34s.s3-website-us-east-1.amazonaws.com\nWebsiteBucketName: cncb-cdn-dns-john-websitebucket-1dwzb5bfkv34s\nWebsiteURL: http://app.example.com\nWebsiteDistributionId: ED6YKAFJDF2ND\n...\n```", "```js\nhttp://app.example.com <see WebsiteURL output>\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-site --path cncb-cdn-site\n```", "```js\nservice: cncb-cdn-site\n\nprovider:\n  name: aws\n\nplugins:\n  - serverless-spa-deploy\n  - serverless-spa-config\n\ncustom:\n  spa:\n    files:\n      - source: ./dist\n        globs: '**/*'\n        headers:\n          CacheControl: max-age=31536000 # 1 year\n    redirect: true\n  dns:\n    hostedZoneId:  Z1234567890123\n    domainName: example.com\n    endpoint: www.${self:custom.dns.domainName}\n```", "```js\n{\n  \"Resources\": {\n    ...\n    \"RedirectBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"BucketName\": \"example.com\",\n        \"WebsiteConfiguration\": {\n          \"RedirectAllRequestsTo\": {\n            \"HostName\": \"www.example.com\"\n          }\n        }\n      }\n    },\n    \"WebsiteDistribution\": {\n      \"Type\": \"AWS::CloudFront::Distribution\",\n      \"Properties\": {\n        \"DistributionConfig\": {\n \"Comment\": \"Website: test-cncb-cdn-site (us-east-1)\",\n        ...\n          \"Aliases\": [\n            \"www.example.com\"\n          ],\n        ...\n        }\n      }\n    },\n    \"RedirectDistribution\": {\n      \"Type\": \"AWS::CloudFront::Distribution\",\n      \"Properties\": {\n        \"DistributionConfig\": {\n          \"Comment\": \"Redirect: test-cncb-cdn-site (us-east-1)\",\n        ...\n          \"Aliases\": [\n            \"example.com\"\n          ],\n        ...\n        }\n      }\n    },\n    \"WebsiteEndpointRecord\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"Properties\": {\n        \"HostedZoneId\": \"Z1234567890123\",\n        \"Name\": \"www.example.com.\",\n        \"Type\": \"A\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"Z2FDTNDATAQYW2\",\n          \"DNSName\": {\n            \"Fn::GetAtt\": [\n              \"WebsiteDistribution\",\n              \"DomainName\"\n            ]\n          }\n        }\n      }\n    },\n    \"RedirectEndpointRecord\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"Properties\": {\n        \"HostedZoneId\": \"Z1234567890123\",\n        \"Name\": \"example.com.\",\n        \"Type\": \"A\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"Z2FDTNDATAQYW2\",\n          \"DNSName\": {\n            \"Fn::GetAtt\": [\n              \"RedirectDistribution\",\n              \"DomainName\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  ...\n}\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-site@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-site\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nStack Outputs\nWebsiteDistributionURL: https://d2ooxtd49ayyfd.cloudfront.net\nWebsiteS3URL: http://cncb-cdn-site-john-websitebucket-mrn9ntyltxim.s3-website-us-east-1.amazonaws.com\nWebsiteBucketName: cncb-cdn-site-john-websitebucket-mrn9ntyltxim\nWebsiteURL: http://www.example.com\nWebsiteDistributionId: E10ZLN9USZTDSO\n...\nServerless: Path: ./dist\nServerless: File: after/c2Vjb25kLXBvc3Q=/index.html (text/html)\nServerless: File: after/dGhpcmQtcG9zdA==/index.html (text/html)\nServerless: File: after/Zm91cnRoLXBvc3Q=/index.html (text/html)\nServerless: File: after/ZmlmdGgtcG9zdA==/index.html (text/html)\nServerless: File: after/Zmlyc3QtcG9zdA==/index.html (text/html)\nServerless: File: blog/fifth-post/index.html (text/html)\nServerless: File: blog/first-post/index.html (text/html)\nServerless: File: blog/fourth-post/index.html (text/html)\nServerless: File: blog/second-post/index.html (text/html)\nServerless: File: blog/third-post/index.html (text/html)\nServerless: File: favicon.ico (image/x-icon)\nServerless: File: index.html (text/html)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2.json (application/json)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2/after-c2Vjb25kLXBvc3Q=.json (application/json)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2/after-dGhpcmQtcG9zdA==.json (application/json)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2/after-Zm91cnRoLXBvc3Q=.json (application/json)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2/after-ZmlmdGgtcG9zdA==.json (application/json)\nServerless: File: phenomic/content/posts/by-default/1/desc/date/limit-2/after-Zmlyc3QtcG9zdA==.json (application/json)\nServerless: File: phenomic/content/posts/item/fifth-post.json (application/json)\nServerless: File: phenomic/content/posts/item/first-post.json (application/json)\nServerless: File: phenomic/content/posts/item/fourth-post.json (application/json)\nServerless: File: phenomic/content/posts/item/second-post.json (application/json)\nServerless: File: phenomic/content/posts/item/third-post.json (application/json)\nServerless: File: phenomic/phenomic.main.9a7f8f5f.js (application/javascript)\nServerless: File: robots.txt (text/plain)\n```", "```js\nhttp://www.example.com <see WebsiteURL output>\nhttp://example.com <see WebsiteURL output>  \n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-service --path cncb-cdn-service\n```", "```js\nservice: cncb-cdn-service\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  endpointType: REGIONAL\n\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hello\n          method: get\n          cors: true\n\nresources:\n  Resources:\n    ApiDistribution:\n      Type: AWS::CloudFront::Distribution\n      Properties:\n        DistributionConfig:\n          ...\n          Origins:\n            - Id: ApiGateway\n              DomainName:\n                Fn::Join:\n                  - \".\"\n                  - - Ref: ApiGatewayRestApi\n                    - execute-api.${opt:region}.amazonaws.com\n              OriginPath: /${opt:stage}\n              CustomOriginConfig:\n                OriginProtocolPolicy: https-only\n                OriginSSLProtocols: [ TLSv1.2 ]\n          ...\n          DefaultCacheBehavior:\n            TargetOriginId: ApiGateway\n            AllowedMethods: [ DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT ]\n            CachedMethods: [ GET, HEAD, OPTIONS ]\n            Compress: true\n            ForwardedValues:\n              QueryString: true\n              Headers: [ Accept, Authorization ]\n              Cookies:\n                Forward: all\n            MinTTL: 0\n            DefaultTTL: 0\n            ViewerProtocolPolicy: https-only\n\n  Outputs:\n    ApiDistributionId:\n      Value:\n        Ref: ApiDistribution  \n    ApiDistributionEndpoint:\n      Value:\n        Fn::Join:\n          - ''\n          - - https://\n            - Fn::GetAtt: [ ApiDistribution, DomainName ]\n```", "```js\nmodule.exports.hello = (request, context, callback) => {\n  const response = {\n    statusCode: 200,\n    headers: {\n      'Cache-Control': 'max-age=5',\n    },\n    body: ...,\n  };\n\n  callback(null, response);\n};\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-service@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-service\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nendpoints:\n  GET - https://5clnzj3knc.execute-api.us-east-1.amazonaws.com/john/hello\nfunctions:\n  hello: cncb-cdn-service-john-hello\n\nStack Outputs\nApiDistributionEndpoint: https://d1vrpoljefctug.cloudfront.net\nServiceEndpoint: https://5clnzj3knc.execute-api.us-east-1.amazonaws.com/john\n...\nApiDistributionId: E2X1H9ZQ1B9U0R\n```", "```js\n$ curl -s -D - -w \"Time: %{time_total}\" -o /dev/null  https://<see stack output>.cloudfront.net/hello | egrep -i 'X-Cache|Time' \nX-Cache: Miss from cloudfront\nTime: 0.324\n$ curl ...\nX-Cache: Hit from cloudfront\nTime: 0.168\n$ curl ...\nX-Cache: Hit from cloudfront\nTime: 0.170\n$ curl ...\nX-Cache: Miss from cloudfront\nTime: 0.319\n$ curl ...\nX-Cache: Hit from cloudfront\nTime: 0.167\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-json --path cncb-cdn-json\n```", "```js\nservice: cncb-cdn-json\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  endpointType: REGIONAL\n  ...\n\nfunctions:\n  search:\n    handler: handler.search\n    ...\n\nresources:\n  Resources:\n    ApiDistribution:\n      Type: AWS::CloudFront::Distribution\n      Properties:\n        DistributionConfig:\n          ...\n          Origins:\n            - Id: S3Origin\n              DomainName:\n                Fn::Join:\n                  - \".\"\n                  - - Ref: Bucket\n                    - s3.amazonaws.com\n              ...\n            - Id: ApiGateway\n              DomainName:\n                Fn::Join:\n                  - \".\"\n                  - - Ref: ApiGatewayRestApi\n                    - execute-api.${opt:region}.amazonaws.com\n              OriginPath: /${opt:stage}\n              ...\n          ...\n          DefaultCacheBehavior:\n            TargetOriginId: S3Origin\n            AllowedMethods:\n              - GET\n              - HEAD\n            CachedMethods:\n              - HEAD\n              - GET\n            ...\n            MinTTL: 0\n            DefaultTTL: 0\n            ...\n          CacheBehaviors:\n            - TargetOriginId: ApiGateway\n              PathPattern: /search\n              AllowedMethods: [ GET, HEAD, OPTIONS ]\n              CachedMethods: [ GET, HEAD, OPTIONS ]\n              ...\n              MinTTL: 0\n              DefaultTTL: 0\n              ...\n\n    Bucket:\n      Type: AWS::S3::Bucket\n...\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-json@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-json\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nendpoints:\n  GET - https://hvk3o94wij.execute-api.us-east-1.amazonaws.com/john/search\nfunctions:\n  search: cncb-cdn-json-john-search\n  load: cncb-cdn-json-john-load\n\nStack Outputs\n...\nApiDistributionEndpoint: https://dfktdq2w7ht2p.cloudfront.net\nBucketName: cncb-cdn-json-john-bucket-ls21fzjp2qs2\nServiceEndpoint: https://hvk3o94wij.execute-api.us-east-1.amazonaws.com/john\nApiDistributionId: E3JJREB1B4TIGL\n```", "```js\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-5555-1111-1111-000000000000\",\"name\":\"thing one\"}'\n\n{\n    \"ETag\": \"\\\"3f4ca01316d6f88052a940ab198b2dc7\\\"\"\n}\n\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-5555-1111-2222-000000000000\",\"name\":\"thing two\"}'\n\n{\n    \"ETag\": \"\\\"926f41091e2f47208f90f9b9848dffd0\\\"\"\n}\n\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-5555-1111-3333-000000000000\",\"name\":\"thing three\"}'\n\n{\n    \"ETag\": \"\\\"2763ac570ff0969bd42182506ba24dfa\\\"\"\n}\n```", "```js\n$ curl https://<see stack output>.cloudfront.net/search | json_pp \n[\n   \"https://dfktdq2w7ht2p.cloudfront.net/things/44444444-5555-1111-1111-000000000000\",\n   \"https://dfktdq2w7ht2p.cloudfront.net/things/44444444-5555-1111-2222-000000000000\",\n   \"https://dfktdq2w7ht2p.cloudfront.net/things/44444444-5555-1111-3333-000000000000\"\n] $ curl -s -D - -w \"Time: %{time_total}\" -o /dev/null https://<see stack output>.cloudfront.net/things/44444444-5555-1111-1111-000000000000 | egrep -i 'X-Cache|Time' \nX-Cache: Miss from cloudfront\nTime: 0.576\n$ curl ...\nX-Cache: Hit from cloudfront\nTime: 0.248\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-invalidate --path cncb-cdn-invalidate\n```", "```js\nservice: cncb-cdn-invalidate\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  ...\n\nfunctions:\n  load:\n    ...\n  trigger:\n    handler: handler.trigger\n    events:\n      - sns:\n          arn: \n            Ref: BucketTopic\n          topicName: ${self:service}-${opt:stage}-trigger\n    environment:\n      DISABLED: false\n      DISTRIBUTION_ID:\n        Ref: ApiDistribution\n\nresources:\n  Resources:\n    Bucket:\n      Type: AWS::S3::Bucket\n      DependsOn: [ BucketTopic, BucketTopicPolicy ]\n      Properties:\n        NotificationConfiguration:\n          TopicConfigurations:\n            - Event: s3:ObjectCreated:Put\n              Topic:\n                Ref: BucketTopic\n    BucketTopic: \n      Type: AWS::SNS::Topic\n      Properties: \n        TopicName: ${self:service}-${opt:stage}-trigger\n    BucketTopicPolicy: ${file(includes.yml):BucketTopicPolicy}\n\n    ApiDistribution:\n      Type: AWS::CloudFront::Distribution\n      Properties:\n        DistributionConfig:\n          ...\n```", "```js\nmodule.exports.trigger = (event, context, cb) => {\n  _(process.env.DISABLED === 'true' ? [] : event.Records)\n    .flatMap(messagesToTriggers)\n    .flatMap(invalidate)\n    .collect()\n    .toCallback(cb);\n};\n\nconst messagesToTriggers = r => _(JSON.parse(r.Sns.Message).Records);\n\nconst invalidate = (trigger) => {\n  const params = {\n    DistributionId: process.env.DISTRIBUTION_ID,\n    InvalidationBatch: {\n      CallerReference: uuid.v1(),\n      Paths: {\n        Quantity: 1,\n        Items: [`/${trigger.s3.object.key}`]\n      }\n    }\n  };\n\n  const cf = new aws.CloudFront();\n  return _(cf.createInvalidation(params).promise());\n};\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-invalidate@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-invalidate\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nfunctions:\n  load: cncb-cdn-invalidate-john-load\n  trigger: cncb-cdn-invalidate-john-trigger\n\nStack Outputs\nBucketArn: arn:aws:s3:::cncb-cdn-invalidate-john-bucket-z3u7jc60piub\nBucketName: cncb-cdn-invalidate-john-bucket-z3u7jc60piub\nApiDistributionEndpoint: https://dgmob5bgqpnpi.cloudfront.net\nTopicArn: arn:aws:sns:us-east-1:123456789012:cncb-cdn-invalidate-john-trigger\n...\nApiDistributionId: EV1QUKWEQV6XN\n```", "```js\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-6666-1111-1111-000000000000\",\"name\":\"thing one\"}'\n\n{\n    \"ETag\": \"\\\"3f4ca01316d6f88052a940ab198b2dc7\\\"\"\n}\n```", "```js\n$ curl https://<see stack output>.cloudfront.net/things/44444444-6666-1111-1111-000000000000 | json_pp \n{\n   \"name\" : \"thing one\",\n   \"id\" : \"44444444-6666-1111-1111-000000000000\"\n}\n```", "```js\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-6666-1111-1111-000000000000\",\"name\":\"thing one again\"}'\n\n{\n    \"ETag\": \"\\\"edf9676ddcc150f722f0f74b7a41bd7f\\\"\"\n}\n```", "```js\n$ sls logs -f trigger -r us-east-1 -s $MY_STAGE\n\n2018-05-20 02:43:16 ... params: {\"DistributionId\":\"EV1QUKWEQV6XN\",\"InvalidationBatch\":{\"CallerReference\":\"13a8e420-5bf9-11e8-818d-9de0acd70c96\",\"Paths\":{\"Quantity\":1,\"Items\":[\"/things/44444444-6666-1111-1111-000000000000\"]}}}\n2018-05-20 02:43:17 ... {\"Location\":\"https://cloudfront.amazonaws.com/2017-10-30/distribution/EV1QUKWEQV6XN/invalidation/I33URVVAO02X7I\",\"Invalidation\":{\"Id\":\"I33URVVAO02X7I\",\"Status\":\"InProgress\",\"CreateTime\":\"2018-05-20T06:43:17.102Z\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":1,\"Items\":[\"/things/44444444-6666-1111-1111-000000000000\"]},\"CallerReference\":\"13a8e420-5bf9-11e8-818d-9de0acd70c96\"}}}\n```", "```js\n$ curl https://<see stack output>.cloudfront.net/things/44444444-6666-1111-1111-000000000000 | json_pp \n{\n   \"name\" : \"thing one again\",\n   \"id\" : \"44444444-6666-1111-1111-000000000000\"\n}\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch4/cdn-lambda --path cncb-cdn-lambda\n```", "```js\nservice: cncb-cdn-lambda\n\nplugins:\n  - serverless-plugin-cloudfront-lambda-edge\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  ...\n\nfunctions:\n  authorize:\n    handler: handler.authorize\n    memorySize: 128\n timeout: 1\n lambdaAtEdge:\n distribution: 'ApiDistribution'\n eventType: 'viewer-request'\n  ...\n\nresources:\n  Resources:\n    Bucket:\n      Type: AWS::S3::Bucket\n\n    ApiDistribution:\n      Type: AWS::CloudFront::Distribution\n      Properties:\n        DistributionConfig:\n          ...\n```", "```js\n...\n\"LambdaFunctionAssociations\": [\n  {\n    \"EventType\": \"viewer-request\",\n    \"LambdaFunctionARN\": {\n      \"Ref\": \"AuthorizeLambdaVersionSticfT7s2DCStJsDgzhTCrXZB1CjlEXXc3bR4YS1owM\"\n    }\n  }\n]\n...\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-cdn-lambda@1.0.0 dp:lcl <path-to-your-workspace>/cncb-cdn-lambda\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nfunctions:\n  authorize: cncb-cdn-lambda-john-authorize\n  load: cncb-cdn-lambda-john-load\n\nStack Outputs\nApiDistributionEndpoint: https://d1kktmeew2xtn2.cloudfront.net\nBucketName: cncb-cdn-lambda-john-bucket-olzhip1qvzqi\n...\nApiDistributionId: E2VL0VWTW5IXUA\n\n```", "```js\n$ sls invoke -f load -r us-east-1 -s $MY_STAGE -d '{\"id\":\"44444444-7777-1111-1111-000000000000\",\"name\":\"thing one\"}'\n\n{\n    \"ETag\": \"\\\"3f4ca01316d6f88052a940ab198b2dc7\\\"\"\n}\n```", "```js\n$ curl -v -H \"Authorization: Bearer 1234567890\" https://<see stack output>.cloudfront.net/things/44444444-7777-1111-1111-000000000000 | json_pp \n...\n> Authorization: Bearer 1234567890\n>\n< HTTP/1.1 200 OK\n...\n{\n   \"name\" : \"thing one\",\n   \"id\" : \"44444444-7777-1111-1111-000000000000\"\n}$ curl -v https://<see stack output>.cloudfront.net/things/44444444-7777-1111-1111-000000000000 | json_pp\n...\n< HTTP/1.1 401 Unauthorized\n...\n[\n   {\n      \"Records\" : [\n         {\n            \"cf\" : {\n               \"config\" : {\n                  \"eventType\" : \"viewer-request\",\n                  \"requestId\" : \"zDpj1UckJLTIln8dwak2ZL1SX0LtWfGPhg3mC1EGIgfRd6gzJFVeqg==\",\n                  \"distributionId\" : \"E2VL0VWTW5IXUA\",\n                  \"distributionDomainName\" : \"d1kktmeew2xtn2.cloudfront.net\"\n               },\n           ...\n            }\n         }\n      ]\n   },\n   {\n    ...\n      \"logGroupName\" : \"/aws/lambda/us-east-1.cncb-cdn-lambda-john-authorize\",\n    ...\n   },\n   {\n      \"AWS_REGION\" : \"us-east-1\",\n    ...\n   }\n]\n```"]