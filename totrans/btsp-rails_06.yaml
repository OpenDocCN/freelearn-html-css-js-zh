- en: Chapter 6. Creating Navigation Bars
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 创建导航栏
- en: Creating a navigation bar has been one of the most difficult tasks for a novice
    web designer or a web developer, with no experience in web designing. One has
    to take care of properly aligning links, overflows, styling links, making the
    whole bar responsive, and so on.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初学者网页设计师或没有网页设计经验的网页开发者来说，创建导航栏一直是其中最困难的任务之一。必须注意正确对齐链接、处理溢出、设置链接样式、使整个栏响应式等。
- en: Bootstrap gives you plenty of choice to create and design a navigation bar without
    diving deep into its CSS. Just like creating any other components in Bootstrap,
    creating a navigation bar also requires us to follow a proper markup structure.
    In this article, we will learn how to create a Bootstrap navigation bar, and how
    we can modify it to fit our needs. We will also check out various other ways of
    representing a navigation bar in a website. We will also integrate a fixed navigation
    bar in our current application, `OnlinePacktShopping`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap为你提供了丰富的选择来创建和设计导航栏，而不必深入研究其CSS。就像在Bootstrap中创建任何其他组件一样，创建导航栏也需要我们遵循适当的标记结构。在本篇文章中，我们将学习如何创建Bootstrap导航栏，以及如何修改它以满足我们的需求。我们还将查看在网站中表示导航栏的多种其他方式。我们还将把固定导航栏集成到我们当前的应用程序`OnlinePacktShopping`中。
- en: Getting started with a navigation bar
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用导航栏入门
- en: 'As always, we will start by creating a dummy project to learn and create a
    static navigation bar. Create a folder called `BootstrapNavigation` and create
    an `index.html` file in it. We will use the same Bootstrap recommended HTML markup
    for the navigation bar, the code is as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们将首先创建一个虚拟项目来学习和创建一个静态导航栏。创建一个名为`BootstrapNavigation`的文件夹，并在其中创建一个`index.html`文件。我们将使用Bootstrap推荐的HTML标记来创建导航栏，代码如下：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As per the preceding code, a some point, you should have a **Hello World**
    message on your browser window. Let''s proceed and remove this message. To create
    a navigation bar, we need to create a `div` class with the `navbar` attribute:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的代码，在某个时候，你应该在你的浏览器窗口中看到一个**Hello World**消息。让我们继续并移除这个消息。要创建导航栏，我们需要创建一个带有`navbar`属性的`div`类：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, we need to select a color for the navigation bar we want to use. Bootstrap
    gives you two different color variants: default gray and inverted black. They
    can be applied by using the `.navbar-default` and `.navbar-inverted` classes,
    respectively. We will proceed with `.navbar-default` in our application:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要选择我们想要使用的导航栏颜色。Bootstrap为你提供了两种不同的颜色变体：默认灰色和反转黑色。它们可以通过使用`.navbar-default`和`.navbar-inverted`类分别应用。在我们的应用程序中，我们将使用`.navbar-default`：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, we have added a container to wrap all the elements of the navigation
    bar and set the proper overflow. We will use `.container-fluid` to create a full-width
    container instead of a fixed one. This will allow us to use all the available
    space inside the `.navbar` element. The code is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们添加了一个容器来包裹导航栏的所有元素并设置适当的溢出。我们将使用`.container-fluid`来创建一个全宽度的容器而不是固定宽度的一个。这将允许我们在`.navbar`元素内部使用所有可用空间。代码如下：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can use the `.container` class for a fixed width container inside the navigation
    bar. The navbar is divided into two important sections:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`.container`类在导航栏内部创建一个固定宽度的容器。导航栏分为两个重要部分：
- en: '`.navbar-header`: This is used for inserting a website''s branding'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-header`: 这用于插入网站的标志'
- en: '`.navbar-collapse`: This is used to collect all the links and other useful
    stuff that go inside a navigation bar'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-collapse`: 这用于收集导航栏内部的所有链接和其他有用内容'
- en: 'So, let''s proceed and create each one of them step by step. Insert `.navbar-header`
    in our markup:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们逐步创建每一个。在我们的标记中插入`.navbar-header`：
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We will now place the website''s name/branding using the `anchor` tag. Remember
    to add a`.navbar-brand` class to apply an appropriate style to `index.html`. Let''s
    try adding more elements into it:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将使用`anchor`标签放置网站的名称/品牌。请记住，为`index.html`添加`.navbar-brand`类以应用适当的样式。让我们尝试向其中添加更多元素：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you check out the `index.html` file now, you should see something like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在查看`index.html`文件，你应该看到如下内容：
- en: '![Getting started with a navigation bar](img/7269OS_06_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![使用导航栏入门](img/7269OS_06_01.jpg)'
- en: 'Next, we will see one of the most important elements of the navigation bar,
    the collapsed icon. This icon is visible when the website is opened in small browsers,
    such as cell phones. This icon will then be responsible for opening the collapsed
    menu when tapped on. Let''s try adding .navbar-collapse element:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到导航栏最重要的元素之一，即折叠图标。当网站在小浏览器中打开时，这个图标是可见的，例如手机。当点击这个图标时，它将负责打开折叠菜单。让我们尝试添加`.navbar-collapse`元素：
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'As you can see in the preceding code, this button should be placed inside the
    `.navbar-header` class. It should have a `.navbar-toggle` `collapsed` class. The
    first class here, is used to apply proper styling and pull it to the right side
    of the navigation bar. The second class is used to keep a track of the state of
    the button from collapsed to noncollapsed. You should also add two custom-data
    attributes to this element: `data-toggle` and `data-target`. The first one is
    used to initiate the collapse functionality in Bootstrap''s JavaScript and the
    second attribute is used to identify the target menu to add the collapse functionality.
    The `data-target` attribute should contain the ID of the menu, which will be collapsing
    on smaller browsers. We will create this menu soon.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，这个按钮应该放置在`.navbar-header`类内部。它应该有一个`.navbar-toggle` `collapsed`类。这里的第一个类用于应用适当的样式并将其拉到导航栏的右侧。第二个类用于跟踪按钮的状态，从折叠到非折叠。你还应该向这个元素添加两个自定义数据属性：`data-toggle`和`data-target`。第一个属性用于在Bootstrap的JavaScript中启动折叠功能，第二个属性用于识别要添加折叠功能的菜单。`data-target`属性应包含将要折叠在较小浏览器上的菜单的ID。我们很快就会创建这个菜单。
- en: 'Inside this button, there should be three different HTML span elements. These
    elements have an `icon-bar` class, which is responsible for drawing small, horizontal
    lines. So, when all three of them are placed together, we get a stacked-like icon.
    If you resize the browser window to a smaller size, you will find this button
    placed to the right of the navigation bar. Let''s see the output:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个按钮内部，应该有三个不同的HTML span元素。这些元素具有`icon-bar`类，负责绘制小的水平线。因此，当这三个元素一起放置时，我们得到一个堆叠式的图标。如果你将浏览器窗口调整到更小的尺寸，你会发现这个按钮放置在导航栏的右侧。让我们看看输出结果：
- en: '![Getting started with a navigation bar](img/7269OS_06_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用导航栏入门](img/7269OS_06_02.jpg)'
- en: We are done with `navbar-header` here. Let's proceed to the `.navbar-collapse`
    element. This element will wrap all the navigation bar links, search fields, dropdowns,
    and so on. Make sure that you add this element as a sibling to `.navbar-header`
    and not inside .navbar- header. Let's add the collapse element into it:.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们已经完成了`navbar-header`。让我们继续到`.navbar-collapse`元素。这个元素将包裹所有的导航栏链接、搜索字段、下拉菜单等等。确保你将这个元素添加为`.navbar-header`的兄弟元素，而不是其内部。让我们将折叠元素添加进去：
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This element should contain the same ID as used in the data-target attribute
    of the `.navbar-toggle` button. When you click on the **toggle** button, this
    whole portion will be toggled. Next, we will add some links to our navigation
    bar. We will use an unordered list with `nav` and `.navbar-nav` classes added
    to it. Both these classes are for styling purposes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素应该包含与`.navbar-toggle`按钮的`data-target`属性中使用的相同ID。当你点击**切换**按钮时，这个整个部分将会切换。接下来，我们将向我们的导航栏添加一些链接。我们将使用一个带有`nav`和`.navbar-nav`类的无序列表。这两个类都是用于样式目的。
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Insert links using the `<li>` tag and the `<a>` tag, as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`<li>`标签和`<a>`标签插入链接，如下所示：
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This should give you a beautiful navigation bar with some links in it, as shown
    in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会给你一个带有一些链接的漂亮导航栏，如下面的截图所示：
- en: '![Getting started with a navigation bar](img/7269OS_06_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用导航栏入门](img/7269OS_06_03.jpg)'
- en: 'If you try to make the browser window smaller and click on the **toggle** button,
    you should see a responsive menu in action, as shown in the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试缩小浏览器窗口并点击**切换**按钮，你应该会看到一个响应式菜单在起作用，如下面的截图所示：
- en: '![Getting started with a navigation bar](img/7269OS_06_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![使用导航栏入门](img/7269OS_06_04.jpg)'
- en: 'Adding the `.navbar-left` and `.navbar-right` classes to the `.navbar-nav`
    list will align the links to the left and right side of the navigation bar, respectively,
    as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 将`.navbar-left`和`.navbar-right`类添加到`.navbar-nav`列表中，将链接分别对齐到导航栏的左侧和右侧，如下面的截图所示：
- en: '![Getting started with a navigation bar](img/7269OS_06_05.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用导航栏入门](img/7269OS_06_05.jpg)'
- en: As learned in the previous chapter, you can also create a Bootstrap form and
    place it in the navigation bar. You don't have to add `form-inline` to place form
    elements horizontally here. Bootstrap gives you a special form class for the navigation
    bar, `.navbar-form`. Adding this class properly styles the form, as per the navigation
    bar alignment.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所学，你还可以创建一个Bootstrap表单并将其放置在导航栏中。你不需要添加`form-inline`来水平放置表单元素。Bootstrap为你提供了一个特殊的导航栏表单类，`.navbar-form`。正确添加此类将根据导航栏的对齐方式对表单进行样式化。
- en: '[PRE10]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Make sure that you add the form inside`.navbar-collapse` since it is the wrapper
    of all the navigation bar elements. This should give you a navigation bar, as
    shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将表单添加到`.navbar-collapse`中，因为它是所有导航栏元素的包装器。这将为你提供一个如下截图所示的导航栏：
- en: '![Getting started with a navigation bar](img/7269OS_06_06.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用导航栏](img/7269OS_06_06.jpg)'
- en: 'The final markup for the navigation bar, till now, is as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，导航栏的最终标记如下：
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Navigation bar helper classes
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航栏辅助类
- en: 'There are many helper classes available for navigation bar elements. Some of
    them are as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于导航栏元素，有许多辅助类可用。以下是一些例子：
- en: '`.navbar-btn`: When you want to place a Bootstrap button in a navigation bar,
    use this class to properly align it'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-btn`：当你想在导航栏中放置一个Bootstrap按钮时，使用此类来正确对齐它'
- en: '`.navbar-text`: If you want to display some plain text, use this class to make
    it properly visible'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-text`：如果你想显示一些纯文本，使用此类使其正确可见'
- en: '`.navbar-link`: If you want to add a link, but not inside the `.nav` element,
    then use this class'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-link`：如果你想添加一个链接，但不在`.nav`元素内，则使用此类'
- en: '`.navbar-fixed-top`: If you add this class to the parent of the navigation
    bar `navbar`, it will stick to the top of the browser window while scrolling'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-fixed-top`：如果你将此类添加到导航栏`navbar`的父元素中，它将在滚动时固定在浏览器窗口的顶部'
- en: '`.navbar-fixed-bottom`: This class fixes the navigation bar to the bottom of
    the window screen and it remains there while scrolling'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.navbar-fixed-bottom`：此类将导航栏固定在窗口屏幕的底部，并在滚动时保持在那里'
- en: '`.active`: Adding this class to any of the `<li>` elements will highlight the
    link, as compared to other links'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.active`：将此类添加到任何`<li>`元素上，将突出显示链接，与其他链接相比'
- en: Adding a navigation bar to the Rails application
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将导航栏添加到Rails应用程序中
- en: We will add the preceding navigation bar to our application. We will place our
    shop's branding in it and also place some links to our company pages. We will
    also use a black color navigation bar here and make it stick to the top of the
    browser window.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把前面的导航栏添加到我们的应用程序中。我们将在其中放置我们商店的品牌标识，并添加一些指向我们公司页面的链接。我们还将在这里使用黑色导航栏，并使其固定在浏览器窗口的顶部。
- en: 'Go to **App** | **Views** | **Layout** and open the `application.html.erb`
    file. We will place the navigation bar here, since this will be globally visible
    throughout the website. Place the following markup above the `.container` element
    in this file:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 前往**App** | **Views** | **Layout**，打开`application.html.erb`文件。我们将在这里放置导航栏，因为这将使整个网站全局可见。在这个文件中`.container`元素上方放置以下标记：
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The website should now look as shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 网站现在应该看起来如下面的截图所示：
- en: '![Adding a navigation bar to the Rails application](img/7269OS_06_07.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![将导航栏添加到Rails应用程序中](img/7269OS_06_07.jpg)'
- en: As you can see, there is some overlap here. This is happening because of the
    `navbar-fixed-top` class. Since the navigation bar is now floating on top of the
    window, the rest of the body has started to appear from the top of the window
    as well. We need to write our own small piece of CSS code to fix this situation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这里有一些重叠。这是由于`navbar-fixed-top`类引起的。由于导航栏现在浮在窗口顶部，其余的身体部分也开始从窗口顶部出现。我们需要编写我们自己的小块CSS代码来解决这个问题。
- en: 'We need to add an additional custom class to the `.container` element in the
    `application.html.erb` page. Let''s give it a `.bodyContent` class:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在`application.html.erb`页面中的`.container`元素上添加一个额外的自定义类。让我们给它一个`.bodyContent`类：
- en: '[PRE13]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, open the `application.css` file by navigating to the **App** | **Assets**
    | **Stylesheets** folder. Add the following CSS code to it:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过导航到**App** | **Assets** | **Stylesheets**文件夹，打开`application.css`文件。向其中添加以下CSS代码：
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We are adding a margin of `50px` to the `.bodyContent` element to push it down
    as the navigation bar overlaps it. You have a page that now appears properly,
    as shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将给`.bodyContent`元素添加一个`50px`的边距，以将其向下推，因为导航栏与其重叠。现在页面看起来是正确的，如下面的截图所示：
- en: '![Adding a navigation bar to the Rails application](img/7269OS_06_08.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![将导航栏添加到Rails应用程序中](img/7269OS_06_08.jpg)'
- en: Summary
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw how to create a simple navigation bar, and how to make
    it responsive. We also saw how to change the look of the navigation bar by using
    the `.navbar-inverse` class. Finally, we went ahead and integrated this navigation
    bar into our application. I hope you had fun creating a responsive Bootstrap navigation
    bar.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何创建一个简单的导航栏，以及如何使其响应式。我们还看到了如何通过使用`.navbar-inverse`类来改变导航栏的外观。最后，我们将这个导航栏集成到了我们的应用程序中。希望你在创建响应式的Bootstrap导航栏时玩得开心。
- en: In the next chapter, we are going to learn about some more Bootstrap components
    such as breadcrumbs, badges and labels, alerts, and so on. We will also use many
    of them in our current application.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习更多关于Bootstrap组件的内容，例如面包屑、徽章和标签、警告等。我们还将在我们当前的应用程序中使用许多这些组件。
