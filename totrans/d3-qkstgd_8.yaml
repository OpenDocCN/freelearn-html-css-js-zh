- en: Mapping
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 映射
- en: D3 is a great tool for generating maps. To do so, we use specially formatted
    JSON data to generate `<path>` SVG elements. This specially formatted JSON data
    is called **GeoJSON**, and in this chapter, we'll use it to create a map of the
    world.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: D3 是生成地图的强大工具。为此，我们使用特殊格式的 JSON 数据来生成 `<path>` SVG 元素。这种特殊格式的 JSON 数据称为 **GeoJSON**，在本章中，我们将使用它来创建世界地图。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating a map
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建地图
- en: Defining GeoJSON
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义 GeoJSON
- en: Using a projection
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用投影
- en: Generating a `<path>` using a projection and GeoJSON data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用投影和 GeoJSON 数据生成 `<path>`
- en: 'The complete code for this chapter can be found at https: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08).'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完整代码可以在以下网址找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08).
- en: Defining GeoJSON
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义 GeoJSON
- en: 'GeoJSON is just JSON data that has specific properties that are assigned specific
    data types. The following is an example of GeoJSON:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: GeoJSON 只是具有特定属性的 JSON 数据，这些属性被分配了特定的数据类型。以下是一个 GeoJSON 的示例：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In this example, we have one `Feature`, the `geometry` of which is a `Point`
    with the coordinates `[125.6, 10.1]`. Its name is `Dinagat Islands`. Each `Feature`
    will follow this general structure. An example, with the type as `STRING`, is
    as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们有一个 `Feature`，其 `geometry` 是一个坐标为 `[125.6, 10.1]` 的 `Point`。它的名字是 `Dinagat
    Islands`。每个 `Feature` 都将遵循这种通用结构。以下是一个类型为 `STRING` 的示例：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can also have a `FeatureCollection`, which includes many features grouped
    together in a `features` array. In the following code snippet, you can see an
    example of `FeatureCollection` with different `geometry`:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以有一个 `FeatureCollection`，它包含一个 `features` 数组中分组在一起的许多特征。在以下代码片段中，你可以看到一个具有不同
    `geometry` 的 `FeatureCollection` 示例：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here''s the general form:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是通用形式：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `features` property is an array of feature objects that were defined previously.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`features` 属性是一个之前定义的特征对象的数组。'
- en: Setting up the HTML
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 HTML
- en: 'Let''s set up a basic D3 page, using the following code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置一个基本的 D3 页面，使用以下代码：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The only thing different than the setup we''ve used in previous chapters is
    the following line:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前章节中使用的设置相比，唯一不同的是以下行：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The preceding line just loads an external JavaScript file, which sets our GeoJSON
    data to a variable. The beginning of the code looks as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 前一行只是加载一个外部 JavaScript 文件，该文件将我们的 GeoJSON 数据设置到一个变量中。代码的开始部分如下所示：
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that the `map_json` variable is just a JavaScript object that adheres to
    the GeoJSON structure (it adds an `idproperty`, which is optional). This is very
    important. If the object didn't adhere to the GeoJSON structure, D3 would not
    work as it should.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`map_json` 变量只是一个遵循 GeoJSON 结构的 JavaScript 对象（它添加了一个可选的 `idproperty`）。这非常重要。如果对象不遵循
    GeoJSON 结构，D3 就不会按预期工作。
- en: In production, you would probably make an AJAX call to get this data or, at
    the very least, create your own GeoJSON file, similar to the one being hosted
    on [https://rawgit.com/](https://rawgit.com/). The preceding setup was created
    to make learning easier, by decreasing the complexity associated with AJAX.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，你可能需要通过 AJAX 调用来获取这些数据，或者至少创建自己的 GeoJSON 文件，类似于托管在 [https://rawgit.com/](https://rawgit.com/)
    上的文件。前面的设置是为了简化学习，降低与 AJAX 相关的复杂性。
- en: Using a projection
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用投影
- en: 'Now, let''s start on our `app.js` file, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始我们的 `app.js` 文件，如下所示：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'At the bottom of `app.js`, let''s add the following code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `app.js` 的底部，让我们添加以下代码：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This generates a projection, which governs how we're going to display a round
    world on a flat screen. There are lots of different types of projections that
    we can use, which can be seen at [https://github.com/d3/d3-geo/blob/master/README.md#azimuthal-projections](https://github.com/d3/d3-geo/blob/master/README.md#azimuthal-projections).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这生成了一个投影，它决定了我们在平面上如何显示一个圆形的世界。我们可以使用很多不同类型的投影，这些投影可以在 [https://github.com/d3/d3-geo/blob/master/README.md#azimuthal-projections](https://github.com/d3/d3-geo/blob/master/README.md#azimuthal-projections)
    中看到。
- en: The preceding line tells D3 to create an `equirectangular` projection ([https://github.com/d3/d3-geo/blob/master/README.md#geoEquirectangular](https://github.com/d3/d3-geo/blob/master/README.md#geoEquirectangular)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 前一行告诉 D3 创建一个 `equirectangular` 投影 ([https://github.com/d3/d3-geo/blob/master/README.md#geoEquirectangular](https://github.com/d3/d3-geo/blob/master/README.md#geoEquirectangular)).
- en: Generating a path using a projection and GeoJSON data
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用投影和 GeoJSON 数据生成路径
- en: 'Now that we have our projection, we''re going to generate `<path>` elements
    for each data element in the `map_json.features` array. Then, we will set the
    fill of each element to `#099`. Add the following to the end of `app.js`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的投影，我们将为 `map_json.features` 数组中的每个数据元素生成 `<path>` 元素。然后，我们将每个元素的填充设置为
    `#099`。将以下内容添加到 `app.js` 的末尾：
- en: '[PRE9]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows what it should look if we open `index.html`
    in Chrome and view the Elements tab in the Developer tools:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了如果我们打开 `index.html` 并在开发者工具中的元素标签页中查看，它应该看起来像什么：
- en: '![](img/ea2b7f42-906a-4d42-855a-aa40375ff33e.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea2b7f42-906a-4d42-855a-aa40375ff33e.png)'
- en: We created the path elements, but they each need a `d` attribute, which will
    determine how they will be drawn (that is, their shapes).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了路径元素，但每个元素都需要一个 `d` 属性，这将决定它们如何被绘制（即它们的形状）。
- en: 'We want something like the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的是以下这样的东西：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Writing the kind of code described in the preceding comment would be very difficult.
    Luckily, D3 can generate that entire function for us. All we need to do is specify
    the projection that we created earlier. At the bottom of `app.js`, add the following
    code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 编写前面注释中描述的那种代码将会非常困难。幸运的是，D3 可以为我们生成整个函数。我们只需要指定之前创建的投影。在 `app.js` 的底部添加以下代码：
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`geoPath()` generates the function that we''ll use for the `d` attribute, and
    the projection (`worldProjection`) tells it to use the `worldProjection` variable
    created earlier, so that the path elements appear as an equirectangular projection,
    as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`geoPath()` 生成我们将用于 `d` 属性的函数，并且投影 (`worldProjection`) 告诉它使用之前创建的 `worldProjection`
    变量，这样路径元素就会以等经纬投影的形式出现，如下所示：'
- en: '![](img/6ec85faf-009b-43d9-a0f4-36ca5b3c655f.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6ec85faf-009b-43d9-a0f4-36ca5b3c655f.png)'
- en: Summary
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed GeoJSON, what it's used for, and why it differs
    from more general JSON data. We've also covered how to use D3 to create a projection
    and render GeoJSON data as a map. Using this information, we can create all sorts
    of interesting maps of countries, cities, towns, or any area that we have GeoJSON
    data for. We can use different projections to view this data in interesting ways
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了 GeoJSON，它的用途以及为什么它与更通用的 JSON 数据不同。我们还介绍了如何使用 D3 创建投影并将 GeoJSON 数据渲染为地图。利用这些信息，我们可以创建各种有趣的地图，如国家、城市、镇或任何我们有
    GeoJSON 数据的区域。我们可以使用不同的投影以有趣的方式查看这些数据。
- en: Congratulations! You've made it to the end of the book. Now, go and create amazing
    visualizations.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经到达了这本书的结尾。现在，去创建令人惊叹的可视化吧。
