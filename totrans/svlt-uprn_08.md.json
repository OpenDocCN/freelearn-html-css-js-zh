["```js\nnpm run build\n```", "```js\nnpm run preview\n```", "```js\nconst key = 'DEMO_KEY'; // your API key here\nexport const prerender = true; // change this line\nexport function load() {\n  const pic = fetch(`https://api.nasa.gov/planetary/apod?api_key=${key}`)\n    .then(response => {\n      console.log('got response');\n      return response.json();\n    });\n  return {pic};\n}\n```", "```js\nnpm install -D @sveltejs/adapter-node\n```", "```js\nimport adapter from '@sveltejs/adapter-node';\nconst config = {\n    kit: {\n        adapter: adapter(),\n        alias: {\n            db: '/src/db.js',\n            img: '/src/lib/images'\n        }\n    },\n};\nexport default config;\n```", "```js\nnpm ci --omit dev\n```", "```js\nORIGIN=http://0.0.0.0:3000 node build\n```", "```js\nnpm i -D @sveltejs/adapter-cloudflare\n```", "```js\nimport adapter from '@sveltejs/adapter-cloudflare';\nconst config = {\n    kit: {\n        adapter: adapter(),\n    }\n};\nexport default config;\n```", "```js\nimport users from '$lib/users.json';\nexport const actions = {\n  login: async ({request, cookies}) => {\n    const form = await request.formData();\n    const exists = users.filter(user => user.username === form.get('username'));\n    const auth = exists.filter(user => user.password === form.get('password'));\n    if(!exists.length || !auth.length) {\n      return {msg: 'Invalid login!'};\n    }\n    cookies.set('identity', auth[0].identity, {path: '/'});\n    return {msg: 'success!'}\n  }\n}\n```", "```js\nnpm install -D @sveltejs/adapter-static\n```"]