["```js\ntype color = [`Red | `Orange | `Yellow | `Green | `Blue ];\ntype rgb = [`Red | `Green | `Blue];\n\n/* Bindings using the variants we defined */\nlet *onegreen*: color = `Green;\nlet *othergreen*: rgb = `Green;\n```", "```js\n/* Console log */\nJs.log(onegreen);\nJs.log(othergreen);\n```", "```js\n756711075\n756711075\n```", "```js\nlet *stringOfColor* = (c: color) : string => {\n switch (c) {\n | *`Red* => \"red\"\n | *`Orange* => \"orange\"\n | *`Yellow* => \"yellow\"\n | *`Green* => \"green\"\n | *`Blue* => \"blue\"\n }\n};\n```", "```js\nlet *stringOfRgb* = (c: rgb) : string => {\n switch (c) {\n | *`Red* => \"RGB red\"\n | *`Green* => \"RGB green\"\n | *`Blue* => \"RGB blue\"\n }\n};\n```", "```js\nJs.log(stringOfColor(onegreen));\nJs.log(stringOfRgb(othergreen));\n```", "```js\n756711075\n756711075\ngreen\nRGB green\n```", "```js\ntype onlyWomanShoe = [`Slingbacks | `HighHeels];\n```", "```js\ntype shoe = [onlyWomanShoe | `Moccasins | `Boots | `Sneakers | `Wingtips];\n```", "```js\ntype onlyWomanShoe = [`Slingbacks | `HighHeels];\ntype shoe = [onlyWomanShoe | `Moccasins | `Boots | `Sneakers | `Wingtips];\n\nlet *johndoe_shoe*: shoe = `Moccasins;\nlet *janedoe_shoe*: shoe = `Slingbacks;\n\nJs.log(johndoe_shoe);\nJs.log(janedoe_shoe);\n\nlet *infoAboutShoe* = (s: shoe) : string => {\n switch (s) {\n | *`Slingbacks* => \"Slingbacks - Specific woman shoe\"\n | *`HighHeels* => \"High Heels - Specific woman shoe\"\n | *`Moccasins* => \"Moccasins\"\n | *`Boots* => \"Boots\"\n | *`Sneakers* => \"Sneakers\"\n | *`Wingtips* => \"Wingtips\"\n }\n};\n\nJs.log(infoAboutShoe(johndoe_shoe));\nJs.log(infoAboutShoe(janedoe_shoe)); \n```", "```js\n265261402\n-594895036\nMoccasins\nSlingbacks - Specific woman shoe\n```", "```js\nlet *janedoe_shoe*: onlyWomanShoe = `Slingbacks;\n```", "```js\n  This has type:\n    onlyWomanShoe\n  But somewhere wanted:\n    shoe\n  The first variant type does not allow tag(s)\n  `Boots, `Moccasins, `Sneakers, `Wingtips\n```", "```js\nlet *infoAboutShoe* = (s: shoe) : string => {\n    switch (s) {\n        | *#onlyWomanShoe* => \"Woman shoe such as Sandals or High Heels\"\n        | *`Moccasins* => \"Moccasins\"\n        | *`Boots* => \"Boots\"\n        | *`Sneakers* => \"Sneakers\"\n        | *`Wingtips* => \"Wingtips\"\n    }\n};\n```", "```js\n265261402\n-594895036\nMoccasins\nWoman shoe such as Slingbacks or High Heels\n```", "```js\ntype domain = [ `Domain(string) ];\ntype accessType = [`Private | `Public];\n```", "```js\nlet *accessTypeName* = (a: accessType) : string => {\n switch (a) {\n | *`Private* => \"private\"\n | *`Public* => \"public\"\n }\n };\n```", "```js\ntype website = [\n | *`CorporateSite*(domain)\n | *`CommerceSite*(domain, accessType)\n | *`Blog*(domain, accessType)\n ];\n```", "```js\nlet *siteSummary* = (app: website) : string => {\n switch (app) {\n | *`CorporateSite*(`Domain(s)) => s ++ \" - corporate site (public)\"\n | *`CommerceSite*(`Domain(s), a) => s ++ \" - commerce site (\" ++ accessTypeName(a) ++ \")\"\n | *`Blog*(`Domain(s), a) => {\n switch (a) {\n | *`Private* => s ++ \" - \" ++ \"corporate blog (\" ++ accessTypeName(a) ++ \")\"\n | *`Public* => s ++ \" - blog (public - login-based access for authors)\"\n }\n }\n }\n};\n```", "```js\nlet *mysite* = `CorporateSite(`Domain(\"www.acme.com\"))\nJs.log(siteSummary(mysite))\n\nlet *myblog* = `Blog(`Domain(\"www.contentgardening.com\"), `Public)\nJs.log(siteSummary(myblog))\n\nlet *corpinternalblog* = `Blog(`Domain(\"internalblog.acme.com\"), `Private)\nJs.log(siteSummary(corpinternalblog))\n```", "```js\ntype webapp = [\n | *`CorporateSite*(domain)\n | *`CommerceSite*(domain, accessType)\n | *`Blog*(domain, accessType)\n | *`SocialApp*(domain)\n ];\n```", "```js\nlet *appSummary* = (app: webapp) : string => {\n switch (app) {\n | *`CorporateSite*(`Domain(s)) as ws => siteSummary(ws)\n | *`CommerceSite*(`Domain(s), a) as ws => siteSummary(ws)\n | *`Blog*(`Domain(s), a) as ws => siteSummary(ws)\n | *`SocialApp*(`Domain(s)) => s ++ \" - social app\"\n }\n};\n```", "```js\n/* 1) the extended function **/\nlet *appSummary* = (app: webapp) : string => {\n switch (app) {\n | *`CorporateSite*(`Domain(_)) as ws => siteSummary(ws)\n | *`CommerceSite*(`Domain(_), _) as ws => siteSummary(ws)\n | *`Blog*(`Domain(_), _) as ws => siteSummary(ws)\n | *`SocialApp*(`Domain(s)) => s ++ \" - social app\"\n }\n};\n```", "```js\nJs.log(\"---\")\nlet *fb* = `SocialApp(`Domain(\"facebook.com\"))\nJs.log(appSummary(fb))\n```", "```js\n/* 2) the extended function improved! **/\nlet *appSummaryImproved* = (app: webapp) : string => {\n switch (app) {\n | #website as ws => siteSummary(ws)\n | *`SocialApp*(`Domain(s)) => s ++ \" - social app\"\n }\n};\n```", "```js\nJs.log(\"------\")\nJs.log(appSummaryImproved(mysite))\nJs.log(appSummaryImproved(myblog))\nJs.log(appSummaryImproved(corpinternalblog))\nJs.log(appSummaryImproved(fb))\n```", "```js\nwww.acme.com - corporate site (public)\nwww.contentgardening.com - blog (public - login-based access for authors)\ninternalblog.acme.com - corporate blog (private)\n---\nfacebook.com - social app\n------\nwww.acme.com - corporate site (public)\nwww.contentgardening.com - blog (public - login-based access for authors)\ninternalblog.acme.com - corporate blog (private)\nfacebook.com - social app\n```", "```js\n/* A module */\nmodule ColorExample = { \n  type color = [`Red | `Orange | `Yellow | `Green | `Blue ];\n  type rgb = [`Red | `Green | `Blue];\n\n  let *onegreen*: color = `Green;\n  let *othergreen*: rgb = `Green;\n\n  let *stringOfColor* = (c: color) : string => {\n    switch (c) {\n        | *`Red* => \"red\"\n        | *`Orange* => \"orange\"\n        | *`Yellow* => \"yellow\"\n        | *`Green* => \"green\"\n        | *`Blue* => \"blue\"\n    }\n  };\n\n  let *stringOfRgb* = (c: rgb) : string => {\n    switch (c) {\n        | *`Red* => \"RGB red\"\n        | *`Green* => \"RGB green\"\n        | *`Blue* => \"RGB blue\"\n    }\n  };\n}\n```", "```js\n/* Use the module the default way */\nJs.log(\"1/ Use function and values inside the module...\");\nJs.log(ColorExample.stringOfColor(ColorExample.onegreen));\nJs.log(ColorExample.stringOfRgb(ColorExample.othergreen));\n```", "```js\n/* Open the module and use its content */\nJs.log(\"2/ Use function and values from the module after opening it...\");\nlet colorString = {\n  open ColorExample;\n  let oneblue: color = `Blue;\n  Js.log(\"String value of another color: \" ++ stringOfColor(oneblue));\n};\n```", "```js\n1/ Use function and values inside the module...\ngreen\nRGB green\n2/ Use function and values from the module after opening it...\nString value of another color: blue\n```", "```js\nmodule ColorExample = { \n  type color = [`Red | `Orange | `Yellow | `Green | `Blue ];\n  type rgb = [`Red | `Green | `Blue];\n\n  let *onegreen*: color = `Green;\n  let *othergreen*: rgb = `Green;\n\n  let *stringOfColor* = (c: color) : string => {\n    *switch* (c) {\n        | *`Red* => \"red\"\n        | *`Orange* => \"orange\"\n        | *`Yellow* => \"yellow\"\n        | *`Green* => \"green\"\n        | *`Blue* => \"blue\"\n    }\n  };\n\n  let *stringOfRgb* = (c: rgb) : string => {\n    switch (c) {\n        | *`Red* => \"RGB red\"\n        | *`Green* => \"RGB green\"\n        | *`Blue* => \"RGB blue\"\n    }\n  };\n}\n```", "```js\nopen Ch09_OpenModulebisPart1.ColorExample;\n\nJs.log(stringOfColor(onegreen));\nJs.log(stringOfRgb(othergreen));\n\nlet *colorString* = {\n  let *oneblue*: color = `Blue;\n Js.log(\"String value of another color: \" ++ stringOfColor(oneblue));\n};\n```", "```js\nmodule *Site* = {\n let *siteEnvMarker* = \"TESTING\";\n let *protocol* = (~secured) => secured ? \"https\" : \"http\";\n let *getInfo* = domainName => protocol(~secured=false) ++ \"://\" ++ domainName ++ \" (\" ++ siteEnvMarker ++ \")\";\n};\n```", "```js\nmodule ProductionSite = {\n include Site;\n let *siteEnvMarker* = \"production!\";\n let *getPublicInfo* = domainName => {\n let *additionalText* = \" (\" ++ String.uppercase(siteEnvMarker) ++ \")\";\n let *result* = protocol(~secured=true) ++ \"://\" ++ domainName ++ additionalText;\n Js.log(result);\n }\n};\n```", "```js\nJs.log(Site.getInfo(\"dev-acme.com\"));\nprint_newline();\nProductionSite.getPublicInfo(\"acme.com\");\n```", "```js\nhttp://dev-acme.com (TESTING)\n\nhttps://acme.com (PRODUCTION!)\n```"]