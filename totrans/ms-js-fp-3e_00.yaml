- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: In computer programming, paradigms abound. Some examples include imperative
    programming, structured (goto-less) programming, **object-oriented programming**
    (**OOP**), aspect-oriented programming, and declarative programming. Lately, there
    has been renewed interest in a particular paradigm that can arguably be considered
    to be older than most (if not all) of the cited ones—**functional programming**
    (**FP**). FP emphasizes writing functions and connecting them in simple ways to
    produce more understandable and more easily tested code. Thus, given the increased
    complexity of today’s web applications, it’s logical that a safer, cleaner way
    of programming would be of interest.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机编程中，范式众多。一些例子包括命令式编程、结构化（无goto）编程、**面向对象编程**（**OOP**）、面向方面编程和声明式编程。最近，人们对一种可能被认为比上述所有范式都要古老的特定范式产生了新的兴趣——**函数式编程**（**FP**）。FP强调以简单的方式编写函数并将它们连接起来，以产生更易于理解和测试的代码。因此，鉴于当今Web应用的复杂性不断增加，一种更安全、更干净的编程方式自然会受到关注。
- en: This interest in FP comes hand in hand with the evolution of JavaScript. Despite
    its somewhat hasty creation (reportedly achieved in only 10 days, in 1995, by
    Brendan Eich at Netscape), today, JavaScript is a standardized and quickly growing
    language, with features more advanced than most other similarly popular languages.
    The ubiquity of the language, which can now be found in browsers, servers, mobile
    phones, and whatnot, has also impelled interest in better development strategies.
    Also, even if JavaScript wasn’t conceived as a functional language, the fact is
    that it provides all the features you’d require to work in that fashion, which
    is another plus.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对函数式编程（FP）的兴趣与JavaScript的演变息息相关。尽管JavaScript的创建有些仓促（据报道，1995年由Brendan Eich在Netscape公司仅用10天完成），但如今，JavaScript已经成为一个标准化且快速发展的语言，其功能比大多数类似流行的语言都要先进。这种语言无处不在，现在可以在浏览器、服务器、手机等设备上找到，这也促使人们对更好的开发策略产生了兴趣。此外，即使JavaScript最初并不是作为函数式语言设计的，但事实上它提供了你以那种方式工作所需的所有功能，这也是一个加分项。
- en: That said, we must also comment on advances in the language and related tools.
    The benefits of data typing are generally acknowledged, and in recent years, TypeScript
    has gained wide adoption and has been used for both frontend and backend coding.
    It makes sense, then, to also include its usage in this book. This, we feel, will
    make the examples clearer, and also simplify the adoption of the presented code
    for “real-life” jobs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我们还得评论一下语言和相关工具的进步。数据类型的好处通常得到认可，近年来，TypeScript得到了广泛的应用，并被用于前端和后端编码。因此，在本书中也包括其使用是有意义的。我们认为，这将使示例更清晰，并简化所展示代码在实际工作中的应用。
- en: It must also be said that FP hasn’t been generally applied in industry, possibly
    because it has a certain aura of difficulty, and it is thought to be theoretical
    rather than practical, even mathematical, and possibly uses vocabulary and concepts
    that are foreign to developers—for example, functors, monads, folding, and category
    theory. While learning all this theory will certainly be of help, it can also
    be argued that even with zero knowledge of the previous terms, you can understand
    the tenets of FP, and see how to apply it to your own programming.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 还必须指出，FP在工业界并没有得到普遍应用，可能是因为它有一定的难度，人们认为它更偏向于理论而非实践，甚至可以说是数学性的，并且可能使用了开发者不熟悉的词汇和概念——例如，函子、单子、折叠和范畴论。虽然学习所有这些理论无疑会有所帮助，但也有人认为，即使对之前的术语一无所知，你也能理解FP的原则，并看到如何将其应用到自己的编程中。
- en: FP is not something that you have to do on your own, without any help. There
    are many libraries and frameworks that incorporate, to greater or lesser degrees,
    the concepts of FP. Starting with jQuery (which does include some FP concepts),
    passing through Underscore and its close relative, Lodash, and other libraries
    such as Ramda, and getting to more complete web development tools such as React
    and Redux, Angular, and Elm (a 100% functional language, which compiles into JavaScript),
    the list of functional aids for your coding is ever growing.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程（FP）并不是你必须独自完成的事情，无需任何帮助。有许多库和框架在某种程度上融入了FP的概念。从jQuery（它确实包含了一些FP概念）开始，经过Underscore及其近亲Lodash，以及其他库如Ramda，再到更完整的Web开发工具，如React和Redux、Angular和Elm（一种100%函数式语言，编译成JavaScript），你用于编码的函数式辅助工具清单不断增长。
- en: Learning how to use FP can be a worthwhile investment, and even though you may
    not get to use all of its methods and techniques, just starting to apply some
    of them will pay dividends in better code. You need not try to apply all the concepts
    of FP from the start, and you need not try to abandon every non-functional feature
    in JavaScript either. JavaScript assuredly has some bad features, but it also
    has several very good and powerful ones. The idea is not to throw away everything
    you’ve learned and use and adopt a 100% functional way; rather, the guiding idea
    is evolution, not revolution. In that sense, it can be said that what we’ll be
    doing is not FP, but rather **Sorta Functional Programming** (**SFP**), aiming
    for a fusion of paradigms.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 学习如何使用FP可以是一项值得的投资，即使你可能无法使用其所有方法和技巧，但只要开始应用其中的一些，就能在编写更好的代码中获得回报。你不必一开始就尝试应用FP的所有概念，也不必尝试放弃JavaScript中的每一个非功能特性。JavaScript确实有一些不好的特性，但它也有几个非常好且强大的特性。我们的想法不是抛弃你所学的一切，而是采用100%的函数式方法；相反，指导思想是进化，而不是革命。从这个意义上说，可以说我们正在做的不完全是FP，而是**半函数式编程**（**SFP**），旨在融合范式。
- en: 'A final comment about the style of the code in this book—it is quite true that
    there are several very good libraries that provide you with FP tools: Underscore,
    Lodash, and Ramda are counted among them. However, I preferred to eschew their
    usage because I wanted to show how things really work. It’s easy to apply a given
    function from some package or the other, but by coding everything out (vanilla
    FP, if you wish), it’s my belief that you get to understand things more deeply.
    Also, as I will comment in some places, because of the power and clarity of arrow
    functions and other features, the pure JavaScript versions can be even simpler
    to understand!'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 关于本书代码风格的一个最后评论——确实有几个非常好的库为你提供了FP工具：Underscore、Lodash和Ramda就是其中之一。然而，我更喜欢避免使用它们，因为我想要展示事物真正的工作方式。应用某个包中的给定函数很容易，但通过编写一切（如果你愿意，纯FP），我相信你可以更深入地理解事物。此外，正如我将在某些地方评论的那样，由于箭头函数和其他特性的强大和清晰，纯JavaScript版本甚至可能更容易理解！
- en: Who this book is for
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: This book is geared toward programmers with a good working knowledge of JavaScript
    (or, better yet, TypeScript) working either on the client side (browsers) or the
    server side (Node.js), who are interested in applying techniques to be able to
    write better, testable, understandable, and maintainable code. Some background
    in computer science (including, for example, data structures) and good programming
    practices will also come in handy. In this book, we’ll cover FP in a practical
    way, though, at times, we will mention some theoretical points.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向那些对JavaScript（或者更好的是TypeScript）有良好实际了解的程序员，他们要么在客户端（浏览器）工作，要么在服务器端（Node.js）工作，并希望应用技术来编写更好、可测试、可理解和可维护的代码。一些计算机科学背景（例如，数据结构）和良好的编程实践也将很有帮助。然而，本书将以实用的方式介绍FP，尽管有时我们会提到一些理论观点。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B19301_01.xhtml#_idTextAnchor015), *Becoming Functional – Several
    Questions*, discusses FP, gives reasons for its usage, and lists the tools that
    you’ll need to take advantage of the rest of the book.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B19301_01.xhtml#_idTextAnchor015)，*成为函数式程序员 – 几个问题*，讨论FP，给出其使用的原因，并列出你将需要利用本书剩余部分所需工具。'
- en: '[*Chapter 2*](B19301_02.xhtml#_idTextAnchor037), *Thinking Functionally – A
    First Example*, will provide the first example of FP by considering a common web-related
    problem and going over several solutions, to finally focus on a functional solution.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B19301_02.xhtml#_idTextAnchor037)，*以函数式思考 – 第一个例子*，将通过考虑一个常见的与网络相关的问题并探讨几个解决方案，最终专注于函数式解决方案。'
- en: '[*Chapter 3*](B19301_03.xhtml#_idTextAnchor054), *Starting Out with Functions
    – A Core Concept*, will go over the central concept of FP, that is, functions,
    and the different options available in JavaScript.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B19301_03.xhtml#_idTextAnchor054)，*从函数开始 – 核心概念*，将介绍FP的核心概念，即函数，以及JavaScript中可用的不同选项。'
- en: '[*Chapter 4*](B19301_04.xhtml#_idTextAnchor069), *Behaving Properly – Pure
    Functions*, will consider the concept of purity and pure functions, and demonstrate
    how it leads to simpler coding and easier testing.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B19301_04.xhtml#_idTextAnchor069)，*行为规范 – 纯函数*，将考虑纯度和纯函数的概念，并展示它如何导致更简单的编码和更简单的测试。'
- en: '[*Chapter 5*](B19301_05.xhtml#_idTextAnchor084), *Programming Declaratively
    – A Better Style*, will use simple data structures to show how to produce results
    that work not in an imperative way, but in a declarative fashion.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B19301_05.xhtml#_idTextAnchor084)，*声明式编程 - 更好的风格*，将使用简单的数据结构来展示如何以声明式方式而不是命令式方式产生结果。'
- en: '[*Chapter 6*](B19301_06.xhtml#_idTextAnchor107), *Producing Functions – Higher-Order
    Functions*, will deal with higher-order functions, which receive other functions
    as parameters and produce new functions as results.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B19301_06.xhtml#_idTextAnchor107)，*生成函数 - 高阶函数*，将处理高阶函数，这些函数接收其他函数作为参数并产生新的函数作为结果。'
- en: '[*Chapter 7*](B19301_07.xhtml#_idTextAnchor128), *Transforming Functions –
    Currying and Partial Application*, will explore some methods for producing new
    and specialized functions from earlier ones.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B19301_07.xhtml#_idTextAnchor128)，*转换函数 - 柯里化和部分应用*，将探讨一些方法，可以从早期函数中产生新的和特殊化的函数。'
- en: '[*Chapter 8*](B19301_08.xhtml#_idTextAnchor148), *Connecting Functions – Pipelining,
    Composition, and More*, will show the key concepts regarding how to build new
    functions by joining previously defined ones.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B19301_08.xhtml#_idTextAnchor148)，*连接函数 - 管道、组合等*，将展示如何通过连接先前定义的函数来构建新的函数的关键概念。'
- en: '[*Chapter 9*](B19301_09.xhtml#_idTextAnchor172), *Designing Functions – Recursion*,
    will look at how a key concept in FP, recursion, can be applied to designing algorithms
    and functions.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B19301_09.xhtml#_idTextAnchor172)，*设计函数 - 递归*，将探讨函数式编程中的一个关键概念，递归，如何应用于算法和函数的设计。'
- en: '[*Chapter 10*](B19301_10.xhtml#_idTextAnchor188), *Ensuring Purity – Immutability*,
    will present some tools that can help you to work in a pure fashion by providing
    immutable objects and data structures.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B19301_10.xhtml#_idTextAnchor188)，*确保纯净性 - 不可变性*，将介绍一些工具，这些工具可以通过提供不可变对象和数据结构来帮助你以纯净的方式工作。'
- en: '[*Chapter 11*](B19301_11.xhtml#_idTextAnchor204), *Implementing Design Patterns
    – The Functional Way*, will show how several popular OOP design patterns are implemented
    (or not needed!) when you program in FP ways.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B19301_11.xhtml#_idTextAnchor204)，*以函数式方式实现设计模式*，将展示在以函数式编程方式编程时，几个流行的面向对象设计模式是如何实现（或不需要！）的。'
- en: '[*Chapter 12*](B19301_12.xhtml#_idTextAnchor221), *Building Better Containers
    – Functional Data Types*, will explore some more high-level functional patterns,
    introducing types, containers, functors, monads, and several other more advanced
    FP concepts.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B19301_12.xhtml#_idTextAnchor221)，*构建更好的容器 - 函数式数据类型*，将探讨一些更高级的函数式模式，介绍类型、容器、函子、单子以及几个其他更高级的函数式编程概念。'
- en: I have tried to keep the examples in this book simple and down to earth because
    I want to focus on the functional aspects and not on the intricacies of this or
    that problem. Some programming texts are geared toward learning, say, a given
    framework, and then working on a given problem, showing how to fully work it out
    with the chosen tools.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我试图使这本书中的例子简单易懂，因为我想专注于函数式方面，而不是某个问题的复杂性。有些编程教材倾向于学习某个特定的框架，然后解决某个特定的问题，展示如何使用选定的工具彻底解决问题。
- en: In fact, in the very early stages of planning for this book, I entertained the
    idea of developing an application that would use all the FP things I had in mind,
    but there was no way to fit all of that within a single project. Exaggerating
    a bit, I felt like an MD trying to find a patient on whom to apply all of his
    medical knowledge and treatments! So, I opted to show plenty of individual techniques,
    which can be used in multiple situations. Rather than building a house, I want
    to show you how to put bricks together, how to wire things up, and so on, so that
    you will be able to apply whatever you need as you see fit.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，在为这本书的早期规划阶段，我考虑过开发一个应用，该应用将使用我心中所有的函数式编程元素，但无法将所有这些内容都包含在一个单一的项目中。夸张一点说，我感觉就像一个医生试图找到一个病人来应用他所有的医学知识和治疗方法！因此，我选择展示许多可以用于多种情况的技术。与其建造一座房子，我更想展示如何将砖块组合在一起，如何布线，等等，这样你就可以根据需要应用任何你需要的东西。
- en: To get the most out of this book
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用这本书
- en: To understand the concepts and code in this book, you don’t need much more than
    a JavaScript environment and a text editor. To be honest, I even developed some
    of the examples working fully online, with tools such as JSFiddle (at [jsfiddle.net](http://jsfiddle.net))
    and the like, and absolutely nothing else.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解本书中的概念和代码，您不需要比JavaScript环境和文本编辑器更多的东西。说实话，我甚至使用JSFiddle（在[jsfiddle.net](http://jsfiddle.net)）等工具完全在线开发了一些示例，而且绝对不需要其他任何东西。
- en: In this book, we’ll be using ES2022 and Node 19, and the code will run on any
    OS, such as Linux, macOS, or Windows.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用ES2022和Node 19，代码将在任何操作系统上运行，例如Linux、macOS或Windows。
- en: You will need some experience with the latest version of JavaScript because
    it includes several features that can help you write more concise and compact
    code. We will frequently include pointers to online documentation, such as the
    documentation available on the **Mozilla Development Network** (**MDN**) at [developer.mozilla.org](http://developer.mozilla.org),
    to help you get more in-depth knowledge.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一些关于最新版JavaScript的经验，因为它包括一些可以帮助您编写更简洁和紧凑代码的功能。我们将经常包括指向在线文档的指针，例如在[developer.mozilla.org](http://developer.mozilla.org)上可用的**Mozilla开发网络**（**MDN**）文档，以帮助您获得更深入的知识。
- en: We’ll also be using the latest version of TypeScript, to add data typing to
    our JavaScript code. For more on the language, the must-read reference is [www.typescriptlang.org](http://www.typescriptlang.org),
    where you’ll find documentation, tutorials, and even an online playground to directly
    test code there.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用TypeScript的最新版本，为我们的JavaScript代码添加数据类型。有关该语言的更多信息，必读的参考资料是[www.typescriptlang.org](http://www.typescriptlang.org)，在那里您可以找到文档、教程，甚至一个在线沙盒，可以直接在那里测试代码。
- en: Download the example code files
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [github.com/PacktPublishing/Mastering-JavaScript-Functional-Programming-3E](http://github.com/PacktPublishing/Mastering-JavaScript-Functional-Programming-3E).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件[github.com/PacktPublishing/Mastering-JavaScript-Functional-Programming-3E](http://github.com/PacktPublishing/Mastering-JavaScript-Functional-Programming-3E)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [github.com/PacktPublishing/](http://github.com/PacktPublishing/). Check them
    out!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供来自我们丰富的图书和视频目录中的其他代码包，可在[github.com/PacktPublishing/](http://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/UsFuE](https://packt.link/UsFuE).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图和图表彩色图像的PDF文件。您可以从这里下载：[https://packt.link/UsFuE](https://packt.link/UsFuE)。
- en: Conventions used
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “There are several possible results: a single value
    with the `reduce()` operation, a new array with `map()`, or just about any kind
    of result with `forEach()`.”'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码词汇、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名。以下是一个示例：“有几种可能的结果：使用`reduce()`操作的单个值、使用`map()`的新数组，或者使用`forEach()`的几乎所有类型的输出。”'
- en: 'A block of code is set as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都如下所示：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要词汇或屏幕上看到的词汇。'
- en: Tips or important notes
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来是这样的。
- en: Get in touch
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过电子邮件发送至[customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在此书中发现错误，我们将非常感激您能向我们报告。请访问 [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，我们将非常感激您能提供位置地址或网站名称。请通过[mailto:copyright@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Mastering JavaScript Functional Programming - Third Edition*,
    we’d love to hear your thoughts! Please click here to go straight to the Amazon
    review page for this book and share your feedback.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《精通JavaScript函数式编程 - 第三版》，我们非常乐意听到您的想法！请点击此处直接进入此书的亚马逊评论页面并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
    Is your eBook purchase not compatible with the device of your choice?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢随时随地阅读，但无法携带您的印刷书籍到任何地方吗？您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在，随着每本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止这些，您还可以获得独家折扣、时事通讯和每日免费内容的每日邮箱访问权限
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取福利：
- en: Scan the QR code or visit the link below![](img/B19301_QR_Free_PDF.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接！![二维码图片](img/B19301_QR_Free_PDF.jpg)
- en: https://packt.link/free-ebook/9781804610138
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781804610138](https://packt.link/free-ebook/9781804610138)'
- en: Submit your proof of purchase
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样！我们将直接将您的免费PDF和其他福利发送到您的邮箱
