["```js\n$ npm -v\n\n```", "```js\nconsole.log(\"Hello World\");\n```", "```js\nnode helloworld.js\n\n```", "```js\nvar http = require(\"http\");\n\nhttp.createServer(function(request, response) {\n  response.writeHead(200, {\"Content-Type\": \"text/html\"});\n  response.write(\"<html>\");\n  response.write(\"<head><title>Node.js</title></head>\");\n  response.write(\"<body>Hello Web</body>\");\n  response.write(\"</html>\");\n  response.end();\n}).listen(9999);\n```", "```js\nnode helloweb.js\n\n```", "```js\nvar http = require(\"http\");\n```", "```js\nhttp.createServer([requestListener]);\n```", "```js\nhttp.createServer(function(request, response) {\n  response.writeHead(200, {\"Content-Type\": \"text/html\"});\n  response.write(\"<html>\");\n  response.write(\"<head><title>Node.js JS</title></head>\");\n  response.write(\"<body>Hello Web</body>\");\n  response.write(\"</html>\");\n  response.end();\n});\n```", "```js\nresponse.writeHead(statusCode, [reasonPhrase], [headers]);\n```", "```js\nresponse.writeHead(200, {\"Content-Type\": \"text/html\"});\n```", "```js\nresponse.write(chunk, [encoding]);\n```", "```js\nresponse.write(\"<html>\");\nresponse.write(\"<head><title>Node.js JS</title></head>\");\nresponse.write(\"<body>Hello Web</body>\");\nresponse.write(\"</html>\");\n```", "```js\nresponse.end([data], [encoding]);\n```", "```js\nresponse.end();\n```", "```js\nlisten(9999);\n```", "```js\nvar http = require(\"http\");\nvar url = require(\"url\");\n\nfunction onRequest(request, response) {\n  var pathname = url.parse(request.url).pathname;\n  console.log(\"Request for \" + pathname + \" received.\");\n  if(pathname === \"/start\"){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Hello\");\n    response.end();\n  }else if(pathname === \"/finish\"){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Goodbye\");\n    response.end();\n  }else{\n    response.writeHead(404, {\"Content-Type\": \"text/plain\"});\n    response.end(\"404 Not Found\");\n  }\n}\n\nhttp.createServer(onRequest).listen(9999);\nconsole.log(\"Server has started.\");\n```", "```js\nnode routing.js\n\n```", "```js\nvar pathname = url.parse(request.url).pathname;\n```", "```js\n  if(pathname === \"/start\"){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Hello\");\n    response.end();\n  }else if(pathname === \"/finish\"){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Goodbye\");\n    response.end();\n  }\n```", "```js\n    response.writeHead(404, {\"Content-Type\": \"text/plain\"});\n    response.end(\"404 Not Found\");\n```", "```js\nvar http = require(\"http\");\nvar url = require(\"url\");\n\nvar route = { \n  routes : {}, \n  for: function(path, handler){\n    this.routes[path] = handler;\n  }\n};\n\n  route.for(\"/start\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Hello\");\n    response.end();\n  });\n\n  route.for(\"/finish\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Goodbye\");\n    response.end();\n  });\n\nfunction onRequest(request, response) {\n  var pathname = url.parse(request.url).pathname;\n  console.log(\"Request for \" + pathname + \" received.\");\n  if(typeof route.routes[pathname] ==='function'){\n    route.routes[pathname](request, response);\n  }else{\n    response.writeHead(404, {\"Content-Type\": \"text/plain\"});\n    response.end(\"404 Not Found\");\n  }\n}\n\nhttp.createServer(onRequest).listen(9999);\nconsole.log(\"Server has started.\");\n```", "```js\nnode resources.js\n\n```", "```js\nvar route = {\n  routes : {},\n  for: function(path, handler){\n    this.routes[path] = handler;\n  }\n}\n\nroute.on(\"/start\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Hello\");\n    response.end();\n});\n\nroute.on(\"/finish\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Goodbye\");\n    response.end();\n});\n```", "```js\nif(typeof(route.routes[pathname])==='function')\n```", "```js\nroute.routes[pathname](request, response);\n```", "```js\nroute.on(\"/newpath\", function(request, response){ \n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"new response\");\n    response.end();\n});\n```", "```js\nvar http = require(\"http\");\nvar url = require(\"url\");\nvar route = {\n  routes : {}, \n  for: function(method, path, handler){\n    this.routes[method + path] = handler;\n  }\n}\n\n  route.for(\"GET\", \"/start\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Hello\");\n    response.end();\n  });\n\n  route.for(\"GET\", \"/finish\", function(request, response){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(\"Goodbye\");\n    response.end();\n  });\n\nfunction onRequest(request, response) {\n  var pathname = url.parse(request.url).pathname;\n  console.log(\"Request for \" + request.method + pathname +\" received.\");\n  if(typeof(route.routes[request.method +pathname])==='function'){\n    route.routes[request.method + pathname](request, response);\n  }else{\n    response.writeHead(404, {\"Content-Type\": \"text/plain\"});\n    response.end(\"404 Not Found\");\n  }\n}\n\nhttp.createServer(onRequest).listen(9999);\nconsole.log(\"Server has started.\");\n```", "```js\n  route.on(\"POST\", \"/echo\", function(request, response){\n    var incoming = \"\";\n    request.on('data', function(chunk) {\n      incoming += chunk.toString();\n    });\n\n    request.on('end', function(){\n      response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n      response.write(incoming);\n      response.end();\n    });\n  });\n```", "```js\n    request.on('data', function(chunk) {\n      incoming += chunk.toString();\n    });\n```", "```js\n    request.on('end', function(){\n      response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n      response.write(incoming);\n      response.end();\n    });\n```", "```js\n  route.on(\"GET\", \"/echo\", function(request, response){\n    var body = '<html>' + \n    '<head><title>Node.js Echo</title></head>' + \n    '<body>' + \n    '<form method=\"POST\">' + \n    '<input type=\"text\" name=\"msg\"/>' + \n    '<input type=\"submit\" value=\"echo\"/>' + \n    '</form>' + \n    '</body></html>';\n\n    response.writeHead(200, {\"Content-Type\": \"text/html\"});\n    response.write(body);\n    response.end();\n  });\n```", "```js\nvar http = require(\"http\");\nvar url = require(\"url\");\n\nfunction onRequest(request, response) {\n  var pathname = url.parse(request.url).pathname;\n  console.log(\"Request for \" + request.method + pathname +\" received.\");\n  if(typeof(routes[request.method + pathname])==='function'){\n    routes[request.method + pathname](request, response);\n  }\n  else{\n    response.writeHead(404, {\"Content-Type\": \"text/plain\"});\n    response.end(\"404 Not Found\");\n  }\n}\n\nvar routes = {};\n\nexports.forRoute = function(method, path, handler){\n  routes[method + path] = handler;\n};\n\nexports.start = function(){\n  http.createServer(onRequest).listen(9999);\n  console.log(\"Server has started.\");\n};\n```", "```js\n  if(typeof(routes[request.method + pathname])==='function'){\n    routes[request.method + pathname](request, response);\n  }\n```", "```js\nexports.forRoute = function(method, path, handler){\n  routes[method + path] = handler;\n};\n\nexports.start = function(){\n  http.createServer(onRequest).listen(9999);\n  console.log(\"Server has started.\");\n}\n```", "```js\nvar server = require(\"./server.js\");\nserver.forRoute(\"GET\", \"/start\", function(request, response){\n  response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n  response.write(\"Hello\");\n  response.end();\n});\n\nserver.forRoute(\"GET\", \"/finish\", function(request, response){\n  response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n  response.write(\"Goodbye\");\n  response.end();\n});\n\nserver.forRoute(\"POST\", \"/echo\", function(request, response){\n\n  var incoming = \"\";\n\n  request.on('data', function(chunk) {\n    incoming += chunk.toString();\n  });\n\n  request.on('end', function(){\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.write(incoming);\n    response.end();\n  });\n});\n\nserver.forRoute(\"GET\", \"/echo\", function(request, response){\n  var body = '<html>' + \n  '<head><title>Node.js Echo</title></head>' + \n  '<body>' + \n  '<form method=\"POST\">' + \n  '<input type=\"text\" name=\"msg\"/>' + \n  '<input type=\"submit\" value=\"echo\"/>' + \n  '</form>' + \n  '</body></html>';\n\n  response.writeHead(200, {\"Content-Type\": \"text/html\"});\n  response.write(body);\n  response.end();\n});\n\nserver.start();\n```", "```js\nvar server = require(\"./server.js\");\n```", "```js\nserver.start();\n```", "```js\nvar path = require('path');\nvar fs = require('fs');\n```", "```js\nvar root = __dirname;\n```", "```js\nvar serveStatic = function(response, file){\n  var fileToServe = path.join(root, file);\n  var stream = fs.createReadStream(fileToServe);\n\n  stream.on('data', function(chunk){\n    response.write(chunk);\n  });\n\n  stream.on('end', function(){\n    response.end();\n  });\n}\n```", "```js\n  var fileToServe = path.join(root, file);\n```", "```js\n  var stream = fs.createReadStream(fileToServe);\n```", "```js\n stream.on('data', function(chunk){\n    response.write(chunk);\n  });\n```", "```js\n  stream.on('end', function(){\n    response.end();\n  });\n```", "```js\nserver.forRoute(\"GET\", \"/echo\", function(request, response){\n    serveStatic(response, \"echo.html\");\n});\n```", "```js\n<html>\n  <head>\n    <title>Node.js Echo</title>\n  </head>\n  <body>\n    <form method=\"POST\">\n      <input type=\"text\" name=\"msg\"/>\n      <input type=\"submit\" value=\"echo\"/>\n    </form>\n  </body>\n</html>\n```", "```js\nvar serveStatic = function(response, file){\n  var fileToServe = path.join(root, file);\n  var stream = fs.createReadStream(fileToServe);\n  stream.pipe(response);\n}\n```", "```js\nsudo npm install -g express\n\n```", "```js\nexpress hello-express\n\n```", "```js\n{\n  \"name\": \"application-name\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node app\"\n  },\n  \"dependencies\": {\n    \"express\": \"3.1.0\",\n    \"jade\": \"*\"\n  }\n}\n```", "```js\nnpm install\n\n```", "```js\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.get('/', routes.index);\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```", "```js\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path');\n```", "```js\nvar app = express();\n```", "```js\napp.configure(function(){\n\n});\n```", "```js\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n```", "```js\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n```", "```js\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n```", "```js\napp.get('/', routes.index);\n```", "```js\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```", "```js\nexports.index = function(req, res){\n  res.render('index', { title: 'Express' });\n};\n```", "```js\ndoctype 5\nhtml\n  head\n    title= title\n    link(rel='stylesheet', href='/stylesheets/style.css')\n  body\n    block content\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>{TITLE}</title>\n    <link rel=\"stylesheet\" href=\"/stylesheets/style.css\" />\n  </head>\n  <body>{CONTENT}</body>\n</html>\n```", "```js\n    title= title\n```", "```js\n    block content\n```", "```js\nextends layout\nblock content\n  h1= title\n  p Welcome to #{title}\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Express</title>\n    <link rel=\"stylesheet\" href=\"/stylesheets/style.css\" />\n  </head>\n  <body>\n    <h1>Express</h1>\n    <p>Welcome to Express</p>\n  </body>\n</html>\n```", "```js\nnpm start\n\n```"]