- en: Chapter 6. Inspecting Code with Firebug
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章. 使用 Firebug 检查代码
- en: '*This chapter shows you how to inspect your code. Aptana Studio itself does
    not provide features for inspecting code but nearly every browser provides one
    or more good tools for doing this. In this chapter, we will look at how you can
    do this with the Firefox extension, Firebug.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*本章将向您展示如何检查您的代码。Aptana Studio 本身不提供检查代码的功能，但几乎每个浏览器都提供了一到多个用于此目的的优秀工具。在本章中，我们将探讨如何使用
    Firefox 扩展 Firebug 来实现这一点。*'
- en: 'In this chapter we will take a look in detail at the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细探讨以下内容：
- en: What is Firebug
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Firebug
- en: Inspecting the source of a website
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查网站的源代码
- en: Inspecting and editing HTML code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查和编辑 HTML 代码
- en: Inspecting and editing CSS code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查和编辑 CSS 代码
- en: Using the Firebug console
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Firebug 控制台
- en: Profiling code performance
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析代码性能
- en: What is Firebug
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Firebug
- en: Firebug is one of the most popular extensions for Firefox and helps you to inspect
    and debug websites. It was downloaded more than 3 million times and is rated with
    5 stars on the [addons.mozilla.org](http://addons.mozilla.org) website. The [addons.mozilla.org](http://addons.mozilla.org)
    website has a great collection of extensions, and here you can get almost any
    Firefox extension.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 是 Firefox 最受欢迎的扩展之一，它帮助您检查和调试网站。它已被下载超过 300 万次，并在 [addons.mozilla.org](http://addons.mozilla.org)
    网站上获得 5 星评价。该 [addons.mozilla.org](http://addons.mozilla.org) 网站拥有大量的扩展，您几乎可以在这里找到任何
    Firefox 扩展。
- en: 'Firebug is constantly being developed and contains many useful features such
    as the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 正在持续开发中，并包含许多有用的功能，例如以下这些：
- en: A **Console** module where Firebug lists errors, warnings, and traces from JavaScript,
    CSS, and so on.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **控制台** 模块，其中 Firebug 列出来自 JavaScript、CSS 等的错误、警告和跟踪信息。
- en: An **HTML** module where you can inspect and edit the HTML code of the currently
    displayed website.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **HTML** 模块，您可以在其中检查和编辑当前显示网站的 HTML 代码。
- en: A **CSS** module where you can inspect and edit the CSS code of the currently
    displayed website.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **CSS** 模块，您可以在其中检查和编辑当前显示网站的 CSS 代码。
- en: A **Script** module where you can inspect and debug the JavaScript code of the
    currently displayed website.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **脚本** 模块，您可以在其中检查和调试当前显示网站的 JavaScript 代码。
- en: A **DOM** module where you can inspect and change the **Document Object** **Model**,
    abbreviated as **DOM**, from the currently displayed website.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **DOM** 模块，您可以在其中检查和更改当前显示网站的 **文档对象模型**（DOM）。
- en: A **Network** module where you can monitor all network activities and inspect
    their requests and responses.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 **网络** 模块，您可以在其中监控所有网络活动并检查其请求和响应。
- en: You can download Firebug at [http://getfirebug.com/](http://getfirebug.com/),
    where you will always find the actual version and much useful stuff such as documentation
    or community support.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [http://getfirebug.com/](http://getfirebug.com/) 下载 Firebug，在那里您将始终找到实际版本以及许多有用的东西，如文档或社区支持。
- en: Time for action – installing Firebug
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 – 安装 Firebug
- en: Before we can start, we need to install Firebug.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要安装 Firebug。
- en: Start Firefox and navigate to [http://getfirebug.com](http://getfirebug.com),
    and then click on **Install** and after that on **Download**; or navigate directly
    to [https://addons.mozilla.org/en-US/firefox/addon/firebug/](https://addons.mozilla.org/en-US/firefox/addon/firebug/).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Firefox 并导航到 [http://getfirebug.com](http://getfirebug.com)，然后点击 **安装** 并之后点击
    **下载**；或者直接导航到 [https://addons.mozilla.org/en-US/firefox/addon/firebug/](https://addons.mozilla.org/en-US/firefox/addon/firebug/)。
- en: Click on **+Add to Firefox**.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **添加到 Firefox**。
- en: Confirm the installation by clicking on **Install**.![Time for action – installing
    Firebug](img/8246_06_01.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **安装** 来确认安装。[![操作时间 – 安装 Firebug](img/8246_06_01.jpg)]
- en: Finally, restart Firefox.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，重新启动 Firefox。
- en: '*What just happened?*'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have just installed the Firebug extension into our Firefox. After a successful
    installation you will find the Firebug menu at the top-right of your Firefox window.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚将 Firebug 扩展安装到 Firefox 中。安装成功后，您将在 Firefox 窗口的右上角找到 Firebug 菜单。
- en: '![What just happened?](img/8246_06_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_06_02.jpg)'
- en: Now we can start to explore our websites and web applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以开始探索我们的网站和 Web 应用程序。
- en: As you can see in the previous image, the Firefox icon is currently grayed out.
    This means that Firebug is currently disabled. You can click on this icon in order
    to open and activate Firebug. As an alternative and faster way to do this, you
    can just press *F12*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的图片中看到的，Firefox 图标目前是灰色的。这意味着 Firebug 目前是禁用的。您可以点击此图标以打开和激活 Firebug。作为替代和更快的方式，您只需按下
    *F12*。
- en: In case Firebug is active, the icon is displayed as colored.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Firebug处于活动状态，图标将以彩色显示。
- en: Time for action – enabling and configuring Firebug
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——启用和配置Firebug
- en: So, let's start working with Firebug and see how to enable and disable the main
    modules of Firebug.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们开始使用Firebug，看看如何启用和禁用Firebug的主要模块。
- en: Open Firefox and surf to any website.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Firefox并浏览任何网站。
- en: Press *F12* to open Firebug.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*F12*以打开Firebug。
- en: Firebug opens by default at the bottom of Firefox and provides you with a main
    menu in the form of the Firebug symbol on the left-hand side. In the top-center
    of Firebug, you will find a tab bar that allows you to switch between Firebug's
    main modules.![Time for action – enabling and configuring Firebug](img/8246_06_03.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Firebug默认在Firefox的底部打开，并在左侧以Firebug符号的形式提供一个主菜单。在Firebug的顶部中心，你会找到一个标签栏，允许你在Firebug的主要模块之间切换。![行动时间——启用和配置Firebug](img/8246_06_03.jpg)
- en: Each module tab, when activated, has in addition its own menu where you can
    activate some specific settings (have a look at the small triangle on the right-hand
    side of the tab label).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当激活每个模块标签时，它还有一个自己的菜单，你可以在这里激活一些特定的设置（看看标签标签右侧的小三角形）。
- en: You must also know that the **Console**, **Script**, and **Net** modules can
    be enabled and disabled for performance reasons. If the label of this tab is gray,
    the module is currently disabled; and if the label is black, it is enabled. All
    three modules can be enabled and disabled by their respective menus. Try it yourself!![Time
    for action – enabling and configuring Firebug](img/8246_06_04.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还必须知道，出于性能原因，**控制台**、**脚本**和**网络**模块可以被启用和禁用。如果此标签的标签是灰色，则模块当前已禁用；如果标签是黑色，则已启用。所有三个模块都可以通过它们各自的菜单启用和禁用。试试看吧！！![行动时间——启用和配置Firebug](img/8246_06_04.jpg)
- en: Tip
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Disable unnecessary Firebug modules**'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**禁用不必要的Firebug模块**'
- en: Unfortunately, Firebug is a little bit of a memory eater. If you've enabled
    all Firebug modules, and perhaps even have many Firefox tabs open, Firefox will
    quickly use several hundred MB of memory. So better disable all Firebug features
    that you currently don't require.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很不幸，Firebug有点儿像内存吞噬者。如果你已经启用了所有Firebug模块，甚至可能打开了多个Firefox标签页，Firefox很快就会使用几百MB的内存。所以最好禁用你现在不需要的所有Firebug功能。
- en: '*What just happened?*'
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have opened the Firebug on any website and had a look at the possibilities
    for configuring Firebug and its tabs. In addition, we now know how we can enable
    and disable Firebug modules.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经打开了Firebug在任何网站上，并查看配置Firebug及其标签页的可能性。此外，我们现在知道如何启用和禁用Firebug模块。
- en: Tip
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Firebug in a separate window**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**独立窗口中的Firebug**'
- en: In order to open Firebug in its own window, just use the shortcut *Ctrl* + *F12*
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要在独立窗口中打开Firebug，只需使用快捷键*Ctrl* + *F12*
- en: Inspecting HTML code
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查HTML代码
- en: The first module that we want to view in detail is the HTML tab. It's not the
    first in the row of Firebug tabs, but it gives us a good start to working with
    Firebug.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要详细查看的第一个模块是HTML标签。它不是Firebug标签行中的第一个，但它为我们使用Firebug提供了一个良好的起点。
- en: In the first step, we will inspect the HTML code of a website and try to select
    a particular HTML tag.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一步中，我们将检查网站的HTML代码，并尝试选择特定的HTML标签。
- en: Time for action – inspecting HTML code
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——检查HTML代码
- en: Open Firefox and navigate to any website, such as [google.com](http://google.com).
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Firefox并导航到任何网站，例如[google.com](http://google.com)。
- en: Press *F12* in order to open Firebug.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*F12*以打开Firebug。
- en: Select the HTML tab.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择HTML标签。
- en: In the bottom-left, you will find the complete HTML code of the currently loaded
    site.![Time for action – inspecting HTML code](img/8246_06_05.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左下角，你可以找到当前加载站点的完整HTML代码。![行动时间——检查HTML代码](img/8246_06_05.jpg)
- en: Here, you are able to navigate through the HTML tree by expanding nodes by clicking
    on the small plus icons.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，你可以通过点击小加号图标来展开节点，在HTML树中进行导航。
- en: The HTML nodes you hover over with the mouse within the HTML tree will be highlighted
    blue in the browser window. If the hovered element has a margin (just like the
    top margin in the preceding screenshot), it will be highlighted yellow; and if
    the hovered element has a padding (just like the bottom padding in the screenshot),
    it will be highlighted purple.![Time for action – inspecting HTML code](img/8246_06_06.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在HTML树中，鼠标悬停的HTML节点将在浏览器窗口中突出显示为蓝色。如果悬停的元素有边距（就像前面的截图中的顶部边距一样），它将被突出显示为黄色；如果悬停的元素有填充（就像截图中的底部填充一样），它将被突出显示为紫色。![行动时间——检查HTML代码](img/8246_06_06.jpg)
- en: Select the body element by doing a simple click on it. If you select an element,
    the right-hand side area of the **HTML** module gets the information about this
    element. This area is also divided by a little tab group, where you find the **Style**
    tab that we are using in the inspecting CSS section in this chapter, a **Computed**
    tab that you see in the following screenshot (which contains a list of all the
    current attributes from the element), a **Layout** tab where you can inspect and
    adjust the dimensions of the selected element (margin, border, padding, and the
    element itself), and finally the **DOM** tab where you can inspect all DOM attributes.![Time
    for action – inspecting HTML code](img/8246_06_08.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过简单点击来选择body元素。如果你选择了一个元素，**HTML** 模块的右侧区域将显示有关该元素的信息。这个区域也被一个小标签组分隔，其中你可以找到我们在这个章节的检查CSS部分使用的
    **样式** 标签，一个 **计算** 标签，你可以在下面的屏幕截图中看到（它包含来自元素的当前所有属性的列表），一个 **布局** 标签，你可以检查和调整所选元素的尺寸（边距、边框、填充以及元素本身），最后是
    **DOM** 标签，你可以检查所有DOM属性。![行动时间 – 检查HTML代码](img/8246_06_08.jpg)
- en: '*What just happened?*'
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么事？*'
- en: We have used the **HTML** module of the Firebug for inspecting a website. Therefore,
    we opened the Firebug, selected the **HTML** module, and additionally selected
    the HTML element that we wanted to inspect. We have seen the complete HTML tree
    of the website; and further all HTML attributes in the **Computed** tab, the layout
    dimensions in the **Layout** tab, and the DOM attributes in the **DOM** tab.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使用了Firebug的 **HTML** 模块来检查一个网站。因此，我们打开了Firebug，选择了 **HTML** 模块，并且还选择了我们想要检查的HTML元素。我们看到了网站的完整HTML树；进一步地，在
    **计算** 标签中看到了所有HTML属性，在 **布局** 标签中看到了布局尺寸，在 **DOM** 标签中看到了DOM属性。
- en: Tip
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Why so some attributes in the HTML view sometimes blink in yellow?**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么HTML视图中的一些属性有时会以黄色闪烁？**'
- en: If you're inspecting some JavaScript-driven website and there are attributes
    in the current scope of the viewed HTML code, which just at that moment is manipulated
    by JavaScript, Firebug lets these attributes blink in yellow.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在检查一个由JavaScript驱动的网站，并且当前查看的HTML代码的作用域内有属性，这些属性在那个时刻正被JavaScript操作，Firebug允许这些属性以黄色闪烁。
- en: Now we want to go forward and take a look at how we can edit or delete some
    HTML code by using Firebug.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们想要看看如何使用Firebug来编辑或删除一些HTML代码。
- en: Time for action – using the mouse selector for editing HTML
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 使用鼠标选择器编辑HTML
- en: We will start at the same position where the previous *Time for action* section
    ended. So, open Firefox, navigate to any website, and press *F12* in order to
    open Firebug.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从上一个 *行动时间* 部分结束的位置开始。所以，打开Firefox，导航到任何网站，然后按 *F12* 以打开Firebug。
- en: Now, if you're searching a special element within the website, you can also
    use the mouse selector. This is a small button in the form of a blue rectangle
    with a mouse inside, on the right-hand side of the Firebug main menu. Just activate
    the button and move the mouse over the website in order to find the element you
    want to inspect. Once clicked, the element will be selected in Firebug and the
    mouse selector button gets disabled.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你在网站上搜索特定的元素，你也可以使用鼠标选择器。这是一个蓝色的矩形按钮，里面有一个鼠标图标，位于Firebug主菜单的右侧。只需激活按钮，将鼠标移到网站上，以找到你想要检查的元素。一旦点击，该元素将在Firebug中被选中，并且鼠标选择器按钮将被禁用。
- en: When you have selected an element, you have the option to right-click for opening
    a context-sensitive context menu. In this context menu, Firebug provides you with
    several actions for the selected HTML element. You can attach new attributes,
    edit the element node, delete the complete node, or perform other actions.![Time
    for action – using the mouse selector for editing HTML](img/8246_06_07.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你选中一个元素时，你可以右键点击以打开上下文相关的菜单。在这个上下文菜单中，Firebug为你提供了对所选HTML元素的一些操作。你可以附加新的属性，编辑元素节点，删除整个节点，或执行其他操作。![行动时间
    – 使用鼠标选择器编辑HTML](img/8246_06_07.jpg)
- en: At this point we use the mouse-selector for selecting the country name to the
    right of the Google logo. After this, we perform a right-click on the selected
    `div` node and click on the **Edit HTML** button.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，我们使用鼠标选择器选择Google标志右侧的国家名称。之后，我们在选中的 `div` 节点上右键单击，并点击 **编辑HTML** 按钮。
- en: Now we are able to edit the complete HTML node with all the other nodes inside.
    For a little test, we change the CSS attribute's color to red. By changing the
    HTML code, Firebug refreshes the website in real time, so you'll get any results
    of your changes directly.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们能够编辑包含所有其他节点的完整 HTML 节点。为了进行一个小测试，我们将 CSS 属性的颜色更改为红色。通过更改 HTML 代码，Firebug
    会实时刷新网站，因此您可以直接看到更改的结果。
- en: If you have made all your changes, just press the **Edit** button in the top-left
    to finish the editing.![Time for action – using the mouse selector for editing
    HTML](img/8246_06_09.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已经完成了所有更改，只需在左上角按 **Edit** 按钮即可完成编辑。![实践时间 – 使用鼠标选择器编辑 HTML](img/8246_06_09.jpg)
- en: '*What just happened?*'
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We have selected a special element from a website and changed it. We have seen
    how Firebug shows us the changes in real time in the current website.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经从一个网站中选择了一个特殊元素并对其进行了更改。我们看到了 Firebug 如何在当前网站中实时显示这些更改。
- en: In the same way, as we currently edit the HTML code, you are also able to delete
    nodes or just quickly add a single attribute.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，就像我们现在编辑 HTML 代码一样，您也可以删除节点或快速添加单个属性。
- en: A frequent workflow is therefore to select an HTML node and edit it, and after
    editing just copying the HTML node by right-clicking on it. The copied HTML node,
    which is now contained in the clipboard, can simply be pasted into your source
    file.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个常见的流程是选择一个 HTML 节点并编辑它，编辑完成后，只需通过右键单击它来复制 HTML 节点。现在包含在剪贴板中的复制的 HTML 节点可以简单地粘贴到您的源文件中。
- en: Inspecting the CSS code
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查 CSS 代码
- en: For inspecting and editing the CSS code, Firebug mainly provides two methods.
    In the first, there is the **Style** tab of the **HTML** module. Here you can
    inspect and adjust the CSS code of the currently selected HTML element. On the
    other hand, you can just use the **CSS** module. In the **CSS** module, you are
    able to inspect and edit the CSS code directly within the structure of the single
    CSS file.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查和编辑 CSS 代码，Firebug 主要提供了两种方法。第一种方法是在 **HTML** 模块的 **Style** 选项卡中。在这里，您可以检查和调整当前选定的
    HTML 元素的 CSS 代码。另一方面，您也可以直接使用 **CSS** 模块。在 **CSS** 模块中，您可以直接在单个 CSS 文件的结构中检查和编辑
    CSS 代码。
- en: At this point, we will take a look at both variants of working with CSS.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们将查看两种处理 CSS 的方法。
- en: Time for action – editing the CSS code by using the HTML module
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践时间 – 使用 HTML 模块编辑 CSS 代码
- en: We start again just as we did in the previous *Time for action* section. So,
    open Firefox, navigate to any website (we use the Google site again), and press
    *F12* in order to open Firebug in the **HTML** module.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们就像在之前的 *Time for action* 部分做的那样重新开始。所以，打开 Firefox，导航到任何网站（我们再次使用 Google 网站），然后按
    *F12* 以在 **HTML** 模块中打开 Firebug。
- en: Select the country name in the right of the Google logo by right clicking on
    it.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击 Google 标志右侧的国家名称来选择国家名称。
- en: Now Firebug displays all the information about the current HTML element. We
    select the **Style** tab and take a look at the CSS information in detail.![Time
    for action – editing the CSS code by using the HTML module](img/8246_06_10.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在 Firebug 显示了当前 HTML 元素的所有信息。我们选择 **Style** 选项卡，并详细查看 CSS 信息。![实践时间 – 使用 HTML
    模块编辑 CSS 代码](img/8246_06_10.jpg)
- en: As we can see in the **Style** tab, the element gets an instruction to change
    the font size by three times. You can see in detail which property of the element
    comes from where. You can also see in each element block where it has been inherited
    from; and in each selector section, in which file and line number the selector
    is defined. So, from the lower side to the upper side the instructions will get
    overwritten.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如我们在 **Style** 选项卡中所见，元素接收到一个指令，将其字体大小增加三倍。您可以看到元素的哪个属性来自哪里。您还可以看到在每个元素块中它从哪里继承而来；在每个选择器部分中，选择器是在哪个文件和行号定义的。因此，从下到上，指令将被覆盖。
- en: Now, when we want to adjust the horizontal position of the label, we just have
    to double-click on the value of the top definition. The field becomes writable
    and you are able to adjust it. Like all the other changes, the result will be
    visible in real-time.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们想要调整标签的水平位置时，我们只需双击顶部定义的值。该字段变为可写状态，您就可以调整它。就像所有其他更改一样，结果将实时可见。
- en: Tip
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Adjusting values**'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**调整值**'
- en: If you want to adjust a value step-by-step, you can also use the up and down
    arrow keys on your keyboard.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您想逐步调整值，您也可以使用键盘上的上箭头和下箭头键。
- en: When you're done with changing the CSS attribute, you can also select the CSS
    code and copy and paste it into your source code file.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你完成修改 CSS 属性后，你也可以选择 CSS 代码并将其复制粘贴到你的源代码文件中。
- en: '*What just happened?*'
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We inspected the CSS instructions of a special HTML element and had a look at
    how we can adjust these values easily.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查了特殊 HTML 元素的 CSS 指令，并查看我们如何轻松调整这些值。
- en: Now we want to look at the other possibility, to inspect the CSS code with Firebug.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想看看另一种可能性，即使用 Firebug 检查 CSS 代码。
- en: Time for action – editing the CSS code by using the CSS module
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践时间 – 使用 CSS 模块编辑 CSS 代码
- en: We start again just as we did in the previous *Time for action* section. Therefore,
    we open Firefox and, in this example, load the [aptana.com](http://aptana.com)
    website. When the site is completely loaded, press *F12* in order to open Firebug
    in the **CSS** module.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将再次从上一个 *实践时间* 部分开始。因此，我们打开 Firefox，在这个例子中，加载 [aptana.com](http://aptana.com)
    网站。当网站完全加载后，按 *F12* 以在 **CSS** 模块中打开 Firebug。
- en: In the head of the **CSS** module, you can see a file sector where currently
    the `aptana.css` file is selected. If there are more CSS files included in the
    website, you can change the displayed file.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **CSS** 模块的头部，你可以看到一个文件区域，其中当前已选择 `aptana.css` 文件。如果网站中包含更多 CSS 文件，你可以更改显示的文件。
- en: In the main area you will find the content of the selected CSS file. Like in
    the **Style** tab in the **HTML** module, you're able to change all attributes
    or add newly required attributes.![Time for action – editing the CSS code by using
    the CSS module](img/8246_06_11.jpg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主区域中，你可以找到所选 CSS 文件的内容。就像在 **HTML** 模块中的 **样式** 选项卡一样，你可以更改所有属性或添加新需要的属性。![实践时间
    – 使用 CSS 模块编辑 CSS 代码](img/8246_06_11.jpg)
- en: Finally, when you're done with editing the whole CSS file, just press *Ctrl*
    + *A* to select the complete CSS file, copy it with *Ctrl* + *C*, and paste it
    with *Ctrl* + *V* into your source code file within Aptana Studio.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，当你完成整个 CSS 文件的编辑后，只需按下 *Ctrl* + *A* 来选择整个 CSS 文件，使用 *Ctrl* + *C* 复制它，然后使用
    *Ctrl* + *V* 在 Aptana Studio 的源代码文件中粘贴它。
- en: '*What just happened?*'
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We have inspected the CSS code within the whole CSS file. Here you have seen
    that it's also possible to edit attributes in the whole file, and learned how
    to copy the complete CSS content so that you can paste the changed CSS code directly
    into the source code file.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查了整个 CSS 文件中的 CSS 代码。在这里，你看到也可以在整个文件中编辑属性，并学习了如何复制完整的 CSS 内容，以便你可以直接将更改后的
    CSS 代码粘贴到源代码文件中。
- en: Using the Firebug console
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Firebug 控制台
- en: The Firebug console allows you to read logged info, warnings, errors, and so
    on. For example, you could write `console.log()`, like we have seen in [Chapter
    4](ch04.html "Chapter 4. Debugging JavaScript"), *Debugging JavaScript*, into
    your JavaScript files in order to debug them.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 控制台允许你读取记录的信息、警告、错误等。例如，你可以像我们在 [第 4 章](ch04.html "第 4 章。调试 JavaScript")
    中看到的 *调试 JavaScript* 一样，将 `console.log()` 写入你的 JavaScript 文件中以调试它们。
- en: Let's take a look at how the console can help us by developing web applications.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看控制台如何通过开发 Web 应用程序来帮助我们。
- en: Time for action – using the Firebug console
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践时间 – 使用 Firebug 控制台
- en: We will start again just as we did in the previous *Time for action* section.
    Switch back to Firefox, navigate to the [aptana.com](http://aptana.com) website,
    and press *F12* in order to open Firebug in the Console module.![Time for action
    – using the Firebug console](img/8246_06_12.jpg)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将再次从上一个 *实践时间* 部分开始。切换回 Firefox，导航到 [aptana.com](http://aptana.com) 网站，并按
    *F12* 以在控制台模块中打开 Firebug。![实践时间 – 使用 Firebug 控制台](img/8246_06_12.jpg)
- en: In the head of the Console module you will find some buttons that allow you
    to filter the displayed messages.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制台模块的头部，你可以找到一些按钮，允许你过滤显示的消息。
- en: All messages are listed in the main area. As you can see, there is already a
    warning listed because the site uses a deprecated function.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有消息都列在主区域中。正如你所见，已经列出了一个警告，因为该网站使用了一个已弃用的函数。
- en: In the bottom area you're able to fire up your own actions in real time. This
    is sometimes very useful. You can trigger your own function or you can try jQuery
    selectors and can inspect which nodes are matched. Try it yourself by entering
    `console.log` `(document.title)`.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在底部区域，你可以实时触发自己的操作。这有时非常有用。你可以触发自己的函数，或者尝试 jQuery 选择器，并检查哪些节点被匹配。通过输入 `console.log`
    `(document.title)` 来亲自尝试。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Enter multiline commands**'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**输入多行命令**'
- en: If you need to enter a multiline—no problem. Just press the red triangle icon
    at the right of the command line, and the command line moves to the right into
    a multiline command line. Now you're also able to paste complete script lines
    at once into Firebug and execute them.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你需要输入多行——没问题。只需按住命令行右侧的红色三角形图标，命令行就会移动到右侧的多行命令行。现在你也能够一次性将完整的脚本行粘贴到 Firebug
    中并执行它们。
- en: Another nice feature is that the Console module provides a history of your commands.
    You can display the previous actions by clicking on the red list icon at the left
    of the command line. Additionally, you can use the up and down arrow keys, if
    the command line has the focus, to navigate through the previous history entries.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个不错的特性是，控制台模块提供了你的命令历史记录。你可以通过点击命令行左侧的红色列表图标来显示之前的操作。此外，如果你将焦点放在命令行上，可以使用上箭头和下箭头键导航到之前的记录。
- en: 'You can also write your own messages, errors, warnings, or just a debug message
    in the Console module. Firebug therefore provides four methods on the console
    object, shown as follows:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以在控制台模块中写入自己的消息、错误、警告或仅仅是调试信息。因此，Firebug 在控制台对象上提供了四个方法，如下所示：
- en: '`console.log(object[, object, …])`'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`console.log(object[, object, …])`'
- en: '`console.error(object[, object, …])`'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`console.error(object[, object, …])`'
- en: '`console.warning(object[, object, …])`'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`console.warning(object[, object, …])`'
- en: '`console.debug(object[, object, …])`'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`console.debug(object[, object, …])`'
- en: The last feature that we want to envisage here is the completion proposal (attention,
    this feature is only available by using the single line command line). If you
    write in the single line command line and you type `doc`, the Console will suggest
    an object or function you could have meant to type. If there is more than one
    successful suggestion, you are able to use the up and down arrow keys on your
    keyboard to select the one you need. If your required object or function is implied,
    just press the *Tab* key to select it.![Time for action – using the Firebug console](img/8246_06_13.jpg)
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在这里想要展望的最后一个特性是完成建议（注意，此功能仅通过使用单行命令行可用）。如果你在单行命令行中输入 `doc`，控制台将建议你可能想要输入的对象或函数。如果有多个成功的建议，你可以使用键盘上的上箭头和下箭头键来选择你需要的。如果你的所需对象或函数已经暗示，只需按
    *Tab* 键来选择它。![使用 Firebug 控制台的时间到了](img/8246_06_13.jpg)
- en: Tip
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Did you know?**'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**你知道吗？**'
- en: The Console module is also able to calculate. If you're currently creating a
    layout, and you have to calculate properties or dimensions, you don't have to
    start your systems calculator. Just use the Firebug console.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制台模块还能够进行计算。如果你正在创建布局，并且需要计算属性或尺寸，你不需要启动你的系统计算器。只需使用 Firebug 控制台即可。
- en: '*What just happened?*'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We have examined the main functionalities of the Console module. Now you should
    know how you can filter the output and fire up JavaScript commands at runtime.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经检查了控制台模块的主要功能。现在你应该知道如何过滤输出并在运行时执行 JavaScript 命令。
- en: Profiling code performance
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码性能分析
- en: While developing goes forward and your web application gets larger and larger,
    the performance might slow down more and more. This results from the increasing
    amount of JavaScript code that must be executed by the browser.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的开发工作向前推进，你的网络应用越来越大时，性能可能会越来越慢。这是由于浏览器必须执行的 JavaScript 代码量不断增加所导致的。
- en: This is the best moment to think about optimizing your code. Therefore, you
    have to profile many parts of your source code in order to find out which functions
    or code blocks are the largest performance eaters.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是思考优化代码的最佳时刻。因此，你必须对你的源代码的许多部分进行性能分析，以找出哪些函数或代码块是最大的性能消耗者。
- en: Firebug provides you with some useful functionalities that you can use to localize
    these performance eaters.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 提供了一些有用的功能，你可以使用它们来定位这些性能消耗者。
- en: A simple way to find out how good the performance of a single code block or
    function is to wrap it into a `time` and `timeEnd` function. How we do this exactly
    will be discussed in the following section.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出单个代码块或函数的性能如何，一个简单的方法是将它包裹在 `time` 和 `timeEnd` 函数中。我们具体是如何做到的，将在下一节中讨论。
- en: Time for action – profiling code performance by using console.time()
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `console.time()` 进行代码性能分析的时间到了
- en: In this section, we will discuss the steps for profiling code performance by
    using the `console.time()` function.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论使用 `console.time()` 函数进行代码性能分析的步骤。
- en: 'First, we need some JavaScript code which we can profile. For this simple example
    we just use a small function (with some actions that require a little bit of time),
    like the following code:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要一些可以分析的 JavaScript 代码。在这个简单的例子中，我们只使用一个小函数（包含一些需要一点时间的操作），如下面的代码所示：
- en: '[PRE0]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We embed this function into an HTML file.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将这个函数嵌入到一个 HTML 文件中。
- en: When we now want to determine the execution time, we have to wrap the function
    call into two console functions. The first is for registering the start time and
    will be set by `console.time('unique_identifier')`. Pay attention to the first
    parameter; this must be a unique identifier for each profiling.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们现在想要确定执行时间时，我们必须将函数调用包裹在两个控制台函数中。第一个是用于注册开始时间，将由 `console.time('unique_identifier')`
    设置。请注意第一个参数；这必须是每个分析的唯一标识符。
- en: After that, we call the function which we will profile.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们调用我们将要分析的函数。
- en: 'Finally, we have to register that our time measurement is done. Therefore,
    we have to call the second function, which requires the same unique identifier
    as the first function `console.timeEnd(''unique_identifier'')`. After all, our
    code should look something like the following code:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们必须注册我们的时间测量已完成。因此，我们必须调用第二个函数，它需要与第一个函数相同的唯一标识符 `console.timeEnd('unique_identifier')`。毕竟，我们的代码应该看起来像以下代码：
- en: '[PRE1]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, we open our HTML file within Firefox and open Firebug by pressing *F12*,
    and open the Console module.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们在 Firefox 中打开我们的 HTML 文件，并通过按 *F12* 打开 Firebug，然后打开控制台模块。
- en: Maybe we have to enable the Console. If so, we have to reload our site by pressing
    *F5*.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能我们需要启用控制台。如果是这样，我们必须通过按 *F5* 重新加载我们的网站。
- en: Finally, we take a look at the Console output and see that the execution of
    our block has taken 4 milliseconds.![Time for action – profiling code performance
    by using console.time()](img/8246_06_14.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们查看控制台输出，看到我们的代码块执行耗时 4 毫秒。![行动时间 - 使用 console.time() 分析代码性能](img/8246_06_14.jpg)
- en: '*What just happened?*'
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have wrapped our function call into the functions `console.time()` and `console.timeEnd()`
    in order to determine the exact execution time for our function. It is important
    that both the wrapper functions get the same unique parameter, which the Console
    needs to identify the timer.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将函数调用包裹在 `console.time()` 和 `console.timeEnd()` 函数中，以确定我们的函数的确切执行时间。重要的是这两个包装函数必须获得相同的唯一参数，这是控制台用来识别计时器的。
- en: Another way to get more information about your application and where the most
    performance got lost is to profile some code block or function with the `console.profile`
    function.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种获取更多关于您的应用程序和性能损失最严重的位置的信息的方法是使用 `console.profile` 函数分析一些代码块或函数。
- en: Let's take a look at it in the following section.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在下一节中看看。
- en: Time for action – profiling code performance by using console.profile()
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用 console.profile() 分析代码性能
- en: In this section, we will discuss the steps for profiling code performance by
    using the `console.profile()` function.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论使用 `console.profile()` 函数分析代码性能的步骤。
- en: We grab the HTML file from the previous *Time for action* section and extend
    the JavaScript code.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从上一个“行动时间”部分获取 HTML 文件并扩展 JavaScript 代码。
- en: First, we move the `Math.random` function call into a separate function named
    `getRandom`. We do this in order to create more function calls within our loop
    function.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将 `Math.random` 函数调用移动到一个名为 `getRandom` 的单独函数中。我们这样做是为了在我们的循环函数中创建更多的函数调用。
- en: The `console.time` and `console.timeEnd` functions are no longer required; but
    don't delete these rows. The `console.profile` function works in a similar way.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`console.time` 和 `console.timeEnd` 函数不再需要；但不要删除这些行。`console.profile` 函数的工作方式类似。'
- en: So, we change the `console.time` function into a `console.profile` function.
    The unique identifier is still required, because you're able to run more profiles
    at the same time.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，我们将 `console.time` 函数更改为 `console.profile` 函数。唯一标识符仍然是必需的，因为您可以在同一时间运行多个分析。
- en: 'This step helps to Change the `console.timeEnd` function into a `console.profileEnd`
    function—and that''s it. After all these steps, your code should look something
    like the following:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这一步有助于将 `console.timeEnd` 函数更改为 `console.profileEnd` 函数——就这样。经过所有这些步骤，您的代码应该看起来像以下这样：
- en: '[PRE2]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now we will load our HTML file within Firefox and open Firebug by pressing *F12*
    and selecting the Console module.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将在 Firefox 中加载我们的 HTML 文件，并通过按 *F12* 并选择控制台模块来打开 Firebug。
- en: Maybe we have to enable the Console. If so, we have to reload our site by pressing
    *F5*.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能我们需要启用控制台。如果是这样，我们必须通过按 *F5* 重新加载我们的网站。
- en: Finally, we take a look at the Console output and see that our profiling code
    block has used 533 milliseconds and 101 function calls.![Time for action – profiling
    code performance by using console.profile()](img/8246_06_15.jpg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们查看控制台输出，看到我们的分析代码块使用了533毫秒和101次函数调用。![操作时间 - 使用console.profile()分析代码性能](img/8246_06_15.jpg)
- en: '*What just happened?*'
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have wrapped our function call into the `console.profile()` and `console.profileEnd()`
    functions. During the execution, the Console logs every function call between
    the `profile()` and `profileEnd()` functions and generates a complete profiling
    table where you can see which functions were called at which time, and how long
    they took.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将函数调用包装在`console.profile()`和`console.profileEnd()`函数中。在执行过程中，控制台记录`profile()`和`profileEnd()`函数之间的每个函数调用，并生成一个完整的分析表，你可以看到哪些函数在何时被调用，以及它们花费了多长时间。
- en: Tip
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Manually starting the profiling**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**手动启动分析**'
- en: You can also start a profiling process manually. If you take a look at the top
    buttons within the Console module, you will find a button called **Profile**.
    If you press it the first time, it will start a profiling process just like the
    `console.profile()` function. If you press it a second time, the profiling process
    stops and you get the profiling result in the Console output.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以手动启动分析过程。如果你查看控制台模块中的顶部按钮，你会找到一个名为**Profile**的按钮。如果你第一次按下它，它将启动一个分析过程，就像`console.profile()`函数一样。如果你第二次按下它，分析过程将停止，你将在控制台输出中获得分析结果。
- en: Have a go hero – inspecting a website in detail
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试英雄 - 详细检查网站
- en: Now your task is to select a website and open it within Firefox. Open the Firebug
    and start inspecting this website in detail. Have a look at how the HTML and CSS
    codes are structured. Also throw a closer look at how the individual CSS classes
    override the other CSS classes.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的任务是选择一个网站并在Firefox中打开它。打开Firebug并详细检查这个网站。查看HTML和CSS代码的结构。还要仔细查看单个CSS类如何覆盖其他CSS类。
- en: Play around with the different values and customize them in order to understand
    what they do. After you have explored the HTML code structure and CSS styles,
    take a look at the JavaScript codes within the site. Enable the profiling and
    examine which functions are called and so on.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试不同的值并自定义它们，以便了解它们的作用。在探索了HTML代码结构和CSS样式后，查看网站内的JavaScript代码。启用分析并检查哪些函数被调用等。
- en: Pop quiz
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: Q1\. Which keyboard shortcut opens Firebug?
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 哪个键盘快捷键可以打开Firebug？
- en: '*F7*'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*F7*'
- en: '*F12*'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*F12*'
- en: '*F13*'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*F13*'
- en: Q2\. Why is it better to disable unnecessary Firebug modules?
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 为什么禁用不必要的Firebug模块更好？
- en: It ensures good performance
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这确保了良好的性能
- en: It doesn't matter
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没关系
- en: It's better to enable all the modules
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最好启用所有模块
- en: Q3\. When you inspect an HTML file and hover over some HTML elements, what does
    the yellow and purple color mean in the highlighted elements?
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Q3\. 当你检查HTML文件并悬停在某些HTML元素上时，突出显示元素中的黄色和紫色颜色代表什么？
- en: There are no yellow or purple highlight colors
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有黄色或紫色突出显示颜色
- en: These colors display the distance to other elements
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些颜色显示与其他元素的距离
- en: The yellow highlight displays the margin of an element and the purple highlight
    displays the padding of an element
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 黄色突出显示显示元素的边距，紫色突出显示显示元素的填充
- en: Q4\. When will the change be visible after you have changed it within Firebug?
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Q4\. 你在Firebug中更改后，何时可以看到更改？
- en: After you have reloaded the page
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载页面后
- en: The change is immediately visible
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改立即可见
- en: After you have saved your changes
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的更改后
- en: Q5\. Why did you make the `console.time()` and `console.timeEnd()` functions
    and the `console.profile()` and `console.profileEnd()` functions the first parameter
    and unique identifier?
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Q5\. 你为什么将`console.time()`和`console.timeEnd()`函数以及`console.profile()`和`console.profileEnd()`函数的第一个参数和唯一标识符设置为？
- en: If you start multiple time or profile processes, Firebug needs them to identify
    which process has to stop when
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你多次启动或分析进程，Firebug需要它们来识别在何时停止哪个进程
- en: It's just a label and is not required
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它只是一个标签，不是必需的
- en: There's no parameter in these functions
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些函数中没有参数
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After reading this chapter, you should be able to inspect websites and web applications
    by using Firebug. In addition, you should know in detail how you can edit HTML
    elements, change their CSS attributes, and examine JavaScript code.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章后，你应该能够使用Firebug检查网站和Web应用程序。此外，你应该详细了解如何编辑HTML元素，更改它们的CSS属性，以及检查JavaScript代码。
- en: Now we want to go forward, and in the next chapter examine how we can work with
    JavaScript libraries and how we can integrate them in our project.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要向前迈进，在下一章中我们将探讨如何与 JavaScript 库协同工作以及如何将它们集成到我们的项目中。
