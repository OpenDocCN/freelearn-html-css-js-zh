["```js\n<!-- \nmarkup code here \n-->\n```", "```js\n                <label><input type=\"checkbox\" data-bind=\"checked: showDetails\" />&nbsp;Include Condition</label>\n                &nbsp;\n                <span data-bind=\"if:showDetails\">\n                    ( This section shows when the condition is selected. )\n                </span>\n```", "```js\nmyVM = {\n    showDetails: ko.observable(false)\n}\nko.applyBindings(myVM);\n```", "```js\nmyVM = {\nshowDetails: ko.observable(false),\nemployee: [\n{name:\"John Jones\", spouse: { name: \"Mary Jones\"}},\n{name:\"Bill Williams\", spouse: null},\n{name:\"Sandy Rivers\", spouse: { name: \"Mark Rivers\"}},\n]\n}\n```", "```js\n<ul data-bind=\"foreach: employee\">\n    <li>Employee: <strong data-bind=\"text:name\"></strong>\n        <div data-bind=\"if: spouse\">( Spouse: <strong data- bind=\"text: spouse.name\"></strong> )</div>\n        <div data-bind=\"ifnot: spouse\">( AVAILABLE )</div>\n    </li>\n</ul>\n```", "```js\n<ul data-bind=\"foreach: employee\">\n    <li>Employee: <strong data-bind=\"text:name\"></strong>\n        <div data-bind=\"with: spouse\">( Spouse: <strong data- bind=\"text:name\"></strong> )</div>\n    </li>\n</ul>\n```", "```js\n<ul data-bind=\"foreach: employee\">\n    <li>Employee: <strong data-bind=\"text:name\"></strong>\n        <div data-bind=\"if: spouse\">( Spouse: <strong data- bind=\"text: spouse.name\"></strong> )</div>\n    </li>\n</ul>\n```", "```js\nmyVM = {\n    showDetails: ko.observable(false),\n    employee: ko.observableArray([\n          {name:'John Jones', spouse: { name: \"Mary Jones\"}},\n          {name:'Bill Williams', spouse: null},\n          {name:'Sandy Rivers', spouse: { name: \"Mark Rivers\"}}\n    ]),\n    alt: ko.observableArray()\n}\nko.applyBindings(myVM);\n```", "```js\n<button onclick=\"myVM.employee.reverse()\">Reverse Sort Staff</button>\n```", "```js\n<button onclick=\"myVM.employee.reverse()\">Reverse Sort Staff</button>\n&nbsp;\n<button onclick=\"addStaff()\">Add Staff</button>\n\n```", "```js\nfunction addStaff(){\n    myVM.employee.push({name:\"Charlie Targus\", spouse: {name:\"Patti Targus\"}});\n}\n```", "```js\n<br/>\n<button onclick=\"myVM.employee.pop()\">Remove Staff</button>\n```", "```js\nfunction doSort() {\n    myVM.employee.sort(function (left, right) {\n        return left.name == right.name ? 0 : (left.name < right.name ? -1 : 1);\n    });\n}\n```", "```js\n    function doSort() {\n        myVM.employee.sort(function (left, right) {\n            if (left.name == right.name) {\n                return 0;\n            } else {\n                if (left.name < right.name) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            }\n        });\n    }\n    ```", "```js\n    <br/>\n    <button onclick=\"myVM.employee.pop()\">Remove Staff</button>\n    &nbsp;\n    <button onclick=\"doSort()\">Sort Staff</button>\n\n    ```", "```js\n<script src=\"img/knockout.js\"></script>\n<script src=\"img/simplegrid.js\"></script>\n<script>\n</script>\n```", "```js\n<div data-bind=\"simpleGrid: orderVM\"></div>\n<button data-bind=\"click: addOrder\">Add Order</button>\n<button data-bind=\"click: orderPageOne, enable: orderVM.currentPageIndex\">First Page</button>\n```", "```js\nvar initOrders = [\n    { name: \"John Jones\", item: \"Apples\", qty: 12 },\n    { name: \"Bill Williams\", item: \"Pears\", qty: 24 },\n    { name: \"Sandy Rivers\", item: \"Bananas\", qty: 44 },\n    { name: \"Patti Targus\", item: \"Peaches\", qty: 12 }\n];\n```", "```js\nvar PagedOrderModel = function (orders) {\n    this.orders = ko.observableArray(orders);\n    this.orderVM = new ko.simpleGrid.viewModel({\n        data: this.orders\n    });\n};\nko.applyBindings(new PagedOrderModel(initOrders));\n```", "```js\ntable { width: 400px;}\n```", "```js\nthis.orderVM = new ko.simpleGrid.viewModel({\n      data: this.orders,\n columns: [\n { headerText: \"Customer\", rowText: \"name\"},\n { headerText: \"Item\", rowText: \"item\"},\n { headerText: \"Count\", rowText: \"qty\"}\n ],\n pageSize: 3\n});\n```", "```js\n> PagedOrderModel.orders()\n\n```", "```js\npagedOrderModel = new PagedOrderModel(initOrders);\nko.applyBindings(pagedOrderModel);\n```", "```js\n> pagedOrderModel.orders()\n\n```", "```js\nthis.addOrder = function(){\n       this.orders.push({name:\"Gerry Markus\", item: \"Plums\", qty:20});\n};\n```", "```js\n<button data-bind=\"click: addOrder\">Add Order</button>\n```", "```js\n<button data-bind=\"click: orderPageOne\">First Page</button>\n```", "```js\nvar PagedOrderModel = function(orders) {\n    this.orders = ko.observableArray(orders);\n    this.addOrder = function(){\n          this.orders.push({name:\"Gerry Markus\", item: \"Plums\", qty:20});\n};\n    this.orderPageOne = function(){\n          this.orderVM.currentPageIndex(0);\n};\n    this.orderVM = new ko.simpleGrid.viewModel({\n          data: this.orders,\n          columns: [\n                { headerText: \"Customer\", rowText: \"name\"},\n                { headerText: \"Item\", rowText: \"item\"},\n                { headerText: \"Count\", rowText: \"qty\"}\n          ],\n          pageSize: 3\n    });\n};\n```", "```js\n<button data-bind=\"click: sort('name')\">Sort By Name</button>\n<button data-bind=\"click: sort('item')\">Sort By Item</button>\n```", "```js\nthis.sort = function(by){\n    this.orders.sort(function(left,right){\n          return left[by] < right[by] ? -1 : 1;\n    });\n};\n```", "```js\nthis.sort = function (by, direction) {\n direction = typeof direction === 'undefined' ?\n 'asc' : direction\n if (direction === 'asc') {\n        this.orders.sort(function (left, right) {\n            return left[by] < right[by] ? -1 : 1;\n        });\n } else {\n this.orders.sort(function (left, right) {\n return left[by] > right[by] ? -1 : 1;\n });\n }\n};\n```", "```js\n<button data-bind=\"click: sort('name','desc')\">Reverse By Name</button>\n<button data-bind=\"click: sort('item','desc')\">Reverse By Item</button>\n<button data-bind=\"click: sort('qty','desc')\">Reverse By Quantity</button>\n```"]