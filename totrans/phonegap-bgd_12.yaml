- en: Appendix B. Publishing Your App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the best features of PhoneGap is that it allows you to create a cross-platform
    app using the same code base. It means that you can reuse most of the code, but
    you still have to build the app for each target platform. You can do this by configuring
    the development environment for each platform you want to support or you can use
    online services such as PhoneGap Build services ([http://build.phonegap.com](http://build.phonegap.com))
    or Icenium ([http://www.icenium.com/](http://www.icenium.com/)). Both are cloud-based
    services; the main difference is that the PhoneGap Build service supports all
    the platforms, whereas Icenium supports only the Android and iOS platforms but
    does come with a very nice online editor. Once the builds are ready, you have
    to follow a different workflow for each target platform.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Also, if you are dealing with cross-platform development when using PhoneGap,
    it's always a good habit to use a testing device for each platform during the
    development phase and when preparing the build.
  prefs: []
  type: TYPE_NORMAL
- en: Publishing on Google Play
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Google Play**, formerly known as the **Android Market**, is the digital application
    distribution platform for Android apps. In order to publish an app on Google Play,
    you have to log in with your Google account and follow the steps outlined at [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
    When registering, you will be required to pay a one-time fee of $ 25 before adding
    the developer details (that is, name, telephone number, e-mail, and so on). Once
    you complete the registration process, you can add your apps to the developer
    console.'
  prefs: []
  type: TYPE_NORMAL
- en: For each app, you can define the countries in which you want to distribute it,
    define the carriers you want to target, specify whether it's a free app (if you
    want to sell an app, you have to provide a valid Google Wallet merchant account),
    set up an alpha and beta group for testing and the staged rollouts, and so on.
    In order to get new users to download and install the app, it's very important
    to provide detailed information, icons, screenshots, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '![Publishing on Google Play](img/B03476_Appendix_B_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Android online guide available at [https://support.google.com/googleplay/androiddeveloper/answer/1078870](https://support.google.com/googleplay/androiddeveloper/answer/1078870)
    is the place to start in order to get a better understanding of the required graphic
    assets.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, your app has to be less than 50 MB in size and signed using the
    keystore tool as described at [http://developer.android.com/tools/publishing/app-signing.html](http://developer.android.com/tools/publishing/app-signing.html).
    For apps that require more than 50 MB, see the APK expansion details at [http://developer.android.com/google/play/expansion-files.html](http://developer.android.com/google/play/expansion-files.html).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once uploaded, your app will be available on the Google Play market within 60
    minutes or less.
  prefs: []
  type: TYPE_NORMAL
- en: Publishing on Blackberry World
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**BlackBerry World** (previously **BlackBerry App World**) is an application
    distribution service and an application by BlackBerry that allows users to browse,
    download, and update third-party applications. In order to publish an app on the
    BlackBerry World market, you need to have a BlackBerry developer account (you
    can create this for free at [https://developer.blackberry.com/](https://developer.blackberry.com/)).
    You also need to apply to become a vendor providing your BlackBerry ID information
    (a PayPal account is required to complete the application), which you can do at
    [https://appworld.blackberry.com/isvportal/home.do](https://appworld.blackberry.com/isvportal/home.do).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Publishing on Blackberry World](img/B03476_Appendix_B_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: After you submit your application as a vendor, you will receive a confirmation
    e-mail asking you to provide official documentation to validate your company information
    or a copy (front and back) of an official government-issued identification card
    in case you applied as an individual to the vendor portal.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The verification process can take up to two days, so you have to consider it
    carefully when you are planning a release for a specific date.
  prefs: []
  type: TYPE_NORMAL
- en: When your account is confirmed, you can add an app (that is, a product) providing
    the name, description, logo, screenshots, and any other required details about
    your application. For details on the requirements, refer to the online information
    available at the BlackBerry World app store at [https://developer.blackberry.com/devzone/blackberryworld/preparing_your_app_for_blackberry_world.html](https://developer.blackberry.com/devzone/blackberryworld/preparing_your_app_for_blackberry_world.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'The release of an app to the BlackBerry World also involves a signing process.
    This process assumes that you already have downloaded and installed the BlackBerry
    10 WebWorks SDK available at [https://developer.blackberry.com/html5/downloads/](https://developer.blackberry.com/html5/downloads/).
    Before you can get your BlackBerry 10 app signed, you have to complete the web
    form at [https://www.blackberry.com/SignedKeys](https://www.blackberry.com/SignedKeys).
    When your application is accepted, you will receive two `.csj` registration files
    by e-mail. Each file arrives in a separate e-mail message with information about
    the purpose of the file attached (one is to generate a debug token and one to
    sign the app for the marketplace). In order to register with the RIM Signing Authority,
    you have to run the `.bar` file stored in the `\dependencies\tools\bin` folder
    located in the BlackBerry 10 WebWorks SDK installation folder from your command-line
    tool. This tool creates the following files needed to digitally sign the app:
    `author.p12`, `barsigner.csk`, and `barsigner.db`.'
  prefs: []
  type: TYPE_NORMAL
- en: Be very careful about the app naming; an application name that starts with a
    brand/company/product implies an association and that it's an authorized or an
    official application. If you name your app YouTube Player, it will be rejected
    for sure (instead, name it Player for YouTube).
  prefs: []
  type: TYPE_NORMAL
- en: Publishing on the Apple App Store
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Apple App Store is a digital application distribution platform for iOS apps
    maintained by Apple Inc. Users can browse through the App Store and install applications
    directly to an iOS device. Although Apple envisions the App Store to be a global
    product, in reality its market is restricted by national boundaries. In other
    words, there are potentially as many distinct App Stores as there are countries
    in the world. To publish an app through the Apple App Store, you need to have
    an Apple Developer account ([http://developer.apple.com/programs/register](http://developer.apple.com/programs/register))
    and be a member of the iOS Developer Program ([http://developer.apple.com/programs/ios/](http://developer.apple.com/programs/ios/);
    the cost is $99 per year). The first step is to register an app ID with the developer
    portal and then you have to create the development and distribution certificates.
  prefs: []
  type: TYPE_NORMAL
- en: Then, you need to set up a distribution certificate. To do this, you will first
    need to generate a certificate request from your computer and then upload it to
    the developer portal. On a Mac, you should do this by opening the Keychain Access
    application available in **Utilities** and then go to **Keychain Access** | **Certificate
    Assistant** | **Request a Certificate from a Certificate Authority**. Enter your
    e-mail address and name and select **Request is Saved to disk** to save the `CertificateSigningRequest.certSigningRequest`
    file on your desktop. Go to the developer portal, upload the certificate request,
    and complete the steps required to generate the distribution certificate.
  prefs: []
  type: TYPE_NORMAL
- en: When the certificate is ready, you can create a new distribution provisioning
    profile by selecting the app you want to submit and the certificate to use. Download
    the file and in Xcode, select **Window** | **Organizer**, click on **Devices**,
    select **Provisioning Profiles**, and drag the provisioning profile with the `.mobileprovision`
    extension to the Organizer. Next, open the build settings pane and set the code-signing
    identity; in this way, the app is then code signed when you create an archive
    and you can complete the publication procedure using Xcode. When submitting the
    app, you will also be required to provide a description, several screenshots,
    icons, and other information. For details, refer to the online documentation at
    [https://developer.apple.com/library/ios/#documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html](https://developer.apple.com/library/ios/#documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The verification process varies depending on the number of submissions currently
    under review, but it typically takes more than two days. You can find the App
    Store's estimated review time at [http://reviewtimes.shinydevelopment.com/](http://reviewtimes.shinydevelopment.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Presenting a simple version of your app as first release will help to speed
    up the approval process a little bit. It's the initial app approval process that
    takes the most time; once approved, future updates are far easier to get done.
    So keep the advanced features for later releases of your app.
  prefs: []
  type: TYPE_NORMAL
- en: Visit [http://www.raywenderlich.com/8003/how-to-submit-your-app-to-apple-from-no-account-to-app-store-part-1](http://www.raywenderlich.com/8003/how-to-submit-your-app-to-apple-from-no-account-to-app-store-part-1)
    for a detailed tutorial on publishing an app to Apple App Store.
  prefs: []
  type: TYPE_NORMAL
- en: Publishing on the Windows Phone Store
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Windows Phone Store** (previously **Windows Phone Marketplace**) is a
    digital distribution platform that allows users to browse and install applications
    that have been developed by third parties. The UI is presented in a very "Metro
    UI" way using a panoramic view where the user can browse categories and titles,
    see featured items, and get details with ratings, reviews, screenshots, and pricing
    information.
  prefs: []
  type: TYPE_NORMAL
- en: 'To submit and manage apps on Windows Phone Dev Center, you first have to register
    and become a member using a Microsoft account (formerly known as Windows Live
    ID). When registering, you will be asked to pay an annual Developer Center subscription
    fee of $99 plus any applicable tax. In exchange, you''ll get to submit unlimited
    paid apps to Windows Phone Store (you can also submit up to 100 free apps). The
    publishing process is simple and straightforward: you have to provide the app
    details (name, description, screenshots, and so on) and then submit the XAP file
    packaged with Visual Studio. You must package and prepare your app before you
    can upload it to the store; the packaging process starts when you create a Windows
    Store project or item based on a template (refer to the online documentation at
    [http://msdn.microsoft.com/en-us/library/windows/apps/br230260.aspx](http://msdn.microsoft.com/en-us/library/windows/apps/br230260.aspx)
    for a complete overview of the packaging process).'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The verification process is pretty fast, but you need a couple of days to complete
    the registration process if you are registering as a company.
  prefs: []
  type: TYPE_NORMAL
- en: In order to reduce the duration of the review, you can screen your app locally
    using the **Windows Application Certification Kit** (**WACK**) tool available
    in the Windows Phone SDK. It reduces the approval cycle by giving you a way to
    screen your app locally for issues before you even submit it to the Windows Store.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this appendix, you learned how you can publish your app on different app
    stores and about common issues. It's pretty clear that the Apple store is the
    one that requires the most complex workflow, but it also attracts the most developers.
    You can easily manage publication on all the different markets by yourself or
    with the support offered by services such as the one by PhoneGap Build.
  prefs: []
  type: TYPE_NORMAL
