- en: '*Chapter 3*: Downloading and Exploring the Bootstrap 5 Sass Files'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will first see two different ways to download the Bootstrap
    5 source code, and then we will take a closer look at the Bootstrap 5 Sass files
    in that source code. We will learn how the Sass code is divided into various files,
    how these files are structured, and what that structure means.
  prefs: []
  type: TYPE_NORMAL
- en: After that, we will learn how to import the default Bootstrap 5, and finally,
    we will learn about the Bootstrap 5 Sass variables.
  prefs: []
  type: TYPE_NORMAL
- en: It’s useful to be familiar with the Bootstrap 5 Sass files and variables before
    customizing the styling, as you will know where to search and look for specific
    variables for your needs. You will also know about the dependency between certain
    variables and files.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the Bootstrap 5 source code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the Bootstrap 5 Sass files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Importing the default Bootstrap 5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the Bootstrap 5 variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To preview the examples, you will need a code editor and a browser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will need a Sass compiler to compile the Bootstrap 5 Sass files to CSS.
    Please see [*Chapter 2*](B17143_02_epub.xhtml#_idTextAnchor033), *Using and Compiling
    Sass*, for different ways to do this.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find the code files of the chapter on GitHub at [https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide](https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide)
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the Bootstrap 5 source code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download Bootstrap 5 in different ways. Here, I’ll show you three.
  prefs: []
  type: TYPE_NORMAL
- en: From the website
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the official Bootstrap website at [getbootstrap.com](http://getbootstrap.com),
    you can download the Bootstrap files from the **Download** page in the **Getting
    started** section of **Docs**: [getbootstrap.com/docs/5.2/getting-started/download](http://getbootstrap.com/docs/5.2/getting-started/download).'
  prefs: []
  type: TYPE_NORMAL
- en: From that **Download** page, you can download a compiled version of the Bootstrap
    5 CSS and JavaScript files or you can download the source files, which contain
    all the Sass code, JavaScript code, and documentation files. We want the source
    files, so you should click the purple **Download source** button to download a
    ZIP file containing everything we need.
  prefs: []
  type: TYPE_NORMAL
- en: From GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The source code for Bootstrap 5 can be downloaded from the official GitHub
    repository at [github.com/twbs/bootstrap](http://github.com/twbs/bootstrap). To
    download it from there, you first click the green **Code** button to expand a
    popover. From there, you can get the URL to clone it using Git with the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Or, you can simply download a ZIP file containing all the source code.
  prefs: []
  type: TYPE_NORMAL
- en: From NPM
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you’re using NPM in your development setup, you can download and install
    the latest version of Bootstrap 5 with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: It will now be downloaded to the `node_modules` folder of your project. We will
    see how we can set up a build process using Node.js, NPM, and Laravel Mix in [*Chapter
    12*](B17143_12_epub.xhtml#_idTextAnchor289), *Optimizing Bootstrap 5 CSS and JavaScript
    Code*.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have downloaded Bootstrap 5, it’s time to take a look at the Sass
    files.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the Bootstrap 5 Sass files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will explore the Bootstrap 5 Sass files. These files are
    located in the `scss` folder of the downloaded Bootstrap 5 files. We will go through
    the contents of this folder and its subfolders.
  prefs: []
  type: TYPE_NORMAL
- en: Root folder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the root of the `scss` folder, we have a total of 41 files, of which 37
    are Sass partials because they start with an underscore, and the remaining 4 files
    are regular SCSS files. Here’s an overview with a comment next to each file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see from my comments, most of the files relate to styling for individual
    parts of Bootstrap 5: layout, content, and components. Here’s a quick explanation
    of the other files.'
  prefs: []
  type: TYPE_NORMAL
- en: _forms.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file imports all the Sass partial files from the `forms` folder; it is
    used to provide styling for various form elements.
  prefs: []
  type: TYPE_NORMAL
- en: _functions.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains various custom Bootstrap 5 functions. It is primarily used
    for evaluating source code across variables, maps, and mixins, but among other
    things, you will also find the `tint-color()` and `shade-color()` color functions,
    which we will get back to later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: _helpers.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file imports all the Sass partial files from the `helpers` folder; it is
    used to provide styling for the various helper classes.
  prefs: []
  type: TYPE_NORMAL
- en: _maps.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains re-assigned Sass maps, which can be used for customization
    by overriding the default Sass maps. This will then automatically update utilities,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: _mixins.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file imports all the Sass partial files from the `vendor` and `mixins`
    folders. The `vendor` folder contains the styling for the `mixins` folder contains
    many useful mixins, which are used elsewhere by other files. We will learn more
    about how to make full use of the RFS Sass plugin and the Bootstrap 5 mixins in
    [*Chapter 10*](B17143_10_epub.xhtml#_idTextAnchor227), *Using Bootstrap 5 with
    Advanced Sass and CSS Features*.
  prefs: []
  type: TYPE_NORMAL
- en: _reboot.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This file contains code to normalize the styling of common HTML elements. It’s
    not targeting any classes, but only HTML elements directly. It’s a fork of **Normalize.css**,
    where some code has been removed while some other code has been added. Normalize.css
    is a reset stylesheet that makes browsers render all elements more consistently.
    Learn more about it on the official website: [necolas.github.io/normalize.css/](http://necolas.github.io/normalize.css/).'
  prefs: []
  type: TYPE_NORMAL
- en: _root.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file is used to generate various CSS custom properties for root elements,
    which, in this case, means colors and basic typography. It is mostly used in the
    `_reboot.scss` file, but some are also used elsewhere.
  prefs: []
  type: TYPE_NORMAL
- en: _transitions.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains styling for transitions used by various components.
  prefs: []
  type: TYPE_NORMAL
- en: _utilities.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains all the settings for the utilities. These settings are used
    by the utility API to generate utility classes. You will learn much more about
    the utility API in [*Chapter 6*](B17143_06_epub.xhtml#_idTextAnchor130), *Understanding
    and Using the Bootstrap 5 Utility API*.
  prefs: []
  type: TYPE_NORMAL
- en: _variables.scss
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains a long list of variables used across Bootstrap 5\. You will
    learn much more about this file in [*Chapter 4*](B17143_04_epub.xhtml#_idTextAnchor079)*,*
    *Bootstrap 5 Global Options and Colors,* and [*Chapter 5*](B17143_05_epub.xhtml#_idTextAnchor110)*,*
    *Customizing Various Bootstrap 5 Elements*.
  prefs: []
  type: TYPE_NORMAL
- en: Main SCSS files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After all the Sass partial files, we have four main SCSS files, which are used
    to import different versions of Bootstrap 5\. Here’s a quick overview of each
    of them and what they import:'
  prefs: []
  type: TYPE_NORMAL
- en: '`bootstrap-grid.scss`: The grid system and the flex utilities only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`bootstrap-reboot.scss`: The reboot styles only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`bootstrap-utilities.scss`: The helpers and utilities only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`bootstrap.scss`: Everything'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Of these four, we will only use `bootstrap.scss` to import everything, but we
    will also use a modified version of the code inside `bootstrap.scss` to be able
    to make specific customizations and optimizations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `scss` folder also contains the following subfolders: `forms`, `helpers`,
    `mixins`, `utilities`, and `vendor`. These folders contain more Sass partial files.
    I have already referred to these folders when describing the Sass partial files
    in the root folder, so I won’t go into further details. Generally, all the Sass
    partial files should be left untouched, unless you have very advanced and specific
    requirements. We customize Bootstrap 5 in our own files and import the Bootstrap
    5 files as they are.'
  prefs: []
  type: TYPE_NORMAL
- en: Importing the default Bootstrap 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapter, we learned how to compile Sass to CSS. To import the
    default Bootstrap 5 without any customizations, we simply need to import the `bootstrap.scss`
    file into our own SCSS file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-3/import-compile-default-bootstrap/scss/bootstrap.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: In the next chapter, we will learn how to import a more advanced customized
    version of Bootstrap 5, where we import the individual SCSS files of Bootstrap
    5, instead of the main file as in the preceding code.
  prefs: []
  type: TYPE_NORMAL
- en: Before learning how to customize Bootstrap 5 in different ways, we will take
    a closer look at the `bootstrap.scss` file.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring bootstrap.scss
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `bootstrap.scss` file contains all the code that will import the individual
    Sass partial files for the various elements. Let’s now see what this file contains:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: As you can see from the preceding code, the `bootstrap.scss` file will import
    all the Sass partial files from the root `scss` folder, while some of these files
    will import the Sass partial files in the subfolders. For some customizations,
    it’s enough to import this file after defining the custom changes, but for other
    customizations, we need to import the Bootstrap 5 partials individually and add
    our own custom changes in between these imports. In the following chapters, I
    will show you when you need to either import the whole `bootstrap.scss` file or
    the Bootstrap 5 partials individually.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s talk a bit about the Bootstrap 5 variables next.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the Bootstrap 5 variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To customize any element of Bootstrap 5, you will start by looking at the `_variables.scss`
    file. This file contains all the variables used by Bootstrap 5, including variables
    for global options, colors, layout, content (including typography), forms, components,
    helpers, and utilities. So, for example, to know which part of a component can
    be customized, you simply need to search for the component name within the `_variables.scss`
    file. Then, you will find all the relevant variables with their default values
    grouped together. You now need to use these same variable names in your own Sass
    file to change it. You will learn exactly how to do this in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The variables have been carefully ordered by the team behind Bootstrap since
    some variables reference other variables. The order in which the variables for
    different components appear is not alphabetical, so my best suggestion to find
    them is to scroll through the file or search for the component name.
  prefs: []
  type: TYPE_NORMAL
- en: There’s a total of 886 variables used by Bootstrap 5, and some of these are
    Sass maps that contain multiple values. All these variables and their values are
    used to build the different elements of Bootstrap 5, and they can all be customized.
  prefs: []
  type: TYPE_NORMAL
- en: We won’t see examples of how to customize all elements of Bootstrap 5 (be it
    layout, content, forms, components, helpers, or utilities), but we will go through
    enough examples from each category to learn how to change everything else.
  prefs: []
  type: TYPE_NORMAL
- en: An alternative way to find variable names
  prefs: []
  type: TYPE_NORMAL
- en: You can also find variable names for various elements of Bootstrap 5 by looking
    in the partial files in the root of the `scss` folder. If you, for example, go
    into the `_breadcrumb.scss` file, you can see the variables being used in the
    different CSS declarations for that component. There, you can see what property
    the variable is being used as a value for, but in general, it should be easiest,
    quickest, and adequate to just look up variables in the `_variables.scss` file.
  prefs: []
  type: TYPE_NORMAL
- en: Default values with the !default flag
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All the Bootstrap 5 variables use the `!default` flag. The function of this
    flag is described in the previous chapter under the *Default values* subsection.
    In brief, the `!default` flag is used so that the variable values can be set in
    advance before importing the Bootstrap 5 Sass files. This is the way Bootstrap
    5 customization works.
  prefs: []
  type: TYPE_NORMAL
- en: Null value default variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Forty-four of the 886 variables have the `null` value. When these variables
    are used in a CSS declaration elsewhere in the Bootstrap 5 source code, that declaration
    won’t compile. This is a smart way of providing even more customization options
    for the user without bloating the code base with unnecessary styles. If the user
    chooses to define the value of one of these variables before importing the Bootstrap
    5 files, then the `null !default` value will be overwritten and the CSS declaration
    will compile.
  prefs: []
  type: TYPE_NORMAL
- en: 'Take, for example, the `$headings-font-style` variable on line `591` that has
    a `null !default` value. This variable is used in the `_reboot.scss` file for
    some general styling of headings as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: This CSS declaration will not compile when the value is `null`. If, however,
    we give the variable a value, the declaration *will* compile. In this way, the
    headings won’t have any specific font style, but they can easily be given one
    since the `$headings-font-style` variable is already available for the developer
    to use.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have now learned how to download the Bootstrap 5 source code from the official
    website or from NPM. You have also learned about the Bootstrap 5 Sass files and
    variables in the `scss` folder and its subfolders, and how those files and variables
    are related to each other. Finally, you have learned how to import and compile
    Bootstrap 5.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will start customizing the Bootstrap 5 styles by focusing
    on the global options and color palette.
  prefs: []
  type: TYPE_NORMAL
