["```js\n<script src=\"img/vue\"></script>\n```", "```js\nlistener('searchResult', function (users) {\n  users\n    .map(user => document.createTextNode(users.name.first + users.name.last))\n    .foreach(node => document.getElementById('userList').appendChild(node))\n});\n```", "```js\n<ul>\n  { state.users.map(post => <li>users.name.first + users.name.last</li>) }\n</ul>\n\nlistener('searchResult', function (users) {\n  state.users = users;\n});\n```", "```js\n$ mkdir -p ~/projects/hobnob-client\n$ cd ~/projects/hobnob-client\n$ git init\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Hobnob</title>\n</head>\n<body>\n</body>\n</html>\n\n```", "```js\n...\n  <title>Hobnob</title>\n  <script crossorigin src=\"img/react.production.min.js\"></script>\n <script crossorigin src=\"img/react-dom.production.min.js\"></script>\n </head>\n ...\n```", "```js\nReact.createElement(type, [props], [...children])\n```", "```js\n<body>\n  <script>\n const emailInput = React.createElement('input', { type: 'email' });\n const passwordInput = React.createElement('input', { type: 'password' });\n const registerButton = React.createElement('button', null, 'Register');\n const registrationForm = React.createElement('form', null, emailInput, passwordInput, registerButton);\n </script>\n</body>\n```", "```js\n<body>\n  <div id=\"renderTarget\"></div>\n  <script>\n    ,,,\n    const registrationForm = React.createElement(...);\n    ReactDOM.render(registrationForm, document.getElementById('renderTarget'));\n  </script>\n</body>\n```", "```js\n<div id=\"renderTarget\">\n  <form>\n    <input type=\"email\">\n    <input type=\"password\">\n    <button>Register</button>\n  </form>\n</div>\n```", "```js\nconst emailInput = React.createElement('input', { type: 'email' });\nconst emailField = React.createElement('label', null, 'Email', emailInput);\nconst passwordInput = React.createElement('input', { type: 'password' });\nconst passwordField = React.createElement('label', null, 'Password', passwordInput);\nconst registerButton = React.createElement('button', null, 'Register');\nconst registrationForm = React.createElement('form', null, emailField, passwordField, registerButton);\n```", "```js\n<form>\n  <label>\n    Email\n    <input type=\"email\" />\n  </label>\n  <label>\n    Password\n    <input type=\"password\" />\n  </label>\n  <button>Register</button>\n</form>\n```", "```js\n<script>\n  const RegistrationForm = () => (\n <form>\n <label>\n Email\n <input type=\"email\" />\n </label>\n <label>\n Password\n <input type=\"password\" />\n </label>\n <button>Register</button>\n </form>\n );\n  ReactDOM.render(<RegistrationForm />, document.getElementById('renderTarget'));\n</script>\n```", "```js\nUncaught SyntaxError: Unexpected token <\n```", "```js\n  ...\n  <script crossorigin src=\"img/react-dom.production.min.js\"></script>\n  <script src=\"img/babel.min.js\"></script>\n</head>\n...\n```", "```js\n<body>\n  <div id=\"renderTarget\"></div>\n  <script type=\"text/babel\">\n    ...\n  </script>\n</body>\n```", "```js\n<label>\n  Email\n  <input type=\"email\" />\n</label>\n<label>\n  Password\n  <input type=\"password\" />\n</label>\n```", "```js\nfunction Input(props) {\n  return <label>{props.label}<input type={props.type} /></label>\n}\n```", "```js\nclass Input extends React.Component {\n  render() {\n    return <label>{this.props.label}<input type={this.props.type} /></label>\n  }\n}\n```", "```js\nconst RegistrationForm = () => (\n  <form>\n    <Input label=\"Email\" type=\"email\" />\n    <Input label=\"Password\" type=\"password\" />\n    <button>Register</button>\n  </form>\n);\n```", "```js\nfunction Input(props) {\n  return <label>{props.label}<input type={props.type} /></label>\n}\nfunction Button(props) {\n  return <button>{props.title}</button>\n}\nconst RegistrationForm = () => (\n  <form>\n    <Input label=\"Email\" type=\"email\" />\n    <Input label=\"Password\" type=\"password\" />\n    <Button title=\"Register\" />\n  </form>\n);\nReactDOM.render(<RegistrationForm />, document.getElementById('renderTarget'));\n```", "```js\nclass Input extends React.Component {\n  render() {\n    return <label>{this.props.label}<input type={this.props.type} /></label>\n  }\n}\n```", "```js\nclass Input extends React.Component {\n  constructor() {\n super();\n this.state = { valid: null }\n }\n  render () { ... }\n}\n```", "```js\nrender() {\n  return <label>{this.props.label}<input onChange={this.validate} ... /></label>\n}\n```", "```js\n<script type=\"text/babel\">\n const validator = {\n email: (email) => /\\S+@\\S+\\.\\S+/.test(email),\n password: (password) => password.length > 11 && password.length < 48\n }\n  class Input extends React.Component {\n    constructor() { ... }\n    validate = (event) => {\n const value = event.target.value;\n const valid = validator[this.props.type](value);\n this.setState({ value, valid });\n }\n    render() {\n      return <label>{this.props.label}<input type={this.props.type}  onChange={this.validate} /></label>\n    }\n  }\n  ...\n</script>\n```", "```js\n// Bad\nvalidate = (event) => {\n  const value = event.target.value;\n  const valid = validator[this.props.type](value);\n  this.state.value = value;\n this.state.valid = valid;\n}\n// Good\nvalidate = (event) => {\n  const value = event.target.value;\n  const valid = validator[this.props.type](value);\n  this.setState({ value, valid })\n}\n```", "```js\n<script type=\"text/babel\">\n  ...\n  function getIndicatorColor (state) {\n if (state.valid === null || state.value.length === 0) {\n return 'transparent';\n }\n return state.valid ? 'green' : 'red';\n }\n\n  class Input extends React.Component {\n    constructor() { ... }\n    validate = (event) => { ... }\n    render () {\n      return (\n        <label>\n          {this.props.label}\n          <input type={this.props.type} onChange={this.validate}/>\n          <div className=\"indicator\" style={{\n height: \"20px\",\n width: \"20px\",\n backgroundColor: getIndicatorColor(this.state)\n }}></div>\n        </label>\n      )\n    }\n  }\n  ...\n</script>\n```", "```js\nclass RegistrationForm extends React.Component {\n  handleRegistration = (event) => {\n event.preventDefault();\n event.stopPropagation();\n }\n  render() {\n    return (\n      <form onSubmit={this.handleRegistration}>\n        <Input label=\"Email\" type=\"email\" />\n        <Input label=\"Password\" type=\"password\" />\n        <Button title=\"Register\" />\n      </form>\n    )\n  }\n}\n```", "```js\nclass RegistrationForm extends React.Component {\n constructor(props) {\n super(props);\n this.email = React.createRef();\n this.password = React.createRef();\n }\n  handleRegistration = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n console.log(this.email.current);\n console.log(this.password.current);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleRegistration}>\n        <Input label=\"Email\" type=\"email\" ref={this.email} />\n        <Input label=\"Password\" type=\"password\" ref={this.password} />\n        <Button title=\"Register\" />\n      </form>\n    )\n  }\n}\n```", "```js\nhandleRegistration = (event) => {\n  event.preventDefault();\n  event.stopPropagation();\n  const hasValidParams = this.email.current.state.valid && this.password.current.state.valid;\n if (!hasValidParams) {\n console.error('Invalid Parameters');\n return;\n }\n const email = this.email.current.state.value;\n const password = this.password.current.state.value;\n}\n```", "```js\n<body>\n  <script type=\"text/babel\">\n function register (email, digest) {\n\n // Send the credentials to the server\n const payload = { email, digest };\n const request = new Request('http://localhost:8080/users', {\n method: 'POST',\n headers: { 'Content-Type': 'application/json' },\n mode: 'cors',\n body: JSON.stringify(payload)\n })\n return fetch(request)\n .then(response => {\n if (response.status === 200) {\n return response.text();\n } else {\n throw new Error('Error creating new user');\n }\n })\n }\n    ...\n  </script>\n</body>\n```", "```js\nhandleRegistration = (event) => {\n  ...\n  const email = this.email.current.state.value;\n  const password = this.password.current.state.value;\n  const digest = bcrypt.hashSync(password, 10));\n  register(email, digest))\n    .then(console.log)\n    .catch(console.error) }\n```", "```js\n<head>\n  ...\n  <script src=\"img/bcrypt.min.js\"></script>\n</head>\n<body>\n  <div id=\"renderTarget\"></div>\n  <script type=\"text/babel\">\n    const bcrypt = dcodeIO.bcrypt;\n    ...\n  </script>\n</body>\n```", "```js\nCLIENT_PROTOCOL=http\nCLIENT_HOSTNAME=127.0.0.1\nCLIENT_PORT=8200\n```", "```js\napp.use((req, res, next) => {\n  const {\n SWAGGER_UI_PROTOCOL, SWAGGER_UI_HOSTNAME, SWAGGER_UI_PORT,\n CLIENT_PROTOCOL, CLIENT_HOSTNAME, CLIENT_PORT,\n } = process.env;\n const allowedOrigins = [\n `${SWAGGER_UI_PROTOCOL}://${SWAGGER_UI_HOSTNAME}`,\n `${SWAGGER_UI_PROTOCOL}://${SWAGGER_UI_HOSTNAME}:${SWAGGER_UI_PORT}`,\n `${CLIENT_PROTOCOL}://${CLIENT_HOSTNAME}`,\n `${CLIENT_PROTOCOL}://${CLIENT_HOSTNAME}:${CLIENT_PORT}`,\n ];\n if (allowedOrigins.includes(req.headers.origin)) {\n res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n }\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n```", "```js\n$ http-server . -p 8200 --cors\n```", "```js\n<Input label=\"Email\" type=\"email\" ref={this.email} onChange={this.handleInputChange} />\n<Input label=\"Password\" type=\"password\" ref={this.password} onChange={this.handleInputChange} />\n```", "```js\nvalidate = (event) => {\n  const value = event.target.value;\n  const valid = validator[this.props.type](value);\n  this.setState({ value, valid }, () => {\n if (this.props.onChange) {\n this.props.onChange();\n }\n });\n}\n```", "```js\nconstructor(props) {\n  super(props);\n  this.email = React.createRef();\n  this.password = React.createRef();\n  this.state = {\n valid: false\n };\n}\n...\nhandleInputChange = () => {\n this.setState({\n valid: !!(this.email.current.state.valid && this.password.current.state.valid)\n })\n}\n```", "```js\nfunction Button(props) {\n  return <button disabled={props.disabled}>{props.title}</button>\n}\nclass RegistrationForm extends React.Component {\n  ...\n  render() {\n    return (\n      <form onSubmit={this.handleRegistration}>\n        ...\n        <Button title=\"Register\" disabled={!this.state.valid} />\n      </form>\n    )\n  }\n}\n```", "```js\nfunction Input (props) {\n return (\n    <label>\n      {props.label}\n      <input type={props.type} value={props.value} onChange={(event) => props.onChange(props.name, event)} />\n      <div className=\"indicator\" style={{ ... }}></div>\n    </label>\n )\n}\n```", "```js\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n email: {\n value: \"\",\n valid: null\n },\n password: {\n value: \"\",\n valid: null\n }\n };\n  }\n  ...\n}\n```", "```js\nrender() {\n  return (\n    <form onSubmit={this.handleRegistration}>\n      <Input label=\"Email\" type=\"email\" name=\"email\" value={this.state.email.value} valid={this.state.email.valid} onChange={this.handleInputChange} />\n      <Input label=\"Password\" type=\"password\" name=\"password\" value={this.state.password.value} valid={this.state.password.valid} onChange={this.handleInputChange} />\n      <Button title=\"Register\" disabled={!(this.state.email.valid && this.state.password.valid)} />\n    </form>\n  )\n}\n```", "```js\nhandleInputChange = (name, event) => {\n  const value = event.target.value;\n const valid = validator[name](value);\n  this.setState({\n    [name]: { value, valid }\n  });\n}\n```", "```js\nhandleRegistration = (event) => {\n  ...\n  const hasValidParams = this.state.email.valid && this.state.password.valid;\n  if (!hasValidParams) { ... }\n const email = this.state.email.value;\n const password = this.state.password.value;\n  ...\n}\n```", "```js\n$ npm install -g browserify\n$ browserify entry.js > bundle.js\n```", "```js\n// greeter.js\ndefine(function () {\n  function helloWorld(name) {\n    process.stdout.write(`hello ${name}!\\n`)\n  };\n  return { sayHello: helloWorld }\n});\n\n// main.js\ndefine([\"./greeter.js\"], function (greeter) {\n  // Only ran after the `greeter` module is loaded\n  greeter.sayHello(\"Daniel\");\n});\n```", "```js\n// greeter.js\n(function (root, factory) {\n  // Requirements are defined here\n}(this, function () {\n  function helloWorld(name) {\n    process.stdout.write(`hello ${name}!\\n`\n  };\n  // Whatever you return is exposed\n  return {\n    helloWorld: helloWorld\n  }\n}));\n\n// main.js\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./greeter.js'], factory);\n  } else if (typeof exports === 'object') {\n    // Node, CommonJS-like\n    module.exports = factory(require('./greeter.js'));\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory(root.greeter);\n  }\n}(this, function (greeter) {\n  greeter.sayHello(\"Daniel\");\n}));\n```", "```js\nvar App = SystemJS.import('./components/App.jsx').then(App => {\n  ReactDOM.render(<App />, document.getElementById('renderTarget'));\n});\n```", "```js\n$ yarn init\n$ vim .gitignore # Can use the same .gitignore as for our server app\n$ yarn add webpack webpack-cli --dev\n```", "```js\n$ mkdir src dist\n$ mv index.html src/\n```", "```js\n$ yarn add react react-dom bcryptjs\n$ yarn add @babel/core @babel/preset-react @babel/preset-env @babel/plugin-proposal-class-properties --dev\n```", "```js\n$ mkdir -p \\\n  src/utils/validator \\\n  src/utils/register \\\n  src/components/input \\\n  src/components/button \\\n  src/components/Registration-form\n$ touch \\\n  src/index.jsx \\\n  src/utils/validator/index.js \\\n  src/utils/register/index.js \\\n  src/components/input/index.jsx \\\n  src/components/button/index.jsx \\\n  src/components/Registration-form/index.jsx\n```", "```js\nconst validator = {\n  email: (email) => /\\S+@\\S+\\.\\S+/.test(email),\n  password: (password) => password.length > 11 && password.length < 48\n}\nexport default validator;\n```", "```js\nimport React from 'react';\nfunction Button(props) {\n  return <button disabled={props.disabled}>{props.title}</button>\n}\nexport default Button;\n```", "```js\nimport React from 'react';\nfunction getIndicatorColor (state) { ... }\nfunction Input (props) { ... }\nexport {\n Input as default,\n getIndicatorColor,\n}\n```", "```js\nimport React from 'react';\nimport bcrypt from 'bcryptjs';\nimport { validator } from '../../utils';\nimport register from '../../utils/register';\nimport Button from '../button/index.jsx';\nimport Input from '../input/index.jsx';\n\nclass RegistrationForm extends React.Component { ... }\n\nexport default RegistrationForm;\n```", "```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport RegistrationForm from './components/Registration-form/index.jsx';\nReactDOM.render(<RegistrationForm />, document.getElementById('renderTarget'));\n```", "```js\nconst webpack = require('webpack');\nmodule.exports = {\n  entry: {\n    app: './src/index.jsx',\n  },\n  output: {\n    filename: './dist/bundle.js',\n  },\n};\n```", "```js\n$ npx webpack\nHash: 9100e670cdef864f62dd\nVersion: webpack 4.6.0\nTime: 243ms\nBuilt at: 2018-04-24 18:44:49\n1 asset\nEntrypoint main = main.js\n[0] ./src/index.js 283 bytes {0} [built] [failed] [1 error]\n\nERROR in ./src/index.js\nModule parse failed: Unexpected token (3:16)\nYou may need an appropriate loader to handle this file type.\n| import RegistrationForm from './components/Registration-form';\n|\n| ReactDOM.render(<RegistrationForm />, document.getElementById('renderTarget'));\n|\n```", "```js\n$ yarn add babel-loader --dev\n```", "```js\nconst webpack = require('webpack');\n\nmodule.exports = {\n  entry: { app: './src/index.jsx' },\n  output: { filename: 'bundle.js' },\n  module: {\n    rules: [{\n      test: /\\.jsx?$/,\n      exclude: /node_modules/,\n      use: [{\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env', '@babel/preset-react'],\n          plugins: [require('@babel/plugin-proposal-class-properties')],\n        },\n      }],\n    }],\n  },\n};\n```", "```js\n$ npx webpack\nHash: adbe083c08891bf4d5c7\nVersion: webpack 4.6.0\nTime: 4933ms\nBuilt at: 2018-04-24 19:34:55\nAsset Size Chunks Chunk Names\nbundle.js 322 KiB 0 [emitted] [big] app\nEntrypoint app [big] = bundle.js\n[7] (webpack)/buildin/global.js 489 bytes {0} [built]\n[73] (webpack)/buildin/module.js 497 bytes {0} [built]\n[74] ./src/utils/index.js 324 bytes {0} [built]\n[120] crypto (ignored) 15 bytes {0} [optional] [built]\n[121] buffer (ignored) 15 bytes {0} [optional] [built]\n[153] util (ignored) 15 bytes {0} [built]\n[155] util (ignored) 15 bytes {0} [built]\n[162] ./src/index.jsx 327 bytes {0} [built]\n+ 155 hidden modules\n```", "```js\n$ yarn add copy-webpack-plugin --dev\n```", "```js\nconst webpack = require('webpack');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nmodule.exports = {\n  entry: { ... },\n  output: { ... },\n  module: { ... },\n  plugins: [\n new CopyWebpackPlugin(['src/index.html'])\n ],\n};\n```", "```js\nCopyWebpackPlugin([ ...patterns ], options)\n```", "```js\n$ http-server dist/ -p 8200 --cors\n```", "```js\n\"scripts\": {\n  \"build\": \"rm -rf dist/ && webpack\"\n}\n```", "```js\nWEB_SERVER_PORT_TEST=8200\nWEB_SERVER_HOST_TEST=localhost\n```", "```js\n$ mkdir scripts && touch scripts/serve.sh\n$ chmod u+x scripts/serve.sh\n```", "```js\n#!/usr/bin/env bash\n# Set environment variables from .env and set NODE_ENV to test\nsource <(dotenv-export | sed 's/\\\\n/\\n/g')\nexport NODE_ENV=test\nyarn run build\nhttp-server dist/ -- -p $WEB_SERVER_PORT_TEST --cors\n```", "```js\n\"serve\": \"./scripts/serve.sh\"\n```"]