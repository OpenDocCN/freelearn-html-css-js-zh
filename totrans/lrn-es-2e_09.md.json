["```js\n<!doctype HTML>\n<html>\n    <head>\n        <title>Cool Stuff!</title>\n    </head>\n    <body>\n        <p>Awesome!</p>\n    </body>\n</html>\n```", "```js\n<div id=\"myID\">My Content Here</div>\n<script>\nconst myID = document.getElementById('myID'); // myID now contains reference to the div above\n</script>\n```", "```js\n<div>My Content Here</div>\n<script>\nconst div = document.getElementsByTagName('div')[0];\ndiv.innerHTML = \"Cool\"; // above div's text is replaced with \"Cool\"\n</script>\n```", "```js\n<span class=\"tag\">Hello</span>\n<span class=\"tag\">Hi</span>\n<span class=\"tag\">Wohoo!</span>\n\n<script>\nconst tags = document.getElementsByClassName('tag'); // This is a NodeList (not Array)\ntry {\n  tags.map(tag => console.log(tag)); // ERROR! map is not a function\n} catch(e) {\n  console.log('Error ', e);\n}\n\n[...tags].map(tag => console.log(tag)); // No error\n</script>\n```", "```js\n<div data-attr=\"coolDIV\">Make me red!</div>\n<script>\ndocument.querySelector('div[data-attr]').style.color = 'red'; // div becomes red\n</script>\n```", "```js\n<div data-attr=\"red\">Make me red!</div>\n<div data-attr=\"blue\">Make me blue!</div>\n\n<script>\n[...document.querySelectorAll('div[data-attr]')].map(div => {\n    div.style.color = div.attributes['data-attr'].value;\n});\n</script>\n```", "```js\nfunction pageChanged() {\n  if (document.hidden) {\n    console.log('User is on some other tab/out of focus') // line #1\n  } else {\n    console.log('Hurray! User returned') // line #2\n  }\n}\n\ndocument.addEventListener(\"visibilitychange\", pageChanged);\n```", "```js\nfunction state(e) {\n    if(navigator.onLine) {\n        console.log('Cool we\\'re up');\n    } else {\n        console.log('Uh! we\\'re down!');\n    }\n}\n\nwindow.addEventListener('offline', state);\nwindow.addEventListener('online', state);\n```", "```js\n<script>\nfunction copy2Clipboard(text) {\n  const textarea = document.createElement('textarea');\n  textarea.value = text;\n  document.body.appendChild(textarea);\n  textarea.focus();\n  textarea.setSelectionRange(0, text.length);\n  document.execCommand('copy');\n  document.body.removeChild(textarea);\n}\n</script>\n\n<button onclick=\"copy2Clipboard('Something good!')\">Click me!</button>\n```", "```js\n<canvas id=\"canvas\" width=\"100\" height=\"100\"></canvas>\n\n<script>\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  ctx.moveTo(0,0);\n  ctx.lineTo(100, 100);\n  ctx.stroke();\n</script>\n```", "```js\nfetch(link) \n.then(data => {\n    // do something with data\n})\n.catch(err => {\n    // do something with error\n});\n```", "```js\n<img id=\"img1\" alt=\"Mozilla logo\" />\n<img id=\"img2\" alt=\"Google logo\" />\n\nconst get2Images = async () => {\n    const image1 = await fetch('https://cdn.mdn.mozilla.net/static/img/web-docs-sprite.22a6a085cf14.svg');\n    const image2 = await fetch('https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png');\n    console.log(image1); // gives us response as an object\n    const blob1 = await image1.blob();\n    const blob2 = await image2.blob();\n\n    const url1 = URL.createObjectURL(blob1);\n    const url2 = URL.createObjectURL(blob2);\n\n    document.getElementById('img1').src = url1;\n    document.getElementById('img2').src = url2;\n\n    return 'complete';\n}\n\nget2Images().then(status => console.log(status));\n```", "```js\nconst headers = new Headers();\nheaders.append(\"Allow-Secret-Access\", \"yeah-because-my-token-is-1337\");\n\nconst config = { method: 'POST', headers };\n\nconst req = new Request('http://myawesomewebsite.awesometld/secretimage.jpg', config);\n\nfetch(req)\n.then(img => img.blob())\n.then(blob => myImageTag.src = URL.createObjectURL(blob));\n```", "```js\nconsole.log(history, history.length, history.state);\n```", "```js\n{length: 4, scrollRestoration: \"auto\", state: null}\n4\nnull\n```", "```js\nwindow.addEventListener('popstate', e => {\n    console.log(e.state); // state data of history (remember history.state ?)\n})\n```", "```js\nhistory.go(5); // forwards the browser 5 times\nhistory.go(-1); // similar effect of clicking back button\nhistory.go(0); // refreshes page\nhistory.go(); // refreshes page\n```", "```js\nif(awesomeButtonClicked && userWantsToMoveForward()) {\n    history.forward()\n}\n```", "```js\nhistory.pushState({myName: \"Mehul\"}, \"This is title of page\", \"/i_am_awesome\");\nhistory.pushState({page2: \"Packt\"}, \"This is page2\", \"/page2_packt\"); // <-- state is currently here\n```", "```js\nwindow.onpopstate = e => { // when this is called, state is already updated.\n    // e.state is the new state. It is null if it is the root state.\n    if(e.state !== null) {\n        console.log(e.state);\n    } else {\n        console.log(\"Root state\");\n    }\n}\n```", "```js\n{myName: \"Mehul\"}\n```", "```js\nhistory.replaceState({myName: \"Mehul\"}, \"This is title of page\", \"/i_am_awesome\");\n```"]