["```js\nvar View = Ember.View.extend({});\n```", "```js\nvar view = View.create();\n```", "```js\nvar UserView = View.extend({\n  isLoggedIn: true,\n  isAdmin: false\n});\n```", "```js\nvar mixinA = Ember.Mixin.create({\n  isLoggedIn: true\n});\n\nvar mixinB = Ember.Mixin.create({\n  isAdmin: false\n});\n\nvar userView = View.createWithMixins(mixinA, mixinB);\n```", "```js\nview.get('controller').getSortedBooks();\n```", "```js\nApp.Router.map(function(){\n  this.route('new');\n});\n```", "```js\nApp.NewRoute = Ember.Route.extend({\n  model: function(){\n    return Em.Object.create();\n  }\n});\n```", "```js\nApp.NewRoute = Ember.Route.extend({\n  model: function(){\n    return Em.Object.create();\n  },\n  renderTemplate: function(controller, model){\n    this.render('form');\n  }\n});\n```", "```js\n<script type='text/x-handlebars' id='new'>\n<input name='name' >\n<input name='gender' >\n<button type='submit'>save</button>\n</script>\n```", "```js\nvar template = [\n '<input name='name' >',\n '<input name='gender' >',\n'<button type='submit'>save</button>'\n].join('');\n\nEmber.TEMPLATES['new'] = Ember.Handlebars.compile(template);\n```", "```js\n<script type='text/x-handlebars' id='form'>\n   <input name='name' >\n   <input name='gender' >\n   <button type='submit'>save</button>\n</script>\n\n   App.NewView = Ember.View.extend({\n     templateName: 'form'\n  });\n```", "```js\n<div>{{name}}</div>\n<div>{{gender}}</div>\n```", "```js\n<div id='ember10' class='ember-view'>\n  <div>Jon Doe</div>\n  <div>Male</div>\n</div>\n```", "```js\nvar View = Ember.View.extend({\n  templateName: 'user',\n  tagName: 'header'\n});\n```", "```js\n<header div id='ember10' class='ember-view'>\n  <div>Jon Doe</div>\n  <div>Male</div>\n</header>\n```", "```js\nvar view = Ember.View.extend({\n  tagName: 'button',\n  classNames: ['btn', 'btn-primary]\n});\n```", "```js\n<button class='btn btn-primary'>Button</button>\n```", "```js\nvar View = Ember.View.extend({\n  tagName: 'button',\n  classNames: ['btn'],\n  classNameBindings: ['btnWarning'],\n  btnWarning: true\n});\n```", "```js\n<button class='btn btn-warning'>Button</button>\n```", "```js\nvar View = Ember.View.extend({\n  tagName: 'button',\n  classNames: ['btn'],\n  classNameBindings: ['warn:btnWarning'],\n  warn: true\n});\n```", "```js\nclassNameBindings: ['property:truthyClassName:falsyClassName'],\n```", "```js\nvar View = Ember.View.extend({\n  tagName: 'button',\n  classNames: ['btn'],\n  classNameBindings: ['controller.warn:btnWarning:btnPrimary'],\n});\n```", "```js\n<button class='btn btn-warning'>checkout</button>\n```", "```js\n<button class='btn btn-primary'>checkout</button>\n```", "```js\nvar thumb = Ember.View.create({\n  tagName: 'img',\n  attributeBindings: ['width', 'height', 'src'],\n  width: 50,\n  height: 50,\n  src: 'http://www.google.com/doodles/new-years-day-2014'\n});\n```", "```js\n<img src='http://www.google.com/doodles/new-years-day-2014' width='50' height='50'>\n```", "```js\n// view\n\nApp.FormButton = Em.View.extend({\n  tagName: 'button',\n  attributeBindings: ['disabled'],\n  disabled: function(){\n     return !this.get('controller.model.title');\n  }.property('controller.model.title')\n});\n\n// route\n\nApp.NewRoute = Em.Route.extend({\n  model: function(){\n    return Em.Object.create({\n   });\n  }\n});\n\n{{! new template }}\n\n<form {{action 'save' model on='submit'}}>\n  {{input value=model.title}}\n  {{#view App.FormButton}}save{{/view}}\n</form>\n```", "```js\nApp.FormButton = Em.View.extend({\n  tagName: 'button',\n  attributeBindings: ['modelIsValid::disabled'],\n  modelIsValid: function(){\n     return !this.get('model.title');\n  }.property('model.title')\n});\n```", "```js\n\"propertyName:attributeWhenTrue:attributeWhenFalse\" \n```", "```js\nview.appendTo('#header');\n```", "```js\nview.appendTo('header');\nview.appendTo('#header');\nview.appendTo('.header');\nview.appendTo('body > header');\n```", "```js\nview.append(); // appends view to the body section\n```", "```js\nview.remove();\n```", "```js\nview.destroy();\n```", "```js\n<script type='text/x-handlebars' id='application'>\n{{view App.HeaderView}}\n{{view App.FooterView}}\n</script>\n```", "```js\n{{! application template}}\n<script type='text/x-handlebars' id='application'>\n\n {{view App.HeaderView}}\n\n {{#view App.ContentView}}\n   {{view App.SideView}}\n   {{view App.PaneView}}\n {{/view}}\n\n {{view App.FooterView}}\n\n</script>\n```", "```js\n<script type='text/x-handlebars' id='container'>\n  <div id='container'>\n   {{yield}}\n  </div>\n</script>\n```", "```js\nvar View = Ember.View.extend({\n  tagName: 'section',\n  layoutName: 'container',\n  templateName: 'book'\n});\n```", "```js\n<script type='text/x-handlebars' id='book'>\n  <p>Author: Jon Doe</p>\n   </script>\n```", "```js\n<div id='container'>\n <section>\n  <p>Author: Jon Doe</p>\n </section>\n   </div>\n```", "```js\n  <button {{action 'checkout'}}>checkout</button>\n```", "```js\nApp.CheckoutButton = Ember.View.extend({\n  tagName: 'button',\n  click: function(event){\n    this.get('controller').send('checkout');\n  }\n});\n\n{{! template }}\n{{#view App.CheckoutButton }}checkout{{/view}}\n```", "```js\nApp.CheckoutButton = Ember.View.extend({\n  tagName: 'button',\n  click: function(event){\n    this.get('controller').send('checkout');\n  }\n});\n```", "```js\nApp.InputView = Ember.TextField.extend({\n  change: function(event){\n    console.log(this.get('value')); \n  }\n});\n```", "```js\n{{view App.InputView name='name' valueBinding='controller.name'}}\n```", "```js\n{{view Ember.TextArea name='content' valueBinding='content' rows=10 cols=10}}\n```", "```js\n// controller\n\nApp.ApplicationController = Ember.Controller.extend({\n  selectedFruit: null,\n  fruits: [{\n    id: 1,\n    name: 'mango'\n  }, {\n    id: 2,\n    name: 'apple'\n }],\n}); \n\n{{! template }}\n\n{{view Ember.Select\n  prompt='Select a fruit:'\n  contentBinding='fruits'\n  selectionBinding='selectedFruit'\n  optionLabelPath='content.name'\n  optionValuePath='content.id'}}\n```", "```js\n{{view Ember.Checkbox name='is-complete' valueBinding='isComplete'}}\n{{view Ember.Checkbox name='is-done' valueBinding='isDone'}}\n{{view Ember.Checkbox name='is-empty' valueBinding='isEmpty'}}\n```", "```js\n<input type='checkbox' name='is-complete' checked >\n<input type='checkbox' name='is-done' >\n<input type='checkbox' name='is-empty' >\n```", "```js\n{{#view App.ContentView}}\n  {{view App.SideView}}\n  {{view App.PaneView}}\n{{/view}}\n```", "```js\nvar sideView = Ember.View.create();\nvar paneView = Ember.View.create();\nvar contentView = Ember.ContainerView.create();\ncontentView.pushObjects([\n  sideView, paneView\n]);\n```", "```js\nvar compile = Em.Handlebars.compile;\nvar contentView = Ember.ContainerView.create({\n  childViews: ['sideView', 'paneView'],\n  sideView: Ember.View.create({\n    template: compile('Side')\n  }),\n  paneView = Ember.View.create({\n    template: compile('Pane')\n  })\n});\n```", "```js\n<div>\n  <div>Side</div>\n  <div>Pane</div>\n</div>\n```", "```js\n$(docoment).ready(function(event){\n  // initialize library\n  $('#menu').dropdown();\n});\n```", "```js\n// view\nApp.MenuView = Ember.View.extend({\n  didInsertElement: function(){\n    this._super();\n    Ember.run.schedule('afterRender', this, function() {\n      this.$().dropdown();\n    });\n  }\n});\n\n{{! template}}\n{{view App.MenuView}}\n```", "```js\nApp.MenuView = Ember.View.extend({\n  willDestroy: function(){\n    this._super();\n    this.$().tearDownDropdown();\n  }\n});\n```"]