["```js\nfunction createSprites() {\n  var material = new THREE.SpriteMaterial();\n  for (var x = -5; x < 5; x++) {\n    for (var y = -5; y < 5; y++) {\n      var sprite = new THREE.Sprite(material);\n      sprite.position.set(x * 10, y * 10, 0);\n      scene.add(sprite);\n    }\n  }\n}\n```", "```js\nfunction createParticles() {\n\n  var geom = new THREE.Geometry();\n  var material = new THREE.PointCloudMaterial({size: 4, vertexColors: true, color: 0xffffff});\n\n  for (var x = -5; x < 5; x++) {\n    for (var y = -5; y < 5; y++) {\n      var particle = new THREE.Vector3(x * 10, y * 10, 0);\n      geom.vertices.push(particle);\n      geom.colors.push(new THREE.Color(Math.random() * 0x00ffff));\n    }\n  }\n\n  var cloud = new THREE.PointCloud(geom, material);\n  scene.add(cloud);\n}\n```", "```js\nfunction createParticles(size, transparent, opacity, vertexColors, sizeAttenuation, color) {\n\n  var geom = new THREE.Geometry();\n  var material = new THREE.PointCloudMaterial({size: size, transparent: transparent, opacity: opacity, vertexColors: vertexColors, sizeAttenuation: sizeAttenuation, color: color});\n\n  var range = 500;\n  for (var i = 0; i < 15000; i++) {\n    var particle = new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range - range / 2, Math.random() * range - range / 2);\n    geom.vertices.push(particle);\n    var color = new THREE.Color(0x00ff00);\n    color.setHSL(color.getHSL().h, color.getHSL().s, Math.random() * color.getHSL().l);\n    geom.colors.push(color);\n  }\n\n  cloud = new THREE.PointCloud(geom, material);\n  scene.add(cloud);\n}\n```", "```js\nfunction createSprites() {\n\n  var material = new THREE.SpriteCanvasMaterial({\n    program: draw,\n    color: 0xffffff});\n   material.rotation = Math.PI;\n\n  var range = 500;\n  for (var i = 0; i < 1000; i++) {\n    var sprite = new THREE.Sprite(material);\n    sprite.position = new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range - range / 2, Math.random() * range - range / 2);\n    sprite.scale.set(0.1, 0.1, 0.1);\n    scene.add(sprite);\n  }\n}\n```", "```js\nvar draw = function(ctx) {\n  ctx.fillStyle = \"orange\";\n  ...\n  // lots of other ctx drawing calls\n  ...\n  ctx.beginPath();\n  ctx.fill();\n}\n```", "```js\nvar getTexture = function() {\n  var canvas = document.createElement('canvas');\n  canvas.width = 32;\n  canvas.height = 32;\n\n  var ctx = canvas.getContext('2d');\n  ...\n  // draw the ghost\n  ...\n  ctx.fill();\n  var texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true;\n  return texture;\n}\n\nfunction createPointCloud(size, transparent, opacity, sizeAttenuation, color) {\n\n  var geom = new THREE.Geometry();\n\n  var material = new THREE.PointCloudMaterial ({size: size, transparent: transparent, opacity: opacity, map: getTexture(), sizeAttenuation: sizeAttenuation, color: color});\n\n  var range = 500;\n  for (var i = 0; i < 5000; i++) {\n    var particle = new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range - range / 2, Math.random() * range - range / 2);\n    geom.vertices.push(particle);\n  }\n\n  cloud = new THREE.PointCloud(geom, material);\n  cloud.sortParticles = true;\n  scene.add(cloud);\n}\n```", "```js\nfunction createSprites() {\n  var material = new THREE.SpriteMaterial({\n    map: getTexture(),\n    color: 0xffffff\n  });\n\n  var range = 500;\n  for (var i = 0; i < 1500; i++) {\n    var sprite = new THREE.Sprite(material);\n    sprite.position.set(Math.random() * range - range / 2, Math.random() * range - range / 2, Math.random() * range - range / 2);\n    sprite.scale.set(4,4,4);\n    scene.add(sprite);\n  }\n}\n```", "```js\nvar texture = THREE.ImageUtils.loadTexture(\"../assets/textures/particles/raindrop-2.png\");\n```", "```js\nvar material = new THREE.PointCloudMaterial({size: 3, transparent: true, opacity: true, map: texture, blending: THREE.AdditiveBlending, sizeAttenuation: true, color: 0xffffff});\n```", "```js\nvar range = 40;\nfor (var i = 0; i < 1500; i++) {\n  var particle = new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range * 1.5, Math.random() * range - range / 2);\n\n  particle.velocityX = (Math.random() - 0.5) / 3;\n  particle.velocityY = 0.1 + (Math.random() / 5);\n  geom.vertices.push(particle);\n}\n```", "```js\nvar vertices = system2.geometry.vertices;\nvertices.forEach(function (v) {\n  v.x = v.x - (v.velocityX);\n  v.y = v.y - (v.velocityY);\n\n  if (v.x <= -20 || v.x >= 20) v.velocityX = v.velocityX * -1;\n  if (v.y <= 0) v.y = 60;\n});\n```", "```js\nfunction createPointClouds(size, transparent, opacity, sizeAttenuation, color) {\n\n  var texture1 = THREE.ImageUtils.loadTexture(\"../assets/textures/particles/snowflake1.png\");\n  var texture2 = THREE.ImageUtils.loadTexture(\"../assets/textures/particles/snowflake2.png\");\n  var texture3 = THREE.ImageUtils.loadTexture(\"../assets/textures/particles/snowflake3.png\");\n  var texture4 = THREE.ImageUtils.loadTexture(\"../assets/textures/particles/snowflake5.png\");\n\n  scene.add(createPointCloud(\"system1\", texture1, size, transparent, opacity, sizeAttenuation, color));\n  scene.add(createPointCloud (\"system2\", texture2, size, transparent, opacity, sizeAttenuation, color));\n  scene.add(createPointCloud (\"system3\", texture3, size, transparent, opacity, sizeAttenuation, color));\n  scene.add(createPointCloud (\"system4\", texture4, size, transparent, opacity, sizeAttenuation, color));\n}\n```", "```js\nfunction createPointCloud(name, texture, size, transparent, opacity, sizeAttenuation, color) {\n  var geom = new THREE.Geometry();\n\n  var color = new THREE.Color(color);\n  color.setHSL(color.getHSL().h, color.getHSL().s, (Math.random()) * color.getHSL().l);\n\n  var material = new THREE.PointCloudMaterial({size: size, transparent: transparent, opacity: opacity, map: texture, blending: THREE.AdditiveBlending, depthWrite: false, sizeAttenuation: sizeAttenuation, color: color});\n\n  var range = 40;\n  for (var i = 0; i < 50; i++) {\n    var particle = new THREE.Vector3(Math.random() * range - range / 2, Math.random() * range * 1.5, Math.random() * range - range / 2);\n    particle.velocityY = 0.1 + Math.random() / 5;\n    particle.velocityX = (Math.random() - 0.5) / 3;\n    particle.velocityZ = (Math.random() - 0.5) / 3;\n    geom.vertices.push(particle);\n  }\n\n  var cloud = new THREE.ParticleCloud(geom, material);\n  cloud.name = name;\n  cloud.sortParticles = true;\n  return cloud;\n}\n```", "```js\nscene.children.forEach(function (child) {\n  if (child instanceof THREE.ParticleSystem) {\n    var vertices = child.geometry.vertices;\n    vertices.forEach(function (v) {\n      v.y = v.y - (v.velocityY);\n      v.x = v.x - (v.velocityX);\n      v.z = v.z - (v.velocityZ);\n\n      if (v.y <= 0) v.y = 60;\n      if (v.x <= -20 || v.x >= 20) v.velocityX = v.velocityX * -1;\n      if (v.z <= -20 || v.z >= 20) v.velocityZ = v.velocityZ * -1;\n    });\n  }\n});\n```", "```js\nvar sceneOrtho = new THREE.Scene();\nvar cameraOrtho = new THREE.OrthographicCamera( 0, window.innerWidth, window.innerHeight, 0, -10, 10 );\n```", "```js\nfunction getTexture() {\n  var texture = new THREE.ImageUtils.loadTexture(\"../assets/textures/particles/sprite-sheet.png\");\n  return texture;\n}\n\nfunction createSprite(size, transparent, opacity, color, spriteNumber) {\n  var spriteMaterial = new THREE.SpriteMaterial({\n    opacity: opacity,\n    color: color,\n    transparent: transparent,\n    map: getTexture()});\n\n  // we have 1 row, with five sprites\n  spriteMaterial.map.offset = new THREE.Vector2(1/5 * spriteNumber, 0);\n  spriteMaterial.map.repeat = new THREE.Vector2(1/5, 1);\n  spriteMaterial.blending = THREE.AdditiveBlending;\n\n  // makes sure the object is always rendered at the front\n  spriteMaterial.depthTest = false;\n  var sprite = new THREE.Sprite(spriteMaterial);\n  sprite.scale.set(size, size, size);\n  sprite.position.set(100, 50, 0);\n  sprite.velocityX = 5;\n\n  sceneOrtho.add(sprite);\n}\n```", "```js\nwebGLRenderer.render(scene, camera);\nwebGLRenderer.autoClear = false;\nwebGLRenderer.render(sceneOrtho, cameraOrtho);\n```", "```js\nfunction createSprites() {\n\n  group = new THREE.Object3D();\n  var range = 200;\n  for (var i = 0; i < 400; i++) {\n    group.add(createSprite(10, false, 0.6, 0xffffff, i % 5, range));\n  }\n  scene.add(group);\n}\n\nfunction createSprite(size, transparent, opacity, color, spriteNumber, range) {\n\n  var spriteMaterial = new THREE.SpriteMaterial({\n    opacity: opacity,\n    color: color,\n    transparent: transparent,\n    map: getTexture()}\n  );\n\n  // we have 1 row, with five sprites\n  spriteMaterial.map.offset = new THREE.Vector2(0.2*spriteNumber, 0);\n  spriteMaterial.map.repeat = new THREE.Vector2(1/5, 1);\n  spriteMaterial.depthTest = false;\n\n  spriteMaterial.blending = THREE.AdditiveBlending;\n\n  var sprite = new THREE.Sprite(spriteMaterial);\n  sprite.scale.set(size, size, size);\n  sprite.position.set(Math.random() * range - range / 2, Math.random() * range - range / 2, Math.random() * range - range / 2);\n  sprite.velocityX = 5;\n\n  return sprite;\n}\n```", "```js\ngroup.rotation.x+=0.1;\n```", "```js\nfunction generateSprite() {\n\n  var canvas = document.createElement('canvas');\n  canvas.width = 16;\n  canvas.height = 16;\n\n  var context = canvas.getContext('2d');\n  var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n\n  gradient.addColorStop(0, 'rgba(255,255,255,1)');\n  gradient.addColorStop(0.2, 'rgba(0,255,255,1)');\n  gradient.addColorStop(0.4, 'rgba(0,0,64,1)');\n  gradient.addColorStop(1, 'rgba(0,0,0,1)');\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  var texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true;\n  return texture;\n}\n\nfunction createPointCloud(geom) {\n  var material = new THREE.PointCloudMaterial({\n    color: 0xffffff,\n    size: 3,\n    transparent: true,\n    blending: THREE.AdditiveBlending,\n    map: generateSprite()\n  });\n\n  var cloud = new THREE.PointCloud(geom, material);\n  cloud.sortParticles = true;\n  return cloud;\n}\n\n// use it like this\nvar geom = new THREE.TorusKnotGeometry(...);\nvar knot = createPointCloud(geom);\n```"]