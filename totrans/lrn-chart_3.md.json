["```js\n<script src=\"img/Chart.min.js\"></script>\n```", "```js\nnpm install chart.js --save\nbower install chart.js --save\n```", "```js\n<script src=\"img/Chart.min.js\">\n</script>\n```", "```js\n<canvas id=\"my-bar-chart\" width=\"200\" height=\"200\"></canvas>\n```", "```js\n<script>\n    const canvas = document.getElementById(\"my-bar-chart\");\n</script>\n```", "```js\ncanvas canvas = document.createElement(\"canvas\");\ncanvas.setAttribute(\"id\",\"my-bar-chart\");\ndocument.body.appendChild(canvas);\n```", "```js\nconst chartObj = {…}; // the chart data is here\nconst context = canvas.getContext(\"2d\");\nnew Chart(context, chartObj); // this will display the chart in the canvas\n```", "```js\nnew Chart(\"my-bar-chart\", chartObj);\n```", "```js\nconst chartObj = {type: \"bar\", data: dataObj};\n```", "```js\nnew Chart(\"my-bar-chart\", {type: \"bar\", data: dataObj});\n```", "```js\nconst labels = [\"Arctic\", \"North Atlantic\", \"South Atlantic\",\n                \"Indian\", \"North Pacific\", \"South Pacific\",\n                \"Southern\"];\n```", "```js\nconst volumes = [18750,146000,160000,264000,341000,329000,71800]; // 10^3 km3\n```", "```js\nconst dataObj = {\n     labels: labels,\n     datasets: [\n         {\n             label: \"Volume\",\n             data: volumes\n         }\n     ]\n}\n```", "```js\n <!DOCTYPE html>\n <html lang=\"en\">\n <head>\n <script src=\"img/Chart.min.js\">\n </script>\n </head>\n <body>\n <canvas id=\"ocean-volume-bar-chart\" width=\"400\" height=\"400\"></canvas>\n <script>\n   const labels = [\"Arctic\", \"North Atlantic\", \"South Atlantic\",\n                   \"Indian\", \"North Pacific\", \"South Pacific\", \"Southern\"];\n   const volumes = [18750,146000,160000,264000,341000,329000,71800];\n\n   const dataObj = {\n       labels: labels,\n       datasets: [\n           {\n               label: \"Volume\",\n               data: volumes\n           }\n       ]\n   }\n   new Chart(\"ocean-volume-bar-chart\", {type: \"bar\", data: dataObj});\n  </script>\n </body>\n </html>\n```", "```js\n const dataObj = {\n     labels: labels,\n     datasets: [\n         {\n             label: \"Volume\",\n             data: volumes,\n             borderWidth: 2,\n             backgroundColor: \"hsla(20,100%,80%,0.8)\",\n             borderColor: \"hsla(0,100%,50%,1)\"\n         }\n     ]\n }\n new Chart(\"ocean-volume-bar-chart\", {type: \"bar\", data: dataObj});\n```", "```js\nnew Chart(\"ocean-volume-bar-chart\",\n        {\n            type: \"bar\",\n            data: dataObj,\n            options: {} // configure options here\n        });\n```", "```js\noptions: {\n    responsive: false\n}\n```", "```js\noptions: {\n    maintainAspectRatio: false\n}\n```", "```js\n<style>\n    #canvas-container {\n        position: relative;\n        height: 80%;\n        width: 80%;\n    }\n</style>\n<div id=\"canvas-container\">\n  <canvas id=\"ocean-volume-bar-chart\" width=\"200\" height=\"200\"></canvas>\n</div>\n```", "```js\noptions: { // configure options here\n    ...\n    legend: {\n        display: false\n    }\n}\n```", "```js\noptions: { // configure options here\n     maintainAspectRatio: false,\n     legend: {\n         display: false\n     },\n     title: {\n         display: true,\n         text: ['Volume of the oceans','in thousands of cubic km'],\n         fontFamily: \"TrebuchetMS\",\n         fontSize: 24,\n         fontColor: 'rgb(0,120,0)',\n     }\n }\n```", "```js\nChart.defaults.global.defaultFontFamily = \"Helvetica Neue\";\n```", "```js\nChart.defaults.global.legend.fontSize = 10; // all legend text will be size 10\n```", "```js\nnew Chart(\"ocean-volume-bar-chart\", {\n    type: \"bar\",\n    data: {...},\n    options: {\n        …\n        animation: {\n            duration: 5000\n        }\n    }\n});\n```", "```js\nconst ch = new Chart(\"ocean-volume-bar-chart\", {...});\n```", "```js\nconst labels = [\"Arctic\", \"North Atlantic\", \"South Atlantic\", \"Indian\",\n                \"North Pacific\", \"South Pacific\", \"Southern\"];\n\n const area   = [15558,41900,40270,70560,84000,84750,21960];   // km2 * 10^3\n const volume = [18750,146000,160000,264000,341000,329000,71800];      //km3 * 10^3\n const canvas = document.getElementById(\"ocean-volume-bar-chart\");\n const ctx = canvas.getContext(\"2d\");\n const ch = new Chart(ctx, {\n     type: \"bar\",\n     data: {\n         labels: labels,\n         datasets: [\n             {\n                 label: \"Volume\",\n                 data: volume,\n                 borderWidth: 2,\n                 backgroundColor: \"hsla(20,100%,80%,0.8)\",\n                 borderColor: \"hsla(0,100%,50%,1)\"\n             }\n         ]\n     },\n     options: {\n         maintainAspectRatio: false,\n         title: {\n             display: true,\n             text: ['Volume of the oceans','in thousands of cubic km'],\n             fontFamily: \"TrebuchetMS\",\n             fontSize: 24\n         },\n         legend: {\n             display: false\n         }\n     }\n });\n\n canvas.addEventListener(\"click\", toggle);\n\n function toggle(event) {\n     if(ch.data.datasets[0].label == \"Volume\") {\n         ch.data.datasets[0].data = area;\n         ch.data.datasets[0].label = \"Area\";\n         ch.data.datasets[0].borderColor = \"hsla(120,100%,50%,1)\";\n         ch.data.datasets[0].backgroundColor = \"hsla(140,100%,80%,0.8)\";\n         ch.options.title.text = ['Surface area of the oceans',\n                                  'in thousands of square km'];\n     } else {\n         ch.data.datasets[0].data = volume;\n         ch.data.datasets[0].label = \"Volume\";\n         ch.data.datasets[0].backgroundColor = \"hsla(20,100%,80%,0.8)\";\n         ch.data.datasets[0].borderColor = \"hsla(0,100%,50%,1)\";\n         ch.options.title.text = ['Volume of the oceans',\n                                  'in thousands of cubic km'];\n     }\n     ch.update();\n }\n```", "```js\noptions: {\n     …\n     title: {…},\n     legend: {…},\n     animation: {…},\n     tooltips: {\n       backgroundColor: 'rgba(200,200,255,.9)',\n       titleFontColor: 'black',\n       caretSize: 5,\n       callbacks: {\n           labelColor: function(tooltipItem, chart) {\n              return {\n                  borderColor: 'black',\n                  backgroundColor: \n                  chart.data.datasets[0].backgroundColor\n              }\n           },\n           labelTextColor:function(tooltipItem, chart){\n              return chart.data.datasets[0].borderColor;\n           }\n        }\n     }\n }\n```", "```js\n Country,Tonnes\n China,8819717\n Indonesia,3216856\n Philippines,1883659\n ...\n United States,275424\n```", "```js\nfetch('../Data/waste.csv')\n  .then(response => response.text())\n  .then((data) => {\n    const labels = [],\n          values = [];\n    const rows = data.split(\"\\n\");\n\n    rows.forEach(r => {\n        const item = r.split(\",\");\n        labels.push(item[0]);\n        values.push(+item[1]);\n    });\n\n    labels.shift(); // remove the header\n    values.shift(); // remove the header\n\n    console.log(labels); // print to check if the arrays\n    console.log(values); // were generated correctly\n\n    draw(labels, values);\n\n });\n```", "```js\nfunction draw(labels, values) {\n   const canvas = document.getElementById(\"bar-chart\");\n   const ctx = canvas.getContext(\"2d\");\n\n   new Chart(ctx, {\n       type: \"bar\",\n       data: {\n           labels: labels, // the labels\n           datasets: [\n               {\n                   label: \"Tonnes of plastic\",\n                   data: values, // the data values\n                   borderWidth: 2,\n                   backgroundColor: \"hsla(20,100%,80%,0.8)\",\n                   borderColor: \"hsla(0,100%,50%,1)\"\n               }\n             ]\n         },\n         options: {\n             maintainAspectRatio: false,\n             title: {\n                 display: true,\n                 text: 'Tonnes of plastic waste',\n                 fontSize: 16\n             },\n             legend: {\n                 display: false\n             }\n         }\n     });\n }\n```", "```js\nnew Chart(ctx, {\n    type: \"horizontalBar\",\n    data: {…}\n}\n```", "```js\n Country,2010,2025\n China,8819717,17814777\n Indonesia,3216856,7415202\n Philippines,1883659,5088394\n ...\n United States,275424,336819\n```", "```js\nfetch('../Data/waste2.csv')\n .then(response => response.text())\n .then((data) => {\n   const labels = [],\n         values2010 = [],\n         values2025 = [];\n\n   const rows = data.split(\"\\n\");\n\n   rows.forEach(r => {\n       const item = r.split(\",\");\n       labels.push(item[0]);\n       values2010.push(+item[1]/1000000); // divide by 1 million to make\n       values2025.push(+item[2]/1000000); // the chart easier to read\n    });\n\n    labels.shift();\n    values2010.shift();\n    values2025.shift();\n\n    draw(labels, [values2010, values2025]);\n\n });\n```", "```js\nfunction draw(labels, values) {\n    const canvas = document.getElementById(\"bar-chart\");\n    const ctx = canvas.getContext(\"2d\");\n\n    new Chart(ctx, {\n        type: \"horizontalBar\",\n        data: {\n            labels: labels,\n            datasets: [\n                {  \n                    label: \"2010\",\n                    data: values[0],\n                    backgroundColor: \"hsla(20,100%,50%,0.7)\",\n                },{\n                    label: \"2025\",\n                    data: values[1],\n                    backgroundColor: \"hsla(260,100%,50%,0.7)\",\n                }\n            ]\n        },\n        options: {\n            maintainAspectRatio: false,\n            title: {\n                display: true,\n                text: 'Millions of tonnes of plastic waste',\n                fontSize: 16\n            }\n        }\n    });\n }\n```", "```js\noptions: {\n    maintainAspectRatio: false,\n    title: {\n        display: true,\n        text: 'Tonnes of plastic waste',\n        fontSize: 16\n     },\n     scales: {\n         yAxes: [{\n             barPercentage: .3,\n             categoryPercentage: .5\n         }]\n     }\n }\n```", "```js\nconst dataObj = {\n    labels: [\"Volume\"], // there is only one category\n    datasets: [\n        {\n            label: \"Arctic\", data: [18750],\n            backgroundColor: \"hsla(0,100%,50%,0.5)\"\n        },{\n            label: \"North Atlantic\", data: [146000],\n            backgroundColor: \"hsla(60,100%,50%,0.5)\"\n        },{\n            label: \"South Atlantic\", data: [160000],\n            backgroundColor: \"hsla(120,100%,50%,0.5)\"\n        },{\n            label: \"Indian\", data: [264000],\n            backgroundColor: \"hsla(180,100%,50%,0.5)\"\n        },{\n            label: \"North Pacific\", data: [341000],\n            backgroundColor: \"hsla(240,100%,50%,0.5)\"\n        },{\n            label: \"South Pacific\", data: [329000],\n            backgroundColor: \"hsla(300,100%,50%,0.5)\"\n        },{\n            label: \"Southern\", data: [71800],\n            backgroundColor: \"hsla(340,100%,50%,0.5)\"\n        },\n    ]\n };\n```", "```js\n const optionsObj = {\n    maintainAspectRatio: false,\n     title: {\n         display: true,\n         text: 'Volume of oceans (km3)',\n         fontSize: 16\n     },\n     legend: {\n         position: 'right'\n     },\n     scales: {\n         xAxes: [{\n             stacked: true\n         }],\n         yAxes: [{\n             stacked: true\n         }]\n     }\n }\n new Chart(\"ocean-volume-bar-chart\",\n           {type: \"bar\", data: dataObj, options: optionsObj});\n```"]