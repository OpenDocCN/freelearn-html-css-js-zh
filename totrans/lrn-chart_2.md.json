["```js\nconst colors = [\"red\", \"blue\", \"green\"];\nconst geocoords = [27.2345, 34.9937];\nconst numbers = [1,2,3,4,5,6];\nconst empty = [];\n```", "```js\nconst blue = colors[1];\nconst latitude = geocoords[0];\n```", "```js\nfor(let i = 0; i < colors.length; i++) {\n    console.log(colors[i]);\n}\n```", "```js\nfor(let color of colors) {\n    console.log(color);\n}\n```", "```js\ncolors.forEach(function(i, color, colors) {\n    console.log((i+1) + \": \" + color);\n}\n```", "```js\nconst points = [[200,300], [150,100], [100,300]];\n```", "```js\nconst firstPoint = points[0];\nconst middleX = points[1][0];\n```", "```js\ncolors.push(\"yellow\"); \n/*[\"red\", \"blue\", \"green\", \n   \"yellow\"];*/\n```", "```js\nconst green = colors.pop(); \n// [\"red\", \"blue\"];\n```", "```js\ncolors.unshift(\"yellow\");\n/*[\"yellow\", \"red\", \"blue\", \n   \"green\"];*/\n```", "```js\nconst red = colors.shift();\n// [\"blue\", \"green\"];\n```", "```js\nconst s = numbers.splice(2,3);\n // s = [3,4,5]\n // numbers = [1,2,6]\n```", "```js\nnumbers.reverse(); \n// [6,5,4,3,2,1]\n```", "```js\nnumbers.sort((a,b) => b – a);\n// numbers = [6,5,4,3,2,1]\n```", "```js\nconst mid = numbers.slice(2,4)\n // mid = [3,4]\n```", "```js\nconst even = numbers.filter(n => n%2==0);\n// [2,4,6]\n```", "```js\nconst two = numbers.find(n => n%2==0);\n// 2\n```", "```js\nconst n = numbers.indexOf(3); \n// 4\n```", "```js\nconst n = numbers.includes(3); \n// true\n```", "```js\nconst n = colors.lastIndexOf(\"blue\"); \n// 1\n```", "```js\nconst eight = numbers.concat([7,8]);\n// [1,2,3,4,5,6,7,8]\n```", "```js\nconst csv = numbers.join();\n// \"1,2,3,4,5,6\"\nconst conc = numbers.join(\"\");\n// \"123456\"\n```", "```js\nconst squares = numbers.map(n => n*n);\n// [1,4,9,16,25,36]\n```", "```js\nconst sum =\n  numbers.reduce((a, n) => a + n);\n```", "```js\nconst squares = [];\nnumbers.forEach(n => squares.push(n*n)\n// squares = [1,4,9,16,26,36]\n```", "```js\nconst line = \"Multiline strings can be \\\nreated adding a backslash \\\nat the end of each line\";\n```", "```js\nconst template = `The square root of 2 is ${Math.sqrt(2)}`;\n```", "```js\nconst s = \"This is a backslash \\\\ and this is a double quote \\\"\";\n```", "```js\nconst s = \"This is a test string\"\nconst r = s.startsWith(\"This\");    \n// true\n```", "```js\nconst s = \"This is a test string\"\nconst r = s.endsWith(\"This\"); \n// false\n```", "```js\nconst k = \"Aardvark\"\nconst ardva = k.substring(1,6);\n```", "```js\nconst result = s.split(\" \");\n// result =\n//[\"This\",\"is\",\"a\",\"test\",\"string\"]\n```", "```js\nconst k = \"Aardvark\"\nconst i = k.indexOf(\"ar\"); // i = 1\n```", "```js\nconst k = \"Aardvark\"\nconst i = k.lastIndexOf(\"ar\");\n// i = 5\n```", "```js\nconst k = \"Aardvark\"\nconst v = k.charAt(4);\n```", "```js\nconst text = \"   data   \"\nconst r = data.trim(); \n// r = \"data\"\n```", "```js\nconst k = \"Aardvark\"\nconst v = k.match(/[a-f]/g);\n// v = [\"a\", \"d\", \"a\"]\n```", "```js\nconst k = \"Aardvark\"\nconst a = p.replace(/a/gi, 'u')\n// a = \"uurdvurk\"\nconst b = p.replace('ardv', 'ntib')\n// b = \"Antibark\"\n```", "```js\nfunction f() {\n    console.log('function1', this);\n}\nconst g = function(name) {\n    console.log('function ' + name, this);\n}\nf(); // calls f\ng('test'); // calls g() with a parameter\n```", "```js\nconst obj = {a: 5, b: 6}\nobj.method = function() {\n    console.log('method', this)\n}\nobject.method()\n```", "```js\nobj.arrow = () => console.log('arrow', this)\nobject.arrow()\n```", "```js\nconst color = {name: \"red\", code: ff0000};\nconst empty = {};\n```", "```js\nconst city = {name: \"Sao Paulo\",\n              location: {latitude: 23.555, longitude: 46.63},\n              airports: [\"SAO\",\"CGH\",\"GRU\",\"VCP\"]};\nconst circle = {\n    x: 200,\n    y: 100,\n    r: 50,\n    area: function() {\n        return this.r * this.r * 3.14;\n    }\n}\n```", "```js\nvar array2 = [\n    {continent: \"Asia\", areakm2: 43820000},\n    {continent: \"Europe\", areakm2: 10180000},\n    {continent: \"Africa\", areakm2: 30370000},\n    {continent: \"South America\", areakm2: 17840000},\n    {continent: \"Oceania\", areakm2: 9008500},\n    {continent: \"North America\", areakm2=24490000}\n];\n```", "```js\nconst latitude = city.location.latitude;\nconst oceania = array2[4].continent;\nconst code = color[\"code\"];\ncircle.r = 100;\nconst area = circle.area();\n```", "```js\nfor(let key in color) {\n     console.log(key + \": \" + color[key]);\n}\n```", "```js\nconst map = {};\nfunction getCoords(coords) {\n    map.latitude = coords.lat;\n    map.longitude = coords.lng;\n}\n```", "```js\nconst now = new Date();\n```", "```js\nconst chart =\n    new Chart(\"bar-chart \",{type:\"bar\", data:{labels:[],datasets:[]}});\n```", "```js\n{\"name\": \"Sao Paulo\",\n              \"location\": {\"latitude\": 23.555, \"longitude\": 46.63},\n              \"airports\": [\"SAO\",\"CGH\",\"GRU\",\"VCP\"]};\n```", "```js\n<html>\n<body>\n     <h1>Simple page</h1>\n     <p>Simple paragraph</p>\n     <div>\n         <img src=\"img/pluto.jpg\" width=\"100\"/>\n         <p>Click me!</p>\n     </div>\n </body>\n </html>\n```", "```js\n const html = document.documentElement;\n\n const body = document.createElement(\"body\");\n html.appendChild(body);\n\n const h1 = document.createElement(\"h1\");\n const h1Text = document.createTextNode(\"Simple page\");\n h1.appendChild(h1Text);\n body.appendChild(h1);\n\n const p = document.createElement(\"p\");\n const pText = document.createTextNode(\"Simple paragraph\");\n p.appendChild(pText);\n body.appendChild(p);\n\n const div = document.createElement(\"div\");\n const divImg = document.createElement(\"img\");\n divImg.setAttribute(\"src\", \"pluto.jpg\");\n divImg.setAttribute(\"width\", \"100\");\n div.appendChild(divImg);\n\n const divP = document.createElement(\"p\");\n const divPText = document.createTextNode(\"Click me!\");\n divP.appendChild(divPText);\n div.appendChild(divP);\n\n body.appendChild(div);\n```", "```js\ndiv.style.cursor = \"pointer\";\ndiv.addEventListener(\"click\", function() {\n    const p = document.createElement(\"p\");\n    p.innerHTML = \"New line\";\n    this.appendChild(p);\n});\n```", "```js\n <html>\n <body>\n <h1>Simple page</h1>\n <p>Simple paragraph</p>\n <div id=\"my-section\">\n     <img src=\"img/pluto.jpg\" width=\"100\"/>\n     <p>Click me!</p>\n </div>\n </body>\n\n <script>\n     const div = document.getElementById(\"my-section\");\n     div.style.cursor = \"pointer\";\n     div.addEventListener(\"click\", function() {\n         const p = document.createElement(\"p\");\n         p.innerHTML = \"New line\";\n         this.appendChild(p);\n     });\n </script>\n </html>\n```", "```js\n<html lang=\"en\">\n<head>\n    <style>\n        h1 {…}\n        .tab h1 {…}\n        .tab p {…}\n        .illustration {…}\n        .tab {…}\n        .tab .contents {…}\n        .container {…}\n        .tab:nth-child(2) h1 {…}\n        .tab:nth-child(3) h1 {…}\n    </style>\n</head>\n\n<body>\n<h1>CSS and JQuery selectors</h1>\n\n<div id=\"container\">\n\n    <div class=\"tab first\" id=\"section1\">\n        <div class=\"contents\">\n            <img class=\"illustration\" src=\"img/jupiter.jpg\" />\n            <p>…</p>\n        </div>\n        <h1>Tab 1: Jupiter</h1>\n    </div>\n\n    <div class=\"tab\" id=\"section2\">\n        <div class=\"contents\">\n            <img class=\"illustration\" src=\"img/saturn.jpg\" />\n            <p>…</p>\n        </div>\n        <h1>Tab 2: Saturn</h1>\n    </div>\n\n    <div class=\"tab\" id=\"section3\">\n        <div class=\"contents\">\n            <img class=\"illustration\" src=\"img/pluto.jpg\" />\n            <p>…</p>\n        </div>\n        <h1>Tab 3: Pluto</h1>\n    </div>\n\n</div>\n</body>\n\n</html>\n```", "```js\n<script src=\"img/jquery-3.3.1.min.js\"></script>\n```", "```js\n<html>\n<body>\n<head>\n    <style>\n        #my-section {\n            cursor: pointer;\n        }\n    </style>\n</head>\n<h1>Simple page</h1>\n<p>Simple paragraph</p>\n<div id=\"my-section\">\n    <img src=\"img/pluto.jpg\" width=\"100\"/>\n    <p>Click me!</p>\n</div>\n</body>\n<script src=\"img/jquery-3.3.1.min.js\"></script>\n<script>\n    $(\"#my-section\").on(\"click\", function() {\n        $(this).append(\"<p>New Line</p>\");\n    });\n</script>\n</html>\n```", "```js\nconst divSet = $(\"div\");\nconst title1 = $(\"#section1 h1\");\n```", "```js\nif($(\"table\").length == 0) {\n     console.log(\"there are no tables in this document\")\n }\n```", "```js\n<script src=\"img/jquery-3.3.1.min.js\"></script>\n<script>\n    $(\".tab\").on(\"click\", function() {\n        $(\".tab h1\").css(\"color\", \"gray\");\n        $(\".tab h1\").css(\"background\", \"white\");\n        $(\".tab h1\").css(\"font-weight\", \"normal\");\n        $(\".tab h1\").css(\"z-index\", \"-1\");\n        $(\"#\" + $(this).attr(\"id\") + \" h1\").css(\"color\", \"black\");\n        $(\"#\" + $(this).attr(\"id\") + \" h1\").css(\"background\", \"whitesmoke\");\n        $(\"#\" + $(this).attr(\"id\") + \" h1\").css(\"font-weight\", \"bold\");\n        $(\"#\" + $(this).attr(\"id\") + \" h1\").css(\"z-index\", \"1\");\n        $(\".tab .contents\").fadeOut();\n        $(\"#\" + $(this).attr(\"id\") + \" .contents\").fadeIn();\n    });\n    $(\"#section1\").trigger(\"click\");\n</script>\n```", "```js\n<body>\n    <canvas id=\"canvas\" width=\"300\" height=\"300\"></canvas>\n</body>\n```", "```js\nconst canvas = document.createElement(\"canvas\");\ncanvas.setAttribute(\"width\", 300);\ncanvas.setAttribute(\"height\", 300);\ndocument.body.appendChild(canvas);\n```", "```js\nconst canvas = $(\"<canvas/>\",{id: \"canvas\"}).prop({width:300,height:300});\n```", "```js\nconst canvas = document.getElementById(\"canvas\");\nconst canvas = $(\"#canvas\");\n```", "```js\nconst canvas = document.getElementById(\"canvas\");\nconst canvas = $(\"#canvas\");\n```", "```js\nconst ctx    = canvas.getContext(\"2d\");\n```", "```js\nctx.fillStyle = \"red\";\nctx.strokeStyle = \"rgba(255,127,0,0.7)\";\nctx.lineWidth = 10;\n```", "```js\nctx.fillRect(50,50,50,50);\nctx.strokeRect(50,50,50,50);\n```", "```js\n ctx.strokeStyle = \"blue\";\n ctx.lineWidth = 2;\n ctx.shadowBlur = 10;\n ctx.shadowColor = \"green\";\n ctx.shadowOffsetX = ctx.shadowOffsetY = 5;\n ctx.setLineDash([5,2,1,2]);\n ctx.beginPath();\n ctx.moveTo(150,200);\n ctx.lineTo(150,150);\n ctx.lineTo(100,150);\n ctx.bezierCurveTo(100,200,150,250,200,250);\n ctx.lineTo(200,200);\n ctx.closePath();\n ctx.stroke();\n const text = \"Canvas\";\n ctx.font = \"24px monospace\";\n const textWidth = ctx.measureText(text).width;\n const gradient = ctx.createLinearGradient(200,100,200 + textWidth,100);\n gradient.addColorStop(0,\"magenta\");\n gradient.addColorStop(1, \"yellow\");\n ctx.fillStyle = gradient;\n ctx.shadowColor = \"transparent\";\n ctx.fillText(\"Canvas\", 200, 100);\n ctx.setLineDash([0]);\n ctx.strokeStyle = \"gray\";\n ctx.beginPath();\n ctx.moveTo(50,200);\n ctx.lineTo(50,250);\n ctx.lineTo(100,250);\n ctx.arcTo(100,200,50,200,50);\n ctx.stroke();\n ctx.beginPath();\n ctx.arc(275,150,50,1.57,3.14,false);\n ctx.lineTo(275,150);\n ctx.fill();\n ctx.globalAlpha = 0.75;\n ctx.beginPath();\n ctx.arc(175,75,40,0,6.28,false);\n ctx.clip();\n const image = new Image(100,100);\n image.onload = function() {\n     ctx.drawImage(this, 125, 25, this.width, this.height);\n }\n image.src = \"pluto.jpg\";\n```", "```js\n continent,population,areakm2\n \"North America\",579024000,24490000\n \"Asia\",4436224000,43820000\n \"Europe\",738849000,10180000\n \"Africa\",1216130000,30370000\n \"South America\",422535000,17840000\n \"Oceania\",39901000,9008500\n \"Antarctica\",1106,13720000\n```", "```js\n<continents>\n     <continent>\n         <name>North America</name>\n         <population>579024000</population>\n         <area unit=\"km\">24490000</area>\n     </continent>\n     <continent>\n         <name>Asia</name>\n         <population>4436224000</population>\n         <area unit=\"km\">43820000</area>\n     </continent>\n ...\n     <continent>\n         <name>Antarctica</name>\n         <population>1106</population>\n         <area>13720000</area>\n     </continent>\n </continents>\n```", "```js\n[\n     {\n         \"continent\": \"North America\",\n         \"population\": 579024000,\n         \"areakm2\": 24490000\n     },{\n         \"continent\": \"Asia\",\n         \"population\": 4436224000,\n         \"areakm2\": 43820000\n     },{\n         \"continent\": \"Europe\",\n         \"population\": 738849000,\n         \"areakm2\": 10180000\n     },{\n         \"continent\": \"Africa\",\n         \"population\": 1216130000,\n         \"areakm2\": 30370000\n     },{\n         \"continent\": \"South America\",\n         \"population\": 422535000,\n         \"areakm2\": 17840000\n     },{\n         \"continent\": \"Oceania\",\n         \"population\": 39901000,\n         \"areakm2\": 9008500\n     },{\n         \"continent\": \"Antarctica\",\n         \"population\": 1106,\n         \"areakm2\": 13720000\n     }\n ]\n```", "```js\npython -v\n```", "```js\npython3 -m http.server\n```", "```js\npython -m SimpleHTTPServer\n```", "```js\n const httpRequest = new XMLHttpRequest();\n httpRequest.open('GET', 'Data/sample.csv');\n httpRequest.send();\n\n    httpRequest.onreadystatechange = function(){\n       if (httpRequest.readyState === XMLHttpRequest.DONE) {\n           if (httpRequest.status === 200) {\n               const text = httpRequest.responseText;\n               parse(text);\n           }\n       }\n    }\nfunction parse(text) {\n     // parse the CSV text and transform it into a JavaScript object\n }\n```", "```js\n$.ajax({\n     url: 'Data/sample.csv',\n     success: function(text){\n         parse(text)\n     }\n });\n```", "```js\n$.getJSON('/Data/sample.json', function(object) {\n     // use the JavaScript object\n }\n```", "```js\nfetch('Data/sample.csv')\n  .then(response => response.text())\n  .then(function(text) {\n      parse(text);\n  });\n```", "```js\nfetch('Data/sample.json')\n   .then(response => response.json())\n   .then(function(object) {\n       // use the JavaScript object\n   });\n```", "```js\nconst obj = JSON.parse(jsonString);\n```", "```js\nconst jsonString = JSON.stringify(obj);\n```", "```js\nobj.forEach(function(item) {\n     console.log(item.continent, +item.population, +item.areakm2);\n });\n```", "```js\nconst csvData = Papa.parse(csvText, {header: true}).data;\n```", "```js\ncsvData.forEach(function(item) {\n     console.log(item.continent, +item.population, +item.areakm2);\n });\n```", "```js\n const files = ['/path/to/file.json', '/path/to/file.csv'];\n var promises = files.map(file => fetch(file).then(resp => resp.text()));\n Promise.all(promises).then(results => {\n     const jsonData = JSON.parse(results[0]);\n     const csvData = Papa.parse(results[1], {header: true}).data;\n     // use the two data objects\n });\n```", "```js\n{\"type\":\"FeatureCollection\",\n  \"features\":[\n     {\"type\":\"Feature\",id\":\"AFG\",\"properties\":{\"name\":\"Afghanistan\"},\n      \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[61.210817,35.650072],...]]\n     },{\"type\":\"Feature\", \"id\":\"AGO\", \"properties\":{\"name\":\"Angola\"},\n      \"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[16.326528,-5.87747,...]]\n     },\n     // many other lines\n   ]\n }\n```", "```js\n<canvas id=\"map\" width=\"1000\" height=\"500\"></canvas>\n<script>\n     var canvas = document.getElementById(\"map\");\n     var ctx = canvas.getContext(\"2d\");\n\n     // Map ocean background\n     ctx.fillStyle = 'white';\n     ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n     // countries border and background\n     ctx.lineWidth = .25;\n     ctx.strokeStyle = 'white';\n     ctx.fillStyle = 'rgb(50,100,150)';\n\n     // load and draw map\n     fetch('Data/world.geojson')\n     .then(response => response.text())\n     .then((jsonData) => {\n         let object = JSON.parse(jsonData);\n         drawMap(object.features);\n     });\n     function scaleX(coord) {\n         return canvas.width * (180 + coord) / 360;\n     }\n     function scaleY(coord) {\n         return canvas.height * (90 - coord) / 180;\n     }\n     function drawPolygon(coords) {\n         ctx.beginPath();\n         for(let i = 0; i < coords.length; i++ ) {\n             let latitude = coords[i][1];\n             let longitude = coords[i][0];\n             if(i == 0) {\n                 ctx.moveTo(scaleX(longitude), scaleY(latitude));\n             } else {\n                 ctx.lineTo(scaleX(longitude), scaleY(latitude));\n             }\n         }\n         ctx.stroke();\n         ctx.fill();\n     }\n     function drawMap(data) {\n         data.forEach(obj => {\n             if(obj.geometry.type == 'MultiPolygon') {\n                 obj.geometry.coordinates.forEach(poly => drawPolygon(poly[0]));\n             } else if(obj.geometry.type == 'Polygon') {\n                 obj.geometry.coordinates.forEach(poly => drawPolygon(poly));\n             }\n         });\n     }\n </script>\n```", "```js\n,MERCURY,VENUS,EARTH,MOON,MARS,JUPITER,SATURN,URANUS,NEPTUNE,PLUTO\n Mass (1024kg),0.330,4.87,5.97,0.073,0.642,1898,568,86.8,102,0.0146\n Diameter (km),4879,\"12,104\",\"12,756\",3475,6792,\"142,984\",\"120,536\",...,2370\n Density (kg/m3),5427,5243,5514,3340,3933,1326,687,1271,1638,2095\n Gravity (m/s2),3.7,8.9,9.8,1.6,3.7,23.1,9.0,8.7,11.0,0.7\n ... several rows not shown ...\n Number of Moons,0,0,1,0,2,79,62,27,14,5\n Ring System?,No,No,No,No,No,Yes,Yes,Yes,Yes,No\n Global Magnetic Field?,Yes,No,Yes,No,No,Yes,Yes,Yes,Yes,Unknown\n ,MERCURY,VENUS,EARTH,MOON,MARS,JUPITER,SATURN,URANUS,NEPTUNE,PLUTO\n```", "```js\n<html>\n   <head>\n     <title>Planetary Fact Sheet</title>\n   </head>\n   <body bgcolor=FFFFFF>\n     <p>\n     <hr>\n     <H1>Planetary Fact Sheet - Metric</H1>\n     <hr>\n     <p>\n     <table> ...\n```", "```js\n/html/head/title/text()\n```", "```js\n/html/body/@bgcolor\n/html/body/attribute::bgcolor\n```", "```js\n/html/head/h1/text()\n```", "```js\n/html/head//H1/text()\n```", "```js\n$x(\"//table\")\n```", "```js\n$x(\"/html/body/p/table\")\n```", "```js\n$x(\"//table//tr[3]\")[0]\n```", "```js\n<tr>\n   <td align=\"left\"><b><a href=\"planetfact_notes.html#diam\">Diameter</a> \n(km)</b></td>\n   <td align=\"center\" bgcolor=\"F5F5F5\">4879</td>\n   <td align=\"center\" bgcolor=\"FFFFFF\">12,104</td>\n   <td align=\"center\" bgcolor=\"F5F5F5\">12,756</td>\n   <td align=\"center\" bgcolor=\"FFFFFF\">3475</td>\n   <td align=\"center\" bgcolor=\"F5F5F5\">6792</td>\n   <td align=\"center\" bgcolor=\"FFFFFF\">142,984</td>\n   <td align=\"center\" bgcolor=\"F5F5F5\">120,536</td>\n   <td align=\"center\" bgcolor=\"FFFFFF\">51,118</td>\n   <td align=\"center\" bgcolor=\"F5F5F5\">49,528</td>\n   <td align=\"center\" bgcolor=\"FFFFFF\">2370</td>\n </tr>\n```", "```js\n$x(\"//table//tr[3]/td[4]\")[0]\n```", "```js\n<td align=\"center\" bgcolor=\"F5F5F5\">12,756</td>\n```", "```js\nconst result = $x(\"/html/body/p/table/tbody/tr[3]/td[4]/text()\")[0].data\n```", "```js\nconst value = +data.replace(/\\,/g,''); \n// removes commas and converts to number\n```"]