["```js\n  var data = JSON.stringify({\n    album: 'Folie A Deux',\n    artiste: 'Fall Out Boy'\n  });\n\n  function onreadystatechange(event){\n    if (event.target.readyState != 4) return;\n    console.log('POST /albums %s', event.target.status);\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.onreadystatechange = onreadystatechange;\n  xhr.open('POST', '/albums');\n  xhr.setRequestHeader('Content-type', 'application/json');\n  xhr.send(data);\n```", "```js\n$\n  .post('/albums', data)\n  .then(function(albut){\n    console.log('POST /albums 200');\n  });\n```", "```js\n<script type='text/x-handlebars'>{{outlet}}</script>\n<script type='text/x-handlebars' id='index'>\n\n  {{#with model}}\n  <form {{action 'saveAlbum' this on='submit'}}>\n      {{input value=artiste}}\n      {{input value=album}}\n      {{input value='save' type='submit'}}\n  </form>\n  {{/with}}\n\n</script>\n\n<script>\n\n  App = Ember.Application.create();\n\n  App.Router.map(function(){});\n\n  App.IndexRoute = Ember.Route.extend({\n    model: function(){\n      return {};\n    },\n    actions: {\n      saveAlbum: function(album){\n        var data =  {\n          album: album.album,\n          artiste: album.artiste\n        };\n      $\n        .post('/albums', data)\n        .then(function(album){\n           console.log('POST /albums 200');\n         }, function(response){\n           alert('failed!');\n         });\n      }\n    }\n  });\n</script>\n```", "```js\nApp.Album = Ember.Object.extend({\n  toJSON: function(){\n    return {\n      album: this.get('album'),\n      artiste: this.get('artiste')\n    };\n  },\n  save: function(){ // function to persist album to the server\n    $\n      .post('/albums', this.toJSON())\n      .then(function(event){\n        console.log('POST /albums 200');\n      }, function(event){\n        alert('failed!');\n      });\n  }\n});\n```", "```js\nApp.IndexRoute = Ember.Route.extend({\n  model: function(){\n    return App.Album.create();\n  },\n  actions: {\n    saveAlbum: function(album){\n      album.save();\n    }\n  }\n});\n```", "```js\nAlbum.reopenClass({\n  find: function(){\n    return $.getJSON('/albums');\n  }\n});\n```", "```js\nApp.AlbumsRoute = Ember.Route.extend({\n  model: function(){\n    return App.Album.find();\n  }\n});\n```", "```js\nApp.ApplicationStore = DS.Store.extend({\n});\n```", "```js\nApp.BooksRoute = Ember.Route.extend({\n  model: function(){\n    return this.store.find('book');\n  }\n   });\n```", "```js\nApp.Todo = DS.Model.extend({\n  title: DS.attr('string'),\n  complete: DS.attr('boolean', {\n    defaultValue: false\n  })\n});\n```", "```js\nApp.Person = DS.Model.extend({\n```", "```js\n// GET /todos\n\nstore.find('todo');\n```", "```js\nstore\n  .find('todo')\n  .then(function(todos){\n    todos.map(function(todo){\n      todo.set('complete', false);\n      return todo;\n    });\n  });\n```", "```js\nstore.all('todo');\n```", "```js\n// GET /todos/1\n\nstore.find('todo', id);\n```", "```js\n// GET /todos?complete=true\n\nstore.find('todo', {\n  complete: true\n});\n```", "```js\nApp.ApplicationAdapter = DS.FixtureAdapter;\n```", "```js\nApp.Todo.FIXTURES = [\n  { id: 1, title: 'Bake cake', complete: true },\n];\n```", "```js\nnpm install\nnode server\n\n```", "```js\n{ tweet: {\n  id: 1,\n  title: 'New book out',\n  retweets: [{\n    id: 1,\n    title: 'RT New book out',\n    user: 'Jon',\n  }, {\n    id: 2,\n    title: 'RT  New book out',\n    user: 'Doe'\n  }]\n}}\n```", "```js\nretweets: DS.hasMany('retweet')\n\nretweet => retweets\nperson => people\n```", "```js\n{ tweet: {\n  id: 1,\n  title: 'New book out',\n  retweets: [1, 2, 3]\n}}\n```", "```js\nApp.User = DS.Model.extend({\n  followers: DS.hasMany('user'),\n  followings: DS.hasMany('user')\n});\n```", "```js\nApp.User = DS.Model.extend({\n  followers: DS.hasMany('user', { inverse: 'followers'} ),\n  followings: DS.hasMany('user', { inverse: 'followings'} )\n});\n```", "```js\n{ user: {\n  id: 1,\n  followers: [],\n  following: []\n}}\n```", "```js\nApp.BookAdapter = DS.RESTAdapter.extend({\n  namespace: 'v3/',\n  host: 'http://books.example.com'\n});\n\nApp.PenAdapter = DS.RESTAdapter.extend({\n  namespace: 'v3/',\n  host: 'http://pens.example.com'\n});\n```", "```js\nDS.RESTSerializer.reopen({\n  primaryKey: 'key'\n});\n```", "```js\nApp.PhoneSerializer = DS.RESTSerializer.extend({\n  primaryKey: 'phone_id'\n});\n```", "```js\n1 – true\n0 – false\n```", "```js\nApp.BinaryBoolean = DS.Transform.extend({\n  serialize: function(boolean){\n    return (!boolean)\n     ? 0\n     : 1;\n  },\n  deserialize: function(binary){\n    return (!!!binary)\n     ? false\n     : true;\n  }\n});\n```", "```js\nApp.Todo = DS.Todo.extend({\n  complete: DS.attr('binaryBoolean')\n});\nvar todo = store.createRecord('todo', {\n  complete: true\n});\ntodo.save(); // POST /todos {'todo': {complete: 1}}\n```"]