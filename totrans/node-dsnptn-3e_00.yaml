- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Node.js is considered by many a game-changer—possibly the biggest innovation
    of the decade in web development. It is loved not just for its technical capabilities,
    but also for the paradigm shift that it introduced in web development and, in
    general, in the software development ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: First, Node.js applications are written in JavaScript, the most adopted language
    on the web and the only programming language supported natively by every web browser.
    This aspect enables scenarios such as single-language application stacks and the
    sharing of code between the server and the client. A single language also helps
    to reduce the gap between frontend and backend engineers, making backend programming
    extremely approachable and intuitive for frontend developers. Once you are acquainted
    with Node.js and JavaScript, you can easily build software for a wide variety
    of platforms and contexts.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js itself is contributing to the rise and evolution of the JavaScript language.
    People realize that using JavaScript on the server brings a lot of value, and
    they are loving it for its pragmatism, for its flexibility, its event-driven approach,
    and for its hybrid nature, halfway between object-oriented and functional programming.
  prefs: []
  type: TYPE_NORMAL
- en: The second revolutionizing factor is Node.js' single-threaded programming model
    and its asynchronous architecture. Besides obvious advantages from a performance
    and scalability point of view, this characteristic changed the way developers
    approach concurrency and parallelism. Mutexes are replaced by queues, threads
    by callbacks, and synchronization by causality. These abstractions are generally
    simpler to adopt than their traditional counterparts, but they are still extremely
    powerful, allowing developers to be very productive while solving day-to-day challenges.
  prefs: []
  type: TYPE_NORMAL
- en: 'The last and most important aspect of Node.js lies in its ecosystem: the npm
    package manager, its constantly growing database of modules, its enthusiastic
    and helpful community, and most importantly, its very own culture based on simplicity,
    pragmatism, and extreme modularity.'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, because of these peculiarities, Node.js development gives you a very
    different feel compared to other server-side platforms, and any developer new
    to this paradigm will often feel unsure about how to tackle even the most common
    design and coding problems effectively. Common questions include: *How do I organize
    my code? What''s the best way to design this? How can I make my application more
    modular? How do I handle a set of asynchronous calls effectively? How can I make
    sure that my application will not collapse while it grows?* Or more simply, *what''s
    the right way to implement this?* Fortunately, Node.js has become a mature enough
    platform and most of these questions can now be easily answered with a design
    pattern, a proven coding technique, or a recommended practice. The aim of this
    book is to guide you through this emerging world of patterns, techniques, and
    practices, showing you what the proven solutions to the most common problems are
    and teaching you how to use them as the starting point to building the solution
    to your particular problem.'
  prefs: []
  type: TYPE_NORMAL
- en: 'By reading this book, you will learn the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The "Node way"**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use the right point of view when approaching Node.js development. You
    will learn, for example, how different traditional design patterns look in Node.js,
    or how to design modules that do only one thing.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A set of patterns to solve common Node.js design and coding problems**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will be presented with a "Swiss Army knife" of patterns, ready to use in
    order to efficiently solve your everyday development and design problems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**How to write scalable and efficient Node.js applications**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will gain an understanding of the basic building blocks and principles of
    writing large and well-organized Node.js applications that can scale. You will
    be able to apply these principles to novel problems that don't fall within the
    scope of existing patterns.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Code in "modern JavaScript"**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript has been around since 1995, but a lot has changed since its first
    inception, especially in these last few years. This book will take advantage of
    the most modern JavaScript features, like the class syntax, promises, generator
    functions, and async/await, giving you a properly up-to-date experience.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Throughout the book, you will be presented with real-life libraries and technologies,
    such as LevelDB, Redis, RabbitMQ, ZeroMQ, Express, and many others. They will
    be used to demonstrate a pattern or technique, and besides making the example
    more useful, these will also give you great exposure to the Node.js ecosystem
    and its set of solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you use or plan to use Node.js for your work, your side project, or
    for an open source project, recognizing and using well-known patterns and techniques
    will allow you to use a common language when sharing your code and design, and
    on top of that, it will help you get a better understanding of the future of Node.js
    and how to make your own contributions a part of it.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To experiment with the code, you will need a working installation of Node.js
    version 14 (or greater) and npm version 6 (or greater). If some examples will
    require you to use some extra tooling, these will be described accordingly in
    place. You will also need to be familiar with the command line, know how to install
    an npm package, and know how to run Node.js applications. Finally, you will need
    a text editor to work with the code and a modern web browser.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers who have already had initial contact with Node.js
    and now want to get the most out of it in terms of productivity, design quality,
    and scalability. You are only required to have some prior exposure to the technology
    through some basic examples and some degree of familiarity with the JavaScript
    language, since this book will cover some basic concepts as well. Developers with
    intermediate experience in Node.js will also find the techniques presented in
    this book beneficial.
  prefs: []
  type: TYPE_NORMAL
- en: Some background in software design theory is also an advantage to understand
    some of the concepts presented.
  prefs: []
  type: TYPE_NORMAL
- en: This book assumes that you have a working knowledge of web application development,
    web services, databases, and data structures.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Chapter 1*, *The Node.js Platform*, serves as an introduction to the world
    of Node.js application design by showing the patterns at the core of the platform
    itself. It covers the Node.js ecosystem and its philosophy, and provides a quick
    introduction to the Node.js internals and the reactor pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *The Module System*, dives into the module systems available in
    Node.js, underlining the differences between CommonJS and the more modern ES modules
    from the ECMAScript 2015 specification.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Callbacks and Events*, introduces the first steps towards learning
    asynchronous coding and its patterns, discussing and comparing callbacks and the event
    emitter (observer pattern).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Asynchronous Control Flow Patterns with Callbacks*, introduces
    a set of patterns and techniques for efficiently handling asynchronous control
    flow in Node.js using callbacks. This chapter teaches you some traditional ways
    to mitigate the "callback hell" problem using plain JavaScript.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Asynchronous Control Flow Patterns with Promises and Async/Await*,
    progresses with the exploration of more sophisticated and modern asynchronous
    control flow techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Coding with Streams*, dives deep into one of the most important
    tools in Node.js: streams. It shows you how to process data with transform streams
    and how to combine them into different patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Creational Design Patterns*, starts to explore the traditional
    design patterns in Node.js. In this chapter, you will learn about some of the
    most popular creational design patterns, namely the *Factory* pattern, the *Revealing
    Constructor* pattern, the *Builder* pattern, and the *Singleton* pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Structural Design Patterns*, continues the exploration of traditional
    design patterns in Node.js, covering structural design patterns such as *Proxy*,
    *Decorator*, and *Adapter*.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Behavioral Design Patterns*, concludes the conversation around
    traditional design patterns in Node.js by introducing behavioral design patterns
    like *Strategy*, *State*, *Template*, *Middleware*, *Command*, and *Iterator*.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Universal JavaScript for Web Applications*, explores one of
    the most interesting capabilities of modern JavaScript web applications: being
    able to share code between the frontend and the backend. Throughout this chapter,
    you will learn the basic principles of Universal JavaScript by building a simple
    web application using modern tools and libraries.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Advanced Recipes*, takes a problem-solution approach to show
    you how some common coding and design intricacies can be approached with ready-to-use
    solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Scalability and Architectural Patterns*, teaches you the basic
    techniques and patterns for scaling a Node.js application.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Messaging and Integration Patterns*, presents the most important
    messaging patterns, teaching you how to build and integrate complex distributed
    systems using Node.js and its ecosystem.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book you can download the example code files and
    the color images as per the instructions below.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com/](http://www.packt.com/).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [http://www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Support** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box and follow the on-screen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for macOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [nodejsdp.link/repo](http://nodejsdp.link/repo).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code words in text**: `server.listen(handle)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pathname**: `src/app.js`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dummy URL**: `http://localhost:8080`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A block of code is generally formatted using StandardJS conventions ([nodejsdp.link/standard](http://nodejsdp.link/standard))
    and it is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are highlighted in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "To explain the problem, we will create a little **web spider**, a command-line
    application that takes in a web URL as the input and downloads its contents locally
    into a file."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Most URLs are linked through our own short URL system to make it easier for
    readers coming through the print edition to access them. These links are in the
    form [nodejsdp.link/some-descriptive-id](http://nodejsdp.link/some-descriptive-id).
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book, mention
    the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you could report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    select your book, click on the **Errata Submission Form** link, and enter the
    details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you could provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  prefs: []
  type: TYPE_NORMAL
