["```js\n<div id='mocha'></div> \n```", "```js\n<div id='ember'></div> \n```", "```js\n<script src=\"img/jquery.js\"></script> \n<script src=\"img/bootstrap.min.js\"></script> \n<script src=\"img/handlebars.js\"></script> \n<script src=\"img/ember.js\"></script> \n<script src=\"img/ember-data.js\"></script> \n<script src=\"img/app.js\"></script> \n<script src=\"img/fixtures.js\"></script> \n```", "```js\n<script src='lib/mocha.js'></script> \n<script src='lib/ember-mocha-adapter.js'></script> \n<script src='lib/chai.js'></script> \n<script src='lib/sinon.js'></script> \n```", "```js\nApp.rootElement = '#ember';\n```", "```js\nApp.setupForTesting();\n```", "```js\nApp.injectTestHelpers();\n```", "```js\nEm.$(function() { \n  mocha.run(); \n});\n\n<script src='test.unit.js'></script> \n<script src='test.integration.js'></script>\n```", "```js\n beforeEach(App.beforeEach); \n afterEach(App.afterEach);\n```", "```js\nApp.beforeEach = function() { \n  visit('/'); \n}\n```", "```js\nApp.afterEach = function() {\n  App.reset();\n}\n```", "```js\nApp.CartItem = Em.Object.extend(App.TotalMixin, { \n  product: null, \n  quantity: null, \n  price: null \n});\n```", "```js\ndescribe('App.CartItem', function() {\n\n  describe('total', function(){\n\n    beforeEach(App.beforeEach);\n\n    afterEach(App.afterEach);\n\n    it('should be computed from .price and .quantity', function() {\n\n      andThen(function(){\n        var order = App.CartItem.create();\n        order.get('total').should.equal(0);\n        order.set('price', 10);\n        order.get('total').should.equal(0);\n        order.set('quantity', 1);\n        order.get('total').should.equal(10);\n        order.set('quantity', 2);\n        order.get('total').should.equal(20);\n        order.set('price', 20);\n        order.get('total').should.equal(40);\n\n      });\n\n    });\n\n  });\n\n});\n```", "```js\nvar store = App.__container__.lookup('store:main');\nvar order = store.createRecord('order', {});\n```", "```js\nvar object = Em.Object.createWithMixins(App.OnhasMixin, {\n  id: 1\n});\nobject.onhas('id', done);\n```", "```js\nvar object = Em.Object.createWithMixins(App.OnhasMixin, {\n  id: null\n});\nobject.onhas('id', andThen.bind(null, done.bind(null, null)));\nobject.set('id', 1);\n```", "```js\nstoreUser: function(){\n  var username = this.get('content.username');\n  window.localStorage.setItem('user', username);\n}.observes('content.username')\n```", "```js\nwindow.localStorage.setItem('user', null);\n```", "```js\nvar controller = App.UserController.create({\n  content: {}\n});\n\n// spy\nvar spy = sinon.spy(controller, 'storeUser');\n\ncontroller.set('username', 'username-1');  // 1\nwindow.localStorage.getItem('user').should.equal('username-1');\n```", "```js\nspy.callCount.should.to.equal(2);\nspy.restore();\n```", "```js\nfind('.products li').length.should.equal(4);\n```", "```js\n// name label\n\nfind('.products li:nth-of-type(1) .product-name')\n  .text()\n  .trim()\n  .should\n  .equal(product.get('name'));\n\n// price label\n\nfind('.products li:nth-of-type(1) .product-price')\n  .text()\n  .trim()\n  .should\n  .equal('$'+product.get('price'));\n\n// order button\n\nfind('.products li:nth-of-type(1) .product-add-to-cart')\n  .text()\n  .trim()\n  .should\n  .equal('order now');\n```", "```js\nfind('.nav-cart').text().should.equal('cart 0');\n```", "```js\nfind('.nav-login').text().should.equal('login');\n```", "```js\nfind('.brand').text().should.equal('LocalLunch.io');\n```", "```js\nclick('.products li:nth-of-type(1) .product-add-to-cart');\n```", "```js\nvar store = App.__container__.lookup('store:main');\nvar controller = App.__container__.lookup('controller:cart');\n\nstore\n  .find('product', 1)\n  .then(function(product){\n\n    controller.get('length').should.equal(1);\n\n    var item = controller.objectAt(0);\n    item.get('product.id').should.equal(product.get('id'));\n    item.get('price').should.equal(product.get('price'));\n    item.get('quantity').should.equal(1);\n\n  });\n```", "```js\nfind('.nav-cart').text().should.equal('cart 1');\n```", "```js\ncurrentPath().should.equal('cart');\n```", "```js\nfind('.message').text().should.equal('Cart is empty.');\n```", "```js\nvar controller = App.__container__.lookup('controller:cart');\nvar store = App.__container__.lookup('store:main');\n\nstore\n  .find('product', 1)\n  .then(function(product){\n    controller.addItem(product);\n    controller.addItem(product);\n  });\n```", "```js\nfind('.nav-cart').text().should.equal('cart 2');\n```", "```js\nvar store = App.__container__.lookup('store:main');\nstore\n  .find('product', 1)\n  .then(function(product){\n\n    var total = product.get('price') * 2;\n    find('label.checkout')\n    .text()\n    .trim()\n    .should\n    .equal(total.toString());\n\n  });\n```", "```js\n[\n  'Product',\n  'Price',\n  'Quantity'\n].forEach(function(cell, i){\n  find(find('thead td')[i]).text().should.equal(cell);\n});\n```", "```js\nfind(find('tbody td'[0])\n  .text()\n  .should\n  .equal(product.get('name'));\nfind(find('tbody td')[1])\n  .text()\n  .should\n  .equal(product.get('price').toString());\nfind(find('tbody input'))\n  .val()\n  .should\n  .equal('2');\n```", "```js\nfillIn(find('tbody input'), 4);\n```", "```js\nandThen(function(){\n\n  find('.nav-cart')\n  .text()\n  .should\n  .equal('cart 4');\n\n});\n```", "```js\n  var total = product.get('price') * 4;\n  find('label.checkout')\n  .text()\n  .trim()\n  .should\n  .equal(total.toString());\n```", "```js\nclick('.pay');\nandThen(function(){\n  currentPath().should.equal('checkout');\n});\n```", "```js\nfind('.message').text().should.equal('Cart is empty.');\n```", "```js\n[\n  'Name',\n  'Quantity'\n].forEach(function(cell, i){\n  find(find('thead td')[i]).text().should.equal(cell);\n});\n```", "```js\n[\n  product.get('name'),\n  '2'\n].forEach(function(cell, i){\n  find(find('tbody td')[i]).text().should.equal(cell);\n});\n```", "```js\nvar total = product.get('price') * 2;\nfind('.checkout').text().trim().should.equal(total.toString());\n```", "```js\ntriggerEvent('.form-pay', 'submit');\n```", "```js\nfind('.message')\n  .text()\n  .should\n  .equal('Success! Your order will arrive in 20 minutes. Thank you.');\n```", "```js\npay: function(model){\n  var self = this;\n  var controller = self.get('controllers.cart');\n  controller.forEach(function(item){\n    self.store.createRecord('order', item).save();\n  });\n  model.set('success', true);\n  controller.set('content', []);\n}\n```", "```js\nstore\n  .find('order')\n  .then(function(orders){\n\n    orders.get('length').should.equal(1);\n\n    var order = orders.objectAt(0);\n    order.get('product.id').should.equal(product.get('id'));\n    order.get('quantity').should.equal(2);\n    order.get('price').should.equal(product.get('price'));\n\n  });\n```", "```js\nfillIn('.input-username', user.get('username'));\nfillIn('.input-password', user.get('password'));\ntriggerEvent('.form-login', 'submit');\n\nandThen(function(){\n  currentPath().should.equal('index');\n});\n```", "```js\nfillIn('.input-username', 'username');\nfillIn('.input-password', 'password');\ntriggerEvent('.form-login', 'submit');\n\nandThen(function(){\n  currentPath().should.equal('login');\n});\n```", "```js\nfillIn('.input-username', username);\nfillIn('.input-password', 'pass');\ntriggerEvent('.form-login', 'submit');\n\nandThen(function(){\n  if (done){\n    done();\n  } else {\n    visit('/');\n  }\n});\n```", "```js\n<script type=\"text/x-handlebars\" id=\"components/list-product\">\n  add\n</script>\n\n<script type=\"text/x-handlebars\">\n  <form class=\"list-product-form\">\n  <input\n    class='list-product-form-input'\n    type=\"file\"\n    style=\"top: -1000px; position: absolute\"\n    aria-hidden=\"true\">\n  </form>\n</script>\n```", "```js\nvar self = this;\n\n// submit\n\nvar input = Em.$('.list-product-form input');\ninput.one('change', upload);\n\n// show file chooser\n\ninput.click();\n\n// upload\n\nfunction upload(event){\n\n  var file = input[0].files[0];\n  var reader = new FileReader;\n  reader.onload = post.bind(this, reader);\n  reader.readAsDataURL(file);\n\n};\n\n// post\n\nfunction post(reader){\n  self.sendAction('action', reader.result);\n}\n```", "```js\nEm.run(function(){\n\n  var controller = App.__container__.lookup('controller:index');\n  controller.send('createProduct', 'data:');\n\n  Em.run.next(function(){     \n    find('.products li').length.should.equal(5);\n    done();\n  });\n\n});\n```", "```js\nvar name = 'test';\nvar price = 1000;\n\nfillIn('.products li:nth-of-type(1) .product-name', name);\nfillIn('.products li:nth-of-type(1) .product-price', price);\n\nandThen(function(){\n  product.get('name').should.equal(name);\n  product.get('price').should.equal(price.toString());\n});\n```", "```js\n{{#link-to \"orders\" class='nav-orders'}}orders{{/link-to}}\n```", "```js\nclick('.nav-orders');\n\nandThen(function(){\n  find('.message')\n  .text()\n  .should\n  .equal('No new orders have been made.');\n});\n```", "```js\nvisit('/orders');\n\n[\n  'ID',\n  'Product',\n  'Price',\n  'Quantity',\n  'Total'\n].forEach(function(cell, i){\n  find(find('thead td')[i]).text().should.equal(cell);\n});\n\n[\n  product.get('name'),\n  product.get('price').toString(),\n  order.get('quantity').toString(),\n  order.get('total').toString()\n].forEach(function(cell, i){\n  find(find('tbody td')[++i]).text().trim().should.equal(cell);\n});\n```", "```js\ndescribe('visit /orders', function(){\n  this.timeout(5000);\n});\n```"]