["```js\n    > var myarr = ['red', 'blue', 'yellow', 'purple']; \n    > myarr; \n    [\"red\", \"blue\", \"yellow\", \"purple\"]. \n    > myarr[0]; \n    \"red\" \n    > myarr[3]; \n    \"purple\" \n\n```", "```js\n    var hero = { \n      breed: 'Turtle',  \n      occupation: 'Ninja' \n    }; \n\n```", "```js\n    var hero = {occupation: 1}; \n    var hero = {\"occupation\": 1}; \n    var hero = {'occupation': 1}; \n\n```", "```js\n    var o = { \n      $omething: 1, \n      'yes or no': 'yes', \n      '!@#$%^&*': true \n    }; \n\n```", "```js\n    var dog = { \n      name: 'Benji', \n      talk: function () { \n        alert('Woof, woof!'); \n      } \n    }; \n\n```", "```js\n    > var a = []; \n    > a[0] = function (what) { alert(what); }; \n    > a[0]('Boo!'); \n\n```", "```js\n    var hero = { \n      breed: 'Turtle', \n      occupation: 'Ninja' \n    }; \n\n```", "```js\n    > hero.breed; \n    \"Turtle\" \n\n```", "```js\n    > hero['occupation']; \n    \"Ninja\" \n\n```", "```js\n    > 'Hair color is ' + hero.hair_color; \n    \"Hair color is undefined\" \n\n```", "```js\n    var book = { \n      name: 'Catch-22', \n      published: 1961, \n      author: { \n        firstname: 'Joseph', \n        lastname: 'Heller' \n      } \n    }; \n\n```", "```js\n    > book.author.firstname; \n    \"Joseph\" \n\n```", "```js\n    > book['author']['lastname']; \n    \"Heller\" \n\n```", "```js\n    > book.author['lastname']; \n    \"Heller\" \n    > book['author'].lastname; \n    \"Heller\" \n\n```", "```js\n    > var key = 'firstname'; \n    > book.author[key]; \n    \"Joseph\" \n\n```", "```js\n    > var hero = { \n        breed: 'Turtle', \n        occupation: 'Ninja', \n        say: function () { \n          return 'I am ' + hero.occupation; \n        } \n      }; \n    > hero.say(); \n    \"I am Ninja\" \n\n```", "```js\n    > hero.say('a', 'b', 'c'); \n\n```", "```js\n    > hero['say'](); \n\n```", "```js\n    var method = 'say'; \n    hero[method](); \n\n```", "```js\n    > var hero = {}; \n\n```", "```js\n            > typeof hero.breed; \n            \"undefined\" \n\n    ```", "```js\n            > hero.breed = 'turtle'; \n            > hero.name = 'Leonardo'; \n            > hero.sayName = function () { \n                return hero.name;  \n              }; \n\n    ```", "```js\n            > hero.sayName(); \n            \"Leonardo\" \n\n    ```", "```js\n            > delete hero.name; \n            true \n\n    ```", "```js\n            > hero.sayName(); \n            \"undefined\" \n\n    ```", "```js\n    > var hero = { \n        name: 'Rafaelo', \n        sayName: function () { \n          return this.name; \n        } \n      }; \n    > hero.sayName(); \n    \"Rafaelo\" \n\n```", "```js\n    function Hero() { \n      this.occupation = 'Ninja'; \n    } \n\n```", "```js\n    > var hero = new Hero(); \n    > hero.occupation; \n    \"Ninja\" \n\n```", "```js\n    function Hero(name) { \n      this.name = name; \n      this.occupation = 'Ninja'; \n      this.whoAreYou = function () { \n        return \"I'm \" + \n               this.name + \n               \" and I'm a \" + \n               this.occupation; \n      }; \n    } \n\n```", "```js\n    > var h1 = new Hero('Michelangelo'); \n    > var h2 = new Hero('Donatello'); \n    > h1.whoAreYou(); \n    \"I'm Michelangelo and I'm a Ninja\" \n    > h2.whoAreYou(); \n    \"I'm Donatello and I'm a Ninja\" \n\n```", "```js\n    > var h = Hero('Leonardo'); \n    > typeof h; \n    \"undefined\" \n\n```", "```js\n    > var a = 1; \n\n```", "```js\n        > var a = 1; \n        > window.a; \n        1 \n        > this.a; \n        1 \n\n    ```", "```js\n    > function Hero(name) { \n        this.name = name; \n      } \n    > var h = Hero('Leonardo'); \n    > typeof h; \n    \"undefined\" \n    > typeof h.name; \n    TypeError: Cannot read property 'name' of undefined \n\n```", "```js\n    > name; \n    \"Leonardo\" \n    > window.name; \n    \"Leonardo\" \n\n```", "```js\n    > var h2 = new Hero('Michelangelo'); \n    > typeof h2; \n    \"object\" \n    > h2.name; \n    \"Michelangelo\" \n\n```", "```js\n    > parseInt('101 dalmatians'); \n    101 \n    > window.parseInt('101 dalmatians') \n    101 \n\n```", "```js\n    > h2.constructor; \n    function Hero(name) { \n      this.name = name; \n    } \n\n```", "```js\n    > var h3 = new h2.constructor('Rafaello'); \n    > h3.name; \n    \"Rafaello\" \n\n```", "```js\n    > var o = {}; \n    > o.constructor; \n    function Object() { [native code] } \n    > typeof o.constructor; \n    \"function\" \n\n```", "```js\n    > function Hero() {} \n    > var h = new Hero(); \n    > var o = {}; \n    > h instanceof Hero; \n    true \n    > h instanceof Object; \n    true \n    > o instanceof Object; \n    true \n\n```", "```js\n    function factory(name) { \n      return { \n        name: name \n      }; \n    } \n\n```", "```js\n    > var o = factory('one'); \n    > o.name; \n    \"one\" \n    > o.constructor; \n    function Object() { [native code] } \n\n```", "```js\n    > function C() { \n        this.a = 1; \n      } \n    > var c = new C(); \n    > c.a; \n    1 \n\n```", "```js\n    > function C2() { \n        this.a = 1; \n        return {b: 2}; \n      } \n    > var c2 = new C2(); \n    > typeof c2.a; \n    \"undefined\" \n    > c2.b; \n    2 \n\n```", "```js\n    function C() { \n      // var this = {}; // pseudo code, you can't do this \n      this.a = 1; \n      // return this; \n    } \n\n```", "```js\n    > var original = {howmany: 1}; \n    > var mycopy = original; \n    > mycopy.howmany; \n    1 \n    > mycopy.howmany = 100; \n    100 \n    > original.howmany; \n    100 \n\n```", "```js\n    > var original = {howmany: 100}; \n    > var nullify = function (o) { o.howmany = 0; }; \n    > nullify(original); \n    > original.howmany; \n    0 \n\n```", "```js\n    > var fido  = {breed: 'dog'}; \n    > var benji = {breed: 'dog'}; \n\n```", "```js\n    > benji === fido; \n    false \n    > benji == fido; \n    false \n\n```", "```js\n    > var mydog = benji; \n\n```", "```js\n    > mydog === benji; \n    true \n\n```", "```js\n    > mydog === fido; \n    false \n\n```", "```js\n    > for (var i = 0; i < 5; i++) { \n        console.log(i);  \n      } \n    0 \n    1 \n    2 \n    3 \n    4 \n\n```", "```js\n    let a = 1 \n    let b = 2 \n    let val = {a: a, b: b} \n    console.log(val) //{\"a\":1,\"b\":2} \n\n```", "```js\n    let a = 1 \n    let b = 2 \n    let val = {a, b} \n    console.log(val) //{\"a\":1,\"b\":2} \n\n```", "```js\n    var obj = { \n      prop: 1, \n      modifier:  function() { \n        console.log(this.prop);   \n      } \n    } \n\n```", "```js\n    var obj = { \n      prop: 1, \n      modifier () { \n        console.log(this.prop); \n      } \n    } \n\n```", "```js\n    var obj = { \n      prop: 1, \n      modifier: function () { \n        console.log(this.prop);   \n      } \n    } \n    obj.prop = 2; \n    obj.modifier(); //2 \n\n```", "```js\n    let vehicle = \"car\" \n    function vehicleType(){ \n      return \"truck\" \n    } \n    let car = { \n      [vehicle+\"_model\"]: \"Ford\" \n    } \n    let truck= { \n      [vehicleType() + \"_model\"]: \"Mercedez\" \n    } \n    console.log(car) //{\"car_model\":\"Ford\"} \n    console.log(truck) //{\"truck_model\":\"Mercedez\"} \n\n```", "```js\n    let object_type = \"Vehicle\" \n    let obj = { \n      [\"get\"+object_type]() { \n        return \"Ford\" \n      } \n    } \n\n```", "```js\n    let obj = { \n      age: 25 \n    } \n    console.log(Object.getOwnPropertyDescriptor(obj, 'age')); \n    //{\"value\":25,\"writable\":true,\"enumerable\":true,\"configurable\":true} \n\n```", "```js\n    let obj = { \n      age: 25 \n    } \n    Object.defineProperty(obj, 'age', { configurable: false }) \n    console.log(Object.getOwnPropertyDescriptor(obj, 'age')); \n    //{\"value\":25,\"writable\":true,\"enumerable\":true,\"configurable\":false} \n\n```", "```js\n    let a = {} \n    Object.assign(a, { age: 25 }) \n    console.log(a)  //{\"age\":25} \n\n```", "```js\n    let a = {age : 23, gender: \"male\"} \n    Object.assign(a, { age: 25 })    // age overwritten, but gender ignored \n    console.log(a)  //{\"age\":25, \"gender\":\"male\"} \n\n```", "```js\n    console.log(Object.assign({a:1, b:2}, {a: 2}, {c: 4}, {b: 3})) \n    //Object { \n    //\"a\": 2,  \n    //\"b\": 3, \n    //\"c\": 4 \n    // \n\n```", "```js\n    let a = {age : 23, gender: \"male\"} \n    Object.defineProperty(a, 'superpowers', {enumberable:false, value: 'ES6'}) \n    console.log(\n```", "```js\n    console.log(NaN===NaN) //false \n    console.log(-0===+0) //true \n    //ES6 Object.is \n    console.log(Object.is(NaN,NaN)) //true \n    console.log(Object.is(-0,+0)) //false \n\n```", "```js\n    var config = { \n      server: 'localhost', \n      port: '8080' \n    } \n    var server = config.server; \n    var port = config.port; \n\n```", "```js\n    let config = { \n      server: 'localhost', \n      port: '8080', \n      timeout: 900, \n    } \n    let {server,port} = config  \n    console.log(server, port) //\"localhost\" \"8080\" \n\n```", "```js\n    let {timeout : t} =config \n    console.log(t) //900 \n\n```", "```js\n    let config = { \n      server: 'localhost', \n      port: '8080', \n      timeout: 900, \n    } \n    let server = '127.0.0.1'; \n    let port = '80'; \n    ({server,port} = config) //assignment surrounded by () \n    console.log(server, port) //\"localhost\" \"8080\" \n\n```", "```js\n    let config = { \n      server: 'localhost', \n      port: '8080', \n      timeout: 900, \n    } \n    let server='127.0.0.1'; \n    let port ='80'; \n    let timeout ='100'; \n\n    function startServer(configValue){ \n      console.log(configValue) \n    } \n    startServer({server,port,timeout} = config) \n\n```", "```js\n    let config = { \n      server: 'localhost', \n      port: '8080' \n    } \n    let {server,port,timeout=0} = config \n    console.log(timeout) \n\n```", "```js\n    const arr = ['a','b'] \n    const [x,y] = arr \n    console.log (x,y) /\"a\" \"b\" \n\n```", "```js\n    const days = ['Thursday','Friday','Saturday','Sunday'] \n    const [,,sat,sun] = days \n    console.log (sat,sun) //\"Saturday\" \"Sunday\" \n\n```", "```js\n    let a=1, b=2; \n    [b,a] = [a,b] \n    console.log(a,b) //2 1 \n\n```", "```js\n    const [x, ...y] = ['a', 'b', 'c']; // x='a'; y=['b', 'c'] \n\n```", "```js\n    > var o = {}; \n    > var o = new Object(); \n\n```", "```js\n    > var o = new Object(); \n\n```", "```js\n    > o.toString(); \n    \"[object Object]\" \n\n```", "```js\n    > alert(o); \n    > alert(o.toString()); \n\n```", "```js\n    > \"An object: \" + o; \n    \"An object: [object Object]\" \n\n```", "```js\n    > o.valueOf() === o; \n    true \n\n```", "```js\n    > var a = new Array(); \n\n```", "```js\n    > var a = []; \n\n```", "```js\n    > a[0] = 1; \n    > a[1] = 2; \n    > a; \n    [1, 2] \n\n```", "```js\n    > var a = new Array(1, 2, 3, 'four'); \n    > a; \n    [1, 2, 3, \"four\"] \n\n```", "```js\n    > var a2 = new Array(5); \n    > a2; \n     [undefined x 5] \n\n```", "```js\n    > typeof [1, 2, 3]; \n    \"object\" \n\n```", "```js\n    > var a = [1, 2, 3, 'four']; \n    > a.toString(); \n    \"1,2,3,four\" \n    > a.valueOf(); \n    [1, 2, 3, \"four\"] \n    > a.constructor; \n    function Array() { [native code] } \n\n```", "```js\n    > var a = [], o = {}; \n\n```", "```js\n    > a.length; \n    0 \n    > typeof o.length; \n    \"undefined\" \n\n```", "```js\n    > a[0] = 1;  \n    > o[0] = 1; \n    > a.prop = 2; \n    > o.prop = 2; \n\n```", "```js\n    > a.length; \n    1 \n\n```", "```js\n    > a.length = 5; \n    5 \n    > a; \n    [1, undefined x 4] \n\n```", "```js\n    > a.length = 2; \n    2 \n    > a; \n    [1, undefined x 1] \n\n```", "```js\n    > var a = [3, 5, 1, 7, 'test']; \n\n```", "```js\n    > a.push('new'); \n    6 \n    > a; \n    [3, 5, 1, 7, \"test\", \"new\"] \n    > a.pop(); \n    \"new\" \n    > a; \n    [3, 5, 1, 7, \"test\"] \n\n```", "```js\n    > var b = a.sort(); \n    > b; \n    [1, 3, 5, 7, \"test\"] \n    > a === b; \n    true \n\n```", "```js\n    > a.join(' is not '); \n    \"1 is not 3 is not 5 is not 7 is not test\" \n\n```", "```js\n    > b = a.slice(1, 3); \n    [3, 5] \n    > b = a.slice(0, 1); \n    [1] \n    > b = a.slice(0, 2); \n    [1, 3] \n\n```", "```js\n    > a; \n    [1, 3, 5, 7, \"test\"] \n\n```", "```js\n    > b = a.splice(1, 2, 100, 101, 102); \n    [3, 5] \n    > a; \n    [1, 100, 101, 102, 7, \"test\"] \n\n```", "```js\n    > a.splice(1, 3);  \n    [100, 101, 102] \n    > a; \n    [1, 7, \"test\"] \n\n```", "```js\n    function toArray(args) { \n        var result = []; \n        for (var i = 0, len = args.length; i < len; i++) { \n            result.push(args[i]); \n        } \n        return result; \n    } \n    function doSomething() { \n        var args = toArray(arguments); \n        console.log(args) \n    } \n    doSomething(\"hellow\", \"world\") \n    //Array [ \n    //  \"hellow\", \n    //  \"world\" \n    //] \n\n```", "```js\n    function doSomething() { \n        console.log(Array.from(arguments)) \n    } \n    doSomething(\"hellow\", \"world\") \n    //Array [ \n    //  \"hellow\", \n    //  \"world\" \n    //] \n\n```", "```js\n    function doSomething() { \n       console.log(Array.from(arguments, function(elem) \n      { return elem + \" mapped\"; })); \n    } \n\n```", "```js\n    let arr = new Array(2) \n    console.log(arr) //[undefined, undefined] \n    console.log(arr.length) //2 \n\n```", "```js\n    let arr = new Array(\"2\") \n    console.log(arr) //[\"2\"] \n    console.log(arr.length) //1 \n\n```", "```js\n    let arr = new Array(1,\"2\",{obj: \"3\"}) \n    console.log(arr.length) //3 \n\n```", "```js\n    let arr = Array.of(1,\"2\",{obj: \"3\"}) \n    console.log(arr.length) //3 \n\n```", "```js\n    let arr = ['a','b','c'] \n    for (const index of arr.keys()){ \n      console.log(index) //0 1 2 \n    } \n    for (const value of arr.values()){ \n      console.log(value) //a b c \n    } \n    for (const [index,value] of arr.entries()){ \n      console.log(index,value)  \n    } \n    //0 \"a\" \n    //1 \"b\" \n    //2 \"c\" \n\n```", "```js\n    let numbers = [1,2,3,4,5,6,7,8,9,10]; \n    console.log(numbers.find(n => n > 5)); //6 \n    console.log(numbers.findIndex(n => n > 5)); //5 \n\n```", "```js\n    > function sum(a, b) { // function declaration \n        return a + b; \n      } \n    > sum(1, 2); \n    3 \n    > var sum = function (a, b) { // function expression \n        return a + b; \n      }; \n    > sum(1, 2) \n    3 \n    > var sum = new Function('a', 'b', 'return a + b;'); \n    > sum(1, 2) \n    3 \n\n```", "```js\n    > var first = new Function( \n        'a, b, c, d', \n        'return arguments;' \n      ); \n    > first(1, 2, 3, 4); \n           [1, 2, 3, 4] \n    > var second = new Function( \n        'a, b, c', \n        'd', \n        'return arguments;' \n       ); \n    > second(1, 2, 3, 4); \n           [1, 2, 3, 4] \n    > var third = new Function( \n        'a', \n        'b', \n        'c', \n        'd', \n        'return arguments;' \n      ); \n    > third(1, 2, 3, 4);  \n          [1, 2, 3, 4] \n\n```", "```js\n    > function myfunc(a) { \n        return a;  \n      } \n    > myfunc.constructor; \n    function Function() { [native code] } \n\n```", "```js\n    > function myfunc(a, b, c) { \n        return true; \n      } \n    > myfunc.length; \n       3 \n\n```", "```js\n    var ninja = { \n      name: 'Ninja', \n      say: function () { \n        return 'I am a ' + this.name; \n      } \n    }; \n\n```", "```js\n    > function F() {} \n    > typeof F.prototype; \n    \"object\" \n\n```", "```js\n    > F.prototype = ninja; \n\n```", "```js\n    > var baby_ninja = new F(); \n    > baby_ninja.name; \n    \"Ninja\" \n    > baby_ninja.say(); \n    \"I am a Ninja\" \n\n```", "```js\n    > function myfunc(a, b, c) { \n        return a + b + c; \n      } \n    > myfunc.toString(); \n    \"function myfunc(a, b, c) { \n      return a + b + c; \n    }\" \n\n```", "```js\n    > parseInt.toString(); \n    \"function parseInt() { [native code] }\" \n\n```", "```js\n    var some_obj = { \n      name: 'Ninja', \n      say: function (who) { \n        return 'Haya ' + who + ', I am a ' + this.name; \n      } \n   }; \n\n```", "```js\n    > some_obj.say('Dude'); \n    \"Haya Dude, I am a Ninja\" \n\n```", "```js\n    > var my_obj = {name: 'Scripting guru'}; \n\n```", "```js\n    > some_obj.say.call(my_obj, 'Dude'); \n    \"Haya Dude, I am a Scripting guru\" \n\n```", "```js\n    some_obj.someMethod.call(my_obj, 'a', 'b', 'c'); \n\n```", "```js\n    some_obj.someMethod.apply(my_obj, ['a', 'b', 'c']); \n    some_obj.someMethod.call(my_obj, 'a', 'b', 'c'); \n\n```", "```js\n    > some_obj.say.apply(my_obj, ['Dude']); \n    \"Haya Dude, I am a Scripting guru\" \n\n```", "```js\n    > function f() { \n        return arguments; \n      } \n    > f(1, 2, 3); \n    [1, 2, 3] \n\n```", "```js\n    > function f() { \n        var args = [].slice.call(arguments); \n        return args.reverse(); \n      } \n\n    > f(1, 2, 3, 4); \n     [4, 3, 2, 1] \n\n```", "```js\n    var greeter = { \n      default: \"Hello \", \n      greet: function (names){ \n        names.forEach(function(name) { \n    console.log(this.default + name); //Cannot read property \n      'default' of undefined \n       }) \n      } \n    }     \n    console.log(greeter.greet(['world', 'heaven'])) \n\n```", "```js\n    var greeter = { \n      default: \"Hello \", \n      greet: function (names){ \n        let that = this \n        names.forEach(function(name) { \n          console.log(that.default + name);  \n       }) \n      } \n    }     \n    console.log(greeter.greet(['world', 'heaven'])) \n\n```", "```js\n    var greeter = { \n      default: \"Hello \", \n      greet: function (names){ \n        names.forEach(name=> { \n          console.log(this.default + name);   //lexical 'this' \n           available for this subroutine \n       }) \n     } \n    }     \n    console.log(greeter.greet(['world', 'heaven'])) \n\n```", "```js\n    > Object.prototype.toString.call({}); \n    \"[object Object]\" \n    > Object.prototype.toString.call([]); \n    \"[object Array]\" \n\n```", "```js\n    > [1, 2, 3].toString(); \n    \"1,2,3\" \n\n```", "```js\n    > Array.prototype.toString.call([1, 2, 3]); \n    \"1,2,3\" \n\n```", "```js\n    > var toStr = Object.prototype.toString; \n\n```", "```js\n    > (function () { \n        return toStr.call(arguments); \n      }()); \n    \"[object Arguments]\" \n\n```", "```js\n    > toStr.call(document.body); \n    \"[object HTMLBodyElement]\" \n\n```", "```js\n    > var b = new Boolean(); \n\n```", "```js\n    > var b = new Boolean(); \n    > typeof b; \n    \"object\" \n    > typeof b.valueOf(); \n    \"boolean\" \n    > b.valueOf(); \n    false \n\n```", "```js\n    > Boolean(\"test\"); \n    true \n    > Boolean(\"\"); \n    false \n    > Boolean({}); \n    true \n\n```", "```js\n    > Boolean(new Boolean(false)); \n    true \n\n```", "```js\n        > var n = Number('12.12'); \n        > n; \n        12.12 \n        > typeof n; \n        \"number\" \n        > var n = new Number('12.12'); \n        > typeof n; \n        \"object\" \n\n    ```", "```js\n    > Number.MAX_VALUE; \n    1.7976931348623157e+308 \n    > Number.MIN_VALUE; \n    5e-324 \n    > Number.POSITIVE_INFINITY; \n    Infinity \n    > Number.NEGATIVE_INFINITY; \n    -Infinity \n    > Number.NaN; \n    NaN \n\n```", "```js\n    > var n = new Number(123.456); \n    > n.toFixed(1); \n    \"123.5\" \n\n```", "```js\n    > (12345).toExponential(); \n    \"1.2345e+4\" \n\n```", "```js\n    > var n = new Number(255); \n    > n.toString(); \n    \"255\" \n    > n.toString(10); \n    \"255\" \n    > n.toString(16); \n    \"ff\" \n    > (3).toString(2); \n    \"11\" \n    > (3).toString(10); \n    \"3\" \n\n```", "```js\n    > var primitive = 'Hello'; \n    > typeof primitive; \n    \"string\" \n    > var obj = new String('world'); \n    > typeof obj; \n    \"object\" \n\n```", "```js\n    > obj[0]; \n    \"w\" \n    > obj[4]; \n    \"d\" \n    > obj.length; \n    5 \n\n```", "```js\n    > obj.valueOf(); \n    \"world\" \n    > obj.toString(); \n    \"world\" \n    > obj + \"\"; \n    \"world\" \n\n```", "```js\n    > \"potato\".length; \n    6 \n    > \"tomato\"[0]; \n    \"t\" \n    > \"potatoes\"[\"potatoes\".length - 1]; \n    \"s\" \n\n```", "```js\n    > Boolean(\"\"); \n    false \n    > Boolean(new String(\"\")); \n    true \n\n```", "```js\n    > String(1); \n    \"1\" \n\n```", "```js\n    > String({p: 1}); \n       \"[object Object]\" \n    > String([1, 2, 3]); \n       \"1,2,3\" \n    > String([1, 2, 3]) === [1, 2, 3].toString(); \n       true \n\n```", "```js\n    > var s = new String(\"Couch potato\"); \n\n```", "```js\n    > s.toUpperCase(); \n    \"COUCH POTATO\" \n    > s.toLowerCase(); \n    \"couch potato\" \n\n```", "```js\n    > s.charAt(0); \n    \"C\" \n    > s[0]; \n    \"C\" \n\n```", "```js\n    > s.charAt(101); \n    \"\" \n\n```", "```js\n    > s.indexOf('o'); \n    1 \n\n```", "```js\n    > s.indexOf('o', 2); \n    7 \n\n```", "```js\n    > s.lastIndexOf('o'); \n    11 \n\n```", "```js\n    > s.indexOf('Couch'); \n    0 \n\n```", "```js\n    > s.indexOf('couch'); \n    -1 \n\n```", "```js\n    > s.toLowerCase().indexOf('couch'.toLowerCase()); \n    0 \n\n```", "```js\n    if (s.indexOf('Couch')) {...} \n\n```", "```js\n    if (s.indexOf('Couch') !== -1) {...} \n\n```", "```js\n    > s.slice(1, 5); \n    \"ouch\" \n    > s.substring(1, 5); \n    \"ouch\" \n\n```", "```js\n    > s.slice(1, -1); \n    \"ouch potat\" \n    > s.substring(1, -1); \n    \"C\" \n\n```", "```js\n    > s.split(\" \"); \n    [\"Couch\", \"potato\"] \n\n```", "```js\n    > s.split(' ').join(' '); \n    \"Couch potato\" \n\n```", "```js\n    > s.concat(\"es\"); \n    \"Couch potatoes\" \n\n```", "```js\n    > s.valueOf(); \n    \"Couch potato\" \n\n```", "```js\n        > Math.PI; \n          3.141592653589793 \n\n    ```", "```js\n        > Math.SQRT2; \n          1.4142135623730951 \n\n    ```", "```js\n        > Math.E; \n          2.718281828459045 \n\n    ```", "```js\n        > Math.LN2; \n          0.6931471805599453 \n\n    ```", "```js\n        > Math.LN10; \n          2.302585092994046 \n\n    ```", "```js\n    > Math.random(); \n    0.3649461670235814 \n\n```", "```js\n    > 100 * Math.random(); \n\n```", "```js\n    > 8 * Math.random() + 2; \n    9.175650496668485 \n\n```", "```js\n    > Math.round(Math.random()); \n\n```", "```js\n    > Math.min(Math.max(1, input), 12); \n\n```", "```js\n    > Math.pow(2, 8); \n    256 \n\n```", "```js\n    > Math.sqrt(9); \n    3 \n\n```", "```js\n    > new Date(); \n    Wed Feb 27 2013 23:49:28 GMT-0800 (PST) \n\n```", "```js\n    > new Date('2015 11 12'); \n    Thu Nov 12 2015 00:00:00 GMT-0800 (PST) \n    > new Date('1 1 2016'); \n    Fri Jan 01 2016 00:00:00 GMT-0800 (PST) \n    > new Date('1 mar 2016 5:30'); \n    Tue Mar 01 2016 05:30:00 GMT-0800 (PST) \n\n```", "```js\n    > new Date(2015, 0, 1, 17, 05, 03, 120); \n    Tue Jan 01 2015 17:05:03 GMT-0800 (PST) \n\n```", "```js\n    > new Date(2015, 0, 1, 17); \n    Tue Jan 01 2015 17:00:00 GMT-0800 (PST) \n\n```", "```js\n    > new Date(2016, 1, 28); \n    Sun Feb 28 2016 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > new Date(2016, 1, 29); \n    Mon Feb 29 2016 00:00:00 GMT-0800 (PST) \n    > new Date(2016, 1, 30); \n    Tue Mar 01 2016 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > new Date(2012, 11, 31); \n    Mon Dec 31 2012 00:00:00 GMT-0800 (PST) \n    > new Date(2012, 11, 32); \n    Tue Jan 01 2013 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > new Date(1357027200000); \n    Tue Jan 01 2013 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > Date(); \n    Wed Feb 27 2013 23:51:46 GMT-0800 (PST) \n    > Date(1, 2, 3, \"it doesn't matter\"); \n    Wed Feb 27 2013 23:51:52 GMT-0800 (PST) \n    > typeof Date(); \n    \"string\" \n    > typeof new Date(); \n    \"object\" \n\n```", "```js\n    > var d = new Date(2015, 1, 1); \n    > d.toString(); \n    Sun Feb 01 2015 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > d.setMonth(2); \n    1425196800000 \n    > d.toString(); \n    Sun Mar 01 2015 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > d.getMonth(); \n    2 \n\n```", "```js\n    > Date.parse('Jan 11, 2018'); \n    1515657600000 \n\n```", "```js\n    > Date.UTC(2018, 0, 11); \n    1515628800000 \n\n```", "```js\n    > new Date(Date.UTC(2018, 0, 11)); \n    Wed Jan 10 2018 16:00:00 GMT-0800 (PST) \n    > new Date(2018, 0, 11); \n    Thu Jan 11 2018 00:00:00 GMT-0800 (PST) \n\n```", "```js\n    > Date.now(); \n    1362038353044 \n    > Date.now() === new Date().getTime(); \n    true \n\n```", "```js\n    > new Date().valueOf(); \n    1362418306432 \n\n```", "```js\n    > +new Date(); \n    1362418318311 \n\n```", "```js\n    > var d = new Date(2016, 5, 20); \n    > d.getDay(); \n    1 \n\n```", "```js\n    > d.toDateString(); \n    \"Mon Jun 20 2016\" \n\n```", "```js\n    var stats = [0, 0, 0, 0, 0, 0, 0]; \n\n```", "```js\n    for (var i = 2016; i < 3016; i++) { \n       stats[new Date(i, 5, 20).getDay()]++; \n    } \n\n```", "```js\n    > stats; \n    [140, 146, 140, 145, 142, 142, 145] \n\n```", "```js\n    > var re = new RegExp(\"j.*t\");  \n\n```", "```js\n    > var re = /j.*t/; \n\n```", "```js\n    > var re = new RegExp('j.*t', 'gmi'); \n\n```", "```js\n    > re.global; \n    true \n\n```", "```js\n    > re.global = false; \n    > re.global; \n    true \n\n```", "```js\n    > var re = /j.*t/ig; \n    > re.global; \n    true \n\n```", "```js\n    > /j.*t/.test(\"Javascript\"); \n    false \n\n```", "```js\n    > /j.*t/i.test(\"Javascript\"); \n    true \n\n```", "```js\n    > /j.*t/i.exec(\"Javascript\")[0]; \n    \"Javascript\" \n\n```", "```js\n    > var s = new String('HelloJavaScriptWorld'); \n\n```", "```js\n    > s.match(/a/); \n    [\"a\"] \n\n```", "```js\n    > s.match(/a/g); \n    [\"a\", \"a\"] \n\n```", "```js\n    > s.match(/j.*a/i); \n    [\"Java\"] \n\n```", "```js\n    > s.search(/j.*a/i); \n    5 \n\n```", "```js\n    > s.replace(/[A-Z]/g, ''); \n    \"elloavacriptorld\" \n\n```", "```js\n    > s.replace(/[A-Z]/, ''); \n    \"elloJavaScriptWorld\" \n\n```", "```js\n    > s.replace(/[A-Z]/g, \"_$&\"); \n    \"_Hello_Java_Script_World\" \n\n```", "```js\n    > s.replace(/([A-Z])/g, \"_$1\"); \n    \"_Hello_Java_Script_World\" \n\n```", "```js\n    > var email = \"stoyan@phpied.com\"; \n    > var username = email.replace(/(.*)@.*/, \"$1\"); \n    > username; \n    \"stoyan\" \n\n```", "```js\n    > function replaceCallback(match) { \n       return \"_\" + match.toLowerCase(); \n      } \n\n    > s.replace(/[A-Z]/g, replaceCallback); \n    \"_hello_java_script_world\" \n\n```", "```js\n    > var glob; \n\n```", "```js\n    > var re = /(.*)@(.*)\\.(.*)/; \n\n```", "```js\n    var callback = function () { \n      glob = arguments; \n      return arguments[1] + ' at ' + \n        arguments[2] + ' dot ' +  arguments[3]; \n    }; \n\n```", "```js\n    > \"stoyan@phpied.com\".replace(re, callback); \n    \"stoyan at phpied dot com\" \n\n```", "```js\n    > glob; \n    [\"stoyan@phpied.com\", \"stoyan\", \"phpied\", \"com\", 0,  \n    \"stoyan@phpied.com\"] \n\n```", "```js\n    > var csv = 'one, two,three ,four'; \n    > csv.split(','); \n    [\"one\", \" two\", \"three \", \"four\"] \n\n```", "```js\n    > csv.split(/\\s*,\\s*/); \n    [\"one\", \"two\", \"three\", \"four\"] \n\n```", "```js\n    > \"test\".replace('t', 'r'); \n    \"rest\" \n\n```", "```js\n    > \"test\".replace(new RegExp('t'), 'r'); \n    \"rest\" \n\n```", "```js\n    > \"pool\".replace('o', '*'); \n    \"p*ol\" \n\n```", "```js\n    > \"pool\".replace(/o/g, '*'); \n    \"p**l\" \n\n```", "```js\n    > iDontExist(); \n\n```", "```js\n    try { \n      iDontExist(); \n    } catch (e) { \n      // do nothing \n     } \n\n```", "```js\n    try { \n      iDontExist(); \n    } catch (e) { \n      alert(e.name + ': ' + e.message); \n    } finally { \n      alert('Finally!'); \n    } \n\n```", "```js\n    try { \n      var total = maybeExists(); \n      if (total === 0) { \n        throw new Error('Division by zero!'); \n      } else { \n        alert(50 / total); \n      } \n    } catch (e) { \n       alert(e.name + ': ' + e.message); \n     } finally { \n      alert('Finally!'); \n    } \n\n```", "```js\n    throw { \n      name: \"MyError\", \n      message: \"OMG! Something terrible has happened\" \n    } \n\n```", "```js\n            function F() { \n              function C() { \n               return this; \n              } \n              return C(); \n            } \n            var o = new F(); \n\n    ```", "```js\n            function C(){  \n              this.a = 1; \n              return false; \n            } \n            console.log(typeof new C()); \n\n    ```", "```js\n            > c = [1, 2, [1, 2]]; \n            > c.sort(); \n            > c.join('--');  \n            > console.log(c);  \n\n    ```", "```js\n            > var s = new MyString('hello'); \n            > s.length; \n                  5 \n            > s[0]; \n                  \"h\" \n            > s.toString(); \n                  \"hello\" \n            > s.valueOf(); \n                  \"hello\" \n            > s.charAt(1); \n                  \"e\" \n            > s.charAt('2'); \n                  \"l\" \n            > s.charAt('e'); \n                  \"h\" \n            > s.concat(' world!'); \n                  \"hello world!\" \n            > s.slice(1, 3); \n                  \"el\" \n            > s.slice(0, -1); \n                  \"hell\" \n            > s.split('e'); \n                  [\"h\", \"llo\"] \n            > s.split('l'); \n                  [\"he\", \"\", \"o\"] \n\n    ```", "```js\n            > var a = new MyArray(1, 2, 3, \"test\"); \n            > a.toString(); \n                  \"1,2,3,test\" \n            > a.length; \n                  4 \n            > a[a.length - 1]; \n                  \"test\" \n            > a.push('boo'); \n                  5 \n            > a.toString(); \n                  \"1,2,3,test,boo\" \n            > a.pop(); \n                  \"boo\" \n            > a.toString(); \n                  \"1,2,3,test\" \n            > a.join(','); \n                  \"1,2,3,test\" \n            > a.join(' isn't '); \n                  \"1 isn't 2 isn't 3 isn't test\" \n\n    ```"]