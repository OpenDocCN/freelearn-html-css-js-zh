["```js\n    npm install gulp-sass --save-dev\n\n    ```", "```js\n    npm install node-bourbon --save-dev\n    npm install node-neat --save-dev\n\n    ```", "```js\n    var neat = require('node-neat').includePaths;\n    ```", "```js\n    var paths = {\n      scss: 'src/*.scss'\n    };\n    ```", "```js\n    gulp.task('styles', function () {\n      return gulp.src(paths.scss)\n      .pipe(sass({\n        includePaths: require('node-neat').includePaths\n      }))\n      .pipe(gulp.dest('dest/'));\n    });\n    ```", "```js\n    var watcher = gulp.watch('src/*.scss', ['styles']);\n    ```", "```js\n    @media only screen and (min-width: 30rem) {\n      .wrapper {\n        width: 95%;\n        max-width: 72rem; }\n      .col-1 {\n        width: 8.33333%; }\n    ```", "```js\n    npm install postcss-neat --save-dev\n\n    ```", "```js\ngulp.task('neat', function () {\n  var processors = [\n    require('autoprefixer-core')({ browsers: ['last 1 version'] }),\n    require('postcss-neat')(/* { options } */)\n  ];\n  return gulp.src('src/*.css')\n    .pipe(require('gulp-postcss')(processors))\n    .pipe(gulp.dest('dest/'));\n});\n```", "```js\npostcss([\n  ...\n  require('postcss-neat')({\n    neatMaxWidth: '128em'\n  })\n  ...\n])\n```", "```js\n    var cssnano = require('cssnano');\n    var sourcemaps = require('gulp-sourcemaps');\n    var rename = require('gulp-rename');\n    var stylelint = require('stylelint');\n    var reporter = require('postcss-reporter');\n    ```", "```js\n    gulp.task(\"lint-styles\", ['neat'], function() {\n      return gulp.src(\"dest/css/*.css\")\n        .pipe(postcss([ stylelint({\n          \"rules\": {\n            \"color-no-invalid-hex\": 2,\n            \"declaration-colon-space-before\": [2, \"never\"],\n            \"indentation\": [2, 2],\n            \"number-leading-zero\": [2, \"always\"]\n          }\n        }),\n        reporter({\n          clearMessages: true,\n        })\n      ]))\n    });\n    ```", "```js\n    gulp.task('rename', ['lint-styles'], function () {\n      return gulp.src('dest/css/*.css')\n        .pipe(postcss([ cssnano() ]))\n        .pipe(rename('style.css'))\n        .pipe(gulp.dest(\"dest/css\"));\n    });\n    ```", "```js\n    gulp.task('sourcemap', ['rename'], function () {\n      return gulp.src('dest/css/*.css')\n        .pipe(sourcemaps.init())\n        .pipe(sourcemaps.write('maps/'))\n        .pipe(gulp.dest(\"dest/css\"));\n    });\n    ```", "```js\n    gulp.task('default', ['neat', 'lint-styles', 'rename', 'sourcemap']);\n    ```", "```js\n    var watcher = gulp.watch('src/*.css', ['default',  'lint-styles', 'rename', 'sourcemap']);\n    ```", "```js\n    .wrapper {\n      @neat-outer-container;\n      margin: 0 auto;\n    }\n    ```", "```js\n    .col-1 { @neat-span-columns 1; }\n    .col-2 { @neat-span-columns 2; }\n    .col-3 { @neat-span-columns 3; }\n    .col-4 { @neat-span-columns 4; }\n    .col-5 { @neat-span-columns 5; }\n    .col-6 { @neat-span-columns 6; }\n    .col-7 { @neat-span-columns 7; }\n    .col-8 { @neat-span-columns 8; }\n    .col-9 { @neat-span-columns 9; }\n    .col-10 { @neat-span-columns 10;}\n    .col-11 { @neat-span-columns 11; }\n    .col-12 { @neat-span-columns 12; }\n    ```", "```js\n    npm install postcss-css-variables --save-dev\n    npm install postcss-nested\n\n    ```", "```js\n    $visual-grid: true;\n    $visual-grid-color: #E6F6FF;\n    $visual-grid-opacity: 0.4;\n    ```", "```js\n    npm install postcss-media-minmax --save-dev\n\n    ```", "```js\n    /* media queries */\n    @media screen and (width >= 370px) and (width <= 630px) {\n\n    }\n    ```", "```js\n      body {\n        min-width: 375px;\n      }\n    ```", "```js\n      header {\n        width: 50%;\n        font-size: 2rem;\n        margin-left: 45%;\n      }\n    ```", "```js\n      #beta {\n        margin-right: 2.35765160%;\n        width: 55.1748%;\n        overflow: auto;\n      }\n    ```", "```js\n    npm install postcss-media-minmax --save-dev\n\n    ```"]