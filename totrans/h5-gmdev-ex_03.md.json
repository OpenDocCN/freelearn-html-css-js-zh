["```js\n    index.html\n    js/\n      js/jquery-2.1.3.js\n    css/\n      css/css3transition.css\n    images/\n    ```", "```js\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Getting Familiar with CSS3 Transition</title>\n      <link rel=\"stylesheet\" href=\"css/css3transition.css\" />\n    </head>\n    <body>\n      <header>\n        <h1>Getting Familiar with CSS3 Transition</h1>\n      </header>\n\n      <section id=\"game\">\n        <div id=\"cards\">\n          <div id=\"card1\" class=\"card cardAK\"></div>\n          <div id=\"card2\" class=\"card cardAQ\"></div>\n        </div> <!-- #cards -->\n      </section> <!-- #game -->\n      <footer>\n        <p>This is an example of transitioning cards.</p>\n      </footer>\n    <script src=\"img/jquery-2.1.3.min.js\"></script>\n    <script>\n    $(function(){\n      $(\"#card1\").addClass(\"move-and-scale\");\n      $(\"#card2\").addClass(\"rotate-right\");\n    });\n    </script>\n    </body>\n    </html>\n    ```", "```js\n    body {\n      background: LIGHTGREY;\n    }\n    /* defines styles for each card */\n    .card {\n      width: 80px;\n      height: 120px;\n      margin: 20px;\n      position: absolute;\n     transition: all 1s linear;\n    }\n\n    /* set the card to corresponding playing card graphics */\n    .cardAK {\n      background: url(../images/AK.png);\n    }\n    .cardAQ {\n      background: url(../images/AQ.png);\n    }\n    /* rotate the applied DOM element 90 degree */\n    .rotate-right {\n     transform: rotate3d(0, 0, 1, 90deg);\n    }\n\n    /* move and scale up the applied DOM element */\n    .move-and-scale {\n     transform: translate3d(150px, 150px, 0) scale3d(1.5, 1.5, 1);\n    }\n    ```", "```js\ntransform: transform-function1 transform-function2;\n```", "```js\nrotate(angle)\n```", "```js\ntranslate (tx, ty)\n```", "```js\ntranslateX(number)\ntranslateY(number)\n```", "```js\nscale(sx, sy)\n```", "```js\nscaleX(number)\nscaleY(number)\n```", "```js\nrotate3d(x, y, z, angle)\n```", "```js\nrotateX(angle)\nrotateY(angle)\nrotateZ(angle)\n```", "```js\ntranslate3d(tx, ty, tz)\ntranslateX(tx)\ntranslateY(ty)\ntranslateZ(tz)\n```", "```js\nscale3d(sx, sy, sz)\nscaleX(sx)\nscaleY(sy)\nscaleZ(sz)\n```", "```js\ntransition: property_name duration timing_function delay\n```", "```js\ntransition: opacity 0.3s, background-color 0.5s\n```", "```js\ntransition-property, transition-duration, transition-timing-function and transition-delay\n```", "```js\n    <section id=\"game\">\n      <div id=\"cards\">\n        <div class=\"card\">\n          <div class=\"face front\"></div>\n          <div class=\"face back cardAK\"></div>\n        </div> <!-- .card -->\n        <div class=\"card\">\n          <div class=\"face front\"></div>\n          <div class=\"face back cardAQ\"></div>\n        </div> <!-- .card -->\n      </div> <!-- #cards -->\n    </section> <!-- #game -->\n    <script src=\"img/jquery-2.1.3.min.js\"></script>\n    ```", "```js\n    <link rel=\"stylesheet\" href=\"css/css3flip.css\" />\n    ```", "```js\n    #game {\n      background: #9c9;\n      padding: 5px;\n    }\n    /* Define the 3D perspective view and dimension of each card. */\n    .card {\n      perspective: 600px;\n      width: 80px;\n      height: 120px;\n    }\n    ```", "```js\n    .face {\n      border-radius: 10px;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      transition: all .3s;\n     backface-visibility: hidden;\n    }\n    ```", "```js\n    .front {\n      background: #966;\n    }\n    .back {\n      background: #eaa;\n      transform: rotate3d(0,1,0,-180deg);\n    }\n    ```", "```js\n    .card-flipped .front {\n      transform: rotate3d(0,1,0,180deg);\n    }\n    .card-flipped .back {\n      transform: rotate3d(0,1,0,0deg);\n    }\n    .cardAK {\n      background: url(../images/AK.png);\n    }\n    .cardAQ {\n      background: url(../images/AQ.png);\n    }\n    ```", "```js\n    <script>\n    (function($){\n      $(function(){\n        $(\"#cards\").children().each(function(index) {\n          // listen the click event on each card DIV element.\n          $(this).click(function() {\n            // add the class \"card-flipped\".\n            // the browser will animate the styles \n            // between current state and card-flipped state.\n            $(this).toggleClass(\"card-flipped\");\n          });\n        });\n      });\n    })(jQuery);\n    </script>\n    ```", "```js\n$(\"#card1\").toggleClass(\"card-flipped\");\n```", "```js\n$(\"#card1\").toggleClass(\"card-flipped scale-up\");\n```", "```js\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=utf-8>\n      <title>CSS3 Matching Game</title>\n      <link rel=\"stylesheet\" href=\"css/matchgame.css\" />\n    </head>\n    <body>\n      <header>\n        <h1>CSS3 Matching Game</h1>\n      </header>\n\n      <section id=\"game\">\n        <div id=\"cards\"> \n          <div class=\"card\">\n            <div class=\"face front\"></div>\n            <div class=\"face back\"></div>\n          </div> <!-- .card -->\n        </div> <!-- #cards -->\n      </section> <!-- #game -->\n\n      <footer>\n        <p>This is an example of creating a matching game with CSS3.</p>\n      </footer>\n\n    <script src=\"img/jquery-2.1.3.min.js\"></script>\n    <script src=\"img/matchgame.js\"></script>\n    </body>\n    </html>\n    ```", "```js\n    body {\n      text-align: center;\n      background: BROWN url(../images/bg.jpg);\n    }\n    ```", "```js\n    #game {\n      border-radius: 10px;\n      border: 1px solid GRAY;\n      background: DARKGREEN url(../images/table.jpg);\n      width: 500px;\n      height: 460px;\n      margin: 0 auto;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    ```", "```js\n    #cards {\n      position: relative;\n      width: 380px;\n      height: 400px;\n    }\n    ```", "```js\n    .card {\n      perspective: 600px;\n      width: 80px;\n      height: 120px;\n      position: absolute;\n      transition: all .3s;\n    }\n    ```", "```js\n    .face {\n      border-radius: 10px;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      transition-property: opacity, transform, box-shadow;\n      transition-duration: .3s;\n\n      backface-visibility: hidden;\n    }\n    ```", "```js\n    .front {\n      background: GRAY url(../images/deck.png) 0 -480px;\n    }\n    .back {\n      background: LIGHTGREY url(../images/deck.png);\n      transform: rotate3d(0,1,0,-180deg);\n    }\n    .card:hover .face, .card-flipped .face {\n      box-shadow: 0 0 10px #aaa;\n    }\n    .card-flipped .front {\n      transform: rotate3d(0,1,0,180deg);\n    }\n    .card-flipped .back {\n      transform: rotate3d(0,1,0,0deg);\n    }\n    ```", "```js\n    .card-removed {\n      opacity: 0;\n    }\n    ```", "```js\n    .cardAJ {background-position: -800px 0;}\n    .cardAQ {background-position: -880px 0;}\n    .cardAK {background-position: -960px 0;}\n    .cardBJ {background-position: -800px -120px;}\n    .cardBQ {background-position: -880px -120px;}\n    .cardBK {background-position: -960px -120px;}\n    .cardCJ {background-position: -800px -240px;}\n    .cardCQ {background-position: -880px -240px;}\n    .cardCK {background-position: -960px -240px;}\n    .cardDJ {background-position: -800px -360px;}\n    .cardDQ {background-position: -880px -360px;}\n    .cardDK {background-position: -960px -360px;}\n    ```", "```js\n    $(function(){\n      // clone 12 copies of the card\n      for(var i=0; i<11; i++){\n        $(\".card:first-child\").clone().appendTo(\"#cards\");\n      }\n      // initialize each card's position\n      $(\"#cards\").children().each(function(index) {\n        // align the cards to be 4x3 ourselves.\n        var x = ($(this).width() + 20) * (index % 4);\n        var y = ($(this).height() + 20) * Math.floor(index / 4);\n        $(this).css(\"transform\", \"translateX(\" + x + \"px) translateY(\" + y + \"px)\");\n      });\n    });\n    ```", "```js\n$(\"#cards\").children().each(function(index) {\n  // align the cards to be 4x3 ourselves.\n  var x = ($(this).width() + 20) * (index % 4);\n  var y = ($(this).height() + 20) * Math.floor(index / 4);\n  $(this).css(\"transform\", \"translateX(\" + x + \"px) translateY(\" + y + \"px)\");\n});\n```", "```js\n$(\".card:first-child\").clone().appendTo(\"#cards\");\n```", "```js\n$(\".card:first-child\")\n```", "```js\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n```", "```js\n    var matchingGame = {};\n    matchingGame.deck = [\n      'cardAK', 'cardAK',\n      'cardAQ', 'cardAQ',\n      'cardAJ', 'cardAJ',\n      'cardBK', 'cardBK',\n      'cardBQ', 'cardBQ',\n      'cardBJ', 'cardBJ',\n    ];\n    ```", "```js\n    $(function(){\n     matchingGame.deck.sort(shuffle);\n\n      for(var i=0;i<11;i++){\n        $(\".card:first-child\").clone().appendTo(\"#cards\");\n      }\n\n      $(\"#cards\").children().each(function(index) {\n        var x = ($(this).width() + 20) * (index % 4);\n        var y = ($(this).height() + 20) * Math.floor(index / 4);\n        $(this).css(\"transform\", \"translateX(\" + x + \"px) translateY(\" + y + \"px)\");\n\n     // get a pattern from the shuffled deck\n     var pattern = matchingGame.deck.pop();\n\n     // visually apply the pattern on the card's back side.\n     $(this).find(\".back\").addClass(pattern);\n\n     // embed the pattern data into the DOM element.\n     $(this).attr(\"data-pattern\",pattern);\n\n     // listen the click event on each card DIV element.\n     $(this).click(selectCard);\n      });\n    });\n    ```", "```js\n    function shuffle() {\n      return 0.5 - Math.random();\n    }\n    ```", "```js\n    function selectCard() {\n      // we do nothing if there are already two card flipped.\n      if ($(\".card-flipped\").size() > 1) {\n        return;\n      }\n      $(this).addClass(\"card-flipped\");\n      // check the pattern of both flipped card 0.7s later.\n      if ($(\".card-flipped\").size() === 2) {\n        setTimeout(checkPattern,700);\n      }\n    }\n    ```", "```js\n    function checkPattern() {\n      if (isMatchPattern()) {\n        $(\".card-flipped\").removeClass(\"card-flipped\").addClass(\"card-removed\");\n        $(\".card-removed\").bind(\"transitionend\",removeTookCards);\n      } else {\n        $(\".card-flipped\").removeClass(\"card-flipped\");\n      }\n    }\n    ```", "```js\n    function isMatchPattern() {\n      var cards = $(\".card-flipped\");\n      var pattern = $(cards[0]).data(\"pattern\");\n      var anotherPattern = $(cards[1]).data(\"pattern\");\n      return (pattern === anotherPattern);\n    }\n    ```", "```js\n    function removeTookCards() {\n      $(\".card-removed\").remove();\n    }\n    ```", "```js\n$(\".card-flipped\").removeClass(\"card-flipped\").addClass(\"card-removed\");\n$(\".card-removed\").bind(\"transitionend\", removeTookCards);\n```", "```js\nif ($(\".card-flipped\").size() == 2) {\n  setTimeout(checkPattern, 700);\n}\n```", "```js\nsort(compare_function);\n```", "```js\nanArray.sort(shuffle);\nfunction shuffle(a, b) {\n  return 0.5 - Math.random();\n}\n```", "```js\n<ul id=\"games\">\n  <li data-chapter=\"2\" data-difficulty=\"easy\">Ping-Pong</li>\n  <li data-chapter=\"3\" data-difficulty=\"medium\">Matching Game</li>\n</ul>\n```", "```js\n$(this).find(\".back\").addClass(pattern);\n$(this).attr(\"data-pattern\",pattern);\n```", "```js\npattern = $(this).attr(\"data-pattern\");\n```", "```js\n$(\"a\").attr(\"href\");\n```", "```js\n.data(key)\n.data(key,value)\n```", "```js\n<div id=\"target\" data-custom-name=\"HTML5 Games\"></div>\n```", "```js\n$(\"#target\").data(\"customName\")\n```", "```js\n<div id=\"game\" data-score=\"100\"></div>\n```", "```js\n    <link href='http://fonts.googleapis.com/css?family=Droid+Serif:regular,bold&subset=latin' rel='stylesheet' type='text/css'>\n    ```", "```js\n    body {\n      font-family: 'Droid Serif', Arial, serif;\n    }\n    ```"]