- en: Chapter 3. Parsing and Sending E-mails
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。解析和发送电子邮件
- en: In the previous chapter, you learned how to create basic GAS elements such as
    custom menu, dialog, and toast. You also learned how to debug your script codes.
    In this chapter, you will learn many real-world Gmail and Contacts applications
    including a mail merger application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了如何创建基本的GAS元素，例如自定义菜单、对话框和吐司。你还学习了如何调试你的脚本代码。在本章中，你将学习许多现实世界的Gmail和联系人应用程序，包括邮件合并应用程序。
- en: Note
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In this chapter, if you go through left and right square brackets inside code
    like `[[ value ]]`, then replace `value` with the actual value including the brackets.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，如果你在代码中遇到像`[[ value ]]`这样的左右方括号，那么将`value`替换为包括括号在内的实际值。
- en: For example, if the e-mail ID is `example@emample.com` and you go through `My
    email id [[emailid]] \n`, then replace it with `My email id example@example.com
    \n`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果电子邮件ID是`example@emample.com`，并且你通过`My email id [[emailid]] \n`进行替换，那么将其替换为`My
    email id example@example.com \n`。
- en: Creating Gmail Contacts by script
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过脚本创建Gmail联系人
- en: You can create Gmail Contacts by script using the `createContact` method of
    the `ContactsApp` class. For example, if the name is Anika Sumi and the e-mail
    ID is `<[anika@example.com](mailto:anika@example.com)>`, then the `ContactsApp.createContact("Anika",
    "Sumi", "anika@example.com")` code will create the expected contact.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`ContactsApp`类的`createContact`方法通过脚本创建Gmail联系人。例如，如果名字是Anika Sumi，电子邮件ID是`<[anika@example.com](mailto:anika@example.com)>`，那么`ContactsApp.createContact("Anika",
    "Sumi", "anika@example.com")`代码将创建预期的联系人。
- en: 'To know more available methods of the `ContactsApp` class, in the code editor,
    type `ContactsApp` and `.` (a dot) next to it. Then, you can view all the available
    methods with parameter details in code hint as shown in the following screenshot:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解`ContactsApp`类的更多可用方法，在代码编辑器中输入`ContactsApp`和它旁边的`.`（一个点）。然后，你可以查看代码提示中显示的所有可用方法及其参数细节，如下面的截图所示：
- en: '![Creating Gmail Contacts by script](img/B05010_03_09.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![通过脚本创建Gmail联系人](img/B05010_03_09.jpg)'
- en: You can see deprecated methods struck out in the preceding screenshot; you are
    advised not to use those methods.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在前面的截图中看到已弃用的方法被划掉；建议你不要使用这些方法。
- en: Accessing Sheet, cell, range, and offset
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问工作表、单元格、范围和偏移量
- en: A Google Sheet's spreadsheet has one or more Sheets or tabs in it. Sheets are
    indexed from left to right starting from 0\. For example, the left-most Sheet
    is referred to by the index 0, the next one by 1, and so on. In GAS, we can refer
    to a Sheet by its index or by its name.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Google工作表的电子表格中包含一个或多个Sheet或标签页。Sheet从左到右按索引顺序排列，从0开始。例如，最左边的Sheet通过索引0引用，下一个通过1引用，依此类推。在GAS中，我们可以通过索引或名称来引用Sheet。
- en: 'For example:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: The `getSheets()` method returns an array of Sheet objects. From the array,
    we can refer to an individual Sheet by its index.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getSheets()`方法返回一个包含Sheet对象的数组。从数组中，我们可以通过索引引用单个Sheet。'
- en: The `getSheetByName("Contacts")` function returns a Sheet object with the name
    `Contacts`.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getSheetByName("Contacts")`函数返回一个名为`Contacts`的Sheet对象。'
- en: In Google Sheets, column label starts from the letter *A*, and is counted in
    a programmatic point of view, from left to right starting with the number 1\.
    For example, column *A* is 1, *B* is 2, and so on. Rows are identified by their
    respective label numbers. In GAS, we can reference a cell or a range of cells
    by *A1* notation or by separate row and column numbers.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Sheets中，列标签从字母*A*开始，从左到右按程序性方式计数，从1开始。例如，列*A*是1，*B*是2，以此类推。行通过其相应的标签数字进行标识。在GAS中，我们可以通过*A1*表示法或通过单独的行和列数字来引用单元格或单元格范围。
- en: 'For example:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: The `getRange('D1:F10')` method returns a `Range` object referencing the cells
    from *D1* to *F10*
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getRange(''D1:F10'')`方法返回一个引用从*D1*到*F10*的`Range`对象。'
- en: The `getRange(1,4,10,3)` method returns a `Range` object referencing the same
    range *D1:F10*
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getRange(1,4,10,3)`方法返回一个引用相同范围的`Range`对象。'
- en: Offset is an indirect referencing method to refer to a cell/range from a base
    cell reference. An offset reference is determined by how many rows and columns
    it shifted from the base cell.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 偏移量是一种间接引用方法，用于从基准单元格引用单元格/范围。偏移引用由它相对于基准单元格移动的行数和列数确定。
- en: For example, if the base cell is *D1*, then the `offset(10,3)` method returns
    the range *D1:F10*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果基准单元格是*D1*，那么`offset(10,3)`方法返回范围*D1:F10*。
- en: Reading and writing the Sheet data
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取和写入工作表数据
- en: Often you need to read and/or write data to/from the Sheet. Usually, use the
    `getValue` method to read a value from a cell and the `getValues` method to read
    values from a range. The `getValue` method returns a single value and the `getValues`
    method returns a 2-dimensional array of values. To write single value and 2-dimensional
    array of values, use `setValue` and `setValues` methods respectively.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 通常你需要从表格中读取和/或写入数据。通常，使用 `getValue` 方法从单元格中读取一个值，使用 `getValues` 方法从范围中读取值。`getValue`
    方法返回单个值，而 `getValues` 方法返回一个二维数组值。要写入单个值和二维数组值，分别使用 `setValue` 和 `setValues` 方法。
- en: Building a Gmail Contact search application
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Gmail 联系人搜索应用程序
- en: Now, we will create an application to search existing contacts. This application
    is able to search and list your Gmail Contacts in Sheets. Create a new Sheet and
    rename `Sheet1` to `Contacts` and set it up as shown in the following screenshot.
    Create a button and assign the function name `searchContacts` to it, as you learned
    in the previous chapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个应用程序来搜索现有的联系人。这个应用程序能够搜索并列出你在表格中的 Gmail 联系人。创建一个新的表格，并将 `Sheet1` 重命名为
    `Contacts`，并按照以下截图所示进行设置。创建一个按钮，并将之前章节中学到的函数名称 `searchContacts` 分配给它。
- en: '![Building a Gmail Contact search application](img/B05010_03_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Gmail 联系人搜索应用程序](img/B05010_03_01.jpg)'
- en: 'Create the `searchContacts` function as listed here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下内容创建 `searchContacts` 函数：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, `clear` is the `Range` object's method to clear everything including format
    and formula, in a range of cells. You can use the `clear` method of the `Sheet`
    object to clear the entire Sheet. Alternatively, you can use the `clearContent`
    method to clear content only.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`clear` 是 `Range` 对象的方法，用于清除一个范围内的所有内容，包括格式和公式。你可以使用 `Sheet` 对象的 `clear`
    方法来清除整个表格。或者，你也可以使用 `clearContent` 方法来仅清除内容。
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Do not copy paste the preceding code, but edit it yourself. By doing so, you'll
    be aware of available method signatures (method names and parameters) of classes
    such as `SpreadsheetApp`, `ContactApp`, and `Contact` with the help of the script
    editor's code hint feature.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不要复制粘贴前面的代码，而是自己编辑它。这样做，你将了解 `SpreadsheetApp`、`ContactApp` 和 `Contact` 等类中可用的方法签名（方法名称和参数），借助脚本编辑器的代码提示功能。
- en: 'After you have edited and saved code without error, turn to the spreadsheet
    window. If you enter a search term in the *A3* cell (search box) and click on
    **Search**, then the first 10 contacts will be listed as shown in the following
    screenshot (the listed contacts details vary as per your Gmail username and contacts):'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有错误地编辑和保存代码后，转到电子表格窗口。如果你在 *A3* 单元格（搜索框）中输入一个搜索词，然后点击 **搜索**，那么前 10 个联系人将按以下截图所示列出（列出的联系人详细信息根据你的
    Gmail 用户名和联系人而异）：
- en: '![Building a Gmail Contact search application](img/B05010_03_02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Gmail 联系人搜索应用程序](img/B05010_03_02.jpg)'
- en: 'What if you want to update the listed contacts by the `searchContacts` function?
    For example, you may want to update the phone number and/or address of a contact.
    To update contact fields, we will create another function called `updateContacts`.
    Before creating that, in the `Contacts` Sheet, add a button next to **Search**
    named **Update** and assign function name `updateContacts` as shown in the following
    screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想通过 `searchContacts` 函数更新列出的联系人怎么办？例如，你可能想更新联系人的电话号码和/或地址。要更新联系人字段，我们将创建另一个名为
    `updateContacts` 的函数。在创建该函数之前，在 `Contacts` 表格中，在 **搜索** 旁边添加一个名为 **更新** 的按钮，并按以下截图所示分配函数名称
    `updateContacts`：
- en: '![Building a Gmail Contact search application](img/B05010_03_10.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Gmail 联系人搜索应用程序](img/B05010_03_10.jpg)'
- en: 'Update those field values you would like to update. Now create the function
    listed here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更新你想要更新的字段值。现在创建以下列出的函数：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding function retrieves contacts by the given e-mail ID; and, for each
    contact, it also retrieves field values and updates/adds those field values with
    the Sheet values. This function can update/add full name, phone, and address fields
    but not the e-mail ID.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的函数通过给定的电子邮件 ID 检索联系人；并且，对于每个联系人，它还会检索字段值，并使用表格值更新/添加这些字段值。此函数可以更新/添加全名、电话和地址字段，但不能更新电子邮件
    ID。
- en: Building the Gmail parser application
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Gmail 解析应用程序
- en: 'The `parseEmail` function is able to check 10 latest inbox threads, extract
    the **from** field and body text from unread messages, and put the gathered data
    in the left-most tab of the Sheet. Create the `parseEmail` function as listed
    here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`parseEmail` 函数能够检查最新的 10 个收件箱线程，从未读消息中提取 **发件人** 字段和正文文本，并将收集到的数据放在表格最左侧的标签页中。按照以下内容创建
    `parseEmail` 函数：'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can use `RegExp` to extract only the required data from the message body
    text.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `RegExp` 从消息正文文本中提取所需的数据。
- en: Properties service
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 属性服务
- en: 'GAS provides the properties service to store and/or to retrieve project-related
    data. The data organized as key/value pairs, can be set manually or by script
    codes. The following screenshot shows how you can set properties manually. To
    see this dialog, click on the **File** menu and select **Project properties**:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: GAS 提供了属性服务来存储和/或检索项目相关的数据。数据以键/值对的形式组织，可以手动设置或通过脚本代码设置。以下截图显示了如何手动设置属性。要查看此对话框，请点击
    **文件** 菜单并选择 **项目属性**：
- en: '![Properties service](img/B05010_03_03.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![属性服务](img/B05010_03_03.jpg)'
- en: Note
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can use manually created project properties in script codes, but the properties
    created by code sometimes may not be visible in the **Project properties** dialog.
    You can create, update, or delete project properties in codes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在脚本代码中使用手动创建的项目属性，但有时代码创建的属性可能不在 **项目属性** 对话框中可见。你可以在代码中创建、更新或删除项目属性。
- en: In the next task, we are going to use project properties.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个任务中，我们将使用项目属性。
- en: Downloading Gmail attachments to Drive
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Gmail 附件下载到 Drive
- en: The `saveEmailAttachmentsToDrive` function can download Gmail attachments to
    Drive. In this function `PropertiesService` is used to avoid repeated downloading
    of the same attachment. The `createFolder_` function is used to create folders,
    if not already exist, with the given name in Drive.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`saveEmailAttachmentsToDrive` 函数可以将 Gmail 附件下载到 Drive。在这个函数中，使用 `PropertiesService`
    来避免重复下载相同的附件。`createFolder_` 函数用于在 Drive 中创建具有给定名称的文件夹，如果不存在的话。'
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If any function name is appended with `_`, then it will not be listed under
    the **Run** menu. You cannot run these functions directly, but they can be called
    from the other functions. These are called **private functions**.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任何函数名后附加了 `_`，则它将不会在 **运行** 菜单下列出。你不能直接运行这些函数，但可以从其他函数中调用它们。这些被称为 **私有函数**。
- en: 'You can create the `createFolder_` function in the same script file along with
    the `saveEmailAttachmentsToDrive` function or in a separate script file such as
    `Library.gs`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在与 `saveEmailAttachmentsToDrive` 函数相同的脚本文件中创建 `createFolder_` 函数，或者在一个单独的脚本文件中，例如
    `Library.gs`：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The preceding function calls the following `createFolder_` function with the
    folder name as an argument. The function `createFolder_` looks for the given folder,
    creates if it does not exist, and returns its unique ID:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的函数使用文件夹名称作为参数调用以下 `createFolder_` 函数。`createFolder_` 函数会查找指定的文件夹，如果不存在则创建它，并返回其唯一
    ID：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the preceding function the `getFolders` method is an iterator method. An
    iterator does not return all the data in one go, but only the current data. To
    get successive data, you should call next method repeatedly until `hasNext` became
    `false`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的函数中，`getFolders` 方法是一个迭代器方法。迭代器不会一次性返回所有数据，而只返回当前数据。要获取后续数据，你应该反复调用 `next`
    方法，直到 `hasNext` 变为 `false`。
- en: Sending e-mails using the MailApp service
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MailApp 服务发送电子邮件
- en: 'The `sendEmail` function is able to send e-mails with prefixed messages. Remember
    to replace e-mail ID and message text. This service is mainly used to send e-mails
    with limited methods (only `sendEmail` and `getRemainingDailyQuota`), and it cannot
    access your Gmail account. You can use the `GmailApp` class for more methods:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`sendEmail` 函数能够发送带有前缀消息的电子邮件。请记住替换电子邮件 ID 和消息文本。此服务主要用于发送具有有限方法的电子邮件（只有 `sendEmail`
    和 `getRemainingDailyQuota`），并且无法访问你的 Gmail 账户。你可以使用 `GmailApp` 类进行更多操作：'
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Sending an e-mail notification on Form submission
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在表单提交时发送电子邮件通知
- en: Imagine if you created a Form and presented it to many users. It would be tedious
    to open the response Sheet every time to verify whether any user has submitted
    the Form or not. The problem would be worse if you created many Forms and sent
    them to many users. It will be helpful receiving a notification e-mail whenever
    there is a Form submission.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果你创建了一个表单并展示给许多用户。每次都要打开响应表来验证是否有用户提交表单将会很麻烦。如果你创建了多个表单并发送给多个用户，问题会更糟。当有表单提交时，收到通知电子邮件将会很有帮助。
- en: 'For this task, create a Form with three fields as shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个任务，创建一个包含三个字段的表单，如图所示：
- en: '![Sending an e-mail notification on Form submission](img/B05010_03_04.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![在表单提交时发送电子邮件通知](img/B05010_03_04.jpg)'
- en: Submit the test data from a live form. Your submitted data will be saved in
    a response Sheet named something like `Form Responses 1`. The column headers will
    be as per your Form fields as shown in the following screenshot. Data may vary
    as per your input.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从实时表单提交测试数据。您提交的数据将被保存在一个名为类似`Form Responses 1`的响应工作表中。列标题将与您的表单字段一致，如以下截图所示。数据可能因您的输入而异。
- en: '![Sending an e-mail notification on Form submission](img/B05010_03_05.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![在表单提交时发送电子邮件通知](img/B05010_03_05.jpg)'
- en: 'In the script file, you need to make the following changes:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本文件中，您需要进行以下更改：
- en: Enter the `sendEmail` function mentioned from the following code.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下代码中输入`sendEmail`函数。
- en: Replace the receiver's e-mail ID. If you run this function, then it will send
    an e-mail with the last submitted data (bottom-most row) in the response Sheet.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 替换接收者的电子邮件地址。如果您运行此函数，它将发送包含响应工作表中最后提交的数据（最底行）的电子邮件。
- en: Check the Sheet's actual name and the name used in the code; they should be
    exactly the same. If you are not sure, right-click on the Sheet name and select
    **Rename...**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查工作表的实际名称和代码中使用的名称；它们应该完全相同。如果您不确定，右键单击工作表名称并选择**重命名...**。
- en: 'Copy the Sheet name from the **Rename** dialog and paste it in the following
    code:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**重命名**对话框中复制工作表名称，并将其粘贴到以下代码中：
- en: '[PRE7]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You created a Form and a function to send response data to an e-mail ID. Creating
    a trigger so as to run the `sendEmail` function as soon as a Form is submitted
    will complete this task.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建了一个表单和一个函数，用于将响应数据发送到电子邮件地址。创建一个触发器以便在表单提交时立即运行`sendEmail`函数，将完成此任务。
- en: Creating triggers manually
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动创建触发器
- en: 'To create a trigger, in the code editor click on **Resources** and select **Current
    project''s triggers** then the **Current project''s triggers** dialog will open.
    Already created triggers will be listed in this dialog, otherwise a link to create
    a new trigger will appear. Click on the **No triggers set up. Click here to add
    one now** link. Select the options from the dropdowns as shown in the following
    screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建触发器，在代码编辑器中点击**资源**并选择**当前项目的触发器**，然后**当前项目的触发器**对话框将打开。已创建的触发器将列在此对话框中，否则将出现创建新触发器的链接。点击**没有设置触发器。点击此处添加一个**链接。从下拉菜单中选择选项，如以下截图所示：
- en: '![Creating triggers manually](img/B05010_03_06.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![手动创建触发器](img/B05010_03_06.jpg)'
- en: Under the **Run** heading, select the `sendEmail` function for which you want
    to create the trigger. Select **From spreadsheet** and **On form submit** under
    the **Events** heading as shown in the preceding screenshot.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在**运行**标题下，选择您想要创建触发器的`sendEmail`函数。在**事件**标题下选择**从电子表格**和**在表单提交时**，如前一张截图所示。
- en: If a Form user submits data to the spreadsheet, the trigger will run the `sendEmail`
    function.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表单用户将数据提交到电子表格，触发器将运行`sendEmail`函数。
- en: For more info on triggers, please go to [https://developers.google.com/apps-script/guides/triggers/](https://developers.google.com/apps-script/guides/triggers/).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 关于触发器的更多信息，请访问[https://developers.google.com/apps-script/guides/triggers/](https://developers.google.com/apps-script/guides/triggers/).
- en: Creating and deleting triggers by script
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过脚本创建和删除触发器
- en: 'You can create or delete triggers programmatically as shown in the following
    sample code:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以像以下示例代码所示，以编程方式创建或删除触发器。
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the `deleteTriggers` function, the `Utilities` service's `sleep` method is
    used to pause the script temporarily for the specified milliseconds. Otherwise,
    you may experience the `Too many service invocation…` error.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在`deleteTriggers`函数中，使用`Utilities`服务的`sleep`方法暂时暂停脚本指定毫秒数。否则，您可能会遇到`Too many
    service invocation…`错误。
- en: Forwarding e-mails if the specific keyword is found in the message body
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果消息正文中找到特定关键字，则转发电子邮件
- en: 'The `forwardEmails` function is able to forward e-mail messages, if a specific
    keyword is found in the body text to a prefixed e-mail ID. Be cautious about the
    number of iterations of the `for` loop while testing your code so that you can
    avoid lot of messages forwarded in error:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`forwardEmails`函数能够转发电子邮件消息，如果正文文本中找到特定关键字，则将其转发到前缀电子邮件地址。在测试代码时，请注意`for`循环的迭代次数，以避免错误地转发大量消息：'
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Sending e-mail with attachments
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过附件发送电子邮件
- en: You can attach any type of file to your e-mail message by setting options as
    shown in the following code. The following code attaches the active spreadsheet's
    left-most Sheet content as PDF.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过设置以下代码中的选项将任何类型的文件附加到您的电子邮件消息中。以下代码将活动工作表的左侧工作表内容作为PDF附加。
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Embedding inline images in an e-mail message
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在电子邮件消息中嵌入内联图像
- en: 'To embed images such as a logo in your e-mail message, you may use HTML code
    instead of plain text. Upload your image to Google Drive, retrieve, and use that
    file ID in code:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要在电子邮件消息中嵌入图像，如徽标，你可以使用HTML代码而不是纯文本。将你的图像上传到Google Drive，检索，并在代码中使用该文件ID：
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Building an e-mail merger application
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建电子邮件合并应用
- en: Sending personalized e-mails to hundreds of recipients at a time might be a
    time consuming task. Composing the draft and entering the subject and recipient's
    e-mail ID for each message might be tedious too. Using this mail merger application,
    you can send the same kind of information to all recipients, but customized to
    some extent. For example, greeting an individual.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一次向数百个收件人发送个性化的电子邮件可能是一项耗时的工作。为每条消息编写草稿、输入主题和收件人的电子邮件ID可能也很繁琐。使用这个邮件合并应用，你可以向所有收件人发送相同类型的信息，但可以在一定程度上进行定制。例如，问候个人。
- en: 'The first step is creating a draft in your Gmail as shown in the following
    screenshot. The draft is used as a template. You can use any special character
    to enclose the text to be replaced. In the draft, the code shown in the following
    screenshot uses left (`<<`) and right (`>>`) angled brackets to replace the first
    name with the **First Name** column data in an `EmailList` Sheet. You can include
    any other placeholder or field as per your requirement. Set up the draft, but
    don''t send it now:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是在你的Gmail中创建一个草稿，如下面的截图所示。草稿用作模板。你可以使用任何特殊字符来包围要替换的文本。在草稿中，如下面的截图所示的代码使用左(`<<`)和右(`>>`)尖括号将`EmailList`工作表中的**First
    Name**列数据替换为第一个名字。你可以根据需要包括任何其他占位符或字段。设置草稿，但现在不要发送：
- en: '![Building an e-mail merger application](img/B05010_03_07.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![构建电子邮件合并应用](img/B05010_03_07.jpg)'
- en: 'Create a Sheet with the name as `EmailList` in a new Sheet or existing Sheet.
    Create the column headers as shown here:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在新的工作表或现有工作表中创建一个名为`EmailList`的工作表。创建如下所示的列标题：
- en: '![Building an e-mail merger application](img/B05010_03_08.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![构建电子邮件合并应用](img/B05010_03_08.jpg)'
- en: 'Create functions as shown in the following code, in the script editor. Replace
    the draft and sender name with actual values. Set `maxEmails` (this code uses
    `50`) by considering your daily e-mail sending quota:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本编辑器中创建如下所示的函数，用实际值替换草稿和发件人姓名。根据你的每日电子邮件发送配额设置`maxEmails`（此代码使用`50`）：
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Populate data in the `EmailList` Sheet. To send e-mails, run the `sendEmails`
    function. The `<<FirstName>>` field in your draft will be replaced as per your
    **First Name** column data in the `EmailList` Sheet. That's it!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在`EmailList`工作表中填充数据。要发送电子邮件，运行`sendEmails`函数。你的草稿中的`<<FirstName>>`字段将根据你在`EmailList`工作表中的**First
    Name**列数据替换。就是这样！
- en: Congratulations! You have created a working e-mail merger application.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经创建了一个工作的电子邮件合并应用。
- en: Summary
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about `ContactsApp`, `MailApp`, and `GmailApp`
    classes and their methods. Using these classes, you created many useful real-world
    applications including an e-mail merger application. In the next chapter, you
    will learn how to create Forms programmatically using `FormApp` and `HtmlService`
    classes. Also you will learn about `doGet` and `doPost` simple trigger functions.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了`ContactsApp`、`MailApp`和`GmailApp`类及其方法。使用这些类，你创建了多个有用的现实世界应用，包括一个电子邮件合并应用。在下一章中，你将学习如何使用`FormApp`和`HtmlService`类程序化地创建表单。你还将了解`doGet`和`doPost`简单的触发函数。
