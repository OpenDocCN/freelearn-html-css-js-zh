- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Maximizing Performance – Lazy Loading and Code Splitting
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最大化性能——懒加载和代码拆分
- en: In order to maximize the performance of a JavaScript application, reducing the
    amount of unused JavaScript being loaded and interpreted is key. The techniques
    that can be brought to bear on this problem are called **lazy loading** and **code
    splitting**. Lazy loading and code splitting allows parts of the JavaScript to
    be loaded on demand as required. This is in contrast to being downloaded on page
    load and can greatly reduce the amount of unused JavaScript being loaded and interpreted.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最大化JavaScript应用程序的性能，减少加载和解释的未使用JavaScript的数量是关键。可以用来解决这个问题的方法被称为**懒加载**和**代码拆分**。懒加载和代码拆分允许JavaScript的部分按需加载。这与页面加载时下载形成对比，可以大大减少加载和解释的未使用JavaScript的数量。
- en: 'We’ll cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: The dynamic import syntax and how Vite can automatically code-split based on
    the syntax
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态导入语法以及Vite如何根据语法自动进行代码拆分
- en: Route-based code splitting with Next.js and how to read the Bundle Analyzer
    reports
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Next.js进行基于路由的代码拆分以及如何阅读Bundle Analyzer报告
- en: How to use **next/dynamic** and **react-intersection-observer** to load JavaScript
    and React components on different user interactions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用**next/dynamic**和**react-intersection-observer**在不同的用户交互中加载JavaScript和React组件
- en: By the end of this chapter, you’ll be able to identify and leverage lazy loading
    and code splitting in a variety of scenarios and applications.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够识别并利用各种场景和应用中的懒加载和代码拆分。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can find the code files for this chapter on GitHub at [https://github.com/PacktPublishing/Javascript-Design-Patterns](https://github.com/PacktPublishing/Javascript-Design-Patterns)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的代码文件，网址为[https://github.com/PacktPublishing/Javascript-Design-Patterns](https://github.com/PacktPublishing/Javascript-Design-Patterns)
- en: Dynamic imports and code splitting with Vite
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Vite进行动态导入和代码拆分
- en: Dynamic imports in JavaScript refer to the usage of the `import()` syntax to
    import a module. Unlike the `import Something from './my-module.js'` declarative
    syntax, `import()` is more akin to a function that returns a promise. For example,
    we could rewrite the original import as `const Something =` `await import('./my-module.js')`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript中的动态导入指的是使用`import()`语法导入一个模块。与`import Something from './my-module.js'`这种声明性语法不同，`import()`更像是一个返回promise的函数。例如，我们可以将原始导入重写为`const
    Something = await import('./my-module.js')`。
- en: The “dynamic” part of the import is that it doesn’t have to be done at module
    evaluation time; it’s done as part of the execution of the code. This is useful
    when paired with code splitting – which we’ll define now – since it means that
    we can avoid loading and evaluating some JavaScript code until it’s needed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: “动态”部分是指导入不需要在模块评估时完成；它是代码执行的一部分。当与代码拆分结合使用时，这很有用——我们现在将定义它——因为它意味着我们可以避免在需要之前加载和评估某些JavaScript代码。
- en: Code splitting is a technique whereby code is built into multiple files (also
    known as “chunks” or “bundles”) instead of a single file. Code splitting is useful
    to avoid loading all the code up front. Instead, when paired with dynamic imports,
    code is split into multiple files such that different parts of it are loaded only
    when necessary. This means that there’s a lower up-front cost to the JavaScript
    load, parse, and compile cycle.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 代码拆分是一种技术，将代码构建成多个文件（也称为“块”或“包”），而不是单个文件。代码拆分有助于避免一次性加载所有代码。相反，当与动态导入结合使用时，代码会被拆分成多个文件，只有在必要时才加载其不同部分。这意味着JavaScript的加载、解析和编译周期的前期成本更低。
- en: The Vite build tool supports code splitting at dynamic import boundaries.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Vite构建工具支持在动态导入边界处进行代码拆分。
- en: 'Given a simple document as follows, which has an `id="app"` `div` and references
    a `main.js` file, Vite can run a build as long as `main.js` exists:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 给定以下简单文档，它有一个`id="app"`的`div`并引用一个`main.js`文件，只要`main.js`存在，Vite就可以运行构建：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We’ll have two modules now: `main.js`, which is the entry point that Vite will
    reference, and our code will import the `dynamic.js` module.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将有两个模块：`main.js`，这是Vite将引用的入口点，我们的代码将导入`dynamic.js`模块。
- en: '`main.js` will inject `''Hello from main.js''`into our `app` div. It will then
    proceed to dynamically load the `dynamic.js` module and set the contents of the
    `app` div to the output of the `hello` function as exported by `dynamic.js`:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`main.js`将`''Hello from main.js''`注入我们的`app` div。然后它将继续动态加载`dynamic.js`模块，并将`app`
    div的内容设置为`dynamic.js`导出的`hello`函数的输出：'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: export function hello() {
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: export function hello() {
- en: return 'Hello from dynamic.js';
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: return 'Hello from dynamic.js';
- en: '}'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <!-- no change to app div -->
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- no change to app div -->
- en: <div>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <button data-track="button-click">With tracked click
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <button data-track="button-click">With tracked click
- en: </button>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: </button>
- en: <button data-track="alt-button-click">Other tracked click
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <button data-track="alt-button-click">Other tracked click
- en: </button>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: </button>
- en: </div>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: <!-- to change to script -->
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- to change to script -->
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: export function trackInteraction(page, type = 'click') {
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: export function trackInteraction(page, type = 'click') {
- en: return fetch
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: return fetch
- en: ('https://jsonplaceholder.typicode.com/posts', {
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ('https://jsonplaceholder.typicode.com/posts', {
- en: 'method: ''POST'','
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 'method: ''POST'','
- en: 'body: JSON.stringify({'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 'body: JSON.stringify({'
- en: type,
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: type,
- en: page,
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: page,
- en: '}),'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '}),'
- en: 'headers: {'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 'headers: {'
- en: '''Content-type'': ''application/json; charset=UTF-8'','
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '''Content-type'': ''application/json; charset=UTF-8'','
- en: '},'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '}).then((response) => response.json());'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '}).then((response) => response.json());'
- en: '}'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: // no change to rest of main.js
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: // no change to rest of main.js
- en: document.querySelectorAll('[data-track]').forEach((el) => {
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: document.querySelectorAll('[data-track]').forEach((el) => {
- en: el.addEventListener('click', async (event) => {
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: el.addEventListener('click', async (event) => {
- en: const page = window.location.pathname;
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: const page = window.location.pathname;
- en: const type = event.target.dataset?.track;
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: const type = event.target.dataset?.track;
- en: const { trackInteraction } = await import
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: const { trackInteraction } = await import
- en: ('./trackInteraction.js');
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ('./trackInteraction.js');
- en: const interactionResponse = await trackInteraction
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: const interactionResponse = await trackInteraction
- en: (page, type);
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: (page, type);
- en: console.assert(
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: console.assert(
- en: interactionResponse.type === type &&
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: interactionResponse.type === type &&
- en: interactionResponse.page === page,
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: interactionResponse.page === page,
- en: '''interaction response does not match sent data'','
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '''interaction response does not match sent data'','
- en: );
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '});'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: .
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: ├── components
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: ├── components
- en: ├── next.config.js
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: ├── next.config.js
- en: ├── package.json
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: ├── package.json
- en: ├── pages
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ├── pages
- en: │   └── index.js
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: │   └── index.js
- en: └── public
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: └── public
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: + First Load JS shared by all              79.9 kB
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: + First Load JS shared by all              79.9 kB
- en: ├ chunks/framework-cc1b0d6c55d15cb9.js   45.3 kB
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ├ chunks/framework-cc1b0d6c55d15cb9.js   45.3 kB
- en: ├ chunks/main-7c6ad51e94ec3ff5.js        32.8 kB
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: ├ chunks/main-7c6ad51e94ec3ff5.js        32.8 kB
- en: ├ chunks/pages/_app-db3a4be757903450.js  205 B
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ├ chunks/pages/_app-db3a4be757903450.js  205 B
- en: └ chunks/webpack-8850afd7843acaaa.js     1.55 kB
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: └ chunks/webpack-8850afd7843acaaa.js     1.55 kB
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: npm install --save @next/bundle-analyzer
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: npm install --save @next/bundle-analyzer
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: const nextConfig = {
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: const nextConfig = {
- en: // no changes to this config
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: // no changes to this config
- en: '};'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const withBundleAnalyzer = require('@next/bundle-analyzer')({
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: const withBundleAnalyzer = require('@next/bundle-analyzer')({
- en: 'enabled: process.env.ANALYZE === ''true'','
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'enabled: process.env.ANALYZE === ''true'','
- en: '});'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: module.exports = withBundleAnalyzer(nextConfig);
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports = withBundleAnalyzer(nextConfig);
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '{'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"//": "// no change to other properties",'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '"//": "// no change to other properties",'
- en: '"scripts": {'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '"scripts": {'
- en: '"//": "// no change to other scripts",'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '"//": "// no change to other scripts",'
- en: '"analyze": "cross-env ANALYZE=true next build"'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '"analyze": "cross-env ANALYZE=true next build"'
- en: '}'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: npm run analyze
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: npm run analyze
- en: next-route-based-splitting@0.1.0 analyze
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: next-route-based-splitting@0.1.0 analyze
- en: cross-env ANALYZE=true next build
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: cross-env ANALYZE=true next build
- en: ✓ Linting and checking validity of types
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Linting and checking validity of types
- en: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/nodejs.html
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/nodejs.html
- en: No bundles were parsed. Analyzer will show only original module sizes from stats
    file.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: No bundles were parsed. Analyzer will show only original module sizes from stats
    file.
- en: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/edge.html
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/edge.html
- en: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/client.html
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Webpack Bundle Analyzer saved report to /next-route-based-splitting/.next/analyze/client.html
- en: ✓ Creating an optimized production build
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Creating an optimized production build
- en: ✓ Compiled successfully
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Compiled successfully
- en: ✓ Collecting page data
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Collecting page data
- en: ✓ Generating static pages (3/3)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Generating static pages (3/3)
- en: ✓ Collecting build traces
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Collecting build traces
- en: ✓ Finalizing page optimization
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: ✓ Finalizing page optimization
- en: '[PRE11]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: import React from 'react';
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: import React from 'react';
- en: export function Hello() {
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: export function Hello() {
- en: return <>Hello</>;
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: return <>Hello</>;
- en: '}'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: import React from 'react';
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: import React from 'react';
- en: import dynamic from 'next/dynamic';
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: import dynamic from 'next/dynamic';
- en: const DynamicClientSideHello = dynamic(
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: const DynamicClientSideHello = dynamic(
- en: () => import('../components/Hello.jsx').then(({ Hello })
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: () => import('../components/Hello.jsx').then(({ Hello })
- en: => Hello),
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: => Hello),
- en: '{ ssr: false },'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '{ ssr: false },'
- en: );
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: export default function Index() {
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: export default function Index() {
- en: return (
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: <>
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: <>
- en: <h1>Next.js route-based splitting and component lazy
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>Next.js route-based splitting and component lazy
- en: loading</h1>
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: loading</h1>
- en: <DynamicClientSideHello />
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: <DynamicClientSideHello />
- en: </>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: </>
- en: );
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: import React from 'react';
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: import React from 'react';
- en: export function TermsAndConditions() {
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: export function TermsAndConditions() {
- en: return (
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: return (
- en: <>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: <>
- en: <h3>Terms and Conditions Short</h3>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <h3>Terms and Conditions Short</h3>
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: import React from 'react';
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: export function TermsAndConditions() {
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Terms and Conditions Long</h3>
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: import React, { useState } from 'react';
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: export default function Index() {
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: const [selectedTermsAndConditions,
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: setSelectedTermsAndConditions] =
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: useState('None');
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no changes to rest of the returned JSX */}'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: <label htmlFor="termsAndConditionsType">
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'Terms and Conditions selector:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: </label>
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: <select
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: id="termsAndConditionsType"
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: onChange={(e) => setSelectedTermsAndConditions
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: (e.target.value)}
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: <option value="None">None</option>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: <option value="Short">Short</option>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: <option value="Long">Long</option>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: </select>
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: import React, { useState } from 'react';
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: const NoRender = () => null;
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: export default function Index() {
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: // no change to useState
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: const TermsAndConditions = ['Short', 'Long'].includes(
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: selectedTermsAndConditions,
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '? dynamic(() =>'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: import(
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '`../components/TermsAndConditions$'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '{selectedTermsAndConditions}.jsx`'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: ).then(({ TermsAndConditions }) =>
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: TermsAndConditions),
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: ': NoRender;'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no changes to rest of the returned JSX */}'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to label or select */}'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: <hr />
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: <TermsAndConditions />
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: import React from 'react';
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: export function TermsAndConditions() {
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Terms and Conditions Long Scroll</h3>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: <p>{/* Terms and Conditions Content */}</p>
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: import React, { useRef } from 'react';
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: export function TermsAndConditions() {
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: const scrollTargetRef = useRef();
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: async function handleScroll() {
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: if (!('scrollBehavior' in document.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: documentElement.style)) {
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: await import('scroll-behavior-polyfill');
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: if (scrollTargetRef.current) {
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: scrollTargetRef.current.scrollIntoView({
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'behavior: ''smooth'','
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'block: ''end'','
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to heading */}'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: <button onClick={handleScroll}>Scroll to button
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: </button>
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no changes to paragraphs */}'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: <hr />
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: <label htmlFor="accept">
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: <input
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: id="accept"
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: name="acceptTerms"
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: type="checkbox"
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: ref={scrollTargetRef}
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: />
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Accept Terms and Conditions
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: </label>
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: // no changes to imports and definitions outside of Index
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: export default function Index() {
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: // no changes to useState to maintain select state
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: const TermsAndConditions = ['Short', 'Long',
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '''LongScroll''].includes('
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: selectedTermsAndConditions,
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '? dynamic(() =>'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: import(
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: '`../components/TermsAndConditions$'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '{selectedTermsAndConditions}.jsx`'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: ).then(({ TermsAndConditions }) =>
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: TermsAndConditions),
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: ': NoRender;'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to content outside of select */}'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to label */}'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: <select
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: id="termsAndConditionsType"
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: onChange={(e) => setSelectedTermsAndConditions
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: (e.target.value)}
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to existing options */}'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: <option value="LongScroll">LongScroll</option>
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: </select>
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: <hr />
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: <TermsAndConditions />
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: import React from 'react';
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: export default function TermsForm() {
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: <form>
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: <label htmlFor="name">Type your name as signature
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: </label>
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: <input id="name" type="text" />
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: </form>
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: import React from 'react';
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: import dynamic from 'next/dynamic';
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: import { InView } from 'react-intersection-observer';
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: const TermsForm = dynamic(() => import('./TermsForm.jsx'));
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: export function TermsAndConditions() {
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: <h3>Terms and Conditions Long Scroll Accept Form</h3>
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: '{/* 10 paragraphs of content */}'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: <hr />
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: <InView>
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: '{({ inView, ref }) => <div ref={ref}>{inView &&'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: <TermsForm />}</div>}
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: </InView>
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: <label htmlFor="accept">
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: <input id="accept" name="acceptTerms"
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: type="checkbox" />
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: Accept Terms and Conditions
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: </label>
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: // no changes to imports and definitions outside of Index
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: export default function Index() {
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: // no changes to useState to maintain select state
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: const TermsAndConditions = [
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '''Short'','
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: '''Long'','
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: '''LongScroll'','
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: '''LongScrollAcceptForm'','
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: '].includes(selectedTermsAndConditions)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: '? dynamic(() =>'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: import(
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: '`../components/TermsAndConditions$'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: '{selectedTermsAndConditions}.jsx`'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: ).then(({ TermsAndConditions }) =>
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: TermsAndConditions),
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: )
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: ': NoRender;'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: return (
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: <>
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to content outside of select */}'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
- en: <div>
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to label */}'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: <select
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: id="termsAndConditionsType"
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: onChange={(e) => setSelectedTermsAndConditions
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: (e.target.value)}
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: '{/* no change to existing options */}'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: <option value="LongScrollAcceptForm">
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: LongScrollAcceptForm</option>
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: </select>
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: <hr />
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: <TermsAndConditions />
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: </>
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
