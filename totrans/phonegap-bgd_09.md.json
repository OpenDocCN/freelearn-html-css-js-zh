["```js\n$ java -jar compiler.jar --compilation_level ADVANCED_OPTIMIZATIONS --js hello.js\n\n```", "```js\n    $ echo ‘<!DOCTYPE html><html><head></head><body></body></html>' > index.html\n    $ echo > index.js\n    $ echo > test.js\n\n    ```", "```js\n    var test  =  (function(){\n\n        var main = function(){\n\n            alert(‘executing main');\n            internal();\n        };\n\n        var internal = function(){\n\n            alert(‘executing internal');\n\n        };\n\n        return {\n\n            init: main\n\n    }\n\n    }());\n    ```", "```js\n    var myTest = test.init();\n    ```", "```js\n    $ java -jar closure-compiler/compiler.jar --compilation_level ADVANCED_OPTIMIZATIONS --js samples/test.js samples/index.js --js_output_file samples/app.js\n\n    ```", "```js\n    alert(“executing main”);alert(“executing internal”);\n    ```", "```js\n$ sudo npm install uglify-js -g\n\n```", "```js\n    C:\\ copy /a *.js index.js\n\n    $ cat test.js index.js\n\n    $ uglifyjs --inline-script -o mytest.min.js\n\n    ```", "```js\n    var test=function(){var main=function(){alert(“executing manin”);internal()};var internal=function(){alert(“executing internal”)};return{init:main}}();var test=test.init();\n    ```", "```js\n    $ sudo npm install requirejs -g\n\n    ```", "```js\n    ({\n        baseUrl: ‘js/',\n        paths: {\n            mustache: ‘libs/mustache',\n            alice: ‘libs/alice.min',\n            text: ‘libs/require/plugins/text'\n        },\n        name: ‘main',\n        out: ‘js/main-built.js'\n    })\n    ```", "```js\n    $ r.js -o build.js\n\n    ```", "```js\n    <script data-main=”js/main-built” src=”js/libs/require/require.js”></script>\n    ```", "```js\n$ java -classpath ~/rhino1_7R4/js.jar:~/compilers/closure-compiler/compiler.jar org.mozilla.javascript.tools.shell.Main r.js build.js\n\n```", "```js\n$ sudo npm install pistachio -g\n\n```", "```js\n<script type=”text/x-mustache” id=”tid...”>\n    /* mustache template */\n</script>\n```", "```js\n    $ pistachio --out=splash-tpl.js splash-tpl.html\n\n    ```", "```js\n    ({\n        name: ‘splash-tpl',\n        out: ‘splash-built.js'\n    })\n    ```", "```js\n    $ r.js -o template-build.js\n\n    ```", "```js\n<div id=”DIV1”>HERE IS ONE DIV</div>\n<img id=”IMG1” src=”/myimg.gif”>\n<script src=”/alice/alice.core.js”></script>\n<script src=”/alice/alice.plugins.cheshire.js”></script>\n\n<script>\nalicejs.wobble({\n    elems: [“DIV1”, “IMG1”], \n    rotate: 5, \n    perspectiveOrigin: “center”, \n    duration: “200ms”, \n    timing: “linear”, \n    delay: “0ms”, \n    iteration: “infinite”, \n    direction: “alternate”, \n    playstate: “running”\n});\n</script>\n```"]