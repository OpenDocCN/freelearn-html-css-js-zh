["```js\n{\n  \"name\": \"nw-demo\",\n  \"main\": \"index.html\"\n}\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    We are using node.js <script>document.write(process.version)</script>.\n  </body>\n</html>\n```", "```js\n{\n  \"name\": \"FileBrowser\",\n  \"main\": \"index.html\",\n  \"window\": {\n    \"toolbar\": true,\n    \"width\": 1024,\n    \"height\": 800\n  }\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>FileBrowser</title>\n        <link rel=\"stylesheet\" href=\"css/styles.css\">\n        <link rel=\"stylesheet\" href=\"css/font-awesome-4.0.3/css/font-awesome.min.css\">\n        <script src=\"img/scripts.js\"></script>\n    </head>\n    <body>\n      <section class=\"tree-area\">\n        <div class=\"current-location\"></div>\n        <div class=\"tree\"></div>\n      </section>\n        <section class=\"file-info\"></section>\n    </body>\n</html>\n```", "```js\nvar fs = require('fs');\nvar path = require('path');\nvar root = path.normalize(process.cwd());\n```", "```js\nvar Tree = function() {\n\n  var api = {},\n      el,\n      currentLocationArea,\n      treeArea,\n      fileArea\n\n  api.cwd = root;\n  api.csf = null;\n\n  api.init = function(selector) {\n    el = document.querySelector(selector);\n    currentLocationArea = el.querySelector('.current-location');\n    treeArea = el.querySelector('.tree');\n    fileArea = document.querySelector('.file-info');\n    return api;\n  }\n\n  return api;\n}\n```", "```js\nvar FileBrowser;\nwindow.onload = function() {\n  FileBrowser = Tree().init('.tree-area');\n}\n```", "```js\nvar updateCurrentLocation = function() {\n  currentLocationArea.innerHTML = api.cwd;\n}\n```", "```js\nvar render = function() {\n  updateCurrentLocation();\n}\napi.init = function(selector) {\n  ...\n  render();\n  return api;\n}\n```", "```js\nvar html = '';\nvar maxLevels = 3;\n```", "```js\nvar addItem = function(itemPath, fullPath, isFile, indent) {\n  itemPath = path.normalize(itemPath).replace(root, '');\n  var calculateIndent = function() {\n    var tab = '&nbsp;&nbsp;&nbsp;&nbsp;', str = '';\n    for(var i=0; i<indent; i++) {\n      str += tab;\n    }\n    return str;\n  }\n  if(isFile) {\n    html += '<a href=\"#\" class=\"file\" data-path=\"' + fullPath + '\">';\n    html += calculateIndent(indent) + '<i class=\"fa fa-file-o\"></i> ' + itemPath + '</a>';\n  } else {\n    html += '<a href=\"#\" class=\"dir\" data-path=\"' + fullPath + '\">';\n    html += calculateIndent(indent) + '<i class=\"fa fa-folder-o\"></i> ' + itemPath + '</a>';\n  }\n}\n```", "```js\nvar walk = function(dir, level, done) {\n  if(level === maxLevels) {\n    done(); \n    return;\n  }\n    fs.readdir(dir, function(err, list) {\n      if (err) return done(err);\n      var i = 0;\n      (function next() {\n          var file = list[i++];\n          if(!file) return done();\n        var filePath = dir + '/' + file;\n        fs.stat(filePath, function(err, stat) {\n            if (stat && stat.isDirectory()) {\n              addItem(file, filePath, false, level);\n                walk(filePath, level + 1, function() {                      \n                  next();\n                });\n            } else {\n              if(level === 0) {\n                  addItem(file, filePath, true, level);\n                }\n                next();\n            }\n        });\n      })();\n    });\n};\n```", "```js\nvar updateFiles = function() {\n  html = '<a href=\"#\" class=\"dir\" data-path=\"' + path.normalize(api.cwd + '/../') + '\"><i class=\"fa fa-level-up\"></i> ..</a>';\n  walk(api.cwd, 0, function() {\n    treeArea.innerHTML = html;\n  });\n}\n```", "```js\nvar render = function() {\n  updateCurrentLocation();\n  updateFiles();\n}\n```", "```js\nvar setEvents = function() {\n  treeArea.addEventListener('click', function(e) {\n    e.preventDefault();\n    if(e.target.nodeName !== 'A' && e.target.nodeName !== 'I') return;\n    var link = e.target.nodeName === 'A' ? e.target : e.target.parentNode;\n    var itemPath = path.normalize(link.getAttribute('data-path'));\n    var isFile = link.getAttribute('class') === 'file';\n    if(isFile) {\n      updateFileArea(itemPath);  \n    } else {\n      api.cwd = itemPath;\n      render();\n    }\n  });\n}\n```", "```js\napi.init = function(selector) {\n  ...\n  setEvents();\n  return api;\n}\n```", "```js\nvar updateFileArea = function(itemPath) {\n  var html = '';\n  api.csf = itemPath;\n  if(itemPath) {\n    fs.stat(itemPath, function(err, stat) {\n      html += '<h3>' + path.basename(itemPath) + '</h3>';\n      html += '<p>path: ' + path.dirname(itemPath) + '</p>';\n      html += '<p class=\"small\">size: ' + stat.size + ' bytes</p>';\n      html += '<p class=\"small\">last modified: ' + stat.mtime + '</p>';\n      html += '<p class=\"small\">created: ' + stat.ctime + '</p>';\n      html += '<a href=\"javascript:FileBrowser.copy()\"><i class=\"fa fa-copy\"></i> Copy</a>';\n      html += '<a href=\"javascript:FileBrowser.move()\"><i class=\"fa fa-share\"></i> Move</a>';\n      html += '<a href=\"javascript:FileBrowser.del()\"><i class=\"fa fa-times\"></i> Delete</a>';\n      fileArea.innerHTML = html;  \n    });  \n  } else {\n    fileArea.innerHTML = '';\n  }\n}\n```", "```js\napi.copy = function() {\n  if(!api.csf) return;\n    getFolder(function(dir) {\n      var file = path.basename(api.csf);\n      fs.createReadStream(api.csf).pipe(fs.createWriteStream(dir + '/' + file));\n      api.csf = null;\n      updateFileArea();\n      alert('File: ' + file + ' copied.');\n    });\n}\n```", "```js\nvar getFolder = function(callback) {\n   var event = new MouseEvent('click', {\n      'view': window,\n      'bubbles': true,\n       'cancelable': true\n   });\n    var input = document.createElement('INPUT');\n    input.setAttribute('type', 'file');\n    input.setAttribute('webkitdirectory', 'webkitdirectory');\n    input.addEventListener('change', function (e) {\n      callback(this.value);\n  });\n    input.dispatchEvent(event);\n}\n```", "```js\napi.del = function() {\n  if(!api.csf) return;\n  fs.unlink(api.csf, function() {\n      alert('File: ' + path.basename(api.csf) + ' deleted.');\n      render();\n       api.csf = null;\n    });\n}\n```", "```js\napi.move = function() {\n  if(!api.csf) return;\n    getFolder(function(dir) {\n      var file = path.basename(api.csf);\n      fs.createReadStream(api.csf).pipe(fs.createWriteStream(dir + '/' + file));\n      fs.unlink(api.csf, function() {\n          alert('File: ' + file + ' moved.');\n          render();\n          api.csf = null;\n      });\n    });\n}\n```", "```js\nvar updateFileArea = function(itemPath) {\n  var html = '';\n  api.csf = itemPath;\n  if(itemPath) {\n    fs.stat(itemPath, function(err, stat) {\n      var ext = path.extname(itemPath).toLowerCase();\n      var isImage = ext === '.jpg' || ext === '.jpeg' || ext === '.png';\n      html += '<h3>' + path.basename(itemPath) + '</h3>';\n      html += '<p>path: ' + path.dirname(itemPath) + '</p>';\n      html += '<p class=\"small\">size: ' + stat.size + ' bytes</p>';\n      html += '<p class=\"small\">last modified: ' + stat.mtime + '</p>';\n      html += '<p class=\"small\">created: ' + stat.ctime + '</p>';\n      if(isImage) {\n        html += '<a href=\"javascript:FileBrowser.viewImage()\"><i class=\"fa fa-picture-o\"></i> View image</a>';  \n      }\n      html += '<a href=\"javascript:FileBrowser.copy()\"><i class=\"fa fa-copy\"></i> Copy</a>';\n      html += '<a href=\"javascript:FileBrowser.move()\"><i class=\"fa fa-share\"></i> Move</a>';\n      html += '<a href=\"javascript:FileBrowser.del()\"><i class=\"fa fa-times\"></i> Delete</a>';\n      fileArea.innerHTML = html;  \n    });  \n  } else {\n    fileArea.innerHTML = '';\n  }\n}\n```", "```js\napi.viewImage = function() {\n  window.open('image.html?file=' + api.csf, '_blank', 'width=600,height=400');\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>FileBrowser</title>\n        <link rel=\"stylesheet\" href=\"css/styles.css\">\n        <script src=\"img/imageviewer.js\"></script>\n    </head>\n    <body>\n      <div class=\"image-viewer\">\n            <img src=\"\" />\n            <div class=\"dimension\"></div>\n        </div>\n    </body>\n</html>\n```", "```js\nvar sizeOf = require('image-size'),\n    fs = require('fs'),\n    path = require('path');\n\nvar ImageViewer = function() {\n  var api = {};\n   // ...\n  return api;\n}\n\nvar Viewer;\nwindow.onload = function() {\n  Viewer = ImageViewer();\n}\n```", "```js\n{\n  \"name\": \"FileBrowser\",\n  \"main\": \"index.html\",\n  \"window\": {\n    \"toolbar\": true,\n    \"width\": 690,\n    \"height\": 900\n  },\n  \"dependencies\": {\n    \"image-size\": \"0.2.3\"\n  }\n}\n```", "```js\nvar filePath = decodeURI(location.search.split('file=')[1]);\nif(fs.existsSync(path.normalize(filePath))) {\n  var img = document.querySelector('.image-viewer img');\n  img.setAttribute('src', 'file://' + filePath);\n  var dimensions = sizeOf(filePath);\n  document.querySelector('.dimension').innerHTML = 'Dimension: ' + dimensions.width + 'x' + dimensions.height;\n}\n```", "```js\n{\n  \"name\": \"FileBrowser\",\n  \"main\": \"index.html\",\n  \"window\": {\n    \"toolbar\": false,\n    \"width\": 690,\n    \"height\": 900\n  },\n  \"dependencies\": {\n    \"image-size\": \"0.2.3\"\n  }\n}\n```"]