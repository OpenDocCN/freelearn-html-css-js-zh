["```js\n$ cordova plugin add cordova-plugin-device-motion\n\n```", "```js\ndocument.addEventListener(\"deviceready\", onDeviceReady, false);\n\nfunction onDeviceReady() {\n    if( typeof navigator.accelerometer === \"undefined\"){\n        //plugin is ready now\n    }\n}\n```", "```js\nvar options = {frequency: 300};\nvar currentAcceleration = navigator.accelerator.watchAcceleration \n                          (onSuccess, onFailure, options);\n```", "```js\nfunction onSuccess(acceleration) {\n\n    console.log('Acceleration X: ' + acceleration.x );\n    console.log('Acceleration Y: ' + acceleration.y);\n    console.log('Acceleration Z: ' + acceleration.z );\n\n};\n```", "```js\nfunction onError() {\n\n    console.log('Error accessing the accelerometer');\n\n};\n```", "```js\nnavigator.accelerometer.clearWatch(currentAcceleration);\n```", "```js\nwindow.addEventListener('orientationchange', EVENT_HANDLER);\nwindow.addEventListener('deviceorientation', EVENT_HANDLER);\n```", "```js\n    $ phonegap plugin add cordova-plugin-device-motion\n\n    ```", "```js\n    <div class=\"app\">\n        <h1>Apache Cordova</h1>\n        <div id=\"deviceready\">\n            ......\n        </div>\n        <div id=\"orientation\">\n        </div>\n    </div>\n    ```", "```js\n    #orientation{\n\n        width: 230px;\n        border: 1px solid rgb(10, 1, 1);\n\n    }\n\n    #orientation p{\n        font-size: 36px;\n        font-weight: bold;\n        text-align: center;\n\n    }\n    ```", "```js\n    orientationSupported: function(){\n\n        try {\n            return 'DeviceOrientationEvent' in window &&\n            window['DeviceOrientationEvent'] !== null;\n        } catch (e) {\n            return false;\n        }\n\n    }\n    ```", "```js\n    if(orientationSupported){\n\n        window.addEventListener('orientationchange', orientationChanged);\n        window.addEventListener('deviceorientation', updateOrientation);\n\n    }else{\n\n         alert('Orientation not supported!');\n\n    }\n    ```", "```js\n    orientationChanged: function(){\n\n        var element = document.querySelector('#orientation');\n        element.innerHTML = '<p>' + window.orientation + '</p>';\n\n    }\n    ```", "```js\n    updateOrientation: function(event){\n\n        var alpha = event.alpha,\n        beta = event.beta,\n        gamma = event.gamma;\n\n        var element = document.querySelector('#orientation');\n        var rotation = 'rotateZ(' + alpha + 'deg) rotate(' + beta + 'deg) rotateY(' + gamma + 'deg)';\n    // For brevity the browser prefixes have been removed\n        element.style.transform = rotation;\n\n    }\n    ```", "```js\n<!DOCTYPE html>\n<html>\n    <head>\n        <!--Other section removed for sake of simplicity -->\n        <title>Media Capture Example</title>\n        <style>\n          #orientation{\n            width: 230px;\n            border: 1px solid rgb(10, 1, 1);\n          }\n\n          #orientation p{\n            font-size: 36px;\n            font-weight: bold;\n            text-align: center;\n          }\n        </style>\n    </head>\n    <body>\n      <div class=\"app\">\n        <h1>Apache Cordova</h1>\n        <div id=\"deviceready\"></div>\n        <div id=\"orientation\"></div>\n      </div>\n\n      <script type=\"text/javascript\" src=\"img/cordova.js\"></script>\n      <script type=\"text/javascript\">\n\n        document.addEventListener(\"deviceready\", onDeviceReady, false);\n\n        function onDeviceReady() {\n          if(orientationSupported){\n            window.addEventListener('orientationchange', orientationChanged);\n            window.addEventListener('deviceorientation', updateOrientation);\n          }else{\n            alert('Orientation not supported!');\n          }\n        }\n\n        orientationSupported: function(){\n          try {\n            return 'DeviceOrientationEvent' in window &&\n            window['DeviceOrientationEvent'] !== null;\n          } catch (e) {\n            return false;\n          }\n        }\n        orientationChanged: function(){\n          var element = document.querySelector('#orientation');\n          element.innerHTML = '<p>' + window.orientation + '</p>';\n        }\n\n        updateOrientation: function(event){\n\n          var alpha = event.alpha,\n          var beta = event.beta,\n          var gamma = event.gamma;\n\n          var element = document.querySelector('#orientation');\n          var rotation = 'rotateZ(' + alpha + 'deg) rotate(' + beta + 'deg) rotateY(' + gamma + 'deg)';\n          // For brevity the browser prefixes have been removed\n          element.style.transform = rotation;\n        }\n\n      </script>\n    </body>\n</html>\n```", "```js\nnavigator.compass.getCurrentHeading(onSuccess, onError);\n```", "```js\nfunction onError (error) {\n    switch(true){\n\n        case error.code == CompassError.COMPASS_INTERNAL_ERR:\n        navigator.notification.alert('Compass Error!', null, 'Info', 'OK');\n        break;\n\n        case error.code == CompassError.COMPASS_NOT_SUPPORTED:\n        navigator.notification.alert('Compass Unavailable!', null, 'Info', 'OK');\n        break;\n\n        default:\n        navigator.notification.alert('Generic Error!', null,'Info', 'OK');\n\n    }\n}\n```", "```js\nvar options = {frequency: 300};\nvar currentHeading = navigator.compass.watchHeading(\n                     onSuccess, onError, options);\n```", "```js\nclearWatch(currentHeading);\n```", "```js\n    $ cordova plugin add cordova-plugin-device-orientation\n\n    ```", "```js\n    <section id=\"compass\">\n        <div id=\"compassbg\"></div>\n        <div id=\"north\"></div>\n        <div id=\"arrow\"></div>\n    </section>\n    ```", "```js\n    #compassbg {\n        background-image: url(../img/Compass.png);\n    }\n    #north {\n        background-image: url(../img/arrow_direction.png);\n    }\n\n    #arrow {\n        background-image: url(../img/arrow_beta.png);\n    }\n\n    #compass, #arrow, #north, #compassbg  {\n        background-repeat: no-repeat;\n        background-size: cover;\n        position: fixed;\n        width: 286px;\n        height: 286px;\n\n    }\n    ```", "```js\n    var currentHeading = null;\n    ```", "```js\n    var options = {frequency: 150};\n    currentHeading = navigator.compass.watchHeading (onCompassSuccess,onCompassError, options);\n    ```", "```js\n    function onCompassSuccess(heading){\n      var magneticHeading = heading.magneticHeading;\n      var trueHeading = heading.trueHeading;\n\n      var compass = document.querySelector('#compassbg');\n      var north = document.querySelector('#north');\n\n      var compassRotation = 'rotate(' + magneticHeading + 'deg)';\n      var northRotation = 'rotate(' + trueHeading + 'deg)';\n      var compassSytle = compass.style;\n      var northStyle = north.style;\n\n      compassStyle.transform = compassRotation;\n      northStyle.transform = northRotation;\n    }\n    ```", "```js\n    function onCompassError(error){\n      alert(\"Error with Compass\");\n    }\n    ```", "```js\n<!DOCTYPE html>\n<html>\n    <head>\n        <!--Other section removed for sake of simplicity -->\n        <title>Media Capture Example</title>\n        <style>\n          #compassbg {\n            background-image: url(../img/Compass.png);\n          }\n          #north {\n            background-image: url(../img/arrow_direction.png);\n          }\n\n          #arrow {\n            background-image: url(../img/arrow_beta.png);\n          }\n\n          #compass, #arrow, #north, #compassbg  {\n            background-repeat: no-repeat;\n            background-size: cover;\n            position: fixed;\n            width: 286px;\n            height: 286px;\n          }\n\n        </style>\n\n    </head>\n    <body>\n\n      <section id=\"compass\">\n        <div id=\"compassbg\"></div>\n        <div id=\"north\"></div>\n        <div id=\"arrow\"></div>\n      </section>\n\n      <script type=\"text/javascript\" src=\"img/cordova.js\"></script>\n\n      <script type=\"text/javascript\">\n        var currentHeading = null;\n\n        document.addEventListener(\"deviceready\", onDeviceReady, false);\n\n        function onDeviceReady() {\n          var options = {frequency: 150};\n\n          currentHeading = navigator.compass.watchHeadingonCompassSuccess, onCompassError, options);\n        }\n\n        function onCompassSuccess(heading){\n          var magneticHeading = heading.magneticHeading;\n          var trueHeading = heading.trueHeading;\n\n          var compass = document.querySelector('#compassbg');\n          var north = document.querySelector('#north');\n\n          var compassRotation = 'rotate(' + magneticHeading + 'deg)';\n          var northRotation = 'rotate(' + trueHeading + 'deg)';\n          var compassSytle = compass.style;\n          var northStyle = north.style;\n\n          compassStyle.transform = compassRotation;\n          northStyle.transform = northRotation;\n        }\n\n        function onCompassError(error){\n          alert(\"Error with Compass\");\n        }\n      </script>\n    </body>\n</html>\n```", "```js\nvar options = {maximumAge: 3000, timeout: 5000, \n               enableHighAccuracy: true };\nnavigator.geolocation.watchPosition(onSuccess, onFailure, options);\n```", "```js\nfunction onSuccess(position) {\n\n    console.log('Coordinates: ' + position.coords);\n    console.log('Timestamp: ' + position.timestamp);\n\n}\n```", "```js\nfunction onError(error) {\n    console.log('message: ' + error.message);\n    console.log ('code: ' + error.code);\n\n}\n```", "```js\n    $ cordova create MapSample\n\n    ```", "```js\n    $ cd MapSample\n\n    ```", "```js\n    $ cordova platform add android\n\n    ```", "```js\n    $ cordova plugin add cordova-plugin-geolocation\n\n    ```", "```js\n    <div id='map'></div>\n    ```", "```js\n    <script type=\"text/javascript\" src=\"img/cordova.js\"></script>\n    ```", "```js\n    <script type=\"text/javascript\"\n       src=\"img/strong>&sensor=true\">\n    </script>\n    ```", "```js\n    #map{\n\n        width: 280px;\n        height: 230px;\n        display: block;\n        margin: 5px auto;\n        position: relative;\n\n    }\n    ```", "```js\n    function initMap(lat, long){\n\n        // The code needed to show the map and the\n        // device position will be added here\n\n       }\n    ```", "```js\n    var options = {\n\n        zoom: 8,\n        center: new google.maps.LatLng(lat, long),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n\n    };\n    ```", "```js\n    var map = new google.maps.Map(document.getElementById('map'), options);\n\n    var markerPoint = new google.maps.LatLng(lat, long);\n\n    var marker = new google.maps.Marker({\n\n        position: markerPoint,\n        map: map,\n        title: 'Device\\'s Location'\n\n    });\n    ```", "```js\n    function onSuccess(position){\n\n        var coords = position.coords;\n        initMap(coords.latitude, coords.longitude);\n\n    }\n    ```", "```js\n    function onFailure(error){\n\n        alert(error.message);\n\n    }\n    ```", "```js\n    navigator.geolocation.getCurrentPosition(app.onSuccess, app.onFailure, {timeout: 5000, enableAccuracy: false});\n    ```", "```js\n    $ cordova build\n    $ cordova run android\n\n    ```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n<title>GeoLocation Example</title>\n\n<style>\n  #map{\n    width: 280px;\n    height: 230px;\n    display: block;\n    margin: 5px auto;\n    position: relative;\n  }\n</style>\n\n</head>\n<body>\n\n<div id='map'></div>\n\n<script type=\"text/javascript\" src=\"img/cordova.js\"></script>\n\n<script type=\"text/javascript\" src=\"img/js?key=YOUR_API_KEY&sensor=true\"></script>\n\n<script type=\"text/javascript\">\n  var currentHeading = null;\n\n  document.addEventListener(\"deviceready\", onDeviceReady, false);\n\n  function onDeviceReady() {\n    navigator.geolocation.getCurrentPosition(onSuccess, onFailure, {timeout: 5000, enableAccuracy: false});\n  }\n\n  function onSuccess(position){\n    var coords = position.coords;\n    initMap(coords.latitude, coords.longitude);\n  }\n\n  function initMap(lat, long){\n    var options = {\n      zoom: 8,\n      center: new google.maps.LatLng(lat, long),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n    var map = new google.maps.Map(document.getElementById('map'), options);\n\n    var markerPoint = new google.maps.LatLng(lat, long);\n\n    var marker = new google.maps.Marker({\n      position: markerPoint,\n      map: map,\n      title: 'Device\\'s Location'\n    });\n  }\n\n  function onFailure(error){\n    alert(error.message);\n  }\n\n</script>\n</body>\n</html>\n```", "```js\n<key>ExternalHosts</key>\n<array>\n    <string>*.googleapis.com</string>\n    <string>*.gstatic.com</string>\n</array>\n```"]