- en: Chapter 13. Troubleshooting PostCSS Issues
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For many readers, PostCSS can be a little confusing—after all, it's still a
    relatively new library that is unlike other processors! Throughout the book, we've
    been on a journey of discovery—we'll finish with a look at some tips and tricks
    for best practice, along with some pointers for troubleshooting if we should find
    ourselves stuck.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the course of this chapter, we will take a look at some common issues
    you might experience when creating PostCSS processors. We'll see how easy it is
    to fix them, and discover what to do next if issues are not as easy to solve as
    we might have expected…
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover a number of topics throughout this chapter, which will include
    the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Fixing some common issues
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring some common issues in detail
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting help from others
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's make a start!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Fixing some common issues
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In an ideal world, any processor we build will work flawlessly, irrespective
    of which task runner or method we use to process each PostCSS task. Our aim is
    to end up with one or more successfully compiled files, as shown in this example:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '![Fixing some common issues](img/BO5194_13_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
- en: But as we all know, not everything goes well 100% of the time; if it did, we
    would either be exceptionally lucky, or things would begin to get mundane!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Being a pragmatist, I suspect most people will have some form of issue crop
    up as they get to grips with PostCSS; throughout the course of this chapter we
    will explore some of the more common issues, how to resolve them, and bring together
    some of the tips and tricks we can use to help make our lives a little easier
    when using PostCSS. Let's begin with a look at some of the more common issues
    we might face, in more detail.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Exploring some common issues
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PostCSS as a processing system is easy to set up and use, but occasionally we
    may come across issues during development. The issues will vary, of course, but
    to help you along, we can explore some of the more common issues we may face during
    development.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: For the purposes of this chapter, we will assume that the Gulp task runner has
    been used—you will likely see similar issues with other task runners such as Grunt
    or Broccoli. It's time to explore some of these issues in more detail.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Not compatible with your operating system…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The beauty of PostCSS is that we can install any one of dozens of plugins available—if
    we're using a task runner such as Gulp, then we can easily extend this to cover
    the vast array available for use.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'In most instances, plugins will install without a hitch; you may find that
    you see this appear occasionally:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '![Not compatible with your operating system…](img/BO5194_13_02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
- en: 'The warning message that is of most importance to us is not the `ENOENT` messages,
    but this one:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It should be noted that this is only a warning, and not an error (as such)—it
    is caused by the use of `fsevents`, which is MacOSX only and will not work on
    Windows or Linux environments. In most cases this can be ignored, although it
    would be wise to test your processor to ensure it has not had any detrimental
    impact on your code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This error is not limited to `fsevents`—it can apply to any package, which is
    not supported in the environment you use.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Task '<name of task>' is not in your gulpfile
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We''ve created a Gulp task file with a number of tasks within, and run it to
    compile our style sheet. Instead of getting our processed files, we end up with
    this message:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![Task ''<name of task>'' is not in your gulpfile](img/BO5194_13_03.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: 'This is caused by the Gulp task not being present in the gulp file—in this
    declaration example, we''re calling the `rename` task:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![Task ''<name of task>'' is not in your gulpfile](img/BO5194_13_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: 'But a look through the gulp file shows that there is no `rename` task in sight:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '![Task ''<name of task>'' is not in your gulpfile](img/BO5194_13_05.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
- en: This is a simple fix—just rename the task so that the names match, and retry
    the compilation. Note, though—if more than one task is incorrectly named, then
    the process will fail but will only show the name of the first one that is at
    fault. Make sure that each task name is entered correctly in the file to ensure
    successful compilation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Cannot find module '<name of plugin>'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If any error is likely to catch us out, then it is this one—let me explain:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: As you get to grips with installing PostCSS plugins, you will see many that
    use the naming convention `postcss-<name of plugin>`. It seems a sensible proposition,
    but beware – not every PostCSS plugin uses this naming convention!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'A great example is Rucksack – one would expect to use `postcss-rucksack` (and
    yes, that includes me!), but we will get this error if we do:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![Cannot find module ''<name of plugin>''](img/BO5194_13_06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: It turns out that Rucksack is one of those examples that doesn't use the same
    naming convention that many people would expect it to use. Instead, it uses `rucksack-css`,
    as the name we would expect to use had already been taken.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'This is one of those instances where it pays to read the documentation, if
    only to save a lot of embarrassment later:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![Cannot find module ''<name of plugin>''](img/BO5194_13_07.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: It clearly states what name to use when installing the plugin! Yes, it happens
    to the best of us…
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'ReferenceError: <name of task> is not defined'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let us assume that we have a series of tasks in our gulp file, but for some
    unknown reason, we''re getting this error when we compile our code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![ReferenceError: <name of task> is not defined](img/BO5194_13_08.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: 'What could be causing it? Well, there are at least two possible causes:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: We include the plugin within the task itself, but forget to include a reference
    to it within the declarations at the top of our file
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We do manage to include both the plugin within the task and its associated declaration,
    but somehow manage not to give the same declaration name
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fix for this is to make sure that when we include the declaration at the
    top of the Gulp task file, that the same name is used when calling the task later
    in the file.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Please provide array of postcss processors!
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This next error is one that can catch anyone out, but is easy to fix—as time
    goes by you will develop your own processor; you will likely reach a point where
    you start to move some of the PostCSS processor tasks out from the main PostCSS
    call into their own task.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine that you have a PostCSS task similar to this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Please provide array of postcss processors!](img/BO5194_13_09.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: 'There is a natural temptation to split this task into separate ones; after
    all, I extolled the virtues of keeping a 1:1 relationship between the task name
    (that is, styles), and what it does in the task! If, however, you take things
    a little too far, and think that you don''t need to have a PostCSS processor in
    the task, then you may come unstuck, and land up with an error similar to this
    screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '![Please provide array of postcss processors!](img/BO5194_13_10.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'A quick check in your Gulp task file will likely show something akin to this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '![Please provide array of postcss processors!](img/BO5194_13_11.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
- en: We have a `postcss` task, but without any processors within it! Although it
    is tempting to rework processors to ensure we maintain that 1:1 relationship,
    we must always leave one processor in the `postcss()` task, to ensure it operates
    correctly.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will hear talk of the term processor used in several different ways—they
    can equally apply as a generic term for what is our Gulp task file. It can also
    apply to the processor tasks that should be added to any `postcss()` task.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Entries failing to appear in the package.json file
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This next error is a little trickier to catch, but the fix for it is easy—over
    time, you will likely make changes to your Gulp task file; this of course means
    that new plugins will need to be added from another `package.json` file (if already
    installed), or added afresh, if they haven't already been installed.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: As the Gulp task file is just a plain text file, we can edit it in any text
    editor—my personal favorite is Sublime Text 3 ([http://www.sublimetext.com/3](http://www.sublimetext.com/3)),
    but any will suffice. Notepad isn't a good one, as it will fail to handle the
    line-endings correctly!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'This aside, if we edit our `package.json` file to remove an entry, then add
    a new one, we might come across this warning:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![Entries failing to appear in the package.json file](img/BO5194_13_17.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: 'The cause of this little gem is a really irritating one—it''s amazing how one
    single character can cause all these warnings! The culprit is the extraneous comma
    at the end of a line where there *isn''t* another plugin listed immediately after,
    as shown on line 27 in this screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![Entries failing to appear in the package.json file](img/BO5194_13_12.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: If we remove the comma and retry the installation, we will soon see that the
    error has disappeared.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Output of compiling results is not as expected
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This final error can be deceptive—it's not strictly speaking even an error!
    Imagine we've created a killer processor application using Node and Gulp; it contains
    a number of tasks similar to the ones we created earlier, and have since used
    throughout this book.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'We enter the relevant command and hit *Enter*. PostCSS starts the compilation:
    so far so good. A look in the `dest` folder shows this—where''s our minified file
    and source map?'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![Output of compiling results is not as expected](img/BO5194_13_13.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: But hold on – where's the error? A check of the output from the compilation
    process shows no error, so what gives?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![Output of compiling results is not as expected](img/BO5194_13_14.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: This little oddity is caused by miscalculating the order in which tasks should
    run—although the screenshot clearly says an error, it's not an error in the true
    sense. Let me explain.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'The key to a successful compilation process (and by default, a working processor),
    lies in the need to make sure that each task we run is fired in the right order.
    To generate this error, I removed the constraint on our rename task in the Gulp
    file from the `T45 – converting to use Rucksack` demo, thus:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The task looks perfectly acceptable, but introduces a problem—instead of just
    one starting task, we now have two!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: The net result of this is that the styles task is run first (as it is called
    first in the default task from line 36). It's quickly followed by the rename task
    (no constraint on it), then `sourcemap` and `lint-styles` (following the constraints
    set against each task).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: We end up with just one compiled file in the `dest` folder—the rename and styles
    tasks are both run at the same time; as the latter isn't completed, the former
    can't produce any content!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Let's move on. If all else fails, and you find problems you can't fix, then
    it is time to seek help….here's a quick rundown of the options available to you
    as a beginner to using PostCSS.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Getting help from others
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this stage, you've tried fixing an issue, but failed – you're not quite sure
    where to go next…
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Don't worry, there are plenty of people who have been there, and needed help!
    A good start is the main documentation, which is available at [https://github.com/postcss/postcss/tree/master/docs](https://github.com/postcss/postcss/tree/master/docs).
    If this draws a blank, then Google is a good option; in addition, there are a
    couple of other options that may help.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Logging issues at Stack Overflow
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you spend time researching Google and don''t find anyone who has had this
    problem before, then you can try logging a question on Stack Overflow:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '![Logging issues at Stack Overflow](img/BO5194_13_15.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: The URL is [http://stackoverflow.com/questions/tagged/postcss](http://stackoverflow.com/questions/tagged/postcss)—this
    lists all of the questions tagged with the name `postcss`, and is open to anyone
    to suggest a course of action or hopefully a tip that will get you back in business.
    If you do find yourself logging an issue, please try where possible to give details
    of the system you use (Windows, Mac, or Linux), any screenshots or details of
    the error, and the steps you were taking to arrive at the error.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 网址是 [http://stackoverflow.com/questions/tagged/postcss](http://stackoverflow.com/questions/tagged/postcss)—这列出了所有带有名称
    `postcss` 标签的问题，任何人都可以提出行动方案或希望有帮助的技巧，让你重新开始工作。如果你确实遇到了问题，请尽可能提供你使用的系统详情（Windows、Mac
    或 Linux），任何截图或错误详情，以及你采取的导致错误的步骤。
- en: Finding a bug with PostCSS
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 PostCSS 查找错误
- en: 'Taking things a step further, you can also log a development request, or an
    issue that requires a change to the code—to do this, please browse to the issues
    log on the GitHub site, at [https://github.com/postcss/postcss/issues](https://github.com/postcss/postcss/issues):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步来说，你也可以记录一个开发请求，或者需要更改代码的问题——为此，请浏览到 GitHub 网站上的问题日志，在 [https://github.com/postcss/postcss/issues](https://github.com/postcss/postcss/issues)：
- en: '![Finding a bug with PostCSS](img/BO5194_13_16.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![使用 PostCSS 查找错误](img/BO5194_13_16.jpg)'
- en: 'There are a few things to bear in mind:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有几点需要注意：
- en: Don't be alarmed if you are advised to log the issue on the plugin's website,
    and not in GitHub for PostCSS – many issues are not as a result of a problem in
    PostCSS, but in the plugin itself.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你被建议在插件的网站上而不是在 PostCSS 的 GitHub 上记录问题，请不要感到惊讶——许多问题并不是由于 PostCSS 的问题，而是由于插件本身的问题。
- en: It helps to show a copy of your task runner's task file and `package.json`,
    just in case—some of the issues that people experience are as a result of (known
    or unknown) compatibility issues between plugins, or where a certain order must
    be followed to ensure plugins can be used.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示你的任务运行器的任务文件和 `package.json` 的副本可能会有所帮助——一些人们遇到的问题是由于（已知或未知）插件之间的兼容性问题，或者必须遵循特定顺序以确保插件可以使用。
- en: PostCSS plugin developers frequently develop on the Apple Mac or Linux platforms—it
    means that some errors you may see are as a result of using a platform that doesn't
    support one or more commands in the plugin.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PostCSS 插件开发者通常在 Apple Mac 或 Linux 平台上进行开发——这意味着你可能看到的某些错误是由于使用不支持插件中一个或多个命令的平台造成的。
- en: If you do come across problems when using one or more plugins, try to strip
    back your processor tasks to those that include the plugins that are causing issues.
    Even if this doesn't eliminate the issue, it will help narrow the cause and avoid
    unnecessary checks by others during the troubleshooting process.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用一个或多个插件时遇到问题，尝试将处理器任务简化到包含引起问题的插件的那些。即使这不能消除问题，它也会帮助缩小原因，并在故障排除过程中避免其他人进行不必要的检查。
- en: The license used by PostCSS is the MIT license—it effectively means that you
    can do as you like with the software, as long as the copyright notice remains
    with the library.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PostCSS 使用的许可证是 MIT 许可证——这意味着只要版权声明与库一起保留，你可以随意使用该软件。
- en: It's worth noting that CodePen supports the use of PostCSS—you may find it useful
    to try out code online (and have it compile automatically), rather than running
    your processor manually. CodePen only supports a limited range of plugins, so
    it won't be useful for all occasions—but hopefully some!
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值得注意的是，CodePen 支持使用 PostCSS——你可能发现尝试在线代码（并自动编译）很有用，而不是手动运行处理器。CodePen 只支持有限范围的插件，所以它并不适用于所有场合——但希望对某些场合有用！
- en: Tip
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'For more details, take a look at this blog posting on the CodePen site: [https://blog.codepen.io/2015/07/14/postcss-now-supported-on-codepen/](https://blog.codepen.io/2015/07/14/postcss-now-supported-on-codepen/).'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多详情，请查看 CodePen 网站上的这篇博客文章：[https://blog.codepen.io/2015/07/14/postcss-now-supported-on-codepen/](https://blog.codepen.io/2015/07/14/postcss-now-supported-on-codepen/)。
- en: The downside of open source software (and plugins created for PostCSS) is the
    varying levels of support offered by plugin developers—whilst support for the
    core system is very good, you may find support for individual plugins to not be
    quite so active! Don't rely on plugin developers to respond quickly if you have
    a critical issue—please log it via Stack Overflow first, before raising it on
    the plugin site. The latter should be used if the issue is identified to require
    further development.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源软件（以及为PostCSS创建的插件）的缺点是插件开发者提供的支持水平参差不齐——虽然对核心系统的支持非常好，但你可能会发现对个别插件的支持并不那么活跃！如果你遇到一个关键问题，不要指望插件开发者能迅速响应——请在Stack
    Overflow上先记录下来，然后再在插件网站上提出。如果问题被确认为需要进一步开发，后者应该被使用。
- en: With these in mind, good luck! PostCSS is fast gaining ground—with some big
    name companies using it, such as WordPress and Google, it is sure to become very
    popular. It would be a shame to give up on something if you come across a problem
    with using a plugin!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些，祝你好运！PostCSS正在迅速获得认可——一些知名公司正在使用它，例如WordPress和Google，它肯定将成为非常流行的工具。如果你在使用插件时遇到问题，放弃它将是一件遗憾的事情！
- en: Remember, if one plugin doesn't work, then look around—others may well be available
    that can take their place. It's a dog eat dog world, where those plugins that
    are not supported are likely to fall by the wayside, leaving those where support
    is active and problems are resolved efficiently and promptly.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，如果一个插件不起作用，那么四处看看——可能还有其他插件可以替代。这是一个“适者生存”的世界，那些不受支持的插件很可能会被淘汰，留下那些支持活跃、问题得到高效和及时解决的地方。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: When learning a new topic, it is highly likely that we will have questions—throughout
    the course of this chapter, we've looked at some of the common errors you might
    experience, and listed solutions to help get back on track. We then explored what
    might happen if you have issues that can't easily be resolved with help from other
    developers.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习新主题时，我们很可能会有疑问——在本章的整个过程中，我们查看了一些你可能遇到的常见错误，并列出了解决方案以帮助你重新回到正轨。然后我们探讨了如果你遇到无法轻易通过其他开发者的帮助解决的问题会发生什么。
- en: 'Okay, let''s move on: we''ve covered a lot of ground throughout the book, so
    it''s time to look forward and see what CSS may bring. The great thing about PostCSS
    is that plugins already exist that allow us to use tomorrow''s features today—we''ll
    cover this and more in the next chapter.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们继续前进：在这本书中，我们已经覆盖了很多内容，现在是时候展望未来，看看CSS可能会带来什么。PostCSS的伟大之处在于，已经存在一些插件，允许我们今天使用明天的功能——我们将在下一章中介绍这一点以及更多内容。
