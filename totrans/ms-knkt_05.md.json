["```js\nsystem.defer = function (action) {\n  var deferred = Q.defer();\n  action.call(deferred, deferred);\n  var promise = deferred.promise;\n  deferred.promise = function() {\n    return promise;\n  };\n  return deferred;\n};\n```", "```js\nrequire.config({\n  paths: {\n    'text': '../lib/require/text',\n    'durandal':'../lib/durandal/js',\n    'plugins' : '../lib/durandal/js/plugins',\n    'transitions' : '../lib/durandal/js/transitions',\n    'knockout': '../lib/knockout-3.1.0',\n    'bootstrap': '../lib/bootstrap-3.1.1',\n    'jquery': '../lib/jquery-2.1.1.min'\n  },\n  shim: {\n    'bootstrap': {\n      deps: ['jquery'],\n      exports: 'jQuery'\n    }\n  },\n  waitSeconds: 30\n});\n```", "```js\ndefine(['durandal/system', 'durandal/app'],\nfunction(system, app, extensions) {\n\n  system.debug(true);\n\n  //specify which plugins to install and their configuration\n  app.configurePlugins({\n    //Durandal plugins\n    router:true,\n    dialog: true\n  });\n\n  app.title = 'Mastering Knockout';\n  app.start().then(function () {\n    app.setRoot('shell/shell');\n  });\n});\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Mastering Knockout</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"content/css/bootstrap-3.1.1-darkly.css\" type=\"text/css\" media=\"all\"  title=\"darkly\" />\n    <link rel=\"alternate stylesheet\" href=\"content/css/bootstrap-3.1.1-cosmo.css\" type=\"text/css\" media=\"all\" title=\"cosmo\" />\n    <link rel=\"stylesheet\" href=\"content/css/font-awesome-4.0.3.css\" type=\"text/css\" media=\"all\" />\n\n    <link rel=\"stylesheet\" href=\"lib/durandal/css/durandal.css\" />\n    <link rel=\"stylesheet\" href=\"content/css/app.css\" \n  </head>\n  <body>\n    <!-- Main Application Body -->\n    <div id=\"applicationHost\"></div>\n    <script type=\"text/javascript\" src=\"img/require.js\" data-main=\"app/main\"></script>\n  </body>\n</html>\n```", "```js\ndefine(function (ko, app) {\n  return {\n    title: 'Welcome!'\n  };\n});\n```", "```js\n<html> root element:\n```", "```js\n<div class=\"jumbotron\">\n  <h1 data-bind=\"text: title\"></h1>\n  <p>This HTML was rendered into the DOM with Durandal's composition system. Notice the data-binding on the <code>h1</code> tag with the viewmodel property <code>title</code>.</p> \n</div>\n```", "```js\n<div>\n  <nav class=\"…\" role=\"banner\">\n    //Standard Nav Bar HTML you've seen in every other sample\n  </nav>\n\n  <div class=\"page-host container\">\n    <div data-bind=\"compose: currentModel\"></div>\n  </div>\n</div>\n```", "```js\ndefine(['knockout', 'durandal/app', 'contacts/edit', 'contacts/list'], \nfunction (ko, app, EditVm, ListVm) {\n  var listVm = new ListVm(),\n  editVm = new EditVm();\n  return {\n    title: app.title,\n    currentModel: ko.observable(listVm),\n    setEdit: function() { this.currentModel(editVm); },\n    setList: function() { this.currentModel(listVm); }\n  };\n});\n```", "```js\ndefine(['knockout', 'durandal/app', 'contacts/edit', 'contacts/list'], \nfunction (ko, app, EditVm, ListVm) {\n  return {\n    title: app.title,\n    currentModel: ko.observable(ListVm),\n    setEdit: function() { this.currentModel(EditVm); },\n   setList: function() { this.currentModel(ListVm); }\n  };\n});\n```", "```js\ncurrentModel: ko.observable(''contacts/list''),\nsetEdit: function() { this.currentModel(''contacts/edit''); },\nsetList: function() { this.currentModel('contacts/list'); }\n```", "```js\n<div data-bind=\"compose: 'contacts/list'\"></div>\n```", "```js\n<div class=\"page-host container\">\n    <div data-bind=\"compose: 'shell/sub.html'\"></div>\n</div>\n```", "```js\n<!-- ko compose: model--><!--/ko-->\n```", "```js\ndefine(['durandal/system', 'durandal/app', 'durandal/viewLocator'],\nfunction(system, app, viewLocator) {\n\n  //plugin configuration omitted\n\n  viewLocator.useConvention('viewmodels', 'views');\n\n  app.title = 'Mastering Knockout';\n  app.start().then(function () {\n    app.setRoot('shell/shell');\n  });\n});\n```", "```js\n    define(['plugins/router', 'knockout', 'durandal/app'], \n    function (router, ko, app) {\n      return {\n        title: app.title,\n        router: router,\n        activate: function() {\n\n          router.map([\n            { route: '', moduleId: 'contacts/list', title: 'Contacts', nav: true },\n            { route: 'contacts/new', moduleId: 'contacts/edit', title: 'New Contact', nav: true },\n            { route: 'contacts/:id', moduleId: 'contacts/edit', title: 'Contact Details', nav: false }\n          ])\n          .buildNavigationModel()\n          .mapUnknownRoutes('shell/error', 'not-found');\n\n          return router.activate();\n        }\n      };\n    });\n    ```", "```js\n<!-- ko router: { model: router.activeItem }--> <!-- /ko -->\n```", "```js\n<!-- ko router: { }--> <!-- /ko -->\n```", "```js\n<ul class=\"nav navbar-nav\" data-bind=\"foreach: router.navigationModel\">\n  <li data-bind=\"css: { active: isActive }\">\n    <a class=\"\" data-bind=\"attr: { href: hash }, text: title\"></a>\n  </li>\n</ul>\n```", "```js\n<i class=\"fa fa-spinner fa-3x fa-spin\" data-bind=\"visible: router.isNavigating\"></i>\n```", "```js\n//Index Route\napp.get('/*', function(req, res){\n  res.sendfile(clientDir + '/index.html');\n});\n```", "```js\n<link rel=\"stylesheet\" href=\"content/css/app.css\" />\n```", "```js\n<link rel=\"stylesheet\" href=\"/content/css/app.css\" />\n```", "```js\ndefine(['durandal/app', 'knockout', 'services/mock', 'plugins/router'],\nfunction(app, ko, dataService, router) {\n  return function ContactListVM() {\n\n    //…\n    self.newEntry = function() {\n      router.navigate('contacts/new');\n    };\n    self.editContact = function(contact) {\n      router.navigate('contacts/' + contact.id());\n    };\n  };\n});\n```", "```js\nself.deleteContact = function(contact) {\n  app.showMessage('Are you sure you want to delete ' + contact.displayName() + '?', 'Delete Contact?', ['No', 'Yes'])\n    .then(function(response) {\n      if (response === 'Yes') {\n        dataService.removeContact(contact.id(), function() {\n          self.contacts.remove(contact);\n        }); \n      }\n    });\n};\n```", "```js\ndefine(['durandal/system', 'knockout', 'plugins/router', 'services/mock', 'contacts/contact', 'plugins/dialog'], \nfunction(system, ko, router, dataService, Contact, dialog) {\n  return function EditContactVm(init) {\n    var self = this;\n\n    self.contact = ko.observable(new Contact());\n\n    self.activate = function(id) {\n      //Id is only present when editing\n      if (id)\n        dataService.getContact(id, self.contact);\n    };\n\n    self.saveEntry = function() {\n      var action = self.contact().id() === 0 \n        ? dataService.createContact \n        : dataService.updateContact;\n\n      action(self.contact(), function() {\n        self.close(self.contact());\n      });\n    };\n\n    self.cancel = function() {\n      self.close(null);\n    };\n\n    self.close = function(result) {\n      if (dialog.getDialog(self))\n        dialog.close(self, result);\n      else\n        router.navigate('');\n    };\n  };\n});\n```", "```js\nself.newEntry = function() {\n  app.showDialog(new ContactVM())\n  .then(function(newContact) {\n    if (newContact) {\n      self.contacts.push(newContact);\n    }\n  });\n};\n```", "```js\n.edit-container {\n  padding: 20px;\n  min-width: 600px;\n  background-color: #222222;\n}\n```", "```js\nself.show = function() {\n  return dialog.show(self);\n};\n```", "```js\nself.newEntry = function() {\n  new ContactVM().show()\n  .then(function(newContact) {\n    if (newContact) {\n      self.contacts.push(newContact);\n    }\n  });\n};\n```", "```js\nself.activate = function() {\n  dataService.getContacts(function(contacts) {\n    self.contacts(contacts);\n  });\n};\n```", "```js\nself.activate = function() {\n  return system.defer(function(defer) {\n    dataService.getContacts(function(contacts) {\n      self.contacts(contacts);\n      defer.resolve();\n    });\n  }).promise();\n};\n```", "```js\nself.activate = function() {\n  return dataService.getContacts()\n  .then(function(contacts) {\n    self.contacts(contacts); \n  });\n};\n```", "```js\nself.activate = function() {\n  return dataService.getContacts()\n  .then(self.contacts);\n};\n```", "```js\ngetContacts: function() {\n  return system.defer(function(defer) {\n    //Return our POJO contacts as real contact objects\n    var typedContacts = [];\n    for (var c in contacts) {\n      if (contacts.hasOwnProperty(c)) {\n        typedContacts.push(new Contact(contacts[c]))\n      }\n    }\n    setTimeout(function() {\n      defer.resolve(typedContacts);\n    }, 1000);\n  }).promise();\n}\n```", "```js\nself.canDeactivate = function() {\n  if (!self.contact().state.isDirty())\n  return true;\n  return app.showMessage('You have unsaved changes. Are you sure you want to leave?', 'Cancel Edit?', ['No', 'Yes'])\n  .then(function(response) {\n    return response === 'Yes';\n  });\n};\n```", "```js\naffirmations: ['yes', 'ok', 'true'],\ninterpretResponse: function(value) {\n  if(system.isObject(value)) {\n    value = value.can || false;\n  }\n\n  if(system.isString(value)) {\n    return ko.utils.arrayIndexOf(this.affirmations, value.toLowerCase()) !== -1;\n  }\n\n  return value;\n}\n```", "```js\nself.canDeactivate = function() {\n  if (!self.contact().state.isDirty())\n    return true;\n  return app.showMessage('You have unsaved changes. Are you sure you want to leave?', 'Cancel Edit?', ['No', 'Yes']);\n};\n```", "```js\n<ul class=\"list-unstyled\" data-bind=\"foreach: contacts\">\n  <li>\n    <h3>\n    <span data-bind=\"text: displayName\"></span> <small data-bind=\"text: phoneNumber\"></small>\n    <button class=\"btn btn-sm btn-default\" data-bind=\"click: $parent.edit\">Edit</button>\n    <button class=\"btn btn-sm btn-danger\" data-bind=\"click: $parent.delete\">Delete</button>\n  </h3>\n  </li>\n</ul>\n```", "```js\ndefine(['durandal/app', 'knockout'], function(app, ko) {\n  return function ContactListWidget() {\n    var self = this;\n\n    self.activate = function(options) {\n      self.contacts = options.data;\n      self.edit = options.edit;\n      self.delete = options.delete;\n    };\n  };\n});\n```", "```js\napp.configurePlugins({\n  //Durandal plugins\n  router:true,\n  dialog: true,\n  widget: true\n});\n```", "```js\n<div data-bind=\"widget: { kind: 'contactList', \n   data: displayContacts, \n  edit: editContact, \n  delete: deleteContact }\">\n</div>\n```", "```js\n<div data-bind=\"contactList: { data: displayContacts, \n  edit: editContact, \n  delete: deleteContact }\">\n</div>\n```", "```js\napp.configurePlugins({\n  //Durandal plugins\n  router:true,\n  dialog: true,\n  widget: {\n    kinds: ['contactList']\n  }\n});\n```", "```js\n<small data-bind=\"text: phoneNumber\" data-part=\"phone\"></small>\n```", "```js\n  <div data-bind=\"contactList: { data: displayContacts, \n    edit: editContact, \n    delete: deleteContact }\">\n    <span data-part=\"phone\" data-bind=\"text: phoneNumber\"></span>\n  </div>\n```", "```js\n<div data-bind=\"contactList: { data: displayContacts, delete: deleteContact }\">\n\n  <small data-part=\"phone\"><em data-bind=\"text: phoneNumber\"></em></small>\n  <button data-part=\"edit-btn\" data-bind=\"click: $root.editContact\" class=\"btn btn-sm btn-default\">Edit</button>\n</div>\n```"]