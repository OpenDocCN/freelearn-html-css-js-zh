- en: Chapter 4. Using Bootstrap's Typography, Buttons, and Images in a Rails Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章：在Rails应用程序中使用Bootstrap的排版、按钮和图片
- en: Styling a website's text, images, and links is a very important part of any
    web design. In the preceding chapter, we saw how to define a proper layout of
    a website using Bootstrap's grid system. In this chapter, we are going to focus
    more on styling the website's content like text, links, and images.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 设置网站的文本、图像和链接是任何网页设计的重要组成部分。在前一章中，我们看到了如何使用Bootstrap的网格系统定义网站的适当布局。在本章中，我们将更多地关注设置网站的内容样式，如文本、链接和图像。
- en: Bootstrap comes with many default styles for various HTML elements. For example,
    it comes with default styles for anchor tags, heading tags, ordered and unordered
    lists, and many more. These styles are applied using particular classes defined
    by Bootstrap.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap为各种HTML元素提供了许多默认样式。例如，它为锚点标签、标题标签、有序和无序列表等提供了默认样式。这些样式是通过Bootstrap定义的特定类来应用的。
- en: Bootstrap focuses on rapid web development. So, when developers with little
    knowledge of web designing start using Bootstrap, it doesn't let them down. These
    smaller default styles of Bootstrap will help you get rid of browser default styles
    of many HTML elements.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap专注于快速网页开发。因此，当对网页设计知之甚少的开发者开始使用Bootstrap时，它不会让他们失望。Bootstrap的这些较小的默认样式将帮助您摆脱许多HTML元素的浏览器默认样式。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Styling typography
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置样式
- en: Creating Bootstrap buttons
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Bootstrap按钮
- en: Styling images in Bootstrap
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Bootstrap中设置图像样式
- en: Setting up
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: 'In this chapter, we are going to use the same static website setup, `Responsive_website_static`,
    that was created in [Chapter 3](ch03.html "Chapter 3. Powering a Rails App with
    Bootstrap''s Grid System"), *Powering a Rails App with Bootstrap''s Grid System*.
    Copy the folder `Responsive_website_static` and rename it as `Bootstrap_default_styles`.
    Open the `index.html` file and remove everything from the `<body>` tag, except
    Bootstrap''s JavaScript. Change the title of the page to `Bootstrap default styles`.
    Your `index.html` file should now have the following content:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用与[第3章](ch03.html "第3章：使用Bootstrap的网格系统为Rails应用程序提供动力")中创建的相同静态网站设置，`Responsive_website_static`，*使用Bootstrap的网格系统为Rails应用程序提供动力*。复制文件夹`Responsive_website_static`并将其重命名为`Bootstrap_default_styles`。打开`index.html`文件，从`<body>`标签中删除所有内容，除了Bootstrap的JavaScript。将页面的标题更改为`Bootstrap默认样式`。您的`index.html`文件现在应具有以下内容：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you learned in [Chapter 3](ch03.html "Chapter 3. Powering a Rails App with
    Bootstrap''s Grid System"), *Powering a Rails App with Bootstrap''s Grid System*,
    you should place a `div` container inside the `body` tag to wrap all of the website''s
    content and place them properly at the center of the screen. So, let''s create
    a container using the following markup:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在[第3章](ch03.html "第3章：使用Bootstrap的网格系统为Rails应用程序提供动力")，*使用Bootstrap的网格系统为Rails应用程序提供动力*中学习的那样，您应该在`body`标签内放置一个`div`容器来包裹所有网站内容并将它们正确地放置在屏幕中央。因此，让我们使用以下标记创建一个容器：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Styling typography
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置样式
- en: When we talk about typography, we mean heading tags, paragraph tags, inline
    text elements, proper alignment, text transformations, and any text on your webpage.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论排版时，我们指的是标题标签、段落标签、内联文本元素、适当的对齐、文本转换以及网页上的任何文本。
- en: 'Bootstrap comes with default styles for all the heading tags starting from
    `<h1>` to `<h6>`. If you want to create a heading tag in your HTML page, you can
    directly put the heading tag without any classes. Let''s have a look at an example.
    Insert the following HTML elements inside the static website that was created
    previously:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap为从`<h1>`到`<h6>`的所有标题标签提供了默认样式。如果您想在HTML页面中创建一个标题标签，可以直接放置标题标签而不需要任何类。让我们看看一个例子。将以下HTML元素插入之前创建的静态网站中：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output of the preceding code will look like this in the browser:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码在浏览器中的输出将如下所示：
- en: '![Styling typography](img/7269OS_04_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![设置样式](img/7269OS_04_01.jpg)'
- en: 'There might be scenarios when you don''t use a heading tag, but are able to
    achieve the same default style with some other HTML elements. Bootstrap will help
    you to do this. You can use the class `".h1"` through `".h6"` to get the desired
    typography style. Let''s remove all the heading tags in the preceding example
    and use paragraph tags instead. This time, we will use Bootstrap''s heading classes
    to get the same style:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可能存在一些情况，你不需要使用标题标签，但可以使用其他HTML元素达到相同的默认样式。Bootstrap将帮助你做到这一点。你可以使用类`".h1"`到`".h6"`来获取所需的排版样式。让我们删除前面示例中的所有标题标签，并使用段落标签代替。这次，我们将使用Bootstrap的标题类来获取相同的样式：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding markup will look like this in the browser:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中，前面的标记将看起来像这样：
- en: '![Styling typography](img/7269OS_04_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![排版样式](img/7269OS_04_02.jpg)'
- en: 'It''s time to add a subtitle to the heading tag. Subtitles are very useful
    when you want to display a short tag line for your website. In Bootstrap, we will
    use the HTML tag `"<small>`" to add a subtitle within any heading tag of your
    choice. A small tag is an inline tag used for the same pupose in raw HTML as well.
    Take the following code as an example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候给标题标签添加副标题了。副标题在你想为你的网站显示简短标语时非常有用。在Bootstrap中，我们将使用HTML标签`"<small>`"来添加任何所选标题标签内的副标题。小标签是一个内联标签，在原始HTML中用于相同的目的。以下代码为例：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output will look as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Styling typography](img/7269OS_04_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![排版样式](img/7269OS_04_03.jpg)'
- en: You can see how the small tag appears relatively smaller, as compared to the
    heading tag content, even though they are present in the same tag.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到小标签相对于标题标签内容显得更小，尽管它们位于相同的标签中。
- en: 'Let''s talk about styling the paragraph tags. Bootstrap applies a default size
    of 14px to all the paragraph tags. You don''t have to use any class for applying
    Bootstrap''s style to a paragraph tag. Let''s check out an example. I have inserted
    two dummy paragraphs in the preceding markup. Let''s apply the code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论如何对段落标签进行样式设计。Bootstrap将默认的14px大小应用到所有段落标签。你不需要使用任何类来将Bootstrap的样式应用到段落标签。让我们看看一个示例。我在前面的标记中插入了两段虚拟段落。让我们应用以下代码：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output will look like this in the browser:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中的输出将如下所示：
- en: '![Styling typography](img/7269OS_04_04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![排版样式](img/7269OS_04_04.jpg)'
- en: 'You can even tweak a paragraph tag to stand out among the rest of the paragraph
    tags in the webpage using the `.lead` class. Let''s add this class to the first
    paragraph in the preceding markup and checkout the difference that it creates:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以通过使用`.lead`类来调整段落标签，使其在网页中其他段落标签中脱颖而出。让我们将这个类添加到前面标记中的第一个段落，并查看它产生的差异：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output will look as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Styling typography](img/7269OS_04_05.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![排版样式](img/7269OS_04_05.jpg)'
- en: 'Bootstrap even allows you to highlight text in a paragraph using the `<mark>`
    tag. I have added the `<mark>` tag in the paragraph, which gets highlighted in
    the preceding markup, and got the following result:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap甚至允许你使用`<mark>`标签在段落中突出显示文本。我在段落中添加了`<mark>`标签，它在前面的标记中被突出显示，并得到了以下结果：
- en: '![Styling typography](img/7269OS_04_06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![排版样式](img/7269OS_04_06.jpg)'
- en: 'Some other typography features are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其他排版功能如下：
- en: You can strikethrough any text by wrapping HTML `<del>` or `<s>` tags around
    the text.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过在HTML `<del>`或`<s>`标签周围包裹文本来添加删除线。
- en: Underline text by wrapping it with HTML `<ins>` and `<u>` tags
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用HTML `<ins>`和`<u>`标签包裹文本以加下划线
- en: You can also use the HTML `<small>` tags inside the paragraph tags to display
    smaller text relative to other text around the paragraph.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还可以在段落标签内使用HTML `<small>`标签来显示相对于段落周围文本的较小文本。
- en: You can apply the bold feature to text using HTML `<b>` and `<strong>` tags
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用HTML `<b>`和`<strong>`标签将文本加粗
- en: Italicize text using HTML `<em>` and `<i>` tags
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用HTML `<em>`和`<i>`标签使文本斜体
- en: Aligning text
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对齐文本
- en: 'Bootstrap provides helper classes for alignment of textual content. These classes
    are:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap提供了用于文本内容对齐的辅助类。这些类包括：
- en: '`text-left`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-left`'
- en: '`text-right`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-right`'
- en: '`text-center`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-center`'
- en: '`text-justify`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-justify`'
- en: '`text-nowrap`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-nowrap`'
- en: 'Let''s apply `text-right` to the preceding paragraph text and checkout how
    it realigns the text:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将`text-right`应用到前面的段落文本中，并查看它如何重新对齐文本：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output will look as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Aligning text](img/7269OS_04_07.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![对齐文本](img/7269OS_04_07.jpg)'
- en: You can see that the text is now aligned to the right with respect to the position
    of the container.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到文本现在相对于容器的位置已对齐到右侧。
- en: 'The `text-nowrap` class removes the automatic line break and lets the paragraph
    appear in a single line, as shown in following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-nowrap` 类移除了自动换行，并使段落显示为单行，如下面的截图所示：'
- en: '![Aligning text](img/7269OS_04_08.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![对齐文本](img/7269OS_04_08.jpg)'
- en: Try playing with other alignment classes and check out the changes in the browser.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试使用其他对齐类，并在浏览器中查看变化。
- en: Text transformation
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本转换
- en: 'Transforming a text to uppercase, lowercase, or capitalizing it are sometimes
    very necessary actions in some web applications. Bootstrap has got classes to
    perform these transformations:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本转换为大写、小写或首字母大写在某些网络应用中有时是非常必要的操作。Bootstrap 提供了执行这些转换的类：
- en: '`text-lowercase`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-lowercase`'
- en: '`text-uppercase`'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-uppercase`'
- en: '`text-capitalize`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-capitalize`'
- en: Text transformation through CSS or using Bootstrap's classes is definitely not
    recommended while designing websites. Crawlers and search engines parse the text
    while it is actually written in a webpage. CSS simply helps in changing the way
    it is displayed in the browser.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 CSS 或使用 Bootstrap 的类进行文本转换在设计网站时绝对不推荐。爬虫和搜索引擎在文本实际上写入网页时解析文本。CSS 只是在浏览器中改变其显示方式。
- en: Blockquotes
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用块
- en: Blockquotes are very important Bootstrap components. They are used to quote
    some important information or popular sayings. Let's check out how to create a
    blockquote in Bootstrap.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 引用块是 Bootstrap 非常重要的组件。它们用于引用一些重要信息或流行格言。让我们看看如何在 Bootstrap 中创建引用块。
- en: Place the following markup inside the container of our static website.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下标记放置在我们静态网站容器的内部。
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It will produce the following output in the browser:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它将在浏览器中产生以下输出：
- en: '![Blockquotes](img/7269OS_04_09.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![引用块](img/7269OS_04_09.jpg)'
- en: 'You can see that a vertical bar is placed to the left of `blockquote`. Blockquote
    comes with many customization options in Bootstrap. For example, placing a `<footer>`
    element inside the `blockquote` code will be as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到在 `blockquote` 的左侧放置了一个垂直条。Bootstrap 中的引用块提供了许多自定义选项。例如，将 `<footer>` 元素放置在
    `blockquote` 代码内部将如下所示：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output for the preceding code will look as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的输出将如下所示：
- en: '![Blockquotes](img/7269OS_04_10.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![引用块](img/7269OS_04_10.jpg)'
- en: 'You can also change the alignment of blockquote by applying the class `blockquote-reverse`.
    It will make the blockquote look as shown in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过应用类 `blockquote-reverse` 来改变引用块的排列。它会使引用块看起来如下所示：
- en: '![Blockquotes](img/7269OS_04_11.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![引用块](img/7269OS_04_11.jpg)'
- en: Styling listing elements
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 样式化列表元素
- en: 'List elements, the `<ol>` ordered element, and the `<ul>` unordered element,
    play a very important role in the web. They are used to create a list of items
    such as creating menus, listing features, and so on. Bootstrap comes with some
    default styles for these elements. It resets the browser''s default style and
    adds a minimal style to them. Let''s style the listing elements:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 列表元素，即 `<ol>` 有序列表元素和 `<ul>` 无序列表元素，在网页中扮演着非常重要的角色。它们用于创建项目列表，例如创建菜单、列出特性等。Bootstrap
    为这些元素提供了一些默认样式。它重置了浏览器的默认样式，并添加了最小样式。让我们样式化列表元素：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output will look as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Styling listing elements](img/7269OS_04_12.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![样式化列表元素](img/7269OS_04_12.jpg)'
- en: 'Now, let us look at ordered lists:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看有序列表：
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output for the preceding code will look as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的输出将如下所示：
- en: '![Styling listing elements](img/7269OS_04_13.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![样式化列表元素](img/7269OS_04_13.jpg)'
- en: 'Let''s add some helper classes by Bootstrap to modify the look of, lists. Adding
    the class `list-inline` to any of the preceding lists will make the list items
    appear inline, that is, side by side, as shown in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过 Bootstrap 添加一些辅助类来修改列表的外观。将类 `list-inline` 添加到前面的任何列表中，将使列表项显示为内联，即并排，如下面的截图所示：
- en: '![Styling listing elements](img/7269OS_04_14.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![样式化列表元素](img/7269OS_04_14.jpg)'
- en: 'Adding the class `list-unstyled` to any of the list elements will remove the
    bullets or numbers from the list items. These are shown in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将类 `list-unstyled` 添加到任何列表元素中，将移除列表项中的项目符号或数字。这些在下面的截图中显示：
- en: '![Styling listing elements](img/7269OS_04_15.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![样式化列表元素](img/7269OS_04_15.jpg)'
- en: 'Let''s experiment a bit and nest the unordered list to check out whether Bootstrap
    still supports us:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一些实验，并嵌套无序列表以检查 Bootstrap 是否仍然支持我们：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output for the preceding code will look as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的输出将如下所示：
- en: '![Styling listing elements](img/7269OS_04_16.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![样式化列表元素](img/7269OS_04_16.jpg)'
- en: 'Oh yes! Bootstrap does support the nested list. Try experimenting with another
    list and a combination of helper classes. To change the style of bullets, you
    need to write your own style. Take the following code as an example:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 噢，是的！Bootstrap支持嵌套列表。尝试用另一个列表和一组辅助类进行实验。要更改项目符号的样式，您需要编写自己的样式。以下代码作为示例：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Creating and styling buttons
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和样式化按钮
- en: 'In the preceding chapter, we saw a gist of how buttons are created in Bootstrap.
    Any anchor tag `<a>` or <`button`> tag can be made to look like a fancy button
    using Bootstrap. To create a button, you need to use the class `.btn` in combination
    with many other helper button classes. There are two different types of button
    classes in Bootstrap: for different sizes and for different colors.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，我们看到了Bootstrap中创建按钮的概览。任何锚点标签`<a>`或`<button>`标签都可以使用Bootstrap使其看起来像花哨的按钮。要创建按钮，您需要使用`.btn`类与许多其他辅助按钮类结合使用。Bootstrap中有两种不同类型的按钮类：用于不同大小和用于不同颜色。
- en: 'The button classes for different colors are as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 不同颜色的按钮类如下：
- en: '`btn-primary`: This button class is used for creating a dark-blue button'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-primary`：这个按钮类用于创建深蓝色的按钮'
- en: '`btn-info`: This is used for creating a light-blue button'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-info`：这个类用于创建浅蓝色的按钮'
- en: '`btn-success`: This button class is used for creating a green-colored button'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-success`：这个按钮类用于创建绿色的按钮'
- en: '`btn-warning`: This class is used for creating a pale yellow-colored button'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-warning`：这个类用于创建浅黄色的按钮'
- en: '`btn-danger`: This is used for creating a red-colored button'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-danger`：这个类用于创建红色的按钮'
- en: '`btn-default`: This class is used for creating a white-colored button'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-default`：这个类用于创建白色的按钮'
- en: '`btn-link`: This class is used to make buttons look like a link while preserving
    the behavior of a button'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-link`：这个类用于使按钮看起来像链接，同时保留按钮的行为'
- en: 'Let''s see the buttons in action. Here''s the markup for creating a single
    button:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看按钮的实际效果。以下是创建单个按钮的标记：
- en: '[PRE14]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following screenshot shows all the buttons in action:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了所有按钮的状态：
- en: '![Creating and styling buttons](img/7269OS_04_17.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![创建和样式化按钮](img/7269OS_04_17.jpg)'
- en: 'Bootstrap also has classes for creating buttons of various sizes. These classes
    have to be combined, along with the combination of `btn` and color classes. Classes
    for various sizes are:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap也有用于创建各种大小按钮的类。这些类必须与`btn`和颜色类结合使用。各种大小的类如下：
- en: '`btn-lg`: This class is used to create a large button'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-lg`：这个类用于创建大按钮'
- en: '`btn-sm`: This class is used to create a small button'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-sm`：这个类用于创建小按钮'
- en: '`btn-xs`: This class is used to create an extremely small button'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`btn-xs`：这个类用于创建极小的按钮'
- en: '`No class`: This class is used for a default size button'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`无类`：这个类用于创建默认大小的按钮'
- en: 'The following example shows a demo of using these classes:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了如何使用这些类：
- en: '[PRE15]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here''s a screenshot displaying all button sizes:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个显示所有按钮大小的屏幕截图：
- en: '![Creating and styling buttons](img/7269OS_04_18.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![创建和样式化按钮](img/7269OS_04_18.jpg)'
- en: 'Bootstrap buttons also come with various states like active, disabled, and
    so on. The attributes of the Bootstrap button are as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap按钮还带有各种状态，如活动、禁用等。Bootstrap按钮的属性如下：
- en: 'The `active` state: When you click on a Bootstrap button, this state is automatically
    added to a button. If you want a button to always look like an active button,
    then add the class `active` to it:'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`active`状态：当您点击Bootstrap按钮时，这个状态会自动添加到按钮上。如果您想让按钮始终看起来像活动按钮，那么请给它添加`active`类：'
- en: '[PRE16]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `active` state of the button can been seen in this screenshot:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个屏幕截图中可以看到按钮的`active`状态：
- en: '![Creating and styling buttons](img/7269OS_04_19.jpg)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建和样式化按钮](img/7269OS_04_19.jpg)'
- en: As seen in the preceding zoomed image, an active button gets an inset shadow
    effect.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前一个放大图像所示，活动按钮会得到一个内嵌阴影效果。
- en: 'The `disabled` state: To make a button disabled, just add a `disabled` attribute
    to it:'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`状态：要使按钮禁用，只需给它添加一个`disabled`属性：'
- en: '[PRE17]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Creating and styling buttons](img/7269OS_04_20.jpg)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建和样式化按钮](img/7269OS_04_20.jpg)'
- en: A disabled button is not clickable.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用按钮不可点击。
- en: 'In case of a `<button>` tag, you need to provide a disabled value to the `disabled`
    attribute:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是`<button>`标签，您需要为`disabled`属性提供一个禁用值：
- en: '[PRE18]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Which elements are eligible to use Bootstrap's button classes?
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哪些元素可以使用Bootstrap的按钮类？
- en: 'This is one of the most important things to remember. You cannot apply button
    classes to any HTML element. There are only four different types of elements that
    can be used as Bootstrap''s button:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这是需要记住的最重要的几点之一。你不能将按钮类应用于任何 HTML 元素。只有四种不同类型的元素可以用作 Bootstrap 的按钮：
- en: 'The HTML anchor tag: `<a>`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML 锚点标签：`<a>`
- en: 'The HTML button tag: `<button>`'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML 按钮标签：`<button>`
- en: 'The HTML input tag with button type: `<input type="button" />`'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML 带按钮类型的输入标签：`<input type="button" />`
- en: 'The HTML input tag with submit type: `<input type="submit" />`'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML 带提交类型的输入标签：`<input type="submit" />`
- en: Styling images in Bootstrap
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap 中的图像样式
- en: Images are essential to any web application. It is very important to display
    them properly. Bootstrap comes with many different classes that will help you
    to display images appropriately in your web app.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图像对任何网络应用都是至关重要的。正确显示它们非常重要。Bootstrap 提供了许多不同的类，可以帮助你在你的网络应用中适当地显示图像。
- en: When we talk about responsive images, we mean an image that fits to the size
    of its container irrespective of its own size. Creating a responsive image in
    Bootstrap is just a matter of a single class. This feature is especially useful
    when you are creating a portal for users, and you aren't aware of the size of
    image they are going to upload. Hence, adding Bootstrap's responsive class to
    it will be very helpful in such scenarios. You should also remember that Bootstrap
    won't change the size of the actual image. It will just resize it using CSS properties.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论响应式图像时，我们指的是一个图像，无论其自身大小如何，都能适应其容器的大小。在 Bootstrap 中创建响应式图像只是单个类的问题。这个特性在创建用户门户时特别有用，因为你不知道他们将要上传的图像大小。因此，在这种情况下添加
    Bootstrap 的响应式类将非常有帮助。你还应该记住，Bootstrap 不会改变实际图像的大小。它只会使用 CSS 属性来调整大小。
- en: 'The class used for creating a responsive image is `img-responsive`. Let''s
    create a grid using Bootstrap''s grid system and then add a responsive image to
    checkout how it fits to the size of the grid. The steps to add a responsive image
    are:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建响应式图像的类是 `img-responsive`。让我们使用 Bootstrap 的网格系统创建一个网格，然后添加一个响应式图像来查看它如何适应网格的大小。添加响应式图像的步骤如下：
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output of the preceding code will look as follows:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的输出将如下所示：
- en: '![Styling images in Bootstrap](img/7269OS_04_21.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap 中的图像样式](img/7269OS_04_21.jpg)'
- en: I have used the background color to display the range of the grid. You can see
    that the image fits to the grid.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了背景颜色来显示网格的范围。你可以看到图像适应了网格。
- en: 'Bootstrap also offers some helper classes for decorating the image on the go.
    The helper classes of Bootstrap are:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 还提供了一些用于即时装饰图像的辅助类。Bootstrap 的辅助类包括：
- en: '`img-rounded`: This creates a square image but with slightly rounded corners.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-rounded`：这会创建一个方形图像，但边缘略微圆滑。'
- en: '`img-circle`: This produces a circular image.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-circle`：这会产生一个圆形图像。'
- en: '`img-thumbnail`: This gives the image a clickable effect. This also adds a
    hover effect on the image.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-thumbnail`：这会给图像添加一个可点击的效果。这也在图像上添加了悬停效果。'
- en: 'The following screenshot shows all the preceding classes, respectively:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了所有前面的类，分别如下：
- en: '![Styling images in Bootstrap](img/7269OS_04_22.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap 中的图像样式](img/7269OS_04_22.jpg)'
- en: In our `Online Packt Shopping` application, we have used the responsive image
    class to display the product listing on the homepage.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 `Online Packt 购物` 应用程序中，我们使用了响应式图像类来在主页上显示产品列表。
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Hope you enjoyed using various styling classes of Bootstrap. You can head over
    to Bootstrap's online documentation ([http://getbootstrap.com/css/](http://getbootstrap.com/css/))
    to know about more CSS classes. We will be using these Bootstrap classes very
    frequently in the upcoming chapters, where we will focus on completing our shopping
    application.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢使用 Bootstrap 的各种样式类。你可以访问 Bootstrap 的在线文档（[http://getbootstrap.com/css/](http://getbootstrap.com/css/））了解更多的
    CSS 类。在接下来的章节中，我们将非常频繁地使用这些 Bootstrap 类，我们将专注于完成我们的购物应用。
