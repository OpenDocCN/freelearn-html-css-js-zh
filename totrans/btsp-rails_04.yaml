- en: Chapter 4. Using Bootstrap's Typography, Buttons, and Images in a Rails Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Styling a website's text, images, and links is a very important part of any
    web design. In the preceding chapter, we saw how to define a proper layout of
    a website using Bootstrap's grid system. In this chapter, we are going to focus
    more on styling the website's content like text, links, and images.
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap comes with many default styles for various HTML elements. For example,
    it comes with default styles for anchor tags, heading tags, ordered and unordered
    lists, and many more. These styles are applied using particular classes defined
    by Bootstrap.
  prefs: []
  type: TYPE_NORMAL
- en: Bootstrap focuses on rapid web development. So, when developers with little
    knowledge of web designing start using Bootstrap, it doesn't let them down. These
    smaller default styles of Bootstrap will help you get rid of browser default styles
    of many HTML elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Styling typography
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating Bootstrap buttons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling images in Bootstrap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to use the same static website setup, `Responsive_website_static`,
    that was created in [Chapter 3](ch03.html "Chapter 3. Powering a Rails App with
    Bootstrap''s Grid System"), *Powering a Rails App with Bootstrap''s Grid System*.
    Copy the folder `Responsive_website_static` and rename it as `Bootstrap_default_styles`.
    Open the `index.html` file and remove everything from the `<body>` tag, except
    Bootstrap''s JavaScript. Change the title of the page to `Bootstrap default styles`.
    Your `index.html` file should now have the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'As you learned in [Chapter 3](ch03.html "Chapter 3. Powering a Rails App with
    Bootstrap''s Grid System"), *Powering a Rails App with Bootstrap''s Grid System*,
    you should place a `div` container inside the `body` tag to wrap all of the website''s
    content and place them properly at the center of the screen. So, let''s create
    a container using the following markup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Styling typography
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we talk about typography, we mean heading tags, paragraph tags, inline
    text elements, proper alignment, text transformations, and any text on your webpage.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bootstrap comes with default styles for all the heading tags starting from
    `<h1>` to `<h6>`. If you want to create a heading tag in your HTML page, you can
    directly put the heading tag without any classes. Let''s have a look at an example.
    Insert the following HTML elements inside the static website that was created
    previously:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding code will look like this in the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'There might be scenarios when you don''t use a heading tag, but are able to
    achieve the same default style with some other HTML elements. Bootstrap will help
    you to do this. You can use the class `".h1"` through `".h6"` to get the desired
    typography style. Let''s remove all the heading tags in the preceding example
    and use paragraph tags instead. This time, we will use Bootstrap''s heading classes
    to get the same style:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding markup will look like this in the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It''s time to add a subtitle to the heading tag. Subtitles are very useful
    when you want to display a short tag line for your website. In Bootstrap, we will
    use the HTML tag `"<small>`" to add a subtitle within any heading tag of your
    choice. A small tag is an inline tag used for the same pupose in raw HTML as well.
    Take the following code as an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can see how the small tag appears relatively smaller, as compared to the
    heading tag content, even though they are present in the same tag.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s talk about styling the paragraph tags. Bootstrap applies a default size
    of 14px to all the paragraph tags. You don''t have to use any class for applying
    Bootstrap''s style to a paragraph tag. Let''s check out an example. I have inserted
    two dummy paragraphs in the preceding markup. Let''s apply the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will look like this in the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can even tweak a paragraph tag to stand out among the rest of the paragraph
    tags in the webpage using the `.lead` class. Let''s add this class to the first
    paragraph in the preceding markup and checkout the difference that it creates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Bootstrap even allows you to highlight text in a paragraph using the `<mark>`
    tag. I have added the `<mark>` tag in the paragraph, which gets highlighted in
    the preceding markup, and got the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling typography](img/7269OS_04_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Some other typography features are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: You can strikethrough any text by wrapping HTML `<del>` or `<s>` tags around
    the text.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Underline text by wrapping it with HTML `<ins>` and `<u>` tags
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also use the HTML `<small>` tags inside the paragraph tags to display
    smaller text relative to other text around the paragraph.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can apply the bold feature to text using HTML `<b>` and `<strong>` tags
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Italicize text using HTML `<em>` and `<i>` tags
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aligning text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bootstrap provides helper classes for alignment of textual content. These classes
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`text-left`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-right`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-center`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-justify`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-nowrap`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s apply `text-right` to the preceding paragraph text and checkout how
    it realigns the text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Aligning text](img/7269OS_04_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can see that the text is now aligned to the right with respect to the position
    of the container.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `text-nowrap` class removes the automatic line break and lets the paragraph
    appear in a single line, as shown in following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Aligning text](img/7269OS_04_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Try playing with other alignment classes and check out the changes in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: Text transformation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Transforming a text to uppercase, lowercase, or capitalizing it are sometimes
    very necessary actions in some web applications. Bootstrap has got classes to
    perform these transformations:'
  prefs: []
  type: TYPE_NORMAL
- en: '`text-lowercase`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-uppercase`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text-capitalize`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Text transformation through CSS or using Bootstrap's classes is definitely not
    recommended while designing websites. Crawlers and search engines parse the text
    while it is actually written in a webpage. CSS simply helps in changing the way
    it is displayed in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: Blockquotes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Blockquotes are very important Bootstrap components. They are used to quote
    some important information or popular sayings. Let's check out how to create a
    blockquote in Bootstrap.
  prefs: []
  type: TYPE_NORMAL
- en: Place the following markup inside the container of our static website.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'It will produce the following output in the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Blockquotes](img/7269OS_04_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can see that a vertical bar is placed to the left of `blockquote`. Blockquote
    comes with many customization options in Bootstrap. For example, placing a `<footer>`
    element inside the `blockquote` code will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The output for the preceding code will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Blockquotes](img/7269OS_04_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also change the alignment of blockquote by applying the class `blockquote-reverse`.
    It will make the blockquote look as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Blockquotes](img/7269OS_04_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Styling listing elements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'List elements, the `<ol>` ordered element, and the `<ul>` unordered element,
    play a very important role in the web. They are used to create a list of items
    such as creating menus, listing features, and so on. Bootstrap comes with some
    default styles for these elements. It resets the browser''s default style and
    adds a minimal style to them. Let''s style the listing elements:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The output will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling listing elements](img/7269OS_04_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let us look at ordered lists:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The output for the preceding code will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling listing elements](img/7269OS_04_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s add some helper classes by Bootstrap to modify the look of, lists. Adding
    the class `list-inline` to any of the preceding lists will make the list items
    appear inline, that is, side by side, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling listing elements](img/7269OS_04_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Adding the class `list-unstyled` to any of the list elements will remove the
    bullets or numbers from the list items. These are shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling listing elements](img/7269OS_04_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s experiment a bit and nest the unordered list to check out whether Bootstrap
    still supports us:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The output for the preceding code will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling listing elements](img/7269OS_04_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Oh yes! Bootstrap does support the nested list. Try experimenting with another
    list and a combination of helper classes. To change the style of bullets, you
    need to write your own style. Take the following code as an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Creating and styling buttons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the preceding chapter, we saw a gist of how buttons are created in Bootstrap.
    Any anchor tag `<a>` or <`button`> tag can be made to look like a fancy button
    using Bootstrap. To create a button, you need to use the class `.btn` in combination
    with many other helper button classes. There are two different types of button
    classes in Bootstrap: for different sizes and for different colors.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The button classes for different colors are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`btn-primary`: This button class is used for creating a dark-blue button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-info`: This is used for creating a light-blue button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-success`: This button class is used for creating a green-colored button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-warning`: This class is used for creating a pale yellow-colored button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-danger`: This is used for creating a red-colored button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-default`: This class is used for creating a white-colored button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-link`: This class is used to make buttons look like a link while preserving
    the behavior of a button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s see the buttons in action. Here''s the markup for creating a single
    button:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows all the buttons in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating and styling buttons](img/7269OS_04_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Bootstrap also has classes for creating buttons of various sizes. These classes
    have to be combined, along with the combination of `btn` and color classes. Classes
    for various sizes are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`btn-lg`: This class is used to create a large button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-sm`: This class is used to create a small button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`btn-xs`: This class is used to create an extremely small button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`No class`: This class is used for a default size button'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following example shows a demo of using these classes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s a screenshot displaying all button sizes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating and styling buttons](img/7269OS_04_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Bootstrap buttons also come with various states like active, disabled, and
    so on. The attributes of the Bootstrap button are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `active` state: When you click on a Bootstrap button, this state is automatically
    added to a button. If you want a button to always look like an active button,
    then add the class `active` to it:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The `active` state of the button can been seen in this screenshot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating and styling buttons](img/7269OS_04_19.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: As seen in the preceding zoomed image, an active button gets an inset shadow
    effect.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The `disabled` state: To make a button disabled, just add a `disabled` attribute
    to it:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Creating and styling buttons](img/7269OS_04_20.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: A disabled button is not clickable.
  prefs: []
  type: TYPE_NORMAL
- en: 'In case of a `<button>` tag, you need to provide a disabled value to the `disabled`
    attribute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Which elements are eligible to use Bootstrap's button classes?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This is one of the most important things to remember. You cannot apply button
    classes to any HTML element. There are only four different types of elements that
    can be used as Bootstrap''s button:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The HTML anchor tag: `<a>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The HTML button tag: `<button>`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The HTML input tag with button type: `<input type="button" />`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The HTML input tag with submit type: `<input type="submit" />`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styling images in Bootstrap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Images are essential to any web application. It is very important to display
    them properly. Bootstrap comes with many different classes that will help you
    to display images appropriately in your web app.
  prefs: []
  type: TYPE_NORMAL
- en: When we talk about responsive images, we mean an image that fits to the size
    of its container irrespective of its own size. Creating a responsive image in
    Bootstrap is just a matter of a single class. This feature is especially useful
    when you are creating a portal for users, and you aren't aware of the size of
    image they are going to upload. Hence, adding Bootstrap's responsive class to
    it will be very helpful in such scenarios. You should also remember that Bootstrap
    won't change the size of the actual image. It will just resize it using CSS properties.
  prefs: []
  type: TYPE_NORMAL
- en: 'The class used for creating a responsive image is `img-responsive`. Let''s
    create a grid using Bootstrap''s grid system and then add a responsive image to
    checkout how it fits to the size of the grid. The steps to add a responsive image
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the preceding code will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling images in Bootstrap](img/7269OS_04_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: I have used the background color to display the range of the grid. You can see
    that the image fits to the grid.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bootstrap also offers some helper classes for decorating the image on the go.
    The helper classes of Bootstrap are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`img-rounded`: This creates a square image but with slightly rounded corners.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`img-circle`: This produces a circular image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`img-thumbnail`: This gives the image a clickable effect. This also adds a
    hover effect on the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows all the preceding classes, respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Styling images in Bootstrap](img/7269OS_04_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In our `Online Packt Shopping` application, we have used the responsive image
    class to display the product listing on the homepage.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hope you enjoyed using various styling classes of Bootstrap. You can head over
    to Bootstrap's online documentation ([http://getbootstrap.com/css/](http://getbootstrap.com/css/))
    to know about more CSS classes. We will be using these Bootstrap classes very
    frequently in the upcoming chapters, where we will focus on completing our shopping
    application.
  prefs: []
  type: TYPE_NORMAL
