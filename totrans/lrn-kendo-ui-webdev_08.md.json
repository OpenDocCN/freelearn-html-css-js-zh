["```js\n<!â€” value is optional, but will set the initial value of the slider if present -->\n<input id=\"sliderId\" value=\"2\" />\n...\n<script>\n  $(function(){\n    $(\"#sliderId\").kendoSlider({...});\n  });\n</script>\n```", "```js\n<div id=\"rangeSliderId\">\n  <input />\n  <input />\n</div>\n...\n<script>\n  $(function(){\n    $(\"#rangeSliderId\").kendoRangeSlider({...});\n  });\n</script>\n```", "```js\n@(Html.Kendo().Slider().Name(\"horizontalSlider\"))\n...\n@(Html.Kendo().RangeSlider().Name(\"horizontalRangeSlider\"))\n```", "```js\n<!DOCTYPE html>\n...\n<body>\n\n  <!-- Two slider widgets -->\n    <div id=\"sliders\">\n        <h2 style=\"position:absolute;top:5px;left:40px\">Slider Widgets</h2>\n\n       <!-- vertical slider widget -->\n        <div style=\"position:absolute;top:65px;left:100px;\">\n            <input id=\"verticalSlider\" value=\"2\" /></div>\n\n        <!-- horizontal slider widget -->\n        <div style=\"position:absolute;top:285px;left:15px;\">\n            <input id=\"horizontalSlider\" value=\"7\" /></div>\n    </div>\n\n  <!-- Two rangeslider widgets -->\n    <div id=\"rangeSliders\">\n        <h2 style=\"position:absolute;top:5px;left:300px\">\n            RangeSlider Widgets</h2>\n\n        <!-- vertical rangeslider widget -->\n        <div style=\"position:absolute;top:65px;left:388px\"\n            id=\"verticalRangeSlider\">\n            <!-- these inputs are required for containing the two\n                 Values in the range -->\n\n            <input /><input />\n        </div>\n\n        <!-- horizontal rangeslider widget -->\n        <div id=\"horizontalRangeSlider\"\n            style=\"position:absolute;top:285px;left:300px;\">\n            <!-- these inputs are required for containing the two\n                 Values in the range -->\n            <input /><input />\n        </div>\n    </div>\n```", "```js\n    <script>\n        $(document).ready(function () {\n       // create the vertical slider widget\n            $(\"#verticalSlider\").kendoSlider({\n                min: -10,\n                max: 20,\n                orientation: \"vertical\",\n                smallStep: 2,\n                largeStep: 10,\n                tickPlacement: \"both\"\n            });\n\n            // create the horizontal slider widget\n            $(\"#horizontalSlider\").kendoSlider({\n                min: 0,\n                max: 20,\n                smallStep: 1,\n                largeStep: 5\n            });\n\n            // create the vertical rangeslider widget\n            $(\"#verticalRangeSlider\").kendoRangeSlider({\n                min: 0,\n                max: 20,\n                orientation: \"vertical\",\n                selectionStart: 2,\n                selectionEnd: 6,\n                smallStep: 1\n            });\n\n            // create the horizontal rangeslider widget\n            $(\"#horizontalRangeSlider\").kendoRangeSlider({\n                min: 0,\n                max: 30,\n                selectionStart: 5,\n                selectionEnd: 15,\n                smallStep: 1,\n                largeStep: 5,\n                tickPlacement: \"none\"\n            });\n        });\n    </script>\n</body>\n</html>\n```", "```js\n<div id=\"sliders\">\n    <h2 id=\"slidersLabel\">Slider Widgets</h2>\n    @(Html.Kendo().Slider().Name(\"verticalSlider\")\n        .HtmlAttributes(new { id = \"verticalSlider\" })\n        .Min(-10)\n        .Max(20)\n        .Orientation(SliderOrientation.Vertical)\n        .Value(5)\n        .SmallStep(2)\n        .LargeStep(10)\n        .TickPlacement(SliderTickPlacement.None)\n        .Tooltip(tt => \n            tt.Format(\"{0}\")))\n    @(Html.Kendo().Slider().Name(\"horizontalSlider\")\n        .HtmlAttributes(new { id = \"horizontalSlider\" })\n        .Min(0)\n        .Max(20)\n        .Orientation(SliderOrientation.Horizontal)\n        .Value(7)\n        .SmallStep(1)\n        .LargeStep(5)\n        .TickPlacement(SliderTickPlacement.Both))\n</div>\n<div id=\"rangeSliders\">\n    <h2 id=\"rangeSlidersLabel\">RangeSlider Widgets</h2>\n    @(Html.Kendo().RangeSlider().Name(\"verticalRangeSlider\")\n        .HtmlAttributes(new { id = \"verticalRangeSlider\" })\n        .Min(0)\n        .Max(20)\n        .Orientation(SliderOrientation.Vertical)\n        .Values(new double[] { 2, 6 })\n        .SmallStep(1))\n    @(Html.Kendo().RangeSlider().Name(\"horizontalRangeSlider\")\n        .HtmlAttributes(new { id = \"horizontalRangeSlider\" })\n        .Min(0)\n        .Max(30)\n        .Orientation(SliderOrientation.Horizontal)\n        .Values(new double[] { 5, 15 })\n        .SmallStep(1)\n        .LargeStep(5)\n        .TickPlacement(SliderTickPlacement.Both))\n</div>\n```", "```js\n$(\"#verticalSlider\").kendoSlider({\n  min: -10,\n  max: 20,\n  orientation: \"vertical\",\n  smallStep: 2,\n  largeStep: 10,\n  tickPlacement: \"both\"\n});\n```", "```js\n$(\"#verticalSlider\").kendoSlider({\n  min: -10,\n  max: 20,\n  orientation: \"vertical\",\n  smallStep: 2,\n  largeStep: 10,\n  tickPlacement: \"both\",\n  tooltip: {\n    format: \"{0}\"\n  }\n});\n```", "```js\n// options for a kendoSlider\ntooltip: {\n  enabled: true,  // enable tooltips or not\n  format: \"{0}\",  // format string for tooltips\n  template:{\n    value: \"...\"  // template value for tooltips\n    }\n  }\n}\n...\n// options for a kendoRangeSlider\ntooltip: {\n  enabled: true,  // enabled or not\n  format: \"{0}\",  // format string for tooltips\n  template:{\n    selectionStart: \"...\",  // template value for start range\n          selectionEnd: \"...\"  // template value for end range\n    }\n  }\n}\n```", "```js\n...\n.Tooltip(tt => \n  tt.Enabled(true)\n  .Format(\"{0}\")\n  .Tempalte(\"template would go here\")) @* misspelled in the Kendo code *@\n```", "```js\n<input id=\"sliderId\" value=\"4\" />\n\n... // or\n\n$(\"#sliderId\").kendoSlider({\n  value: 4,\n  ...\n}\n```", "```js\n<div id=\"rangeSliderId\">\n  <input value=\"2\" />\n  <input value=\"8\" />\n</div>\n\n... // or\n\n$(\"#rangeSliderId\").kendoRangeSlider({\n  selectionStart: 2,\n  selectionEnd: 8\n  ...\n}\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  tickPlacement: \"topLeft\"\n  ...\n});\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  tickPlacement: \"topLeft\"\n  ...\n});\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  tickPlacement: \"bottomRight\"\n  ...\n});\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  tickPlacement: \"both\"\n  ...\n});\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  tickPlacement: \"none\"\n  ...\n});\n```", "```js\n$(function(){\n  orientation: \"vertical\"  // \"horizontal\" or \"vertical\"\n  ...\n}\n```", "```js\n// Kendo Slider Widget\nvar slider = $(\"#sliderId\").data(\"kendoSlider\");\n\n// Kendo RangeSlider Widget\nvar rangeSlider = $(\"#rangeSliderId\").data(\"kendoRangeSlider\");\n```", "```js\n// get a reference to the slider\nvar slider = $(\"sliderId\").data(\"kendoSlider\");\n\n// disable a slider\nslider.disable();\n\n// enable a slider\nslider.enable();\n```", "```js\n// get a reference to the slider\nvar slider = $(\"#sliderId\").data(\"kendoSlider\");\n\n// set the value of the slider to 7\nslider.value(7);\n\n// get the value of the slider\nvar sliderValue = slider.value(); // returns a number\n```", "```js\n// get a reference to the slider\nvar rangeSlider = $(\"#rangeSliderId\").data(\"kendoRangeSlider\");\n\n// set the values for the range slider to 2 and 8\nrangeSlider.value([2,8]);\n\n// get the values from the range slider\nvar sliderValues = rangeSlider.value(); // returns an object array\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  change: changeHandler,\n  ...\n});\n\n...\n\nfunction changeHandler (e){\n  alert(e.value);  // e.value contains the new value of the slider\n}\n```", "```js\n$(\"#rangeSliderId\").kendoRangeSlider({\n  change: changeHandler,\n  ...\n});\n\n...\n\nfuction changeHandler (e){\n  alert(e.value.toString());  // e.value is an array of the new range values\n}\n```", "```js\n$(\"#sliderId\").kendoSlider({\n  slide: changeHandler,\n  ...\n});\n```", "```js\n.Events(events => events\n  .Slide(\"slideHandler\")\n  .Change(\"changeHandler\"))\n```"]