["```js\nnpm install -g Polymer-cli\n```", "```js\nPolymer --version\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n <head>\n    <meta charset=\"utf-8\">\n    <title>Hello World</title>\n  </head>\n  <body>\n    <p>You stuff goes here.</p>\n  </body>\n</html>\n```", "```js\nPolymer serve\n```", "```js\ninfo: Files in this directory are available under the following URLs\n applications: http://127.0.0.1:8081\n reusable components: http://127.0.0.1:8081/components/Polymer/\n```", "```js\nnpm i @Polymer/Polymer\n```", "```js\nimport { PolymerElement, html } from '@Polymer/Polymer/Polymer-element.js';\n\nclass HelloWorld extends PolymerElement {\n    ...\n    ...\n    ...\n}\n\ncustomElements.define('hello-world', HelloWorld);\n```", "```js\nclass HelloWorld extends PolymerElement {\n  constructor() {\n    super();\n  }\n\n  static get template() {\n    return html`\n      <p>Hello World</p>\n    `;\n  }\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello World</title>\n    <script type=\"module\" src=\"img/hello-world.js\"></script>\n  </head>\n  <body>\n    <hello-world></hello-world>\n  </body>\n</html>\n```", "```js\n// second-element.js\n\nimport { PolymerElement, html } from '@Polymer/Polymer/Polymer-element.js';\n\nclass SecondElement extends PolymerElement {\n  constructor() {\n    super();\n  }\n  static get template() {\n    return html`\n      <style>\n        p {\n          color: red;\n        }\n      </style>\n      <p>This is the second element</p>\n    `;\n  }\n}\n\ncustomElements.define('second-element', SecondElement);\n```", "```js\nimport { PolymerElement, html } from '@Polymer/Polymer/Polymer-element.js';\nimport './second-element.js';\n\nclass HelloWorld extends PolymerElement {\n  constructor() {\n    super();\n  }\n  static get template() {\n    return html`\n      <p>Hello World</p>\n      <second-element></second-element>\n    `;\n  }\n}\n\ncustomElements.define('hello-world', HelloWorld);\n```", "```js\nimport { PolymerElement, html } from '@Polymer/Polymer/Polymer-element.js';\n\nclass HelloString extends PolymerElement {\n  constructor() {\n    super();\n  }\n\n  static get properties() {\n    return {\n      name: {\n        type: String,\n        value: 'No Name Provided Yet'\n      }\n    };\n  }\n\n  static get template() {\n    return html`\n      <p>Hello, [[name]]</p>\n    `;\n  }\n}\n\ncustomElements.define('hello-string', HelloString);\n```", "```js\n<hello-string></hello-string>\n```", "```js\n<hello-string name=\"Prateek\"></hello-string>\n```", "```js\nimport { PolymerElement, html } from '@Polymer/Polymer/Polymer-element.js';\nimport './hello-string.js';\n\nclass StudentName extends PolymerElement {\n  constructor() {\n    super();\n  }\n\n  static get properties() {\n    return {\n      name: {\n        type: String,\n        value: 'John Doe'\n      }\n    };\n  }\n\n  static get template() {\n    return html`\n      <hello-string name=\"[[name]]\"></hello-string>\n    `;\n  }\n}\n\ncustomElements.define('student-name', StudentName);\n```", "```js\nnpm init stencil\n```", "```js\n![](img/eb068eaf-cd94-4c49-8498-674fbe55ad6d.png) Pick a starter › component\n![](img/eb068eaf-cd94-4c49-8498-674fbe55ad6d.png) Project name › stenciljs-app\n![](img/eb068eaf-cd94-4c49-8498-674fbe55ad6d.png) All setup in 8.19 s\n\n Next steps:\n $ cd stenciljs-app\n $ npm start\n\n Further reading:\n - https://github.com/ionic-team/stencil-component-starter\n```", "```js\ncd stenciljs-app\nnpm start\n```", "```js\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'hello-world',\n  styleUrl: 'hello-world.css',\n  shadow: true\n})\n\nexport class HelloWorld {\n  render() {\n    return (\n      <div>Hello World</div>\n    );\n  }\n}\n```", "```js\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'student-list',\n  styleUrl: 'student-list.css',\n  shadow: true\n})\n\nexport class StudentList {\n  render() {\n    return <div>\n      <div>Student List is as follows: </div>\n      <student-name class=\"student-list__student\" first=\"John\" last=\"Doe\"></student-name>\n      <student-name class=\"student-list__student\" first=\"Tom\" last=\"Hanks\"></student-name>\n    </div>;\n  }\n}\n```", "```js\nimport { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'student-name',\n  styleUrl: 'student-name.css',\n  shadow: true\n})\n\nexport class StudentName {\n  @Prop({reflectToAttr: true}) first: string;\n  @Prop() last: string;\n\n  private getFullName(): string {\n    return `${this.first} ${this.last}`;\n  }\n\n  render() {\n    return <div>Student Name: {this.getFullName()}</div>;\n  }\n}\n```"]