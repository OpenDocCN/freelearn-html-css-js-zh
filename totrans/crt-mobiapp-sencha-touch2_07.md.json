["```js\nExt.define('MyApp.model.Category', {\n    extend: 'Ext.data.Model',\n    config: {\n        fields: ['id', 'name', 'icon']\n    }\n});\n```", "```js\nvar store = Ext.create('Ext.data.Store', {\n    model: 'Category',\n    proxy: {\n        type: 'jsonp',\n        url : 'http://foursquare.com/vendors/categories' ,\n        extraParams: {\n          apiKey: 'XXXXXXXXXXXXXXXXXXXXXXXXX',\n          appSecret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n        },\n        reader: {\n            type: 'json',\n            rootProperty: 'categories'\n        }\n    }\n});\n```", "```js\nExt.define('MyApp.view.ViewPortContainer', {\n    extend: 'Ext.Container',\n\n    config: {\n        id: 'viewport',\n        layout: {\n            type: 'card'\n        },\n        items: [ ]\n    }\n\n});\n```", "```js\n{\n    xtype: 'navigationview',\n    id: 'mainView',\n    navigationBar: {\n        items: [\n            {\n                xtype: 'button',\n                handler: function(button, event) {\n                    Ext.getCmp('viewport').setActiveItem(1);\n                },\n                id: 'addContactButton',\n                ui: 'action',\n                iconCls: 'add',\n                iconMask: true,\n                align: 'right'\n            }\n        ]\n    },\n    items: [\n        {\n            xtype: 'container',\n            id: 'homeScreen',\n            layout: {\n                type: 'hbox'\n            },\n            items: [\n                {\n                    xtype: 'button',\n                    action: 'go',\n                    margin: 75,\n                    text: 'Get Started!',\n                    flex: 1\n                }\n            ]\n        }\n    ]\n}\n```", "```js\n{\n    xtype: 'formpanel',\n    id: 'editContact',\n    layout: {\n        type: 'vbox'\n    },\n    items: [\n        {\n            xtype: 'textfield',\n            label: 'First Name',\n            labelWidth: '40%',\n            name: 'firstname'\n        },\n        {\n            xtype: 'textfield',\n            label: 'Last Name',\n            labelWidth: '40%',\n            name: 'lastname'\n        },\n        {\n            xtype: 'label',\n            html: 'Choose what kind of food they like:'\n        },\n        {\n            xtype: 'list',\n            id: 'categoryList',\n            itemTpl: [\n                '<div><span class=\"icon\"><img src=\"img/{imgURL}\" /></span> {shortName}</div>'\n            ],\n            store: 'Categories',\n            mode: 'MULTI',\n            flex: 1\n        },\n        {\n            xtype: 'segmentedbutton',\n            margin: '0 0 10 0',\n            layout: {\n                pack: 'center',\n                type: 'hbox'\n            },\n            items: [\n                {\n                    xtype: 'button',\n                    text: 'Cancel'\n                },\n                {\n                    xtype: 'button',\n                    text: 'Save'\n                }\n            ]\n        },\n        {\n            xtype: 'titlebar',\n            docked: 'top',\n            title: 'Add Contact'\n        }\n    ]\n}\n```", "```js\ncategories: [\n  {category 1},\n  {category 2},\n  {category 3},\n  {category 4}â€¦\n\n]\n```", "```js\n{\n    id: \"4bf58dd8d48988d107941735\",\n    name: \"Argentinian Restaurant\",\n    pluralName: \"Argentinian Restaurants\",\n    shortName: \"Argentinian\",\n    icon: {\n        prefix: \"https://foursquare.com/img/categories_v2/food/argentinian_\",\n        mapPrefix: \"https://foursquare.com/img/categories_map/food/argentinian\",\n        suffix: \".png\",\n    },\n    categories: [ ]\n}\n```", "```js\nExt.define('MyApp.model.Category', {\n    extend: 'Ext.data.Model',\n    config: {\n        fields: [\n            {\n                name: 'id'\n            },\n            {\n                name: 'name'\n            },\n            {\n                name: 'shortName'\n            },\n            {\n                name: 'icon'\n            },\n            {\n                convert: function(v, rec) {\n                    return rec.data.icon.prefix+ '32' + rec.data.icon.suffix;\n                },\n                name: 'imgURL'\n            }\n        ],\n        proxy: {\n            type: 'ajax',\n            url: '/categories.json',\n            reader: {\n                type: 'json',\n                rootProperty: 'categories'\n            }\n        }\n    }\n});\n```", "```js\n{\n convert: function(v, rec) {\n  return rec.data.icon.prefix+ '32' + rec.data.icon.suffix;\n },\n name: 'imgURL'\n}\n```", "```js\n'<div><span class=\"icon\"><img src=\"img/{imgURL}\" /></span> {shortName}</div>'\n```", "```js\nExt.define('MyApp.controller.Contact', {\n    extend: 'Ext.app.Controller',\n    config: {\n        refs: {\n            contactEditor: '#editContact',\n            categoryList: '#editContact list',\n            cancelButton: '#editContact button[text=\"Cancel\"]',\n            saveButton: '#editContact button[text=\"Save\"]',\n            viewContainer: '#viewport'\n        },\n        control: {\n            cancelButton: {\n                tap: 'doCancel'\n            },\n            saveButton: {\n                tap: 'doSave'\n            }\n        }\n    }\n});\n```", "```js\ndoCancel: function() {\n    this.getContactEditor().reset();\n    this.getCategoryList().deselectAll();\n    this.getViewContainer().setActiveItem(0);\n}\n```", "```js\ndoSave: function() {\n\n    var contact = Ext.create('MyApp.model.Contact', this.getContactEditor().getValues());\n    var categories = this.getCategoryList().getSelection();\n    var categoryIDs = [];\n    Ext.each(categories, function(category) {\n        categoryIDs.push(category.get('id'));\n    });\n    contact.set('categories', categoryIDs.join(','));\n\n    contact.save(function() {\n        console.log('Contact: ',contact);\n    });\n\n    this.doCancel();\n}\n```", "```js\nExt.define('MyApp.controller.mainView', {\n    extend: 'Ext.app.Controller',\n    requires: 'Ext.DateExtras',\n    config: {\n        views: [ 'confirmLocation', 'restaurantList', 'ViewPortContainer', 'friendChooser', 'restaurantDetails'],\n        stores: [ 'ContactStore', 'RestaurantStore'],\n        refs: {\n            viewContainer: '#viewport',\n            mainView: '#mainView',\n            startButton: '#homeScreen button[action=\"go\"]',\n            cancelButton: 'button[action=\"cancel\"]',\n            finishButton: 'button[action=\"finish\"]',\n            locationButton: 'button[action=\"newlocation\"]',\n            nextButton: 'button[action=\"choosefriends\"]',\n            map: 'confirmlocation map',\n            restaurantList: 'restaurantlist',\n            friendList: 'friendchooser list'\n        }\n    }\n});\n```", "```js\nrequires: [\n 'Ext.plugin.google.Tracker'\n]\n```", "```js\nExt.Loader.setPath({\n    'Ext.plugin': 'lib/plugin'\n});\n```", "```js\nExt.define('MyApp.view.confirmLocation', {\n extend: 'Ext.Container',\n alias: 'widget.confirmlocation',\n config: {\n  layout: {\n   type: 'vbox'\n  },\n  items: [\n   {\n    xtype: 'container',\n    height: 25,\n    html: 'Please confirm your location:'\n   },\n   {\n    xtype: 'map',\n    useCurrentLocation: true,\n    flex: 1,\n    plugins: [\n     new Ext.plugin.google.Tracker({\n      trackSuspended: false,   //suspend tracking initially\n      allowHighAccuracy: false,\n      marker: new google.maps.Marker({\n      position: new google.maps.LatLng(37.44885, -122.158592), \n      title: 'My Current Location',\n      animation: google.maps.Animation.DROP\n      })\n     })\n    ]\n   }\n  ]\n }\n});\n```", "```js\n{\n xtype: 'segmentedbutton',\n height: 40,\n margin: '10 0 10 0',\n layout: {\n  pack: 'center',\n  type: 'hbox'\n },\n items: [\n  {\n   xtype: 'button',\n   text: 'Cancel',\n   action: 'cancel'\n  },\n  {\n   xtype: 'button',\n   text: 'New Location',\n   action: 'newlocation'\n  },\n  {\n   xtype: 'button',\n   text: 'Next',\n   action: 'choosefriends'\n  }\n ]\n}\n```", "```js\nExt.define('MyApp.view.friendChooser', {\n extend: 'Ext.Container',\n alias: 'widget.friendchooser',\n config: {\n  id: 'friendChooser',\n  layout: {\n   type: 'vbox'\n  },\n  items: [\n   {\n    xtype: 'container',\n    height: 20,\n    html: 'Please Choose Friends from the list...',\n    styleHtmlContent: true\n   },\n   {\n    xtype: 'list',\n    margin: 25,\n    store: 'Contacts',\n    itemTpl: [\n     '<div>{firstname} {lastname}</div>'\n    ],\n    mode: 'MULTI',\n    flex: 1,\n    grouped: true,\n    emptyText: 'No Contacts to display.<br />Please add some by clicking the plus icon.'\n   }\n  ]\n }\n});\n```", "```js\ngrouper: {\n groupFn: function(record) {\n  return record.get('lastname')[0];\n }\n}\n```", "```js\n{\n  xtype: 'segmentedbutton',\n  height: 40,\n  margin: '10 0 10 0',\n  layout: {\n   pack: 'center',\n   type: 'hbox'\n  },\n  items: [\n   {\n    xtype: 'button',\n    text: 'Cancel',\n    action: 'cancel'\n   },\n   {\n    xtype: 'button',\n    text: 'Finish',\n    action: 'finish'\n   }\n  ]\n }\n```", "```js\nExt.define('MyApp.view.restaurantList', {\n    extend: 'Ext.dataview.List',\n    alias: 'widget.restaurantlist',\n    config: {\n        store: 'Restaurants',\n        itemTpl: [\n            '<div>{name}</div>'\n        ],\n        onItemDisclosure: true,\n        grouped: true\n    }\n});\n```", "```js\nExt.define('MyApp.store.RestaurantStore', {\n extend: 'Ext.data.Store',\n requires: [\n  'MyApp.model.Restaurant'\n ],\n config: {\n  model: 'MyApp.model.Restaurant',\n  storeId: 'Restaurants',\n  proxy: {\n   type: 'jsonp',\n   url: 'https://api.foursquare.com/v2/venues/search',\n   reader: {\n    type: 'json',\n    rootProperty: 'response.venues'\n   }\n  },\n  grouper: {\n   groupFn: function(record) {\n    var distM = record.raw.location.distance;\n    var distMiles = Math.round(distM * 0.000621371); //give or take.\n    return (distMiles == 1)?\"1 Mile\":distMiles+' Miles';\n   }\n  },\n  sorters: [\n   { property: 'name', direction: 'ASC' }\n  ]\n }\n});\n```", "```js\nExt.define('MyApp.model.Restaurant', {\n    extend: 'Ext.data.Model',\n    config: {\n        fields: [\n            {\n                name: 'id'\n            },\n            {\n                name: 'name'\n            },\n            {\n                name: 'categories'\n            },\n            {\n                name: 'location'\n            },\n            {\n                name: 'contact'\n            },\n            {\n                name: 'menu'\n            },\n            {\n                name: 'specials'\n            }\n        ]\n    }\n});\n```", "```js\nExt.define('MyApp.view.restaurantDetails', {\n extend: 'Ext.Panel',\n alias: 'widget.restaurantdetails',\n title: 'Details',\n config: {\n  tpl: [\n   '<div class=\"restaurant\"><span class=\"name\">{name}</span>',\n   '<tpl for=\"contact\">',\n     '<span class=\"phone\">- {formattedPhone}</span>',\n   '</tpl>',\n   '<div class=\"icons\"><tpl for=\"categories\">',\n     '<span><img src=\"img/{icon.prefix}32{icon.suffix}\" /></span>',\n   '</tpl></div>',\n   '<div class=\"address\">Address:<br />',\n   '<tpl for=\"location\">',\n     '{address}<br />',\n     '{city}, {state} {postalCode}',\n   '</tpl></div>',\n   '<tpl for=\"menu\">',\n     '<a class=\"menu\" href=\"{mobileUrl}\">Menu</a>',\n   '</tpl>',\n   '<tpl for=\"specials\">',\n     '<tpl if=\"count &gt; 0\">',\n       '<div class=\"specials\">Specials:<dl><tpl for=\"items\">',\n         '<dt>{title}</dt>',\n         '<dd>{description}<br>{message}</dd>',\n       '</tpl></dl></div>',\n     '</tpl>',\n   '</tpl>',\n   '</div>'\n  ]\n }\n});\n```", "```js\ncontrol: {\n startButton: {\n   tap: 'doStart'\n },\n cancelButton: {\n   tap: 'doCancel'\n },\n locationButton: {\n   tap: 'doNewLocation'\n },\n nextButton: {\n   tap: 'doChooseFriends'\n },\n finishButton: {\n   tap: 'doShowRestaurants'\n },\n restaurantList: {\n   disclose: 'doShowRestaurantDetails'\n }\n}\n```", "```js\nreference: {\n eventName: 'functionName'\n}\n```", "```js\ndoStart: function() {\n var contactStore = Ext.getStore('Contacts');\n contactStore.load();\n if(contactStore.getCount() > 0) {\n     this.getMainView().push({ xtype: 'confirmlocation' });\n } else {\n     Ext.Msg.confirm('No Contacts', 'You will need to add some contacts before we can search for restaurants. Would you like to add contacts now?', function(btn){\n    if(btn == 'yes') {\n      Ext.getCmp('viewport').setActiveItem(1);\n    }\n  }, this);\n }\n}\n```", "```js\ndoCancel: function() {\n var count = this.getMainView().items.length - 1;\n this.getMainView().pop(count);\n}\n```", "```js\ndoNewLocation: function() {\n Ext.Msg.prompt(\n     '',\n     'Please enter the address you want to search from:',\n     this.setNewLocation,\n     this,\n     100\n );\n} \n```", "```js\nsetNewLocation: function(buttonID, address) {\n var geocoder = new google.maps.Geocoder();\n var map = this.getMap();\n geocoder.geocode({'address': address}, function(results, status) {\n  if (status == google.maps.GeocoderStatus.OK) {\n   map.getGeo().suspendUpdates();\n   map.getMap().setCenter(results[0].geometry.location);\n   var marker = new google.maps.Marker({\n    map: map.getMap(),\n    position: results[0].geometry.location,\n    title: 'My Current Location',\n    animation: google.maps.Animation.DROP\n   });\n   map.getGeo().setLatitude(results[0].geometry.location.lat());\n   map.getGeo().setLongitude(results[0].geometry.location.lng());\n  } else {\n   Ext.Msg.alert('Error', 'Unable to find address.');\n  }\n }); \n}\n```", "```js\ndoChooseFriends: function() {\n this.getMainView().push({ xtype: 'friendchooser' });\n}\n```", "```js\ndoShowRestaurants: function() {\n var location = this.getMap().getGeo();\n var friends = this.getFriendList().getSelection();\n var store = Ext.getStore('Restaurants');\n var categories = [];\n var dt = new Date();\n var first = true;\n Ext.each(friends, function(friend) {\n  if (first) {\n   categories = friend.get('categories').split(',');\n   first = false;\n  } else {\n   categories = Ext.Array.intersect(categories, friend.get('categories').split(','));\n  }\n });\n store.load({\n  params: {\n   ll: location.getLatitude()+','+location.getLongitude(),\n   client_id: FourSquare.clientID,\n   client_secret: FourSquare.clientSecret,\n   radius: 2000,\n   categoryId: categories.join(','),\n   v: Ext.Date.format(dt, 'Ymd')\n }\n });\n this.getMainView().push({xtype: 'restaurantlist', store: store});\n}\n```", "```js\ndoShowRestaurantDetails: function(list, record) {\n this.getMainView().push({xtype: 'restaurantdetails', data: record.data});\n}\n```"]