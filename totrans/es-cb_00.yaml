- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JavaScript permeates the development landscape like few languages before it.
    Since the introduction of the Node.js run-time in May of 2009, it has ventured
    far beyond the browser. It now works with controllers on a Raspberry Pi, as the
    scripting language for 3D video games that run on desktop computers, running web
    servers that serve millions of page views a day, and, of course, it is the dominant
    language for web browsers. It is possible that JavaScript is the most important
    programming language in the world.
  prefs: []
  type: TYPE_NORMAL
- en: The ECMAScript standard has been around almost as long as JavaScript. However,
    in the last few years, it has seen a flurry of activity. ES6, published in 2015,
    created an almost completely new language. Since then, the updates have been more
    gradual, but still significant. This book covers the standard up to ES8 (released
    in 2017). We'll discuss how to use some of its new features to organize programs
    more effectively and write better code.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for a broad array of readers. While this should not be
    considered an introductory text, anyone who has written a JavaScript program and
    has run it in a browser will be sufficiently prepared to read this book. JavaScript
    experts will also find some good food for thought.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](85357458-c80c-4ebf-8ada-ce99243c496e.xhtml), *Building with Modules*,
    covers how to use ECMAScript modules to organize code and how to configure modern
    browsers to use them. This chapter also covers compatibility with Google''s Chrome
    and Mozilla''s Firefox browser, and how to make them work with modules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](dc9427bb-11e5-40a6-bb49-dc0d507df818.xhtml), *Staying Compatible
    with Legacy Browsers*, covers how to convert code that uses ECMAScript modules
    into a format that can be used by platforms that don''t support them. We use webpack,
    a common JavaScript compilation tool, to assemble our modules into a single JavaScript
    file (called a bundle) and load it into our browser when ECMASript modules aren''t
    compatible.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](f12a4d4c-4aed-430a-a33a-b8a7cd55c55d.xhtml), *Working with Promises*,
    covers how to use the Promise API to organize asynchronous programs. We''ll take
    a look at how to propagate results through promise chains and handle errors. Promises
    are generally regarded as an improvement over the older callback pattern. This
    chapter also lays a foundation for the topic covered in the next chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ff3732d6-20ed-4998-a1fc-c2c0aa2a0ee0.xhtml), *Working with async/await
    and Functions*, covers how to use the new `async` and `await` features. Building
    on the preceding chapter, we''ll take a look at how they can be replaced or used
    in concert with the Promise API, improving program readability while maintaining
    compatibility.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](893e5fe4-d01a-419c-99ff-921ae27c1299.xhtml), *Web Workers, Shared
    Memory, and Atomics*, covers the web APIs that can be used to process data in
    parallel. This chapter is emblematic for the recent development of JavaScript
    as a language and web browsers as platforms. Parallel programming is a new domain
    for JavaScript that brings new possibilities and problems to the language.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](0ff0c6a3-a324-4346-8ba5-37275e85aa1b.xhtml), *Plain Objects*, demonstrates
    the use of API and syntax options to work with plain objects. We''ll look at how
    to work with objects as a collection and how to define properties with some interesting
    behaviors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](7d33c117-bad7-49b9-b510-c9f01225377d.xhtml), *Creating Classes*,
    covers the use of ECMAScript class semantics. We''ll create new classes with behaviors
    that are defined on single instances and whole classes. We''ll take a look at
    how to add properties and define methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](27bedd69-df1f-4438-821c-5f7bbf4d25ca.xhtml), *Inheritance and Composition*,
    builds on our knowledge from the preceding chapter; we''ll combine classes into
    larger structures. We''ll also take a look at how to use both composition and
    inheritance to share behaviors between classes, and we''ll discuss the benefits
    and drawbacks of each.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](51f27ab6-d213-4aa4-ab6f-770a768ab734.xhtml), *Larger Structures
    with Design Patterns,* further expanding on the prior two chapters, looks at some
    common ways that programs are organized for certain tasks. We''ll implement some
    common design patterns and demonstrate how we can expand and modify them for different
    uses.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](3d708885-0b1a-4b87-8969-d19022808a8c.xhtml), *Working with Arrays*,
    covers the use of the new `Array` API features. In the past, working with arrays
    meant a lot of loops and keeping track of indices, or importing bulky libraries
    to clean repeated code. This chapter will show some new, functionally inspired,
    methods that make working with these collections much easier.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](f2c19311-ab2a-4cf3-bd05-64cad3b471b3.xhtml), *Working with Maps
    and Symbols*, covers how to make use of the  `Map` and `WeakMap` classes to create
    relationships between different kinds of values. In this chapter, we''ll look
    at how to use the APIs of these two classes, how they are different, and how we
    can control which types go into them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](f9060ab4-ea74-4200-b8c8-b47453f7e179.xhtml), *Working with Sets*,
    demonstrates the use of the `Set` and `WeakSet` classes. These classes are excellent
    when the order of elements doesn''t matter, and we just want to is something exists.
    We''ll see how to use the APIs of these two classes, when to use one over the
    other, and how we can control what types go into them.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book assumes that you have some very basic knowledge and resources in
    order to get the most out of it:'
  prefs: []
  type: TYPE_NORMAL
- en: A computer with permission to install programs and configure browsers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A text editor you are comfortable with; there are a lot of options to choose
    from:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VSCode
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Atom
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Vim
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Emacs
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Some basic programming knowledge. If you haven't written a function before,
    this might not be the best place to start.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/ECMAScript-Cookbook](https://github.com/PacktPublishing/ECMAScript-Cookbook). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Next, in the same directory, create a file called `hello.js`,
    which exports a function named `sayHi`, which writes a message to the console."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Double-click **nvm-setup**."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings that appear frequently (*Getting
    ready*, *How to do it...*, *How it works...*, *There's more...*, and *See also*).
  prefs: []
  type: TYPE_NORMAL
- en: 'To give clear instructions on how to complete a recipe, use these sections
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section tells you what to expect in the recipe and describes how to set
    up any software or any preliminary settings required for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section contains the steps required to follow the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section usually consists of a detailed explanation of what happened in
    the previous section.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section consists of additional information about the recipe in order to
    make you more knowledgeable about the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section provides helpful links to other useful information for the recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
