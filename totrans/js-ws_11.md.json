["```js\n\t[2-9]XX-XXX-XXXX\n```", "```js\nconventional.html\n1 <html>\n2 <head>\n3   <meta charset=\"utf-8\"/>\n4 </head>\n5 <body>\n6 Enter a phone number in format XXX-XXX-XXXX:\n7 <input type=\"text\" id=\"phone\">\n8 <div id=\"msg\"></div>\n9 <script>\n10 var phone = document.getElementById(\"phone\");\n11 phone.addEventListener(\"input\", validatePhoneNumber);\n12 function isDigit(character) {\n13     return character >= '0' && character <= '9';\n14 }\nThe full code is available at: https://packt.live/2CFKQtK\n```", "```js\nvar phone = document.getElementById(\"phone\");\nphone.addEventListener(\"input\", validatePhoneNumber);\n```", "```js\nfunction isDigit(character) {\n    return character >= '0' && character <= '9';\n}\n```", "```js\n    var phoneNum = phone.value.trim();\n    // check if phone number matches format [2-9]XX-XXX-XXXX\n    var valid =\n        phoneNum.length == 12 &&\n        phoneNum.charAt(0) != '0' &&\n        isDigit(phoneNum.charAt(0)) &&\n        isDigit(phoneNum.charAt(1)) &&\n        isDigit(phoneNum.charAt(2)) &&\n        phoneNum.charAt(3) == '-' &&\n```", "```js\n    var validMsg = \"phone number entered is \" +\n        (valid ? \"valid.\" : \"INVALID!!!\");\n    document.getElementById(\"msg\").innerHTML = validMsg;\n```", "```js\n// check if phone number matches format [2-9]XX-XXX-XXXX\nvar valid = phoneNum.match(//);\n```", "```js\nvar valid = phoneNum.match(/^/);\n```", "```js\nvar valid = phoneNum.match(/^[2-9]/);\n```", "```js\n    // check if phone number matches format [2-9]XX-XXX-XXXX\n    var valid = phoneNum.match(/^[2-9]\\d{2}-\\d{3}-\\d{4}$/);\n```", "```js\n    the\\s+(mother|father)\n```", "```js\n        const str = \"Here's the food for Tommy today\";\n        let match;\n    ```", "```js\n        let match = str.match(/\\bt\\w+/i);\n    ```", "```js\n        > match[0]\n       <- \"the\"\n    ```", "```js\n        > match.index\n       <- 7\n    ```", "```js\n        > match[1]\n       <- undefined\n    ```", "```js\n        match = str.match(/\\bt\\w+/gi);\n    ```", "```js\n        > match[0]\n       <- \"the\"\n        > match[1]\n       <- \"Tommy\"\n        > match[2]\n       <- \"today\"\n        > match[3]\n       <- undefined\n    ```", "```js\n   if (/^hello/.test(str)) {\n\n   }\n```", "```js\n    ^[2-9]\\d{2}-\\d{3}-\\d{4}$\n```", "```js\n    (XXX) XXX-XXXX\n```", "```js\n        \\([2-9]\\d{2}\\)\n    ```", "```js\n        ^\\([2-9]\\d{2}\\) \\d{3}-\\d{4}$\n    ```", "```js\n    ^\\(?[2-9]\\d{2}\\)?[- ]\\d{3}-\\d{4}$\n```", "```js\n+97 (234) 567-8910\n+97 234-567-8910\n```", "```js\n    function circ(r) {\n      return r * 2 * Math.PI;\n    }\n```", "```js\n    function circumference(radius) {\n        return radius * 2 * Math.PI;\n    }\n```", "```js\n    function circumference(radius) {\n        let diameter = radius * 2;\n        return diameter * Math.PI;\n    }\n```", "```js\n        const currentDate = moment().format(\"YYYY/MM/DD\");\n    ```", "```js\n        const employee = {\n            employeeFirstName: \"Daniel\",\n            employeenLastName: \"Rosenbaum\",\n            employeeActive: true\n        };\n        function fireEmployee(employee) {\n            employee.employeeActive = false;\n        }\n    ```", "```js\n        const employee = {\n            firstName: \"John\",\n            lastName: \"Smith\",\n            active: true\n        };\n        function fireEmployee(employee) {\n            employee.active = false;\n        }\n    ```", "```js\n        function phoneSubscribers(subscribers) {\n            subscribers.forEach(subscriber => {\n                const subscriberRecord = database.lookup(subscriber);\n                if (subscriberRecord.isActive()) {\n                    phoneSubscriber(subscriber);\n                }\n            });\n        }\n    ```", "```js\n        function phoneActiveSubscribers(subscribers) {\n            clients.filter(isActiveSubscriber).forEach(phone);\n        }\n        function isActiveSubscriber(subscriber) {\n            const subscriberRecord = database.lookup(subscriber);\n            return subscriberRecord.isActive();\n        }\n    ```", "```js\n        function addToDate(date, month) {\n          // ...\n        }\n        const date = new Date();\n        // It's hard to tell from the function name what is added\n        addToDate(date, 1);\n    ```", "```js\n        function addMonthToDate(month, date) {\n          // ...\n        }\n        const date = new Date();\n        addMonthToDate(1, date);\n    ```", "```js\n        function createFile(name, temp) {\n          if (temp) {\n            fs.create(`./temp/${name}`);\n          } else {\n            fs.create(name);\n          }\n        }\n    ```", "```js\n        function createFile(name) {\n          fs.create(name);\n        }\n        function createTempFile(name) {\n          createFile(`./temp/${name}`);\n        }\n    ```", "```js\n        let playerX = 45, playerY = 100;\n        const moveRight = (numSlots) => {\n          playerX += numSlots;\n        }\n        moveRight(5);\n    ```", "```js\n        let playerX = 45, playerY=100;\n        const moveRight = (playerX, numSlots) => playerX + numSlots;\n        playerX = moveRight(playerX, 5);\n    ```", "```js\n    if (serviceCall.state === \"loading\" && isEmpty(result)) {\n        // ...\n    }\n    ```", "```js\n    function shouldShowSpinner(serviceCall, result) {\n        return serviceCall.state === \"loading\" && isEmpty(result);\n    }\n    if (shouldShowSpinner(serviceCall, result)) {\n        // ...\n    }\n    ```", "```js\n        /*jslint\n            single\n        */\n    ```", "```js\nactivity_original_code.html\n1 <html>\n2 <head>\n3 <meta charset=\"utf-8\"/>\n4 </head>\n5 <body>\n5 <span id=\"error\" style=\"color: red\"></span>\n6 <table>\n7   <tr>\n8     <td># of hours:</td>\n9     <td><input id=\"numHours\" /></td>\n10   </tr>\n11   <tr>\n12     <td>Pay rate per hour:</td>\n13     <td><input id=\"payRate\" /></td>\n14     <td>(in ####.## format)</td>\n15   </tr>\n```"]