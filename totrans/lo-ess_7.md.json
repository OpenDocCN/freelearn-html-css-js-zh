["```js\nnpm install -g grunt-cli grunt-contrib-connect\n```", "```js\ngrunt connect\n```", "```js\ndefine([], function() {\n    return function(coll, filter) {\n        return _(coll)\n            .filter(filter)\n            .reduce(function(result, item) {\n                return result + item.age;\n            }, 0) / _.size(coll);\n    };\n});\n```", "```js\nvar collection = [\n    { name: 'Frederick', age: 37 },\n    { name: 'Tasha', age: 45 },\n    { name: 'Lisa', age: 33 },\n    { name: 'Michael', age: 41 }\n];\n\nrequire([ 'modules/average-age' ], function(averageAge) {\n    averageAge(collection);\n    // → 39\n});\n```", "```js\ndefine([ 'lodash' ], function(_) {\n    return function(coll) {\n        return _(coll)\n            .sortBy(function(item) {\n                return item.first + '' + item.last;\n            });\n    };\n});\n```", "```js\nvar collection = [\n    { first: 'Georgia', last: 'Todd' },\n    { first: 'Andrea', last: 'Gretchen' },\n    { first: 'Ruben', last: 'Green' },\n    { first: 'Johnny', last: 'Tucker' }\n];\n\nrequire([ 'modules/sort-name' ], function(sortName) {\n    sortName(collection).value();\n    // →\n    // [\n    //   { first: \"Andrea\", last: \"Gretchen\" },\n    //   { first: \"Georgia\", last: \"Todd\" },\n    //   { first: \"Johnny\", last: \"Tucker\" },\n    //   { first: \"Ruben\", last: \"Green\" }\n    // ]\n});\n```", "```js\nrequire.config({\n    paths: {\n        lodash: 'lib/lodash'\n    },\n    shim: {\n        lodash: { exports: '_' }\n    }\n});\n```", "```js\nfunction Person(first, last) {\n    this.first = first;\n    this.last = last;\n}\n\nPerson.prototype.name = function() {\n    return this.first + '' + this.last;\n}\n\nvar collection = [\n    new Person('Douglas', 'Wright'),\n    new Person('Tracy', 'Wilson'),\n    new Person('Ken', 'Phelps'),\n    new Person('Meredith', 'Simmons')\n];\n\nrequire([ 'lib/lodash-amd/collection' ], function(_) {\n    _.invoke(collection, 'name');\n    // →\n    // [\n    //   \"Douglas Wright\",\n    //   \"Tracy Wilson\",\n    //   \"Ken Phelps\",\n    //   \"Meredith Simmons\"\n    // ]\n});\n```", "```js\nvar collection = [\n    { name: 'Susan', age: 57, enabled: false },\n    { name: 'Marcus', age: 45, enabled: true },\n    { name: 'Ray', age: 25, enabled: false },\n    { name: 'Dora', age: 19, enabled: true }\n];\n\nrequire([\n    'lib/lodash-amd/collection/filter',\n    'lib/lodash-amd/function/partial'\n], function(filter, partial) {\n    function valid(age, item) {\n        return item.enabled && item.age >= age;\n    }\n\n    filter(collection, partial(valid, 25));\n    // → [ { age: 45, enabled: true, name: \"Marcus\" } ]\n\n});\n```", "```js\nvar collection = [\n    { name: 'Allan', age: 29, enabled: false },\n    { name: 'Edward', age: 43, enabled: false },\n    { name: 'Evelyn', age: 39, enabled: true },\n    { name: 'Denise', age: 34, enabled: true }\n];\n\nrequire([ 'lib/lodash-amd/main' ], function(_) {\n    _(collection)\n        .filter('enabled')\n        .sortBy('age')\n        .reverse()\n        .map('name')\n        .value();\n    // → [ \"Evelyn\", \"Denise\" ]\n});\n```", "```js\nvar i = 1000;\nconsole.time('$');\nwhile (i--) {\n    $('li').map(function() {\n        return $(this).html();\n    });\n}\nconsole.timeEnd('$');\ni = 1000;\nconsole.time('_');\nwhile (i--) {\n    _.map($('li'), function(item) {\n        return $(item).html();\n    });\n}\nconsole.timeEnd('_');\n// → \n// $: 64.127ms\n// _: 27.434ms\n```", "```js\nfunction boundFunction(result, item) {\n    return result + this.multiplier * item;\n}\n\nvar scope = { multiplier: 10 },\n    collection = _.range(1, 1000),\n    jQueryBound = $.proxy(boundFunction, scope),\n    lodashBound = _.bind(boundFunction, scope);\n\nconsole.time('$');\nconsole.log(_.reduce(collection, jQueryBound));\nconsole.timeEnd('$');\n\nconsole.time('_');\nconsole.log(_.reduce(collection, lodashBound));\nconsole.timeEnd('_');\n// → \n// 4994991\n// $: 3.214ms\n// 4994991\n// _: 0.567ms\n```", "```js\nfunction query(coll, filter, sort) {\n    var deferred = $.Deferred(),\n        _coll = _(coll).filter(filter);\n\n    if (sort) {\n        _coll.sortBy(_.isBoolean(sort) ? undefined : sort);\n    }\n\n    if (_.size(coll) > 5000) {\n        _.defer(function() {\n            deferred.resolve(_coll.value());\n        });\n    } else {\n       deferred.resolve(_coll.value());\n    }\n\n    return deferred.promise();\n}\n\nvar collection = _.map(_.range(_.random(10000)), function(item) {\n    return {\n        id: item,\n        enabled: !!_.random()\n    };\n}), resultSize;\n\nconsole.log('Collection size: ' + _.size(collection));\nquery(collection, 'enabled', true).done(function(result) {\n    resultSize = _.size(result);\n    console.log('Result size: ' + resultSize);\n});\n\nif (!resultSize) {\n    console.log('Awaiting results...');\n}\n// → \n// Collection size: 9071\n// Awaiting results...\n// Result size: 4635\n```", "```js\nrequire.config({\n    paths: {\n        jquery: 'lib/jquery.min',\n        underscore: 'lib/lodash.backbone.min'\n    },\n    shim: {\n        underscore: { exports: '_' }\n    }\n});\n```", "```js\ndefine([\n    'underscore',\n    'lib/backbone'\n], function(_, Backbone) {\n    return Backbone.Model.extend({\n        parse: function(data) {\n            return _.extend({\n                name: data.first + '' + data.last\n            }, data);\n        }\n    });\n});\n```", "```js\nrequire([ 'modules/backbone-model' ], function(Model) {\n    new Model({\n        first: 'Lance',\n        last: 'Newman'\n    }, { parse: true }).toJSON();\n    // → {name: \"Lance Newman\", first: \"Lance\", last: \"Newman\"}\n});\n```", "```js\nrequire.config({\n    paths: {\n        jquery: 'lib/jquery.min',\n        underscore: 'lib/lodash-amd/main'\n    }\n});\n```", "```js\ndefine([\n    'lib/lodash-amd/object/assign',\n    'lib/backbone'\n], function(assign, Backbone) {\n    return Backbone.Model.extend({\n        parse: function(data) {\n            return assign({\n                name: data.first + '' + data.last\n            }, data);\n        }\n    });\n});\n```", "```js\ndefine([\n    'lib/backbone',\n    'lib/lodash-amd/array/slice',\n    'lib/lodash-amd/array/takeRight',\n    'lib/lodash-amd/array/dropWhile'\n], function(Backbone, slice, takeRight, dropWhile) {\n\n    function extendCollection(func, name) {\n        Backbone.Collection.prototype[name] = function() {\n            var args = slice(arguments);\n            args.unshift(this.models);\n            return func.apply(null, args);\n        }\n    }\n\n    extendCollection(takeRight, 'takeRight');\n    extendCollection(dropWhile, 'dropWhile');\n\n    return Backbone;\n});\n```", "```js\nrequire([\n    'lib/lodash-amd/collection',\n    'modules/backbone-extensions'\n], function(_, Backbone) {\n\n    function name(model) {\n        return model.get('name');\n    }\n\n    var collection = new Backbone.Collection([\n        { name: 'Frank' },\n        { name: 'Darryl' },\n        { name: 'Stacey' },\n        { name: 'Robin' }\n    ], { comparator: name });\n\n    _.map(collection.takeRight(2), name );\n    // → [ \"Robin\", \"Stacey\" ]\n\n    _.map(collection.dropWhile(function(model, index, coll) {\n        return index < (coll.length - 2);\n    }), name);\n    // → [ \"Robin\", \"Stacey\" ]\n\n});\n```", "```js\nnpm install -g lodash\n\n```", "```js\nnode -e \"require('lodash');\"\n\n```", "```js\nvar _ = require('lodash'),\n    args = _(process.argv),\n    input;\n\nif (args.size() < 3) {\n    console.error('Missing input');\n    process.exit(1);\n} else if (args.contains('-h')) {\n    console.info('Sorts the comma-separated input');\n    console.info('Use \"-d\" for descending order');\n    process.exit(0);\n}\n\ninput = _(process.argv[2].replace(/\\s?(,)\\s?/g, '$1').split(','))\n    .sortBy();\n\nif (args.contains('-d')) {\n    input.reverse();\n}\n\nconsole.log(input.join(', '));\n```", "```js\nlodash modularize include=function\n\n```"]