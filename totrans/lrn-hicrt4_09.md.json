["```js\n<script \n src=\"img/highcharts-3d.js\"></script>\n```", "```js\n             chart: {\n                renderTo: 'container',\n                type: 'column',\n                borderWidth: 1,\n                options3d: {\n                    alpha: 0,\n                    beta: 0,\n                    enabled: true\n                }\n            },\n```", "```js\n            yAxis: {\n                title: {\n                    text: 'No. of Patents',\n                    x: 35,\n                    y: -80\n                }\n            },\n```", "```js\n        var chart = new Highcharts.Chart({\n              chart: {\n                    ....,\n                    marginTop: 105,\n                    marginLeft: 35,\n                    spacingBottom: 25\n              }\n              ....\n```", "```js\n                options3d: {\n                    alpha: 30,\n                    beta: 30,\n                    enabled: true,\n                    viewDistance: 100,\n                    depth: 25\n                }\n```", "```js\n                   options3d: {\n                       ....,\n                       frame: {\n                            back: {\n                                color: '#A3A3C2',\n                                size: 4\n                            },\n                            bottom: {\n                                color: '#DBB8FF',\n                                size: 10\n                            },\n                            side: {\n                                color: '#8099E6',\n                                size: 2\n                            }\n                       }\n                   }\n```", "```js\n                options3d: {\n                    alpha: 10,\n                    beta: 30,\n                    enabled: true\n                }\n```", "```js\n            series: [{\n                name: 'UK',\n                data:  ....,\n                stack: 'Europe'\n            }, {\n                name: 'Germany',\n                data:  ....,\n               stack: 'Europe'\n            }, {\n                name: 'S.Korea',\n                data:  ....,\n                stack: 'Asia',\n                depth: 12\n            }, {\n                name: 'Japan',\n                data: ....,\n                stack: 'Asia',\n                depth: 12\n            }]\n```", "```js\n           series: [{\n                name: 'UK',\n                data:  ....,\n                stack: 'Europe',\n            }, {\n                name: 'Germany',\n                data:  ....,\n               stack: 'Europe',\n            }, {\n                name: 'S.Korea',\n                data:  ....,\n                stack: 'Asia',\n                depth: 12,\n                groupZPadding: 14\n            }, {\n                name: 'Japan',\n                data: ....,\n                stack: 'Asia',\n                depth: 12,\n                groupZPadding: 14\n            }]\n```", "```js\n            series: [{\n                data: [ 1500 ],\n                depth: 5,\n                groupZPadding: 95\n            }, {\n                data: [ 1300 ],\n                depth: 10,\n                groupZPadding: 90\n            }, {\n                data: [ 1100 ],\n                depth: 15,\n                groupZPadding: 85\n            }, {\n```", "```js\n            plotOptions: {\n                column: {\n                    pointPadding: 0,\n                    groupPadding: 0,\n                    color: '#C5542D',\n                    edgeColor: '#953A20'\n                }\n            },\n```", "```js\nHighcharts.getOptions().colors = \n   Highcharts.map(Highcharts.getOptions().colors, function(color)  \n     {\n          return {\n            radialGradient: { cx: 0.5, cy: 0.3, r: 0.7 },\n            stops: [\n                [0, color],\n                [1, Highcharts.Color(color).\n                 brighten(-0.3).get('rgb')] // darken\n            ]\n        };\n   });\n```", "```js\nchart: {\n    ....,\n    options3d: {\n        alpha: 55,\n        beta: 0,\n        enabled: true\n    }\n   },\n....,\nplotOptions: {\n     pie: {\n         center: [ '50%', '45%' ],\n         depth: 50,\n         slicedOffset: 40,\n         startAngle: 30,\n         dataLabels: {\n             ....\n         },\n         size: \"120%\"\n     }\n},\nseries: [{\n    type: 'pie',\n    data: [ { \n        name: 'Sleep', \n        y: 8.74, \n        sliced: true, \n    }, { \n        name: 'Working and work-related activities', \n        y: 3.46 \n    }, {\n        ....\n    }]\n}]\n```", "```js\n     chart: {\n         ....\n         options3d: {\n             alpha: 50,\n             beta: 40,\n             enabled: true\n         }\n     },\n     ....,\n     plotOptions: {\n         pie: {\n             depth: 40,\n             center: [ '50%', '44%' ],\n             slicedOffset: 15,\n             innerSize: '50%',\n             startAngle: 270,\n             size: \"110%\",\n             ....\n         }\n     },\n     series: [{\n         type: 'pie',\n         data: [{ \n             name: 'Swiss & UK', \n             y: 790,\n             sliced: true, \n             // color, dataLabel decorations\n             ....\n         }, { \n             name: 'Australia, U.S & South Africa', \n             y: 401,\n             ....\n            }, {\n             ....\n         }]\n     }]\n```", "```js\n            series: [{\n                name: 'China',\n                data: [ [ 2000, 23.32, 20.91 ], \n                        [ 2001, 22.6, 20.48 ], \n                        [ 2002, 25.13, 22.56 ], \n                        ....,\n```", "```js\n  var orgColors = Highcharts.getOptions().colors;\n  // Apply color shading to Highcharts.getOptions().colors\n  ....\n  chart: ....,\n  ....,\n  tooltip: {\n   crosshairs: [ { width: 2, color: '#B84DDB' },\n                 { width: 2, color: '#B84DDB' },\n                 { width: 2, color: '#B84DDB' } ],\n   formatter: function() {\n       var color = orgColors[this.series.index];\n       return '<span style=\"color:' + color + '\">\\u25CF</span> ' + \n              this.series.name + ' - In <b>' + this.point.x + \n              '</b>: Exports: <b>' + this.point.y + \n              '%</b>, Imports: <b>' + this.point.z + '%</b><br/>';\n   },\n   shape: 'square',\n   positioner: function(width, height, point) {\n       var x = chart.plotLeft + chart.plotWidth - width + 20;\n       var y = 40;\n       return { x: x, y: y };\n   } \n  }\n```", "```js\n              options3d: {\n                  enabled: true,\n                  alpha: 25,\n                  beta: 30,\n                  depth: 30,\n                  viewDistance: 100\n              },\n```", "```js\n                plotOptions: {\n                    pie: {\n                       depth: 30,\n                       ....,\n```", "```js\nchart: {\n    renderTo: 'container',\n    ....,\n    events: {\n        drilldown: function(e) {\n           .... \n           if (e.point.name == 'Internet Explorer') {\n               // Create the '9%' string in the center of \n               // the donut chart\n               pTxt = chart.renderer.text('9%', \n                  (chart.plotWidth / 2) + chart.plotLeft - 25, \n                     (chart.plotHeight / 2) + chart.plotTop + 25). \n               css({\n                  // font size, color and family\n                  ....,\n                  '-webkit-transform': \n                        'perspective(600) rotateY(50deg)'\n               }).add();\n\n               chart.options.chart.options3d.alpha = 0;                          \n               chart.options.chart.options3d.beta = 40;\n           }\n        },\n        drillup: function() {\n            // Revert to original orientation\n            chart.options.chart.options3d.alpha = 25;\n            chart.options.chart.options3d.beta = 30;\n            ....\n        }\n    } \n```", "```js\n    $(function () {\n        $(document).ready(function() {\n            document.title = \"Highcharts \" + Highcharts.version;\n\n            var chart = new Highcharts.Chart({\n                ....\n            });\n            // Add mouse events for rotation\n            $(chart.container).bind('mousedown.hc touchstart.hc', \n              function (e) {\n                e = chart.pointer.normalize(e);\n\n                var posX = e.pageX,\n                    posY = e.pageY,\n                    alpha = chart.options.chart.options3d.alpha,\n                    beta = chart.options.chart.options3d.beta,\n                    newAlpha,\n                    newBeta,\n                    sensitivity = 5; // lower is more sensitive\n\n                $(document).bind({\n                    'mousemove.hc touchdrag.hc': \n                       function (e) {\n                          // Run beta\n                          newBeta = \n                            beta + (posX - e.pageX) / sensitivity;\n                          newBeta = \n                            Math.min(100, Math.max(-100,\n                                     newBeta));\n                          chart.options.chart.options3d.beta =              \n                            newBeta;\n\n                        // Run alpha\n                        newAlpha = \n                           alpha + (e.pageY - posY) / sensitivity;\n                        newAlpha = Math.min(100, Math.max(-100,\n                                    newAlpha));\n                        chart.options.chart.options3d.alpha =\n                            newAlpha;\n\n                        // Update the alpha, beta and viewDistance \n                        // value in subtitle continuously\n                        var subtitle = \"alpha: \" + \n                            Highcharts.numberFormat(newAlpha, 1) + \n                            \", beta: \" + \n                            Highcharts.numberFormat(newBeta, 1) + \n                            \", viewDistance: \" +    \n                            Highcharts.numberFormat(\n                  chart.options.chart.options3d.viewDistance, 1);\n                        chart.setTitle(null, \n                               { text: subtitle }, false);\n\n                        chart.redraw(false);\n                    },              \n\n                    'mouseup touchend': function () { \n                        $(document).unbind('.hc');\n                    }\n                });\n            });\n```", "```js\n// Add mouse events for zooming in and out view distance\n$(chart.container).bind('mousewheel', \n     function (e) {\n         e = chart.pointer.normalize(e);\n         var sensitivity = 10; // lower is more sensitive\n         var distance = \n             chart.options.chart.options3d.viewDistance;\n\n         distance += e.deltaY / sensitivity;\n         distance = Math.min(100, Math.max(1, distance));\n\n         chart.options.chart.options3d.viewDistance = distance;\n\n         var subtitle = \"alpha: \" + \n              Highcharts.numberFormat(\n              chart.options.chart.options3d.alpha, 1) +\n                \", beta: \" + \n              Highcharts.numberFormat(\n             chart.options.chart.options3d.beta, 1) +\n                \", viewDistance: \" + \n              Highcharts.numberFormat(distance, 1);\n\n            chart.setTitle(null, { text: subtitle }, false);\n\n            chart.redraw(false);\n     });\n```"]