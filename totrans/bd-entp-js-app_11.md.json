["```js\nlanguage: node_js\n```", "```js\nlanguage: node_js\nnode_js:\n  - \"node\"\n  - \"lts/*\"\n  - \"8\"\n  - \"8.11.4\"\n```", "```js\nservices:\n  - elasticsearch\n```", "```js\nbefore_install:\n  - curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.2.deb\n  - sudo dpkg -i --force-confnew elasticsearch-6.3.2.deb\n  - sudo service elasticsearch restart\n```", "```js\nbefore_script:\n  - sleep 10\n```", "```js\nenv:\n  global:\n    - NODE_ENV=test\n    - SERVER_PROTOCOL=http\n    - SERVER_HOSTNAME=localhost\n    - SERVER_PORT=8888\n    - ELASTICSEARCH_PROTOCOL=http\n    - ELASTICSEARCH_HOSTNAME=localhost\n    - ELASTICSEARCH_PORT=9200\n    - ELASTICSEARCH_INDEX=test\n```", "```js\nlanguage: node_js\nnode_js:\n  - \"node\"\n  - \"lts/*\"\n  - \"8\"\n  - \"8.11.4\"\nservices:\n  - elasticsearch\nbefore_install:\n  - curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.2.deb\n  - sudo dpkg -i --force-confnew elasticsearch-6.3.2.deb\n  - sudo service elasticsearch restart\nbefore_script:\n  - sleep 10\nenv:\n  global:\n    - NODE_ENV=test\n    - SERVER_PROTOCOL=http\n    - SERVER_HOSTNAME=localhost\n    - SERVER_PORT=8888\n    - ELASTICSEARCH_PROTOCOL=http\n    - ELASTICSEARCH_HOSTNAME=localhost\n    - ELASTICSEARCH_PORT=9200\n    - ELASTICSEARCH_INDEX=test\n```", "```js\npipeline {\n  agent { docker 'node:6.3' }\n  stages {\n    stage('build') {\n      steps {\n        sh 'npm --version'\n      }\n    }\n  }\n}\n```", "```js\nroot@ci:# adduser jenkins\nroot@ci:# usermod -aG sudo jenkins\n```", "```js\nroot@ci:# cp -R /root/.ssh/ /home/jenkins/\nroot@ci:# chown -R jenkins:jenkins /home/jenkins/.ssh/\n```", "```js\nPermitRootLogin no\nPasswordAuthentication no\n```", "```js\nroot@ci:# systemctl reload ssh.service\n```", "```js\njenkins@ci:# sudo dpkg-reconfigure tzdata\njenkins@ci:# sudo apt update\njenkins@ci:# sudo apt install ntp\n```", "```js\njenkins@ci:# sudo apt update && sudo apt install -y openjdk-8-jdk\njenkins@ci:# echo 'JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"' | sudo tee --append /etc/environment > /dev/null\n```", "```js\njenkins@ci:$ wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -\n```", "```js\njenkins@ci:$ echo 'deb https://pkg.jenkins.io/debian-stable binary/' | sudo tee /etc/apt/sources.list.d/jenkins.list\n```", "```js\njenkins@ci:$ sudo apt update && sudo apt -y install jenkins\n```", "```js\njenkins@ci:$ echo \"deb http://nginx.org/packages/ubuntu/ bionic nginx\" | sudo tee -a /etc/apt/sources.list.d/nginx.list\njenkins@ci:$ echo \"deb-src http://nginx.org/packages/ubuntu/ bionic nginx\" | sudo tee -a /etc/apt/sources.list.d/nginx.list\njenkins@ci:$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62\njenkins@ci:$ sudo apt update\njenkins@ci:$ sudo apt install nginx\njenkins@ci:$ sudo mkdir /etc/nginx/sites-available /etc/nginx/sites-enabled\n```", "```js\ninclude /etc/nginx/conf.d/*.conf;\ninclude /etc/nginx/sites-enabled/*;\n```", "```js\nserver {\n    listen 80 default_server;\n    server_name jenkins.hobnob.social;\n    root /var/cache/jenkins/war;\n    access_log /var/log/nginx/jenkins/access.log;\n    error_log /var/log/nginx/jenkins/error.log;\n    ignore_invalid_headers off;\n    location ~ \"^/static/[0-9a-fA-F]{8}\\/(.*)$\" {\n      rewrite \"^/static/[0-9a-fA-F]{8}\\/(.*)\" /$1 last;\n    }\n    location /userContent {\n      root /var/lib/jenkins/;\n      if (!-f $request_filename){\n        rewrite (.*) /$1 last;\n        break;\n      }\n      sendfile on;\n    }\n    location @jenkins {\n      sendfile off;\n      proxy_pass http://localhost:8080;\n proxy_redirect default;\n      proxy_http_version 1.1;\n\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_max_temp_file_size 0;\n\n      client_max_body_size 10m;\n      client_body_buffer_size 128k;\n\n      proxy_connect_timeout 90;\n      proxy_send_timeout 90;\n      proxy_read_timeout 90;\n      proxy_buffering off;\n      proxy_request_buffering off;\n      proxy_set_header Connection \"\";\n    }\n    location / {\n      try_files $uri @jenkins;\n    }\n}\n```", "```js\njenkins@ci:$ sudo ln -s /etc/nginx/sites-available/jenkins.hobnob.social /etc/nginx/sites-enabled/\n```", "```js\njenkins@ci:$ sudo nginx -t\njenkins@ci:$ sudo systemctl start nginx.service\n```", "```js\njenkins@ci:$ sudo ufw allow OpenSSH\njenkins@ci:$ sudo ufw allow 80/tcp\njenkins@ci:$ sudo ufw enable\n```", "```js\n#!/usr/bin/env groovy\n\npipeline {\n    agent {\n        docker {\n            image 'node'\n            args '-u root'\n        }\n    }\n\n    stages {\n        stage('Build') {\n            steps {\n                echo 'Building...'\n                sh 'npm install'\n            }\n        }\n        stage('Test') {\n            steps {\n                echo 'Testing...'\n                sh 'npm test'\n            }\n        }\n    }\n}\n```", "```js\nnode {\n    checkout scm\n}\n```", "```js\nnode {\n    checkout scm\n    docker.image('docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.2').withRun('-e \"discovery.type=single-node\"') { c ->\n        docker.image('node:8.11.4').inside(\"--link ${c.id}:db\") {\n            withEnv(['SERVER_HOSTNAME=db',\n                     'JENKINS=true',\n                     'NODE_ENV=test',\n                     'SERVER_PROTOCOL=http',\n                     'SERVER_HOSTNAME=localhost',\n                     'SERVER_PORT=8888',\n                     'ELASTICSEARCH_PROTOCOL=http',\n                     'ELASTICSEARCH_HOSTNAME=localhost',\n                     'ELASTICSEARCH_PORT=9200',\n                     'ELASTICSEARCH_INDEX=test']) {\n              stage('Waiting') {\n                sh 'until curl --silent $DB_PORT_9200_TCP_ADDR:$ELASTICSEARCH_PORT -w \"\" -o /dev/null; do sleep 1; done'\n              }\n              stage('Unit Tests') {\n                sh 'ELASTICSEARCH_HOSTNAME=$DB_PORT_9200_TCP_ADDR npm run test:unit'\n              }\n              stage('Integration Tests') {\n                sh 'ELASTICSEARCH_HOSTNAME=$DB_PORT_9200_TCP_ADDR npm run test:integration'\n              }\n              stage('End-to-End (E2E) Tests') {\n                sh 'ELASTICSEARCH_HOSTNAME=$DB_PORT_9200_TCP_ADDR npm run test:e2e'\n              }\n            }\n        }\n    }\n}\n```", "```js\n--link <name or id>:alias\n```", "```js\njenkins@ci:$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\njenkins@ci:$ sudo add-apt-repository \"deb [arch=amd64] \\\n             https://download.docker.com/linux/ubuntu \\\n             $(lsb_release -cs) stable\"\njenkins@ci:$ sudo apt update\njenkins@ci:$ sudo apt install -y docker-ce\n```", "```js\njenkins@ci:$ sudo usermod -aG docker jenkins\n```", "```js\njenkins@ci:$ grep docker /etc/group\ndocker:x:999:jenkins\n```", "```js\njenkins@ci:$ sudo systemctl restart jenkins\n```"]