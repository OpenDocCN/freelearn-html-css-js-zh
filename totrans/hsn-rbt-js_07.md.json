["```js\nlet servo = new five.Servo({\n  controller: \"PCA9685\",\n  pin: 0 \n});\n\n```", "```js\nservo.to(degree)\nservo.min()\nservo.max()\nservo.home() \nservo.center()\n```", "```js\nservo.sweep() // goes 0-180 and back, then repeats\nservo.sweep(minDegree, maxDegree) // goes min to max and back, then repeats\n```", "```js\nservo.stop()\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\n\nconst board = new five.Board({\n io: new Raspi()\n})\n\nboard.on('ready', () => {\n let servo = new five.Servo({\n controller: \"PCA9685\",\n pin: 0\n })\n\n servo.sweep()\n})\n```", "```js\nnpm init -y\nnpm i --save johnny-five raspi-io\nsudo node single-servo.js\n```", "```js\nlet servos = new five.Servos([servoOne, servoTwo])\n```", "```js\nservoOne.to(0) // Sets servoOne to 0 degrees\nservoTwo.to(180) // Sets servoTwo to 180 degrees\nservos.center() // Sets both servos to 90 degrees\n```", "```js\nlet servoOne = new five.Servo({\n  controller: \"PCA9685\",\n  pin: 0\n})\n\nlet servoTwo = new five.Servo({\n  controller: \"PCA9685\",\n  pin: 1\n})\n```", "```js\nlet servos = new five.Servos([servoOne, servoTwo])\n```", "```js\nboard.repl.inject({\n  servoOne,\n  servoTwo,\n  servos\n})\n```", "```js\nsudo node servos-repl.js\n```", "```js\nservoOne.to(0) \nservoTwo.to(180)\nservos.center()\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\n\nconst board = new five.Board({\n  io: new Raspi()\n})\n\nboard.on('ready', () => {\n})\n```", "```js\nlet servo = new five.Servo({\n  controller: \"PCA9685\",\n  pin: 0\n})\n\nlet lightSensor = new five.Light({\n  controller: 'TLS2561'\n})\n```", "```js\nlightSensor.on('change', function(){\n  servo.to(this.scaleTo([0, 180]))\n})\n```", "```js\nsudo node light-sensor.js\n```", "```js\nlet continuousServo = new five.Servo.Continuous({\n  controller: \"PCA9685\",\n  pin: 0\n})\n```", "```js\nServo.Continuous.cw([speed of 0-1]) // turns the servo clockwise\nServo.Continuous.ccw([speed of 0-1]) // turns the servo counter-clockwise\nServo.Continuous.stop() // stops the servo\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\n\nconst board = new five.Board({\n  io: new Raspi()\n})\n\nboard.on('ready', () => {\n})\n```", "```js\nlet continuousServo = new five.Servo.Continuous({\n  controller: \"PCA9685\",\n  pin: 0\n})\n```", "```js\nboard.repl.inject({\n  continuousServo\n})\n```", "```js\nsudo node continuous-servo-repl.js\n```", "```js\ncontinuousServo.cw(1) // see how fast it can go!\ncontinuousServo.ccw(.5) // it changes directions near-instantaneously!\ncontinuousServo.stop() // and stops very quickly, too!\n```"]