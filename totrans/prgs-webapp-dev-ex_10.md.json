["```js\nnpm install -g pwabuilder \n```", "```js\n>npm install -g Lighthouse \n```", "```js\n>Lighthouse https://tickets.love2dev.com \n```", "```js\n>Lighthouse https://tickets.love2dev.com --output json --output html --output-path ./myfile.json \n```", "```js\n{ \n    \"extends\": \"Lighthouse:default\", \n    \"settings\": { \n        \"onlyCategories\": [\"performance\", \"pwa\"] \n    } \n} \n```", "```js\n>Lighthouse https://tickets.love2dev.com --config-path=./custom.Lighthouse.config.js --output json --output html --output-path ./pwa-tickets.json \n```", "```js\nconst Lighthouse = require(\"Lighthouse\"), \n   chromeLauncher = require('chrome-launcher'); \n```", "```js\nfunction launchChromeAndRunLighthouse(url, flags, config = null) { \n\n    return chromeLauncher.launch({ \n        chromeFlags: flags.chromeFlags \n    }).then(chrome => { \n\n        flags.port = chrome.port; \n        return Lighthouse(url, flags, config).then(results => { \n        // The gathered artifacts are typically removed as they can be         \n        //quite large (~50MB+) \n            delete results.artifacts; \n            return chrome.kill().then(() => results); \n        }); \n    }); \n} \n```", "```js\nnpm install -g sonarwhal \n```", "```js\n> sonarwhal --init \n```", "```js\n{ \n    \"extends\": [ \n        \"web-recommended\" \n    ] \n} \n```", "```js\n{ \n    \"connector\": { \n        \"name\": \"jsdom\", \n        \"options\": { \n            \"waitFor\": 5000 \n        } \n    }, \n    \"formatters\": [ \n        \"summary\" \n    ], \n    \"rules\": { \n        \"axe\": \"error\", \n        \"content-type\": \"error\", \n        \"disown-opener\": \"error\", \n        \"highest-available-document-mode\": \"error\", \n        \"html-checker\": \"error\", \n        \"http-cache\": \"error\", \n        \"http-compression\": \"error\", \n        \"meta-charset-utf-8\": \"error\", \n        \"meta-viewport\": \"error\", \n        \"no-bom\": \"error\", \n        \"no-disallowed-headers\": \"error\", \n        \"no-friendly-error-pages\": \"error\", \n        \"no-html-only-headers\": \"error\", \n        \"no-http-redirects\": \"error\", \n        \"no-protocol-relative-urls\": \"error\", \n        \"no-vulnerable-javascript-libraries\": \"error\", \n        \"sri\": \"error\", \n        \"ssllabs\": \"error\", \n        \"strict-transport-security\": \"error\", \n        \"validate-set-cookie-header\": \"error\", \n        \"x-content-type-options\": \"error\" \n    }, \n    \"rulesTimeout\": 120000 \n} \n```", "```js\n{ \n    \"extends\": [ \n        \"config1\", \"config2\" \n    ] \n} \n```", "```js\n{ \n    \"connector\": { \n        \"name\": \"edge\" \n    }, \n    \"formatters\": [\"json\"], \n    \"rules\": { \n        \"rule1\": \"error\", \n        \"rule2\": \"warning\", \n        \"rule3\": \"off\" \n    }, \n    \"rulesTimeout\": 120000 \n    ... \n} \n```", "```js\n> sonarwhal https://tickets.love2dev.com\n```", "```js\n> npm install -g workbox-cli \n```", "```js\n> workbox wizard  \n```", "```js\nmodule.exports = { \n  \"globDirectory\": \"C:\\Source Code\\PWA\\pwa-ticket\\www\\public\", \n  \"globPatterns\": [ \n    \"**/*.{html,css,eot,svg,ttf,woff,woff2,png,txt,jpg,json,js,gif,manifest}\" \n  ], \n  \"swDest\": \"C:\\Source Code\\PWA\\pwa-ticket\\www\\public\\sw.js\" \n}; \n```", "```js\nself.importScripts(\"https://storage.googleapis.com/workbox-cdn/releases/3.2.0/workbox-sw.js\", \n    \"js/libs/2ae25530a0dd28f30ca44f5182f0de61.min.js\", \n    \"js/app/libs/e392a867bee507b90b366637460259aa.min.js\", \n    \"sw/sw-push-manager.js\" \n); \n```", "```js\nself.importScripts(\"sw/workbox-v3.2.0/workbox-sw.js\", \n    \"js/libs/2ae25530a0dd28f30ca44f5182f0de61.min.js\", \n    \"js/app/libs/e392a867bee507b90b366637460259aa.min.js\", \n    \"sw/sw-push-manager.js\" \n); \n```", "```js\nworkbox.setConfig({ \n    debug: false \n  }); \n```", "```js\nworkbox.setConfig({ \n    debug: false, \n    modulePathPrefix: \"sw/ workbox-v3.2.0/\" \n  }); \n```", "```js\nworkbox.skipWaiting(); \nworkbox.clientsClaim(); \n```", "```js\nworkbox.precaching.precacheAndRoute([ \n    \"/\", \n    \"img/pwa-tickets-logo-320x155.png\", \n    \"js/app/512df4f42ca96bc22908ff3a84431452.min.js\", \n    \"js/libs/ca901f49ff220b077f4252d2f1140c68.min.js\", \n     //...the remaining URLs to pre-cache \n    \"cart/\" \n]); \n```", "```js\nworkbox.precaching.precacheAndRoute([ \n     ... \n  { \n    \"url\": \"error.html\", \n    \"revision\": \"24d4cb67d5da47a373764712eecb7d86\" \n  }, \n  { \n    \"url\": \"event/index.html\", \n    \"revision\": \"7127ba50c2b316ccbc33f2fad868c6a7\" \n  }, \n  { \n    \"url\": \"events/index.html\", \n    \"revision\": \"6702e4d3b1554047e8655696875b396d\" \n  }, \n  { \n    \"url\": \"fallback/index.html\", \n    \"revision\": \"d03fa5c7471ec4c84ca8bf8fefaddc2b\" \n  }, \n    .... \n]); \n```", "```js\n> workbox injectManifest path/to/config.js \n```", "```js\nworkbox.precaching.precacheAndRoute([]); \n```", "```js\nworkbox.precaching.precacheAndRoute([ \n     ... \n        \"js/app/libs/e392a867bee507b90b366637460259aa.min.js\", \n        \"js/app/libs/8fd5a965abed65cd11ef13e6a3408641.min.js\", \n        \"js/app/pages/5b4d14af61fc40df7d6bd62f3e2a86a4.min.js\", \n        \"js/app/pages/8684e75675485e7af7aab5ca10cc8da5.min.js\", \n        \"js/app/pages/88ea734e66b98120a5b835a5dfdf8f6c.min.js\", \n  { \n    \"url\": \"error.html\", \n    \"revision\": \"24d4cb67d5da47a373764712eecb7d86\" \n  }, \n  { \n    \"url\": \"event/index.html\", \n    \"revision\": \"7127ba50c2b316ccbc33f2fad868c6a7\" \n  }, \n  { \n    \"url\": \"events/index.html\", \n    \"revision\": \"6702e4d3b1554047e8655696875b396d\" \n  }, \n  { \n    \"url\": \"fallback/index.html\", \n    \"revision\": \"d03fa5c7471ec4c84ca8bf8fefaddc2b\" \n  }, \n    .... \n]); \n```", "```js\nworkbox.precaching.precache([ \n     ... \n        \"js/app/libs/e392a867bee507b90b366637460259aa.min.js\", \n        \"js/app/libs/8fd5a965abed65cd11ef13e6a3408641.min.js\", \n        \"js/app/pages/5b4d14af61fc40df7d6bd62f3e2a86a4.min.js\", \n        \"js/app/pages/8684e75675485e7af7aab5ca10cc8da5.min.js\", \n        \"js/app/pages/88ea734e66b98120a5b835a5dfdf8f6c.min.js\", \n     ... \n]); \nworkbox.precaching.precache([ \n     ... \n  { \n    \"url\": \"error.html\", \n    \"revision\": \"24d4cb67d5da47a373764712eecb7d86\" \n  }, \n  { \n    \"url\": \"event/index.html\", \n    \"revision\": \"7127ba50c2b316ccbc33f2fad868c6a7\" \n  }, \n  { \n    \"url\": \"events/index.html\", \n    \"revision\": \"6702e4d3b1554047e8655696875b396d\" \n  }, \n  { \n    \"url\": \"fallback/index.html\", \n    \"revision\": \"d03fa5c7471ec4c84ca8bf8fefaddc2b\" \n  }, \n    .... \n]); \n\nworkbox.precaching.andRoute(); \n```", "```js\nmodule.exports = { \n  \"globDirectory\": \"C:\\Source Code\\PWA\\pwa-ticket\\www\\public\", \n  \"globPatterns\": [ \n    \"**/*.{html,eot,svg,ttf,woff,woff2,png,txt,jpg,json,gif,manifest}\" \n  ], \n  \"globIgnores\": [\"qrcodes/*.gif\", \"img/venues/**/*.*\", \"img/people/*.*\", \"meta/**/*.*\",  \n    \"html/pages/*.*\", \"css/webfonts/*.*\", \"img/pwa-tickets-logo*.*\", \"sw/cache.manifest\"], \n  \"swDest\": \"C:\\Source Code\\PWA\\pwa-ticket\\www\\public\\sw.js\", \n  \"swSrc\": \"C:\\Source Code\\PWA\\pwa-ticket\\www\\public\\sw.src.js\" \n}; \n```", "```js\nconst precacheController = new workbox.precaching.PrecacheController(); \nprecacheController.addToCacheList([ \n    \"/\", \n    \"img/pwa-tickets-logo-320x155.png\", \n    \"js/app/512df4f42ca96bc22908ff3a84431452.min.js\", \n    \"js/libs/ca901f49ff220b077f4252d2f1140c68.min.js\", \n    //... the remaining URLs to pre-cache \n    \"cart/\" \n]); \n\nprecacheController.addToCacheList([ \n  { \n    \"url\": \"html/pages/tickets.html\", \n    \"revision\": \"11c6e0cb67409cf544b162cd6a7ebfbf\" \n  }, \n  { \n    \"url\": \"html/polyfils.html\", \n    \"revision\": \"337170ad8814e7571a7b8ddb8831ae04\" \n  } \n]); \n\nself.addEventListener('install', (event) => { \n  event.waitUntil(precacheController.install()); \n}); \nself.addEventListener('activate', (event) => { \n  event.waitUntil(precacheController.cleanup()); \n}); \nself.addEventListener('fetch', (event) => { \n  event.respondWith(caches.match(event.request).then(...)); \n}); \n```", "```js\nworkbox.routing.registerRoute(matchCb, handlerCb); \n```", "```js\nconst routeCallback = ({url, event}) => { \n  //do something here \n}; \n```", "```js\nconst EventsMatch = ({url, event}) => { \n  return (url.pathname.includes(\"/event/\"); \n}; \n```", "```js\nconst eventsHandler = ({url, event, params}) => { \n            return responseManager.fetchAndRenderResponseCache({ \n                request: event.request, \n                pageURL: rule.options.pageURL, \n                template: rule.options.template, \n                api: rule.options.api, \n                cacheName: cacheName     \n            }) \n                .then(response => { \n                    invalidationManager.cacheCleanUp(cacheName); \n                    return response; \n                }); \n}; \n```", "```js\n  workbox.routing.setDefaultHandler(workbox.strategies.cacheFirst()); \n```", "```js\nworkbox.routing.setCatchHandler(({url, event, params}) => { \n  //create a custom response to provide a proper response for the error \n}); \n```", "```js\nself.addEventListener('fetch', (event) => { \n  if (event.request.url === '/my-special-url/') { \n    const staleWhileRevalidate = new workbox.strategies.StaleWhileRevalidate(); \n    event.respondWith(staleWhileRevalidate.handle({event})); \n  } \n}); \n```", "```js\nworkbox.routing.registerRoute( \n    new RegExp('/event/'), \n    workbox.strategies.cacheFirst({ \n        cacheName: 'events' \n    }) \n); \n```", "```js\nworkbox.routing.registerRoute( \n    new RegExp('/event/'), \n    workbox.strategies.cacheFirst({ \n        cacheName: 'events', \n        plugins: [ \n           new workbox.expiration.Plugin({ \n             maxEntries: 20, \n             maxAgeSeconds: 24 * 60 * 60  //1 day \n           }) \n         ] \n    }) \n); \n```", "```js\nworkbox.routing.registerRoute( \n    new RegExp('/event/'), \n    workbox.strategies.cacheFirst({ \n        cacheName: 'events', \n        plugins: [ \n           new workbox.expiration.Plugin({ \n             maxEntries: 20, \n             maxAgeSeconds: 24 * 60 * 60  //1 day \n           }), \n           new workbox.backgroundSync.Plugin('events', { \n             maxRetentionTime: 24 * 60 // Retry for max of 24 Hours \n           }); \n         ] \n    }) \n); \n```", "```js\nworkbox.googleAnalytics.initialize(); \n```", "```js\nworkbox.googleAnalytics.initialize({ \n  parameterOverrides: { \n    cd1: 'offline', \n  } \n}); \n```"]