["```js\nExt.define('MyApp.view.quotation.List', {\n    ....\n    initComponent: function() {\n        ....\n        Ext.apply(me, {\n            tbar: [{\n                ....\n            }, '-', {\n                text     : 'Import',\n                action   : 'import'\n            }, {\n                text     : 'Export',\n                action   : 'export'\n            }, '-', {\n            ....\n```", "```js\nExt.define('MyApp.controller.quotation.List', {\n    ....\n    init: function() {\n        var me = this;\n        me.control({\n            ....\n            'myapp-quotation-list button[action=import]': {\n                'click': me.onImport\n            },\n            'myapp-quotation-list button[action=export]': {\n                'click': me.onExport\n            }\n        });\n    },\n    onImport: function() {\n        // import\n    },\n    onExport: function() {\n        // export\n    },\n```", "```js\nonExport: function() {\n    location.href='quotation-export.php';\n},\n```", "```js\nExt.define('MyApp.controller.quotation.Quotation', {\n    ....\n    init: function() {\n        ....\n        me.control({\n            'myapp-quotation-list': {\n                ....\n                'myapp-import': function() {\n                    location.href = '#!/quotation/import';\n                }\n            }\n        });\n```", "```js\nExt.define('MyApp.controller.quotation.List', {\n    ....\n    init: function() {\n        var me = this;\n        me.control({\n            ....\n            'myapp-quotation-list button[action=import]': {\n                'click': me.onImport\n            },\n            'myapp-quotation-list button[action=export]': {\n                'click': me.onExport\n            }\n        });\n    },\n    onImport: function() {\n        var me          = this,\n            listView    = me.getListView();\n\n        listView.fireEvent('myapp-import');\n    },\n    ....\n```", "```js\n....\nonShow: function(p) {\n    var me = this,\n        o = {},\n        hash = location.hash,\n        layout = p.getLayout(),\n        listView = me.getListView(),\n        editView = me.getEditView(),\n        params;\n    params = hash.substr(('#!/' + me.screenName + '/').length);\n    if(params === 'new') {\n        o.id = params;\n    } else {\n        if(!params || !Ext.isString(params)) {\n            params = '';\n        }\n        params = params.split('/');\n        Ext.iterate(params, function(text) {\n            if(!text || !Ext.isString(text)) {\n                text = '';\n            }\n            text = text.split('=');\n            o[text[0]] = text[1];\n        });\n    }\n    me.requestParams = params = o;\n\n    if(params.hasOwnProperty('import')) {\n        // Show Import\n        layout.setActiveItem(2);\n    } else if(params.id === 'new' || Number(params.id)) {\n        // Show Edit\n        layout.setActiveItem(1);\n    } else {\n        // Show List\n        layout.setActiveItem(0);\n    }\n    // fire event 'myapp-show'\n    layout.activeItem.fireEvent('myapp-show', layout.activeItem, p, \n    params);\n},\n....\n```", "```js\nExt.define('MyApp.view.quotation.Import', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-quotation-import',\n    itemId: 'screen-quotation-import',\n    initComponent: function() {\n        var me = this;\n\n        // TopToolbar\n        Ext.apply(me, {\n           tbar: [{\n               text: 'Cancel',\n               action: 'cancel'\n           }, '-', {\n               text: 'Upload',\n               action: 'upload'\n           }]\n        });\n\n        me.callParent(arguments);\n    }\n});\n```", "```js\n...\nExt.onReady(function() {\n    Ext.create('MyApp.store.Customer');\n    Ext.create('MyApp.store.QuotationItem');\n    Ext.create('MyApp.view.quotation.Quotation', {\n        activeItem: 2,\n        width: 800,\n        height: 600,\n        renderTo: Ext.getBody()\n    });\n});\n```", "```js\nExt.define('MyApp.store.QuotationImport',{\n    extend: 'Ext.data.Store',\n    storeId:'QuotationImport',\n    fields:['id', 'status', 'customer', 'note', 'modified', 'created'],\n    data:{'items':[\n    ]},\n    proxy: {\n        type: 'memory',\n        reader: {\n            type: 'json',\n            root: 'items'\n        }\n    }\n});\n```", "```js\nExt.define('MyApp.store.QuotationImportItems',{\n    extend: 'Ext.data.Store',\n    storeId:'QuotationImportItems',\n    fields:[\n        'id',\n        'status',\n        'parent',\n        'description',\n        'qty',\n        'price',\n        'sum',\n        'modified',\n        'created'\n    ],\n    data:{'items':[\n    ]},\n    proxy: {\n        type: 'memory',\n        reader: {\n            type: 'json',\n            root: 'items'\n        }\n    }\n});\n```", "```js\nExt.define('MyApp.view.quotation.Import', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-quotation-import',\n    itemId: 'screen-quotation-import',\n    initComponent: function() {\n        var me = this,\n            store = Ext.getStore('QuotationImport'),\n            itemstore = Ext.getStore('QuotationImportItems'); \n\n        // Items\n        Ext.apply(me, {\n            layout: {\n                type: 'border',\n                padding: 5\n            },\n            items: [{\n                region: 'north',\n                xtype: 'grid',\n                itemId: 'quotationgrid',\n                split: true,\n                title: 'Quotation',\n                store: store,\n                columns: [{\n                    text: 'id',\n                    dataIndex: 'id',\n                    width: 50\n                }, {\n                    text: 'status',\n                    dataIndex: 'status',\n                    width : 50\n                }, {\n                    text: 'customer',\n                    dataIndex: 'customer'\n                }, {\n                    text: 'note',\n                    dataIndex: 'note',\n                    flex: 1\n                }, {\n                    text: 'modified',\n                    dataIndex: 'modified'\n                }, {\n                    text: 'created',\n                    dataIndex: 'created'\n                }],\n                flex:1\n            }, {\n                region: 'center',\n                xtype: 'grid',\n                title: 'Quotation Items',\n                itemId: 'quotationitemsgrid',\n                store: itemstore,\n                columns: [{\n                    text: 'id',\n                    dataIndex: 'id',\n                    width: 50\n                }, {\n                    text: 'status',\n                    dataIndex: 'status',\n                    width : 50\n                }, {\n                    text: 'parent',\n                    dataIndex: 'parent',\n                    width : 50\n                }, {\n                    text: 'description',\n                    dataIndex: 'description',\n                    flex: 1\n                }, {\n                    text: 'qty',\n                    dataIndex: 'qty'\n                }, {\n                    text: 'price',\n                    dataIndex: 'price'\n                }, {\n                    text: 'sum',\n                    dataIndex: 'sum'\n                }, {\n                    text: 'modified',\n                    dataIndex: 'modified'\n                }, {\n                    text: 'created',\n                    dataIndex: 'created'\n                }],\n                flex:1\n            }]\n        });\n\n        // TopToolbar\n        Ext.apply(me, {\n           tbar: [{\n               text: 'Cancel',\n               action: 'cancel'\n           }, '-', {\n               text: 'Upload',\n               action: 'upload'\n           }]\n        });\n\n        me.callParent(arguments);\n    }\n});\n```", "```js\n....\n\nExt.application({\n    ....\n    controllers: [\n        ....\n        'quotation.Import',\n        ....\n    ],\n```", "```js\nExt.define('MyApp.controller.quotation.Import', {\n    extend: 'MyApp.controller.Abstract',\n    refs: [{\n        ref: 'importView', selector: 'myapp-quotation-import' \n    }],\n    stores: [\n        'QuotationImport',\n        'QuotationImportItems'\n    ],\n    init: function() {\n        var me = this;\n        me.control({\n            'myapp-quotation-import': {\n                'myapp-show': me.onShow,\n                'myapp-hide': me.onHide\n            },\n            'myapp-quotation-import [action=upload]': {\n                'change': me.onUploaded\n            }\n        });\n    },\n    onShow: function(p, owner, params) {\n    },\n    onHide: function() {\n    },\n    onUploaded: function(fb, v) {\n        var me = this,\n            p = me.getImportView(),\n            form = p.getForm(),\n            importView = me.getImportView(),\n            btnExecute = importView.down('button[action=execute]');\n\n        p.setLoading();\n        btnExecute.disable();\n        form.submit({\n            success: function(form, action) {\n                Ext.getStore('QuotationImport').loadData(action.\n                result.quotation.items);\n                Ext.getStore('QuotationImportItems').loadData(action.\n                result.quotations.items);\n                p.setLoading(false);\n                btnExecute.enable();\n            }\n        });\n    }\n});\n```", "```js\nExt.define('MyApp.view.quotation.Import', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-quotation-import',\n    itemId: 'screen-quotation-import',\n    api: {\n        submit  : 'MyAppQuotation.importData'\n    },\n    paramOrder: ['importfile'],\n    initComponent: function() {\n        ....\n\n        // TopToolbar\n        Ext.apply(me, {\n           tbar: [{\n               text: 'Cancel',\n               action: 'cancel'\n           }, '-', {\n               xtype: 'filefield',\n               name: 'importfile',\n               buttonText: 'Upload',\n               buttonOnly: true,\n               hideLabel: true,\n               action: 'upload'\n           }]\n        });\n\n        me.callParent(arguments);\n    }\n});\n```", "```js\n            'importData'=>array(\n                'len'=>2,\n                'formHandler'=>true\n            )\n```", "```js\nExt.define('MyApp.view.quotation.Import', {\n     ....\n     initComponent: function() {\n        ....\n\n        // TopToolbar\n        Ext.apply(me, {\n           ....\n           }, {\n               text: 'Execute',\n               disabled: true,\n               action: 'execute'\n           }]\n        });\n\n        me.callParent(arguments);\n    }\n});\n```", "```js\nExt.define('MyApp.controller.quotation.Import', {\n    ....\n    init: function() {\n        var me = this;\n        me.control({\n            ....\n            'myapp-quotation-import [action=execute]': {\n                'click': me.onExecute\n            }\n        });\n    },\n    ....\n    onExecute: function() {\n        var data = {\n                quotation: [],\n                quotations: [] \n            },\n            store = Ext.getStore('QuotationImport'),\n            items = Ext.getStore('QuotationImportItems');\n\n        Ext.iterate(store.data.items, function(item) {\n            data.quotation.push(Ext.clone(item.data));\n        });\n\n        Ext.iterate(items.data.items, function(item) {\n            data.quotations.push(Ext.clone(item.data));\n        });\n\n        MyAppQuotation.executeImport(data, function() {\n            location.href = '#!/quotation';\n        });\n    }\n});\n```", "```js\n    ....\n    'MyAppQuotation'=>array(\n        'methods'=>array(\n            ....\n            'executeImport'=>array(\n                'len'=>1\n            )\n        )\n    ),\n    ....\n```"]