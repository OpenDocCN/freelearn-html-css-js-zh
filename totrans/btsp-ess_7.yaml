- en: Chapter 7. Customizing Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章：自定义 Bootstrap
- en: In the previous chapter, we have completed the setup of development and customization
    environment of Bootstrap.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们已经完成了 Bootstrap 开发和自定义环境的设置。
- en: In this chapter, we will see how to customize Bootstrap CSS in order to match
    your needs in terms of look and feel. We will use our Bootstrap development environment
    to customize the CSS.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到如何自定义 Bootstrap CSS 以满足您在外观和感觉方面的需求。我们将使用我们的 Bootstrap 开发环境来自定义 CSS。
- en: 'There are essentially two methods for customizing the Bootstrap output:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，有两种方法可以自定义 Bootstrap 输出：
- en: By updating the Bootstrap source code using the build environment
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用构建环境更新 Bootstrap 源代码
- en: By using the Bootstrap web interface to generate customized code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用 Bootstrap 网络界面生成自定义代码
- en: We will explore both the methods in this chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中探讨这两种方法。
- en: Customizing using the build environment
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用构建环境进行自定义
- en: Just to recollect that this is the folder structure of our Bootstrap source
    code bundle we configured in the previous chapter. Please note that the list of
    files and folders can vary depending on the version of Bootstrap you are using.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了回忆，这是我们上一章配置的 Bootstrap 源代码包的文件夹结构。请注意，文件和文件夹的列表可能因您使用的 Bootstrap 版本而异。
- en: 'In our case, we are using Bootstrap 3.3.1:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们使用 Bootstrap 3.3.1：
- en: '![Customizing using the build environment](img/B03987_07_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_01.jpg)'
- en: As marked in the preceding screenshot, these are two important folders we will
    be dealing with while customizing the behavior of Bootstrap.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，这些是我们将在自定义 Bootstrap 行为时处理的两个重要文件夹。
- en: While it is very rare to change anything in the JavaScript code (in the `js`
    folder as marked in the screenshot), we will concentrate on the LESS files (in
    the `less` folder as marked in the preceding screenshot) to change the Bootstrap
    CSS.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在 JavaScript 代码（如图表中标记的 `js` 文件夹）中更改任何内容的情况非常罕见，但我们将专注于 LESS 文件（如图表中标记的前一个截图所示的
    `less` 文件夹）来更改 Bootstrap CSS。
- en: 'Here are the contents of the `less` folder:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 `less` 文件夹的内容：
- en: '![Customizing using the build environment](img/B03987_07_02.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_02.jpg)'
- en: As you can see, there is a single and separate LESS file for each of the CSS
    components and objects available in Bootstrap, for example, buttons, panels, tables,
    thumbnails, wells, breadcrumbs, Glyphicons, and grids.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Bootstrap 中每个可用的 CSS 组件和对象都有一个单独的 LESS 文件，例如按钮、面板、表格、缩略图、井、面包屑、图标和网格。
- en: 'However, as well as the individual LESS files, we also have generic files such
    as:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，除了单个 LESS 文件外，我们还有通用文件，例如：
- en: '`bootstrap.less`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bootstrap.less`'
- en: '`theme.less`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme.less`'
- en: '`utilities.less`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`utilities.less`'
- en: '`scaffolding.less`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scaffolding.less`'
- en: '`variables.less`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variables.less`'
- en: 'Each of these files can be explained as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 每个文件都可以如下解释：
- en: The `bootstrap.less` file is the main collaborator file that encapsulates all
    the individual LESS files and generates the final big fat `bootstrap.css` file.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bootstrap.less` 文件是主要的协作文件，它封装了所有单个 LESS 文件并生成最终的庞大 `bootstrap.css` 文件。'
- en: The `theme.less` file is responsible for mainly generating the `bootstrap-theme.css`
    file.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme.less` 文件主要负责生成 `bootstrap-theme.css` 文件。'
- en: The `utilities.less` file creates the general utility classes, for example,
    some of the classes as in [http://getbootstrap.com/css/#helper-classes](http://getbootstrap.com/css/#helper-classes).
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`utilities.less` 文件创建了一般实用类，例如，一些类如 [http://getbootstrap.com/css/#helper-classes](http://getbootstrap.com/css/#helper-classes)
    中所示。'
- en: The `scaffolding.less` file is the main template of Bootstrap CSS file. It defines
    the page structure and template, and sets styles for the default HTML components
    (such as `html`, `body`, and `input`)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scaffolding.less` 文件是 Bootstrap CSS 文件的主要模板。它定义了页面结构和模板，并为默认 HTML 组件（如 `html`、`body`
    和 `input`）设置样式'
- en: The `variables.less` file is probably one of the most important files which
    we will deal with. This file encapsulates all the LESS variables that have been
    used at various locations in Bootstrap CSS.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variables.less` 文件可能是我们将要处理的最重要的文件之一。此文件封装了在 Bootstrap CSS 中各个位置使用的所有 LESS
    变量。'
- en: 'In order to change and update Bootstrap CSS, we will mostly be changing the
    values of the various variables of this file. Just to recollect that this is our
    **Browse** page as of now:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更改和更新 Bootstrap CSS，我们将主要更改此文件中各种变量的值。只是为了回忆，这是我们目前的 **浏览** 页面：
- en: '![Customizing using the build environment](img/B03987_07_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_03.jpg)'
- en: 'Now, let''s change a few variables and values in the `variables.less` file
    to change the look and feel of this site:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在`variables.less`文件中更改一些变量和值，以改变这个网站的外观和感觉：
- en: Open the `variables.less` file.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`variables.less`文件。
- en: 'The first section is `Colors`. The default code is:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一部分是`Colors`。默认代码是：
- en: '[PRE0]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s change this as follows:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将其更改为以下内容：
- en: '[PRE1]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the next `Scaffolding` section, change this code:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个`Scaffolding`部分，更改此代码：
- en: '[PRE2]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'into this:'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 变成这样：
- en: '[PRE3]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now let''s see what changes this brings to the page. To make this happen, we
    will build the code and deploy it to the web server:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看这会给页面带来什么变化。为了实现这一点，我们将构建代码并将其部署到Web服务器：
- en: Open the command prompt, go to the `project` folder using `D:\Bootstrap\node_modules\bootstrap`.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，使用`D:\Bootstrap\node_modules\bootstrap`进入`project`文件夹。
- en: 'Build the project and run this command in the terminal: `grunt dist`.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建项目并在终端运行此命令：`grunt dist`。
- en: New set of CSS and JavaScript files will be generated in the `dist` folder.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的CSS和JavaScript文件集将在`dist`文件夹中生成。
- en: In order to deploy this updated code, we will copy the `css` folder (copying
    the `css` folder only since we haven't done any changes in JavaScript or Font)
    to the application `bs` folder (refer to [Chapter 2](ch02.html "Chapter 2. Getting
    Started with Bootstrap"), *Getting Started with Bootstrap* where we discussed
    the folder structure of the application we are building).
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了部署这个更新的代码，我们将复制`css`文件夹（只复制`css`文件夹，因为我们没有对JavaScript或字体进行任何更改）到应用的`bs`文件夹（参考[第2章](ch02.html
    "第2章。Bootstrap入门")，*Bootstrap入门*，其中我们讨论了我们正在构建的应用程序的文件夹结构）。
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Please note that you do not need to copy the `css` folder and files manually
    each time you make any changes in those files, instead you can use suitable Grunt
    commands to automatically perform this job for you.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每次你更改这些文件中的任何内容时，你不需要手动复制`css`文件夹和文件，相反，你可以使用合适的Grunt命令来自动执行这项工作。
- en: 'This is the new look of our page:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的页面新外观：
- en: '![Customizing using the build environment](img/B03987_07_04.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_04.jpg)'
- en: 'You can see that the background color of our page has been changed, as have
    the font colors. This has been done due to this line of code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，我们页面的背景颜色和字体颜色已经改变，这是由于这一行代码：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here instead of having body color as white (`#FFF`), we have opted for `#060606`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们选择将主体颜色从白色（`#FFF`）改为`#060606`。
- en: 'The `@body-bg` element is a LESS variable defined; this variable is used to
    set the background color of the `body` element in the `scaffolding.less` file,
    shown as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`@body-bg`元素是一个LESS变量，已定义；此变量用于在`scaffolding.less`文件中设置`body`元素的背景颜色，如下所示：'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Similarly, the text-color, font-family, font-size, and other styles are also
    set from LESS variables.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，文本颜色、字体族、字体大小和其他样式也是从LESS变量设置的。
- en: All these LESS files contain lines of code and syntaxes as per LESS preprocessor
    language. We are not delving deep into LESS syntaxes here. However, it is advised
    that you get familiar with LESS before tweaking the Bootstrap LESS files.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些LESS文件都包含按照LESS预处理器语言的代码行和语法。在这里，我们不会深入探讨LESS语法。然而，建议你在调整Bootstrap LESS文件之前熟悉LESS。
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One good starting point to understand that LESS is their official website—[http://lesscss.org/](http://lesscss.org/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 了解LESS的一个好起点是他们的官方网站——[http://lesscss.org/](http://lesscss.org/)。
- en: 'In this way, we keep on changing various LESS variables in the `variables.less`
    file. This is our final version of the look and feel of the **Browse Products**
    page:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式，我们不断在`variables.less`文件中更改各种LESS变量。这是我们**浏览产品**页面外观和感觉的最终版本：
- en: '![Customizing using the build environment](img/B03987_07_05.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_05.jpg)'
- en: 'Here is how the popup dialog box looks:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是弹出对话框的外观：
- en: '![Customizing using the build environment](img/B03987_07_06.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![使用构建环境进行自定义](img/B03987_07_06.jpg)'
- en: 'Some of the code we have changed in the `variables.less` file is as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`variables.less`文件中更改的一些代码如下：
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you are wondering how these LESS files are transformed into proper and browser-consumable
    CSS files, the grunt task `less:compileCore` does the job. It invokes the LESS
    JavaScript compiler in the background, parses the LESS files, and finally generates
    the CSS files.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道这些LESS文件是如何转换成合适的、浏览器可消费的CSS文件的，那么`less:compileCore`这个Grunt任务就负责这项工作。它在后台调用LESS
    JavaScript编译器，解析LESS文件，并最终生成CSS文件。
- en: The LESS JavaScript compiler we are talking about here is `less.js`, located
    in the folder at `D:\Bootstrap\node_modules\bootstrap\node_modules\grunt-contrib-less\tasks`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所讨论的 LESS JavaScript 编译器是 `less.js`，位于 `D:\Bootstrap\node_modules\bootstrap\node_modules\grunt-contrib-less\tasks`
    文件夹中。
- en: Thus, we have seen how we can update Bootstrap LESS files for customizing the
    default look and feel. In this way, you can update any other LESS files as well,
    if needed. The process of updating the JavaScript source files are also the same.
    All JS source files are located in the folder at `D:\Bootstrap\node_modules\bootstrap\js`.
    You can change any of these JS source files, build Bootstrap using grunt, and
    deploy them to the final application location for consumption.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经看到了如何更新 Bootstrap LESS 文件以自定义默认的外观和感觉。这样，如果需要，您还可以更新任何其他 LESS 文件。更新 JavaScript
    源文件的过程也是相同的。所有 JS 源文件都位于 `D:\Bootstrap\node_modules\bootstrap\js` 文件夹中。您可以更改这些
    JS 源文件中的任何一个，使用 grunt 构建 Bootstrap，并将它们部署到最终应用程序位置以供使用。
- en: Note
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Having said that, the preceding method does force you to update the actual source
    files of Bootstrap itself; thus, your customized code will be overwritten when
    you download an updated version of Bootstrap.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，前面提到的方法确实会强制您更新 Bootstrap 本身的实际源文件；因此，当您下载 Bootstrap 的更新版本时，您的自定义代码将被覆盖。
- en: Hence, a better approach will be to create custom versions for each of the overridden
    files and put your customized code inside that. Finally, import and use these
    custom files. Thus, your custom code will not be affected when you download an
    updated version of Bootstrap.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个更好的方法是为每个覆盖的文件创建自定义版本，并将您的自定义代码放入其中。最后，导入并使用这些自定义文件。这样，当您下载 Bootstrap 的更新版本时，您的自定义代码将不会受到影响。
- en: Customizing using Bootstrap web interface
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Bootstrap 网页界面进行自定义
- en: The second method to generate the customized CSS files is by using Bootstrap
    web interface—[http://getbootstrap.com/customize/](http://getbootstrap.com/customize/).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 生成自定义 CSS 文件的第二种方法是通过使用 Bootstrap 网页界面——[http://getbootstrap.com/customize/](http://getbootstrap.com/customize/).
- en: This interface enables you to pick and choose which CSS and JavaScript components
    you want in your project. For example, if you don't need the ScrollSpy JS component,
    then why should you deploy the corresponding JS code in your production server?
    The code will be loaded via the `bootstrap.min.js` file, and your HTML page size
    will be unnecessarily bigger. Thus, it is a good practice to avoid loading all
    those JavaScript components, which you actually are not going to use.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此界面允许您选择并添加您项目所需的 CSS 和 JavaScript 组件。例如，如果您不需要 ScrollSpy JS 组件，那么为什么要在您的生产服务器上部署相应的
    JS 代码呢？代码将通过 `bootstrap.min.js` 文件加载，您的 HTML 页面大小将变得不必要地更大。因此，避免加载您实际上不会使用的所有这些
    JavaScript 组件是一种良好的做法。
- en: 'The following is the screenshot of this page:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图是此页面的截图：
- en: '![Customizing using Bootstrap web interface](img/B03987_07_07.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Bootstrap 网页界面进行自定义](img/B03987_07_07.jpg)'
- en: 'Another (and probably more important) requirement that you can accomplish via
    this web interface is to customize the Bootstrap CSS by changing the LESS variables
    (all those same variables that we customized in the previous section of this chapter):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过此网页界面完成另一个（可能更重要）的要求，即通过更改 LESS 变量来自定义 Bootstrap CSS（所有那些我们在本章前一部分中自定义的相同变量）：
- en: '![Customizing using Bootstrap web interface](img/B03987_07_08.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Bootstrap 网页界面进行自定义](img/B03987_07_08.jpg)'
- en: What you only need to do is to update the values of these variables in this
    interface and finally press the **Compile** and **Download** button at the bottom
    of the page.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要做的只是更新此界面中这些变量的值，最后在页面底部点击 **编译** 和 **下载** 按钮。
- en: This will generate the Bootstrap CSS and JS files both in normal and minified
    forms. Of course, you will need to take extra care about the version of Bootstrap
    you are using since this interface will act only on the latest stable version.
    If you are using any specific (and older) version of Bootstrap, you should do
    the customization using the local build environment we have created here. That
    would also enable you to properly maintain your customizations in your local source
    code version control server such as SVN.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成 Bootstrap CSS 和 JS 文件，包括正常和压缩形式。当然，您需要特别注意您使用的 Bootstrap 版本，因为此界面仅对最新稳定版本起作用。如果您正在使用任何特定的（较旧）版本的
    Bootstrap，您应该使用我们在此处创建的本地构建环境进行自定义。这也会使您能够正确维护您在本地源代码版本控制服务器（如 SVN）中的自定义。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In the previous chapter, we learned how to establish the compilation and build
    environment of Bootstrap. In this chapter, we used this environment to generate
    our customized Bootstrap files.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何建立 Bootstrap 的编译和构建环境。在这一章中，我们利用这个环境生成了我们定制的 Bootstrap 文件。
- en: We saw another way of doing this customization by using Bootstrap's official
    web interface.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过使用 Bootstrap 的官方网页界面看到了另一种进行这种定制的方法。
- en: As we have almost finished our journey exploring Bootstrap, in the next and
    final chapter, we will see how we can extend Bootstrap using a number of other
    third-party frameworks and components.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们几乎完成了对 Bootstrap 的探索之旅，在下一章和最后一章中，我们将看到如何通过使用许多其他第三方框架和组件来扩展 Bootstrap。
