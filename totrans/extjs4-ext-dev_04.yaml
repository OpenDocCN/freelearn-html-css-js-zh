- en: Chapter 4. Labeled Spinner
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 带标签的旋转按钮
- en: In this chapter we are going to develop an Ext JS extension called **Labeled
    spinner**. To develop this extension, we will extend the `Ext.form.field.Spinner`
    class, which will add a functionality that will show a configurable label besides
    the value within the spinner field, and some more advanced features.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将开发一个名为**带标签的旋转按钮**的Ext JS扩展。为了开发这个扩展，我们将扩展`Ext.form.field.Spinner`类，这将添加一个功能，在旋转按钮字段内显示可配置的标签，以及一些更高级的功能。
- en: 'In this chapter we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Functional requirements
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能需求
- en: Planning and coding the labeled spinner
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划和编写带标签的旋转按钮代码
- en: Functional requirements
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能需求
- en: We want to develop a field for numeric values which will provide the facility
    of having up/down spinner buttons to increase or decrease the numeric values.
    Also, a user can edit the value within the field. There will also be a configuration
    option to show a user-defined label as a unit name just beside the numeric value
    within the field. There will also be options to get the value from this field,
    which will be just the numeric value and also the numeric value including the
    unit name exactly as it shows within the field.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望开发一个用于数值的字段，该字段将提供具有上下旋转按钮的功能，以便增加或减少数值。此外，用户还可以在字段内编辑数值。还有一个配置选项，可以在字段内数值旁边显示用户定义的标签作为单位名称。还将提供选项从该字段获取值，这将仅是数值，也可以是包括单位名称的数值，正如它在字段内显示的那样。
- en: Planning and coding the labeled spinner
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划和编写带标签的旋转按钮代码
- en: 'To meet the functional requirements, we will create an extension class by extending
    the Ext JS''s `Ext.form.field.Spinner` class from which we will get most of the
    facilities that we need to provide. We need to implement the `onSpinUp` and `onSpinDown`
    functions of the `Ext.form.field.Spinner` class to handle the spinner button click
    event to provide our logic to increase or decrease the values. By default, pressing
    the up and down arrow keys will also trigger the `onSpinUp` and `onSpinDown` methods.
    Now, let us start coding:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了满足功能需求，我们将通过扩展Ext JS的`Ext.form.field.Spinner`类来创建一个扩展类，从而获取我们提供所需的大部分功能。我们需要实现`Ext.form.field.Spinner`类的`onSpinUp`和`onSpinDown`函数，以处理旋转按钮点击事件，提供我们的逻辑来增加或减少数值。默认情况下，按下上下箭头键也会触发`onSpinUp`和`onSpinDown`方法。现在，让我们开始编写代码：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And now we have a working extension that can increase or decrease its value.
    Here is the screenshot where we used this extension:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个可以增加或减少其值的可工作扩展。以下是使用此扩展的屏幕截图：
- en: '![Planning and coding the labeled spinner](img/3725OS_04_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![规划并编写带标签的旋转按钮](img/3725OS_04_01.jpg)'
- en: You can see that we now have a field with up/down spinner buttons with which
    we can increase or decrease the value by 1.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们现在有一个带有上下旋转按钮的字段，我们可以通过它增加或减少数值1。
- en: 'Now, we will add a functionality that this field can show the unit label text
    just beside the numeric value. We will define the `setValue` function from which
    we can set the value including the label unit. We will also add some `config`
    properties to this class so that we can set the values as we needed:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将添加一个功能，该字段可以显示单位标签文本，直接位于数值旁边。我们将定义`setValue`函数，通过它可以设置包括标签单位的值。我们还将向此类添加一些`config`属性，以便我们可以设置所需的值：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the following screenshot, we can see the label just beside the numeric value
    within the field:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到标签直接位于字段内的数值旁边：
- en: '![Planning and coding the labeled spinner](img/3725OS_04_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![规划并编写带标签的旋转按钮](img/3725OS_04_02.jpg)'
- en: Within the code, you can find that we have provided some `config` options, added
    the `setValue` function, and modified a little of the `onSpinUp` and `onSpinDown`
    functions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码中，你可以发现我们提供了一些`config`选项，添加了`setValue`函数，并对`onSpinUp`和`onSpinDown`函数进行了一些修改。
- en: 'Now, we will define the `getValue` function so that we can get the numeric
    value from this field and define the `getLabeledValue` function that will return
    the numeric value, including the unit label, exactly as it shows on the field.
    We will also define the `onBlur` handler to check and fix it with a minimum value,
    if there is any wrong input and will do some changes on the existing code. Here
    is the complete code for our extension:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将定义`getValue`函数，以便我们可以从该字段获取数值，并定义`getLabeledValue`函数，该函数将返回数值，包括单位标签，正如它在字段内显示的那样。我们还将定义`onBlur`处理程序来检查并修复任何错误输入，并对现有代码进行一些更改。以下是我们的扩展的完整代码：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And following is the screenshot of our working **LabeledSpinner** extension:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们的工作“标签式旋转框”扩展的屏幕截图：
- en: '![Planning and coding the labeled spinner](img/3725OS_04_03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![规划和编码标签式旋转框](img/3725OS_04_03.jpg)'
- en: In the preceding screenshot, we can find the **Get value** button within the
    window. When this button is clicked, we print the values on the window by calling
    both the `getValue` and `getLabeledValue` functions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们可以在窗口中找到“获取值”按钮。当点击此按钮时，我们通过调用 `getValue` 和 `getLabeledValue` 函数来打印窗口上的值。
- en: Summary
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we've developed a new component by extending Ext JS's existing
    class and we've learned how we can easily create Ext JS extensions and inject
    our required functionality. In the next chapter, we will develop an Ext JS plugin
    called the Chart download, which generates a button on the container's toolbar
    and can download the container's chart item as an image when this button is clicked.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过扩展 Ext JS 的现有类开发了一个新的组件，并学习了如何轻松创建 Ext JS 扩展以及注入所需的功能。在下一章中，我们将开发一个名为“图表下载”的
    Ext JS 插件，该插件在容器工具栏上生成一个按钮，当点击此按钮时，可以将容器的图表项作为图片下载。
