["```js\n<html>\n  <head>\n    <title>Canvas</title>\n  </head>\n  <body>\n  <canvas id=\"canvasTest\" width=\"200\" height=\"100\" style=\"border:2px solid #000;\">\n\n    </canvas>\n  </body>\n</html>\n```", "```js\n<script type=\"text/javascript\">\n  var canvas = document.getElementById(\"canvasTest\"); //called our canvas by id\n  var canvasElement = canvas.getContext(\"2d\"); // made our canvas 2D\n  canvasElement.fillStyle = \"black\"; //Filled the canvas black\n  canvasElement.fillRect(10, 10, 50, 50); //created a rectangle\n</script>\n```", "```js\n<html>\n  <head>\n    <title>Canvas</title>\n  </head>\n  <body>\n    <canvas id=\"canvasTest\" width=\"200\" height=\"100\" style=\"border:2px solid #000;\">\n    </canvas>\n    <script type=\"text/javascript\">\n      var canvas = document.getElementById(\"canvasTest\"); //called our canvas by id\n      var canvasElement = canvas.getContext(\"2d\"); // made our canvas 2D\n      canvasElement.fillStyle = \"black\"; //Filled the canvas black\n      canvasElement.fillRect(10, 10, 50, 50); //created a rectangle\n    </script>\n  </body>\n</html>\n```", "```js\n<script type=\"text/javascript\">\n  var c = document.getElementById(\"canvasTest\");\n  var canvasElement = c.getContext(\"2d\");\n  canvasElement.moveTo(0,0);\n  canvasElement.lineTo(100,100);\n  canvasElement.stroke();\n</script>\n```", "```js\n<script type=\"text/javascript\">\n  var c = document.getElementById(\"canvasTest\");\n  var canvasElement = c.getContext(\"2d\");\n  canvasElement.beginPath();\n  canvasElement.arc(95,50,40,0,2*Math.PI);\n  canvasElement.stroke();\n</script>\n```", "```js\n<script type=\"text/javascript\">\n  var c = document.getElementById(\"canvasTest\");\n  var canvasElement = c.getContext(\"2d\");\n  // Create the gradient\n  var grdient = canvasElement.createLinearGradient(0,0,100,0);\n  grdient.addColorStop(0,\"blue\"); // here we added blue as our primary color\n  grdient.addColorStop(1,\"white\"); //here we used white as our secondary color. \n  // Fill with gradient\n  canvasElement.fillStyle = grdient;\n  canvasElement.fillRect(10,10,150,80);\n</script>\n```", "```js\n<canvas id=\"myclock\" height=\"500\" width=\"500\"></canvas>\nIn your <script></script> tags, take the following variables:\nVar canvas; // the clock canvas\nvar canvasElement; // canvas's elements\n\n// clock settings\nvar cX = 0; \nvar cY = 0;\nvar radius = 150;\n```", "```js\nfunction init() {\n\n  canvas = document.getElementById(\"myclock\");\n  //Called the element to work on. \n  canvasElement = canvas.getContext(\"2d\");\n  //Made the context 2d. \n\n  cX = canvas.width / 2;\n  // we divided by two to get the middle point of X-axis\n  cY = canvas.height / 2;\n  // we divided by two to get the middle point of Y-axis\n  initTime(); //called the initTime() function.\n  drawClock(); //Called the drawClock() function to draw the graphics. \n\n  setInterval(\"animateClock()\", 1000); // Made the animation for each second. Here 1000 is equal to 1 second. \n\n}\n```", "```js\nfunction initTime() {\n  date = new Date();\n  hours = date.getHours() % 12; // Divided by 12 to make our clock 12 hours. \n  minutes = date.getMinutes(); \n  seconds = date.getSeconds();\n\n}\n```", "```js\nfunction animateClock() {\n  //This function will help our 'second' hand to move after an interval. \n  clearCanvas(); // This will clear the canvas \n  refreshTime(); // This will refresh time after 1 second. \n  drawClock();   // This will draw the clock. \n\n}\n```", "```js\nfunction clearCanvas() {\n  canvasElement.clearRect(0, 0, canvas.width, canvas.height);\n}\n```", "```js\nfunction refreshTime() {\n  seconds += 1;\n  if (Math.floor((seconds / 60)) != 0) { //we divide seconds by 60 until second is equal to zero. \n    minutes += 1; // If 60 second is passed we increment minute by 1\\. \n    seconds %= 60; \n  }\n  if (Math.floor((minutes / 60)) != 0) { \n    hours += 1; //We increment hour by 1 after 60 minutes. \n    minutes %= 60; \n  }\n}\n```", "```js\nfunction drawClock() {\n  drawClockBackground(); //This draws clock background. \n  drawSecondsHand(); //This draws clock's second hand. \n  drawMinutesHand(); //This draws clock's minute hand. \n  drawHoursHand(); //This draws clock's hour hand.\n}\n```", "```js\nfunction drawClockBackground() {\n  //this function will draw the background of our clock. We are declaring few variables for mathematical purposes. \n  var correction = 1/300;\n  var shift_unit = 1/170;\n  var shift_factor = 1/30;\n  var angle_initial_position = 2;\n  var angle_current_position_begin = 0;\n  var angle_current_position_end = 0;\n  var repeat = 60;\n  var lineWidth = 10;\n\n  for (var i=0; i < repeat; i+=1) {\n  //These lines are written for making our clock error free with the angle of the hands (hands' positions)\n  angle_current_position_begin = angle_initial_position - (i * shift_factor) - correction;\n  angle_current_position_end = angle_current_position_begin + shift_unit;\n\n  if (i % 5 === 0) \n  lineWidth = 20;\n  else \n  lineWidth = 10;\n\n  drawArcAtPosition(cX, cY, radius, angle_current_position_begin*Math.PI, angle_current_position_end*Math.PI, false, lineWidth);\n  }\n  drawLittleCircle(cX, cY);\n}\n```", "```js\nfunction drawLittleCircle(cX, cY) {\n  drawArcAtPosition(cX, cY, 4, 0*Math.PI, 2*Math.PI, false, 4);\n}\n```", "```js\nfunction drawSecondsHand() {\n  /* Simple mathematics to find the co ordinate of the second hand; \n    You may know this: x = rcos(theta), y = rsin(theta). We used these here.\n    We divided the values n=by 30 because after 5 seconds the second hand moves 30 degree. \n  */ \n  endX = cX + radius*Math.sin(seconds*Math.PI / 30);\n  endY = cY - radius*Math.cos(seconds*Math.PI / 30);\n  drawHand(cX, cY, endX, endY);\n}\n```", "```js\nfunction drawMinutesHand() {\n  var rotationUnit = minutes + seconds / 60;\n  var rotationFactor = Math.PI / 30;\n  var rotation = rotationUnit*rotationFactor;\n  var handLength = 0.8*radius;\n  endX = cX + handLength*Math.sin(rotation);\n  endY = cY - handLength*Math.cos(rotation);\n  drawHand(cX, cY, endX, endY);\n}\n```", "```js\nfunction drawHoursHand() {\n  var rotationUnit = 5 * hours + minutes / 12;\n  var rotationFactor = Math.PI / 30;\n  var rotation = rotationUnit*rotationFactor;\n  var handLength = 0.4*radius;\n\n  endX = cX + handLength*Math.sin(rotation);\n  endY = cY - handLength*Math.cos(rotation);\n  drawHand(cX, cY, endX, endY);\n}\n```", "```js\nfunction drawHand(beginX, beginY, endX, endY) {\n  canvasElement.beginPath();\n  canvasElement.moveTo(beginX, beginY);\n  canvasElement.lineTo(endX, endY);\n  canvasElement.stroke();\n  canvasElement.closePath();\n}\n```", "```js\nfunction drawArcAtPosition(cX, cY, radius, start_angle, end_angle, counterclockwise, lineWidth) {\n  canvasElement.beginPath();\n  canvasElement.arc(cX, cY, radius, start_angle, end_angle, counterclockwise);\n  canvasElement.lineWidth = lineWidth;\n  canvasElement.strokeStyle = \"black\";\n  canvasElement.stroke();\n  canvasElement.closePath();\n}\n```", "```js\n<html>\n  <head>\n    <script type=\"text/javascript\">\n      var canvas; \n      var canvasElement;\n\n      // clock settings\n      var cX = 0;\n\n      var cY = 0;\n      var radius = 150;\n\n      // time settings\n      var date;\n      var hours;\n      var minutes;\n      var seconds;\n\n      function init() {\n        canvas = document.getElementById(\"myclock\");\n        canvasElement = canvas.getContext(\"2d\");\n\n        cX = canvas.width / 2;\n        cY = canvas.height / 2;\n\n        initTime();\n        drawClock();\n        setInterval(\"animateClock()\", 1000);\n      }\n\n      // get your system time\n      function initTime() {\n        date = new Date();\n        hours = date.getHours() % 12;\n        minutes = date.getMinutes();\n        seconds = date.getSeconds();\n      }\n\n      // animate the clock\n      function animateClock() {\n        clearCanvas();\n        refreshTime();\n        drawClock();\n      }\n\n      // clear the canvas\n      function clearCanvas() {\n        canvasElement.clearRect(0, 0, canvas.width, canvas.height);\n      }\n\n      // refresh time after 1 second\n      function refreshTime() {\n        seconds += 1;\n        if (Math.floor((seconds / 60)) != 0) { minutes += 1; seconds %= 60; }\n        if (Math.floor((minutes / 60)) != 0) { hours += 1; minutes %= 60; }\n      }\n\n      // draw or redraw Clock after time refresh function is called\n      function drawClock() {\n        drawClockBackground();\n        drawSecondsHand();\n        drawMinutesHand();\n        drawHoursHand();\n      }\n      function drawHand(beginX, beginY, endX, endY) {\n        canvasElement.beginPath();\n        canvasElement.moveTo(beginX, beginY);\n        canvasElement.lineTo(endX, endY);\n        canvasElement.stroke();\n        canvasElement.closePath();\n      }\n\n      // draw Hand for seconds\n      function drawSecondsHand() {\n        endX = cX + radius*Math.sin(seconds*Math.PI / 30);\n        endY = cY - radius*Math.cos(seconds*Math.PI / 30);\n        drawHand(cX, cY, endX, endY);\n      }\n\n      // draw Hand for minutes\n      function drawMinutesHand() {\n        var rotationUnit = minutes + seconds / 60;\n        var rotationFactor = Math.PI / 30;\n        var rotation = rotationUnit*rotationFactor;\n        var handLength = 0.8*radius;\n\n        endX = cX + handLength*Math.sin(rotation);\n        endY = cY - handLength*Math.cos(rotation);\n        drawHand(cX, cY, endX, endY);\n      }\n\n      // draw Hand for hours\n      function drawHoursHand() {\n        var rotationUnit = 5 * hours + minutes / 12;\n        var rotationFactor = Math.PI / 30;\n        var rotation = rotationUnit*rotationFactor;\n        var handLength = 0.4*radius;\n\n        endX = cX + handLength*Math.sin(rotation);\n        endY = cY - handLength*Math.cos(rotation);\n        drawHand(cX, cY, endX, endY);\n      }\n\n      function drawClockBackground() {\n        var correction = 1/300;\n        var shift_unit = 1/170;\n        var shift_factor = 1/30;\n        var angle_initial_position = 2;\n        var angle_current_position_begin = 0;\n        var angle_current_position_end = 0;\n        var repeat = 60;\n        var lineWidth = 10;\n\n        for (var i=0; i < repeat; i+=1) {\n          angle_current_position_begin = angle_initial_position - (i * shift_factor) - correction;\n          angle_current_position_end = angle_current_position_begin + shift_unit;\n\n          if (i % 5 == 0) lineWidth = 20;\n          else lineWidth = 10;\n\n          drawArcAtPosition(cX, cY, radius, angle_current_position_begin*Math.PI, angle_current_position_end*Math.PI, false, lineWidth);\n        }\n        drawLittleCircle(cX, cY);\n      }\n\n      function drawArcAtPosition(cX, cY, radius, start_angle, end_angle, counterclockwise, lineWidth) {\n        canvasElement.beginPath();\n        canvasElement.arc(cX, cY, radius, start_angle, end_angle, counterclockwise);\n        canvasElement.lineWidth = lineWidth;\n        canvasElement.strokeStyle = \"black\";\n        canvasElement.stroke();\n        canvasElement.closePath();\n      }\n      function drawLittleCircle(cX, cY) {\n        drawArcAtPosition(cX, cY, 4, 0*Math.PI, 2*Math.PI, false, 4);\n      }\n\n    </script>\n  </head>\n  <body onload=\"init()\">\n    <canvas id=\"myclock\" height=\"500\" width=\"500\"></canvas>\n  </body>\n</html>\n```"]