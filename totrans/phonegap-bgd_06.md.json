["```js\nvar contact = navigator.contacts.create(properties);\nnavigator.contacts.find(contactFields, contactSuccess, contactError, contactFindOptions);\n```", "```js\nvar contact = navigator.contacts.create({‘displayName': ‘Giorgio'});\n\ncontact.save(onContactSaved, onContactSavedError);\ncontact.remove(onContactRemoved, onContactRemovedError);\n```", "```js\n    $ phonegap create ContactsApi\n\n    ```", "```js\n    $ cd ContactsApi\n\n    ```", "```js\n    $ phonegap platform add android\n\n    ```", "```js\n    $ phonegap plugin add cordova-plugin-contacts\n\n    ```", "```js\n    <script type=”text/javascript” charset=”utf-8”>\n        document.addEventListener(“deviceready”, onDeviceReady, false);\n    </script>\n    ```", "```js\n    function onDeviceReady() {\n        var options = new ContactFindOptions();\n        options.filter = “”;\n        options.multiple=true;\n        var fields = [“displayName”, “name”, “addresses”];\n        navigator.contacts.find(fields, onSuccess, onError, options);\n    }\n    ```", "```js\n    options.filter = “John”;\n    ```", "```js\n    function onSuccess(contacts) {\n        for (var i = 0; i < contacts.length; i++) {\n            console.log(“Display Name = “ + contacts[i].displayName);\n        }\n    };\n\n    function onError(contactError) {\n        alert(‘onError!');\n    };\n    ```", "```js\n<script type=”text/javascript” charset=”utf-8”>\ndocument.addEventListener(“deviceready”, onDeviceReady, false);\n\nfunction onDeviceReady() {\n    var options = new ContactFindOptions();\n    options.filter = “”;\n    options.multiple=true;\n    var fields = [“displayName”, “name”, “addresses”];\n    navigator.contacts.find(fields, onSuccess, onError, options);\n}\n\nfunction onSuccess(contacts) {\n    for (var i = 0; i < contacts.length; i++) {\n        console.log(“Display Name = “ + contacts[i].displayName);\n    }\n};\n\nfunction onError(contactError) {\n    alert(‘onError!');\n};\n</script>\n```", "```js\n<script type=”text/javascript” charset=”utf-8”>\n    // Binding to the events\n    document.addEventListener(“deviceready”, onDeviceReady, false);\n\n    // device APIs are ready and available to use\n    function onDeviceReady() {\n        var myContact = navigator.contacts.create({“displayName”: “Purus Test”});\n\n        var phoneNumbers = [];\n\n        phoneNumbers[0] = new ContactField(‘work', ‘1234567890', false);\n        phoneNumbers[1] = new ContactField(‘mobile', ‘2345678901', true); // preferred\n        phoneNumbers[2] = new ContactField(‘home', ‘3456789012', false);\n\n        // You can add any other values of Contact object with name and phone numbers\n        myContact.phoneNumbers = phoneNumbers;\n\n        myContact.save(onSaveContactSuccess,onSaveContactError);\n\n    }\n\n    function onSaveContactSuccess(contact) {\n        alert(‘saved successfully');\n    };\n\n    function onSaveContactError(error) {\n        alert(error.code);\n    };\n\n</script>\n```", "```js\n    $ cordova create camera\n\n    ```", "```js\n    $ cd camera\n\n    ```", "```js\n    $ cordova platforms add android\n    $ cordova platforms add ios\n\n    ```", "```js\n    $ cordova plugin add cordova-plugin-camera\n\n    ```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <script type=”text/javascript” charset=”utf-8” src=”cordova.js”></script>\n        <script type=”text/javascript” charset=”utf-8”>\n\n        // Wait for device API libraries to load\n        document.addEventListener(“deviceready”, onDeviceReady,false);\n\n        // device APIs are available\n        function onDeviceReady() {\n        }\n\n        function getCameraImage() {\n          // Take picture using camera and get image source as base64-encoded string\n          navigator.camera.getPicture(onCaptureSuccess, onError, { quality: 20, allowEdit: false, destinationType: navigator.camera.DestinationType.DATA_URL });\n        }\n\n        // Called when a photo is successfully retrieved\n        function onCaptureSuccess(imageData) {\n          var smallImage = document.getElementById(‘cameraImage');\n          smallImage.src = “data:image/jpeg;base64,” + imageData;\n        }\n\n        // Capture any failures\n        function onError(message) {\n          alert(‘Error: ‘ + message);\n        }\n        </script>\n      </head>\n      <body>\n        <button onclick=”getCameraImage();”>Capture Photo</button> <br>\n        <img style=”display:none;width:60px;height:60px;” id=“cameraImage” src=”” />\n      </body>\n    </html>\n    ```", "```js\n    navigator.camera.getPicture(onCaptureSuccess, onError, { quality: 20, allowEdit: true, destinationType: navigator.camera.DestinationType.DATA_URL });\n    ```", "```js\n    $ cordova prepare\n    $ cordova compile\n\n    ```", "```js\n    $ cordova run android\n\n    ```", "```js\n├── config.xml\n├── hooks\n├── merges\n├── platforms\n├── plugins\n├── www\n   └── css\n   └── img\n   └── js\n   └── index.html\n```", "```js\nvar popoverOptions = new CameraPopoverOptions();\npopoverOptions.x = 220;\npopoverOptions.y = 600;\npopoverOptions.width = 320;\npopoverOptions.height = 480;\npopoverOptions.arrowDir = Camera.PopoverArrowDirection.ARROW_DOWN;\n```", "```js\nvar popoverOptions = new CameraPopoverOptions(220, 600, 320, 480, Camera.PopoverArrowDirection.ARROW_DOWN);\n```", "```js\ncameraOptions.popoverOptions = {\n                x : 220,\n                y :  600,\n                width : 320,\n                height : 480,\n                arrowDir : Camera.PopoverArrowDirection.ARROW_DOWN\n\n};\n```", "```js\nCamera.PopoverArrowDirection = {\n                                ARROW_UP: 1,\n                                ARROW_DOWN: 2,\n                                ARROW_LEFT: 4,\n                                ARROW_RIGHT: 8,\n                                ARROW_ANY: 15\n};\n```", "```js\n    initAdditionalOptions: function(){\n\n        // Additional options will be defined here\n\n    }\n    ```", "```js\n    app.cameraOptions.sourceType = Camera.PictureSourceType.SAVEDPHOTOALBUM;\n\n    app.cameraOptions.popoverOptions = new CameraPopoverOptions(220, 600, 320, 480, Camera.PopoverArrowDirection.ARROW_DOWN);\n    ```", "```js\n    deviceready: function() {\n        // All the events handling initializations are here\n        app.initAdditionalOptions();\n\n    }\n    ```", "```js\n$ phonegap plugin add cordova-plugin-media-capture\n\n```", "```js\nvar capture = navigator.device.capture;\n```", "```js\nvar capture = navigator.device.capture;\n\ncapture.captureImage(function(files){\n\n                         console.log(files);\n\n                     }, function(error){\n\n                         console.log(error);\n\n                     });\n```", "```js\n    $ cordova create ImageEffect\n\n    ```", "```js\n    $ cd ImageEffect\n\n    ```", "```js\n    $ cordova plugin add cordova-plugin-media-capture\n\n    ```", "```js\n    <canvas id='manipulatedImage' />\n    ```", "```js\n    var capture = navigator.device.capture;\n    capture.captureImage(onGetImage, onImageError, {limit: 1});\n    ```", "```js\n    function onGetImage(files){\n\n        var currentFile = files[0];\n\n        // Canvas access logic will go here\n    }\n    ```", "```js\n    var canvas = document.querySelector(‘#manipulatedImage');\n    var context = canvas.getContext(‘2d');\n\n    // Image object definition and load will go here\n    ```", "```js\n    var image = new Image();\n\n    image.onload = function(evt) {\n        // The image manipulation logic will go here\n    };\n\n    image.src = currentFile.fullPath;\n    ```", "```js\n    var width = canvas.width;\n    var height = canvas.height;\n\n    context.drawImage(this, 0, 0, width, height);\n\n    var imgPixels = context.getImageData(0, 0, width, height);\n    context.putImageData(grayscale(imgPixels), 0, 0, 0, 0, width, height);\n    ```", "```js\n<!DOCTYPE html>\n<html>\n    <head>\n        <!--Other section removed for sake of simplicity -->\n        <title>Media Capture Example</title>\n    </head>\n<body>\n<canvas id='manipulatedImage' />\n\n<script type=”text/javascript” src=”cordova.js”></script>\n\n<script type=”text/javascript”>\n\n   document.addEventListener(“deviceready”, onDeviceReady, false);\n\n   function onDeviceReady() {\n      var capture = navigator.device.capture;\n      capture.captureImage(onGetImage, onError, {limit: 1});\n         }\n\n   function onGetImage(files){\n      var currentFile = files[0];\n\n      var canvas = document.querySelector(‘#manipulatedImage');\n      var context = canvas.getContext(‘2d');\n      var image = new Image();\n\n      image.onload = function(evt) {\n         var width = canvas.width;\n         var height = canvas.height;\n\n         context.drawImage(this, 0, 0, width, height);\n         var imgPixels = context.getImageData(0, 0, width, height);\n         context.putImageData(grayscale(imgPixels), 0, 0, 0, 0, width, height);\n      };\n      image.src = currentFile.fullPath;\n   }\n\n   function onError(error){\n      alert(JSON.stringify(error));\n   }\n</script>\n</body>\n</html>\n```", "```js\nif (typeof window.plugins.CameraPopoverOptions !== ‘undefined'){\n    // plugin object is available to be used\n}\n```", "```js\nfunction onDeviceReady() {\n   console.log(navigator.device.capture);\n}\n```"]