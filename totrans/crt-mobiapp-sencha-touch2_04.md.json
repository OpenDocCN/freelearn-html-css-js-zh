["```js\nsencha app create weightweight /Path/To/Your/New/Application\n\n```", "```js\nExt.define(\"WeightWeight.view.Main\", {\n    extend: 'Ext.tab.Panel',\n    requires: ['Ext.TitleBar'],\n\n    config: {\n        tabBar: {\n            docked: 'bottom'\n        },\n        items: [\n            { xtype: 'dataentry'},\n            { xtype: 'overview'},\n            { xtype: 'details'},\n            { xtype: 'configform' }\n        ]\n    }\n});\n```", "```js\nExt.application({\n    name: 'WeightWeight',\n    views: ['Main'],\nâ€¦\n```", "```js\n    Ext.define(\"WeightWeight.view.DataEntry\", {\n        extend:'Ext.form.Panel',\n        alias:'widget.dataentry',\n        config:{\n            title:'Enter Data',\n            iconCls:'info',\n            html: 'Data Entry'\n        }\n    });\n    ```", "```js\n    Ext.define(\"WeightWeight.view.OverviewChart\", {\n        extend:'Ext.Panel',\n        alias:'widget.overview',\n        config:{\n            title:'Overview',\n            iconCls:'star',\n            html: 'Overview'\n\n        }\n    });\n    ```", "```js\n    Ext.define(\"WeightWeight.view.DetailChart\", {\n        extend:'Ext.Panel',\n        alias:'widget.details',\n        config:{\n            title:'Details',\n            iconCls:'locate',\n            html: 'Details'\n\n        }\n    });\n    ```", "```js\n    Ext.define(\"WeightWeight.view.Config\", {\n        extend:'Ext.form.Panel',\n        alias:'widget.configform',\n        config:{\n            title:'Config',\n            iconCls:'settings',\n            html: 'Config'\n\n        }\n    });\n    ```", "```js\n    views: ['Main', 'Config', 'AddTag', \"OverviewChart\", \"DetailChart\"]\n    ```", "```js\nExt.define(\"WeightWeight.view.DataEntry\", {\n    extend:'Ext.form.Panel',\n    alias:'widget.dataentry',\n    config:{\n\n        title:'Enter Data',\n        iconCls:'info',\n        items:[\n            {\n                xtype:'datepickerfield',\n                label:'Date',\n                placeHolder:'mm/dd/yyyy'\n            },\n            {\n                xtype:'numberfield',\n                id:'weightField',\n                margin:'10 0',\n                label:'Weight'\n            },\n            {\n                xtype:'numberfield',\n                id:'waterField',\n                margin:'10 0',\n                label:'Water'\n            },\n            {\n                xtype:'numberfield',\n                id:'calorieField',\n                margin:'10 0',\n                label:'Calories'\n            },\n            {\n                xtype:'numberfield',\n                id:'exerciseField',\n                label:'Exercise'\n            },\n            {\n                xtype:'hiddenfield',\n                id:'hiddenTagField'\n            },\n            {\n                xtype:'button',\n                margin:'25 0 25',\n                text:'Add Tag',\n                id: 'addTagButton'\n            },\n            {\n                xtype:'container',\n                layout:{\n                    type:'hbox'\n                },\n                items:[\n                    {\n                        xtype:'button',\n                        margin:'0 10 0 0',\n                        text:'Cancel',\n                        flex:1\n                    },\n                    {\n                        xtype:'button',\n                        margin:'0 0 0 10',\n                        text:'Save',\n                        flex:1\n                    }\n                ]\n            }\n        ]\n    }\n});\n```", "```js\nExt.define('WeightWeight.view.AddTag', {\n    extend: 'Ext.ActionSheet',\n    alias: 'widget.addtag',\n    config: {\n        id: 'addTagSheet',\n        items: [\n            {\n                xtype: 'textfield',\n                label: 'Enter a New Tag',\n                placeHolder: 'or choose a tag from the list below.'\n            },\n            {\n                xtype: 'list',\n                height: 300,\n                itemTpl: [\n                    '<div>List Item {string}</div>'\n                ]\n            },\n            {\n                xtype: 'container',\n                margin: 10,\n                layout: {\n                    type: 'hbox'\n                },\n                items: [\n                    {\n                        xtype: 'button',\n                        margin: '0 10 0 0',\n                        text: 'Cancel',\n                        flex: 1\n                    },\n                    {\n                        xtype: 'button',\n                        margin: '0 0 0 10',\n                        text: 'Save',\n                        flex: 1\n                    }\n                ]\n            }\n        ]\n    }\n});\n```", "```js\nExt.define(\"WeightWeight.view.Config\", {\n    extend:'Ext.form.Panel',\n    alias: 'widget.configform',\n    config:{\n        title:'Config',\n        iconCls:'settings',\n        items:[]\n    }\n});\n```", "```js\n{\n    xtype:'fieldset',\n    title:'Weight Loss Goal',\n    items:[\n        {\n            xtype:'numberfield',\n            id:'startingWeight', \n            name:'startingWeight',\n            label:'Starting Weight'\n        },\n        {\n            xtype:'numberfield',\n            id:'targetWeight', \n            name:'targetWeight',\n            label:'Target Weight'\n        }\n    ]\n}\n```", "```js\n{\nxtype:'fieldset',\ntitle:'Daily Goals',\nitems:[\n    {\n        xtype:'spinnerfield',\n        id:'exercisePerDay',\n        label:'Exercise (minutes)',\n        defaultValue:30,\n        stepValue: 1\n    },\n    {\n        xtype:'spinnerfield',\n        id:'caloriesPerDay',\n        label:'Caloric Intake',\n        defaultValue:0,\n        stepValue: 100\n    },\n    {\n        xtype:'spinnerfield',\n        id:'waterPerDay',\n        label:'Water Consumption',\n        defaultValue:8,\n        stepValue: 1\n    }\n]\n}\n```", "```js\n{\n    xtype:'fieldset',\n    title:'Units of Measure',\n    padding:25,\n    items:[\n        {\n            xtype:'fieldset',\n            title:'Weight',\n            items:[\n                {\n                    xtype:'radiofield',\n                    label:'Pounds',\n                    name:'weightUnits',\n                    value:'lbs',\n                    checked:true\n                },\n                {\n                    xtype:'radiofield',\n                    label:'Kilograms',\n                    name:'weightUnits',\n                    value:'kg'\n                }\n            ]\n        },\n        {\n            xtype:'fieldset',\n            title:'Water',\n            items:[\n                {\n                    xtype:'radiofield',\n                    label:'Glasses',\n                    name:'waterUnits',\n                    value:'glass',\n                    checked:true\n                },\n                {\n                    xtype:'radiofield',\n                    label:'Ounces',\n                    name:'waterUnits',\n                    value:'oz'\n                }\n            ]\n        }\n    ]\n}\n```", "```js\nExt.define('WeightWeight.controller.DataEntry', {\n    extend: 'Ext.app.Controller',\n    config: {\n        refs: {\n\n        },\n        control: {\n\n        }\n    }\n});\n```", "```js\nrefs: {\n    tagSheet: '#addTagSheet',\n}\n```", "```js\nrefs: {\n    tagSheet: {\n        selector: '#addTagSheet'\n    }\n}\n```", "```js\nvar sheet = this.getTagSheet();\n```", "```js\ncontrol: {\n    'button#addTagButton': {\n        tap: 'showAddTag'\n    },\n    '#addTagSheet button[text=\"Cancel\"]': {\n        tap: 'cancelAddTag'\n    },\n    '#addTagSheet button[text=\"Save\"]': {\n        tap: 'saveAddTag'\n    }\n}\n```", "```js\nshowAddTag: function() {\n    var sheet = this.getTagSheet();\n    if (typeof sheet == 'undefined') {\n        sheet = Ext.widget('addtag');\n        Ext.Viewport.add(sheet);\n    }\n    sheet.show();\n}\n```", "```js\ncancelAddTag: function() {\n    this.getTagSheet().hide();\n}\n```", "```js\nsaveAddTag: function() {\n    this.getTagSheet().hide();\n}\n```", "```js\nExt.define('WeightWeight.model.Entry', {\n    extend: 'Ext.data.Model',\n\n    config: {\n        idProperty: 'id',\n        fields: [\n            {name: 'id', type: 'auto'},\n            {name: 'entryDate', type: 'date', dateFormat: 'm-d-Y'},\n            {name: 'weight', type:'float'},\n            {name: 'water', type:'int'},\n            {name: 'calories', type: 'int'},\n            {name: 'exercise', type: 'int'},\n            {name: 'tag', type: 'string'}\n        ],\n        proxy: {\n            type: 'localstorage',\n            id: 'weightweight-entry'\n        }\n    }\n});\n```", "```js\nExt.define('WeightWeight.model.Tag', {\n    extend: 'Ext.data.Model',\n\n    config: {\n        idProperty: 'id',\n        fields: [\n            {name: 'id', type: 'auto'},\n            {name: 'text', type: 'string'}\n        ],\n        proxy: {\n            type: 'localstorage',\n            id: 'weightweight-tag'\n        }\n    }\n});\n```", "```js\nExt.define('WeightWeight.model.Config', {\n extend: 'Ext.data.Model',\n config: {\n  fields: [\n   {name: 'id', type: 'int'},\n   {name: 'startingWeight', type: 'float'},\n   {name: 'targetWeight', type: 'float'},\n   {name: 'exercisePerDay', type: 'int', defaultValue: 30},\n   {name: 'caloriesPerDay', type: 'int'},\n   {name: 'waterPerDay', type: 'int', defaultValue: 8},\n   {name: 'weightUnits', type: 'string', defaultValue: 'lbs'},\n   {name: 'waterUnits', type: 'string', defaultValue: 'glass'}\n  ],\n  proxy: {\n   type: 'localstorage',\n   id  : 'weightweight-config'\n  }\n }\n});\n```", "```js\nExt.define('WeightWeight.store.EntryStore', {\n   extend: 'Ext.data.Store',\n    config: {\n   model: 'WeightWeight.model.Entry',\n   autoLoad: true,\n    storeId: 'EntryStore'\n    }\n});\n```", "```js\n{\n    xtype: 'list',\n    height: 300,\n    store: {\n        model: 'WeightWeight.model.Tag',\n        autoLoad: true\n    },\n    itemTpl: [\n        '<div>{text}</div>'\n    ]\n}\n```", "```js\nmodels: [\"Tag\", \"Entry\", \"Config\"]\nstores: ['EntryStore']\n```", "```js\nrefs: {\n    tagSheet: '#addTagSheet',\n    tagList: '#addTagSheet list',\n    tagInput: '#addTagSheet textfield',\n    tagButton: 'button#addTagButton',\n    tagField: '#hiddenTagField',\n    entrySaveButton: 'dataentry button[text=\"Save\"]',\n    entryCancelButton: 'dataentry button[text=\"Cancel\"]',\n    entryForm: 'dataentry'\n}\n```", "```js\ncontrol: {\n    tagButton: {\n        tap: 'showAddTag'\n    },\n    tagInput: {\n      clearicontap: 'deselectTag'\n    },\n    tagList: {\n      select: 'selectTag'\n    },\n    '#addTagSheet button[text=\"Cancel\"]': {\n        tap: 'cancelAddTag'\n    },\n    '#addTagSheet button[text=\"Save\"]': {\n        tap: 'saveAddTag'\n    },\n    entrySaveButton: {\n        tap: 'saveEntry'\n    },\n    entryCancelButton: {\n        tap: 'clearEntry'\n    }\n}\n```", "```js\nvar sheet = this.getTagSheet();\n```", "```js\nsaveAddTag: function() {\n        var tag = this.getTagInput().getValue(),\n            store = this.getTagList().getStore();\n        if (tag != \"\") {\n            this.getTagButton().setText('Tag: '+tag);\n            this.getTagField().setValue(tag);\n            if (store.findExact('text', tag) == -1) {\n                store.add({text: tag});\n                store.sync();\n            }\n        } else {\n            this.getTagButton().setText('Add Tag');\n            this.getTagField().setValue('');\n        }\n\n        this.getTagSheet().hide();\n    }\n```", "```js\nstore.add({text: tag});\nstore.sync();\n```", "```js\nselectTag: function(list, record) {\nthis.getTagInput().setValue(record.get('text'));\n}\n```", "```js\ndeselectTag: function() {\n this.getTagList().deselectAll();\n}\n```", "```js\nsaveEntry: function() {\n    var values = this.getEntryForm().getValues(),\n    store = Ext.getStore('EntryStore'),\n    entry = Ext.create('WeightWeight.model.Entry', values);\n\n    store.add(entry);\n\n    store.sync();\n    Ext.Msg.alert('Saved!', 'Your data has been saved.', this.clearEntry, this);\n}\n```", "```js\nclearEntry: function() {\n    this.getEntryForm().reset();\n    this.getTagButton().setText('Add Tag');\n}\n```", "```js\nExt.define('WeightWeight.controller.Config', {\n    extend: 'Ext.app.Controller',\n\n    config: {\n        views:['Config'],\n        models:['Config'],\n        refs: {\n            form: 'configform'\n        },\n        control: {\n            form: {\n                initialize: 'getSavedConfig'\n            }\n        }\n    }\n});\n```", "```js\ngetSavedConfig: function() {\n    var config = Ext.ModelManager.getModel('WeightWeight.model.Config');\n    config.load(1, {\n        scope: this,\n        failure: this.createSavedConfig, \n        success: this.bindRecordToForm \n    });\n}\n```", "```js\ncreateSavedConfig: function() {\n    var config = Ext.create('WeightWeight.model.Config', {id: 1});\n    config.save({\n        success: this.bindRecordToForm\n    }, this);\n}\n```", "```js\nbindRecordToForm: function(record) {\n    this.savedConfig = record;\n\n    var form = this.getForm();\n    form.setRecord(this.savedConfig);\n\n    form.on({\n       delegate: 'field',\n       change: this.updateValue,\n        spin: this.updateValue,\n        check: function(field) {\n            this.updateValue(field, field.getGroupValue());\n        },\n        scope: this\n    });\n}\n```", "```js\nupdateValue: function(field, newValue) {\n    this.savedConfig.set(field.getName(), newValue);\n    this.savedConfig.save();\n}\n```", "```js\nExt.define(\"WeightWeight.view.OverviewChart\", {\n    extend:'Ext.Panel',\n    alias:'widget.overview',\n    config:{\n        title:'Overview',\n        iconCls:'star',\n        layout: 'fit',\n        items:[{\n          xtype:'chart',\n          store:'EntryStore', \n          legend:{\n            position:'bottom'\n          }]\n       }\n    }\n});\n```", "```js\naxes:[\n {\n  type:'numeric',\n  position:'left',\n  fields:['weight'],\n  title:{\n   text:'Weight',\n   fontSize:14\n  }\n },\n {\n  type:'numeric',\n  position:'right',\n  fields:['exercise'],\n  title:{\n   text:'Exercise',\n   fontSize:14\n  }\n },\n {\n  type:'time',\n  dateFormat:'m-d-Y',\n  position:'bottom',\n  fields:'entryDate',\n  title:{\n   text:'Date',\n   fontSize:20\n  }\n }\n]\n```", "```js\nseries:[\n {\n  type:'line',\n  xField:'entryDate',\n  yField:'weight',\n  title:'Weight',\n  axis:'left',\n  style:{\n   smooth:false,\n   stroke:'#76AD86',\n   miterLimit:3,\n   lineCap:'miter',\n   lineWidth:3\n  },\n  marker:{\n   type:'circle',\n   r:6,\n   fillStyle:'#76AD86'\n  },\n  highlightCfg:{\n   scale:1.25\n  }\n },\n {\n  type:'line',\n  xField:'entryDate',\n  yField:'exercise',\n  title:'Exercise',\n  axis:'right',\n  style:{\n   smooth:false,\n   stroke:'#7681AD',\n   lineWidth:3\n  },\n  marker:{\n   type:'circle',\n   r:6,\n   fillStyle:'#7681AD'\n  },\n  highlightCfg:{\n   scale:1.25\n  }\n }\n]\n```", "```js\ninteractions:[\n {\n  type:'iteminfo',\n  panel:{\n   tpl:[ '<table>',\n    '<tpl if=\"weight\"><tr><th>Weight</th><td>{weight} ({weightUnits})</td></tr></tpl>',\n    '<tpl if=\"water\"><tr><th>Water</th><td>{water} ({waterUnits})</td></tr></tpl>',\n    '<tpl if=\"calories\"><tr><th>Calories</th><td>{calories}</td></tr></tpl>',\n    '<tpl if=\"exercise\"><tr><th>Exercise</th><td>{exercise} minutes</td></tr></tpl>',\n    '<tpl if=\"tag\"><tr><th>Tag</th><td>{tag}</td></tr></tpl>',\n    '</table>'\n   ]\n  }\n```", "```js\n  listeners:{\n   show:function (interaction, item, panel) {\n    var record = item.record;\n    var dt = new Date(record.get('entryDate'));\n    var config = Ext.ModelManager.getModel('WeightWeight.model.Config');\n    config.load(1, {\n     scope:this,\n     success:function (configRecord) {\n      panel.setData(Ext.apply(record.getData(), configRecord.getData()));\n     }\n    });\n\npanel.getDockedComponent(0).setTitle(Ext.Date.format(dt, 'm-d-Y'));\n   }\n  }\n }\n]\n```", "```js\nExt.define('WeightWeight.view.goalChart', {\n   extend:'Ext.Panel',\n    alias:'widget.goalchart',\n    config: {\n      layout: 'fit'\n    },\n    constructor: function (config) {\n        this.store = Ext.getStore('EntryStore');\n\n        Ext.apply(this, config);\n\n        this.callParent([config]);\n        var configRecord = Ext.ModelManager.getModel('WeightWeight.model.Config');\n        configRecord.load(1, {\n            scope:this,\n            success: this.createChart\n        });\n\n    }\n});\n```", "```js\ncreateChart: function(config) {\n this.configRecord = config;\n var goalStore = Ext.create('Ext.data.Store',{ fields: [\n    'entryDate', \n    {name: Ext.String.capitalize(this.dataField), type:'int'}, \n    {name: 'goal', type: 'int'}\n   ]\n  }\n );\n this.store.each(function(record) {\n if (record.get(this.dataField)) {\n  var values = {\n  entryDate: Ext.Date.format(dt,'m-d-Y'),\n  goal: this.configRecord.get(this.goalField)\n  };\n  values[Ext.String.capitalize(this.dataField)] = record.get(this.dataField);\n  goalStore.add(values);\n  }\n }, this);\n}\n```", "```js\n{\n  xtype: 'goalchart', \n  chartTitle: 'Exercise', \n  dataField: 'exercise', \n  goalField: 'exercisePerDay', \n  colorSet:['#a61120', '#ff0000'] \n}\n```", "```js\nthis.chart = Ext.factory({\n xtype: 'chart',\n store: goalStore,\n animate: true,\n legend: {\n  position: 'right'\n },\n axes: [{\n  type:'Numeric',\n  position:'left',\n  fields:[ Ext.String.capitalize(this.dataField), 'goal'],\n  title: Ext.String.capitalize(this.dataField),\n  decimals:0,\n  minimum:0\n },\n {\n  type:'category',\n  position:'bottom',\n  fields:['entryDate'],\n  title:'Date'\n }],\n series: [\n  {\n   type: 'bar',\n   xField: 'entryDate',\n   yField: Ext.String.capitalize(this.dataField),\n   style: {\n    fill: this.colorSet[0],\n    shadowColor: 'rgba(0,0,0,0.3)',\n    maxBarWidth: 50,\n    minGapWidth: 3,\n    shadowOffsetX: 3,\n    shadowOffsetY: 3\n   }\n  },\n  {\n   type:'line',\n   style: {\n    smooth: false,\n    stroke: this.colorSet[1],\n    lineWidth: 3\n   },\n   axis:'left',\n   xField:'entryDate',\n   yField:'goal',\n   showMarkers: false,\n   title:'Goal'\n   }\n  ]\n }, 'Ext.char t.Chart');\n```", "```js\nExt.define('WeightWeight.view.wordChart', {\n    extend:'Ext.Panel',\n    alias:'widget.wordchart',\n    config: {\n        layout: 'fit'\n    },\n    constructor: function (config) {\n        this.store = Ext.getStore('EntryStore');\n        Ext.apply(this, config);\n        this.callParent([config]);\n        var configRecord = Ext.ModelManager.getModel('WeightWeight.model.Config');\n        configRecord.load(1, {\n            scope:this,\n            success: this.createChart\n        });\n\n    }\n\n});\n```", "```js\ncreateChart: function(config) {\n        this.configRecord = config;\n        this.store.filterBy(function(record) {\n            if (record.get('tag')) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n        this.store.setGroupField('tag');\n        this.store.setGroupDir('ASC');\n        var groups = this.store.getGroups();\n        this.store.setGroupField('');\n        this.store.clearFilter();\n        var wordStore = Ext.create('Ext.data.Store',\n            { fields: ['name', {name: 'count', type: 'int'}]}\n        );\n        Ext.each(groups, function(group) {\n           wordStore.add({name: group.name, count: group.children.length});\n        });\n```", "```js\nthis.chart = Ext.factory({\n xtype: 'polar',\n store: wordStore,\n animate: {\n  easing: \"backInOut\",\n  duration: 500\n },\n series: [{\n  type: 'radar',\n  xField: 'name',\n  yField: 'count',\n  labelField: 'name',\n  marker:{\n   type:'circle',\n   r:3,\n   fillStyle:'#76AD86'\n  },\n  style: {\n   fillStyle: 'rgba(0,255,0,0.2)',\n   strokeStyle: 'rgba(0,0,0,0.8)',\n   lineWidth: 1\n  }\n }]\n```", "```js\naxes: [{\n  type: 'numeric',\n   position: 'radial',\n   fields: 'count',\n   grid: true,\n   label: {\n    fill: 'black'\n   }\n  },{\n   type: 'category',\n   position: 'angular',\n   fields: 'name',\n   grid: true,\n   label: {\n    fill: 'black'\n   },\n  style: {\n   estStepSize: 1\n  }\n }]\n}, 'Ext.chart.Chart');\n\nthis.add(this.chart); \n```", "```js\n  layout: {\n   type: 'hbox',\n   align: 'stretch',\n   pack: 'center',\n   flex: 1\n  }\n```", "```js\nitems: [\n    {\n        xtype: 'container',\n        layout: {\n            type: 'vbox',\n            align: 'stretch',\n            pack: 'center',\n            flex: 1\n        },\n        items: [\n            {height: 300, width: 400, xtype: 'goalchart', chartTitle: 'Exercise', dataField: 'exercise', goalField: 'exercisePerDay', colorSet:['#a61120', '#ff0000'] },\n            {height: 300, width: 400, xtype: 'goalchart', chartTitle: 'Caloric Intake', dataField: 'calories', goalField: 'caloriesPerDay', colorSet:['#ffd13e', '#ff0000']}\n        ]\n    },\n    {\n        xtype: 'container',\n        layout: {\n            type: 'vbox',\n            align: 'stretch',\n            pack: 'center',\n            flex: 1\n        },\n        items: [\n            {height: 300, width: 400, xtype: 'goalchart', chartTitle: 'Water', dataField: 'water', goalField: 'waterPerDay', colorSet:['#115fa6', '#ff0000']},\n            {height: 300, width: 400, xtype: 'wordchart', chartTitle: 'Tags', dataField: 'tag'}\n        ]\n    }\n]\n```"]