- en: '*Chapter 4*: Bootstrap 5 Global Options and Colors'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will start customizing Bootstrap 5\. After some important
    information about the code examples, we will learn how we can change the global
    options, and then how we can customize the colors.
  prefs: []
  type: TYPE_NORMAL
- en: Changing global options and customizing colors will have an effect on many elements
    of Bootstrap 5, so it’s useful to know these kinds of customizations since they
    can save you a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Importing the Bootstrap 5 files individually
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the global options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing the colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To preview the examples, you will need a code editor and a browser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will also need a Sass compiler to compile the Sass files to CSS. Please
    see [*Chapter 2*](B17143_02_epub.xhtml#_idTextAnchor033), *Using and Compiling
    Sass* for different ways to do this.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find the code files of the chapter on GitHub at [https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide](https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide).
  prefs: []
  type: TYPE_NORMAL
- en: About the code examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this chapter, I will provide code examples taken from the Bootstrap
    5 Sass files. I will include the filename and the line number so it will be easier
    for you to find the specific code.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have made the following changes to the code from Bootstrap 5 to give you
    a better overview:'
  prefs: []
  type: TYPE_NORMAL
- en: Comments in the original Bootstrap 5 source code have been left out
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Excess spaces in between variable names and their values have been deleted in
    some cases, but not all, to accommodate the layout of this book and keep most
    of them on one line
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Empty lines have been kept, so it’s easier to find the code examples in the
    Bootstrap 5 source code.
  prefs: []
  type: TYPE_NORMAL
- en: Importing the Bootstrap 5 files individually
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we saw how to import the default Bootstrap 5\. This
    way of importing Bootstrap 5 is sufficient when changing the global options or
    overriding any default variables (and not needing any of the functions). However,
    to have more granular control and be able to customize Bootstrap 5 in more advanced
    ways, we need to import the Bootstrap 5 partials individually (some of them in
    the correct order) and our customization code at the appropriate places in between
    the Bootstrap 5 partials.
  prefs: []
  type: TYPE_NORMAL
- en: 'The full list of the individual Bootstrap 5 partials together with comments
    for where to place our own customization code is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: The utility API and own custom styles
  prefs: []
  type: TYPE_NORMAL
- en: The preceding list will be extended a bit when we want to use the utility API
    and include our own custom styles. We will see exactly how to do that in [*Chapter
    6*](B17143_06_epub.xhtml#_idTextAnchor130)*, Understanding and Using the Bootstrap
    5 Utility API*, and [*Chapter 8*](B17143_08_epub.xhtml#_idTextAnchor179)*, Customizing
    the Website Using Bootstrap 5 Variables, Utility API and Sass*, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'In those customization examples that require us to import the Bootstrap 5 partials
    individually, I have reduced the long list of Bootstrap 5 imports grouped under
    the `// Optional Bootstrap CSS` comment. This is done so that the code examples
    won’t take up too much space. Here’s what the shortened list looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Later in this book, we will also see how we can optimize our CSS code by only
    including the exact Bootstrap 5 Sass partial files that we need.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are aware of these changes to the code examples, we will start customizing
    Bootstrap 5.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the global options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bootstrap 5 comes with a set of variables to enable or disable different global
    options for styles and behavior. Most of these variables can be found grouped
    together in the `_variables.scss` file, on lines `337`-`352`, except for the `$spacer`
    variable, which can be found on line `374`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an overview of the different available options. They are listed here
    in the same order as they appear in the `_variables.scss` file:'
  prefs: []
  type: TYPE_NORMAL
- en: Caret
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rounded (border-radius)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shadows (box-shadow)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gradients
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transitions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduced motion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smooth scroll
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grid classes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container classes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CSS grid
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Button pointers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responsive Font Sizes (RFS)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Validation icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Negative margins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecation messages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important utilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spacer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will now run through each of the options and see their variable name, their
    default value, where they are defined, what they look like or do, and how they
    can be changed. For each option, there will be a code example in the `part-1/chapter-4/options/`
    folder and the content of each example’s Sass file is shown in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Caret
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-caret`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `337`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables a caret placed in a pseudo element on the toggle button
    for the dropdown component.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see an example of what enabling or disabling this option will
    look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – Dropdown button with the caret option enabled (default) ](img/Figure_4.1_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – Dropdown button with the caret option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – Dropdown button with the caret option disabled (changed) ](img/Figure_4.2_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.2 – Dropdown button with the caret option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the caret option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/caret/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Rounded
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-rounded`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `338`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables predefined border-radius styles on various components.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see a few different examples of what enabling or disabling this
    option will look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_4.3_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.3 – Button with the rounded option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.4 – Button with the rounded option disabled (changed) ](img/Figure_4.4_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.4 – Button with the rounded option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.5 – Text input with the rounded option enabled (default) ](img/Figure_4.5_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.5 – Text input with the rounded option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.6 – Text input with the rounded option disabled (changed) ](img/Figure_4.6_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.6 – Text input with the rounded option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.7 – Alert component with the rounded option enabled (default) ](img/Figure_4.7_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.7 – Alert component with the rounded option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.8 – Alert component with the rounded option disabled (changed) ](img/Figure_4.8_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.8 – Alert component with the rounded option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the rounded option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/rounded/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Shadows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-shadows`'
  prefs: []
  type: TYPE_NORMAL
- en: '`false`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `339`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables predefined decorative box-shadow styles on various components.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see a few different examples of what enabling or disabling this
    option will look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.9 – Image thumbnail with the shadows option disabled (default) ](img/Figure_4.9_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.9 – Image thumbnail with the shadows option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.10 – Image thumbnail with the shadows option enabled (changed) ](img/Figure_4.10_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.10 – Image thumbnail with the shadows option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.11 – Select with the shadows option disabled (default) ](img/Figure_4.11_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.11 – Select with the shadows option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.12 – Select with the shadows option enabled (changed) ](img/Figure_4.12_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.12 – Select with the shadows option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.13 – Progress component with the shadows option disabled (default)
    ](img/Figure_4.13_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.13 – Progress component with the shadows option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.14 – Progress component with the shadows option enabled (changed)
    ](img/Figure_4.14_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.14 – Progress component with the shadows option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the shadows option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/shadows/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Gradients
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-gradients`'
  prefs: []
  type: TYPE_NORMAL
- en: '`false`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `340`'
  prefs: []
  type: TYPE_NORMAL
- en: 'This option enables predefined gradients via background-image styles on various
    components. This visual effect is very subtle and might be hard to see. However,
    the following CSS will be used on most of the compatible components to create
    the gradient effect on top of the background color:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'On the `carousel` component, the following CSS will be used instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'Here you can see a few different examples of what enabling or disabling this
    option will look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.15 – Alert component with the gradients option disabled (default)
    ](img/Figure_4.15_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.15 – Alert component with the gradients option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.16 – Alert component with the gradients option enabled (changed)
    ](img/Figure_4.16_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.16 – Alert component with the gradients option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.17 – Button with the gradients option disabled (default) ](img/Figure_4.17_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.17 – Button with the gradients option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.18 – Button with the gradients option enabled (changed) ](img/Figure_4.18_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.18 – Button with the gradients option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.19 – Carousel component with the gradients option disabled (default)
    ](img/Figure_4.19_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.19 – Carousel component with the gradients option disabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.20 – Carousel component with the gradients option enabled (changed)
    ](img/Figure_4.20_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.20 – Carousel component with the gradients option enabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the gradients option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/gradients/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Transitions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-transitions`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `341`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables predefined transitions on various components.
  prefs: []
  type: TYPE_NORMAL
- en: No examples can be shown here in print, but the transitions are applied to accordions,
    carousels, modals, progress bars, floating labels, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the transitions option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/transitions/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: Reduced motion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-reduced-motion`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line 342'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables a `prefers-reduced-motion` media query, which will remove
    or change certain animations and transitions based on users’ preferences.
  prefs: []
  type: TYPE_NORMAL
- en: This option applies to the progress and spinner components, and to see the effect,
    you need to change some settings on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the reduced motion option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/reduced-motion/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Smooth scroll
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-smooth-scroll`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `343`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables smooth scroll behavior globally, except for users who prefer
    reduced motion.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the smooth scroll option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/smooth-scroll/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Grid classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-grid-classes`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `344`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables the generation of CSS classes used for the grid system.
    This includes `.row`, `.col`, and other related classes.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the grid classes option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/grid-classes/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Container classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-container-classes`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `345`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables the generation of CSS classes used for layout containers.
    This includes `.container`, `.container-fluid`, and other related classes.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the container classes option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/container-classes/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: CSS grid
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-cssgrid`'
  prefs: []
  type: TYPE_NORMAL
- en: '`false`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `346`'
  prefs: []
  type: TYPE_NORMAL
- en: This option is used to enable a separate grid system that’s built on a CSS grid.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to enable this, you should disable the default grid system using
    the grid classes option mentioned earlier.
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the CSS grid option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/css-grid/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: Button pointers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-button-pointers`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `347`'
  prefs: []
  type: TYPE_NORMAL
- en: This option adds a pointer cursor to non-disabled button elements and button
    components (with the `.btn` class).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see an example of what enabling or disabling this option will
    look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.21 – Button with the button pointers option enabled (default) ](img/Figure_4.21_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.21 – Button with the button pointers option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.22 – Button with the button pointers option disabled (changed) ](img/Figure_4.22_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.22 – Button with the button pointers option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the button pointers option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/button-pointers/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: Responsive Font Sizes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-rfs`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `348`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables RFS globally. You will learn more about RFS and how to use
    it in [*Chapter 10*](B17143_10_epub.xhtml#_idTextAnchor227), *Using Bootstrap
    5 with Advanced Sass and CSS Features*.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the RFS option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/responsive-font-sizes/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Validation icons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-validation-icons`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss` line `349`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables background-image icons within textual inputs and some custom
    forms for validation states.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see an example of what enabling or disabling this option will
    look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.23 – Valid text input with the validation icons option enabled (default)
    ](img/Figure_4.23_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.23 – Valid text input with the validation icons option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.24 – Valid text input with the validation icons option disabled
    (changed) ](img/Figure_4.24_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.24 – Valid text input with the validation icons option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.25 – Invalid text input with the validation icons option enabled
    (default) ](img/Figure_4.25_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.25 – Invalid text input with the validation icons option enabled (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.26 – Invalid text input with the validation icons option disabled
    (changed) ](img/Figure_4.26_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.26 – Invalid text input with the validation icons option disabled (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the validation icons option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/validation-icons/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: Negative margins
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-negative-margins`'
  prefs: []
  type: TYPE_NORMAL
- en: '`false`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `350`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables the generation of negative margin utilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the negative margins option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/negative-margins/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Deprecation messages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-deprecation-messages`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `351`'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables Sass warning messages for deprecated mixins or functions.
    Currently, no mixins or functions have been deprecated, so you won’t encounter
    this warning message with this version of Bootstrap 5.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable the deprecation messages option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/deprecation-messages/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: The code example for this option has an HTML file without any content since
    this option will only show Sass warning messages for any future deprecated mixins
    or functions.
  prefs: []
  type: TYPE_NORMAL
- en: Important utilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$enable-important-utilities`'
  prefs: []
  type: TYPE_NORMAL
- en: '`true`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line 352'
  prefs: []
  type: TYPE_NORMAL
- en: This option enables the `!important` suffix in utility classes. So, this option
    controls whether the value of the CSS declaration for utility classes will have
    `!important` added at the end and thus override all previous styling for an element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example that shows the difference:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: 'To disable the important utilities option, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/important-utilities/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: Spacer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`$spacer`'
  prefs: []
  type: TYPE_NORMAL
- en: '`1rem`'
  prefs: []
  type: TYPE_NORMAL
- en: '`_variables.scss`, line `374`'
  prefs: []
  type: TYPE_NORMAL
- en: This variable specifies the default spacer value used by many other component
    variables in the `_variables.scss` file (as well as a few other places). It’s
    also used to programmatically generate the spacer utilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you can see an example of what changing this variable to `2rem` will look
    like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.27 – Alert component with spacer set to 1rem (default) ](img/Figure_4.27_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.27 – Alert component with spacer set to 1rem (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.28 – Alert component with spacer set to 2rem (changed) ](img/Figure_4.28_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.28 – Alert component with spacer set to 2rem (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.29 – Card component with spacer set to 1rem (default) ](img/Figure_4.29_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.29 – Card component with spacer set to 1rem (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.30 – Card component with spacer set to 2rem (changed) ](img/Figure_4.30_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.30 – Card component with spacer set to 2rem (changed)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.31 – Spacing utilities with spacer set to 1rem (default) ](img/Figure_4.31_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.31 – Spacing utilities with spacer set to 1rem (default)
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.32 – Spacing utilities with spacer set to 2rem (changed) ](img/Figure_4.32_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.32 – Spacing utilities with spacer set to 2rem (changed)
  prefs: []
  type: TYPE_NORMAL
- en: 'To change the value of this variable to `2rem`, use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/options/spacer/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have learned all about how to change the global options of Bootstrap
    5, we will move on to learn about customizing the colors.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the colors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bootstrap 5 has an advanced color system that provides the correct styling for
    all elements. This color system is based on color variables, which can be customized
    in different ways to match your brand or design.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we’re going to cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Overview of the color variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating color classes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding color to theme colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removing color from theme colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of the color variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first of many variables in the `_variables.scss` file are color variables.
    They can be found on lines `9`-`321`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The color system is ordered and grouped in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: Grays
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regular colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tints and shades of colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Theme colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In each of these groups, the individual colors are first assigned to different
    variables, and these variables are then assigned to keys in a Sass map, grouping
    these related colors together. The Sass maps are used to easily loop over a list
    of colors. You can add, remove, or modify values in the Sass maps, which will
    be reflected in many of the components. We will see some examples of this later
    in this section.
  prefs: []
  type: TYPE_NORMAL
- en: But first, we will go through the different groups of colors listed previously
    and learn more about their color values, the variables, and the Sass maps.
  prefs: []
  type: TYPE_NORMAL
- en: Grays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'First, we have nine tints and shades of gray, plus white and black. The line
    numbers, variable names, and default values are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: 'These color values represent the following actual colors:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.33 – Gray colors plus white and black ](img/Figure_4.33_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.33 – Gray colors plus white and black
  prefs: []
  type: TYPE_NORMAL
- en: 'These variables (excluding `$white` and `$black`) are then grouped into the
    `$grays` Sass map:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: Regular colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Then, we have 10 different regular colors. The line numbers, variable names,
    and default values are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: 'These color values represent the following actual colors:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.34 – Regular colors ](img/Figure_4.34_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.34 – Regular colors
  prefs: []
  type: TYPE_NORMAL
- en: 'These 10 regular color variables plus `$black`, `$white`, `$gray-600`, and
    `$gray-800` are then grouped into the `$colors` Sass map:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: Tints and shades of colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After the regular colors, we have a long list of individual color variables
    for all tints and shades of the regular colors, followed by a list of Sass maps
    that group all these together.
  prefs: []
  type: TYPE_NORMAL
- en: The individual tints and shades of a regular color are generated using custom
    color functions to either tint (lighten) or shade (darken) a color (see the next
    source code). These custom color functions that are built into Bootstrap 5 use
    the `mix()` color function of Sass to create the desired colors.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example, we will look at the tints and shades of the blue color. The
    line numbers, variable names, and default values are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding code, you can see that the middle value, `$blue-500`, is assigned
    to the `$blue` color. The lighter values above that are then tinted, and the darker
    values below that are shaded using the custom color functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'This list is followed by similar lists for the other colors (indigo, purple,
    pink, red, orange, yellow, green, teal, and cyan), and starting at line `179`,
    we have the Sass maps for these colors. In case of the blue color, the Sass map
    looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE170]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE171]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE172]'
  prefs: []
  type: TYPE_PRE
- en: Theme colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Finally, we have selected colors from the groups of grays and regular colors,
    which are now assigned to eight different theme color variables. These are often
    also referred to as *contextual colors*. The line numbers, variable names, and
    default values are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE173]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE174]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE175]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE176]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE177]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE178]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE179]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE180]'
  prefs: []
  type: TYPE_PRE
- en: 'These color values represent the following actual colors:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.35 – Theme colors ](img/Figure_4.35_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.35 – Theme colors
  prefs: []
  type: TYPE_NORMAL
- en: 'These colors are then grouped into the `$theme-colors` Sass map:'
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap/scss/_variables.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE181]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE182]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE183]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE184]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE185]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE186]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE187]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE188]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE189]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE190]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the `$theme-colors` Sass map contains the specific theme color variables.
    Nothing more, nothing less. The `$grays` Sass map didn’t contain the `$white`
    and `$black` color variables, while the `$colors` Sass map did also include the
    `$black`, `$white`, `$gray-600`, and `$gray-800` color variables. This is just
    to tell you that this difference exists.
  prefs: []
  type: TYPE_NORMAL
- en: We are now finished with the overview of all the available color variables and
    Sass maps. Let’s now see how we can use these for different purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Generating color classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you need it, you can easily generate more color classes by using the `@each`
    rule built into Sass. You can then iterate over key/value pairs in a Sass map
    and define which class prefix to use.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the syntax for the `@each` rule iterating over a Sass map:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE191]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE192]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE193]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE194]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE195]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the key is assigned to the first variable name in the `@each`
    expression, and the value is assigned to the second. `$key` is then used together
    with a chosen class prefix, and `$value` is used to set the value of the CSS property.
  prefs: []
  type: TYPE_NORMAL
- en: We will now see how the `@each` rule can be used to generate different groups
    of color classes.
  prefs: []
  type: TYPE_NORMAL
- en: Custom Sass code placed after importing the required files
  prefs: []
  type: TYPE_NORMAL
- en: In most of the remaining code examples, our custom Sass code is placed after
    importing the required files (including the `_variables.scss` file) and before
    importing the optional Bootstrap files. This is necessary when we want to use
    an existing variable as a value for another variable, which is the case when we
    want to generate color classes based on existing color variables.
  prefs: []
  type: TYPE_NORMAL
- en: Grays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To generate background color classes from the `$grays` Sass map, you will need
    to use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/grays/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE196]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE197]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE198]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE199]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE200]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE201]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE202]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE203]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE204]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE205]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE206]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE207]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE208]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE209]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE210]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE211]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE212]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE213]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE214]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE215]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE216]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE217]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE218]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE219]'
  prefs: []
  type: TYPE_PRE
- en: 'When you compile this, you will get the regular Bootstrap CSS as well as the
    following background color classes:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/grays/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE220]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE221]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE222]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE223]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE224]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE225]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE226]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE227]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE228]'
  prefs: []
  type: TYPE_PRE
- en: 'This code can be tested using the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/grays/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE229]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE230]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE231]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE232]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE233]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE234]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE235]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE236]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE237]'
  prefs: []
  type: TYPE_PRE
- en: Regular colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To generate background color classes from the `$colors` Sass map, you will
    need to use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/regular-colors/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE238]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE239]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE240]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE241]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE242]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE243]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE244]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE245]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE246]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE247]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE248]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE249]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE250]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE251]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE252]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE253]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE254]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE255]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE256]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE257]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE258]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE259]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE260]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE261]'
  prefs: []
  type: TYPE_PRE
- en: 'When you compile this, you will get the regular Bootstrap CSS as well as the
    following background color classes:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/regular-colors/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE262]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE263]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE264]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE265]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE266]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE267]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE268]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE269]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE270]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE271]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE272]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE273]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE274]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE275]'
  prefs: []
  type: TYPE_PRE
- en: 'This code can be tested using the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/regular-colors/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE276]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE277]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE278]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE279]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE280]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE281]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE282]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE283]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE284]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE285]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE286]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE287]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE288]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE289]'
  prefs: []
  type: TYPE_PRE
- en: Tints and shades of blue
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To generate background color classes from the `$blues` Sass map, you will need
    to use the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/tints-and-shades/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE290]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE291]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE292]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE293]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE294]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE295]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE296]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE297]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE298]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE299]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE300]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE301]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE302]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE303]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE304]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE305]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE306]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE307]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE308]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE309]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE310]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE311]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE312]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE313]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE314]'
  prefs: []
  type: TYPE_PRE
- en: 'When you compile this, you will get the regular Bootstrap CSS as well as the
    following background color classes:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/tints-and-shades/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE315]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE316]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE317]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE318]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE319]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE320]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE321]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE322]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE323]'
  prefs: []
  type: TYPE_PRE
- en: 'This code can be tested using the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/tints-and-shades/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE324]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE325]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE326]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE327]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE328]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE329]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE330]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE331]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE332]'
  prefs: []
  type: TYPE_PRE
- en: Mixed colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also create a new custom Sass map with mixed colors specified as color
    variables or other valid color values and generate color classes based on this
    using the following Sass code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/mixed-colors/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE333]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE334]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE335]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE336]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE337]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE338]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE339]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE340]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE341]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE342]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE343]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE344]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE345]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE346]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE347]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE348]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE349]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE350]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE351]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE352]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE353]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE354]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE355]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE356]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE357]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE358]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE359]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE360]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE361]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE362]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE363]'
  prefs: []
  type: TYPE_PRE
- en: 'When you compile this, you will get the regular Bootstrap CSS as well as the
    following background color classes:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/mixed-colors/css/style.css
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE364]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE365]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE366]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE367]'
  prefs: []
  type: TYPE_PRE
- en: 'This code can be tested using the following HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/mixed-colors/index.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE368]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE369]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE370]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE371]'
  prefs: []
  type: TYPE_PRE
- en: Adding color to theme colors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bootstrap 5 has eight theme colors, which are used for component variations,
    helpers, utilities, and more. You can add more colors to the `$theme-colors` Sass
    map, which is used to generate these different variations. To do this, we will
    first create a new Sass map with new names for our keys and corresponding values
    (which can be existing color variables or any other valid color value):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE372]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE373]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE374]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE375]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE376]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE377]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE378]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE379]'
  prefs: []
  type: TYPE_PRE
- en: 'We will then merge this `$custom-colors` Sass map with the existing `$theme-colors`
    Sass map using the `map-merge()` function built into the `sass:map` module of
    Sass. We pass in the two maps that we want to merge as arguments, and the returned
    value will be stored in the `$theme-colors` variable. This will then overwrite
    the default `$theme-colors` variable, which contains the default theme colors,
    and as a result, increase our list of available theme colors. The code to merge
    these two maps is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE380]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE381]'
  prefs: []
  type: TYPE_PRE
- en: 'The complete Sass code to use for this scenario is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/add-to-theme-colors/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE382]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE383]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE384]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE385]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE386]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE387]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE388]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE389]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE390]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE391]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE392]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE393]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE394]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE395]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE396]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE397]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE398]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE399]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE400]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE401]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE402]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE403]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE404]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE405]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE406]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE407]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE408]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE409]'
  prefs: []
  type: TYPE_PRE
- en: 'We will now see what all these theme colors look like and some examples of
    how the new theme colors will come into effect in various components and utilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.36 – All the colors displayed as background color utilities ](img/Figure_4.36_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.36 – All the colors displayed as background color utilities
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.37 – All the colors displayed as text color utilities ](img/Figure_4.37_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.37 – All the colors displayed as text color utilities
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.38 – An alert component with the new tertiary color ](img/Figure_4.38_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.38 – An alert component with the new tertiary color
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.39 – A button component with the new quaternary color ](img/Figure_4.39_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.39 – A button component with the new quaternary color
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.40 – A list group component with the new quinary color ](img/Figure_4.40_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.40 – A list group component with the new quinary color
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.41 – A stretched link helper class with the new senary color ](img/Figure_4.41_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.41 – A stretched link helper class with the new senary color
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.42 – A border utility class with the new septenary color ](img/Figure_4.42_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.42 – A border utility class with the new septenary color
  prefs: []
  type: TYPE_NORMAL
- en: The full code for this example can be found in the `part-1/chapter-4/colors/add-to-theme-colors`
    folder.
  prefs: []
  type: TYPE_NORMAL
- en: Removing color from theme colors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To remove a color from the theme colors, we can use the `map-remove()` function
    built into the `sass:map` module of Sass. As arguments to this function, we pass
    in the map that we want to remove key/value pairs from, followed by the keys of
    those key/value pairs we want to remove. The returned value will be stored in
    the `$theme-colors` variable. This will then overwrite the default `$theme-colors`
    variable, which contains the default theme colors, and as a result, decrease our
    list of available theme colors.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code to remove theme colors from the `$theme-colors` map is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/remove-from-theme-colors/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE410]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE411]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE412]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE413]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE414]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE415]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE416]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE417]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE418]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE419]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE420]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE421]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE422]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE423]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE424]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE425]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE426]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE427]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE428]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE429]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE430]'
  prefs: []
  type: TYPE_PRE
- en: After compiling this, we won’t be able to use the `info`, `light`, and `dark`
    colors for any component variations, helpers, or utilities.
  prefs: []
  type: TYPE_NORMAL
- en: The full code for this example can be found in the `part-1/chapter-4/colors/remove-from-theme-colors`
    folder.
  prefs: []
  type: TYPE_NORMAL
- en: Defining a custom color palette
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To finish this section about colors in Bootstrap 5, we will learn how we can
    define a custom color palette. This is quite simple. First, we define our custom
    color values for the theme color variables that we want to change, then we import
    the Bootstrap 5 required files, and finally, we remove any unneeded theme color
    from the `$theme-colors` map. It’s important to do it in this order since we first
    want to define our own color values for the color variables, and then want to
    modify the `$theme-colors` map, which is located in the `_variables.scss` file.
  prefs: []
  type: TYPE_NORMAL
- en: In our example, we want to change the color values for the `$primary`, `$success`,
    `$info`, `$warning`, and `$danger` theme color variables and remove the `$secondary`
    theme color.
  prefs: []
  type: TYPE_NORMAL
- en: Required theme color keys
  prefs: []
  type: TYPE_NORMAL
- en: Some theme color keys are required and can’t be removed without causing errors,
    as they are being used by the Sass code of other components. This includes the
    `primary`, `success`, and `danger` keys. You can replace the values of those keys,
    but not remove the keys themselves. The `secondary` key is not required and can
    therefore be removed without causing any errors down the line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you will see the code needed to achieve this. Notice that we must specify
    our custom values for the theme color variables before importing the Bootstrap
    5 required files:'
  prefs: []
  type: TYPE_NORMAL
- en: part-1/chapter-4/colors/custom-color-palette/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE431]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE432]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE433]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE434]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE435]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE436]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE437]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE438]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE439]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE440]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE441]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE442]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE443]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE444]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE445]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE446]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE447]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE448]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE449]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE450]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE451]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE452]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE453]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE454]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE455]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE456]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE457]'
  prefs: []
  type: TYPE_PRE
- en: 'After compiling this, Bootstrap 5 will now be using the following color palette:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.43 – Our custom color palette displayed as background color utilities
    ](img/Figure_4.43_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.43 – Our custom color palette displayed as background color utilities
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.44 – Our custom color palette displayed as text color utilities
    ](img/Figure_4.44_B17143.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.44 – Our custom color palette displayed as text color utilities
  prefs: []
  type: TYPE_NORMAL
- en: The full code for this example can be found in the `part-1/chapter-4/colors/custom-color-palette`
    folder.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned all about the global options of Bootstrap 5
    and how to change them. We have also learned how to customize the colors of Bootstrap
    5, including how to generate color classes and how to add and remove colors used
    as theme colors.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to customize various elements of Bootstrap
    5.
  prefs: []
  type: TYPE_NORMAL
