- en: Chapter 9. 3D Charts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。3D图表
- en: 3D charts have been the most long awaited and the most desired feature in Highcharts.
    A feature that has been in the subject of heated debate within the users' community.
    There are users who agree, and those that disagree with the use of 3D charts.
    The pro camp argue for the use of 3D charts, for example in sales and marketing
    reports or infographics posters. The con party argue that 3D charts are misleading
    in terms of accuracy in data visualization and comparison, so the development
    resources should be focused elsewhere. As for Highcharts, it takes the pro-choice
    direction.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 3D图表一直是Highcharts中最受期待和最希望拥有的功能。这是一个在用户社区中引起激烈争论的话题。有些用户同意使用3D图表，例如在销售和营销报告中或信息图表海报中。反对者认为，3D图表在数据可视化和比较的准确性方面具有误导性，因此应将开发资源集中在其他地方。至于Highcharts，它选择了支持的方向。
- en: 'This chapter focuses on the basics of 3D configuration and shows a gallery
    of charts presented in 3D, as well as several specific options in each supported
    series. In this chapter, we will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍3D配置的基础知识，并展示了一系列以3D形式呈现的图表，以及每个支持系列中的几个特定选项。在本章中，我们将学习：
- en: What a 3D chart in Highcharts is and isn't
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高charts中的3D图表是什么以及不是什么
- en: 'Experimenting with 3D chart orientation: `alpha`, `beta`, `depth`, and `viewDistance`'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试3D图表的方向：`alpha`、`beta`、`depth`和`viewDistance`
- en: Configuring the 3D chart background
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置3D图表背景
- en: Plotting the column, pie, donut, and scatter series in 3D charts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在3D图表中绘制柱状图、饼图、环形图和散点图系列
- en: Navigating with 3D charts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用3D图表导航
- en: What a Highcharts 3D chart is and isn't
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高charts 3D图表是什么以及不是什么
- en: At the time of writing, the 3D chart feature is to display the 2D charts in
    a real 3D presentation, that is, we can rotate and tilt the charts in different
    dimensions and adjust the view distance. The 3D feature is currently only available
    for the column, pie, and scatter series.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，3D图表功能是将2D图表以真实3D演示的形式显示出来，即我们可以从不同维度旋转和倾斜图表，并调整视图距离。3D功能目前仅适用于柱状图、饼图和散点图系列。
- en: What 3D charts cannot do is to construct a real three dimensional, *x*, *y*,
    and *z* axes chart, except for the scatter plot; we will even see some shortcomings
    in the scatter plot later. As this is the first major release of 3D charts, this
    limitation may be short lived.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 3D图表无法做到的是构建一个真正的三维、*x*、*y*和*z*轴图表，除了散点图；我们甚至会在散点图中看到一些不足之处。由于这是3D图表的第一个主要版本，这种限制可能很快就会消失。
- en: Experimenting with 3D chart orientation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 尝试3D图表的方向
- en: 'To enable the 3D feature, we first need to include the extension as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用3D功能，我们首先需要包含以下扩展：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In Highcharts, there are two levels of 3D options: chart and series. The chart
    level options are located in `chart.options3d`, which mainly deals with the orientation
    and the frame around the plotting area, whereas the 3D options for the series
    remain in the usual `plotOptions` area, such as `plotOptions.column.depth`.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在Highcharts中，存在两个级别的3D选项：图表和系列。图表级别的选项位于`chart.options3d`中，主要处理绘图区域的朝向和框架，而系列的三维选项仍然位于常规的`plotOptions`区域，例如`plotOptions.column.depth`。
- en: 'Currently, Highcharts supports 2 axles of rotation: horizontal and vertical,
    which are the `alpha` and `beta` options in `chart.options3d` respectively. The
    values for these options are in degrees. The following diagram illustrates with
    arrows the direction of chart rotation as the degree value increases and decreases:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Highcharts支持两个旋转轴：水平和垂直，分别对应于`chart.options3d`中的`alpha`和`beta`选项。这些选项的值以度为单位。以下图表通过箭头说明了随着度值增加和减少图表旋转的方向：
- en: '![Experimenting with 3D chart orientation](img/7451OS_09_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![尝试3D图表方向](img/7451OS_09_01.jpg)'
- en: Alpha and beta orientations
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Alpha和beta方向
- en: 'In the previous diagram, we showed the direction of orientation. Let''s experiment
    with a column chart. We are going to use a chart from [Chapter 4](ch04.html "Chapter 4. Bar
    and Column Charts"), *Bar and Column Charts*, which looks as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图表中，我们展示了方向的指向。让我们尝试一个柱状图。我们将使用来自[第4章](ch04.html "第4章。条形图和柱状图")的图表，*条形图和柱状图*，看起来如下：
- en: '![Alpha and beta orientations](img/7451OS_09_02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![Alpha和beta方向](img/7451OS_09_02.jpg)'
- en: 'We then add the 3D options to the chart as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们按照以下方式向图表添加3D选项：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We switch the chart to 3D display mode with the enabled option and no rotation
    in both axles, which produces the following chart:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将图表切换到3D显示模式，启用选项，并在两个轴上没有旋转，从而产生以下图表：
- en: '![Alpha and beta orientations](img/7451OS_09_03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Alpha 和 beta 方向](img/7451OS_09_03.jpg)'
- en: 'Notice that without any rotation, the chart looks almost the same as the original,
    as expected. When we look closer, the columns are actually constructed in 3D,
    with depth. Let''s set the alpha axle to 30 degrees and the beta axle to remain
    at zero:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在没有旋转的情况下，图表看起来几乎与原始图表相同，正如预期的那样。当我们仔细观察时，柱子实际上是构建在 3D 中，具有深度。让我们将 alpha
    轴设置为 30 度，将 beta 轴保持为零：
- en: '![Alpha and beta orientations](img/7451OS_09_04.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![Alpha 和 beta 方向](img/7451OS_09_04.jpg)'
- en: 'We can see the 3D structure more clearly as the alpha axle increases, as we
    are leaning towards a top-down view of the chart. Let''s reset alpha back to zero
    and set the beta axle to 30 degrees:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当 alpha 轴增加时，我们可以更清楚地看到 3D 结构，因为我们正倾斜着从上到下查看图表。让我们将 alpha 轴重置为零，并将 beta 轴设置为
    30 度：
- en: '![Alpha and beta orientations](img/7451OS_09_05.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![Alpha 和 beta 方向](img/7451OS_09_05.jpg)'
- en: 'The chart is rotated horizontally on a vertical principal axis. Note that once
    the chart is rotated on the beta axle, a large gap appears between the title and
    the *y* axis. We can remove the gap by positioning the title with `x` and `y`
    options:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图表在垂直主轴上水平旋转。请注意，一旦图表在 beta 轴上旋转，标题和 *y* 轴之间会出现一个很大的间隙。我们可以通过使用 `x` 和 `y` 选项定位标题来消除这个间隙：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s set both rotations together to 30:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将两个旋转都设置为 30：
- en: '![Alpha and beta orientations](img/7451OS_09_06.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Alpha 和 beta 方向](img/7451OS_09_06.jpg)'
- en: 'Notice that when we rotate a 3D chart, the plot area can interfere with other
    components, such as chart title and spacing on each side. In this case, we need
    to use the margin settings to manually accommodate the chart properly, depending
    on the size and view angle. Here is an example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当我们旋转 3D 图表时，绘图区域可能会与其他组件（如图表标题和每侧的间距）发生干扰。在这种情况下，我们需要使用边距设置来手动适当地调整图表，这取决于大小和视图角度。以下是一个示例：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The depth and view distance
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深度和视图距离
- en: 'Apart from `alpha` and `beta` options, we can use the `depth` option to control
    the distance between the data display and the 3D background. Let''s set the `depth`
    option to be exactly the same as the default depth of the 3D columns, which is
    25 pixels deep. We also specify the `viewDistance` option to the default value,
    `100` (at the time of writing, changing the depth value also changes the `viewDistance`
    value), as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 `alpha` 和 `beta` 选项之外，我们还可以使用 `depth` 选项来控制数据显示与 3D 背景之间的距离。让我们将 `depth`
    选项设置为与 3D 柱子的默认深度完全相同，即 25 像素深。我们还指定 `viewDistance` 选项为默认值 `100`（在撰写本文时，更改深度值也会更改
    `viewDistance` 值），如下所示：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As we can see, the columns are backed up against the background frame:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，柱子背靠背景框架：
- en: '![The depth and view distance](img/7451OS_09_07.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![深度和视图距离](img/7451OS_09_07.jpg)'
- en: 'Let''s change the `viewDistance` option to 0 for a closer perspective:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将 `viewDistance` 选项更改为 0 以获得更近的视角：
- en: '![The depth and view distance](img/7451OS_09_08.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![深度和视图距离](img/7451OS_09_08.jpg)'
- en: Configuring the 3D chart background
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 3D 图表背景
- en: 'Instead of having a white background with dark labels, let''s replace the side,
    bottom, and back frames around the plot area with different settings. In Highcharts,
    we can specify the color and thickness of these frames, as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用白色背景和深色标签，让我们用不同的设置替换围绕绘图区域的侧面、底部和背面框架。在 Highcharts 中，我们可以指定这些框架的颜色和厚度，如下所示：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Meanwhile, we also change the data label color to white which contrasts nicely
    with the new background color:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，我们也更改了数据标签颜色为白色，这与新的背景颜色形成很好的对比：
- en: '![Configuring the 3D chart background](img/7451OS_09_09.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![配置 3D 图表背景](img/7451OS_09_09.jpg)'
- en: Note that if we apply a background image to the 3D chart, Highcharts doesn't
    automatically angle the image along the background.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果我们将背景图像应用于 3D 图表，Highcharts 不会自动将图像沿背景倾斜。
- en: Plotting the column, pie, donut, and scatter series in 3D charts
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 3D 图表中绘制柱状图、饼图、环形图和散点图系列
- en: In this section, we will plot a gallery of column, pie, donut, and scatter series
    which are currently supported for 3D presentation. We will also examine the 3D
    options specific to each series. Some of the examples used here are taken from
    previous chapters.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将绘制一个画廊，展示当前支持用于 3D 展示的柱状图、饼图、环形图和散点图系列。我们还将检查每个系列特定的 3D 选项。这里使用的一些示例来自前面的章节。
- en: 3D columns in stacked and multiple series
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 堆叠和多个系列中的 3D 柱子
- en: 'Let''s start with a multi-series stacked column chart embedded with the `options3d`
    setting:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从嵌入 `options3d` 设置的多系列堆叠柱状图开始：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here is what a multi-series grouped and stacked 3D columns chart looks like:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个多系列分组和堆叠的3D柱状图的样子：
- en: '![3D columns in stacked and multiple series](img/7451OS_09_10.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![堆叠和多个系列的3D柱状图](img/7451OS_09_10.jpg)'
- en: Column depth and Z-padding
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 柱深和Z内边距
- en: 'Notice from the preceding chart, the sides of the UK/Germany stacked columns
    are covered by the S. Korea/Japan columns. Suppose that we want to show part of
    the sides of the UK/Germany columns. In order to do that, we can reduce the thickness
    of the S. Korea/Japan columns with the `plotOptions.column.depth` option, such
    as:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图表中可以看出，英国/德国堆叠列的侧面被韩国/日本列覆盖。假设我们想显示英国/德国列的一部分侧面。为了做到这一点，我们可以使用`plotOptions.column.depth`选项减少韩国/日本列的厚度，例如：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we reduce the thickness of the S. Korea/Japan columns to 12 pixels which
    is around half the depth of the default value. The following chart shows one group
    of columns thinner than the other:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将韩国/日本列的厚度减少到12像素，大约是默认值的一半。以下图表显示了一组比另一组更细的列：
- en: '![Column depth and Z-padding](img/7451OS_09_11.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![柱深和Z内边距](img/7451OS_09_11.jpg)'
- en: 'Notice that even when we have reduced the depth of one group of columns, the
    sides of the UK/Germany columns are still blocked. This is because the surface
    of the 3D columns are by default aligned along each other in Highcharts. To change
    that behavior, we use the `groupZPadding` option. In order to understand the concept
    of the `groupZPadding` option, it is best to illustrate it with a top-down view
    of the 3D columns in multiple series:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，即使我们减少了一组列的深度，英国/德国列的侧面仍然被遮挡。这是因为Highcharts默认情况下将3D柱状图的表面沿彼此对齐。为了改变这种行为，我们使用`groupZPadding`选项。为了理解`groupZPadding`选项的概念，最好用多个系列3D柱状图的俯视图来展示：
- en: '![Column depth and Z-padding](img/7451OS_09_12.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![柱深和Z内边距](img/7451OS_09_12.jpg)'
- en: 'The `groupZPadding` option is the distance between the front view and the face
    of the column. In order to have the back of both series columns in line with each
    other, we need to increase the `groupZPadding` value for series B which has reduced
    depth, that is:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupZPadding`选项是前视图和柱状图面之间的距离。为了使两个系列列的背面对齐，我们需要增加具有减少深度的系列B的`groupZPadding`值，即：'
- en: '*B column depth + B groupZPadding = A column depth + A groupZPadding*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*B列深 + B组Z内边距 = A列深 + A组Z内边距*'
- en: 'We add the `groupZPadding` option as follows (3D columns have a default depth
    of 25 pixels and default `groupZPadding` of 1 pixel):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加以下`groupZPadding`选项（3D柱状图默认深度为25像素，默认`groupZPadding`为1像素）：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As expected, the S. Korea/Japan columns are pushed back and show the column
    sides of the other series:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期，韩国/日本列被推后，显示了其他系列列的侧面：
- en: '![Column depth and Z-padding](img/7451OS_09_13.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![柱深和Z内边距](img/7451OS_09_13.jpg)'
- en: Plotting the infographic 3D columns chart
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制信息图表3D柱状图
- en: 'Let''s see whether we can use Highcharts to plot an infographic style 3D chart.
    In this section, we will use the infographics designed by Arno Ghelfi and published
    in the Wired magazine, Geekiness at Any Price (See [http://starno.com/client/wired/#geekiness-at-any-price-wired](http://starno.com/client/wired/#geekiness-at-any-price-wired)).
    Here is part of the infographics poster:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们是否可以使用Highcharts绘制信息图表风格的3D图表。在本节中，我们将使用Arno Ghelfi设计的并在《Wired》杂志上发表的图表，即《任何价格下的极客精神》（见[http://starno.com/client/wired/#geekiness-at-any-price-wired](http://starno.com/client/wired/#geekiness-at-any-price-wired)）。以下是信息图表海报的一部分：
- en: '![Plotting the infographic 3D columns chart](img/7451OS_09_14.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![绘制信息图表3D柱状图](img/7451OS_09_14.jpg)'
- en: 'Although the chart looks difficult to comprehend, we will focus on using Highcharts
    to reproduce one of these special 3D style columns here. From the previous exercise,
    we know that we can set up the columns with increasing depth, or with decreasing
    `groupZPadding` values to achieve the same effect. This is because the depth and
    `groupZPadding` options are from the `plotOptions.column` configuration which
    is designed on a per-series basis. Therefore, we need to put each item of data
    as a separate series, in order to have columns with various depths and `groupZPadding`
    values, like the following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然图表看起来难以理解，但我们将专注于使用Highcharts重现这些特殊3D风格柱状图之一。从之前的练习中，我们知道我们可以设置具有增加深度或具有减少`groupZPadding`值的列，以达到相同的效果。这是因为深度和`groupZPadding`选项来自`plotOptions.column`配置，该配置是基于每个系列设计的。因此，我们需要将每个数据项作为单独的系列放置，以便具有不同深度和`groupZPadding`值的列，如下所示：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Second, the columns in the example chart have no space between them. We can
    accomplish the same result by setting the padding spaces to zero with the `groupPadding`
    and `pointPadding` options. Then, we set all the columns to have the same color
    with the color option. Without space and with the same color for the columns will
    make them look indistinguishable. Fortunately, there is another specific option
    for 3D columns, `edgeColor`, which is for the color along the column edges. Here
    is the outcome of the configuration:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，示例图表中的柱子之间没有间隔。我们可以通过将`groupPadding`和`pointPadding`选项的填充空间设置为零来实现相同的效果。然后，我们使用颜色选项将所有柱子的颜色设置为相同。没有间隔且柱子颜色相同会使它们看起来无法区分。幸运的是，3D柱状图还有一个特定的选项，即`edgeColor`，它是用于柱子边缘的颜色。以下是配置的结果：
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here is our attempt to create an infographic style chart with Highcharts:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们尝试使用 Highcharts 创建信息图表风格图表的尝试：
- en: '![Plotting the infographic 3D columns chart](img/7451OS_09_15.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![绘制信息图表 3D 柱状图](img/7451OS_09_15.jpg)'
- en: Plotting 3D pie and donut charts
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制 3D 饼图和环形图
- en: Plotting 3D pie and donut charts follows the same principle as the column chart.
    Simply include the `options3d` configuration for the orientation. To control the
    thickness of the pie chart, we use `plotOptions.pie.depth` in a similar fashion.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 3D 饼图和环形图遵循与柱状图相同的原理。只需包含用于方向的`options3d`配置即可。为了控制饼图的厚度，我们使用`plotOptions.pie.depth`以类似的方式。
- en: 'Let''s use some live data to plot a 3D pie and donut charts. First, we borrow
    some code from a Highcharts online demo ([http://www.highcharts.com/demo/pie-gradient](http://www.highcharts.com/demo/pie-gradient))
    which turns the Highcharts standard series colors into some gradient style colors.
    This automatically makes the chart more appealing with light shading:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用一些实时数据来绘制 3D 饼图和环形图。首先，我们从 Highcharts 在线演示（[http://www.highcharts.com/demo/pie-gradient](http://www.highcharts.com/demo/pie-gradient)）中借用一些代码，该代码将
    Highcharts 标准系列颜色转换为一些渐变风格的颜色。这自动使图表更具吸引力，并带有轻微的阴影：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In this pie chart, we set the pie `depth` and `alpha` rotation options to 50
    and 55 respectively:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个饼图中，我们将饼图的`depth`和`alpha`旋转选项分别设置为 50 和 55：
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As we can see, the `depth` option produces a rather thick 3D pie chart with
    nice color shading:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，`depth`选项产生了一个相当厚的 3D 饼图，并具有很好的颜色阴影：
- en: '![Plotting 3D pie and donut charts](img/7451OS_09_16.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![绘制 3D 饼图和环形图](img/7451OS_09_16.jpg)'
- en: 'In the next donut chart, we set up all the sections to be separated with the
    `sliced` option set to `true,` and apply orientations:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个饼图中，我们将所有部分设置为通过`sliced`选项设置为`true`来分隔，并应用方向：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here is a 3D donut chart with all the slices separate from each other:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个所有切片都相互分离的 3D 环形图：
- en: '![Plotting 3D pie and donut charts](img/7451OS_09_17.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![绘制 3D 饼图和环形图](img/7451OS_09_17.jpg)'
- en: The 3D scatter plot
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D 散点图
- en: 'Highcharts supports real three-dimensional scatter series, although they are
    rather visually obscure. Despite this, we can use the `zAxis` option to define
    the third axis range. The chart doesn''t display any details along the *z* axis
    like others. Let''s construct the chart with some 3D data. In order to plot a
    three-dimensional scatter series, apart from the `options3d` configuration, we
    need to define the data series in an array of triplets:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Highcharts 支持真实的三维散点系列，尽管它们在视觉上相当模糊。尽管如此，我们可以使用`zAxis`选项来定义第三个轴的范围。图表没有像其他图表那样在
    *z* 轴上显示任何细节。让我们用一些三维数据构建图表。为了绘制三维散点系列，除了`options3d`配置之外，我们还需要在三元组数组中定义数据系列：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'With a multiple three-dimensional scatter series, it looks like this:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在多个三维散点系列中，它看起来是这样的：
- en: '![The 3D scatter plot](img/7451OS_09_18.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![3D 散点图](img/7451OS_09_18.jpg)'
- en: 'As we can see, it is difficult to make sense of the data points hanging in
    3D space. Note that Highcharts currently doesn''t show any intervals along the
    *z* axis. Let''s add some navigation to assist the data visualization:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，在三维空间中悬挂的数据点很难理解。请注意，Highcharts 目前没有在 *z* 轴上显示任何间隔。让我们添加一些导航来辅助数据可视化：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We change the tooltip into crosshairs for all dimensions. In order to avoid
    the tooltip blocking the crosshair lines, we fix the tooltip position to the top-right
    of the chart with the `positioner` option. Next, we use `formatter` to style the
    tooltip content. We borrow the tooltip formatting code from a Highcharts online
    demo ([http://www.highcharts.com/demo/3d-scatter-draggable](http://www.highcharts.com/demo/3d-scatter-draggable));
    the `\u25CF` is a dot Unicode symbol which is used as a bullet point with the
    series color. Since the tooltip is away from the hovered point, it is less confusing
    to have the tooltip in a rectangular shape rather than the default speech balloon
    style (`callout` in Highcharts). The following screenshot shows the chart with
    a hovered over crosshair:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将所有维度的工具提示更改为十字准线。为了避免工具提示遮挡十字准线线，我们使用`positioner`选项将工具提示位置固定在图表的右上角。接下来，我们使用`formatter`来设置工具提示内容。我们从Highcharts在线演示（[http://www.highcharts.com/demo/3d-scatter-draggable](http://www.highcharts.com/demo/3d-scatter-draggable)）借用工具提示格式化代码；`\u25CF`是一个点Unicode符号，用作具有系列颜色的项目符号。由于工具提示远离悬停点，将工具提示设置为矩形形状而不是默认的气球样式（Highcharts中的`callout`）会更少引起混淆。以下截图显示了带有悬停十字准线的图表：
- en: '![The 3D scatter plot](img/7451OS_09_19.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![3D散点图](img/7451OS_09_19.jpg)'
- en: As we can see, even if we specify the crosshair in the z dimension, there is
    no crosshair line projected along the axis.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，即使我们在z维度指定了十字准线，也没有十字准线线沿轴投射。
- en: Navigating with 3D charts
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用3D图表进行导航
- en: In this section, we will investigate how you can interact with 3D charts. In
    [Chapter 2](ch02.html "Chapter 2. Highcharts Configurations"), *Highcharts Configurations*,
    we have already explored the drill down feature and we will revisit it briefly
    in 3D charts. Another interaction specific to 3D charts is the impressive click-and-drag
    feature.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨如何与3D图表进行交互。在[第2章](ch02.html "第2章。Highcharts配置")中，*Highcharts配置*，我们已经探讨了钻取功能，我们将在3D图表中简要回顾它。3D图表特有的另一个交互功能是令人印象深刻的点击并拖动功能。
- en: Drilldown 3D charts
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 钻取3D图表
- en: 'Let''s convert our previous drill down example into a 3D chart. First, we add
    the `options3d` option (and other positioning options):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将之前的钻取示例转换为3D图表。首先，我们添加`options3d`选项（和其他定位选项）：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here, we have our top level 3D chart:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有我们的顶级3D图表：
- en: '![Drilldown 3D charts](img/7451OS_09_20.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![钻取3D图表](img/7451OS_09_20.jpg)'
- en: 'The next step is to improve our drill down pie chart in 3D with different orientation.
    Since the top level column is already configured in 3D, the drill down pie chart
    (defined in the `drilldown.series` option with matching `id` value) will also
    follow suit. However, we won''t notice the pie in 3D because the default depth
    is 0\. So, we need to set the thickness of the pie chart with the `depth` option:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是改进我们的3D钻取饼图，使其具有不同的方向。由于顶层列已经配置为3D，钻取饼图（在`drilldown.series`选项中定义，具有匹配的`id`值）也将相应地配置。然而，我们不会注意到3D中的饼图，因为默认深度是0。因此，我们需要使用`depth`选项设置饼图的厚度：
- en: '[PRE17]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In order to set the drill down chart to a different rotation, we change the
    chart options in the `drilldown` event callback:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将钻取图表设置为不同的旋转，我们在`drilldown`事件回调中更改图表选项：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'When the `drilldown` event is triggered from the `Internet Explorer` column,
    which zooms down to a donut chart, we set the chart with new `alpha` and `beta`
    orientations to 0 and 40 respectively. We use the CSS3 `-webkit-transform` setting
    on the `9%` sign to make it appear to have the same rotation as the donut chart.
    Finally, we reset the chart to its original orientation in the `drillup` callback,
    which is triggered when the user clicks on the **Back to …**. button. Here is
    the display of the zoom down donut chart:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当从`Internet Explorer`列触发`drilldown`事件，它缩放到一个环形图时，我们将图表的新`alpha`和`beta`方向分别设置为0和40。我们使用CSS3
    `-webkit-transform`设置在`9%`符号上，使其看起来与环形图具有相同的旋转。最后，我们在`drillup`回调中重置图表到其原始方向，该回调在用户点击**返回到…**按钮时触发。以下是缩放后的环形图的显示：
- en: '![Drilldown 3D charts](img/7451OS_09_21.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![钻取3D图表](img/7451OS_09_21.jpg)'
- en: Click and drag 3D charts
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 点击并拖动3D图表
- en: 'Another impressive interaction with 3D charts is the click-and-drag function
    which we can use to drag the chart into any orientation. This interaction is actually
    from the Highcharts 3D scatter online demo, ([http://www.highcharts.com/demo/3d-scatter-draggable](http://www.highcharts.com/demo/3d-scatter-draggable)).
    Here, we are going to explore how this is achieved. Before we do that, let''s
    reuse our infographics example and copy the click-and-drag jQuery demo code into
    this exercise. The following is the click-and-drag code with minor modifications:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 与3D图表的另一个令人印象深刻的交互功能是点击并拖动功能，我们可以使用它将图表拖动到任何方向。这种交互实际上来自Highcharts 3D散点图在线演示（[http://www.highcharts.com/demo/3d-scatter-draggable](http://www.highcharts.com/demo/3d-scatter-draggable)）。在这里，我们将探讨这是如何实现的。在我们这样做之前，让我们重用我们的信息图表示例，并将点击并拖动jQuery演示代码复制到这个练习中。以下是对点击并拖动代码的轻微修改：
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The chart container's element is bound with the `mousedown` and `touchstart`
    events. The event names suffixed by `'.hc'` mean that the event handlers are grouped
    into the same name space, `'.hc'`. This is later used to unbind the event handlers
    declared under the name space.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图表容器的元素绑定在`mousedown`和`touchstart`事件上。以`'.hc'`结尾的事件名称意味着事件处理程序被分组到同一个命名空间`'.hc'`。这后来被用来解绑在命名空间下声明的所有事件处理程序。
- en: So when the user performs a `mousedown` or `touchstart` event in the chart container,
    it executes the handler. The function first normalizes the event object for cross-browser
    event compatibility. Then it records the current pointer position values (`pageX`,
    `pageY`) as well as `alpha` and `beta` values under the `mousedown` event. Further
    under the `mousedown` or `touchstart` events, we bind an additional handler with
    the `mousemove` and `touchdrag` events in the same `'.hc'` name space. In other
    words, this means that under the `mousedown` or `touchstart` action, moving the
    mouse and dragging via touch will bind the second handler to the container.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当用户在图表容器中执行`mousedown`或`touchstart`事件时，它将执行处理程序。该函数首先为跨浏览器事件兼容性标准化事件对象。然后，它记录`mousedown`事件下的当前指针位置值（`pageX`，`pageY`）以及`alpha`和`beta`值。进一步在`mousedown`或`touchstart`事件下，我们在同一个`'.hc'`命名空间中绑定一个额外的处理程序，带有`mousemove`和`touchdrag`事件。换句话说，这意味着在`mousedown`或`touchstart`动作下，移动鼠标和通过触摸拖动将绑定第二个处理程序到容器。
- en: The second handler implementation is to calculate the movement in x and y directions
    by comparing the current movement coordinates to the initial position recorded
    in the `mousedown` handler. Then, it transforms the scroll distance into orientation
    and updates the new `alpha` and `beta` values. The `Math.max` and `Math.min` expressions
    are to limit the `alpha` and `beta` into a range between -100 and 100\. Note that
    the code doesn't restrict us to only using `pageX/Y` from the event object. We
    can use other similar properties such as `screenX/Y` or `clientX/Y`, as long as
    both handlers are referring to the same.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个处理程序的实现是通过比较当前移动坐标与`mousedown`处理程序中记录的初始位置来计算x和y方向上的移动。然后，它将滚动距离转换为方向，并更新新的`alpha`和`beta`值。`Math.max`和`Math.min`表达式是为了将`alpha`和`beta`限制在-100和100之间的范围。请注意，代码并没有限制我们只能使用事件对象中的`pageX/Y`。我们可以使用其他类似属性，如`screenX/Y`或`clientX/Y`，只要两个处理程序都引用相同的。
- en: Finally, we call `chart.draw(false)` to redraw the chart with the new orientation
    but without animation. The reason for a lack of animation is that the movement
    handler is being called frequently with scroll action and animation, which will
    require extra overhead, degrading the responsiveness of the display.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们调用`chart.draw(false)`以新的方向重新绘制图表，但不进行动画。没有动画的原因是，移动处理程序在滚动动作和动画中被频繁调用，这将需要额外的开销，降低显示的响应性。
- en: 'The following screenshot illustrates the chart after the click-and-drag action:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了点击并拖动操作后的图表：
- en: '![Click and drag 3D charts](img/7451OS_09_22.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![点击并拖动3D图表](img/7451OS_09_22.jpg)'
- en: Mousewheel scroll and view distance
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鼠标滚轮滚动和视图距离
- en: We can improve the experience by introducing another interaction, `mousewheel`,
    so that the view distance of the chart responds to the `mousewheel` actions. For
    the sake of a cross-browser compatibility solution, we use a jQuery mousewheel
    plugin by Brandon Aaron ([http://github.com/brandonaaron/jquery-mousewheel/](http://github.com/brandonaaron/jquery-mousewheel/)).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过引入另一个交互，即`mousewheel`，来提高用户体验，使图表的视图距离响应`mousewheel`动作。为了实现跨浏览器的兼容性解决方案，我们使用了Brandon
    Aaron的jQuery mousewheel插件（[http://github.com/brandonaaron/jquery-mousewheel/](http://github.com/brandonaaron/jquery-mousewheel/)）。
- en: 'The following is the handler code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对处理程序的代码：
- en: '[PRE20]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In a similar fashion, `deltaY` is the `mousewheel` scroll value and we apply
    the change to the `viewDistance` option. Here is the result when we apply click-and-drag
    and mousewheel scroll actions:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似的方式，`deltaY` 是鼠标滚轮滚动值，我们将此变化应用于 `viewDistance` 选项。以下是当我们应用点击拖动和鼠标滚轮滚动操作时的结果：
- en: '![Mousewheel scroll and view distance](img/7451OS_09_23.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![鼠标滚轮滚动和视图距离](img/7451OS_09_23.jpg)'
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to create 3D column, scatter, and pie charts,
    and how to manipulate the orientation and configurations specific to each series.
    We tested these options by producing a gallery of 3D charts. On top of that, we
    explored a number of user interactions for 3D charts in Highcharts.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何创建 3D 柱状图、散点图和饼图，以及如何操作每个系列特有的方向和配置。我们通过制作 3D 图表画廊来测试这些选项。除此之外，我们还探讨了
    Highcharts 中 3D 图表的多种用户交互方式。
- en: In the next chapter, we will explore the Highcharts APIs, which are responsible
    for making a dynamic chart, such as using Ajax queries to update the chart content,
    accessing components in Highcharts objects, and exporting charts to SVG.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 Highcharts API，这些 API 负责创建动态图表，例如使用 Ajax 查询更新图表内容，访问 Highcharts
    对象中的组件，以及将图表导出为 SVG 格式。
