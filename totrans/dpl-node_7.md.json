["```js\n{\n  \"name\": \"express-webhook\",\n  \"main\": \"server.js\",\n  \"dependencies\": {\n    \"express\": \"~4.0.0\",\n    \"body-parser\": \"^1.12.3\"\n  }\n}\n```", "```js\nvar express   = require('express');\nvar app       = express();\nvar bodyParser   = require('body-parser');\nvar port      = process.env.PORT || 8082;\n\napp.use(bodyParser.json());\napp.get('/', function(req, res) {\n  res.send('Hello World!');\n});\napp.post('/webhook', function(req, res) {\n  //  We'll add this next\n});\napp.listen(port);\nconsole.log('Express server listening on port ' + port);\n```", "```js\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin git@github.com:<your username>/express-webhook\n\n```", "```js\ngit add readme.md\ngit commit -m \"testing webhooks\"\ngit push origin master\n\n```", "```js\n  \"committer\": {\n    \"name\": \"Sandro Pasquali\",\n    \"email\": \"spasquali@gmail.com\",\n    \"username\": \"sandro-pasquali\"\n  },\n  \"added\": [\n    \"readme.md\"\n  ],\n  \"removed\": [],\n  \"modified\": []\n```", "```js\napp.post('/webhook', function(req, res) {\n  console.log(req.body);\n});\n```", "```js\nvar GitHubApi = require(\"github\");\n\ngithub.authenticate({\n  type: \"oauth\",\n  token: <your token>\n});\ngithub.repos.createHook({\n  \"user\": <your github username>,\n  \"repo\": <github repo name>,\n  \"name\": \"web\",\n  \"secret\": <any secret string>,\n  \"active\": true,\n  \"events\": [\n    \"push\"\n  ],\n  \"config\": {\n    \"url\": \"http://yourserver.com/git-webhook\",\n    \"content_type\": \"json\"\n  }\n}, function(err, resp) {\n  ...\n});\n```", "```js\nvagrant box add chef/centos-7.0\n```", "```js\nvagrant init chef/centos-7.0\n\n```", "```js\nvagrant up\n\n```", "```js\nvagrant ssh\n\n```", "```js\nconfig.vm.provision \"shell\", path: \"provision.sh\"\n```", "```js\n# install nvm\ncurl https://raw.githubusercontent.com/creationix/nvm/v0.24.1/install.sh | bash\n# restart your shell with nvm enabled\nsource ~/.bashrc\n# install the latest Node.js\nnvm install 0.12\n# ensure server default version\nnvm alias default 0.12\n```", "```js\nvagrant ssh\nsu\n\n```", "```js\nnode -v\n\n```", "```js\nvagrant ALL=(ALL) NOPASSWD: ALL\n```", "```js\n# install various packages, particularly for git\nyum groupinstall \"Development Tools\" -y\nyum install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel -y\nyum install git -y\n# Move to shared folder, clone and start server\ncd /vagrant\ngit clone https://github.com/sandro-pasquali/express-webhook\ncd express-webhook\nnpm i; npm start\n\n```", "```js\nconfig.vm.network \"forwarded_port\", guest: 8082, host: 8000\n```", "```js\nvagrant reload\nvagrant provision\n\n```", "```js\n==> default: Express server listening on port 8082\n\n```", "```js\nprovisioning\n  common\n    tasks\n```", "```js\n[defaults]\nroles_path = provisioning\nlog_path = ./ansible.log\n```", "```js\n    config.vm.provision \"ansible\" do |ansible|\n    ansible.playbook = \"provisioning/server.yml\"\n    ansible.verbose = \"vvvv\"\n    end\n```", "```js\n---\n- hosts: all\n  sudo: yes\n  roles:\n    - common\n  vars:\n    env:\n      user: 'vagrant'\n    nvm:\n      version: '0.24.1'\n      node_version: '0.12'\n    build:\n      repo_path: 'https://github.com/sandro-pasquali'\n      repo_name: 'express-webhook'\n```", "```js\n---\n- name: Install necessary OS programs\n yum: name={{ item }} state=installed\n with_items:\n - autoconf\n - automake\n ...\n - git\n\n```", "```js\n- name: Install nvm\n sudo: no\n shell: \"curl https://raw.githubusercontent.com/creationix/nvm/v{{ nvm.version }}/install.sh | bash\"\n\n```", "```js\n- name: Update .bashrc\n sudo: no\n lineinfile: >\n dest=\"/home/{{ env.user }}/.bashrc\"\n line=\"source /home/{{ env.user }}/.nvm/nvm.sh\"\n\n```", "```js\ncurl https://raw.githubusercontent.com/creationix/nvm/v0.24.1/install.sh | bash; nvm install 0.12; nvm alias default 0.12; npm install gulp -g\n\n```", "```js\nhttps://floating-shelf-4947.herokuapp.com/ | https://git.heroku.com/floating-shelf-4947.git\nGit remote heroku added\n\n```", "```js\ngit push heroku master\n\n```", "```js\nheroku  https://git.heroku.com/floating-shelf-4947.git (fetch)\nheroku  https://git.heroku.com/floating-shelf-4947.git (push)\norigin  https://github.com/sandro-pasquali/express-webhook (fetch)\norigin  https://github.com/sandro-pasquali/express-webhook (push)\n\n```", "```js\nssh-keygen -t rsa\nheroku keys:add ~/.ssh/id_rsa.pub\n\n```", "```js\n\"devDependencies\": {\n  \"browserify\": \"^6.1.0\",\n  \"gulp\": \"~3.8.8\",\n  \"foobar\": \" >=1.2.3 <1.3.0\"\n}\n```", "```js\n\"my-package\" : \">=1.03-alpha.1\"\n\n```", "```js\n\"my-package\" : \">=1.03\"\n\n```", "```js\n...\n├─┬ mocha@1.21.5\n│ ├── commander@2.3.0\n│ ├─┬ debug@2.0.0\n│ │ └── ms@0.6.2\n│ ├── diff@1.0.8\n│ ├── escape-string-regexp@1.0.2\n│ ├─┬ glob@3.2.3\n│ │ ├── graceful-fs@2.0.3\n│ │ ├── inherits@2.0.1\n│ │ └─┬ minimatch@0.2.14\n│ │   ├── lru-cache@2.5.0\n│ │   └── sigmund@1.0.0\n│ ├── growl@1.8.1\n...\n\n```", "```js\ndependency-check package.json --unused\nFail! Modules in package.json not used in code: express\n\n```", "```js\ndependency-check package.json\nFail! Dependencies not listed in package.json: express\n\n```", "```js\ndependency-check package.json --entry a.js b.js [...]\n\n```", "```js\nA\n└─┬ B\n│ └── C\n└─┬ D\n  └── C\n```", "```js\nnpm install --production\n\n```", "```js\n\"dependencies\": {\n  \"grunt\": \"1.2.3\",\n  \"gulp-plugin\": \"1.0.0\" // requires grunt@2.0.0\n}\n```", "```js\n└── grunt@1.2.3\n└─┬ gulp-plugin@1.0.0\n  └── grunt@2.0.0\n```", "```js\n\"moment\": {\n  \"version\": \"2.8.4\",\n  \"from\": \"moment@^2.8.3\",\n  \"resolved\": \"https://registry.npmjs.org/moment/-/moment-2.8.4.tgz\"\n},\n\"node-uuid\": {\n  \"version\": \"1.4.2\",\n  \"from\": \"node-uuid@^1.4.1\",\n  \"resolved\": \"https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.2.tgz\"\n}\n```", "```js\ndependencies : {\n  \"express\" : \"strongloop/express\"\n}\n```", "```js\n\"package-name\": \"git+https://<github_token>:x-oauth-basic@github.com/<user>/<repo>.git\"\n\n```", "```js\n\"package-name\": \"git+ssh://git@github.com/<user>/<repo>.git\"\n\n```"]