["```js\nlet dog = { dogName: \"JavaScript\", \n            weight: 2.4, \n            color: \"brown\", \n            breed: \"chihuahua\"\n          }; \n```", "```js\nclass ClassName {\n  constructor(prop1, prop2) {\n    this.prop1 = prop1;\n    this.prop2 = prop2;\n  }\n}\n\nlet obj = new ClassName(\"arg1\", \"arg2\"); \n```", "```js\nfunction Dog(dogName, weight, color, breed) {  \n  this.dogName = dogName; \n  this.weight = weight; \n  this.color = color; \n  this.breed = breed; \n}  \nlet dog = new Dog(\"Jacky\", 30, \"brown\", \"labrador\"); \n```", "```js\nclass Dog {\n  constructor(dogName, weight, color, breed) {\n    this.dogName = dogName;\n    this.weight = weight;\n    this.color = color;\n    this.breed = breed;\n  }\n}\nlet dog = new Dog(\"JavaScript\", 2.4, \"brown\", \"chihuahua\"); \n```", "```js\nconsole.log(dog.dogName, \"is a\", dog.breed, \"and weighs\", dog.weight, \"kg.\"); \n```", "```js\nJavaScript is a chihuahua and weighs 2.4 kg. \n```", "```js\nclass Person {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n} \n```", "```js\nlet p = new Person(\"Maaike\", \"van Putten\"); \n```", "```js\nconsole.log(\"Hi\", p.firstname); \n```", "```js\nHi Maaike \n```", "```js\nlet p = new Person(\"Maaike\"); \n```", "```js\nconsole.log(\"Hi\", p.firstname, p.lastname); \n```", "```js\nHi Maaike undefined \n```", "```js\nconstructor(firstname, lastname = \"Doe\") {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  } \n```", "```js\nclass Person {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n  greet() {\n    console.log(\"Hi there! I'm\", this.firstname);\n  }\n} \n```", "```js\nlet p = new Person(\"Maaike\", \"van Putten\");\np.greet(); \n```", "```js\nHi there! I'm Maaike \n```", "```js\nHi there! I'm Rob \n```", "```js\nclass Person {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n  greet() {\n    console.log(\"Hi there!\");\n  }\n  compliment(name, object) {\n    return \"That's a wonderful \" + object + \", \" + name;\n  }\n} \n```", "```js\nlet compliment = p.compliment(\"Harry\", \"hat\");\nconsole.log(compliment); \n```", "```js\nThat's a wonderful hat, Harry \n```", "```js\nclass Person {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n} \n```", "```js\nlet p = new Person(\"Maaike\", \"van Putten\");\nconsole.log(\"Hi\", p.firstname); \n```", "```js\nclass Person {\n  #firstname;\n  #lastname;\n  constructor(firstname, lastname) {\n    this.#firstname = firstname;\n    this.#lastname = lastname;\n  }\n} \n```", "```js\nlet p = new Person(\"Maria\", \"Saga\");\nconsole.log(p.firstname); \n```", "```js\nundefined \n```", "```js\nconstructor(firstname, lastname) { \n    if(firstname.startsWith(\"M\")){\n      this.#firstname = firstname; \n    } else {\n      this.#firstname = \"M\" + firstname; \n    }\n    this.#lastname = lastname; \n  } \n```", "```js\nlet p = new Person(\"kay\", \"Moon\"); \n```", "```js\nclass Person {\n  #firstname;\n  #lastname;\n  constructor(firstname, lastname) {\n    this.#firstname = firstname;\n    this.#lastname = lastname;\n  }\n  get firstname() {\n    return this.#firstname;\n  }\n  set firstname(firstname) {\n    this.#firstname = firstname;\n  }\n  get lastname() {\n    return this.#lastname;\n  }\n  set lastname(lastname) {\n    this.#lastname = lastname;\n  }\n} \n```", "```js\nlet p = new Person(\"Maria\", \"Saga\");\nconsole.log(p.firstname); \n```", "```js\nMaria \n```", "```js\np.firstname = \"Adnane\"; \n```", "```js\nset firstname(firstname) { \n    if(firstname.startsWith(\"M\")){\n      this.#firstname = firstname; \n    } else {\n      this.#firstname = \"M\" + firstname; \n    }\n  } \n```", "```js\nclass Vehicle {\n  constructor(color, currentSpeed, maxSpeed) {\n    this.color = color;\n    this.currentSpeed = currentSpeed;\n    this.maxSpeed = maxSpeed;\n  }\n  move() {\n    console.log(\"moving at\", this.currentSpeed);\n  }\n  accelerate(amount) {\n    this.currentSpeed += amount;\n  }\n} \n```", "```js\nclass Motorcycle extends Vehicle {\n  constructor(color, currentSpeed, maxSpeed, fuel) {\n    super(color, currentSpeed, maxSpeed);\n    this.fuel = fuel;\n  }\n  doWheelie() {\n    console.log(\"Driving on one wheel!\");\n   }\n} \n```", "```js\nlet motor = new Motorcycle(\"Black\", 0, 250, \"gasoline\");\nconsole.log(motor.color);\nmotor.accelerate(50);\nmotor.move(); \n```", "```js\nBlack\nmoving at 50 \n```", "```js\nClassName.prototype \n```", "```js\nclass Person {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n  greet() {\n    console.log(\"Hi there!\");\n  }\n} \n```", "```js\nPerson.prototype.introduce = function () {\n  console.log(\"Hi, I'm\", this.firstname);\n}; \n```", "```js\nPerson.prototype.favoriteColor = \"green\"; \n```", "```js\nlet p = new Person(\"Maria\", \"Saga\");\nconsole.log(p.favoriteColor);\np.introduce(); \n```", "```js\ngreen\nHi, I'm Maria \n```", "```js\n    function Person(first,last) {\n      this.first = first;\n      this.last = last;\n    }\n    // What should go here: A, B, or C?\n    const friend1 = new Person(\"Laurence\", \"Svekis\");\n    console.log(friend1.getName()); \n    ```", "```js\n    Person.prototype.getName = (first,last) {\n      return this.first + \" \" + this.last;\n    }; \n    ```", "```js\n    Person.prototype.getName = function getName() {\n    return this.first + \" \" + this.last;\n    }; \n    ```", "```js\n    Person.prototype = function getName() {\n    return this.first + \" \" + this.last;\n    }; \n    ```"]