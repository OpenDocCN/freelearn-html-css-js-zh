["```js\n<Birthday name={name} dob={dob} />\n```", "```js\nimport { describe, it, expect } from 'vitest';\nimport {\n  render,\n  screen\n} from '@testing-library/svelte';\nimport Birthday from './Birthday.svelte';\n```", "```js\ndescribe('Birthday', () => {\n  it('displays the name of the person', () => {\n  });\n});\n```", "```js\ndescribe('Birthday', () => {\n  it('displays the name of the person', () => {\n    render(Birthday, { name: 'Hercules' });\n  });\n});\n```", "```js\ndescribe('Birthday', () => {\n  it('displays the name of the person', () => {\n    render(Birthday, { name: 'Hercules' });\n    expect(\n      screen.queryByText('Hercules')\n    ).toBeVisible();\n  });\n});\n```", "```js\nexpect(\n  screen.queryByText('Hercules')\n).not.toBeNull();\n```", "```js\n FAIL  src/routes/birthdays/Birthday.test.js [ src/routes/birthdays/Birthday.test.js ]\nError: Failed to load url ./Birthday.svelte (resolved id: ./Birthday.svelte). Does the file exist?\n```", "```js\n FAIL  src/routes/birthdays/Birthday.test.js > Birthday > displays the name of the person\nError: expect(received).toBeVisible()\nreceived value must be an HTMLElement or an SVGElement.\n ❯ src/routes/birthdays/Birthday.test.js:13:5\n     11|   expect(\n     12|    screen.queryByText('Hercules')\n     13|   ).toBeVisible();\n       |     ^\n     14|  });\n     15| });\n```", "```js\nError: expect(received).toBeVisible()\n```", "```js\n<script>\n  export let name;\n</script>\n<span><strong>{name}</strong></span>\n```", "```js\n ✓ src/routes/birthdays/Birthday.test.js (1)\n   ✓ Birthday (1)\n     ✓ displays the name of the person\n ✓ src/index.test.js (3)\n   ✓ sum test (3)\n     ✓ adds 1 + 2 to equal 3\n     ✓ renders hello into the document\n     ✓ renders hello, svelte\n Test Files  2 passed (2)\n      Tests  4 passed (4)\n   Start at  11:45:47\n   Duration  1.60s (transform 503ms, setup 306ms, collect 272ms, tests 63ms)\n```", "```js\nit('displays the date of birth', () => {\n  render(Birthday, { dob: '1994-02-02' });\n  expect(\n    screen.queryByText('1994-02-02')\n  ).toBeVisible();\n});\n```", "```js\n<script>\n  export let name;\n  export let dob;\n</script>\n<span><strong>{name}</strong></span>\n<span>{dob}</span>\n```", "```js\nstderr | src/routes/birthdays/Birthday.test.js > Birthday > displays the name of the person\n<Birthday> was created without expected prop 'dob'\nstderr | src/routes/birthdays/Birthday.test.js > Birthday > displays the date of birth\n<Birthday> was created without expected prop 'name'\n ✓ src/routes/birthdays/Birthday.test.js (2)\n   ✓ Birthday (2)\n     ✓ displays the name of the person\n     ✓ displays the date of birth\n```", "```js\ndescribe('Birthday', () => {\n  const exampleBirthday = {\n    name: 'Ares',\n    dob: '1996-03-03'\n  };\n  ...\n});\n```", "```js\nit('displays the name of the person', () => {\n  render(Birthday, {\n    ...exampleBirthday,\n    name: 'Hercules'\n  });\n  ...\n});\n```", "```js\nit('displays the date of birth', () => {\n  render(Birthday, {\n    ...exampleBirthday,\n    dob: '1994-02-02'\n  });\n  ...\n});\n```", "```js\n<span><strong>Hercules</strong></span>\n<span>1994-02-02</span>\n```", "```js\nit('displays the name of another person', () => {\n  render(Birthday, {\n    ...exampleBirthday,\n    name: 'Athena'\n  });\n  expect(\n    screen.queryByText('Athena')\n  ).toBeVisible();\n});\n```", "```js\n<script>\n  export let name;\n  export let dob;\n</script>\n<span><strong>{name}</strong></span>\n<span>{dob}</span>\n<style>\n  span {\n    display: inline-block;\n    width: 100px;\n  }\n</style>\n```"]