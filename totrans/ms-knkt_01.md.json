["```js\ngit clone git@github.com:tyrsius/MasteringKnockout\n\n```", "```js\ngit checkout cp1\n\n```", "```js\nnode server.js\n\n```", "```js\ngit checkout [BranchName]\n\n```", "```js\nthis.property = ko.observable('default value');\n```", "```js\nvar total = vm.total();// read value\nvm.total(50);// write new value\n```", "```js\nthis.users = ko.observableArray(myUsers);\n```", "```js\nthis.users().push(new User(\"Tim\"));\n```", "```js\nthis.users.push(new User(\"Tim\"));\n```", "```js\nvar subtotal = ko.observable(0);\nvar tax = ko.observable(0.05);\nvar total  = ko.computed(function() {\n  return parseFloat(subtotal()) * (1 + parseFloat(tax()));\n});\n```", "```js\nvar subtotal = ko.observable(0);\nvar tax = ko.observable(0.05);\nvar total  = ko.computed({\n  write: function(newValue) {\n      subtotal(newValue / (1 + parseFloat(self.tax())));\n  },\n  read: function() {\n      parseFloat(subtotal()) * (1 + parseFloat(tax()));\n }\n});\n```", "```js\nvar total = ko.pureComputed(function() {\n  return parseFloat(subtotal()) * (1 + parseFloat(tax()));\n});\n//OR\nvar total = ko.computed(function() {\n  return parseFloat(subtotal()) * (1 + parseFloat(tax()));\n}, this, { pure: true });\n```", "```js\nvar locationId = ko.observable();\nlocationId.subscribe(function (newLocationId) {\n  webService.getLocationDetails(newLocationId);\n});\n```", "```js\nlocationId.subscribe(function (oldValue) {\n  console.log(\"the location \" + oldValue + \" is about to change\");\n}, self, 'beforeChange');});\n```", "```js\nvar subscription = locationId.subscribe(function (newValue) {\n  console.log(\"the location \" + oldValue + \" is about to change\");\n  subscription.dispose();\n});\n```", "```js\nfunction Invoice() {\n  this.subtotal = ko.observable();\n  this.total = ko.computed(function() {\n  return this.subtotal() * 1.08; //Tax Rate\n  });\n}\n```", "```js\nfunction Invoice() {\n  this.subtotal = ko.observable();\n  this.total = ko.computed(function() {\n    return this.subtotal() * 1.08; //Tax Rate\n  }, this);\n}\n```", "```js\nfunction Invoice() {\n  var self = this;\n  self.subtotal = ko.observable();\n  self.total = ko.computed(function() {\nreturn self.subtotal() * 1.08; //Tax Rate\n  });\n}\n```", "```js\nvar protoVm = {\n  name: ko.observable('New User')\n};\n\nvar base1 = Object.create(protoVm);\nvar base2 = Object.create(protoVm);\n\nbase2.name(\"Base2\");\n```", "```js\n<button data-bind=\"enable: canSave\">Save</button>\n```", "```js\n<input data-bind=\"value: firstName, enable: canEdit\" />\n```", "```js\n<input data-bind=\"value: firstName\" />\n```", "```js\nvar viewmodel = {\n  user: {\n    firstName: ko.observable('Tim'),\n    age: ko.observable(27)\n  }\n};\n```", "```js\n<input data-bind=\"value: user.firstName\" />\n```", "```js\n<ul data-bind=\"foreach: contacts\">\n    <li>\n      <span data-bind=\"text: name\"></span>\n      <button data-bind=\"click: $parent.remove\">Remove</button>\n    </li>\n</ul>\n\nvar ViewModel = function() {\n    var self = this;\n    self.contacts = ko.observableArray([{ name: 'Tim' }, { name: 'Bob' }]);\n    self.remove = function (contact) {\n         self.contacts.remove(contact);\n    };\n};\n```", "```js\n<button data-bind=\"enable: age > 18\">Approve</button>\n```", "```js\nOld enough to Drink in the U.S. \n<span data-bind=\"text: age > 18 ? 'Yes' : 'No'\"></span>\n```", "```js\n<button data-bind=\"enable: canApprove(age)\">Approve</button>\n```", "```js\n<button data-bind=\"text: \nfunction(data) { console.log(data.age)  }\">Log Age</button>\n```", "```js\n<input data-bind=\"value: firstName\" />\n```", "```js\nvar viewmodel = {\n  user: ko.observable({\n    firstName: ko.observable('Tim'),\n    age: ko.observable(27)\n  })\n};\n```", "```js\n<input data-bind=\"value: user().firstName\" />\n```", "```js\n<button data-bind=\"enable: user().age > 18\">Approve</button>\n<button data-bind=\"enable: user().age() > 18\">Approve</button>\n```", "```js\n<pre data-bind=\"text: ko.toJSON($root, null, 2)\"></pre>\n```", "```js\n    <span data-bind=\"text: group\"></span>\n    <div data-bind=\"with: person\">\n      <span data-bind=\"text: name\"></span>\n    <span data-bind=\"text: $parent.group\"></span>\n      </div>\n    ```", "```js\n<div data-bind=\"if: isAdmin\">\n  <span data-bind=\"text: user.username\"></span>\n  <button data-bind=\"click: deleteUser\">Delete</button>\n</div>\n```", "```js\n<div data-bind=\"if: !isAdmin()\" >\n<div data-bind=\"ifnot: isAdmin\">\n```", "```js\n<div>\n  First Name:\n<span data-bind=\"text: selectedPerson().firstName\"></span>\n  Last Name:\n<span data-bind=\"text: selectedPerson().lastName\"></span>\n</div>\n\n<div data-bind=\"with: selectedPerson\">\n  First Name:\n<span data-bind=\"text: firstName\"></span>\n  Last Name:\n<span data-bind=\"text: lastName\"></span>\n</div>\n```", "```js\nvar viewmodel = {\n  people: [{name: 'Tim'}, {name: 'Justin}, {name: 'Mark'}]\n}\n```", "```js\n<ul data-bind=\"foreach: people\">\n  <li data-bind=\"text: name\"></li>\n</ul>\n```", "```js\n<ul>\n  <li>Tim</li>\n  <li>Justin</li>\n  <li>Mark</li>\n</ul>\n```", "```js\nvar viewmodel = {\n  people: ['Tim', 'Justin, 'Mark']\n}\n...\n<ul data-bind=\"foreach: people\">\n  <li data-bind=\"text: $data\"></li>\n</ul>\n```", "```js\n<ul data-bind=\"foreach: { data: categories, as: 'category' }\">\n    <li>\n        <ul data-bind=\"foreach: { data: items, as: 'item' }\">\n          <li>\n            <span data-bind=\"text: category.name\"></span>:\n            <span data-bind=\"text: item\"></span>\n          </li>\n         </ul>\n    </li>\n</ul>\n```", "```js\n  <ul data-bind=\"foreach: { data: categories, as: 'category' }\">\n  <ul data-bind=\"template: { foreach: categories, as: 'category' }\">\n```", "```js\n<div data-bind=\"template: { name: 'person-template', data: seller }\"></div>\n<script type=\"text/html\" id=\"person-template\">\n    <h3 data-bind=\"text: name\"></h3>\n    <p>Credits: <span data-bind=\"text: credits\"></span></p>\n</script>\n```", "```js\n<div>\n  <div data-bind=\"template: { name: 'person', data: father} \"></div>\n  <div data-bind=\"template: { name: 'person', data: mother} \"></div>\n</div>\n...\n<script type=\"text/html\" id=\"person\">\n  <h3 data-bind=\"text: name\"></h3>\n  <strong>Age: </strong>\n<span data-bind=\"text: age\"></span><br>\n  <strong>Location: </strong>\n<span data-bind=\"text: location\"></span><br>\n  <strong>Favorite Color: </strong>\n<span data-bind=\"text: favoriteColor\"></span><br>\n</script>\n```", "```js\n<div data-bind=\"template: { name: 'personTemplate', data: forefather} \"></div>\n\n<script type=\"text/html\" id=\"personTemplate\">\n  <h4 data-bind=\"text: name\"></h4>\n  <ul data-bind=\"foreach: children\">\n    <li data-bind=\"template: 'personTemplate'\"></li>\n  </ul>\n</script>\n```", "```js\n<div data-bind=\"template: { name: template, data: father} \"></div>\n```", "```js\nself.template = ko.computed(function() {\n  return self.editing() ? 'editTemplate' : 'viewTemplate';\n});\n```", "```js\n<ul>\n    <li>People</li>\n    <li>Locations</li>\n    <!-- ko if: isAdmin -->\n    <li>Users</li>\n    <li>Admin</li>\n    <!-- /ko -->\n</ul>\n```", "```js\n<ul>\n    <li>Nav Header</li>\n    <!-- ko foreach: navigationItems -->\n    <li><span data-bind=\"text: $data\"></span></li>\n    <!-- /ko -->\n</ul>\n```", "```js\nko.extenders.recordChanges = function(target, options) {\n  target.previousValues = ko.observableArray();\n  target.subscribe(function(oldValue) {\n    target.previousValues.push(oldValue);\n  }, null, 'beforeChange');\n  return target;\n};\n```", "```js\nvar amount = ko.observable(0).extend({ recordChanges: true});\n```", "```js\nvar amount = ko.observable(0).extend({ recordChanges: true,anotherExtender: { intOption: 1});\n```", "```js\nko.extenders.recordChanges = function(target, options) {\n  target.previousValues = ko.observableArray();\n  target.subscribe(function(oldValue) {\n    if (!(options.ignore && options.ignore.indexOf(oldValue) !== -1))\n      target.previousValues.push(oldValue)\n  }, null, 'beforeChange');\n  return target;\n};\n```", "```js\nvar history = ko.observable(0).extend({ \n  recordChanges: { ignore: [0, null] } \n});\n```", "```js\nko.extenders.recordChanges = function(target, options) {\n  var ignore = options.ignore instanceof Array ? options.ignore : [];\n  //Make sure this value is available\n  var result = ko.computed({\n    read: target,\n    write: function(newValue) {\n      if (ignore.indexOf(newValue) === -1) {\n        result.previousValues.push(target());\n        target(newValue);\n      } else {\n        target.notifySubscribers(target());\n      }\n    }\n  }).extend({ notify: 'always'});\n\n  result.previousValues = ko.observableArray();\n\n  //Return the computed observable\n  return result;\n};\n```", "```js\n(function(app, $, ko) {\n  /* CODE IN HERE */\n})(window.app = window.app || {}, jQuery, ko);\n```", "```js\napp.Contact = function(init) {\n  var self = this;\n  self.id = ko.observable(0);\n  self.firstName = ko.observable('');\n  self.lastName = ko.observable('');\n  self.nickname = ko.observable('');\n  self.phoneNumber = ko.observable('');\n  /* More below */\n```", "```js\nself.displayName = ko.computed(function() {\n      var nickname = self.nickname() || '';\n      if (nickname.length > 0)\n        return nickname;\n      else if ((self.firstName() || '').length > 0)\n        return self.firstName() + ' ' + self.lastName();\n      else\n        return 'New Contact';\n    });\n```", "```js\n//Generic update method, merge all properties into the viewmodel\nself.update = function(update) {\n  data = update || {};\n  Object.keys(data).forEach(function(prop) {\n    if (ko.isObservable(self[prop]))\n      self[prop](data[prop]);\n  });\n};\n\n//Set the initial values using our handy-dandy update method.\nself.update(init);\n```", "```js\n//Remove unwanted properties from serialized data\n    self.toJSON = function() {\n      var copy = ko.toJS(self);\n      delete copy.displayName;\n      return copy;\n    };\n```", "```js\napp.ContactsPageViewmodel = function(dataService)\n```", "```js\nko.applyBindings(new app.ContactsPageViewmodel(app.mockDataService));\n```", "```js\nself.contacts = ko.observableArray();\n\ndataService.getContacts(function(contacts) {\n  self.contacts(contacts);\n});\n```", "```js\nself.entryContact = ko.observable(null);\n\n    self.newEntry = function() {\n      self.entryContact(new app.Contact());\n    };\n    self.cancelEntry = function() {\n      self.entryContact(null);\n    };\n```", "```js\nself.editContact = function(contact) {\n      self.entryContact(contact);\n    };\n```", "```js\nself.saveEntry = function() {\n  if (self.entryContact().id() === 0) {\n    dataService.createContact(self.entryContact(), function() {\n      self.contacts.push(self.entryContact());\n      self.entryContact(null);\n    });\n  } else {\n    dataService.updateContact(self.entryContact(), function() {\n      self.entryContact(null);\n    });\n  }\n};\n```", "```js\nself.contacts.push(self.entryContact());\nself.entryContact(null);\n```", "```js\nself.deleteContact = function(contact) {\n      dataService.removeContact(contact.id(), function() {\n        self.contacts.remove(contact);\n      });\n    };\n```", "```js\nself.query = ko.observable('');\nself.clearQuery = function() { self.query(''); };\n```", "```js\nself.displayContacts = ko.computed(function() {  \n  //No query, just return everything\n  if (self.query() === '')\n    return self.contacts();\n  var query = self.query().toLowerCase();\n  //Otherwise, filter all contacts using the query\n  return ko.utils.arrayFilter(self.contacts(), function(c) {\n    return c.displayName().toLowerCase().indexOf(query) !== -1 \n        || c.phoneNumber().toLowerCase().indexOf(query) !== -1;\n  });\n});\n```", "```js\nself.displayContacts = ko.computed(function() {\n  /* computed body */\n}).extend({\n  rateLimit: {\n    timeout: 100,\n    method: 'notifyWhenChangesStop'\n  }\n});\n```", "```js\ncreateContact: function(contact, callback) {\n  $.ajax({\n      type: \"POST\",\n      url: \"/contacts\",\n      data: ko.toJS(contact)\n    })\n    .done(function(response) {\n      contact.id(response.id);\n      callback()\n    });\n}\n```", "```js\n<form class=\"form\" role=\"form\" data-bind=\"with: entryContact, submit: saveEntry\">\n      <h2 data-bind=\"text: displayName\"></h2>\n      <div class=\"form-group\">\n        <label for=\"firstName\" class=\"control-label\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\"placeholder=\"First Name\" data-bind=\"value: firstName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"lastName\" class=\"control-label\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"First Name\" data-bind=\"value: lastName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"nickname\" class=\"control-label\">Nickname</label>\n        <input type=\"text\" class=\"form-control\" id=\"nickname\" placeholder=\"First Name\" data-bind=\"value: nickname\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"phoneNumber\" class=\"control-label\">Phone Number</label>\n        <input type=\"tel\" class=\"form-control\" id=\"phoneNumber\" placeholder=\"First Name\" data-bind=\"value: phoneNumber\">\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button data-bind=\"click: $parent.cancelEntry\" class=\"btn btn-danger\">Cancel</button>\n      </div>\n    </form>\n```", "```js\n<div data-bind=\"ifnot: entryContact\">\n  <h2>Contacts</h2>\n  <div class=\"row\">\n    <div class=\"col-xs-8\">\n      <input type=\"search\" class=\"form-control\" data-bind=\"value: query, valueUpdate: 'afterkeydown'\" placeholder=\"Search Contacts\">\n    </div>\n    <div class=\"col-xs-4\">\n      <button class=\"btn btn-primary\" data-bind=\"click: newEntry\">Add Contact</button>\n    </div>\n  </div>\n  <ul class=\"list-unstyled\" data-bind=\"foreach: displayContacts\">\n    <li>\n      <h3>\n        <span data-bind=\"text: displayName\"></span> \n          <small data-bind=\"text: phoneNumber\"></small>\n        <button class=\"btn btn-sm btn-default\" data-bind=\"click: $parent.editContact\">Edit</button>\n        <button class=\"btn btn-sm btn-danger\" data-bind=\"click: $parent.deleteContact\">Delete</button>\n      </h3>\n    </li>\n  </ul>\n</div>\n```"]