["```js\n{\n    \"name\": \"2048\",\n    \"version\": \"1.0.0\",\n    \"description\": \"2048 Progressive Web App\",\n    \"author\": \"Chris Love\",\n    \"private\": true,\n    \"devDependencies\": {\n        \"grunt\": \"*\",\n        \"grunt-contrib-connect\": \"*\"\n    }\n}\n```", "```js\n>npm install\n```", "```js\nmodule.exports = function (grunt) {\n    grunt.loadNpmTasks('grunt-contrib-connect');\n    // Project configuration.\n    grunt.initConfig({\n        connect: {\n            localhost: {\n                options: {\n                    port: 15000,\n                    keepalive: true\n                }\n            }\n        }\n    });\n};\n```", "```js\n>grunt connect\nRunning \"connect:localhost\" (connect) task\nWaiting forever...\nStarted connect web server on http://localhost:15000\n```", "```js\n<head>\n      â€¦.\n  <link rel=\"manifest\" href=\"manifest.json\">\n</head>\n```", "```js\n      <script>\n        if ('serviceWorker' in navigator) {  \n            navigator.serviceWorker.register('/sw.js').then(function \n             (registration) {    // Registration was successful                   \n                console.log('ServiceWorker registration successful with \n               scope: ', registration.scope);  \n            }).catch(function (err) {    // registration failed :(\n                console.log('ServiceWorker registration failed: ', \n                err);  \n            });\n        }\n    </script>\n```", "```js\nself.addEventListener(\"install\", function (event) {\n    console.log(\"Installing the service worker!\");\n    caches.open(\"PRECACHE\")\n        .then(function (cache) {\n            cache.addAll(cacheList);\n        });\n});\n```", "```js\nvar cacheList = [\n    \"index.html\",\n    \"style/main.css\",\n    \"js/keyboard_input_manager.js\",\n    \"js/html_actuator.js\",\n    \"js/grid.js\",\n    \"js/tile.js\",\n    \"js/local_storage_manager.js\",\n    \"js/game_manager.js\",\n    \"js/application.js\"\n];\n```", "```js\nself.addEventListener(\"fetch\", function (event) {\n    event.respondWith(\n        caches.match(event.request)\n        .then(function (response) {\n            if (response) {\n                return response;\n            }\n            return fetch(event.request);\n        })\n    );\n});\n```"]