["```js\npy -m SimpleHTTPServer \n```", "```js\npy -m http.server\n```", "```js\nclass myClass {\n  constructor() {\n    // do stuff\n  }\n}\n```", "```js\nclass HelloWorld extends HTMLElement {\n  constructor() {\n    // very important\n    // needed in every constructor\n    // which extends another class\n    super();\n\n    // do magic here\n    this.innerText = 'Hello World';\n  }\n}\n```", "```js\ncustomElements.define('hello-world', HelloWorld);\n```", "```js\n<hello-world><hello-world>\n```", "```js\nclass SmileyEmoji extends HTMLElement {\n  constructor() {\n    super();\n    // let's set the inner text of \n    // this element to a smiley\n    this.innerText = ''; \n  }\n}\n\ncustomElements.define('smiley-emoji', SmileyEmoji);\n```", "```js\n<smiley-emoji></smiley-emoji>\n```", "```js\nclass AddSmiley extends HTMLSpanElement {\n  constructor() {\n    super();\n\n    // lets append a smiley\n    // to the inner text\n    this.innerText += ''; \n  }\n}\ncustomElements.define('add-smiley', AddSmiley, { extends: 'span' });\n```", "```js\n<span is=\"add-smiley\">Hello World</span>\n```", "```js\ncustomElements.get('smiley-emoji');\n```", "```js\n<div class=\"entry\"></div>\n```", "```js\n// get the reference to the div\nlet shadowRootEl = document.querySelector('.entry');\n\n// mark it as a shadow root\nlet shadowRoot = shadowRootEl.attachShadow({mode: 'open'});\n\n// create a random span tag\n// that can be appended to the shadow root\nlet childEl = document.createElement('span');\nchildEl.innerText = \"Hello shadow DOM\";\n\n// append the span tag to shadow root\nshadowRoot.appendChild(childEl);\n```", "```js\nclass HelloWorld extends HTMLElement {\n  constructor() {\n    super();\n\n    // do magic here\n    this.innerText = 'Hello World';\n  }\n}\n\ncustomElements.define('hello-world', HelloWorld);\n```", "```js\nlet shadowRoot = this.attachShadow({mode: 'open'});\n```", "```js\n// add a text node\nshadowRoot.append('Hello World');\n```", "```js\n<template id=\"my-template\">\n <div class=\"red-border\">\n <p>Hello Templates</p>\n <p>This is a small template</p>\n </div>\n</template>\n```", "```js\n// Get the reference to the template\nlet templateReference = document.querySelector('#my-template');\n\n// Get the content node\nlet templateContent = templateReference.content;\n\n// clone the template content\n// and append it to the target div\ndocument.querySelector('#target')\n    .appendChild(templateContent.cloneNode(true));\n```", "```js\n// Get the reference to the template\nlet templateReference = document.querySelector('#my-template');\n\n// Get the content node\nlet templateContent = templateReference.content;\n\n// Get the reference to target DOM\nlet targetDOM = document.querySelector('#target');\n\n// add a shadow root to the target reference DOM\nlet targetShadowRoot = targetDOM.attachShadow({mode: 'open'});\n\n// clone the template content\n// and append it to the target div\ntargetShadowRoot.appendChild(templateContent.cloneNode(true));\n```", "```js\n<template id=\"hello-world-template\">\n  <div>\n    <p>Hello Templates</p>\n    <p>This is a small template</p>\n  </div>\n</template>\n```", "```js\nclass HelloWorld extends HTMLElement {\n  constructor() {\n    super();\n\n    // Get the reference to the template\n    let templateReference = document.querySelector('#hello-world-template');\n\n    // Get the content node\n    let templateContent = templateReference.content;\n\n    let shadowRoot = this.attachShadow({mode: 'open'});\n\n    // add a text node\n    shadowRoot.append(templateContent.cloneNode(true));\n  }\n}\n\ncustomElements.define('hello-world', HelloWorld);\n```", "```js\n<hello-world></hello-world>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n  </head>\n  <body>\n    <p>Placeholder for Random Number</p>\n  </body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n  </head>\n  <body>\n    <p>Placeholder for Random Number</p>\n\n    <script type=\"text/javascript\">\n      class AddNumber {\n        constructor() {\n          document.querySelector('p').innerText = Math.random();\n        }\n      }\n\n      new AddNumber();\n    </script>\n\n  </body>\n</html>\n```", "```js\n<script type=\"text/javascript\" src=\"img/addNumber.js\"></script>\n```", "```js\nclass AddNumber {\n  constructor() {\n    // let's set the inner text of\n    // this element to a smiley\n    document.querySelector('p').innerText = randomNumberGenerator();\n  }\n}\nfunction randomNumberGenerator() {\n  return Math.random();\n}\nnew AddNumber();\n```", "```js\n//addNumber.js\n\nexport default class AddNumber {\n  constructor() {\n    document.querySelector('p').innerText = randomNumberGenerator();\n  }\n}\n\nfunction randomNumberGenerator() {\n  return Math.random();\n}\n```", "```js\n// calc.js\n\nexport function add(x, y) {\n  return x + y;\n}\n\nexport function subtract(x, y) {\n  return x - y;\n}\n```", "```js\n<script type=\"module\" >\n  import AddNumberWithNewName from './addNumber.js';\n  new AddNumberWithNewName();\n</script>\n```", "```js\n<script type=\"module\" >\n import {add, subtract} from './calc.js';\n console.log(add(1,5));\n</script>\n```", "```js\n//revampedParagraph.js\n\nexport default class RevampedParagraph extends HTMLElement {\n  constructor() {\n    super();\n\n    // template ref and content\n    let templateReference = document.querySelector('#revamped-paragraph-template');\n    let template = templateReference.content;\n\n    // adding html from template\n    this.append(template.cloneNode(true));\n  }\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <title>Revamped Paragraph</title>\n\n    <!--\n      Notice how we use type=\"module\"\n    -->\n    <script type=\"module\">\n\n      // imports object from the module \n      // and names it as RevampedParagraph\n      // You can name it anything you want\n      // since it is a default export\n      import RevampedParagraph from './revampedParagraph.js';\n\n      // We are now defining the custom element \n      customElements.define('revamped-paragraph', RevampedParagraph);\n    </script>\n\n  </head>\n  <body>\n\n    <revamped-paragraph></revamped-paragraph>\n\n    <!--\n      Template for\n      Revamped Paragraph\n    -->\n    <template id=\"revamped-paragraph-template\">\n      <h1>Revamped Paragraph</h1>\n      <p>This is the default paragraph inside\n      the revamped-paragraph element</p>\n    </template>\n\n  </body>\n</html>\n```", "```js\n[\n  {\n    \"name\": \"Robert De Niro\",\n    \"lastScore\": 75\n  },\n  {\n    \"name\": \"Jack Nicholson\",\n    \"lastScore\": 87\n  },\n  {\n    \"name\": \"Marlon Brando\",\n    \"lastScore\": 81\n  },\n  {\n    \"name\": \"Tom Hanks\",\n    \"lastScore\": 62\n  },\n  {\n    \"name\": \"Leonardo DiCaprio\",\n    \"lastScore\": 92\n  }\n]\n```", "```js\n// StudentAttendanceTable.js\n\nexport default class StudentAttendanceTable extends HTMLElement {\n  constructor() {\n    super();\n\n    // we simply called another method\n    // inside the class\n    this.render();\n  }\n\n  render() {\n    // let put our loading text first\n    this.innerText = this.getLoadingText();\n\n    // let's start our fetch call\n    this.getStudentList();\n  }\n\n  getStudentList() {\n    // lets use fetch api\n    // https://developer.mozilla.org/en-US/docs/Web\n    // /API/Fetch_API/Using_Fetch\n    fetch('./student.json')\n    .then(response => {\n\n      // converts response to json\n      return response.json();\n\n    })\n    .then(jsonData => {\n      this.generateTable(jsonData);\n    })\n    .catch(e => {\n\n      // lets set the error message for\n      // the user\n      this.innerText = this.getErrorText();\n\n      // lets print out the error\n      // message for the devs\n      console.log(e);\n    });\n\n  }\n\n  generateTable(names) {\n    // lets loop through names\n    // with the help of map\n    let rows = names.map((data, index) => {\n      return this.getTableRow(index, data.name);\n    });\n\n    // creating the table\n    let table = document.createElement('table');\n    table.innerHTML = rows.join('');\n\n    // setting the table as html for this component\n    this.appendHTMLToShadowDOM(table);\n  }\n\n  getTableRow(index, name) {\n    let tableRow = `<tr>\n        <td>${index + 1}</td>\n        <td>${name}</td>\n        <td>\n          <input type=\"checkbox\" name=\"${index}-attendance\"/>\n        </td>\n      </tr>`;\n\n    return tableRow;\n  }\n\n  appendHTMLToShadowDOM(html) {\n    // clearing out old html\n    this.innerHTML = '';\n\n    let shadowRoot = this.attachShadow({mode: 'open'});\n\n    // add a text node\n    shadowRoot.append(html);\n  }\n\n  getLoadingText() {\n    return `loading..`;\n  }\n\n  getErrorText() {\n    return `unable to retrieve student list.`;\n  }\n}\n\n```", "```js\n//InformationBanner.js\n\nexport default class InformationBanner extends HTMLElement {\n  constructor() {\n    super();\n\n    // we simply called another method\n    // inside the class\n    this.render();\n  }\n\n  render() {\n\n    // Get the reference to the template\n    let templateReference = document.querySelector('#information-banner-template');\n\n    // Get the content node\n    let templateContent = templateReference.content;\n\n    let shadowRoot = this.attachShadow({mode: 'open'});\n\n    // add the template text to the shadow root\n    shadowRoot.append(templateContent.cloneNode(true));\n  }\n}\n```", "```js\n<template id=\"information-banner-template\">\n  <div>\n    <a href=\"tel:1234567890\">Call: 1234567890</a>\n    <div>\n      <p>Just Some Random Street</p>\n      <p>Town</p>\n      <p>State - 123456</p>\n    </div>\n  </div>\n</template>\n```", "```js\n<template id=\"time-slot-template\">\n  <div>\n    <div>\n      <input type=\"radio\" name=\"timeslot\" value=\"slot1\" checked> 9:00 \n      AM - 11:00 AM\n    </div>\n    <div>\n      <input type=\"radio\" name=\"timeslot\" value=\"slot2\"> 11:00 AM - \n      1:00 PM\n    </div>\n    <div>\n      <input type=\"radio\" name=\"timeslot\" value=\"slot3\"> 1:00 PM - 3:00    \n       PM\n    </div>\n  </div>\n</template>\n```", "```js\n// TimeSlot.js\n\nexport default class TimeSlot extends HTMLElement {\n  constructor() {\n    super();\n\n    // we simply called another method\n    // inside the class\n    this.render();\n  }\n\n  render() {\n\n    // Get the reference to the template\n    let templateReference = document.querySelector('#time-slot-\n    template');\n\n    // Get the content node\n    let templateContent = templateReference.content;\n\n    let shadowRoot = this.attachShadow({mode: 'open'});\n\n    // add the template text to the shadow root\n    shadowRoot.append(templateContent.cloneNode(true));\n  }\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <title>Student Page</title>\n\n    <!--\n      Notice how we use type=\"module\"\n    -->\n    <script type=\"module\">\n\n      // importing the first custom element\n      import StudentAttendanceTable from './StudentAttendanceTable.js';\n\n      // importing the second custom element\n      import InformationBanner from './InformationBanner.js';\n\n      // importing the third custom element\n      import TimeSlot from './TimeSlot.js';\n\n      customElements.define('student-attendance-table', \n      StudentAttendanceTable);\n      customElements.define('information-banner', InformationBanner);\n      customElements.define('time-slot', TimeSlot);\n    </script>\n\n  </head>\n  <body>\n\n    <time-slot></time-slot>\n    <student-attendance-table></student-attendance-table>\n    <information-banner></information-banner>\n\n    <template id=\"information-banner-template\">\n      <div>\n        <a href=\"tel:1234567890\">Call: 1234567890</a>\n        <div>\n          <p>Just Some Random Street</p>\n          <p>Town</p>\n          <p>State - 123456</p>\n        </div>\n      </div>\n    </template>\n\n    <template id=\"time-slot-template\">\n      <div>\n        <div>\n          <input type=\"radio\" name=\"timeslot\" value=\"slot1\" checked> \n           9:00 AM - 11:00 AM\n        </div>\n        <div>\n          <input type=\"radio\" name=\"timeslot\" value=\"slot2\"> 11:00 AM - \n          1:00 PM\n        </div>\n        <div>\n          <input type=\"radio\" name=\"timeslot\" value=\"slot3\"> 1:00 PM - \n         3:00 PM\n        </div>\n      </div>\n    </template>\n\n  </body>\n</html>\n```"]