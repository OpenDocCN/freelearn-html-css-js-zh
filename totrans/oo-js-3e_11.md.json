["```js\n    <body> \n      <form id=\"myform\" method=\"post\" action=\"server.php\"> \n      <fieldset> \n        <legend>Search</legend> \n        <input \n          name=\"search\" \n          id=\"search\" \n          type=\"text\"   \n        /> \n        <input type=\"submit\" /> \n        </fieldset> \n      </form> \n      <script src=\"img/behaviors.js\"></script> \n    </body> \n\n```", "```js\n    // init \n    myevent.addListener('myform', 'submit', function (e) { \n      // no need to propagate further \n      e = myevent.getEvent(e); \n      myevent.stopPropagation(e); \n      // validate \n      var el = document.getElementById('search'); \n      if (!el.value) { // too bad, field is empty \n        myevent.preventDefault(e); // prevent the form submission \n        alert('Please enter a search string'); \n      } \n    }); \n\n```", "```js\n    <script defer src=\"img/behaviors.js\"></script> \n\n```", "```js\n    ... \n    <head> \n    <script> \n    (function () { \n      var s = document.createElement('script'); \n      s.src = 'behaviors.js'; \n      document.getElementsByTagName('head')[0].appendChild(s); \n    }()); \n    </script> \n    </head> \n    ... \n\n```", "```js\n    // global namespace \n    var MYAPP = MYAPP || {}; \n\n```", "```js\n    // sub-object \n    MYAPP.event = {}; \n\n```", "```js\n    // object together with the method declarations \n    MYAPP.event = { \n      addListener: function (el, type, fn) { \n        // .. do the thing \n      }, \n      removeListener: function (el, type, fn) { \n        // ... \n      }, \n      getEvent: function (e) { \n        // ... \n      } \n      // ... other methods or properties \n    }; \n\n```", "```js\n    MYAPP.dom = {}; \n    MYAPP.dom.Element = function (type, properties) { \n      var tmp = document.createElement(type); \n      for (var i in properties) { \n        if (properties.hasOwnProperty(i)) { \n          tmp.setAttribute(i, properties[i]); \n        } \n      } \n       return tmp; \n    }; \n\n```", "```js\n    MYAPP.dom.Text = function (txt) { \n      return document.createTextNode(txt); \n    }; \n\n```", "```js\n    var link = new MYAPP.dom.Element('a',  \n      {href: 'http://phpied.com', target: '_blank'}); \n    var text = new MYAPP.dom.Text('click me'); \n    link.appendChild(text); \n    document.body.appendChild(link); \n\n```", "```js\n    MYAPP.namespace('dom.style'); \n\n```", "```js\n    MYAPP.dom = {}; \n    MYAPP.dom.style = {}; \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.namespace = function (name) { \n      var parts = name.split('.'); \n      var current = MYAPP; \n      for (var i = 0; i < parts.length; i++) { \n        if (!current[parts[i]]) { \n          current[parts[i]] = {}; \n        } \n        current = current[parts[i]]; \n      } \n    }; \n\n```", "```js\n    MYAPP.namespace('event'); \n    MYAPP.namespace('dom.style'); \n\n```", "```js\n    var MYAPP = { \n      event: {}, \n      dom: { \n        style: {} \n      } \n    }; \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.event = { \n      addListener: null, \n      removeListener: null \n    }; \n\n```", "```js\n    if (window.addEventListener) { \n      MYAPP.event.addListener = function (el, type, fn) { \n        el.addEventListener(type, fn, false); \n      }; \n      MYAPP.event.removeListener = function (el, type, fn) { \n        el.removeEventListener(type, fn, false); \n      }; \n    } else if (document.attachEvent) { // IE \n      MYAPP.event.addListener = function (el, type, fn) { \n        el.attachEvent('on' + type, fn); \n      }; \n      MYAPP.event.removeListener = function (el, type, fn) { \n        el.detachEvent('on' + type, fn); \n      }; \n    } else { // older browsers \n      MYAPP.event.addListener = function (el, type, fn) { \n        el['on' + type] = fn; \n      }; \n      MYAPP.event.removeListener = function (el, type) { \n        el['on' + type] = null; \n      }; \n    } \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.myevent = { \n     addListener: function (el, type, fn) { \n        if (el.addEventListener) { \n          MYAPP.myevent.addListener = function (el, type, fn) { \n            el.addEventListener(type, fn, false); \n          }; \n        } else if (el.attachEvent) { \n          MYAPP.myevent.addListener = function (el, type, fn) { \n            el.attachEvent('on' + type, fn); \n          }; \n        } else { \n          MYAPP.myevent.addListener = function (el, type, fn) { \n            el['on' + type] = fn; \n          }; \n        } \n        MYAPP.myevent.addListener(el, type, fn); \n      } \n    }; \n\n```", "```js\n    // a constructor that creates buttons \n    MYAPP.dom.FancyButton = function (text, type) { \n      var b = document.createElement('input'); \n      b.type = type || 'submit'; \n      b.value = text; \n      return b; \n    }; \n\n```", "```js\n    document.body.appendChild( \n      new MYAPP.dom.FancyButton('puuush') \n    ); \n\n```", "```js\n    MYAPP.dom.FancyButton =  \n      function (text, type, color, border, font) { \n      // ... \n    }; \n\n```", "```js\n    new MYAPP.dom.FancyButton( \n      'puuush', null, 'white', null, 'Arial'); \n\n```", "```js\n    MYAPP.dom.FancyButton = function (text, conf) { \n      var type = conf.type || 'submit'; \n      var font = conf.font || 'Verdana'; \n      // ... \n    }; \n\n```", "```js\n    var config = { \n      font: 'Arial, Verdana, sans-serif', \n      color: 'white' \n    }; \n    new MYAPP.dom.FancyButton('puuush', config); \n\n```", "```js\n    document.body.appendChild( \n      new MYAPP.dom.FancyButton('dude', {color: 'red'}) \n    ); \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.dom = {}; \n    MYAPP.dom.FancyButton = function (text, conf) { \n      var styles = { \n        font: 'Verdana', \n        border: '1px solid black', \n        color: 'black', \n        background: 'grey' \n      }; \n      function setStyles(b) { \n        var i; \n        for (i in styles) { \n          if (styles.hasOwnProperty(i)) { \n            b.style[i] = conf[i] || styles[i]; \n          } \n       } \n      } \n      conf = conf || {}; \n      var b = document.createElement('input'); \n      b.type = conf.type || 'submit'; \n      b.value = text; \n      setStyles(b); \n      return b; \n    }; \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.dom = (function () { \n      var _setStyle = function (el, prop, value) { \n        console.log('setStyle'); \n      }; \n      var _getStyle = function (el, prop) { \n        console.log('getStyle'); \n      }; \n      return { \n        setStyle: _setStyle, \n        getStyle: _getStyle, \n        yetAnother: _setStyle \n      }; \n    }()); \n\n```", "```js\n    MYAPP.dom.setStyle = function () {alert('b');}; \n\n```", "```js\n    (function () { \n      // code goes here... \n    }()); \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.dom = (function () { \n      // initialization code... \n      function _private() { \n        // ...  \n      } \n      return { \n        getStyle: function (el, prop) { \n          console.log('getStyle'); \n          _private(); \n        }, \n        setStyle: function (el, prop, value) { \n          console.log('setStyle'); \n        } \n      }; \n    }()); \n\n```", "```js\n            namespace('MYAPP.module.amazing'); \n\n            MYAPP.module.amazing = (function () { \n\n              // short names for dependencies \n              var another = MYAPP.module.another; \n\n              // local/private variables \n              var i, j; \n\n              // private functions \n              function hidden() {} \n\n              // public API \n              return { \n                hi: function () { \n                  return \"hello\"; \n                } \n              }; \n            }()); \n\n    ```", "```js\n    MYAPP.module.amazing.hi(); // \"hello\" \n\n```", "```js\n    var obj = new MYAPP.dom.Element('span'); \n    obj.setText('hello'); \n    obj.setStyle('color', 'red'); \n    obj.setStyle('font', 'Verdana'); \n    document.body.appendChild(obj); \n\n```", "```js\n    var obj = new MYAPP.dom.Element('span'); \n    obj.setText('hello') \n       .setStyle('color', 'red') \n       .setStyle('font', 'Verdana'); \n    document.body.appendChild(obj); \n\n```", "```js\n    document.body.appendChild( \n      new MYAPP.dom.Element('span') \n        .setText('hello') \n        .setStyle('color', 'red') \n        .setStyle('font', 'Verdana') \n    );    \n\n```", "```js\n    { \n      'name':   'Stoyan', \n      'family': 'Stefanov', \n      'books':  ['OOJS', 'JSPatterns', 'JS4PHP'] \n    } \n\n```", "```js\n    <?xml version=\"1.1\" encoding=\"iso-8859-1\"?> \n    <response> \n      <name>Stoyan</name> \n      <family>Stefanov</family> \n      <books> \n        <book>OOJS</book> \n        <book>JSPatterns</book> \n        <book>JS4PHP</book> \n      </books> \n    </response> \n\n```", "```js\n    // warning: counter-example \n    var response = eval('(' + xhr.responseText + ')'); \n\n```", "```js\n    console.log(response.name); // \"Stoyan\" \n    console.log(response.books[2]); // \"JS4PHP\" \n\n```", "```js\n    var response = JSON.parse(xhr.responseText); \n\n```", "```js\n    var str = JSON.stringify({hello: \"you\"}); \n\n```", "```js\n    console.log([1, 2, 3, 4, 5].filter(function(ele){\n      return ele % 2 == 0; })); \n    //[2,4] \n\n```", "```js\n    function add(x){ \n      return function(y){ \n        return y + x; \n      }; \n    } \n     var add3 = add(3); \n    console.log(add3(3));          // => 6 \n    console.log(add(9)(10));       // => 19 \n\n```", "```js\n    const add = x => y => y + x; \n\n```", "```js\n    var single = {}; \n\n```", "```js\n    var my_log = new Logger(); \n    my_log.log('some event'); \n\n    // ... 1000 lines of code later in a different scope ... \n\n    var other_log = new Logger(); \n    other_log.log('some new event'); \n    console.log(other_log === my_log); // true \n\n```", "```js\n    function Logger() { \n      if (typeof global_log === \"undefined\") { \n        global_log = this; \n      } \n      return global_log; \n    } \n\n```", "```js\n    var a = new Logger(); \n    var b = new Logger(); \n    console.log(a === b); // true \n\n```", "```js\n    function Logger() { \n      if (!Logger.single_instance) { \n        Logger.single_instance = this; \n      } \n      return Logger.single_instance; \n    } \n\n```", "```js\n    var MYAPP = {}; \n    MYAPP.dom = {}; \n    MYAPP.dom.Text = function (url) { \n      this.url = url; \n      this.insert = function (where) { \n        var txt = document.createTextNode(this.url); \n        where.appendChild(txt); \n      }; \n    }; \n    MYAPP.dom.Link = function (url) { \n      this.url = url; \n      this.insert = function (where) { \n        var link = document.createElement('a'); \n        link.href = this.url; \n        link.appendChild(document.createTextNode(this.url)); \n        where.appendChild(link); \n      }; \n    }; \n    MYAPP.dom.Image = function (url) { \n      this.url = url; \n      this.insert = function (where) { \n        var im = document.createElement('img'); \n        im.src = this.url; \n        where.appendChild(im); \n      }; \n    }; \n\n```", "```js\n    var url = 'http://www.phpied.com/images/covers/oojs.jpg'; \n\n    var o = new MYAPP.dom.Image(url); \n    o.insert(document.body); \n\n    var o = new MYAPP.dom.Text(url); \n    o.insert(document.body); \n\n    var o = new MYAPP.dom.Link(url); \n    o.insert(document.body); \n\n```", "```js\n    var o; \n    if (type === 'Image') { \n      o = new MYAPP.dom.Image(url); \n    } \n    if (type === 'Link') { \n      o = new MYAPP.dom.Link(url); \n    } \n    if (type === 'Text') { \n      o = new MYAPP.dom.Text(url); \n    } \n    o.url = 'http://...'; \n    o.insert(); \n\n```", "```js\n    MYAPP.dom.factory = function (type, url) { \n      return new MYAPP.dom[type](url); \n    }; \n\n```", "```js\n    var image = MYAPP.dom.factory(\"Image\", url); \n    image.insert(document.body); \n\n```", "```js\n    var obj = { \n      doSomething: function () { \n        console.log('sure, asap'); \n      } \n      //  ... \n    }; \n    obj = obj.getDecorator('deco1'); \n    obj = obj.getDecorator('deco13'); \n    obj = obj.getDecorator('deco5'); \n    obj.doSomething(); \n\n```", "```js\n    var tree = {}; \n    tree.decorate = function () { \n      alert('Make sure the tree won't fall'); \n    }; \n\n```", "```js\n    tree.getDecorator = function (deco) { \n      tree[deco].prototype = this; \n      return new tree[deco]; \n    }; \n\n```", "```js\n    tree.RedBalls = function () { \n      this.decorate = function () { \n        this.RedBalls.prototype.decorate(); \n        alert('Put on some red balls'); \n      }; \n    }; \n\n```", "```js\n    tree.BlueBalls = function () { \n      this.decorate = function () { \n        this.BlueBalls.prototype.decorate(); \n        alert('Add blue balls'); \n      }; \n    }; \n    tree.Angel = function () { \n      this.decorate = function () { \n        this.Angel.prototype.decorate(); \n        alert('An angel on the top'); \n      }; \n    }; \n\n```", "```js\n    tree = tree.getDecorator('BlueBalls'); \n    tree = tree.getDecorator('Angel'); \n    tree = tree.getDecorator('RedBalls'); \n\n```", "```js\n    tree.decorate(); \n\n```", "```js\n    var observer = { \n      addSubscriber: function (callback) { \n        if (typeof callback === \"function\") { \n          this.subscribers[this.subscribers.length] = callback; \n        } \n      }, \n      removeSubscriber: function (callback) { \n        for (var i = 0; i < this.subscribers.length; i++) { \n          if (this.subscribers[i] === callback) { \n            delete this.subscribers[i]; \n          } \n        } \n      }, \n      publish: function (what) { \n        for (var i = 0; i < this.subscribers.length; i++) { \n          if (typeof this.subscribers[i] === 'function') { \n            this.subscribers[i](what); \n          } \n        } \n      }, \n      make: function (o) { // turns an object into a publisher \n        for (var i in this) { \n          if (this.hasOwnProperty(i)) { \n            o[i] = this[i]; \n            o.subscribers = []; \n          } \n        } \n      } \n   }; \n\n```", "```js\n    var blogger = { \n      writeBlogPost: function() { \n        var content = 'Today is ' + new Date(); \n        this.publish(content); \n      } \n    }; \n\n```", "```js\n    var la_times = { \n      newIssue: function() { \n        var paper = 'Martians have landed on Earth!'; \n        this.publish(paper); \n      } \n    }; \n\n```", "```js\n    observer.make(blogger); \n    observer.make(la_times); \n\n```", "```js\n    var jack = { \n      read: function(what) { \n        console.log(\"I just read that \" + what) \n      } \n    }; \n    var jill = { \n      gossip: function(what) { \n        console.log(\"You didn't hear it from me, but \" + what) \n      } \n    }; \n\n```", "```js\n    blogger.addSubscriber(jack.read); \n    blogger.addSubscriber(jill.gossip); \n\n```", "```js\n    > blogger.writeBlogPost(); \n       I just read that Today is Fri Jan 04 2013 19:02:12 GMT-0800 (PST) \n       You didn't hear it from me, but Today is Fri Jan 04 2013 19:02:12 GMT-0800    \n         (PST) \n\n```", "```js\n    > blogger.removeSubscriber(jill.gossip); \n    > blogger.writeBlogPost();\n    I just read that Today is Fri Jan 04 2013 19:03:29 GMT-0800 (PST) \n\n```", "```js\n    > la_times.addSubscriber(jill.gossip); \n\n```", "```js\n    > la_times.newIssue();\n    You didn't hear it from me, but Martians have landed on Earth! \n\n```"]