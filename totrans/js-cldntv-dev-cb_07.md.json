["```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch7/datadog-account --path cncb-datadog-account\n```", "```js\nservice: cncb-datadog-account\n...\nresources:\n  Resources:\n    DatadogAWSIntegrationPolicy: \n      Type: AWS::IAM::ManagedPolicy\n      Properties:\n        PolicyDocument: ${file(includes.yml):PolicyDocument}\n    DatadogAWSIntegrationRole:\n      Type: AWS::IAM::Role\n      Properties: \n        RoleName: DatadogAWSIntegrationRole\n        AssumeRolePolicyDocument:\n          Statement:\n            Effect: Allow\n            Principal:\n              AWS: arn:aws:iam::464622532012:root\n            Action: sts:AssumeRole\n            Condition:\n              StringEquals:\n                sts:ExternalId: <copy value from datadog aws integration dialog>\n        ManagedPolicyArns:\n          - Ref: DatadogAWSIntegrationPolicy \n```", "```js\n$ sls invoke -f hello -r us-east-1 -s $MY_STAGE\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch7/custom-metrics --path cncb-custom-metrics\n```", "```js\nservice: cncb-custom-metrics\n...\nfunctions:\n  hello:\n    ...\n    environment:\n      ACCOUNT_NAME: ${opt:account}\n      SERVERLESS_STAGE: ${opt:stage}\n      SERVERLESS_PROJECT: ${self:service}\n      MONITOR_ADVANCED: false\n      DEBUG: '*'\n```", "```js\nconst { monitor, count } = require('serverless-datadog-metrics');\nconst debug = require('debug')('handler');\n\nmodule.exports.hello = monitor((request, context, callback) => {\n  debug('request: %j', request);\n  count('hello.count', 1);\n  const response = { ... };\n  callback(null, response);\n});\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-custom-metrics@1.0.0 dp:lcl <path-to-your-workspace>/cncb-custom-metrics\n> sls deploy -r us-east-1 --account cncb \"-s\" \"john\"\n...\nendpoints:\n  GET - https://h865txqjqj.execute-api.us-east-1.amazonaws.com/john/hello\n\n```", "```js\n$ curl https://<APP-ID>.execute-api.us-east-1.amazonaws.com/$MY_STAGE/hello | json_pp\n{\n   \"message\" : \"JavaScript Cloud Native Development Cookbook! ...\"\n}\n```", "```js\n$ sls logs -f hello -r us-east-1 -s $MY_STAGE\n\nMONITORING|1530339912|1|count|aws.lambda.coldstart.count|#account:cncb,...\nMONITORING|1530339912|0.259|gauge|node.process.uptime|#account:cncb,...\nMONITORING|1530339912|1|count|hello.count|#account:cncb,...\nMONITORING|1530339912|0|check|aws.lambda.check|#account:cncb,...\nMONITORING|1530339912|0.498...|gauge|node.mem.heap.utilization|#account:cncb,...\nMONITORING|1530339912|1.740238|histogram|aws.lambda.handler|#account:cncb,...  \n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch7/event-metrics --path cncb-event-metrics\n```", "```js\nmodule.exports.listener = (event, context, cb) => {\n  _(event.Records)\n    .map(recordToUow)\n    .tap(count)\n    ...\n    .collect().toCallback(cb);\n};\n\nconst count = (uow) => {\n  const tags = [\n    `account:${process.env.ACCOUNT_NAME}`,\n    `region:${uow.record.awsRegion}`,\n    `stream:${uow.record.eventSourceARN.split('/')[1]}`,\n    `shard:${uow.record.eventID.split('-')[1].split(':')[0]}`,\n    `source:${uow.event.tags && uow.event.tags.source || 'not-specified'}`,\n    `type:${uow.event.type}`,\n  ];\n\n  console.log(`MONITORING|${uow.event.timestamp}|1|count|domain.event|#${tags.join()}`);\n};\n\n...\n```", "```js\n$ sls invoke -f simulate -r us-east-1 -s $MY_STAGE \n[\n    {\n        \"total\": 4500,\n        \"purple\": 1151,\n        \"green\": 1132,\n        \"blue\": 1069,\n        \"orange\": 1148\n    }\n]\n```", "```js\n$ sls logs -f listener -r us-east-1 -s $MY_STAGE\n...\n... MONITORING|1531020609200|1|count|domain.event|#account:cncb,...,type:purple\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch7/synthetics --path cncb-synthetics\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-synthetics@1.0.0 dp:lcl <path-to-your-workspace>/cncb-synthetics\n> sls deploy -r us-east-1 --account cncb \"-s\" \"john\"\n...\nWebsiteDistributionURL: https://dqvo8ga8z7ao3.cloudfront.net\n```", "```js\n    <!--\n    <script src=\"img/strong>.js\" async></script>\n    -->\n```", "```js\n$ npm run build\n$ npm run dp:lcl -- -s $MY_STAGE\n```"]