- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Setting Up the Development Environment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: To use Node.js, we first need to prepare our development environment. In this
    chapter, we will cover the details of how to install Node.js and check that everything
    is working as expected, so we can execute JavaScript and Node.js.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Node.js，我们首先需要准备我们的开发环境。在本章中，我们将详细介绍如何安装Node.js并检查一切是否按预期工作，以便我们能够执行JavaScript和Node.js。
- en: Node.js is one of the most simple and easy-to-install software, so we will not
    spend too much time on this topic. However, we will cover some important details
    that you need to know in order to be able to work with Node.js in any environment.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 是一种非常简单且易于安装的软件，因此我们不会在这个主题上花费太多时间。然而，我们将介绍一些重要的细节，这些细节对于你能够在任何环境中使用Node.js至关重要。
- en: 'To sum up, here are the main topics that we will explore in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，以下是本章我们将探讨的主要主题：
- en: Installing Node.js in any environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何环境中安装Node.js
- en: Managing Node.js versions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理Node.js版本
- en: Using Chrome DevTools and the Node.js REPL to interact with JavaScript and Node.js.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Chrome DevTools和Node.js REPL与JavaScript和Node.js交互。
- en: In this chapter, you will learn how to properly set up Node.js in any environment,
    such as Windows, Linux, or macOS. This knowledge will also be applicable when
    you deploy your projects to the cloud or a specific device.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何在任何环境中正确设置Node.js，例如Windows、Linux或macOS。这些知识在你将项目部署到云端或特定设备时也同样适用。
- en: Additionally, you will learn how to debug any issues using the debugging tools
    included in your web browsers and the Node.js REPL.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还将学习如何使用浏览器内嵌的调试工具和Node.js REPL来调试任何问题。
- en: Finally, you will learn how to manage multiple versions of Node.js running on
    the same machine. This skill will be very useful when you need to migrate a project
    between different Node.js versions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将学习如何管理在同一台机器上运行的多个Node.js版本。当你需要在不同的Node.js版本之间迁移项目时，这项技能将非常有用。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The code files for the chapter can be found at [https://github.com/PacktPublishing/NodeJS-for-Beginners](https://github.com/PacktPublishing/NodeJS-for-Beginners).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在[https://github.com/PacktPublishing/NodeJS-for-Beginners](https://github.com/PacktPublishing/NodeJS-for-Beginners)找到。
- en: Check out the code in action video for this chapter on [https://youtu.be/xElsOS9Pz4k](https://youtu.be/xElsOS9Pz4k)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 查看本章在[https://youtu.be/xElsOS9Pz4k](https://youtu.be/xElsOS9Pz4k)上的代码执行视频。
- en: Installing Node.js on macOS, Windows, and Linux
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在macOS、Windows和Linux上安装Node.js
- en: 'Node.js can be installed in three different ways:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 可以通过三种不同的方式安装：
- en: '**Downloading the binaries from the official website**: This is the recommended
    option for beginners, as it is the easiest way to install Node.js. You just need
    to download the binaries from the official website and execute the installer.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从官方网站下载二进制文件**：这是初学者的推荐选项，因为这是安装Node.js最简单的方法。你只需从官方网站下载二进制文件并运行安装程序即可。'
- en: '**Using a package manager**: This is the most common way to install Node.js
    in Linux, FreeBSD, IBM i, Android, and similar environments. You just need to
    use your system’s package manager and install Node.js from there.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用包管理器**：这是在Linux、FreeBSD、IBM i、Android和类似环境中安装Node.js最常见的方式。你只需使用你的系统包管理器并从那里安装Node.js即可。'
- en: '**Build from source**: This is the most advanced way to install Node.js and
    opens the door to many customizations, and it is only recommended for advanced
    users. You need to download the source code from the official repository and compile
    it on your machine.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源码构建**：这是安装Node.js最先进的方法，它打开了众多自定义的大门，并且仅推荐给高级用户。你需要从官方仓库下载源代码并在你的机器上编译它。'
- en: Important note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: As part of Node.js continuous integration, there are many different environments
    and architectures where Node.js is tested, which means that Node.js maintains
    solid cross-platform support over time.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Node.js持续集成的一部分，Node.js在许多不同的环境和架构中进行测试，这意味着Node.js随着时间的推移保持了稳定的跨平台支持。
- en: While writing this book, the latest Node.js version is 20.11.0, so we will use
    this version as a reference. However, you can use the last LTS version available,
    as the installation process is the same for all versions.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，最新的Node.js版本是20.11.0，因此我们将使用这个版本作为参考。然而，你可以使用可用的最新LTS版本，因为所有版本的安装过程都是相同的。
- en: The upcoming sections will explain how to install Node.js on various operating
    systems, beginning with macOS.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将解释如何在各种操作系统上安装Node.js，从macOS开始。
- en: macOS
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: macOS
- en: The easiest way to install Node.js on macOS is by downloading the binaries from
    the official website. You just need to go to the Node.js download page at [https://nodejs.org/en/download/](https://nodejs.org/en/download/),
    download the macOS installer, and follow the installation wizard.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上安装Node.js最简单的方法是从官方网站下载二进制文件。您只需访问Node.js下载页面[https://nodejs.org/en/download/](https://nodejs.org/en/download/)，下载macOS安装程序，并按照安装向导进行操作。
- en: You can also install Node.js using a package manager, but this is not recommended
    for beginners. If you want to install Node.js using a package manager, you can
    use Homebrew ([https://brew.sh/](https://brew.sh/)) or MacPorts ([https://www.macports.org/](https://www.macports.org/)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用包管理器安装Node.js，但这对初学者来说并不推荐。如果您想使用包管理器安装Node.js，可以使用Homebrew ([https://brew.sh/](https://brew.sh/))
    或 MacPorts ([https://www.macports.org/](https://www.macports.org/))。
- en: 'To use Homebrew, open your Terminal and type the following command, which will
    manage the installation process for you:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Homebrew，打开您的终端并输入以下命令，该命令将为您管理安装过程：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To use MacPorts, open the Terminal and type the following command to start
    the installation process:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用MacPorts，打开终端并输入以下命令以启动安装过程：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we’ll see how to install it on Windows.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何在Windows上安装它。
- en: Windows
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: The easiest way to install Node.js on Windows is by downloading the binaries
    from the official website.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Node.js最简单的方法是从官方网站下载二进制文件。
- en: You just need to go to the Node.js download page at [https://nodejs.org/en/download/](https://nodejs.org/en/download/),
    download the Windows installer, and follow the installation wizard.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需访问Node.js下载页面[https://nodejs.org/en/download/](https://nodejs.org/en/download/)，下载Windows安装程序，并按照安装向导进行操作。
- en: Let’s see how to install it on Linux next.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何在Linux上安装它。
- en: Linux
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux
- en: The best way is to install Node.js using your package manager, but you can also
    use the binaries distributed by NodeSource ([https://github.com/nodesource/distributions/blob/master/README.md](https://github.com/nodesource/distributions/blob/master/README.md)).
    This will cover Debian and Ubuntu-based distributions (deb) as well as Enterprise
    Linux-based distributions (rpm).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的方法是使用您的包管理器安装Node.js，但您也可以使用NodeSource分发的二进制文件([https://github.com/nodesource/distributions/blob/master/README.md](https://github.com/nodesource/distributions/blob/master/README.md))。这将涵盖基于Debian和Ubuntu的发行版（deb）以及基于企业Linux的发行版（rpm）。
- en: Let’s look at an example using Ubuntu.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以Ubuntu为例。
- en: 'First, download the setup script from NodeSource using `curl`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，使用`curl`从NodeSource下载设置脚本：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, review the content of the script (optional):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，检查脚本的内容（可选）：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, execute the script as `root` and install Node.js:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，以`root`用户身份执行脚本并安装Node.js：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Other environments
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他环境
- en: The Node.js Build Working Group provides an official platform list that includes
    all the supported platforms and architectures with their different tiers of support.
    You can find it at [https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list](https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js构建工作组提供了一个官方平台列表，其中包括所有受支持的平台和架构及其不同级别的支持。您可以在[https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list](https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list)找到它。
- en: Additionally, Node.js has an initiative called the unofficial-builds project
    that provides support for other platforms and architectures, including `loong64`,
    `riscv64`, `linux-armv6l`, `linux-x86`, `linux-x64-glibc-217`, and `linux-x64-musl`.
    You can find more information at [https://github.com/nodejs/unofficial-builds](https://github.com/nodejs/unofficial-builds).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Node.js还有一个名为非官方构建项目的倡议，为其他平台和架构提供支持，包括`loong64`、`riscv64`、`linux-armv6l`、`linux-x86`、`linux-x64-glibc-217`和`linux-x64-musl`。更多信息请见[https://github.com/nodejs/unofficial-builds](https://github.com/nodejs/unofficial-builds)。
- en: If you have solid skills with Docker, you can also use the official Docker images
    provided by Node.js to avoid installing the Node.js binaries on your machine ([https://hub.docker.com/_/node](https://hub.docker.com/_/node)).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对Docker有扎实的技能，您还可以使用Node.js提供的官方Docker镜像来避免在您的机器上安装Node.js二进制文件([https://hub.docker.com/_/node](https://hub.docker.com/_/node))。
- en: Verifying the installation
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证安装
- en: Node.js is shipped with npm. We will now check that both Node.js and npm are
    installed correctly. The installed versions can be different depending on the
    Node.js version that you have installed, but if it is not throwing an error, the
    installation was correct.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js与npm一起提供。我们现在将检查Node.js和npm是否正确安装。安装的版本可能因您安装的Node.js版本而异，但如果它没有抛出错误，则安装正确。
- en: We will use the terminal to check that the installation was done properly for
    both (Node.js and npm).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用终端来检查这两个（Node.js 和 npm）的安装是否正确完成。
- en: 'To verify the Node.js installation, open your terminal and type the following
    command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证 Node.js 的安装，请打开你的终端并输入以下命令：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The expected output is the Node.js version installed:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的输出是已安装的 Node.js 版本：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To verify that npm is installed, type the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证 npm 是否已安装，请输入以下命令：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The expected output is the npm version installed:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的输出是已安装的 npm 版本：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Congratulations! You just installed Node.js on your machine! In the next section,
    we will get familiarized with the Node.js versions so we will have a better understanding
    of which Node.js version we should use for our next project.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经在你的机器上安装了 Node.js！在下一节中，我们将熟悉 Node.js 版本，以便我们更好地了解我们应该为我们的下一个项目使用哪个 Node.js
    版本。
- en: Managing Node.js versions
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理Node.js版本
- en: Node.js is a fast-moving project, so new versions are released every few months.
    To manage the Node.js versions on your machine, you will need to use a Node.js
    version manager.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 是一个快速发展的项目，因此每隔几个月就会发布新版本。为了管理机器上的 Node.js 版本，你需要使用 Node.js 版本管理器。
- en: 'There are several Node.js version managers available, but the most popular
    are as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的 Node.js 版本管理器有很多，但最流行的是以下这些：
- en: '**Node Version Manager** (**nvm**): [https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node 版本管理器**（**nvm**）: [https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)'
- en: '**n**: [https://github.com/tj/n](https://github.com/tj/n)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**n**：[https://github.com/tj/n](https://github.com/tj/n)'
- en: '**Fast Node Manager** (**fnm**): [https://github.com/Schniz/fnm](https://github.com/Schniz/fnm)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Fast Node Manager**（**fnm**）: [https://github.com/Schniz/fnm](https://github.com/Schniz/fnm)'
- en: '**Volta**: [https://github.com/volta-cli/volta](https://github.com/volta-cli/volta)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Volta**: [https://github.com/volta-cli/volta](https://github.com/volta-cli/volta)'
- en: In this book, we will use nvm as the Node.js version manager, but you can use
    any other version manager that you prefer.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将使用 nvm 作为 Node.js 版本管理器，但你也可以使用你喜欢的任何其他版本管理器。
- en: Important info
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 重要信息
- en: In production environments, you should use the latest LTS version available,
    as this version is the most stable and is supported for a longer time. In most
    cases, there is no need to install a version manager on your production machine,
    as you will use a specific version.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，你应该使用可用的最新 LTS 版本，因为这个版本最稳定，并且支持时间更长。在大多数情况下，你不需要在生产机器上安装版本管理器，因为你将使用特定的版本。
- en: Now that we are familiar with how the Node.js versions are organized, we will
    need some tools to help us handle several Node.js versions in the same environment.
    We will start in the next section with nvm.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经熟悉了 Node.js 版本的组织方式，我们将需要一些工具来帮助我们处理同一环境中多个 Node.js 版本。我们将在下一节中介绍 nvm。
- en: Managing Node.js by using nvm
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 nvm 管理Node.js
- en: nvm is the most popular and beginner-friendly way to manage multiple Node.js
    versions on your machine.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: nvm 是在机器上管理多个 Node.js 版本最流行且适合初学者的方式。
- en: I use nvm to manage my Node.js versions, as it is a great tool, but nvm can
    be tricky to install so you will need to follow the installation instructions
    carefully. There is a troubleshooting guide with common issues and solutions at
    [https://github.com/nvm-sh/nvm#installing-and-updating](https://github.com/nvm-sh/nvm#installing-and-updating).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 nvm 来管理我的 Node.js 版本，因为它是一个非常好的工具，但 nvm 的安装可能有些棘手，所以你需要仔细遵循安装说明。有关常见问题和解决方案的故障排除指南请参阅
    [https://github.com/nvm-sh/nvm#installing-and-updating](https://github.com/nvm-sh/nvm#installing-and-updating)。
- en: 'This is my preferred way to install nvm in macOS, as it is the easiest way
    to install it:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在 macOS 上安装 nvm 的首选方式，因为它是最容易安装的方式：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For Linux and macOS, download and execute the installation script from the
    official repository:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux 和 macOS，从官方仓库下载并执行安装脚本：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: nvm doesn’t work in Windows, so if you are using Windows, you will need to use
    another version manager or **Windows Subsystem for** **Linux** (**WSL**).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: nvm 在 Windows 上不工作，所以如果你使用 Windows，你需要使用另一个版本管理器或 **Windows Subsystem for Linux**（**WSL**）。
- en: 'Alternatives to nvm for Windows are as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 上 nvm 的替代方案如下：
- en: 'nodist: [https://github.com/nullivex/nodist](https://github.com/nullivex/nodist)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'nodist: [https://github.com/nullivex/nodist](https://github.com/nullivex/nodist)'
- en: 'nvm-windows: [https://github.com/coreybutler/nvm-windows](https://github.com/coreybutler/nvm-windows)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'nvm-windows: [https://github.com/coreybutler/nvm-windows](https://github.com/coreybutler/nvm-windows)'
- en: '**Node Version Switcher** (**NVS**): [https://github.com/jasongin/nvs](https://github.com/jasongin/nvs)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node 版本切换器**（**NVS**）: [https://github.com/jasongin/nvs](https://github.com/jasongin/nvs)'
- en: Once you have installed nvm, you can use it to install and manage Node.js versions.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 nvm 后，您可以使用它来安装和管理 Node.js 版本。
- en: Installing and using versions
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和使用版本
- en: 'In order to use a specific Node.js version, you will need to install it first:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用特定的 Node.js 版本，您首先需要安装它：
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, you can use it:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用它：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can check the Node.js version in use with the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令检查正在使用的 Node.js 版本：
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can also set a default Node.js version for your machine:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为您的机器设置默认的 Node.js 版本：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can list the installed Node.js versions with the `ls` command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `ls` 命令列出已安装的 Node.js 版本：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The output will be a list of all the installed Node.js versions.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是一个已安装的所有 Node.js 版本的列表。
- en: 'We can list the available Node.js versions with the `ls-remote` command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `ls-remote` 命令列出可用的 Node.js 版本：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The output will be a list of all the available Node.js versions, and it is a
    very long list!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是一个所有可用 Node.js 版本的长列表！
- en: We tend to accumulate Node.js versions over time, so it is a good practice to
    uninstall the Node.js versions that you are not using anymore.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，我们往往会累积多个 Node.js 版本，因此卸载不再使用的 Node.js 版本是一个良好的实践。
- en: 'To uninstall a Node.js version, you will need to use the `uninstall` command:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要卸载 Node.js 版本，您需要使用 `uninstall` 命令：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Using a .nvmrc file
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 .nvmrc 文件
- en: You can also use a `.nvmrc` file to specify the Node.js version that you want
    to use in a project. This is useful when you are working on a project with other
    developers and you want to make sure that everyone is using the same Node.js version.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 `.nvmrc` 文件来指定项目中想要使用的 Node.js 版本。当您与其他开发者合作开发项目，并确保每个人都使用相同的 Node.js
    版本时，这非常有用。
- en: 'To use a `.nvmrc` file, you will need to create a file called `.nvmrc` in the
    root of your project with the Node.js version that you want to use:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `.nvmrc` 文件，您需要在项目的根目录下创建一个名为 `.nvmrc` 的文件，并指定您想要使用的 Node.js 版本：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, nvm can use the Node.js version specified in the `.nvmrc` file when you
    enter the project directory and run the following command:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，当您进入项目目录并运行以下命令时，nvm 可以使用 `.nvmrc` 文件中指定的 Node.js 版本：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If the Node.js version specified in the `.nvmrc` file is not installed, nvm
    will throw an error and will not change the Node.js version in use:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `.nvmrc` 文件中指定的 Node.js 版本尚未安装，nvm 将抛出错误，并且不会更改正在使用的 Node.js 版本：
- en: '[PRE20]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you run the command and the file is not found, nvm will throw an error:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运行命令而文件未找到，nvm 将抛出错误：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Now that we are familiar with nvm usage, it is time to start using Node.js in
    our terminal, so in the next section, we will explore how to use Node.js in an
    interactive environment with the Node.js REPL.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了 nvm 的使用方法，是时候开始在终端中使用 Node.js 了，因此在下节中，我们将探讨如何在交互式环境中使用 Node.js REPL。
- en: Node.js REPL
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Node.js REPL
- en: Yes, Node.js has a REPL, and it is very useful to test code and try new things.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，Node.js 有一个 REPL，并且它在测试代码和尝试新事物时非常有用。
- en: '**REPL** stands for **Read-Evaluate-Print Loop**, and it is a simple interactive
    computer programming environment that takes single user inputs, executes them,
    and returns the result to the user.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**REPL** 代表 **Read-Evaluate-Print Loop**，它是一个简单的交互式计算机编程环境，接受单个用户输入，执行它们，并将结果返回给用户。'
- en: 'To start the Node.js REPL, you will need to run the `node` command without
    any arguments. The output will be something like this:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动 Node.js REPL，您需要运行不带任何参数的 `node` 命令。输出将类似于以下内容：
- en: '[PRE22]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, you can start writing JavaScript code and it will be executed immediately:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以开始编写 JavaScript 代码，它将被立即执行：
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To exit the REPL, you can use the `.``exit` command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出 REPL，您可以使用 `.exit` 命令：
- en: '[PRE24]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You can also use the `.help` command to get a list of all the available commands:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 `.help` 命令来获取所有可用命令的列表：
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: As you can see, the Node.js REPL is very simple, but it is useful to test code
    and try new things. You can learn more about the Node.js REPL in the official
    documentation at [https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl](https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Node.js REPL 非常简单，但它在测试代码和尝试新事物时非常有用。您可以在官方文档中了解更多关于 Node.js REPL 的信息：[https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl](https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl)。
- en: As well as the Node.js REPL, we can use web browsers to debug and test our JavaScript
    code. In the next section, we will see this in action using Google Chrome.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Node.js REPL，我们还可以使用网络浏览器来调试和测试我们的 JavaScript 代码。在下一节中，我们将使用 Google Chrome
    来演示这一点。
- en: Interacting with JavaScript using Chrome DevTools
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Chrome DevTools 与 JavaScript 交互
- en: 'There is a set of utilities included in the Chrome browser ([https://developer.chrome.com/docs/devtools/overview/](https://developer.chrome.com/docs/devtools/overview/))
    defined as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome浏览器中包含了一组工具（[https://developer.chrome.com/docs/devtools/overview/](https://developer.chrome.com/docs/devtools/overview/)），定义如下：
- en: “Chrome DevTools is a set of web developer tools built directly into the Google
    Chrome browser. DevTools can help you edit pages on-the-fly and diagnose problems
    quickly, which ultimately helps you build better websites, faster.”
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: “Chrome DevTools是一套直接构建在Google Chrome浏览器中的Web开发者工具。DevTools可以帮助你实时编辑页面并快速诊断问题，这最终有助于你更快地构建更好的网站。”
- en: All Chrome-based browsers have Chrome DevTools, so you can use it with any browser
    based on Chromium, such as Google Chrome, Microsoft Edge, Brave, and so on.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 所有基于Chrome的浏览器都有Chrome DevTools，因此你可以使用任何基于Chromium的浏览器，如Google Chrome、Microsoft
    Edge、Brave等。
- en: The Node.js REPL is very useful, but in order to build web applications with
    Node.js, we can use Chrome DevTools for debug purposes. This debugging will be
    limited to client-side JavaScript as the Node.js code is not executed directly
    in the browser.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js的REPL非常有用，但为了使用Node.js构建Web应用，我们可以使用Chrome DevTools进行调试。这种调试将仅限于客户端JavaScript，因为Node.js代码不是在浏览器中直接执行的。
- en: 'Chrome DevTools is a very complete tool, so this can be quite overwhelming
    at first, but we will focus on the most important features for this book: the
    **Console** and **Network** panels.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome DevTools是一个非常完整的工具，因此一开始可能会让人感到有些不知所措，但我们将专注于本书最重要的功能：**控制台**和**网络**面板。
- en: The Console panel
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制台面板
- en: The Console panel is the primary way to interact with the JavaScript on the
    website. The console is interactive so we can write JavaScript code and it will
    be executed immediately; we can also read the console output.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台面板是与网站上的JavaScript交互的主要方式。控制台是交互式的，因此我们可以编写JavaScript代码，它将立即执行；我们还可以读取控制台输出。
- en: 'The following video provides a great overview of the tool: [https://www.youtube.com/watch?v=76U0gtuV9AY](https://www.youtube.com/watch?v=76U0gtuV9AY).'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下视频提供了该工具的概述：[https://www.youtube.com/watch?v=76U0gtuV9AY](https://www.youtube.com/watch?v=76U0gtuV9AY)。
- en: 'You can read the official documentation here: [https://developer.chrome.com/docs/devtools/console/](https://developer.chrome.com/docs/devtools/console/).'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里阅读官方文档：[https://developer.chrome.com/docs/devtools/console/](https://developer.chrome.com/docs/devtools/console/)。
- en: The Network panel
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络面板
- en: The Network panel is very powerful. It allows us to inspect HTTP requests and
    responses so we can see the headers, body, status code, and so on. This will be
    very useful when we need to debug any kind of web application. You can find a
    great tutorial at [https://www.youtube.com/watch?v=e1gAyQuIFQo](https://www.youtube.com/watch?v=e1gAyQuIFQo).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 网络面板非常强大。它允许我们检查HTTP请求和响应，以便我们可以看到头部、主体、状态码等。当我们需要调试任何类型的Web应用时，这将非常有用。你可以在[https://www.youtube.com/watch?v=e1gAyQuIFQo](https://www.youtube.com/watch?v=e1gAyQuIFQo)找到一个很好的教程。
- en: 'You can read the official documentation here: [https://developer.chrome.com/docs/devtools/network/](https://developer.chrome.com/docs/devtools/network/).'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里阅读官方文档：[https://developer.chrome.com/docs/devtools/network/](https://developer.chrome.com/docs/devtools/network/)。
- en: Using Chrome DevTools
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Chrome DevTools
- en: 'In our case, we will start from an empty website. We will use the Console panel
    to write JavaScript code that will change the page, and then we will inspect the
    HTTP requests. Follow these steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们将从一个空网站开始。我们将使用控制台面板来编写将改变页面的JavaScript代码，然后我们将检查HTTP请求。按照以下步骤操作：
- en: In your browser, go to `about:blank`; by default, this will show a blank page.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的浏览器中，前往`about:blank`；默认情况下，这将显示一个空白页面。
- en: Open DevTools by right-clicking on the page and clicking **Inspect**.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击页面并点击**检查**来打开DevTools。
- en: Go to the `document.body.innerHTML = '<h1>Hello World!</h1>'` and press *Enter*.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`document.body.innerHTML = '<h1>Hello World!</h1>'`并按*Enter*。
- en: '![Figure 2.1 – Web browser screenshot](img/B21678_02_01.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – Web浏览器截图](img/B21678_02_01.jpg)'
- en: Figure 2.1 – Web browser screenshot
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – Web浏览器截图
- en: Now, you should see the **Hello World!** text on the page.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该能在页面上看到**Hello World!**文本。
- en: '![Figure 2.2 – Web browser screenshot with Hello World! text](img/B21678_02_02.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 – 包含Hello World!文本的Web浏览器截图](img/B21678_02_02.jpg)'
- en: Figure 2.2 – Web browser screenshot with Hello World! text
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – 包含Hello World!文本的Web浏览器截图
- en: Go to the **Network** tab and navigate to [https://packt.com](https://packt.com).
    You should see a lot of activity.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**网络**选项卡并导航到[https://packt.com](https://packt.com)。你应该会看到很多活动。
- en: '![Figure 2.3 – Web browser activity](img/B21678_02_03.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图2.3 – Web浏览器活动](img/B21678_02_03.jpg)'
- en: Figure 2.3 – Web browser activity
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 网络浏览器活动
- en: This was a simple example for you to get familiar with the Chrome DevTools,
    but you can do much more with it. I recommend you read the official documentation
    to learn more.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的示例，让您熟悉 Chrome DevTools，但您可以用它做更多的事情。我建议您阅读官方文档以了解更多信息。
- en: Summary
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Congratulations! Your environment is ready to start developing new projects
    with Node.js!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您的环境已准备好开始使用 Node.js 开发新项目！
- en: In this chapter, we explored the process of installing Node.js on various operating
    systems. Node.js is compatible with Windows, macOS, and Linux, but we also looked
    at the installation process for other operating systems, including non-officially-supported
    ones.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了在各个操作系统上安装 Node.js 的过程。Node.js 与 Windows、macOS 和 Linux 兼容，但我们还研究了其他操作系统的安装过程，包括非官方支持的系统。
- en: Additionally, we delved into the usage of nvm to manage multiple Node.js versions.
    nvm allows you to switch between different versions of Node.js effortlessly. This
    can be particularly useful when working on projects that require specific Node.js
    versions or when testing compatibility across different versions.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还深入探讨了使用 nvm 来管理多个 Node.js 版本的方法。nvm 允许您轻松地在不同的 Node.js 版本之间切换。这在处理需要特定
    Node.js 版本的项目或测试不同版本之间的兼容性时尤其有用。
- en: Furthermore, the chapter covered the usage of the Node.js REPL and Chrome DevTools.
    The Node.js REPL is an interactive shell that allows developers to experiment
    with JavaScript code, execute commands, and see immediate output. It provides
    a convenient environment for quickly testing code and debugging issues. Chrome
    DevTools is a set of web development tools built into the Google Chrome browser.
    It allows developers to inspect and debug JavaScript code and debug the network
    request among other things.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本章还涵盖了 Node.js REPL 和 Chrome DevTools 的使用。Node.js REPL 是一个交互式外壳，允许开发者实验 JavaScript
    代码，执行命令，并立即看到输出。它提供了一个方便的环境，可以快速测试代码和调试问题。Chrome DevTools 是一组内置在 Google Chrome
    浏览器中的网络开发工具。它允许开发者检查和调试 JavaScript 代码，以及调试网络请求等。
- en: In the next chapter, we will learn about JavaScript fundamentals. You will use
    Chrome DevTools and the Node.js REPL to run the examples and practice.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习 JavaScript 的基础知识。您将使用 Chrome DevTools 和 Node.js REPL 来运行示例并进行实践。
- en: Further reading
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'How to install Node.js: [https://nodejs.org/en/learn/getting-started/how-to-install-nodejs](https://nodejs.org/en/learn/getting-started/how-to-install-nodejs)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如何安装 Node.js: [https://nodejs.org/en/learn/getting-started/how-to-install-nodejs](https://nodejs.org/en/learn/getting-started/how-to-install-nodejs)'
- en: 'Building Node.js from source: [https://github.com/nodejs/node/blob/main/BUILDING.md](https://github.com/nodejs/node/blob/main/BUILDING.md)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '从源代码构建 Node.js: [https://github.com/nodejs/node/blob/main/BUILDING.md](https://github.com/nodejs/node/blob/main/BUILDING.md)'
- en: 'Node.js unofficial-builds project: [https://github.com/nodejs/unofficial-builds](https://github.com/nodejs/unofficial-builds)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Node.js 非官方构建项目: [https://github.com/nodejs/unofficial-builds](https://github.com/nodejs/unofficial-builds)'
- en: 'The official platform list supported by Node.js: [https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list](https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Node.js 支持的官方平台列表: [https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list](https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list)'
- en: 'The Node.js binaries distributed by NodeSource: [https://github.com/nodesource/distributions/blob/master/README.md](https://github.com/nodesource/distributions/blob/master/README.md)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'NodeSource 分发的 Node.js 二进制文件: [https://github.com/nodesource/distributions/blob/master/README.md](https://github.com/nodesource/distributions/blob/master/README.md)'
- en: 'Official Node.js Docker images: [https://hub.docker.com/_/node](https://hub.docker.com/_/node)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '官方 Node.js Docker 镜像: [https://hub.docker.com/_/node](https://hub.docker.com/_/node)'
- en: 'How to use the Node.js REPL: [https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl](https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如何使用 Node.js REPL: [https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl](https://nodejs.org/en/learn/command-line/how-to-use-the-nodejs-repl)'
- en: 'Chrome DevTools – Console: [https://developer.chrome.com/docs/devtools/console/](https://developer.chrome.com/docs/devtools/console/)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Chrome DevTools – 控制台: [https://developer.chrome.com/docs/devtools/console/](https://developer.chrome.com/docs/devtools/console/)'
- en: 'Chrome DevTools – Network: [https://developer.chrome.com/docs/devtools/network/](https://developer.chrome.com/docs/devtools/network/)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Chrome DevTools – 网络: [https://developer.chrome.com/docs/devtools/network/](https://developer.chrome.com/docs/devtools/network/)'
