["```js\n    <html> \n      <head> \n        <title>Test Page</title> \n      </head> \n      <body> \n        <!-- This is a comment! --> \n        <h1>This is a test page.</h1> \n      </body> \n    </html>\n    ```", "```js\n    htmlmin: { \n      dist: { \n        src: 'src/index.html', \n        dest: 'dist/index.html', \n        options: { \n          removeComments: true, \n          collapseWhitespace: true\n        }\n      }\n    }\n    ```", "```js\n    Running \"htmlmin:dist\" (htmlmin) task \n    Minified dist/index.html 147 B → 92 B\n\n    ```", "```js\n    <html>\n      <head>\n        <title>Test Page</title>\n      </head>\n      <body>\n        <h1>This is a test page.</h1>\n      </body>\n    </html>\n    ```", "```js\n    body { \n      /* Average body style */\n      background-color: #ffffff; \n      color: #000000; /*! Black (Special) */\n    }\n    ```", "```js\n    cssmin: { \n      dist: { \n        src: 'src/style.css', \n        dest: 'dist/style.min.css' \n      } \n    }\n    ```", "```js\n    Running \"cssmin:dist\" (cssmin) task \n    File dist/style.css created: 55 B → 38 B\n\n    ```", "```js\n    body{background-color:#fff;color:#000;/*! Black (Special) */}\n    ```", "```js\ncssmin: { \n  dist: { \n    src: 'src/style.css', \n    dest: 'dist/style.min.css', \n    options: { \n      banner: '/* Minified version of style.css */' \n    } \n  } \n}\n```", "```js\ncssmin: { \n  dist: { \n    src: 'src/style.css', \n    dest: 'dist/style.min.css', \n    options: { \n      keepSpecialComments: 0 \n    } \n  } \n}\n```", "```js\ncssmin: {\n  dist: {\n    src: 'src/main.css',\n    dest: 'dist/main.css',\n    options: {\n      report: 'gzip'\n    }\n  }\n}\n```", "```js\n    imagemin: {\n      dist: {\n        src: 'src/image.jpg',\n        dest: 'dist/image.jpg'\n      }\n    }\n    ```", "```js\n    Running \"imagemin:dist\" (imagemin) task\n    Minified 1 image (saved 13.36 kB)\n\n    ```", "```js\nimagemin: {\n  dist: {\n    src: 'src/image.png',\n    dest: 'dist/image.png',\n    options: {\n      optimizationLevel: 7\n    }\n  }\n}\n```", "```js\nimagemin: {\n  dist: {\n    src: 'src/image.jpg',\n    dest: 'dist/image.jpg',\n    options: {\n      progressive: false\n    }\n  }\n}\n```", "```js\nimagemin: {\n  dist: {\n    src: 'src/image.gif',\n    dest: 'dist/image.gif',\n    options: {\n      interlaced: false\n    }\n  }\n}\n```", "```js\n imagemin: {\n  dist: {\n    src: 'src/image.svg',\n    dest: 'dist/image.svg',\n    options: {\n      svgoPlugins: [\n        {removeViewBox:false},\n {removeUselessStrokeAndFill:false},\n {removeEmptyAttrs:false}\n      ]\n    }\n  }\n}\n```", "```js\n    imagemin-mozjpeg@4.0.0 node_modules/imagemin-mozjpeg\n\n    ```", "```js\n    var mozjpeg = require('imagemin-mozjpeg');\n    ```", "```js\n    imagemin: {\n      dist: {\n        src: 'src/image.jpg',\n        dest: 'dist/image.jpg',\n        options: {\n          use: [mozjpeg()]\n        }\n      }\n    }\n    ```", "```js\n    Running \"imagemin:dist\" (imagemin) task\n    Minified 1 image (saved 9.88 kB)\n\n    ```", "```js\n    sample = 'abc';\n    console.log(sample);\n    ```", "```js\n    jshint: {\n      main: {\n        options: {\n          undef: true\n        },\n        src: ['src/main.js']\n      }\n    }\n    ```", "```js\n    Running \"jshint:main\" (jshint) task\n\n     src/main.js\n     1 |sample = 'abc';\n     ^ 'sample' is not defined.\n     2 |console.log(sample);\n     ^ 'console' is not defined.\n     2 |console.log(sample);\n     ^ 'sample' is not defined.\n\n    >> 3 errors in 1 file\n\n    ```", "```js\njshint: {\n  main: {\n    options: {\n      undef: true,\n      curly: true\n    },\n    src: ['src/main.js']\n  }\n}\n```", "```js\njshint: {\n  main: {\n    options: {\n      undef: true,\n      globals: {\n console: true\n }\n    },\n    src: ['src/main.js']\n  }\n}\n```", "```js\njshint: {\n  main: {\n    options: {\n      undef: true,\n      reporterOutput: 'report.dat'\n    },\n    src: ['src/main.js']\n  }\n}\n```", "```js\njshint: {\n  main: {\n    options: {\n      undef: true,\n      force: true\n    },\n    src: ['src/main.js']\n  }\n}\n```", "```js\n    var main = function () {\n      var one = 'Hello' + ' ';\n      var two = 'World';\n\n      var result = one + two;\n\n      console.log(result);\n    };\n    ```", "```js\n    uglify: {\n      main: {\n        src: 'src/main.js',\n        dest: 'dist/main.js'\n      }\n    }\n    ```", "```js\n    Running \"uglify:main\" (uglify) task\n    >> 1 file created.\n\n    ```", "```js\nuglify: {\n  main: {\n    src: 'src/main.js',\n    dest: 'dist/main.js',\n    options: {\n mangle: {\n toplevel: true\n },\n compress: {\n evaluate: false\n },\n beautify: {\n semicolons: false\n }\n    }\n  }\n}\n```", "```js\nuglify: {\n  main: {\n    src: 'src/main.js',\n    dest: 'dist/main.js',\n    options: {\n      sourceMap: true\n    }\n  }\n}\n```", "```js\nuglify: {\n  main: {\n    src: 'src/main.js',\n    dest: 'dist/main.js',\n    options: {\n wrap: true\n    }\n  }\n}\n```", "```js\n    require.config({\n      baseUrl: 'app'\n    });\n    ```", "```js\n    define(function (require) {\n      return function () {\n        console.log('Sample Module');\n      }\n    });\n    ```", "```js\n    require(['sample'], function (sample) {\n      sample();\n    });\n    ```", "```js\n    requirejs: {\n      app: {\n        options: {\n          mainConfigFile: 'src/config.js',\n          name: 'main',\n          out: 'www/js/app.js'\n        }\n      }\n    }\n    ```", "```js\n    Running \"requirejs:app\" (requirejs) task\n\n    ```", "```js\nrequirejs: {\n  app: {\n    options: {\n      mainConfigFile: 'src/config.js',\n      name: 'main',\n      out: 'www/js/app.js',\n      optimize: 'uglify2'\n    }\n  }\n}\n```", "```js\nrequirejs: {\n  app: {\n    options: {\n      mainConfigFile: 'src/config.js',\n      name: 'main',\n      out: 'www/js/app.js',\n      optimize: 'uglify2',\n      preserveLicenseComments: false,\n      generateSourceMaps: true\n    }\n  }\n}\n```"]