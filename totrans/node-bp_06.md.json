["```js\n{\n  \"name\": \"FlickrUploader\",\n  \"description\": \"Command line tool\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"flapi\": \"*\",\n    \"open\": \"*\",\n    \"optimist\": \"*\",\n    \"glob\": \"*\"\n  },\n  \"main\": \"index.js\",\n  \"bin\": {\n    \"flickruploader\": \"./index.js\"\n  }\n}\n```", "```js\nvar flickr = require('./lib/Flickr');\nvar files = require('./lib/Files');\nvar flickrOptions = {};\n\nfiles(function(images) {\n  flickr(flickrOptions, images, function() {\n    console.log(\"All the images uploaded.\");\n    process.exit(1);\n  })\n});\n```", "```js\nvar fs = require('fs');\nvar argv = require('optimist').argv;\nvar readline = require('readline');\nvar glob = require('glob');\n```", "```js\nvar currentDirectory = process.cwd() + '/';\nvar rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n```", "```js\nmodule.exports = function(callback) {\n  if(argv.s) {\n    readDirectory(currentDirectory + argv.s, callback);\n  } else {\n    getPath(function(path) {\n      readDirectory(path, callback);\n    });\n  }\n};\n```", "```js\nargv.s will be equal to images. So, we should check whether such a parameter is passed, and if yes, we continue with searching the image files. If not, ask the user via the readline module, the getPath function, as in the following code:\n```", "```js\nvar getPath = function(callback) {\n  rl.question('Please type a path to directory: ', function(answer) {\n    callback(currentDirectory + answer);\n  });\n}\n```", "```js\nvar readDirectory = function(path, callback) {\n  if(fs.existsSync(path)) {\n    glob(path + \"/**/*.+(jpg|jpeg|gif|png)\", function(err, files){\n      if(err) {\n          throw new Error('Can\\'t read the directory.');\n      }\n      console.log(\"Found images:\");\n      files.forEach(function(file) {\n        console.log(file.replace(/\\//g, '\\\\').replace(process.cwd(), ''));\n      });\n      rl.question('Are you sure (y/n)? ', function(answer) {\n        if(answer == 'y') {\n          callback(files);\n        }\n        rl.close();\n      });\n    });    \n  } else {\n    getPath(function(path) {\n      readDirectory(path, callback);\n      });\n  }\n}\n```", "```js\n/**/*.+(jpg|jpeg|gif|png)\n```", "```js\nvar open = require('open');\nvar http = require('http');\nvar url = require('url');\nvar Flapi = require('flapi');\n\nvar flapiClient;\nvar filesToOpen;\nvar done;\nvar options;\n\nmodule.exports = function(opts, files, callback) {\n  options = opts;\n  filesToOpen = files;\n  done = callback;\n  createFlapiClient();\n}\n```", "```js\nvar flickr = require('./lib/Flickr');\nvar files = require('./lib/Files');\nvar flickrOptions = {\n  oauth_consumer_key: \"ebce9c7a68eb009f8db5bcc41d139320\",\n  oauth_consumer_secret: \"a9277a76c947c0b3\",\n    // oauth_token: '',\n    // oauth_token_secret: '',\n  perms: 'write'\n};\n```", "```js\nvar createFlapiClient = function(){\n  flapiClient = new Flapi(options);\n  if(!options.oauth_token) {\n    flapiClient.authApp('http://127.0.0.1:3000', function(oauthResults){\n      runServer(function() {\n        open(flapiClient.getUserAuthURL());\n      })\n    });\n  } else {\n      uploadPhotos();\n  }\n};\n```", "```js\nvar runServer = function(callback) {\n    http.createServer(function (req, res) {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    var urlParts = url.parse(req.url, true);\n    var query = urlParts.query;\n    if(query.oauth_token) {\n    flapiClient.getUserAccessToken(query.oauth_verifier, function(result) {\n        options.oauth_token = result.oauth_token;\n        options.oauth_token_secret = result.oauth_token_secret;\n        var message = '';\n        for(var prop in result) {\n          message += prop + ' = ' + result[prop] + '<br />';\n        }\n        res.end(message);\n        uploadPhotos();\n      });\n    } else {\n      res.end('Missing oauth_token parameter.');\n    }\n  }).listen(3000, '127.0.0.1');\n  console.log('Server running at http://127.0.0.1:3000/');\n  callback();\n}\n```", "```js\nvar uploadPhotos = function() {\n  if(filesToOpen.length === 0) {\n    done();\n  } else {\n    var file = filesToOpen.shift();\n    console.log(\"Uploading \" + file.replace(/\\//g, '\\\\').replace(process.cwd(), ''));\n    flapiClient.api({\n      method: 'upload',\n      params:  { photo : file },\n      accessToken : { \n        oauth_token: options.oauth_token,\n        oauth_token_secret: options.oauth_token_secret\n      },\n      next: function(data){\n          uploadPhotos();\n      }\n  });\n  }\n}\n```"]