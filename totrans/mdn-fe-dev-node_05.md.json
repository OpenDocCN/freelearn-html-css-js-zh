["```js\nexport function div(a,b){ return (\n a/ b)\n}\n```", "```js\nexport function div(a, b){\n  return a / b;\n}\n```", "```js\n$ npm install eslint --save-dev\n```", "```js\n$ npm install eslint --global\n```", "```js\nexport function div(a,b){ return (\n\n a/ b)\n\n}\n```", "```js\n{\n\n    \"root\": true,\n\n    \"parserOptions\": {\n\n        \"sourceType\": \"module\",\n\n        \"ecmaVersion\": 2020\n\n    },\n\n    \"rules\": {\n\n        \"semi\": [\"error\", \"always\"]\n\n    }\n\n}\n```", "```js\n$ npx eslint .\n/home/node/Chapter05/example01/index.js\n  2:7  error  Missing semicolon  semi\n![](img/012.png) 1 problem (1 error, 0 warnings)\n  1 error and 0 warnings potentially fixable with the\n  `--fix` option.\n```", "```js\n    $ npx eslint . --fix\n    ```", "```js\nexport function div(a,b){ return (\n\n a/ b);\n\n}\n```", "```js\n$ npm install eslint-plugin-prefer-arrow --save-dev\n```", "```js\n{\n\n    \"root\": true,\n\n    \"parserOptions\": {\n\n        \"sourceType\": \"module\",\n\n        \"ecmaVersion\": 2020\n\n    },\n\n    \"plugins\": [\n\n      \"prefer-arrow\"\n\n    ],\n\n    \"rules\": {\n\n        \"semi\": [\"error\", \"always\"],\n\n        \"prefer-arrow/prefer-arrow-functions\": [\"error\", {}]\n\n    }\n\n}\n```", "```js\n    $ npx eslint .\n    ```", "```js\n    /home/node/Chapter05/example01/index.js\n    ```", "```js\n      1:8  error  Use const or class constructors instead\n    ```", "```js\n      of named functions  prefer-arrow/prefer-arrow-\n    ```", "```js\n      functions\n    ```", "```js\n    ![](img/012.png) 1 problem (1 error, 0 warnings)\n    ```", "```js\n    $ npm install stylelint stylelint-config-standard\n    ```", "```js\n      --save-dev\n    ```", "```js\n{\n\n  \"extends\": \"stylelint-config-standard\"\n\n}\n```", "```js\ndiv {\n\n    padding-left: 20px;\n\n    padding: 10px;\n\n}\n\np {\n\n    color: #44;\n\n}\n```", "```js\n    $ npx stylelint style.css\n    ```", "```js\n    style.css\n    ```", "```js\n     2:5   ![](img/012.png)  Expected indentation of 2 spaces\n    ```", "```js\n       indentation\n    ```", "```js\n     3:5   ![](img/012.png)  Unexpected shorthand \"padding\" after\n    ```", "```js\n      \"padding-left\"  declaration-block-no-shorthand-\n    ```", "```js\n      property-overrides\n    ```", "```js\n     3:5   ![](img/012.png)  Expected indentation of 2 spaces\n    ```", "```js\n       indentation\n    ```", "```js\n     5:1   ![](img/012.png)  Expected empty line before rule\n    ```", "```js\n       rule-empty-line-before\n    ```", "```js\n     6:5![](img/012.png)  Expected indentation of 2 spaces\n    ```", "```js\n       indentation\n    ```", "```js\n     6:12  ![](img/012.png)  Unexpected invalid hex color \"#44\"\n    ```", "```js\n       color-no-invalid-hex\n    ```", "```js\n     7:1   ![](img/012.png)  Unexpected missing end-of-source newline\n    ```", "```js\n       no-missing-end-of-source-newline\n    ```", "```js\n    $ npx stylelint style.css --fix\n    ```", "```js\n    style.css\n    ```", "```js\n     3:5   ![](img/012.png)  Unexpected shorthand \"padding\" after\n    ```", "```js\n      \"padding-left\"  declaration-block-no-shorthand-\n    ```", "```js\n      property-overrides\n    ```", "```js\n     6:12  ![](img/012.png)  Unexpected invalid hex color \"#44\"\n    ```", "```js\n       color-no-invalid-hex\n    ```", "```js\n    $ npm install prettier --save-dev\n    ```", "```js\n    $ npx prettier index.js\n    ```", "```js\n    export function div(a, b) {\n    ```", "```js\n      return a / b;\n    ```", "```js\n    }\n    ```", "```js\n{\n  \"tabWidth\": 4,\n  \"semi\": false,\n  \"singleQuote\": true\n}\n```", "```js\n    $ npx prettier index.js\n    ```", "```js\n    export function div(a, b) {\n    ```", "```js\n        return a / b\n    ```", "```js\n    }\n    ```", "```js\n    $ npx prettier index.js --write\n    ```", "```js\n    index.js 41ms\n    ```", "```js\nroot = true\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\n```", "```js\n{\n  \"semi\": false,\n  \"singleQuote\": true\n}\n```"]