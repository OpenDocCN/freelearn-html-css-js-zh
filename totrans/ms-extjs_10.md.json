["```js\ndefaultToken : 'home',\n```", "```js\nroutes : {\n    'home' : 'onHome'\n},\n```", "```js\nonHome : function() {\n    var mainPanel = this.getMainPanel(); //#1\n    if (mainPanel){\n        mainPanel.setActiveTab(0);\n    }\n},\n```", "```js\ninit: function() {\n    this.addRef([{\n        ref: 'mainPanel',\n        selector: 'mainpanel'\n    }]);\n    this.callParent();\n}\n```", "```js\ncontrollers: [\n    //'Root',\n    'Menu',\n    'StaticData'\n],\n```", "```js\ninit: function() {\n    Packt.app.createController('Root');\n},\n```", "```js\n'user|actorsgrid|categoriesgrid|languagesgrid|citiesgrid|countriesgrid|films|salesfilmcategory': {\n    before: 'onBeforeRoute',\n    action: 'onRoute'\n}\n```", "```js\nonBeforeRoute: function(action){\n    var hash = Ext.util.History.getToken(); //#1\n\n    Ext.Ajax.request({\n        url     : 'php/security/verifyEntitlement.php',\n        params  : {\n            module : hash\n        },\n        success : function(conn, response, options, eOpts) {\n\n            var result = Packt.util.Util.decodeJSON(conn.responseText);\n\n            if (result.success) {\n                action.resume();   //#2\n            } else {\n                Packt.util.Util.showErrorMsg(result.msg);\n                action.stop();     //#3\n            }\n        },\n        failure : function(conn, response, options, eOpts) {\n            Packt.util.Util.showErrorMsg(conn.responseText);\n            action.stop();         //#4\n        }\n    });\n},\n```", "```js\nonRoute: function(){\n    var me = this,\n        hash = Ext.util.History.getToken(),\n        main = me.getMain(); //#5\n\n    me.locateMenuItem(main, hash); //#6\n},\n```", "```js\n{\n    ref: 'main',\n    selector: '[xtype=mainmenu]'\n}\n```", "```js\nlocateMenuItem: function(mainMenu, hash){\n    var me = this,\n        root, node;\n    Ext.each(mainMenu.items.items, function(tree){\n        if (tree.getXType() === 'menutree'){\n            root = tree.getRootNode();\n            node = root.findChild('className', hash);\n            if (node){\n                me.openTab(node); //#1\n                return;\n            }\n        }\n    });\n},\n```", "```js\nopenTab: function(record){\n    var mainPanel = this.getMainPanel();\n\n    var newTab = mainPanel.items.findBy(\n        function (tab){\n            return tab.title === record.get('text');\n        });\n\n    if (!newTab){\n        newTab = mainPanel.add({\n            xtype: record.get('className'),\n            glyph: record.get('glyph') + '@FontAwesome',\n            title: record.get('text'),\n            closable: true\n        });\n    }\n\n    mainPanel.setActiveTab(newTab);\n},\n```", "```js\nonTreePanelItemClick: function(view, record, item, index, event, options){\n    this.redirectTo(record.get('className'));\n},\n```", "```js\nlisten : {\n    controller : {\n        '*': {\n            unmatchedroute: 'onUnmatchedRoute'\n        }\n    }\n},\n```", "```js\nonUnmatchedRoute : function(hash) {\n    Packt.util.Util.showErrorMsg('Hash does not exist!');\n}\n```", "```js\n'films/:id' : {\n    action: 'onFilmSelect',\n    before: 'onBeforeFilmSelect',\n    conditions : {\n        ':id' : '([0-9]+)'\n    }\n}\n```", "```js\nonBeforeFilmSelect: function(id, action){\n\n    var me = this,\n        main = me.getMain();\n\n    this.locateMenuItem(this.getMain(),'films'); //#1\n\n    var record = this.getFilmsGrid().getStore().findRecord('film_id', id);\n    if(record) {\n        action.resume();\n    }\n    else {\n        action.stop();\n    }\n},\n```", "```js\n{\n    ref: 'filmsGrid',\n    selector: '[xtype=films-grid]'\n}\n```", "```js\nonFilmSelect: function(id){\n    this.getFilmsGrid().fireEvent('selectfilm', id);\n}\n```", "```js\nlisteners: {\n    itemclick: 'onItemClick',\n    selectfilm: 'onFilmSelect'\n}\n```", "```js\nonFilmSelect: function(id){\n    var me = this,\n        grid = me.lookupReference('filmsGrid'),\n        store = me.getStore('films'),\n        record = store.findRecord( 'film_id', id );\n\n    if (record){\n        grid.getSelectionModel().select(record);\n    }\n},\n```", "```js\nonItemClick: function( view, record, item, index, e, eOpts ) {\n    this.redirectTo('films/' + record.get('film_id'));\n}\n```", "```js\n{\n    xtype: 'mainmenu',\n    region: 'west',\n    plugins: 'responsive',\n    responsiveConfig: {\n        'width < 768 && tall': {\n            visible: false\n        },\n        'width >= 768': {\n            visible: true\n        }\n    }\n}\n```", "```js\n{\n    xtype: 'tbfill'\n},{\n xtype: 'responsive-mainmenu'\n},{\n    xtype: 'translation'\n},\n```", "```js\nExt.define('Packt.view.main.ResponsiveMenuButton', {\n    extend: 'Ext.button.Split',\n    xtype: 'responsive-mainmenu',\n\n    requires: [\n        'Packt.view.main.MainModel'\n    ],\n\n    text: 'Menu',\n\n    plugins: 'responsive',\n    responsiveConfig: {\n        'width < 768 && tall': {\n            visible: true\n        },\n        'width >= 768': {\n            visible: false\n        }\n    },\n\n    menu: {\n        xtype: 'menu',\n        items: [{\n            xtype: 'mainmenu'\n        }]\n    }\n});\n```", "```js\n\"theme\": \"ext-theme-neptune-touch\", //or \"ext-theme-crisp-touch\"\n```", "```js\n.icon-message {\n  background-image: url('mySprite.png');\n  background-position: -10px -10px;\n}\n\n.icon-envolope {\n  background-image: url('mySprite.png');\n  background-position: -15px -15px;\n}\n```"]