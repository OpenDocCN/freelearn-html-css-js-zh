["```js\n<img srcset=\"img/pwa-tickets-logo-1158x559.png 1158w, \n     img/pwa-tickets-logo-700x338.png 700w, \n     img/pwa-tickets-logo-570x276.png 570w, \n     img/pwa-tickets-logo-533x258.png 533w, \n     img/pwa-tickets-logo-460x223.png 460w, \n     img/pwa-tickets-logo-320x155.png 320w\"  \n     src=\"img/pwa-tickets-logo-1158x559.png\"  \n     sizes=\"(max-width: 480px) 40vw,  \n     (max-width: 720px) 20vw, 10vw\" \n     alt=\"pwa-tickets-logo\"> \n```", "```js\n    <link rel=\"preload\" href=\"css/webfonts/fa-brands-400.eot \" \n     as=\"font\"> \n     ... \n    <link rel=\"preload\" href=\"js/libs/utils.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/libs/localforage.min.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/libs/mustache.min.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/app/events.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/app/tickets.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/app/user.js\" as=\"script\"> \n    <link rel=\"preload\" href=\"js/app/app.js\" as=\"script\"> \n```", "```js\n<link rel=\"preload\" href=\"js/app/app.js\" as=\"script\" type=\"application/javascript\"> \n```", "```js\n<script src=\"img/config.js\" async></script> \n```", "```js\nfunction extractCSS($, callback) { \n\n    let options = { \n            ignore: [\".page-content .card\", \".page-content .card-\n            title\", \".page-content .ticket-card\"], \n            media: ['@media (max-width:480px)', '@media (min-\n           width:768px)', '@media (max-width:992px)', '@media (max-\n           width:1199px)'], \n            stylesheets: [path.resolve(publicPath, \n            'css/libs/bootstrap.min.css'), \n            path.resolve(publicPath, 'css/app/site.css') \n            ], \n            timeout: 1000, \n            report: true, \n            banner: false \n        }, \n        html = $.html(); \n\n    let $html = cheerio.load(html); \n\n    $html(\"body\").append(templates); \n    $html(\"script\").remove(); \n\n    $(\"script\").remove(); \n\n    //run uncss \n    uncss($html.html(), options, function (error, output) { \n\n        if (error) { \n            console.log(error); \n        } \n\n        let minCSS = new CleanCSS({ \n            level: 2 \n        }).minify(output); \n\n        $(\"head\").append(\"<style>\" + minCSS.styles + \"</style>\"); \n\n        callback($); \n\n    }); \n} \n```", "```js\nignore: [\".page-content .card\", \".page-content .card-title\", \".page-content .ticket-card\"] \n```", "```js\n$(\"head\").append(\"<style>\" + minCSS.styles + \"</style>\"); \n```", "```js\nBody = fs.createReadStream(src).pipe(zlib.createGzip({ \n            level: 9 \n        })); \n```", "```js\nconst UglifyJS = require(\"uglify-js\"), \n    uglifyOptions = { \n        parse: { \n            html5_comments: false, \n            shebang: false \n        }, \n        compress: { \n            drop_console: true, \n            keep_fargs: false \n        } \n    }, \n   ...; \n\nclass uglify { \n\n    constructor(src) {} \n    transformSrc(srcFiles) {} \n    minify() {} \n\n} \n```", "```js\n    minify() { \n\n        let src = this.transformSrc(srcFiles); \n        return UglifyJS.minify(src, uglifyOptions); \n\n    } \n```", "```js\nfunction uglifyScripts() { \n\n    scripts.forEach(script => { \n\n        let ug = new uglify(path.resolve(publicPath, script)); \n        let min = ug.minify(); \n\n        if (min.code && min.code !== \"\") { \n\n            let hashName = utils.getHash(min.code); \n\n            fs.writeFileSync(path.join(publicPath, \n            path.dirname(script), hashName + \".min.js\"), min.code); \n\n            scriptsObjs.push({ \n                src: script, \n                hash: hashName + \".min.js\" \n            }); \n        } else { \n            console.log(\"uglify error \", min.error); \n        } \n    });  \n} \n```", "```js\nfunction  getHash(data) { \n    var md5 = crypto.createHash('md5'); \n    md5.update(data); \n\n    return md5.digest('hex'); \n} \n```", "```js\n<script src=\"img/470bb9da4a68c224d0034b1792dcbd77.min.js\"></script> \n<script src=\"img/ca901f49ff220b077f4252d2f1140c68.min.js\"></script> \n<script src=\"img/2ae25530a0dd28f30ca44f5182f0de61.min.js\"></script> \n<script src=\"img/aa0a8a25292f1dc72b1bee3bd358d477.min.js\"></script> \n<script src=\"img/470bb9da4a68c224d0034b1792dcbd77.min.js\"></script> \n<script src=\"img/e392a867bee507b90b366637460259aa.min.js\"></script> \n<script src=\"img/8fd5a965abed65cd11ef13e6a3408641.min.js\"></script> \n<script src=\"img/512df4f42ca96bc22908ff3a84431452.min.js\"></script> \n<script src=\"img/bc8ffbb70c5786945962ce782fae415c.min.js\"></script> \n```", "```js\n<link rel=\"preload\" href=\"js/libs/470bb9da4a68c224d0034b1792dcbd77.min.js\" as=\"script\" type=\"application/javascript\"> \n<link rel=\"preload\" href=\"js/libs/ca901f49ff220b077f4252d2f1140c68.min.js\" as=\"script\" type=\"application/javascript\"> \n<link rel=\"preload\" href=\"js/libs/2ae25530a0dd28f30ca44f5182f0de61.min.js\" as=\"script\" type=\"application/javascript\"> \n<link rel=\"preload\" href=\"js/libs/aa0a8a25292f1dc72b1bee3bd358d477.min.js\" as=\"script\" type=\"application/javascript\"> \n<link rel=\"preload\" href=\"js/app/pages/bc8ffbb70c5786945962ce782fae415c.min.js\" as=\"script\" type=\"application/javascript\"> \n<link rel=\"preload\" href=\"js/app/512df4f42ca96bc22908ff3a84431452.min.js\" as=\"script\" type=\"application/javascript\"> \n```", "```js\ncache-control: public, max-age=31536000 \n```", "```js\n<script type=\"script-polyfil\" id=\"polyfilassign\" \n    src=\"img/object.assign.js\"></script> \n    <script type=\"script-polyfil\" id=\"polyfilpromise\"   \n    src=\"img/es6-promise.min.js\"></script> \n    <script type=\"script-polyfil\" id=\"polyfilfetch\" \n    src=\"img/fetch.js\"></script> \n    <script type=\"script-polyfil\" id=\"polyfilintersection\" \n    src=\"img/intersection-observer.js\"></script> \n    <script> \n        //wrap in IIFE to keep out of global scope \n        (function () { \n            function toggleScript(id) { \n                var target = document.getElementById(\"polyfil\" + id); \n                target.setAttribute(\"type\", \"text/javascript\"); \n            } \n\n            if (typeof Object.assign != 'function') { \n                toggleScript(\"assign\"); \n            } \n\n            if (typeof Promise === \"undefined\" || \n            Promise.toString().indexOf(\"[native code]\") === -1) { \n                toggleScript(\"promise\"); \n            } \n\n            if (typeof fetch === \"undefined\" || \n            fetch.toString().indexOf(\"[native code]\") === -1) { \n                toggleScript(\"fetch\"); \n            } \n         }()); \n    </script> \n```", "```js\n    lazyDisplay: function () { \n\n        var images = document.querySelectorAll('.lazy-image'); \n        var config = { \n   // If the image gets within 50px in the Y axis, start the download. \n            rootMargin: '50px 0px', \n            threshold: 0.01 \n        }; \n\n        // The observer for the images on the page \n       var observer = new IntersectionObserver(this.showImage, config); \n\n        images.forEach(function (image) { \n            observer.observe(image); \n        }); \n\n    } \n```", "```js\n<img class=\"lazy-image\" data-src=\"img/venue.jpg\" \n    data-srcset=\" img/venues/venue-1200x900.jpg 1200vw, img/venues/venue -992x744.jpg 992vw, img/venues/venue -768x576.jpg 768vw, img/venues/venue -576x432.jpg 576vw\" \n    sizes=\" (max-width: 577px) 90vw, (max-width: 769px) 45vw, (max-width: 769px) 30vw, 20vw\" >\n```", "```js\nshowImage: function (entries, observer) { \n  entries.forEach(function (io) { \n          if (io.isIntersecting) { \n               var image = io.target, \n               src = image.getAttribute(\"data-src\"), \n               srcSet = image.getAttribute(\"data-srcset\"); \n\n               if (srcSet) { \n                  image.setAttribute(\"srcset\", srcSet); \n               } \n\n               if (src) { \n                  image.setAttribute(\"src\", src); \n               } \n            } \n        }); \n    } \n```"]