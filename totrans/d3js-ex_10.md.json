["```js\nState,Under 5 Years,5 to 13 Years,14 to 17 Years,18 to 24 Years,25 to 44 Years,45 to 64 Years,65 Years and Over\nAL,310504,552339,259034,450818,1231572,1215966,641667\nAK,52083,85640,42153,74257,198724,183159,50277\nAZ,515910,828669,362642,601943,1804762,1523681,862573\n```", "```js\nvar url = 'https://gist.githubusercontent.com/d3byex/25129228aa50c30ef01f/raw/17838a0a03d94328a529de1dd768e956ce217af1/stacked_bars.csv';\nd3.csv(url, function (error, data) {\n```", "```js\nvar keys = d3.keys(data[0])\n    .filter(function (key) {\n        return key !== \"State\";\n    });\n```", "```js\nvar statesAndAges = keys.map(function (ageRange) {\n    return data.map(function (d) {\n        return {\n            x: d.State,\n            y: +d[ageRange]\n        };\n    });\n});\n```", "```js\nvar stackedData = d3.layout.stack()(statesAndAges);\n```", "```js\nvar width = 960, height = 500;\nvar svg = d3.select('body')\n    .append(\"svg\")\n    .attr({\n        width: width,\n        height: height\n    });\n```", "```js\nvar yScale = d3.scale.linear()\n        .domain([0,\n            d3.max(stackedData, function (d) {\n                return d3.max(d, function (d) {\n                    return d.y0 + d.y;\n                });\n            })\n        ])\n        .range([0, height]);\n```", "```js\nvar xScale = d3.scale.ordinal()\n    .domain(d3.range(stackedData[0].length))\n    .rangeRoundBands([0, width], 0.05);\n```", "```js\nvar colors = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\",\n            \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar groups = svg.selectAll(\"g\")\n    .data(stackedData)\n    .enter()\n    .append(\"g\")\n    .style(\"fill\", function (d, i) {\n        return colors(i);\n    });\n```", "```js\ngroups.selectAll(\"rect\")\n    .data(function (d) { return d; })\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", function (d, i) {\n        return xScale(i);\n    })\n    .attr(\"y\", function (d, i) {\n        return height - yScale(d.y) - yScale(d.y0);\n    })\n    .attr(\"height\", function (d) {\n        return yScale(d.y);\n    })\n    .attr(\"width\", xScale.rangeBand());\n});\n```", "```js\nsvg.selectAll(\"path\")\n    .data(stackedData)\n    .enter()\n    .append(\"path\")\n    .style(\"fill\", function (d, i) {\n        return colors(i);\n    });\n```", "```js\nvar area = d3.svg.area()\n    .x(function (d, i) {\n        return xScale(i);\n    })\n    .y0(function (d) {\n        return height - yScale(d.y0);\n    })\n    .y1(function (d) {\n        return height - yScale(d.y + d.y0);\n    });\n```", "```js\nsvg.selectAll(\"path\")\n    .data(stackedData)\n    .transition()\n    .attr(\"d\", function (d) {\n        return area(d);\n    });\n```", "```js\nvar stackedData = d3.layout.stack()\n    .offset('expand')(statesAndAges);\n```", "```js\nvar yScale = d3.scale.linear()\n    .domain([0, 1])\n    .range([0, height]);\n```", "```js\n{\n  \"name\": \"Mike and Marcia\",\n  \"children\": [\n    {\n      \"name\": \"Children\",\n      \"children\": [\n        { \"name\": \"Mikael\" }\n      ]\n    },\n    {\n      \"name\": \"Pets\",\n      \"children\": [\n        {\n          \"name\": \"Dogs\",\n          \"children\": [\n            { \"name\": \"Bleu\" },\n            { \"name\": \"Tagg\" }\n          ]\n        },\n        {\n          \"name\": \"Cats\",\n          \"children\": [\n            { \"name\": \"Bob\" },\n            { \"name\": \"Peanut\" }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```", "```js\nvar url = 'https://gist.githubusercontent.com/d3byex/25129228aa50c30ef01f/raw/c1c3ad9fa745c42c5410fba29cefccac47cd0ec7/familytree.json';\nd3.json(url, function (error, data) {\n    var width = 960, height = 500,\n        nodeRadius = 10,\n        margin = {\n            left: 50, top: 10,\n            bottom: 10, right: 40\n        };\n\n    var svg = d3.select('body')\n        .append(\"svg\")\n        .attr({\n            width: width,\n            height: height\n        });\n    var mainGroup = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + \n                                          margin.top + ')');\n```", "```js\nvar tree = d3.layout.tree()\n    .size([\n        height - (margin.bottom + margin.top),\n        width - (margin.left + margin.right),\n    ]);\n```", "```js\nvar nodes = tree.nodes(data);\n```", "```js\nvar links = tree.links(nodes);\n```", "```js\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) {\n        return [d.y, d.x];\n    });\n```", "```js\nmainGroup.selectAll('path')\n    .data(links)\n    .enter()\n    .append('path', 'g')\n    .attr({\n        d: diagonal,\n        fill: 'none',\n        stroke: '#ccc',\n        'stroke-width': 2\n    });\n```", "```js\nvar circleGroups = mainGroup.selectAll('g')\n    .data(nodes)\n    .enter()\n    .append('g')\n    .attr('transform', function (d) {\n        return 'translate(' + d.y + ',' + d.x + ')';\n    });\n```", "```js\ncircleGroups.append('circle')\n    .attr({\n        r: nodeRadius,\n        fill: '#fff',\n        stroke: 'steelblue',\n        'stroke-width': 3,\n    });\n```", "```js\ncircleGroups.append('text')\n    .text(function (d) {\n        return d.name;\n    })\n    .attr('y', function (d) {\n        return d.children || d._children ?\n            -nodeRadius * 2 : nodeRadius * 2;\n    })\n    .attr({\n        dy: '.35em',\n        'text-anchor': 'middle',\n        'fill-opacity': 1\n    })\n    .style('font', '12px sans-serif');\n```", "```js\n{\n  \"name\": \"1\",\n  \"children\": [\n    {\n      \"name\": \"1-1\",\n      \"children\": [\n        { \"name\": \"1-1-1\" },\n        { \"name\": \"1-1-2\" },\n        { \"name\": \"1-1-3\" },\n        { \"name\": \"1-1-4\" },\n        { \"name\": \"1-1-5\" },\n        { \"name\": \"1-1-6\" },\n        { \"name\": \"1-1-7\" },\n        { \"name\": \"1-1-8\" },\n        { \"name\": \"1-1-9\" }\n      ]\n    },\n    {\n      \"name\": \"1-2\",\n      \"children\": [\n        { \"name\": \"1-2-1\" },\n        { \"name\": \"1-2-2\" },\n        { \"name\": \"1-2-3\" },\n...\n```", "```js\nvar center = width / 2;\nvar mainGroup = svg.append('g')\n    .attr(\"transform\", \"translate(\" + center + \",\" + \n                                      center + \")\");\n```", "```js\nvar cluster = d3.layout.cluster()\n    .size([\n        360,\n        center - 50\n    ]);\n```", "```js\nvar nodes = cluster.nodes(data);\nvar links = cluster.links(nodes);\n```", "```js\nvar diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) {\n        return [\n            d.y,\n            d.x / 180 * Math.PI\n        ];\n    });\n```", "```js\nmainGroup.selectAll('path')\n    .data(links)\n    .enter()\n    .append('path')\n    .attr({\n        'd': diagonal,\n        fill: 'none',\n        stroke: '#ccc',\n        'stroke-width': 2\n    }); \n```", "```js\nvar nodeGroups = mainGroup.selectAll(\"g\")\n    .data(nodes)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function(d) {\n        return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\";\n    }); \n```", "```js\nnodeGroups.append(\"circle\")\n    .attr({\n        r: nodeRadius,\n        fill: '#fff',\n        stroke: 'steelblue',\n        'stroke-width': 3\n    });\n```", "```js\nnodeGroups.append('text')\n    .attr({\n            dy: '.31em',\n            'text-anchor': function(d) {\n                return d.x < 180 ? 'start' : 'end';\n            },\n            'transform': function(d) {\n                return d.x < 180 ? \n                           'translate(' + (nodeRadius*2) + ')' :\n                           'rotate(180)' +\n                           'translate(' + (-nodeRadius*2) + ')';\n            }\n        })\n        .style('font', '12px sans-serif')\n    .text(function(d) { return d.name; });\n```", "```js\nvar pack = d3.layout.pack()\n    .size([diameter, diameter])\n    .value(function (d) { return d.value; });\n```", "```js\nvar nodes = svg.datum(data)\n    .selectAll('g')\n    .data(pack.nodes)\n    .enter()\n    .append('g')\n    .attr('transform', function (d) {\n        return 'translate(' + d.x + ',' + d.y + ')';\n    });\n\nnodes.append('circle')\n    .each(function (d) {\n        d3.select(this)\n            .attr({\n                r: d.r,\n                fill: d.children ? 'rgb(31, 119, 180)' :\n                                   '#ff7f0e',\n                'fill-opacity': d.children ? 0.25 : 1.0,\n                stroke: d.children ? 'rgb(31, 119, 180)' : 'none'\n            });\n    });\n```", "```js\nnodes.filter(function(d) {\n        return !d.children;\n    })\n    .append('text')\n    .attr('dy', '.3em')\n    .style({\n        'text-anchor': 'middle',\n        'font': '10px sans-serif'\n    })\n    .text(function(d) {\n        return d.name.substring(0, d.r / 3);\n    });\n```", "```js\nvar width = 960, height = 500;\nvar svg = d3.select('body')\n    .append('svg')\n    .attr({\n        width: width,\n        height: height\n    });\nvar mainGroup = svg.append('g')\n    .attr('transform', 'translate(' + width / 2 + ',' + \n                                      height / 2 + ')');\n```", "```js\nvar matrix = [\n    [11975, 5871, 8916, 2868],\n    [1951, 10048, 2060, 6171],\n    [8010, 16145, 8090, 8045],\n    [1013, 990, 940, 6907]\n];\n```", "```js\nvar layout = d3.layout.chord()\n    .padding(.05)\n    .matrix(matrix);\n```", "```js\nvar fill = d3.scale.ordinal().domain(d3.range(4))\n    .range(['#000000', '#FFEE89', '#957244', '#FF0023']);\n```", "```js\nvar innerRadius = Math.min(width, height) * 0.41,\n    outerRadius = innerRadius * 1.1;\nmainGroup.append('g')\n    .selectAll('path')\n    .data(layout.groups)\n    .enter()\n    .append('path')\n    .style('fill', function(d) { return fill(d.index); })\n    .style('stroke', function(d) { return fill(d.index); })\n    .attr('d', d3.svg.arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius));\n```", "```js\nmainGroup.append('g')\n    .selectAll('path')\n    .data(layout.chords)\n    .enter()\n    .append('path')\n    .attr('d', d3.svg.chord()\n                 .radius(innerRadius))\n    .style('fill', function(d) { return fill(d.target.index); })\n    .style({\n        opacity: 1,\n        stroke: '#000',\n        'fill-opacity': 0.67,\n        'stroke-width': '0.5px'\n    });\n```", "```js\n [\n  [ 20, 49, 67, 16,  0, 19, 19, 0,  0, 1, 10,  5, 6,  1,  1 ],\n  [ 4,   6,  3, 34,  0, 16,  1, 2,  1, 1,  6,  0, 1, 56,  0 ],\n  [ 2,   8, 13, 15,  0, 12, 23, 15,10, 1,  0,  1, 0,  0,  6 ],\n  [ 3,   9, 28,  0, 91,  6,  1, 0,  0, 0,  7, 18, 0,  9, 16 ]\n]\n```", "```js\nvar url = 'https://gist.githubusercontent.com/d3byex/25129228aa50c30ef01f/raw/4393a0e579cbfd9bb20a431ce93c72fb1ea23537/streamgraph.json';\nd3.json(url, function (error, rawData) {\n    var width = 960, height = 500;\n    var svg = d3.select('body')\n        .append('svg')\n        .attr({\n            'width': width,\n            'height': height\n        });\n```", "```js\nvar data = Array();\nd3.map(rawData, function (d, i) {\n    data[i] = d.map(function (i, j) {\n        return { x: j, y: i };\n    });\n});\n```", "```js\nvar numPointsPerLayer = data[0].length;\n\nvar xScale = d3.scale.linear()\n    .domain([0, numPointsPerLayer - 1])\n    .range([0, width]);\n```", "```js\nvar layers = d3.layout.stack()\n    .offset('wiggle')(data);\n```", "```js\n{\n\"nodes\":[\n  {\"node\":0, \"name\":\"Source 1\"},\n  {\"node\":1, \"name\":\"Source 2\"},\n  {\"node\":2, \"name\":\"First Level Distribution\"},\n  {\"node\":3, \"name\":\"Second Level Distribution 1\"},\n  {\"node\":4, \"name\":\"Terminus 1\"},\n  {\"node\":5, \"name\":\"Terminus 2\"},\n  {\"node\":6, \"name\":\"Second Level Distribution 2\"},\n  {\"node\":7, \"name\":\"Source 3\"}\n],\n\"links\":[\n  {\"source\":0, \"target\":2, \"value\":6},\n  {\"source\":0, \"target\":4, \"value\":2},\n\n  {\"source\":1, \"target\":2, \"value\":4},\n  {\"source\":1, \"target\":3, \"value\":2},\n  {\"source\":1, \"target\":6, \"value\":1},\n\n  {\"source\":2, \"target\":3, \"value\":5},\n  {\"source\":2, \"target\":4, \"value\":3},\n  {\"source\":2, \"target\":6, \"value\":2},\n\n  {\"source\":3, \"target\":4, \"value\":4},\n  {\"source\":3, \"target\":5, \"value\":4},\n\n  {\"source\":6, \"target\":5, \"value\":5},\n  {\"source\":7, \"target\":6, \"value\":2},\n  {\"source\":7, \"target\":3, \"value\":1}\n] \n}\n```", "```js\nvar url = 'https://gist.githubusercontent.com/d3byex/25129228aa50c30ef01f/raw/e6ea7c4728e45fb8d0464b21686eec806687e117/sankey.json';\nd3.json(url, function(error, graph) {\n    var width = 950, height = 500;\n    var svg = d3.select('body')\n        .append('svg')\n        .attr({\n            width: width,\n            height: height\n        });\n    var mainGroup = svg.append('g');\n```", "```js\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height])\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(10);\n```", "```js\nmainGroup.append('g')\n    .selectAll('g.link')\n    .data(data.links)\n    .enter()\n    .append('path')\n    .attr({\n        d: sankey.link(),\n        fill: 'none',\n        stroke: '#000',\n        'stroke-opacity': 0.2,\n        'stroke-width': function(d) { return Math.max(1, d.dy) }\n    })\n    .sort(function(a, b) { return b.dy - a.dy; });\n```", "```js\nvar nodes = mainGroup.append('g')\n    .selectAll('g.node')\n    .data(data.nodes)\n    .enter()\n    .append('g')\n    .attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')';\n    });\n```", "```js\nvar color = d3.scale.category20();\nnodes.append('rect')\n    .attr({\n        height: function(d) { return d.dy; },\n        width: sankey.nodeWidth(),\n        fill: function(d, i) {\n            return d.color = color(i);\n        },\n        stroke: 'black'\n    });\n```", "```js\nnodes.append('text')\n    .attr({\n        x: -6,\n        y: function(d) { return d.dy / 2; },\n        dy: '.35em',\n        'text-anchor': 'end'\n    })\n    .style('font', '10px sans-serif')\n    .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n    .attr({\n        x: 6 + sankey.nodeWidth(),\n        'text-anchor': 'start'\n    });\n```"]