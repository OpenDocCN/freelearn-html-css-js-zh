- en: '*Chapter 8*: Customizing the Website Using Bootstrap 5 Variables, Utility API,
    and Sass'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will start customizing the website that was described and
    previewed in the previous chapter. We will do that primarily by changing some
    of the Bootstrap 5 variables that are used for styling all the elements of Bootstrap
    5\. While doing this, we will change some of the gutter and spacing utility classes
    being used to better match the new style. We will also use the utility API to
    modify some of the existing utilities and optimize the layout by using these new
    utility classes. Finally, we will also add our own Sass to customize the website
    even further.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, there will be many code examples and some screenshots, but
    I recommend that you explore this customized version of the website in a browser
    on different device sizes to really see the difference from before.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Importing Bootstrap 5 files and custom styles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default variable overrides
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Variable values using existing variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other custom styling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To preview the examples, you will need a code editor and a browser. The source
    code for all code examples can be found here: [https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide](https://github.com/PacktPublishing/The-Missing-Bootstrap-5-Guide).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To compile Sass to CSS, you will need any of the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Node.js**, if you prefer a **command-line interface** (**CLI**) using Terminal
    (macOS) or Command Prompt (Windows)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scout-App**, if you prefer a **graphical user interface** (**GUI**)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Visual Studio Code**, if you prefer to use an extension from the Visual Studio
    Code Marketplace'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: All these approaches are explained in [*Chapter 2*](B17143_02_epub.xhtml#_idTextAnchor033),
    *Using and Compiling Sass*.
  prefs: []
  type: TYPE_NORMAL
- en: Importing Bootstrap 5 files and custom styles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 4*](B17143_04_epub.xhtml#_idTextAnchor079)*,* *Bootstrap 5 Global
    Options and Colors*, we learned about the `bootstrap.scss` file and that it contains
    all the code that will import the individual Sass partial files for the various
    elements of Bootstrap 5\. We will use a slightly different order of these `@import`
    statements, which will make customization easier. We will also add `@import` statements
    for four of our own SCSS files, which we use to override variables (two files
    for this), define utilities, and add custom styles, in between the Bootstrap 5
    `@import` statements.
  prefs: []
  type: TYPE_NORMAL
- en: 'The order of the `@import` statements is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Required import of Bootstrap 5’s `_functions.scss` file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of *our own* `_default-variable-overrides.scss` file, which is used for
    default variable overrides
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Required import of Bootstrap 5’s `_variables.scss` file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of *our own* `_variable-value-using-variable.scss` file, which is used
    for overriding variable values with existing variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Required import of Bootstrap 5’s `_maps.scss`, `_mixins.scss`, and `_root.scss`
    files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of optional Bootstrap 5 partial files for layout, content, forms, and
    components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of Bootstrap 5’s `_helpers.scss` file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of Bootstrap 5’s `_utilities.scss` file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of *our own* `_utilities.scss` file, which is used to define the utilities
    that we want to generate using the utility API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of Bootstrap 5’s `utilities/_api.scss` file used to generate the utility
    classes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of *our own* `_custom-styles.scss` file, which is used to add any additional
    custom SCSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, you will see all the code for the `@import` statements (the comments
    plus code for the `@import` statements regarding our own files have been highlighted):'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/style.scss
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: We are now ready to start customizing our website and adding the customization
    code into the four different files of our own.
  prefs: []
  type: TYPE_NORMAL
- en: We will start with the code for default variable overrides in the `_default-variable-overrides.scss`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: Default variable overrides
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`_default-variable-overrides.scss`'
  prefs: []
  type: TYPE_NORMAL
- en: In this file, we will add *all* customization code regarding colors, global
    options, global variables, and layout, and *some* of the customization code regarding
    forms and components. There will also be customization code regarding forms and
    components (as well as other customization code) in the `_variable-value-using-variable.scss`
    file, which we will take a closer look at later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Color palette
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first thing we want to do is define our own color palette. Together with
    typography (which we will customize later in this chapter), this is a very important
    aspect of a visual design that defines a brand.
  prefs: []
  type: TYPE_NORMAL
- en: 'We override all contextual color classes by assigning them a new hexadecimal
    color value, but any other ways to define colors can be used. The `$secondary`,
    `$light`, and `$dark` variables are assigned a color value from the list of gray
    colors defined in Bootstrap 5, as noted in the comments. The variables for the
    gray colors are not imported yet, and therefore, we can’t use them as the value
    for `$secondary`, `$light`, and `$dark`:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 1-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: After having defined our own color palette, we will now move on to change one
    of the global options.
  prefs: []
  type: TYPE_NORMAL
- en: Global options
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For this website, we only want to change the shadows option of Bootstrap 5\.
    We set it to `true` to have box shadows added to various components:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 12-14
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Global variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Global variables are variables that are used as values for other variables in
    many other places. The global variables with the biggest impact are those for
    spacing and border-radius, which we will change now.
  prefs: []
  type: TYPE_NORMAL
- en: Spacer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can change the default styling of many Bootstrap 5 elements by modifying
    the `$spacer` variable, and we can control the values of the spacing utilities
    by modifying the `$spacers` map.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use the new spacing values, as seen in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 17-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Increasing the spacer affects many elements of Bootstrap 5, including the gutter
    utilities used with the responsive grid system. To get some more consistent spacing
    between columns when using nested grid systems, we change the `.g-4` class used
    on the Home page (in the Popular products module), on the Shop page (in the Products
    overview module), on the Product page (in the Related products module), and on
    the Wishlist page (in the Products overview module) to `.g-3`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another minor adjustment we need to make is to change the `.mt-2` class to
    `.mt-1` on the three `<div>` elements wrapping the quote icons in the `<blockquote>`
    elements on the Product page. See the code change here:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/product.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Border radius
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can also change the default styling of many Bootstrap 5 elements by modifying
    three of the variables related to border radius: `$border-radius`, `$border-radius-sm`,
    and `$border-radius-lg`. The last border-radius variable, `$border-radius-pill`,
    is only used for the border utility, so we won’t change that.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The most radical change would be to set all the variables to `0` to remove
    the border radius from all elements and have straight corners, but we will instead
    double the default border radius and slightly adjust the other two:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 28-31
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Layout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s possible to adjust the styling of the layout regarding breakpoints, containers,
    and the grid system. If we were to change the number of columns in the grid system,
    it would require a lot of changes to the markup for our grid systems in our HTML
    pages, so we will stick to changing the breakpoints and containers for our website.
  prefs: []
  type: TYPE_NORMAL
- en: Breakpoints
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The breakpoint settings are used for the grid system and containers as well
    as for the following elements that have responsive variations: dropdown, list
    group, modal, navbar, tables, and position helper.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will increase each breakpoint by 40 pixels to make our grid system differ
    a bit from the default Bootstrap 5 settings:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 34-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Container
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Since we increased the breakpoint sizes by 40 pixels, we will also increase
    our container max width sizes by 40 pixels. It’s not necessary to change both
    grid breakpoints and container max widths with the same value, but you should
    make sure to test it when you are making changes to any of those:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss 44-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: We have now made several changes to the layout of Bootstrap 5 and will continue
    to customize the forms.
  prefs: []
  type: TYPE_NORMAL
- en: Forms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Inputs and buttons are already affected by the global variables for border
    radius that we changed earlier, but not by the global variables for spacers. Therefore,
    we will adjust the vertical and horizontal padding of both inputs and buttons
    here. They share the same variables for padding, typography, focus states, and
    border width, so we only need to override the padding in one place to affect both
    inputs and buttons:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 53-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: Components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the following, we will change various properties of some of the components
    being used in our website.
  prefs: []
  type: TYPE_NORMAL
- en: Breadcrumb
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the breadcrumb component, we will change the symbol of the breadcrumb divider:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 59-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Carousel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the carousel component, we will increase the width of the control icons
    on each side and increase the height and spacing of the indicators:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 62-65
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: Dropdown
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the dropdown component, we will set the minimum width to `0`, so it doesn’t
    take up any extra horizontal space when the dropdown items don’t contain much
    text:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 67-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: Modal
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the modal component, we will increase the size of the large modal variation,
    increase the opacity of the backdrop, and change the transition when it’s opened
    and closed:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 70-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: Navs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the navs component, we will increase the vertical padding of the nav links
    to make them larger:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 75-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: Progress
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the progress component, we will increase the height, decrease the animation
    duration, and decrease the transition duration:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 78-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: Spinner
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the spinner component, we will increase the animation duration to make
    it spin a little bit slower:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_default-variable-overrides.scss line 83-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: We have now made all the customizations regarding default variable overrides,
    so we will move on to further customization with variable values using existing
    variables.
  prefs: []
  type: TYPE_NORMAL
- en: Variable values using existing variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`_variable-value-using-variable.scss`'
  prefs: []
  type: TYPE_NORMAL
- en: In this file, we will add *all* customization code for content, *some* of the
    customization code for forms and components, and the customization code for one
    helper class. The reason we import this file after the import of the required
    Bootstrap 5 `_variables.scss` file is that we want to use existing variables from
    `_variables.scss` as the new value when overriding the different variables related
    to content, some variables for forms and components, and a variable for a helper
    class. This is especially helpful when we want to assign color variables to other
    variables.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the code in the `_variable-value-using-variable.scss` file doesn’t have
    to be placed there and could as well have been placed in the `_default-variable-overrides.scss`
    file. But, I have chosen to group related variables together as much as possible,
    and that’s why all variables related to for example content have been grouped
    together here.
  prefs: []
  type: TYPE_NORMAL
- en: Content
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Content category of Bootstrap 5 contains typography, images, tables, and
    figures. We will make changes to all of that, except for tables.
  prefs: []
  type: TYPE_NORMAL
- en: Typography
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As mentioned earlier, typography is a very important aspect of visual design.
    Because of this, we will make major changes to the overall typography.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will use these two free fonts from Google Fonts: Roboto and Comfortaa.
    These can be implemented by adding the following three `<link>` tags to the `<head>`
    element just before the closing `</head>` tag in all HTML files:'
  prefs: []
  type: TYPE_NORMAL
- en: '*.xhtml line 9-11'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: The two Google Fonts are now available to use, and they will be added as a value
    to the `$font-family-base` and `$headings-font-family` variables in the next code
    block.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an overview of all the changes we are making to the typography:'
  prefs: []
  type: TYPE_NORMAL
- en: Background color and text color of `<body>`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default font family, font size, and line height
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styles for links
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Font family, font sizes, font weight, line height, and margin-bottom for regular
    headings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Font sizes and line height for display headings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Font size for the lead paragraph
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'See how all these changes are made in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 2-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: Images
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For images, we will make some changes to the image thumbnail. We will increase
    the padding, change the background color, change the border color, and decrease
    the border radius:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 39-43
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: Notice that we just set the background color of image thumbnails to the background
    color of `<body>`, which we just changed in the preceding typography code block.
    We will use that variable (`$body-bg`) or the related variable for the text color
    of `<body>` (`$body-color`) for all the remaining customizations in this file.
  prefs: []
  type: TYPE_NORMAL
- en: Figures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For figures, we will increase the font size and change the text color for the
    figure caption:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 45-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: Forms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will set the background color of input elements, checkboxes, radio buttons,
    and select elements. We do this by first assigning the `$body-bg` value to `$input-bg`,
    and then using that variable (`$input-bg`) as the value for the `$form-check-input-bg`
    and `$form-select-bg` variables:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 49-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE170]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE171]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE172]'
  prefs: []
  type: TYPE_PRE
- en: Components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you can see next, we will place those component variables that need the `$body-bg`
    variable as the value for their background color here (in this file and after
    the customization for content).
  prefs: []
  type: TYPE_NORMAL
- en: Card
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the card component, we will change the background color:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 56-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE173]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE174]'
  prefs: []
  type: TYPE_PRE
- en: List group
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For the list group component, we will change the background color:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 59-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE175]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE176]'
  prefs: []
  type: TYPE_PRE
- en: Helpers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Helpers can’t be customized using variables in the `_variables.scss` file, since
    they don’t have the same visual properties as the rest of the Bootstrap 5 elements.
    The exception to this is the ratio helper, which we will see next.
  prefs: []
  type: TYPE_NORMAL
- en: Ratio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The ratio helper classes are generated from the `$aspect-ratios` Sass map.
    We can add more values to this map by merging it with a custom map:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_variable-value-using-variable.scss line 62-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE177]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE178]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE179]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE180]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE181]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE182]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE183]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding code, the new `$custom-ratio` Sass map is created with the
    new property and aspect ratio `5` by `3`. The value is based on the same calculation
    as the existing values in the `$aspect-ratios` Sass map. When these maps are merged,
    we now get the new `.ratio-5x3` helper class. After this change, we need to update
    the ratio helper class already being used on our Contact page like so:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/contact.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE184]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE185]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE186]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE187]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE188]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE189]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE190]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE191]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE192]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE193]'
  prefs: []
  type: TYPE_PRE
- en: We have now made all the customization for helpers, so we will move on to customizing
    utilities.
  prefs: []
  type: TYPE_NORMAL
- en: Utilities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`_utilities.scss`'
  prefs: []
  type: TYPE_NORMAL
- en: In this file, we will add all customization code that uses the utility API.
    Some utilities have already been customized because their values are based on
    variables from the `_variables.scss` file, which we have already been overriding
    earlier in this chapter. This includes the spacing utilities and various text
    utilities. Additional customization requires code using the utility API.
  prefs: []
  type: TYPE_NORMAL
- en: Before modifying any utilities with the utility API, we should consider which
    utilities, of those we are already using, are not adequate or flexible enough
    in their current form, and then modify them.
  prefs: []
  type: TYPE_NORMAL
- en: For our website, we will improve two things on the Cart page. First, we want
    to improve the responsive layout of the elements in the Products overview in the
    `<div>` element that wraps around our Products overview in the **Summary** section
    of the **Shipping Details** tab pane and **Payment Options** tab pane by using
    more flexible border utilities.
  prefs: []
  type: TYPE_NORMAL
- en: Since we’re not just modifying the values of some utilities but are making them
    more flexible and thus generating more utility classes we can use, we will also
    have to update the HTML accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: Sizing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We want to change the sizing utility for `width`, so we can better control
    the layout of some of the elements across breakpoints. We will make the utilities
    for `width` responsive and add the extra properties and values `33: 33%` and `67:
    67%` using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_utilities.scss line 1-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE194]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE195]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE196]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE197]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE198]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE199]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE200]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE201]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE202]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE203]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE204]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE205]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE206]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE207]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE208]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE209]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE210]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE211]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE212]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE213]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE214]'
  prefs: []
  type: TYPE_PRE
- en: 'This will generate a lot of new responsive `width` utility classes as well
    as new classes for the new properties and values we added, so we will now update
    our HTML in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/cart.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE215]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE216]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE217]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE218]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE219]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE220]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE221]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE222]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE223]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE224]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE225]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE226]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE227]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE228]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding code, we are now using `4` and `6` width utility classes, respectively,
    for two different parts of our layout. If we take the second part, we can see
    that we are adjusting the width for every existing breakpoint. This is sometimes
    necessary to get the best possible layout when working with responsive design.
  prefs: []
  type: TYPE_NORMAL
- en: Border
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We want to improve the use of borders on the `<div>` element that wraps around
    our Products overview in the `xs`, `sm`, `xl`, and `xxl` breakpoints and turned
    into a two-column grid on the breakpoints in between (`md` and `lg`). We want
    the border to be placed on the right side for the `md` and `lg` breakpoints, and
    at the bottom for all other breakpoints.
  prefs: []
  type: TYPE_NORMAL
- en: 'To accomplish this, we need to make the border utilities for `border-width`,
    `border-bottom`, and `border-end` responsive, and we can do that with the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_utilities.scss line 22-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE229]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE230]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE231]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE232]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE233]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE234]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE235]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE236]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE237]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE238]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE239]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE240]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE241]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE242]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE243]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE244]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE245]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE246]'
  prefs: []
  type: TYPE_PRE
- en: 'This will generate a lot of new responsive border utility classes, so we will
    now need to update our HTML. We will also use spacing utilities for padding and
    margins to optimize the layout of this part of the page, and the result can be
    seen in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/cart.xhtml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE247]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE248]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE249]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE250]'
  prefs: []
  type: TYPE_PRE
- en: We have now made all customization for utilities, so we will move on to other
    custom styling.
  prefs: []
  type: TYPE_NORMAL
- en: Other custom styling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`_custom-styles.scss`'
  prefs: []
  type: TYPE_NORMAL
- en: In this file, we will add all customization code for components that can’t be
    done by overriding existing variables from the `_variables.scss` file. Instead,
    we will target the components using CSS class selectors and modify the styles
    using a mix of regular CSS and Sass code. Even though we can’t override existing
    variables, we can still use them as values for our CSS properties, which we will
    do for the two components in this section.
  prefs: []
  type: TYPE_NORMAL
- en: Alert
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We want to add a thick border on the left side of the `alert` component with
    the border color inheriting the text color and the thickness being half the value
    of the `$spacer` variable:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_custom-styles.scss line 1-4
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE251]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE252]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE253]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE254]'
  prefs: []
  type: TYPE_PRE
- en: 'The shorthand for `border-left` used in the preceding code is equal to the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE255]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE256]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE257]'
  prefs: []
  type: TYPE_PRE
- en: Because of the default `currentColor` border-color value, the color of the left
    border will inherit the color of the text color of the alert, which depends on
    the type of alert being used. On our website, we currently use the info alert
    on the `$info` color.
  prefs: []
  type: TYPE_NORMAL
- en: Offcanvas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We want to give the header of the `_variables.scss` file as values for our
    CSS properties. This results in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: part-2/chapter-8/website/scss/_custom-styles.scss line 6-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE258]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE259]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE260]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE261]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE262]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE263]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned how customization of Bootstrap 5 works in practice
    in relation to a real website. First, we learned how to mix and order the `@import`
    statements for Bootstrap 5 Sass partials and our own Sass partials to achieve
    maximum customizability. Then, we learned how to customize various elements of
    layout, content, forms, components, and helpers using Bootstrap 5 variables. After
    that, we learned how to modify existing utilities using the utility API to make
    them more flexible and improve the layout of our website. Finally, we learned
    how we can customize components in other ways than the default ways using our
    own Sass code.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will see how we can improve and extend our website even
    further, including how to add a custom component and adding interactive features.
  prefs: []
  type: TYPE_NORMAL
