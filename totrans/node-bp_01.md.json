["```js\nvar http = require('http');\nvar getTime = function() {\n  var d = new Date();\n  return  d.getHours() + ':' + d.getMinutes() + ':' + \n      d.getSeconds() + ':' + d.getMilliseconds();\n}\nvar respond = function(res, str) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end(str + '\\n');\n  console.log(str + ' ' + getTime());\n}\nvar handleRequest = function (req, res) {\n  console.log('new request: ' + req.url + ' - ' + getTime());\n  if(req.url == '/immediately') {\n    respond(res, 'A');\n  } else {\n    var now = new Date().getTime();\n    while(new Date().getTime() < now + 5000) {\n      // synchronous reading of the file\n    }\n    respond(res, 'B');\n  }\n}\nhttp.createServer(handleRequest).listen(9000, '127.0.0.1');\n```", "```js\nvar handleRequest = function (req, res) {\n  console.log('new request: ' + req.url + ' - ' + getTime());\n  if(req.url == '/immediately') {\n    respond(res, 'A');\n  } else {\n    setTimeout(function() {\n      // reading the file\n      respond(res, 'B');\t\n      }, 5000);\t  \t\n    }\n}\n```", "```js\n// wheels.js\nvar typeOfTires;\nexports.init = function(type) {\n    typeOfTires = type;\n}\nexports.info = function() {\n  console.log(\"The car uses \" + typeOfTires + \" tires.\");\n}\n```", "```js\n// cars.js\n  var wheels = require(\"./wheels.js\");\n  wheels.init(\"winter\");\n  wheels.info();\n```", "```js\nThe car uses winter tires.\n```", "```js\n// engine.js\nvar Class = function() {\n    // ...\n}\nClass.prototype = {\n  forward: function() {\n    console.log(\"The car is moving forward.\");\n  },\n  backward: function() {\n    console.log(\"The car is moving backward.\");\t\n  } \n}\nmodule.exports = Class;\n```", "```js\n// file.js\nmodule.exports.a = 10;\nexports.b = 20;\n\n// app.js\nvar file = require('./file');\nconsole.log(file.a, file.b);\n```", "```js\nmodule.exports = { a: 10 };\nexports.b = 20;\n```", "```js\nvar Engine = require(\"./engine.js\");\nvar e = new Engine();\ne.forward();\n```", "```js\nvar Class = function() { }\nClass.prototype = new require('./engine.js')();\nClass.prototype.constructor = Class;\n```", "```js\n// control.js\nvar util = require(\"util\");\nvar Engine = require(\"./engine.js\");\nvar Class = function() { }\nutil.inherits(Class, Engine); \nClass.prototype.left = function() {\n  console.log(\"The car is moving to left.\");\n};\nClass.prototype.right = function() {\n  console.log(\"The car is moving to right.\");  \n}\nmodule.exports = Class;\n```", "```js\nvar Control = require(\"./control.js\");\nvar c = new Control();\nc.forward();\nc.right();\n```", "```js\n// air.js\nvar util = require(\"util\");\nvar EventEmitter = require('events').EventEmitter;\nvar Class = function() { }\nutil.inherits(Class, EventEmitter);\nClass.prototype.start = function() {\n  this.emit(\"started\");\n};\nmodule.exports = Class;\n```", "```js\n// car.js\nvar AirConditioning = require(\"./air.js\");\nvar air = new AirConditioning();\nair.on(\"started\", function() {\n  console.log(\"Air conditioning started\");\n});\nair.start();\n```", "```js\nClass.prototype.start = function() {\n  this.emit(\"started\", { status: \"cold\" });\n};\n```", "```js\nair.on(\"started\", function(data) {\n  console.log(\"Status: \" + data.status);\n});\n```", "```js\nfs.readFile('page.html', function (err, content) {\n  if (err) throw err;\n  console.log(content);\n});\n```", "```js\nfs.readFile('page.html', function (err, content) {\n  if(err) throw err;\n  getData(function(data) {\n    applyDataToTheTemplate(content, data, function(resultedHTML) {\n      renderPage(resultedHTML, function() {\n        showPage(function() {\n          // finally, we are done\n        });\n     });\n  });\n  });\n});\n```", "```js\nvar onFileRead = function(content) {\n  getData(function(data) {\n    applyDataToTheTemplate(content, data, dataApplied);\n  });\n}\nvar dataApplied = function(resultedHTML) {\n  renderPage(resultedHTML, function() {\n    showPage(weAreDone);\n  });\n}\nvar weAreDone = function() {\n  // finally, we are done\n}\nfs.readFile('page.html', function (err, content) {\n  if (err) throw err;\n    onFileRead(content);\n});\n```", "```js\nvar renderTemplate = require(\"./renderTemplate.js\");\nrenderTemplate('page.html', function() {\n  // we are done\n});\n```", "```js\nvar TwitterFeed = require('TwitterFeed');\nTwitterFeed.on('loaded', function(err, data) {\n  if(err) {\n      // ...\n   } else {\n      // ...\n   }\n});\nTwitterFeed.getData();\n```", "```js\nvar TwitterFeed = require('TwitterFeed');\nvar promise = TwitterFeed.getData();\npromise.then(function(data) {\n  // ...\n}, function(err) {\n  // ...\n});\n```", "```js\nvar TwitterFeed = require('TwitterFeed');\nvar Database = require('Database');\nvar promise = TwitterFeed.getData();\npromise.then(function(data) {\n  var promise = Database.save(data);\n  return promise;\n}).then(function() {\n  // the data is saved\n  // into the database\n}).catch(function(err) {\n  // ...\n});\n```", "```js\nvar connect = require('connect'),\n    http = require('http');\n\nvar app = connect()\n  .use(function(req, res, next) {\n    console.log(\"That's my first middleware\");\n    next();\n  })\n  .use(function(req, res, next) {\n    console.log(\"That's my second middleware\");\n    next();\n  })\n  .use(function(req, res, next) {\n    console.log(\"end\");\n    res.end(\"hello world\");\n  });\n\nhttp.createServer(app).listen(3000);\n```", "```js\ndata property.\n```", "```js\n.use(function(req, res, next) {\n    req.data = { value: \"middleware\"};\n    next();\n})\n.use(function(req, res, next) {\n    console.log(req.data.value);\n})\n```", "```js\nvar wheels = require(\"./wheels.js\")();\nvar control = require(\"./control.js\")();\nvar airConditioning = require(\"./air.js\")();\nmodule.export = {\n  run: function() {\n    wheels.init();\n    control.forward();\n    airConditioning.start();\n  }\n}\n```", "```js\nvar util = require(\"util\");\nvar EventEmitter = require('events').EventEmitter;\nvar Class = function() { }\nutil.inherits(Class, EventEmitter);\n```", "```js\n{\n  \"name\": \"my-awesome-module\",\n  \"version\": \"0.1.10\",\n  \"dependencies\": {\n    \"optimist\": \"0.6.1\",\n    \"colors\": \"0.6.2\"\n  }\n}\n```", "```js\n{\n  \"name\": \"my-awesome-car\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"wheels\": \"2.0.1\",\n    \"control\": \"0.1.2\",\n    \"air\": \"0.2.4\"\n  }\n}\n```"]