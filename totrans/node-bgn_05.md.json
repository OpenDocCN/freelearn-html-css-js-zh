["```js\n<!-- External Sources -->\n<script src=\"img/jquery-3.7.0.min.js\"></script>\n<!-- Other files -->\n<script src=\"img/script1.js\"></script>\n<!-- Direct Scripts -->\n<script>\nconsole.log(\"Hello world\");\n</script>\n```", "```js\nconst sayHello = require('./utils.js');\nsayHello();\n```", "```js\nfunction sayHello() {\n  console.log('Hello world');\n}\nmodule.exports = sayHello;\n```", "```js\n$ node index.js\nHello world\n```", "```js\n$ node utils.js\n```", "```js\n// You can export directly\nexports.sayHello = () => {\n  console.log('Hello world');\n}\nfunction sayGoodbye() {\n  console.log('Goodbye world');\n}\n// You can also export using references\nexports.sayGoodbye = sayGoodbye;\n```", "```js\nconst sayHello = () => {\n  console.log('Hello world');\n}\nfunction sayGoodbye() {\n  console.log('Goodbye world');\n}\nmodule.exports = {\n  sayHello,\n  sayGoodbye\n}\n```", "```js\nconst { sayHello, sayGoodbye } = require('./utils.js');\nsayHello();\nsayGoodbye();\n```", "```js\n{\n  \"name\": \"John\",\n  \"lastName\": \"Doe\"\n}\n```", "```js\nconst user = require('./user.json');\nconsole.log(user);\n// { name: 'John', lastName: 'Doe' }\n```", "```js\n{\n  \"type\": \"module\"\n}\n```", "```js\nexport default function sayHello() {\n  console.log('Hello world');\n}\n```", "```js\nimport sayHello from './utils.js';\nsayHello();\n```", "```js\nconst sayHello = () => {\n  console.log('Hello world');\n}\nfunction sayGoodbye() {\n  console.log('Goodbye world');\n}\nexport { sayGoodbye, sayHello };\n```", "```js\n// Import values directly\nimport { sayHello, sayGoodbye } from './utils.js';\n// Use wildcards to import all the exported values\nimport * as utils from './utils.js';\nsayHello();\nutils.sayHello();\n```", "```js\nTypeError [ERR_IMPORT_ASSERTION_TYPE_MISSING]: Module \"file:///{REDACTED}/user.json\" needs an import assertion of type \"json\"\n```", "```js\nimport { createRequire } from \"module\";\nconst require = createRequire(import.meta.url);\nconst user = require(\"./user.json\");\nconsole.log(user);\n// { name: 'John', lastName: 'Doe' }\n```", "```js\n├── index.cjs\n├── index.mjs\n├── utils.cjs\n└── utils.mjs\n```", "```js\nconst sayGoodbye = () => {\n  console.log('Goodbye world');\n}\nmodule.exports = { sayGoodbye }\n```", "```js\nconst sayHello = () => {\n  console.log('Hello world');\n}\nexport { sayHello }\n```", "```js\nimport { sayHello } from './utils.mjs';\nimport { sayGoodbye } from './utils.cjs';\nsayHello();\nsayGoodbye();\n```", "```js\nconst { sayGoodbye } = require('./utils.cjs');\nimport(\"./utils.mjs\").then(({ sayHello }) => {\n    sayHello();\n    sayGoodbye();\n});\n```", "```js\nimport { readFile } from 'node:fs';\nreadFile('hello.txt', (err, content) => {\n  if (err)  {\n    console.error(\"OMG, there is an error:\", err);\n    return;\n  }\n  console.log(`File content: ${content}`);\n  // File content: Hello world\n});\n```", "```js\nimport { readFileSync } from 'node:fs';\ntry {\n  const content = readFileSync('hello.txt');\n  console.log(`File content: ${content}`);\n  // File content: Hello world\n} catch (err) {\n  console.error(\"OMG, there is an error:\", err);\n};\n```", "```js\nimport { readFile } from 'node:fs/promises';\nreadFile('hello.txt')\n  .then(content => console.log(`File content: ${content}`))\n  .catch(err => console.error(\"OMG, there is an error:\", err))\n```", "```js\nimport data from './data.json' assert { type: 'json' };\nconsole.log(data);\n```", "```js\n(node:21490) ExperimentalWarning: Import assertions are not a stable feature of the JavaScript language. Avoid relying on their current behavior and syntax as those might change in a future version of Node.js.\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:21490) ExperimentalWarning: Importing JSON modules is an experimental feature and might change at any time\n```", "```js\n# Define the environmental variable\nexport NODE_OPTIONS='--experimental-json-modules,--max-old-space-size=4096'\n# Run the Node.js application as usual\nnode index.js\n```"]