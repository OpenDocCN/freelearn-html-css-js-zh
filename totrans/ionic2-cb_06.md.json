["```js\n    $ ionic start MySimpleAuth blank --v2\n    $ cd MySimpleAuth\n\n    ```", "```js\n    $ npm install @ionic/cloud-angular --save\n\n    ```", "```js\n    $ ionic io init\n\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { CloudSettings, CloudModule } from '@ionic/cloud-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n\n    const cloudSettings: CloudSettings = {\n      'core': {\n        'app_id': '288db316'\n      }\n    };\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp),\n        CloudModule.forRoot(cloudSettings)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: []\n    })\n    export class AppModule {} \n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          User Authentication\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n\n      <div *ngIf=\"!auth.isAuthenticated()\">\n\n        <h4>\n          Register or Login\n        </h4>\n\n        <ion-list>\n\n          <ion-item>\n            <ion-label fixed>Email</ion-label>\n            <ion-input type=\"text\" [(ngModel)]=\"email\"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label fixed>Password</ion-label>\n            <ion-input type=\"password\" [(ngModel)]=\"password\"></ion-input>\n          </ion-item>\n\n        </ion-list>\n\n        <ion-grid>\n          <ion-row>\n            <ion-col width-50>\n              <button ion-button block (click)=\"register()\">Register</button>\n            </ion-col>\n            <ion-col width-50>\n              <button ion-button block (click)=\"login()\">Login</button>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n\n      </div>\n\n      <div *ngIf=\"auth.isAuthenticated()\">\n\n        <h4>\n          User Profile\n        </h4>\n\n        <ion-list *ngIf=\"auth.isAuthenticated()\">\n\n          <ion-item>\n            <ion-label fixed>Name</ion-label>\n            <ion-input class=\"right\" type=\"text\" [(ngModel)]=\"name\"></ion-input>\n          </ion-item>\n\n          <ion-item>\n            <ion-label>Birthday</ion-label>\n            <ion-datetime displayFormat=\"MM/DD/YYYY\" [(ngModel)]=\"birthday\"></ion-datetime>\n          </ion-item>\n\n        </ion-list>\n\n        <ion-grid>\n          <ion-row>\n            <ion-col width-50>\n              <button ion-button color=\"secondary\" block (click)=\"save()\">Save</button>\n            </ion-col>\n            <ion-col width-50>\n              <button ion-button color=\"dark\" block (click)=\"logout()\">Logout</button>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n\n      </div>\n\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController, LoadingController, ToastController } from 'ionic-angular';\n    import { Auth, User, UserDetails, IDetailedError } from '@ionic/cloud-angular';\n\n    @Component({\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      public email: string = \"\";\n      public password: string = \"\";\n      public name: string = \"\";\n      public birthday: string = \"\";\n\n      constructor(public navCtrl: NavController, public auth: Auth, public user: User, public loadingCtrl: LoadingController, public toastCtrl: ToastController) {\n        this.initProfile();\n      }\n\n      private initProfile() {\n        if (this.auth.isAuthenticated()) {\n          this.name = this.user.get('name', '');\n          this.birthday = this.user.get('birthday', '');\n        }\n      }\n\n      register() {\n        let details: UserDetails = {'email': this.email, 'password': this.password};\n\n        let loader = this.loadingCtrl.create({\n          content: \"Registering user...\"\n        });\n        loader.present();    \n\n        this.auth.signup(details).then(() => {\n          console.log('User is now registered');\n          console.log(this.user);\n          loader.dismiss();\n          return this.auth.login('basic', {'email': this.email, 'password': this.password});\n\n        }, (err: IDetailedError<string[]>) => {\n          loader.dismiss();\n\n          for (let e of err.details) {\n            if (e === 'conflict_email') {\n              alert('Email already exists.');\n            } else {\n              alert('Error creating user.');\n            }\n          }\n        });\n      }\n\n      login() {\n        let details: UserDetails = {'email': this.email, 'password': this.password};\n\n        let loader = this.loadingCtrl.create({\n          content: \"Logging in user...\"\n        });\n        loader.present();    \n\n        this.auth.login('basic', details).then((data) => {\n          console.log('Finished login');\n          this.initProfile();\n\n          loader.dismiss();\n\n          console.log(data);\n          console.log(this.user);\n        }, (err) => {\n          loader.dismiss();\n          alert('Login Error');\n        } );    \n      }\n\n      save() {\n        let toast = this.toastCtrl.create({\n          message: 'User profile was saved successfully',\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n\n        this.user.set('name', this.name);\n        this.user.set('birthday', this.birthday);\n        this.user.save();\n      }\n\n      logout() {\n        this.auth.logout();\n        this.email = '';\n        this.password = '';\n        this.name = '';\n        this.birthday = '';\n      }\n\n    }\n    ```", "```js\n    .home-page {\n      ion-input.right > input {\n        text-align: right;\n      }\n    }\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nthis.auth.signup(details).then(() => {\n  console.log('User is now registered');\n  console.log(this.user);\n  loader.dismiss();\n  return this.auth.login('basic', {'email': this.email, 'password': this.password});\n}\n```", "```js\nlet loader = this.loadingCtrl.create({\n  content: \"Registering user...\"\n});\nloader.present();  \n```", "```js\nsave() {\n  let toast = this.toastCtrl.create({\n    message: 'User profile was saved successfully',\n    position: 'bottom',\n    duration: 3000\n  });\n  toast.present();\n\n  this.user.set('name', this.name);\n  this.user.set('birthday', this.birthday);\n  this.user.save();\n}\n```", "```js\n    $ ionic start MyiOSPush blank --v2\n    $ cd MyiOSPush\n\n    ```", "```js\n    $ npm install @ionic/cloud-angular --save\n\n    ```", "```js\n    $ ionic io init\n\n    ```", "```js\n    $ cordova plugin add phonegap-plugin-push --variable SENDER_ID=12341234 --save\n\n    ```", "```js\n    {\n      \"name\": \"MyiOSPush\",\n      \"app_id\": \"00f293c4\",\n      \"v2\": true,\n      \"typescript\": true\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { CloudSettings, CloudModule } from '@ionic/cloud-angular';\n    import { MyApp } from './app.component';\t\n    import { HomePage } from '../pages/home/home';\n\n    const cloudSettings: CloudSettings = {\n      'core': {\n        'app_id': '00f293c4'\n      },\n      'push': {\n        'sender_id': 'SENDER_ID',\n        'pluginConfig': {\n          'ios': {\n            'badge': true,\n            'sound': true\n          },\n          'android': {\n            'iconColor': '#343434'\n          }\n        }\n      }\n    };\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp),\n        CloudModule.forRoot(cloudSettings)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Push Notification\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n\n      <code class=\"center\">{{ pushToken }}</code>\n      <button ion-button block [disabled]=\"clicked\" [hidden]=\"pushToken\" (click)=\"registerPush()\">\n        <span [hidden]=\"clicked\">Register Push</span>\n        <span [hidden]=\"!clicked\">Registering...</span>\n      </button>\n\n      <h2 class=\"big-square\" *ngIf=\"!pushToken\">\n        You have no message\n      </h2>\n\n      <h3 class=\"sub-title\" *ngIf=\"pushToken\">\n        Your messages\n      </h3>\n\n      <ion-card *ngFor=\"let msg of messages\">\n        <ion-card-header>\n          {{ msg.title }}\n        </ion-card-header>\n        <ion-card-content>\n          {{ msg.text }}\n        </ion-card-content>\n      </ion-card>  \n    </ion-content>\n    ```", "```js\n    import { Component, ApplicationRef } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { Push, PushToken } from '@ionic/cloud-angular';\n\n    @Component({\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      public push: any;\n      public pushToken: string;\n      public messages = [];\n      public clicked: Boolean = false;\n      constructor(public navCtrl: NavController, push: Push, private applicationRef: ApplicationRef) {\n        this.push = push;\n      }\n\n      private processPush(msg, that) {\n        console.log('Push notification message received');\n        console.log(msg);\n        this.messages.push({\n          title: msg.title,\n          text: msg.text\n        })\n        this.applicationRef.tick();\n      }\n\n      registerPush() {\n        this.clicked = true;\n\n        this.push.register().then((t: PushToken) => {\n          return this.push.saveToken(t);\n        }).then((t: PushToken) => {\n\n          this.push.rx.notification().subscribe(msg => this.processPush(msg, this));\n\n          console.log('Token saved:', t.token);\n          this.pushToken = t.token;\n        }, (err) => {\n          alert('Token error');\n          console.log(err);\n        });\n\n      }  \n    }\n    ```", "```js\n    .home-page {\n      .center {\n        text-align: center;\n      }\n\n      h2.big-square {\n        text-align: center;\n        padding: 50px;\n        color: #D91E18;\n        background: #F9BF3B;\n      }\n\n      h3.sub-title {\n        text-align: center;\n        padding: 10px;\n        color: #446CB3;\n        background: #E4F1FE;\n      }\n\n      ion-card ion-card-header {\n        padding: 10px 16px;\n        background: #F9690E;\n        color: white;\n      }\n\n      ion-card ion-card-header + ion-card-content, ion-card .item + ion-card-content {\n        padding-top: 16px;\n      }\n    }\n    ```", "```js\n    $ ionic run ios --device\n\n    ```", "```js\nimport { provideCloud, CloudSettings } from '@ionic/cloud-angular';\n```", "```js\nconst cloudSettings: CloudSettings = {\n  'core': {\n    'app_id': '00f293c4'\n  },\n  'push': {\n    'sender_id': 'SENDER_ID',\n    'pluginConfig': {\n      'ios': {\n        'badge': true,\n        'sound': true\n      },\n      'android': {\n        'iconColor': '#343434'\n      }\n    }\n  }\n};\n```", "```js\nCloudModule.forRoot(cloudSettings)\n```", "```js\n<code class=\"center\">{{ pushToken }}</code>\n<button ion-button block [disabled]=\"clicked\" [hidden]=\"pushToken\" (click)=\"registerPush()\">\n  <span [hidden]=\"clicked\">Register Push</span>\n  <span [hidden]=\"!clicked\">Registering...</span>\n</button>\n```", "```js\n<ion-card *ngFor=\"let msg of messages\">\n  <ion-card-header>\n    {{ msg.title }}\n  </ion-card-header>\n  <ion-card-content>\n    {{ msg.text }}\n  </ion-card-content>\n</ion-card>  \n```", "```js\nimport { Component, ApplicationRef } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Push, PushToken } from '@ionic/cloud-angular';\nThe registerPush() method is the key to acquire the PushToken from Ionic Cloud, as shown:\nregisterPush() {\n  this.clicked = true;\n\n  this.push.register().then((t: PushToken) => {\n    return this.push.saveToken(t);\n  }).then((t: PushToken) => {\n\n    this.push.rx.notification().subscribe(msg => this.processPush(msg, this));\n\n    console.log('Token saved:', t.token);\n    this.pushToken = t.token;\n  }, (err) => {\n    alert('Token error');\n    console.log(err);\n  });\n}  \n```", "```js\nthis.push.rx.notification().subscribe()\n```", "```js\nprivate processPush(msg, that) {\n  console.log('Push notification message received');\n  console.log(msg);\n  this.messages.push({\n    title: msg.title,\n    text: msg.text\n  })\n  this.applicationRef.tick();\n}\n```", "```js\n    $ ionic start MyAndroidPush blank --v2\n    $ cd MyAndroidPush\n\n    ```", "```js\n    $ npm install @ionic/cloud-angular --save\n\n    ```", "```js\n    $ ionic io init\n\n    ```", "```js\n    $ cordova plugin add phonegap-plugin-push --variable SENDER_ID=749277510481 --save\n\n    ```", "```js\n    {\n      \"name\": \"MyAndroidPush\",\n      \"app_id\": \"e546b9f6\",\n      \"v2\": true,\n      \"typescript\": true\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n\n    import { CloudSettings, CloudModule } from '@ionic/cloud-angular';\n\n    import { HomePage } from '../pages/home/home';\n\n    const cloudSettings: CloudSettings = {\n      'core': {\n        'app_id': 'e546b9f6'\n      },\n      'push': {\n        'sender_id': '749277510481',\n        'pluginConfig': {\n          'ios': {\n            'badge': true,\n            'sound': true\n          },\n          'android': {\n            'iconColor': '#343434'\n          }\n        }\n      }\n    };\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp),\n        CloudModule.forRoot(cloudSettings)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Push Notification\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n\n      <code class=\"center\">{{ pushToken }}</code>\n      <button ion-button block [disabled]=\"clicked\" [hidden]=\"pushToken\" (click)=\"registerPush()\">\n        <span [hidden]=\"clicked\">Register Push</span>\n        <span [hidden]=\"!clicked\">Registering...</span>\n      </button>\n\n      <h2 class=\"big-square\" *ngIf=\"!pushToken\">\n        You have no message\n      </h2>\n\n      <h3 class=\"sub-title\" *ngIf=\"pushToken\">\n        Your messages\n      </h3>\n\n      <ion-card *ngFor=\"let msg of messages\">\n        <ion-card-header>\n          {{ msg.title }}\n        </ion-card-header>\n        <ion-card-content>\n          {{ msg.text }}\n        </ion-card-content>\n      </ion-card>  \n    </ion-content>\n    ```", "```js\n    import { Component, ApplicationRef } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { Push, PushToken } from '@ionic/cloud-angular';\n\n    @Component({\n      templateUrl: home.html'\n    })\n    export class HomePage {\n      public push: any;\n      public pushToken: string;\n      public messages = [];\n      public clicked: Boolean = false;\n      constructor(public navCtrl: NavController, push: Push, private applicationRef: ApplicationRef) {\n        this.push = push;\n      }\n\n      private processPush(msg, that) {\n        console.log('Push notification message received');\n        console.log(msg);\n        this.messages.push({\n          title: msg.title,\n          text: msg.text\n        })\n        this.applicationRef.tick();\n      }\n\n      registerPush() {\n        this.clicked = true;\n\n        this.push.register().then((t: PushToken) => {\n          return this.push.saveToken(t);\n        }).then((t: PushToken) => {\n\n          this.push.rx.notification().subscribe(msg => this.processPush(msg, this));\n\n          console.log('Token saved:', t.token);\n          this.pushToken = t.token;\n        }, (err) => {\n          alert('Token error');\n          console.log(err);\n        });\n\n      }  \n    }\n    ```", "```js\n    .home-page {\n      .center {\n        text-align: center;\n      }\n\n      h2.big-square {\n        text-align: center;\n        padding: 50px;\n        color: #D91E18;\n        background: #F9BF3B;\n      }\n\n      h3.sub-title {\n        text-align: center;\n        padding: 10px;\n        color: #446CB3;\n        background: #E4F1FE;\n      }\n\n      ion-card ion-card-header {\n        padding: 10px 16px;\n        background: #F9690E;\n        color: white;\n      }\n\n      ion-card ion-card-header + ion-card-content, ion-card .item + ion-card-content {\n        padding-top: 16px;\n      }\n    }\n    ```", "```js\n    $ keytool -genkey -v -keystore MyAndroidPushKey.keystore -alias MyAndroidPushKey -keyalg RSA -keysize 2048 -validity 10000\n\n    ```", "```js\n    Enter keystore password:\n    Re-enter new password:\n    What is your first and last name?\n     [Unknown]:  Hoc Phan\n    What is the name of your organizational unit?\n     [Unknown]:\n    What is the name of your organization?\n     [Unknown]:\n    What is the name of your City or Locality?\n     [Unknown]:\n    What is the name of your State or Province?\n     [Unknown]:\n    What is the two-letter country code for this unit?\n     [Unknown]:\n    Is CN=Hoc Phan, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?\n     [no]:  yes\n\n    Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 10,000 days\n     for: CN=Hoc Phan, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown\n    Enter key password for <MyAndroidPushKey>\n     (RETURN if same as keystore password):\n    [Storing MyAndroidPushKey.keystore]\n\n    ```", "```js\n    $ ionic emulate android\n\n    ```"]