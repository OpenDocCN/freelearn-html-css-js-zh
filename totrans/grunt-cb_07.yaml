- en: Chapter 7. Deploying to the End User
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章. 部署到最终用户
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Deploying to Rackspace Cloud Files
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署到 Rackspace Cloud Files
- en: Deploying to AWS S3
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署到 AWS S3
- en: Deploying over FTP
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 FTP 部署
- en: Deploying over SFTP
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 SFTP 部署
- en: Deploying to GitHub Pages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署到 GitHub Pages
- en: Invalidating an AWS CloudFront distribution
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使 AWS CloudFront 分发无效
- en: Running commands over SSH
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 SSH 运行命令
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Once our web application is built and its assets are optimized for optimal delivery
    and consumption, it's time to make it available to our intended audience. This
    primarily involves transferring the assets that make up the application to some
    form of file hosting system that is dedicated to the delivery of static content
    over the Internet.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的网络应用程序构建完成，并且其资产已优化以实现最佳交付和消费，就是时候将其提供给我们的目标受众了。这主要涉及将构成应用程序的资产传输到某种形式的文件托管系统，该系统专门用于通过互联网交付静态内容。
- en: The primary points of focus in deploying the assets of a web application to
    the Internet are availability, speed, and service integration. Assets should always
    be available from anywhere in the world, be delivered as fast as possible, and
    the host system should allow us to easily upload and manage our content.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 将网络应用程序的资产部署到互联网的主要关注点是可用性、速度和服务集成。资产应始终可以从世界任何地方访问，尽可能快地交付，并且托管系统应允许我们轻松上传和管理我们的内容。
- en: Deploying to Rackspace Cloud Files
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到 Rackspace Cloud Files
- en: In this recipe, we'll make use of the `cloudfiles (0.3.0)` plugin to upload
    files to a **Rackspace Cloud Files** container.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将使用 `cloudfiles (0.3.0)` 插件将文件上传到 **Rackspace Cloud Files** 容器。
- en: The Cloud Files service has the added benefit of providing a **Content Delivery
    Network** (**CDN**) service to all content hosted on it, by default.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Files 服务默认提供一项附加好处，即为它托管的所有内容提供 **内容分发网络** (**CDN**) 服务。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用我们在 [第 1 章](part0015.xhtml#aid-E9OE1 "第 1 章. 使用 Grunt 入门") 中 *在项目中安装
    Grunt* 菜单创建的基本项目结构。如果您还不熟悉其内容，请务必参考它。
- en: The following example will also require a **Rackspace Cloud** account with an
    API key defined. We'll also need to create a Cloud Files container named `myapp`
    and configure it to host a **static website**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例还需要一个带有 API 密钥定义的 **Rackspace Cloud** 账户。我们还需要创建一个名为 `myapp` 的 Cloud Files
    容器，并将其配置为托管一个 **静态网站**。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for more information on configuring a Cloud Files
    container to host a static website:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下 URL 获取有关配置 Cloud Files 容器以托管静态网站的更多信息：
- en: '[http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html](http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html](http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html)'
- en: How to do it...
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating a simple HTML document and a task
    that uploads it to a Cloud Files container:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将引导我们创建一个简单的 HTML 文档和一个将其上传到 Cloud Files 容器的任务：
- en: We'll start by installing the package that contains the `cloudfiles` plugin,
    as per the instructions provided in the *Installing a plugin* recipe in [Chapter
    1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with Grunt"), *Getting
    Started with Grunt*.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照 [第 1 章](part0015.xhtml#aid-E9OE1 "第 1 章. 使用 Grunt 入门") 中 *安装插件* 菜单提供的说明，安装包含
    `cloudfiles` 插件的包，*使用 Grunt 入门*。
- en: 'Next, we''ll create a simple HTML document called `index.html` in the project
    directory, and provide it with the following contents:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在项目目录中创建一个简单的 HTML 文档，名为 `index.html`，并为其提供以下内容：
- en: '[PRE0]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we''ll add the following `cloudfiles` task to our configuration, which
    will indicate that we''d like to have the `index.html` file uploaded to the `myapp`
    Cloud Files container:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将向我们的配置中添加以下 `cloudfiles` 任务，这将指示我们希望将 `index.html` 文件上传到 `myapp` Cloud
    Files 容器：
- en: '[PRE1]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `user` and `key` options are filled with placeholder values to indicate
    that you should make use of your own Rackspace Cloud account's username and API
    key.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`user` 和 `key` 选项填充了占位符值，以表明您应该使用您自己的 Rackspace Cloud 账户的用户名和 API 密钥。'
- en: You'll probably want to have the `user` and `key` options stored in a local
    file, as opposed to a shared repository. Refer to the *Importing external data*
    recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with
    Grunt"), *Getting Started with Grunt* for an example of how to import configurations
    from external files. Also, be sure to exclude files that contain access credentials
    from your project's code repository.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可能希望将`user`和`key`选项存储在本地文件中，而不是共享仓库中。请参考[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中关于如何从外部文件导入配置的示例，即*使用Grunt入门*配方。同时，请确保排除包含访问凭证的项目代码库中的文件。
- en: The `region` option is used to indicate the geographical region of the hosted
    Cloud Files container. The desired region is indicated on creation of the container.
    For our example, we created a container in the `LON` region.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`region`选项用于指示托管Cloud Files容器的地理位置区域。所需的区域在创建容器时指定。在我们的示例中，我们在`LON`区域创建了容器。'
- en: 'We can now run the task by using the `grunt cloudfiles` command, which should
    produce output similar to the following:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用`grunt cloudfiles`命令来运行任务，它应该会产生类似于以下内容的输出：
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can now ensure that the file has been uploaded to our container and is accessible
    via the Internet. To do this, we'll need to determine the target domain of the
    container from its settings and navigate to it in our browser. This should look
    something like the following:![How to do it...](img/image00274.jpeg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以确保文件已上传到我们的容器中，并且可以通过互联网访问。为此，我们需要从其设置中确定容器的目标域名，并在浏览器中导航到它。这应该看起来像以下这样：![如何操作...](img/image00274.jpeg)
- en: There's more...
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `cloudfiles` task provides us with several useful options that can be used
    in conjunction with its basic uploading feature. We'll be looking at uploading
    the contents of a directory to a destination directory.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`cloudfiles`任务为我们提供了几个有用的选项，可以与基本上传功能一起使用。我们将查看如何将目录内容上传到目标目录。'
- en: Uploading the contents of a directory
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传目录内容
- en: In case we'd like to upload the contents of a directory, we can make use of
    the standard globbing patterns supported by Grunt in the `src` option. We would,
    however, probably also want to make use of the `stripcomponents` option to remove
    the leading paths from the directory names of the destination files.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想上传目录内容，我们可以在`src`选项中使用Grunt支持的常规通配符模式。然而，我们可能还希望使用`stripcomponents`选项从目标文件的目录名称中删除前导路径。
- en: 'The following example will upload the contents of the `www` directory to the
    `myapp` container, and strip the first path name from the target files when determining
    the destination file names:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例将`www`目录的内容上传到`myapp`容器，并在确定目标文件名时从目标文件中删除第一个路径名：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Uploading to a destination directory
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到目标目录
- en: 'In case we''d like to upload files to a specific destination directory on our
    target container, we can indicate the target directory by using the `dest` option,
    as shown in the following example:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想将文件上传到目标容器上的特定目标目录，我们可以使用`dest`选项来指示目标目录，如下例所示：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Deploying to AWS S3
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到AWS S3
- en: In this recipe, we'll make use of the `aws-s3 (0.12.3)` plugin to upload files
    to an **AWS S3 bucket**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们将使用`aws-s3 (0.12.3)`插件将文件上传到**AWS S3存储桶**。
- en: This service doesn't provide a CDN setup by default, but can be easily integrated
    with **AWS CloudFront** in order to speed up the distribution of the hosted files.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此服务默认不提供CDN设置，但可以轻松与**AWS CloudFront**集成，以加快托管文件的分发速度。
- en: Getting ready
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将使用我们在[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中*在项目中安装Grunt*配方中创建的基本项目结构。如果您还不熟悉其内容，请务必参考它。
- en: In addition to the standard project setup, the following recipe will also require
    the setup of an **AWS user** with an **AWS access key**.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准的项目设置外，此配方还需要设置一个具有**AWS访问密钥**的**AWS用户**。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for details on how to obtain your AWS security credentials:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何获取您的AWS安全凭证的详细信息，请参阅以下URL：
- en: '[http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html)'
- en: A bucket with a name in the `[name].myapp` format will also need to be created,
    with `[name]` being any unique name that you wish to use. The aforementioned user
    should also have full access granted to the created bucket using the **AWS IAM**
    interface.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要创建一个以 `[name].myapp` 格式命名的存储桶，其中 `[name]` 是您希望使用的任何唯一名称。上述用户还应通过 **AWS IAM**
    接口获得对创建的存储桶的完全访问权限。
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for more information on how to grant a user account
    access to an S3 bucket:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何授予用户账户对 S3 存储桶的访问权限的信息，请参阅以下 URL：
- en: '[http://blogs.aws.amazon.com/security/post/Tx3VRSWZ6B3SHAV/Writing-IAM-Policies-How-to-grant-access-to-an-Amazon-S3-bucket](http://blogs.aws.amazon.com/security/post/Tx3VRSWZ6B3SHAV/Writing-IAM-Policies-How-to-grant-access-to-an-Amazon-S3-bucket)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://blogs.aws.amazon.com/security/post/Tx3VRSWZ6B3SHAV/Writing-IAM-Policies-How-to-grant-access-to-an-Amazon-S3-bucket](http://blogs.aws.amazon.com/security/post/Tx3VRSWZ6B3SHAV/Writing-IAM-Policies-How-to-grant-access-to-an-Amazon-S3-bucket)'
- en: In order for the bucket to behave as required, it should also be configured
    for **static website hosting**, and `index.html` should be defined as its **index
    document**.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使存储桶按预期工作，它还应配置为 **静态网站托管**，并且 `index.html` 应定义为它的 **索引文档**。
- en: Tip
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for more information on how to configure an AWS
    S3 bucket for static website hosting:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何配置 AWS S3 存储桶以进行静态网站托管的信息，请参阅以下 URL：
- en: '[http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html)'
- en: How to do it...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating a sample HTML document and configuring
    a task that uploads it to an AWS S3 bucket:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将引导我们创建一个示例 HTML 文档并配置一个任务，将文档上传到 AWS S3 存储桶：
- en: We'll start by installing the package that contains the `aws-s3` plugin, as
    per the instructions provided in the *Installing a plugin* recipe in [Chapter
    1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with Grunt"), *Getting
    Started with Grunt*.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照 [第 1 章](part0015.xhtml#aid-E9OE1 "第 1 章。使用 Grunt 入门") 中 *安装插件* 菜单提供的说明，安装包含
    `aws-s3` 插件的包，该菜单位于 *使用 Grunt 入门*。
- en: 'Next, we''ll create a simple HTML document called `index.html` in the project
    directory, and provide it with the following contents:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在项目目录中创建一个名为 `index.html` 的简单 HTML 文档，并为其提供以下内容：
- en: '[PRE5]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, we''ll add the following `aws_s3` task to our configuration, which indicates
    that we''d like to upload the `index.html` file to the `gruntbook.myapp` bucket:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加以下 `aws_s3` 任务到我们的配置中，该任务表示我们希望将 `index.html` 文件上传到 `gruntbook.myapp`
    存储桶：
- en: '[PRE6]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `accessKeyId` and `secretAccessKey` options are filled with placeholder
    values to indicate that you should make use of your own AWS access credentials.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`accessKeyId` 和 `secretAccessKey` 选项填充了占位符值，以表明您应使用自己的 AWS 访问凭证。'
- en: The `accessKeyId` option should be set to an **access key ID**, generated for
    your user using the **AWS Identity and Access Management** (**IAM**) console.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`accessKeyId` 选项应设置为为您的用户生成的 **访问密钥 ID**，该密钥 ID 是通过 **AWS 身份和访问管理**（**IAM**）控制台生成的。'
- en: The `secretAccessKey` option should be set to the **secret access key** that
    was generated for the specific access key ID that you specified in the `accessKeyId`
    option. Note that the secret access key is only displayed on creation of the access
    key ID, so you won't be able to find it in the IAM console if you didn't save
    it the first time.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`secretAccessKey` 选项应设置为为在 `accessKeyId` 选项中指定的特定访问密钥 ID 生成的 **秘密访问密钥**。请注意，秘密访问密钥仅在创建访问密钥
    ID 时显示，因此如果您第一次没有保存它，您将无法在 IAM 控制台中找到它。'
- en: You'll probably want to have the `accessKeyId` and `secretAccessKey` options
    stored in a local file, as opposed to a shared repository. Refer to the *Importing
    external data* recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting
    Started with Grunt"), *Getting Started with Grunt* for an example of how to import
    configurations from external files. Also, be sure to exclude files that contain
    access credentials from your project's code repository.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能希望将 `accessKeyId` 和 `secretAccessKey` 选项存储在本地文件中，而不是共享存储库中。请参阅 [第一章](part0015.xhtml#aid-E9OE1
    "第一章。开始使用 Grunt") 的 *导入外部数据* 菜谱，*开始使用 Grunt*，了解如何从外部文件导入配置的示例。此外，请确保将包含访问凭证的文件从您的项目代码存储库中排除。
- en: The `region` option is used to indicate the geographical region of the hosted
    bucket. The desired region is indicated on creation of the bucket. For our example,
    we created a container in the `eu-west-1` region.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`region` 选项用于指示托管存储桶的地理位置。所需的区域在创建存储桶时指定。在我们的示例中，我们在 `eu-west-1` 区域创建了一个容器。'
- en: 'Note that the files configuration for this task supports all the standard Grunt
    options. You can read more about them at the following URL:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，此任务的文件配置支持所有标准的 Grunt 选项。您可以在以下网址了解更多信息：
- en: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
- en: 'We can now run the task by using the `grunt aws_s3` command, which should produce
    output similar to the following:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用 `grunt aws_s3` 命令来运行任务，这应该会产生类似于以下输出的结果：
- en: '[PRE7]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can now ensure that the file has been uploaded to our container and is accessible
    via the Internet. To do this, we'll need to determine the endpoint of the bucket
    from its properties section and navigate to it in our browser. This should look
    something like the following:![How to do it...](img/image00275.jpeg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以确保文件已上传到我们的容器中，并且可以通过互联网访问。为此，我们需要从其属性部分确定存储桶的端点，并在浏览器中导航到它。这应该看起来像以下这样：![如何操作...](img/image00275.jpeg)
- en: There's more...
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `aws_s3` task provides us with several useful options that can be used in
    conjunction with its uploading feature. We'll look at how to specify the accessibility
    of uploaded files and enable concurrent operations.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`aws_s3` 任务为我们提供了一些有用的选项，可以与它的上传功能一起使用。我们将探讨如何指定上传文件的访问权限并启用并发操作。'
- en: Specifying the accessibility of uploaded files
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指定上传文件的访问权限
- en: 'Every file uploaded to an AWS S3 bucket has a set of access permissions that
    indicate who has access to it. If we''d like to indicate a specific set of permissions,
    we can do so by using the `access` option. The following example sets the `access`
    option to `private`, indicating that all files uploaded should only be accessible
    to the user account that was used during the upload:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每个上传到 AWS S3 存储桶的文件都有一组访问权限，指示谁可以访问它。如果我们想指定一组特定的权限，可以通过使用 `access` 选项来实现。以下示例将
    `access` 选项设置为 `private`，表示所有上传的文件只能由上传过程中使用的用户账户访问：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'A list of the possible values for the access option is in the documentation
    for the AWS `putObject` operation at the following URL (look under the ACL parameter):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 访问选项的可能值列表可以在以下 AWS `putObject` 操作的文档中找到（在 ACL 参数下查看）：
- en: '[http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property](http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property](http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property)'
- en: Enabling concurrent uploads
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用并发上传
- en: 'The default behavior for the `aws_s3` task is to complete uploads, one after
    another. If we''d like to perform uploads in parallel, we can do so by making
    use of the `uploadConcurrency` option. In the following example, we indicate that
    we''d like to have a maximum of `3` files uploaded simultaneously:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`aws_s3` 任务的默认行为是依次完成上传。如果我们想并行执行上传，可以通过使用 `uploadConcurrency` 选项来实现。在以下示例中，我们表明我们希望同时上传的最大文件数为
    `3`：'
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Tip
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The previous example also demonstrates the configuration involved in recursively
    uploading the contents of an entire directory.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例还演示了递归上传整个目录内容的配置。
- en: Deploying over FTP
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 FTP 部署
- en: In this recipe, we will make use of the `ftp-push (0.3.2)` plugin to upload
    files to a hosting server, using the **File Transfer Protocol** (**FTP**).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将使用 `ftp-push (0.3.2)` 插件将文件上传到托管服务器，使用 **文件传输协议** (**FTP**)。
- en: FTP has been around since the early days of the Internet and is still in abundant
    use. As its name implies, it provides a way to transfer files over the Internet
    and as such, has been the staple for the deployment of resources to web servers
    since its inception.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: FTP自互联网早期以来就存在，并且仍然被广泛使用。正如其名称所暗示的，它提供了一种在互联网上传输文件的方式，因此，自其诞生以来，它一直是部署资源到Web服务器的基石。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用我们在[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中创建的基本项目结构，即[在项目中安装Grunt](part0015.xhtml#aid-E9OE1
    "第1章。使用Grunt入门")配方中创建的结构。如果您还不熟悉其内容，请务必参考它。
- en: In addition to the standard project setup, the following recipe will also require
    an existing user account on the targeted FTP-enabled server. Their credentials
    are usually provided by the hosting service or the systems administrator in charge
    of maintaining the server in question.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准的项目设置外，以下配方还需要在目标FTP启用服务器上现有的用户账户。他们的凭证通常由托管服务提供商或负责维护相关服务器的系统管理员提供。
- en: How to do it...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating a simple HTML document and configuring
    a task that uploads it to a server using FTP:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将引导我们创建一个简单的HTML文档，并配置一个任务，使用FTP将其上传到服务器：
- en: We'll start by installing the package that contains the `ftp-push` plugin, as
    per the instructions provided in the *Installing a plugin* recipe in [Chapter
    1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with Grunt"), *Getting
    Started with Grunt*.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中[安装插件](part0015.xhtml#aid-E9OE1
    "第1章。使用Grunt入门")配方中提供的说明，安装包含`ftp-push`插件的包。
- en: 'Next, we''ll create a simple HTML document called `index.html` in the project
    directory, and provide it with the following contents:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在项目目录中创建一个简单的HTML文档，命名为`index.html`，并为其提供以下内容：
- en: '[PRE10]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, we''ll add the following `ftp_push` task to our configuration and indicate
    that we''d like it to upload the `index.html` file to our hosting server:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加以下`ftp_push`任务到我们的配置中，并指出我们希望它将`index.html`文件上传到我们的托管服务器：
- en: '[PRE11]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `username`, `password`, and `host` options are filled with placeholder values
    to indicate that you should make use of your own specific access credentials and
    hosting server address.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`username`、`password`和`host`选项填写了占位符值，以表明您应该使用自己的特定访问凭证和托管服务器地址。'
- en: You'll probably want to have the `username` and `password` options stored in
    a local file, as opposed to a shared repository. Refer to the *Importing external
    data* recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started
    with Grunt"), *Getting Started with Grunt* for an example of how to import configurations
    from external files. Also, keep in mind that you should exclude files that contain
    access credentials from your project's code repository.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能希望将`username`和`password`选项存储在本地文件中，而不是共享存储库中。请参考[第1章](part0015.xhtml#aid-E9OE1
    "第1章。使用Grunt入门")中[导入外部数据](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")配方中的示例，了解如何从外部文件导入配置。同时，请注意，您应该从项目的代码存储库中排除包含访问凭证的文件。
- en: The `host` option is used to specify the Internet address of the server that
    you'd like to upload files to. If you are not sure what this value should be,
    this type of information can usually be provided to you by the hosting provider
    or the systems administrator in charge of maintaining the server in question.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`host`选项用于指定您想要上传文件的互联网地址。如果您不确定这个值应该是多少，此类信息通常可以由托管提供商或负责维护相关服务器的系统管理员提供。'
- en: The `dest` option is required to indicate the destination directory for the
    files that we'll be uploading. For our example, we'll indicate that files should
    be uploaded to the `www` directory on the hosting server.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`dest`选项是必需的，用于指示我们将上传的文件的目标目录。在我们的例子中，我们将指示文件应该上传到托管服务器上的`www`目录。'
- en: 'Note that the files configuration for this task supports all the standard Grunt
    options. You can read more about them at the following URL:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，此任务的文件配置支持所有标准的Grunt选项。您可以在以下URL中了解更多信息：
- en: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
- en: 'We can now run the task by using the `grunt ftp_push` command, which should
    produce output similar to the following:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用 `grunt ftp_push` 命令来运行此任务，它应该产生类似于以下内容的输出：
- en: '[PRE12]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Tip
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that the `ftp_push` task cannot automatically create the destination directory,
    so the `www` directory needs to exist on the root of the FTP server before running
    this task.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，`ftp_push` 任务不能自动创建目标目录，因此在运行此任务之前，FTP 服务器的根目录上需要存在 `www` 目录。
- en: Our `index.html` file should now be present on our hosting server and, if correctly
    configured, should be accessible via the Internet. Configuring a domain name to
    point to a site hosted in this fashion is beyond the scope of this book.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的服务器上现在应该已经有了 `index.html` 文件，并且如果配置正确，应该可以通过互联网访问。将域名配置为指向以这种方式托管站点的操作超出了本书的范围。
- en: Deploying over SFTP
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 SFTP 部署
- en: In this recipe, we'll make use of the `sftp` task, which is provided by the
    `ssh (0.12.2)` plugin to upload files to a hosting server, using the **SSH File
    Transfer Protocol** (**SFTP**).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将使用由 `ssh (0.12.2)` 插件提供的 `sftp` 任务，通过 **SSH 文件传输协议**（**SFTP**）将文件上传到托管服务器。
- en: The SFTP provides the same functionality as the regular FTP that was discussed
    in the previous recipe, but with benefits from an added layer of security by making
    use of the **Secure Shell** (**SSH**) network protocol.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: SFTP 提供了与之前菜谱中讨论的常规 FTP 相同的功能，但通过利用 **安全壳**（**SSH**）网络协议的附加安全层提供了额外的安全优势。
- en: Getting ready
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用我们在 [第 1 章](part0015.xhtml#aid-E9OE1 "第 1 章。使用 Grunt 开始") 中创建的基本项目结构，即
    *在项目中安装 Grunt* 菜谱，*使用 Grunt 开始*。如果您还不熟悉其内容，请务必参考它。
- en: In addition to the standard project setup, the following recipe will also require
    an existing user account on the targeted SSH-enabled server. These credentials
    are usually provided by the hosting service or the systems administrator in charge
    of maintaining the targeted server.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准项目设置外，以下菜谱还需要在目标启用了 SSH 的服务器上现有的用户账户。这些凭证通常由托管服务提供商或负责维护目标服务器的系统管理员提供。
- en: How to do it...
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating a simple HTML document and configuring
    a task that uploads it to the server using SFTP:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将引导我们创建一个简单的 HTML 文档，并配置一个任务，使用 SFTP 将其上传到服务器：
- en: We'll start by installing the package that contains the `ssh` plugin, as per
    the instructions provided in the `Installing a plugin` recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt").
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照 `Installing a plugin` 菜谱中提供的说明安装包含 `ssh` 插件的包。
- en: 'Next, we''ll create a simple HTML document called `index.html` in the project
    directory, and providing it with the following contents:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在项目目录中创建一个名为 `index.html` 的简单 HTML 文档，并为其提供以下内容：
- en: '[PRE13]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, we''ll add the following `sftp` task to our configuration, which indicates
    that we''d like to have the `index.html` file uploaded to a specific host that
    supports SFTP:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加以下 `sftp` 任务到我们的配置中，这表明我们希望将 `index.html` 文件上传到支持 SFTP 的特定主机：
- en: '[PRE14]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Tip
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `username`, `password`, and `host` options are filled with placeholder values
    to indicate that you should make use of your own specific access credentials and
    hosting server address.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`username`、`password` 和 `host` 选项填充了占位符值，以表明您应该使用自己的特定访问凭证和托管服务器地址。'
- en: You'll probably want to have the `username` and `password` options stored in
    a local file, as opposed to a shared repository. Refer to the *Importing external
    data* recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started
    with Grunt"), *Getting Started with Grunt*, for an example of how to import configurations
    from external files. Also, keep in mind that you should exclude files that contain
    access credentials from your project's code repository.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能希望将 `username` 和 `password` 选项存储在本地文件中，而不是共享仓库中。请参考 [第 1 章](part0015.xhtml#aid-E9OE1
    "第 1 章。使用 Grunt 开始") 中 *导入外部数据* 菜谱的示例，了解如何从外部文件导入配置。同时，请记住，您应该从项目的代码仓库中排除包含访问凭证的文件。
- en: The `host` option is used to specify the Internet address of the server that
    you'd like to upload files to. If you are not sure what this value should be,
    this type of information can usually be provided to you by the hosting provider
    or the systems administrator in charge of maintaining the server in question.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`host` 选项用于指定您想要上传文件的服务器的互联网地址。如果您不确定这个值应该是多少，此类信息通常可以由托管提供商或负责维护相关服务器的系统管理员提供。'
- en: The `path` option is required to indicate the destination directory for the
    files that we'll be uploading. For our example, we'll indicate that files should
    be uploaded to the `www` directory on the hosting server.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`path` 选项是必需的，用于指定我们将上传的文件的目标目录。在我们的例子中，我们将指示文件应该上传到托管服务器上的 `www` 目录。'
- en: 'Note that the files configuration for this task supports all the standard Grunt
    options. You can read more about them at the following URL:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，此任务的文件配置支持所有标准 Grunt 选项。您可以在以下网址了解更多信息：
- en: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://gruntjs.com/configuring-tasks#files](http://gruntjs.com/configuring-tasks#files)'
- en: 'We can now run the task by using the `grunt sftp` command, which should produce
    output similar to the following:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用 `grunt sftp` 命令来运行任务，它应该产生类似于以下内容的输出：
- en: '[PRE15]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Tip
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that the `sftp` task cannot automatically create the destination directory,
    so the `www` directory needs to exist on the root of the FTP server before running
    this task.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，`sftp` 任务不能自动创建目标目录，因此在运行此任务之前，`www` 目录需要存在于 FTP 服务器的根目录。
- en: Our `index.html` file should now be present on our hosting server and, if correctly
    configured, should be accessible via the Internet. Configuring a domain name to
    point to a site hosted in this fashion is beyond the scope of this book.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的 `index.html` 文件现在应该出现在我们的托管服务器上，如果配置正确，应该可以通过互联网访问。配置域名指向以这种方式托管站点超出了本书的范围。
- en: There's more...
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: The `sftp` task provides us with several useful options that can be used in
    conjunction with its uploading feature. We'll look at how to use a private key
    and passphrase and using an SSH agent.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`sftp` 任务为我们提供了几个有用的选项，可以与它的上传功能一起使用。我们将探讨如何使用私钥和密码短语以及使用 SSH 代理。'
- en: Using a private key and passphrase
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用私钥和密码短语
- en: In case we'd like to make use of a private key and passphrase to access our
    host server, we can do so by using the `privateKey` and `passphrase` options.
    In the following example, we will load our private key from the usual location
    by using the `grunt.file.load` function and provide the passphrase that was used
    to lock it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想使用私钥和密码短语来访问我们的主机服务器，我们可以通过使用 `privateKey` 和 `passphrase` 选项来实现。在下面的例子中，我们将使用
    `grunt.file.load` 函数从常规位置加载我们的私钥，并提供用于锁定它的密码短语。
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Using an SSH agent
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 SSH 代理
- en: If we often make use of SSH to access our servers, we're probably better off
    making use of an **SSH agent** to store our unencrypted private key after unlocking
    it the first time during our session. This will allow us to access all the services
    that make use of our **public key**, without having to enter the passphrase again
    for the duration of our user session.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们经常使用 SSH 访问我们的服务器，我们可能最好在会话期间第一次解锁后使用 **SSH 代理** 来存储我们的未加密私钥。这将允许我们访问所有使用我们的
    **公钥** 的服务，而无需在整个用户会话期间再次输入密码短语。
- en: Tip
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Most Unix-like (this includes OS X) operating systems should have an SSH agent
    installed and running by default, in which case the following example should work
    without any initial steps. A Windows user will have to manually install and configure
    an SSH agent.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数类 Unix（包括 OS X）操作系统应该默认安装并运行 SSH 代理，在这种情况下，以下示例应该无需任何初始步骤即可工作。Windows 用户将需要手动安装和配置
    SSH 代理。
- en: 'The following example makes use of an SSH agent by indicating path to the socket
    file using the `agent` option:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例通过使用 `agent` 选项指定套接字文件路径来使用 SSH 代理：
- en: '[PRE17]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Tip
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Most SSH agent programs that come packaged with operating systems follow the
    convention of providing the socket on which it runs by using the `SSH_AUTH_SOCK`
    environment variable. In our example, we use the standard Node.js `process.env`
    object to retrieve the value of this environment variable.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数操作系统捆绑的 SSH 代理程序遵循使用 `SSH_AUTH_SOCK` 环境变量提供其运行套接字的约定。在我们的例子中，我们使用标准的 Node.js
    `process.env` 对象来检索此环境变量的值。
- en: Deploying to GitHub Pages
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到 GitHub Pages
- en: In this recipe, we'll make use of the `gh-pages (0.10.0)` plugin to publish
    our site to the **GitHub Pages** service.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将使用`gh-pages (0.10.0)`插件将我们的站点发布到**GitHub Pages**服务。
- en: The GitHub Pages service provides a simple way for GitHub users to host static
    sites related to themselves, their organizations, or their projects. At the core
    of this service lies the standard **GitHub** service that provides hosting for
    **Git**-based code repositories.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Pages服务为GitHub用户提供了一种简单的方式来托管与他们自己、他们的组织或他们的项目相关的静态站点。该服务的核心是提供基于**Git**代码仓库托管的**GitHub**标准服务。
- en: Getting ready
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用我们在[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中创建的基本项目结构，即*在项目中安装Grunt*配方中的*使用Grunt入门*。如果您还不熟悉其内容，请务必参考。
- en: In addition to the standard project setup, the following recipe will require
    a GitHub user account that has the appropriate public key (SSH) associated with
    it.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准的项目设置外，以下配方还需要一个具有适当公钥（SSH）关联的GitHub用户账户。
- en: Tip
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Please refer to the following URL for help to create and set up SSH keys for
    your GitHub account:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下URL以获取有关为您的GitHub账户创建和设置SSH密钥的帮助：
- en: '[https://help.github.com/articles/generating-ssh-keys/](https://help.github.com/articles/generating-ssh-keys/)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/generating-ssh-keys/](https://help.github.com/articles/generating-ssh-keys/)'
- en: We'll also need to create a repository called `myapp` on GitHub, clone it, and
    use it as our project folder.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在GitHub上创建一个名为`myapp`的仓库，克隆它，并将其用作我们的项目文件夹。
- en: Tip
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You can read more about how to create and clone a repository on GitHub at the
    following URLs:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下URL中了解更多关于如何在GitHub上创建和克隆仓库的信息：
- en: '[https://help.github.com/articles/creating-a-new-repository/](https://help.github.com/articles/creating-a-new-repository/)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/creating-a-new-repository/](https://help.github.com/articles/creating-a-new-repository/)'
- en: '[https://help.github.com/articles/cloning-a-repository/](https://help.github.com/articles/cloning-a-repository/)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.github.com/articles/cloning-a-repository/](https://help.github.com/articles/cloning-a-repository/)'
- en: How to do it...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating a simple HTML document and configuring
    a task that publishes it to the site of GitHub Pages for our project:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导我们创建一个简单的HTML文档，并配置一个将其发布到GitHub Pages站点上的任务：
- en: We'll start by installing the package that contains the `gh-pages` plugin as
    per the instructions provided in the *Installing a plugin* recipe in [Chapter
    1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with Grunt"), *Getting
    Started with Grunt*.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中*安装插件*配方提供的说明来安装包含`gh-pages`插件的包。
- en: 'Next, we''ll create a simple HTML document called `index.html` in the `www`
    directory, and provide it with the following contents:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在`www`目录下创建一个简单的HTML文档，名为`index.html`，并为其提供以下内容：
- en: '[PRE18]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, we''ll add the following `gh-pages` task to our configuration and indicate
    that we''d like to have the contents of the `www` directory uploaded to our project''s
    repository:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加以下`gh-pages`任务到我们的配置中，并指出我们希望将`www`目录的内容上传到我们的项目仓库：
- en: '[PRE19]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Tip
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `base` option is used to provide the directory that contains our site. In
    the case of our example, we'll use the `www` directory, as that is where we created
    our sample HTML file.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`base`选项用于提供包含我们站点的目录。在我们的例子中，我们将使用`www`目录，因为这是我们创建示例HTML文件的地方。'
- en: The `src` option is used to provide files in the base directory which should
    be transferred to the target repository. For our example, we set it to `**/*`
    to indicate that we'd like to have all files in the base directory transferred.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`src`选项用于提供应传输到目标仓库的基于基本目录的文件。在我们的例子中，我们将其设置为`**/*`，表示我们希望将基本目录中的所有文件传输。'
- en: 'We can now run the task by using the `grunt gh-pages` command, which should
    produce output similar to the following:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用`grunt gh-pages`命令来运行任务，它应该产生类似于以下内容的输出：
- en: '[PRE20]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: We should now be able to view our project site by navigating to the `[name].github.io/myapp`
    domain name that was automatically assigned to our project by GitHub. Doing so
    should look something like the following:![How to do it...](img/image00276.jpeg)
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过导航到GitHub自动分配给我们的项目的`[name].github.io/myapp`域名来查看我们的项目站点。这样做应该看起来像以下这样：![如何操作...](img/image00276.jpeg)
- en: Invalidating an AWS CloudFront distribution
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使AWS CloudFront分发失效
- en: In this recipe, we make use of the `invalidate-cloudfront (0.1.6)` plugin to
    invalidate a AWS CloudFront distribution.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们使用`invalidate-cloudfront (0.1.6)`插件来使AWS CloudFront分发失效。
- en: The AWS CloudFront service provides us with an easy way to distribute the files
    of our websites and applications over a CDN with edge locations all over the world.
    This leads to faster response times for our intended audience, no matter where
    they may be in the world.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudFront服务为我们提供了一个简单的方法，通过全球边缘位置来分发我们的网站和应用程序的文件。这导致我们的目标受众无论在世界任何地方都能获得更快的响应时间。
- en: A side effect of having our file hosted on a CDN is that whenever they are updated
    at the source, the updates may take a while to reflect at the various edge locations,
    potentially keeping critical updates from our audience. AWS CloudFront does, however,
    allow us to indicate that we'd like to refresh the content that is stored on the
    CDN by invalidating a distribution.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们的文件托管在CDN上的副作用是，每当它们在源处更新时，更新可能需要一段时间才能反映在各个边缘位置，这可能会阻止我们的观众获取关键更新。然而，AWS
    CloudFront确实允许我们通过使分发失效来指示我们希望刷新存储在CDN上的内容。
- en: Getting ready
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用我们在[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")“使用Grunt入门”配方中创建的基本项目结构。如果您还不熟悉其内容，请务必参考。
- en: In addition to the standard project setup, the following recipe will also require
    the setup of an AWS user with an AWS access key.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准的项目设置外，此配方还需要设置一个具有AWS访问密钥的AWS用户。
- en: Tip
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for details of how to obtain your AWS access credentials:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何获取您的AWS访问凭证的详细信息，请参阅以下URL：
- en: '[http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html)'
- en: An AWS CloudFront distribution will also need to be created so that we can use
    it in our recipe. For our example, we'll have it distribute the files contained
    in the bucket that we created in the *Deploying to AWS S3* recipe, earlier in
    this chapter.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要创建一个AWS CloudFront分发，以便我们可以在配方中使用它。在我们的示例中，我们将使其分发我们在本章前面“部署到AWS S3”配方中创建的存储桶中的文件。
- en: Tip
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Refer to the following URL for more information on how to create an AWS CloudFront
    distribution:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何创建AWS CloudFront分发的更多信息，请参阅以下URL：
- en: '[http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating.html](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating.html)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating.html](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating.html)'
- en: How to do it...
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating and configuring a task that invalidates
    a specific AWS CloudFront distribution:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导我们创建和配置一个使特定AWS CloudFront分发失效的任务：
- en: We'll start by installing the package that contains the `invalidate-cloudfront`
    plugin, as per the instructions provided in the *Installing a plugin* recipe in
    [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with Grunt"),
    *Getting Started with Grunt*.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")“使用Grunt入门”配方中提供的说明，安装包含`invalidate-cloudfront`插件的包。
- en: 'Now, we''ll add the following `invalidate_cloudfront` task to our configuration
    and indicate that we''d like to have each of the files that can be found in the
    `www` directory refreshed on the CloudFront CDN:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加以下`invalidate_cloudfront`任务到我们的配置中，并指示我们希望刷新在`www`目录中可以找到的每个文件：
- en: '[PRE21]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Tip
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `key` and `secret` options are filled with placeholder values to indicate
    that you should make use of your own specific access credentials.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`key`和`secret`选项填充了占位符值，以表明您应该使用自己的特定访问凭证。'
- en: The `key` option should be set to an **access key ID** that was generated for
    your user, using the AWS IAM console.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`key`选项应设置为为您的用户生成的**访问密钥ID**，使用AWS IAM控制台。'
- en: The `secret` option should be set to the secret access key that was generated
    for the specific access key ID, you specified in the `key` option. Note that the
    secret access key is only displayed on creation of the access key ID, so you won't
    be able to find it in the IAM console if you didn't save it the first time.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`secret`选项应设置为为在`key`选项中指定的特定访问密钥ID生成的秘密访问密钥。请注意，秘密访问密钥仅在创建访问密钥ID时显示，因此如果您第一次没有保存它，您将无法在IAM控制台中找到它。'
- en: You'll probably want to have the `key` and `secret` options stored in a local
    file, as opposed to a shared repository. Refer to the *Importing external data*
    recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started with
    Grunt"), *Getting Started with Grunt* for an example of how to import configurations
    from external files. Also, keep in mind that you should exclude files that contain
    security credentials from your project's code repository.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能希望将`key`和`secret`选项存储在本地文件中，而不是共享存储库中。请参考[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中“导入外部数据”配方，了解如何从外部文件导入配置的示例。同时，请注意，您应该从项目的代码存储库中排除包含安全凭证的文件。
- en: 'We can now run the task by using the `grunt invalidate_cloudfront` command,
    which should produce output similar to the following:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用`grunt invalidate_cloudfront`命令来运行任务，该命令应该产生类似于以下内容的输出：
- en: '[PRE22]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The targeted CloudFront distribution should now be in the process of being invalidated.
    If there are any changes made to the underlying content, it should be reflected
    at all edge locations on the CloudFront CDN within a few minutes.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标CloudFront分发现在应该正在被使无效。如果对底层内容进行了任何更改，它应该在CloudFront CDN的所有边缘位置上反映出来，这通常需要几分钟。
- en: Running commands over SSH
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过SSH运行命令
- en: In this recipe, we'll make use of the `sshexec` task provided by the `ssh (0.12.2)`
    plugin to run commands on a remote server over the SSH network protocol.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将使用`sshexec`任务，该任务由`ssh (0.12.2)`插件提供，通过SSH网络协议在远程服务器上运行命令。
- en: Running commands on a remote server can become a necessity during the deployment
    process, and when we run commands, we'd like be sure that it is being done securely.
    The SSH protocol is the de facto standard to run commands on remote servers, due
    in part to the improved security that it provides by encrypting all data that
    is sent over the network.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署过程中，在远程服务器上运行命令可能成为必需，当我们运行命令时，我们希望确保它是安全进行的。SSH协议是运行远程服务器命令的事实标准，部分原因是它通过加密通过网络发送的所有数据来提供改进的安全性。
- en: Getting ready
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this example, we'll work with the basic project structure that we created
    in the *Installing Grunt on a project* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*. Be sure
    to refer to it if you are not yet familiar with its contents.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用我们在[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中“在项目中安装Grunt”配方中创建的基本项目结构，即*使用Grunt入门*。如果您还不熟悉其内容，请务必参考。
- en: In addition to the standard project setup, the following recipe will also require
    an existing user account on the targeted SSH-enabled server. These credentials
    are usually provided by the hosting service or administrator who maintains the
    targeted server.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准项目设置外，以下配方还需要在目标启用了SSH的服务器上现有的用户账户。这些凭据通常由托管服务或维护目标服务器的管理员提供。
- en: How to do it...
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps take us through creating and configuring a task that will
    run a command that prints the date and time on a remote server:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导我们创建和配置一个任务，该任务将运行一个在远程服务器上打印日期和时间的命令：
- en: We'll start by installing the package that contains the `ssh` plugin, as per
    the instructions provided in the *Installing a plugin* recipe in [Chapter 1](part0015.xhtml#aid-E9OE1
    "Chapter 1. Getting Started with Grunt"), *Getting Started with Grunt*.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将按照[第1章](part0015.xhtml#aid-E9OE1 "第1章。使用Grunt入门")中“安装插件”配方中提供的说明来安装包含`ssh`插件的包。
- en: 'Now, we''ll add the following `sshexec` task to our configuration and set it
    up to print the date and time on our remote server by running the `date` command:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将以下 `sshexec` 任务添加到我们的配置中，并设置它通过运行 `date` 命令在远程服务器上打印日期和时间：
- en: '[PRE23]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Tip
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `username`, `password`, and `host` options are filled with placeholder values
    to indicate that you should make use of your own specific access credentials and
    hosting server.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`username`、`password` 和 `host` 选项填充了占位符值，以表明您应该使用您自己的特定访问凭证和托管服务器。'
- en: You'll probably want to have the `username` and `password` options stored in
    a local file, as opposed to a shared repository. Refer to the *Importing external
    data* recipe of [Chapter 1](part0015.xhtml#aid-E9OE1 "Chapter 1. Getting Started
    with Grunt"), *Getting Started with Grunt* for an example of how to import configurations
    from external files. Also, keep in mind that you should exclude files that contain
    access credentials from your project's code repository.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能希望将 `username` 和 `password` 选项存储在本地文件中，而不是共享存储库中。有关如何从外部文件导入配置的示例，请参阅[第 1
    章](part0015.xhtml#aid-E9OE1 "第 1 章。使用 Grunt 入门")中的 *导入外部数据* 菜谱，*使用 Grunt 入门*。同时，请记住，您应该从项目的代码存储库中排除包含访问凭证的文件。
- en: The `host` option is used to specify the Internet address of the server that
    you'd like to upload files to. If you are not sure what this value should be,
    this type of information can usually be provided to you by the hosting provider
    or the systems administrator in charge of maintaining the server in question.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 `host` 选项来指定您想要上传文件的服务器的 Internet 地址。如果您不确定这个值应该是多少，此类信息通常可以由托管提供商或负责维护相关服务器的系统管理员提供。
- en: 'We can now run the task by using the `grunt sshexec` command, which should
    produce output similar to the following:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过使用 `grunt sshexec` 命令来运行此任务，它应该产生类似于以下内容的输出：
- en: '[PRE24]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: If we can see a date and time returned after running the command, we have successfully
    run a command on the remote server.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们在运行命令后看到返回的日期和时间，那么我们已经成功在远程服务器上运行了命令。
- en: There's more...
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `sshexec` task provides us with several useful options that can be used
    in conjunction with its uploading feature. We'll look at how to use a private
    key and passphrase and using an SSH agent.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`sshexec` 任务为我们提供了几个有用的选项，这些选项可以与其上传功能一起使用。我们将探讨如何使用私钥和密码短语以及使用 SSH 代理。'
- en: Using a private key and passphrase
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用私钥和密码短语
- en: In case we'd like to make use of a private key and passphrase to access our
    host server, we can do so using the `privateKey` and `passphrase` options. In
    the following example, we will load our private key from the usual location by
    using the `grunt.file.load` function and provide the passphrase that was used
    to lock it.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想使用私钥和密码短语来访问我们的主机服务器，我们可以通过使用 `privateKey` 和 `passphrase` 选项来实现。在以下示例中，我们将使用
    `grunt.file.load` 函数从常规位置加载我们的私钥，并提供用于锁定它的密码短语。
- en: '[PRE25]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Using an SSH agent
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 SSH 代理
- en: If we often make use of SSH to access our servers, we're probably better off
    making use of an SSH agent to store our unencrypted private key after unlocking
    it the first time during our session. This will allow us to access all the services
    that make use of our public key, without having to enter the passphrase again
    for the duration of our user session.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们经常使用 SSH 访问我们的服务器，我们最好在会话期间第一次解锁后使用 SSH 代理来存储我们的未加密私钥。这将允许我们访问所有使用我们的公钥的服务，而无需在整个用户会话期间再次输入密码短语。
- en: Tip
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Most *nix (this includes OS X) operating systems should have an SSH agent installed
    and running by default, in which case the following example should work without
    any initial steps. A Windows user will have to manually install and configure
    an SSH agent.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 *nix（这包括 OS X）操作系统应该默认安装并运行 SSH 代理，在这种情况下，以下示例应该无需任何初始步骤即可工作。Windows 用户将需要手动安装和配置
    SSH 代理。
- en: 'The following example makes use of an SSH agent by indicating the socket that
    runs with the `agent` option:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例通过指定带有 `agent` 选项的套接字来使用 SSH 代理：
- en: '[PRE26]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Tip
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Most SSH agent programs that come packaged with operating systems follow the
    convention of providing the socket on which it runs, using the `SSH_AUTH_SOCK`
    environment variable. In our example, we made use of the standard Node.js `process.env`
    object to retrieve the value of this environment variable.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数操作系统捆绑的 SSH 代理程序遵循使用 `SSH_AUTH_SOCK` 环境变量提供其运行套接字的约定。在我们的示例中，我们使用了标准的 Node.js
    `process.env` 对象来检索此环境变量的值。
