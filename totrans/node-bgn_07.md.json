["```js\ndocument.getElementById('my-button').addEventListener('click', () => {\n    console.log('Button clicked');\n});\n```", "```js\n    import { watch } from 'node:fs';\n    console.log('Watching for file changes...');\n    watch('./watch.txt', (eventType, filename) => {\n        console.log('-----------------------------');\n        console.log(`Event type is: ${eventType}`);\n        if (filename) {\n            console.log(`Filename provided: ${filename}`);\n        }\n    });\n    ```", "```js\n    node watch.js\n    ```", "```js\n    Watching for file changes...\n    -----------------------------\n    Event type is: change\n    Filename provided: watch.txt\n    ```", "```js\n-----------------------------\nEvent type is: rename\nFilename provided: watch2.txt\n```", "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.on('message', (message) => {\n    console.log(`Message received: ${message}`);\n});\nemitter.emit('message', 'Hello world!');\n```", "```js\nsetInterval(() => {\n    emitter.emit('message', `Interval (${Date.now()})`);\n}, 1000);\nemitter.on('message', (message) => {\n    console.log(`Additional listener received: ${message}`);\n});\nemitter.once('message', (message) => {\n    console.log(`Once listener received: ${message}`);\n});\nsetTimeout(() => {\n    emitter.emit('message', 'Timeout says hello!');\n}, 2500);\n```", "```js\nMessage received: Hello world!\nMessage received: Interval (1691771547260)\nAdditional listener received: Interval (1691771547260)\nOnce listener received: Interval (1691771547260)\nMessage received: Interval (1691771548258)\nAdditional listener received: Interval (1691771548258)\nMessage received: Timeout says hello!\nAdditional listener received: Timeout says hello!\n```", "```js\nimport { createServer } from 'node:http';\nconst port = 3000;\nconst server = createServer();\nserver.on('request', (request, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.end('<h1>This is my first HTTP server in Node.js. Yay</h1>!');\n});\nserver.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}/`);\n});\n```", "```js\nServer running at http://localhost:3000/\n```", "```js\nimport { writeFile } from 'node:fs/promises';\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nconst on = emitter.on.bind(emitter);\nconst save = async (location, data) => {\n  await writeFile(location, data);\n  emitter.emit('file:saved', { location, data });\n};\nexport { save, on };\n```", "```js\nimport { save, on } from './utils.mjs';\non('file:saved', ({ location, data }) => {\n  console.log(`File saved at ${location}`);\n});\nconsole.log('Saving file...');\nsave('test.txt', 'Hello world!').catch('Error saving file');\nconsole.log('The file is being saved but is not blocking the execution...');\n```", "```js\nSaving file...\nThe file is being saved but is not blocking the execution...\nFile saved at test.txt\n```"]