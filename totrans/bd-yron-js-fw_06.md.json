["```js\n// basic.js\nexport function helloReader() {\n  return \"Hello reader!\";\n}\n// tests/basic.js\nimport ct, { assert } from \"componium-test\";\nimport { helloReader } from \"../basic.js\";\nct({\n  basic: function () {\n    assert.strictEqual(helloReader(), \"Hello reader!\",\n      \"output is correct\");\n  },\n});\n```", "```js\nimport framework interfaces\nimport ct, { assert, fake, replace } from \"componium-test\";\nimport Calculator from \"../fixtures/calculator.js\";\n  // fixture to test\nlet calc;\nct({\n  describe: \"Calculator Tests\",\n  beforeEach: () => {\n    calc = new Calculator();\n  },\n  multiply: function () {\n    assert.equal(calc.multiply(3, 2), 6, \"3 * 2 is 6\");\n  },\n  mockMultiply: function () {\n    const myFake = fake.returns(42);\n    replace(calc, \"multiply\", myFake);\n    assert.strictEqual(calc.multiply(1, 1), 42,\n      \"fake interface is working\");\n  },\n  afterEach: () => {\n    console.log(\"called afterEach\");\n  }\n});\n```", "```js\n> ct --help\nct [<tests>...]\nOptions:\n     --version   Show version number                       [boolean]\n -b, --browser   Run the test in a web browser             [boolean]\n     --keepAlive Keep the web browser alive to debug tests [boolean]\n      --help     Show help                                 [boolean]\n```", "```js\n\"exports\": {\n  \".\": \"./packages/runner/tester.js\",\n  \"./package.json\": \"./package.json\"\n},\n```", "```js\nAssertionError: 3 * 2 is 6: expected 1.5 to equal 6\n    at multiply (file:///Users/componium-test/tests/\n      calc-tests.js:20:12)\n    at ComponiumTest.test (file:///Users/\n      componium-test/packages/runner/tester.js:92:15) {\n  showDiff: true,\n  actual: 1.5,\n  expected: 6,\n  operator: 'strictEqual'\n}\n```", "```js\nimport ct, { assert } from \"componium-test\";\nct({...});\n```", "```js\n\"bin\": {\n  \"ct\": \"bin/ct.js\"\n},\n```", "```js\n<script type=\"importmap\">\n {\n   \"imports\": {\n     \"componium-test\": \"/runner/tester.js\",\n     \"chai\": \"/chai.js\",\n     \"sinon\": \"/sinon.js\"\n   }\n }\n</script>\n```", "```js\n\"dependencies\": {\n \"componium-test\": \"file:..\"\n}\n```"]