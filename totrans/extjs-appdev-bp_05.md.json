["```js\nAPI Endpoint: http://localhost:3000\n\nGET /pages\nAccepts: n/a\nReturns: [{ id: 1, text: 'label', children: [] }, { id: 2, text: '', children: [] }]\n\nPUT /page\nAccepts: {\"published\":true,\"stub\":\"our-work\",\"body\":\"Our Work.\",\"id\":\"5e30c0a3-729a-4719-a17f-7e2286576bda\"}\nReturns: {\"success\":true}\n\nPOST /page\nAccepts: {\"label\":\"New Page\",\"text\":\"New Page\",\"leaf\":true,\"id\":\"Unsaved-1\",\"parentId\":\"5e30c0a3-729a-4719-a17f-7e2286576bda\",\"published\":true,\"stub\":\"new-page\",\"body\":\"A New Page.\"}\nReturns: [{\"clientId\":\"Unsaved-1\",\"id\":\"2ae28c61-cc6e-4a98-83ee-f527f4b19f1e\",\"text\":\"New Page\",\"body\":\"A New Page.\",\"published\":true,\"stub\":\"new-page\",\"leaf\":true}]\n\nDELETE /page\nAccepts: {\"id\":2}\nReturns: {\"success\":true}\n```", "```js\nArchitectureCms.model.Page: extends Ext.data.TreeModel\n- id\n- stub\n- published\n- body\n- [] children\n```", "```js\nArchitectureCms.store.Pages: extends Ext.data.TreeStore\n```", "```js\nArchitectCms.view.main.MainController: extends Ext.app.ViewController\n- onAddClick\n- onDeleteClick\n- onSaveClick\n- onPageSelect\nArchitectCms.view.main.PageModel: extends Ext.app.ViewModel\n- pages\n- currentPage\n- isUnsavedPage\n- searchTerm\nArchitectCms.view.main.Main: extends Ext.panel.Panel\nArchitectCms.view.main.Detail: extends Ext.form.Panel\nArchitectCms.view.main.Tree: extends Ext.tree.Panel\n- searchFor\n```", "```js\nnewPageName = promptUser 'Please enter a page name'\n\nnewPageModel = new Page {\n    text = newPagename\n}\n\npageTree.addAndSelect newPageModel\n```", "```js\nsencha generate app -ext ArchitectureCms ./architecture-cms\n\n```", "```js\ncd architecture-cms\nsencha app watch\n\n```", "```js\nrm app/view/main/*\n\n```", "```js\nExt.define('ArchitectureCms.model.Page', {\n   extend: 'Ext.data.TreeModel',\nfields: [\n        { name: 'body' },\n        { name: 'stub' },\n        { name: 'text' },\n        { name: 'published' }\n    ]\n});\n```", "```js\nExt.define('ArchitectureCms.model.Page', {\n    extend: 'Ext.data.TreeModel',\n\n    fields: [\n        { name: 'body' },\n        { name: 'stub' },\n        { name: 'text' },\n        { name: 'published' }\n    ]\n});\n```", "```js\nExt.define('ArchitectureCms.model.Page', {\n    extend: 'Ext.data.TreeModel',\n    clientIdProperty: 'clientId',\n    identifier: {\n        type: 'sequential',\n        prefix: 'Unsaved-'\n    },\n    schema: {\n        namespace: 'ArchitectureCms.model',\n        urlPrefix: 'http://localhost:3000',\n        proxy: {\n            type: 'rest',\n            url: '{prefix}/{entityName:uncapitalize}'\n        }\n    },\n    fields: [\n        { name: 'body' },\n        { name: 'stub' },\n        { name: 'text' },\n        { name: 'published' }\n    ]\n});\n```", "```js\nExt.define('ArchitectureCms.store.Pages', {\n    extend: 'Ext.data.TreeStore',\n    model: 'ArchitectureCms.model.Page',\n    alias: 'store.pages',\n    root: {} // set empty root as using bind doesn't do this\n});\n```", "```js\n// app/view/main/Main.js\nExt.define('ArchitectureCms.view.main.Main', {\n\n    extend: 'Ext.panel.Panel',\n requires: [\n        'ArchitectureCms.view.main.Detail',\n        'ArchitectureCms.view.main.Tree'\n    ],\n\n    session: true,\n\n    controller: 'main',\n    viewModel: 'page',\n\n    title: 'Architect CMS',\n    bind: { title: 'Architect CMS - Currently Editing \"{currentPage.text}\"' },\n\n    layout: 'border',\n\n    items: [\n        { xtype: 'page-detail', region: 'center', reference: 'detail' },\n        { xtype: 'page-tree', region: 'west', width: 300, reference: 'tree', split: true }\n    ]\n});\n```", "```js\n// app/view/main/Tree.js\nExt.define('ArchitectureCms.view.main.Tree', {\n    extend: 'Ext.tree.Panel',\n    xtype: 'page-tree',\n    rootVisible: false,\n     tbar: [\n        { xtype: 'textfield', emptyText: 'Search...', width: '100%', bind: { value: '{searchTerm}'}}\n    ],\n\n    bind: { store: '{pages}', searchFor: '{searchTerm}' },\n\n    config: {\n        searchFor: null\n    },\n\n    applySearchFor: Ext.emptyFn\n});\n```", "```js\napplySearchFor: function(text) {\n    var root = this.getRootNode();\n    var match = root.findChildBy(function(child) {\n        var txt = child.get('text');\n\n        if(txt.match(new RegExp(text, 'i'))) {\n            this.expandNode(child, true, function() {\n                var node = this.getView().getNode(child);\n                Ext.get(node).highlight();\n            }, this);\n        }\n    }, this, true);\n}\n```", "```js\nExt.define('ArchitectureCms.view.main.Detail', {\n    extend: 'Ext.form.Panel',\n    xtype: 'page-detail',\n    defaultType: 'textfield',\n    bodyPadding: 10,\n    hidden: true,\n    bind: {\n        hidden: '{!currentPage}'\n    },\n    items: [\n        { xtype: 'container', cls: 'ct-alert', html: 'This record is unsaved!', bind: { hidden: '{!isUnsavedPage}' } },\n        { fieldLabel: 'Id', bind: '{currentPage.id}', xtype: 'displayfield'},\n        { fieldLabel: 'Published', bind: '{currentPage.published}', xtype: 'checkboxfield' },\n        { fieldLabel: 'Label', bind: '{currentPage.text}' },\n        { fieldLabel: 'URL Stub', bind: '{currentPage.stub}' },\n        { fieldLabel: 'Body', bind: { value: '{currentPage.body}' }, xtype: 'htmleditor' }\n    ],\n    bbar: [\n        { text: 'Save', itemId: 'save' },\n        { text: 'Add Child Page', itemId: 'addChild' },\n        { text: 'Delete', itemId: 'delete' }\n    ]\n});\n```", "```js\n// app/view/main/PageModel.js\nExt.define('ArchitectureCms.view.main.PageModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.page',\n\n    requires: ['Architecture.store.Pages'],\n\n    stores: {\n        pages: {\n            type: 'pages',\n            session: true\n        }\n    },\n\n    formulas: {\n        isUnsavedPage: function(get) {\n            return get('page.id').toString().indexOf('Unsaved-') > -1;\n        }\n    }\n});\n```", "```js\n// app/view/main/MainController.js\nExt.define('ArchitectureCms.view.main.MainController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.main',\n\n    requires: ['ArchitectureCms.model.Page'],\n\n    init: function() {\n        this.listen({\n            component: {\n                'treepanel': {\n                   'select': 'onPageSelect'\n                },\n                'page-detail #save': {\n                    click: 'onSaveClick'\n                },\n                'page-detail #addChild': {\n                    click: 'onAddClick'\n                },\n                'page-detail #delete': {\n                    click: 'onDeleteClick'\n                }\n            }\n        });\n    },\n\n onPageSelect: function(tree, model) {\n        this.getViewModel().setLinks({\n            currentPage: {\n                type: 'Page',\n                id: model.getId()\n            }\n        });\n    },\n\n    onAddClick: function() {\n        var me = this;\n\n        Ext.Msg.prompt('Add Page', 'Page Label', function (action, value) {\n            if (action === 'ok') {\n                var session = me.getSession(),\n                    selectedPage = viewModel.get('currentPage'),\n                    tree = me.lookupReference('tree');\n\n                var newPage = session.createRecord('Page', {\n                    label: value,\n                    text: value,\n                    leaf: true\n                });\n\n                selectedPage.insertChild(0, newPage);\n                tree.setSelection(newPage);\n                tree.expandNode(selectedPage);\n            }\n        });\n    },\n\n    onDeleteClick: function() {\n        var me = this;\n\n        Ext.Msg.confirm('Warning', 'Are you sure you'd like to delete this record?', function(btn) {\n            if(btn === 'yes') {\n                me.getViewModel().get('currentPage').erase();\n                me.getViewModel().set('currentPage', null);\n                Ext.toast('Page deleted');\n            }\n        }, this)\n\n    },\n\n    onSaveClick: function() {\n        this.getViewModel().get('currentPage').save();\n        Ext.toast('Page saved');\n    }\n});\n```"]