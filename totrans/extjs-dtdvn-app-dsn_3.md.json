["```js\n<?php\nsession_start();\nif(!isset($_SESSION['USERINFO'])) {\n  header(\"Location: ./login.php\");\n}\n?>\n<!DOCTYPE HTML>\n...\n</html>\n```", "```js\nExt.define('MyApp.view.myaccount.MyAccount', {\nextend: 'MyApp.panel.Screen',\n    ....\n```", "```js\nExt.define('MyApp.controller.myaccount.MyAccount', {\nextend: 'MyApp.controller.Abstract',\n    ....\n```", "```js\nExt.application({\n    ....\n    controllers: [\n        'Main',\n        'Header',\n        'Navigation',\n        'dashboard.Dashboard',\n        'myaccount.MyAccount',\n        'quotation.Quotation',\n        'bill.Bill'\n    ],\n    ....\n```", "```js\nExt.define('MyApp.view.Viewport', {\n    ....\n    requires:[\n        'Ext.panel.Panel',\n        'Ext.layout.container.Border',\n        'MyApp.view.Header',\n        'MyApp.view.Navigation',\n        'MyApp.view.dashboard.Dashboard',\n        'MyApp.view.myaccount.MyAccount',\n        'MyApp.view.quotation.Quotation',\n        'MyApp.view.bill.Bill'\n    ],\n    ....\n```", "```js\nExt.define('MyApp.view.myaccount.MyAccount', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-myaccount-edit',\n    itemId: 'screen-myaccount-edit',\n    initComponent: function() {\n        var me = this;\n        Ext.apply(me, {\n        });\n        me.callParent(arguments);\n    }\n});\n```", "```js\nExt.define('MyApp.view.myaccount.MyAccount', {\n  ...\n    requires: [\n        'MyApp.view.myaccount.Edit'\n    ],\n    itemId: 'screen-myaccount',\n    title: 'MyAccount',\n    layout: 'card',\n    items: [{\n        xtype: 'myapp-myaccount-edit',\n        border: false\n    }]\n});\n```", "```js\nExt.define('MyApp.view.myaccount.Edit', {\n  ...\n    initComponent: function() {\n        var me = this;\n        // Fields\n        Ext.apply(me, {\n            bodyPadding: 20,\n            defaultType: 'textfield',\n            items: [{\n                fieldLabel: 'email'\n           }, {\n                fieldLabel: 'firstname'\n           }, {\n                fieldLabel: 'lastname'\n           }]\n        });\n        // TopToolbar\n    Ext.apply(me, {\n        tbar: [{\ntext: 'Save',\naction: 'save'\n           }, {\n            text: 'Reset',\n            action: 'reset'\n           }]\n        });\n    me.callParent(arguments);\n    }\n});\n```", "```js\nExt.define('MyApp.view.quotation.Quotation', {\n  ...\n  requires: [\n        'MyApp.view.quotation.List',\n        'MyApp.view.quotation.Edit'\n    ],\n  ...\nitems: [{â€©          xtype: 'myapp-quotation-list',\n          border: false\n    }, {\n          xtype: 'myapp-quotation-edit',\n          border: false\n    }]\n});\n```", "```js\nExt.define('MyApp.view.quotation.List', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-quotation-list',\n    itemId: 'screen-quotation-list',\n    initComponent: function() {\n      var me = this;\n      Ext.apply(me, {\n        });\n    me.callParent(arguments);\n    }\n});\n```", "```js\nExt.define('MyApp.view.quotation.Edit', {\n    extend: 'MyApp.form.Panel',\n    alias : 'widget.myapp-quotation-edit',\n    itemId: 'screen-quotation-edit',\n    initComponent: function() {\n    ...\n    }\n});\n```", "```js\nExt.applyIf(me, {\n    customerStore: Ext.create('Ext.data.Store', {\n        fields: ['id', 'name'],\n        data : [\n            {\"id\": 0, \"name\": \"Sencha\"},\n            {\"id\": 1, \"name\": \"Xenophy\"}\n        ]\n    }),\n    itemStore: Ext.create('Ext.data.Store', {\n        storeId:'billItemStore',\n        fields:['desc', 'qty', 'price', 'sum'],\n        data:{'items':[\n            { 'desc': 'Sencha Complete', \"qty\":\"5\", \"price\":\"995\", \n             \"sum\": 4975 },\n            { 'desc': 'Sencha Ext JS + Standard Support', \"qty\":\"5\", \n             \"price\":\"595\", \"sum\": 2975 }\n        ]},\nproxy: {\ntype: 'memory',\nreader: {\ntype: 'json',\nroot: 'items'\n            }\n        }\n    })\n});\n```", "```js\nExt.apply(me, {\n    bodyPadding: 20,\n    items: [{\n        padding: '0 0 20 0',\n        width: 500,\n        xtype: 'combo',\n        fieldLabel: 'customer',\n        store: me.customerStore,\n        editable: false,\n        displayField: 'name',\n        valueField: 'id'\n    }, {\n        // Grid Panel\n        height: 400,\n        padding: '0 0 20 0',\n        xtype: 'grid',\n        store: me.itemStore,\n        plugins: [Ext.create('Ext.grid.plugin.CellEditing')],\n        columns: [{\n            text: 'Description',\n            dataIndex: 'desc',\n            flex: 1,\n            editor: true\n        }, {\n            text: 'Qty',\n            dataIndex: 'qty',\n            editor: {\n                xtype: 'numberfield',\n                allowBlank: false,\n                minValue: 0,\n                maxValue: 10000\n            }\n        }, {\n            text: 'Price',\n            dataIndex: 'price',\n            renderer: Ext.util.Format.usMoney,\n            editor: {\n                xtype: 'numberfield',\n                allowBlank: false,\n                minValue: 0,\n                maxValue: 10000\n            }\n        }, {\n            text: 'Sum',\n            dataIndex: 'sum',\n            renderer: Ext.util.Format.usMoney\n        }],\n        tbar: [{\n            text: 'Add Item',\n            action: 'add-item'\n        }, '-', {\n            text: 'Remove Item',\n            action: 'remove-item'\n        }]\n   }, {\n        fieldLabel: 'note',\n        xtype: 'textarea',\n        width: 500j\n   }]\n});\n```", "```js\nExt.apply(me, {\n    tbar: [{\n        text: 'Save',\n        action: 'save'\n   }]\n});\n```", "```js\nExt.define('MyApp.view.bill.Bill', {\n  ...\n    title: 'Bill',\n    layout: 'card',\n    items: [{\n        xtype: 'myapp-bill-list',\n        border: false\n    }, {\n        xtype: 'myapp-bill-edit',\n        border: false\n    }]\n});\n```", "```js\nclassName: MyApp.view.bill.List\nextend: MyApp.form.Panel\nalias: widget.myapp-bill-list\nitemId: screen-bill-list\n```", "```js\nExt.define('MyApp.controller.quotation.List', {\n    extend: 'MyApp.controller.Abstract',\n    init: function() {\n        var me = this;\n        me.control({\n        });\n    }\n});\n```", "```js\nExt.define('MyApp.controller.myaccount.MyAccount', {\n    extend: 'MyApp.controller.Abstract',\n    screenName: 'myaccount',\n    refs: [{\n        ref: 'editView', selector: 'myapp-myaccount-edit' \n    }],\n    init: function() {\n        var me = this;\n        me.control({\n            'myapp-myaccount': {\n                'myapp-show': me.onShow,\n                'myapp-hide': me.onHide\n            }\n        });\n    },\n    onShow: function() {\n        var me = this,\n        editView = me.getEditView();\n        editView.fireEvent('myapp-show', editView);\n    },\n    onHide: function() {\n        var me = this,\n        editView = me.getEditView();\n        editView.fireEvent('myapp-hide', editView);\n    }\n});\n```", "```js\nExt.define('MyApp.controller.myaccount.Edit', {\nextend: 'MyApp.controller.Abstract',\ninit: function() {\nvar me = this;\nme.control({\n            'myapp-myaccount-edit': {\n                'myapp-show': me.onShow,\n                'myapp-hide': me.onHide,\n                'myapp-dirty': me.onDirty,\n                'myapp-undirty': me.onUndirty\n            }\n        });\n    },\n    onShow: function() {\n    },\n    onHide: function() {\n    },\n    onDirty: function() {\n    },\n    onUndirty: function() {\n    }\n});\n```", "```js\ninit: function() {\n        ....\n        Ext.iterate([\n            {name: 'email', xtype: 'textfield', fn: me.onChangeField},\n            {name: 'firstname', xtype: 'textfield', fn: \n             me.onChangeField},\n            {name: 'lastname', xtype: 'textfield', fn: \n             me.onChangeField}\n        ], function(f) {\n            var scope = me, o = {},\n            format = Ext.String.format,\n            key = format('{0} {1}[name=\"{2}\"]', 'myapp-myaccount-edit', f.xtype, f.name);\n            o[key] = {\nchange  : { fn: f.fn, scope: scope }\n            };\n        me.control(o);\n        });\n    },\n    onChangeField: function(field) {\n        console.log(field);\n    },\n    onShow: function() {\n    ....\n```", "```js\nExt.define('MyApp.view.myaccount.Edit', {\n    ....\n    initComponent: function() {\n        var me = this;\n        // Fields\n        Ext.apply(me, {\n            ....\n            items: [{\n                fieldLabel: 'email',\n                name: 'email'\n            }, {\n                fieldLabel: 'firstname',\n                name: 'firstname'\n            }, {\n                fieldLabel: 'lastname',\n                name: 'lastname'\n            }]\n        });\n        ....\n```", "```js\nExt.define('MyApp.controller.Abstract', {\n    ....\nsetChangeFieldEvents: function(fields, xtype, fn, scope) {\nvar me = this,\nformat = Ext.String.format;\nExt.iterate(fields, function(type, fs) {\nif(Ext.isString(fs)) {\nfs = [fs];\n            }\nif(Ext.isArray(fs)) {\nExt.iterate(fs, function(fname) {\nvar o = {}, key;\nkey = format('{0} {1}[name=\"{2}\"]', xtype, type, fname);\no[key] = {\nchange  : { fn: fn, scope: scope }\n                    };\nme.control(o);\n                });\n            }\n        });\n    },\n    ....\n```", "```js\n    ....\ninit: function() {\n        ....\n        me.setChangeFieldEvents({\n            textfield: [\n                'email',\n                'firstname',\n                'lastname'\n            ]\n        },\n        'myapp-myaccount-edit',\n         me.onChangeField,\n         me);\n    },\n    onChangeField: function(field) {\n        console.log(field);\n    },\n    ....\n```", "```js\nExt.define('MyApp.controller.myaccount.Edit', {\n    ....\n    onDirty: function() {\n        var me = this,\n        editView = me.getEditView(),\n        btnSave = editView.down('button[action=save]')\n        btnSave.enable();\n    },\n    onUndirty: function() {\n        var me = this,\n        editView = me.getEditView(),\n        btnSave = editView.down('button[action=save]')\n        btnSave.disable();\n    }\n});\n```", "```js\nExt.define('MyApp.view.myaccount.Edit', {\n    ....\n    tbar: [{\n        text: 'Save',\n        action: 'save',\n        disabled: true\n    ....\n```", "```js\nExt.define('MyApp.view.quotation.Edit', {\n            ....\n            }, {\n            name: 'items',\n            xtype: 'hidden'\n            }, {\n            fieldLabel: 'note',\n            name: 'note',\n            xtype: 'textarea',\n            width: 500\n            }]\n        });\n        // TopToolbar\n```", "```js\nExt.define('MyApp.store.Customer',{\n    extend: 'Ext.data.Store',\n    storeId:'Customer',\n    fields: ['id', 'name'],\n    data:{'items':[\n        {\"id\": 0, \"name\": \"Sencha\"},\n        {\"id\": 1, \"name\": \"Xenophy\"}\n    ]},\nproxy: {\n    type: 'memory',\n    reader: {\n        type: 'json',\n        root: 'items'\n        }\n    }\n});\n```", "```js\nExt.define('MyApp.store.QuotationItem',{\n    extend: 'Ext.data.Store',\n    storeId:'QuotationItem',\n    fields:['desc', 'qty', 'price', 'sum'],\n    data:{'items':[\n    ]},\nproxy: {\n    ... // Customer Store\n    }\n});\n```", "```js\nExt.define('MyApp.view.quotation.Edit', {\n        ....\n        (remove store defines!!)\n        ....\n        // Fields & Grid\nExt.apply(me, {\n    bodyPadding: 20,\n    items: [{\n                ....\n    store: 'Customer',\n                ....\n            }, {\n                // Grid Panel\n                ....\n            store: 'QuotationItem',\n                ....\n```", "```js\nname: 'items',\nxtype: 'hidden',\nvalue: '[]'\n```", "```js\nme.setChangeFieldEvents({\ncombo: [\n        'customer'\n    ],\nhidden: [\n        'items'\n    ],\ntextarea: [\n        'note'\n    ]\n},\n```", "```js\nonAddItem: function() {\n    var me = this,\n    store = me.getQuotationItemStore();\n    store.add({ desc: 'New Item', qty: 0, price: 0, sum: 0 });\n},\nonRemoveItem: function() {\n    var me = this,\n    store = me.getQuotationItemStore();\n    editView = me.getEditView(),\n    grid = editView.down('grid'),\n    sm = grid.getSelectionModel();\n    if(sm.getCount()) {\n            var next = false;\n            Ext.iterate(sm.getSelection(), function(item) {\n        var flg = false;\n        store.data.each(function(model) {\n                if(flg) {\n                next = model;\n                flg = false;\n                }\n            if(model.id === item.id) {\n                flg = true;\n                }\n            });\n            store.remove(item);\n        });\n        if(next) {\n            sm.select(next);\n        } else {\n            next = store.getAt(store.data.getCount() - 1);\n            if(next) {\n                sm.select(next);\n            }\n        }\n    }\n},\n```", "```js\nExt.define('MyApp.controller.quotation.Edit', {\n    ....\n    init: function() {\n        ....\n        var store = me.getQuotationItemStore(),\n        updateGridData;\n        updateGridData = function(store) {\n          var f = me.getEditView().query('hidden[name=items]')[0],\n          out = [];\n          store.data.each(function(r) {\n              out.push(Ext.clone(r.data));\n            });\n          f.setValue(Ext.encode(out));\n        };\n        store.on('update', function(store, r) {\n          r.set('sum', r.get('qty')*r.get('price'));\n          updateGridData(store);\n        });\n        store.on('add', function(store, r) {\n          updateGridData(store);\n        });\n        store.on('remove', function(store, r) {\n          updateGridData(store);\n        });\n    },\n```", "```js\nExt.onReady(function() {\n    Ext.create('MyApp.store.Customer');\n    Ext.create('MyApp.store.QuotationItem');\n    Ext.create('MyApp.view.quotation.Quotation', {\n      activeItem: 1,\n      width: 800,\n      height: 600,\n      renderTo: Ext.getBody()\n    });\n});\n```", "```js\n....\n\"SELECT\",\n\"    COUNT(id) as auth,\",\n\"    users.id,\", // <- add\n\"    users.email,\",\n....\n```", "```js\n....\n$_SESSION[\"USERINFO\"] = array(\n    \"id\" => $row[\"id\"], // <- add\n    \"email\" => $row[\"email\"],\n    ....\n```", "```js\n<?php\nsession_start(); // <-- add\nrequire('config.php');\n```", "```js\n    'MyAppMyAccount' =>array(\n        'methods' => array(\n            'readForm' => array(\n                'len' => 0\n            )\n        )\n    )\n```", "```js\n<script src=\"img/api.php\"></script>\n```", "```js\nExt.app.REMOTING_API.url = \"../../php/router.php\";\nExt.direct.Manager.addProvider(Ext.app.REMOTING_API);\n```", "```js\nExt.define('MyApp.view.myaccount.Edit', {\n    ....\n    api: {\n      load    : 'MyAppMyAccount.readForm',\n      submit  : 'MyAppMyAccount.writeForm'\n```", "```js\nExt.widget('button', {\ntext: 'fire myapp-show',\nrenderTo: Ext.getBody(),\nscope: this,\nhandler: function() {\n            this.getController('myaccount.MyAccount').loadIndex('#!/myaccount');\n            }\n        });\n```", "```js\nonShow: function(p, owner, params) {\n    var me = this,\n    editView = me.getEditView(),\n    form = editView.getForm();\n\n    p.setLoading();\n    form.trackResetOnLoad = true;\n    form.isLoading = true;\n    form.load({\n      success: function(form, ret) {\n        p.setLoading(false);\n        p.fireEvent('myapp-undirty');\n        form.isLoading = false;\n        }\n    });\n},\n```", "```js\nExt.app.REMOTING_API.url = \"../../php/router.php\";\nExt.direct.Manager.addProvider(Ext.app.REMOTING_API);\n```", "```js\n    'MyAppQuotation'=>array(\n        'methods'=>array(\n            'readForm'=>array(\n                'len'=>0\n            ),\n            'writeForm'=>array(\n                'len'=>1,\n                'formHandler'=>true\n            )\n        )\n    ),\n    'MyAppMyAccount'=>array(\n        ....\n    )\n```", "```js\n    'MyAppBill'=>array(\n        'methods'=>array(\n            'readForm'=>array(\n                'len'=>0\n            ),\n            'writeForm'=>array(\n                'len'=>1,\n                'formHandler'=>true\n            )\n        )\n    ),\n    'MyAppQuotation'=>array(\n```"]