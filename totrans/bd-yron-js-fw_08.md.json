["```js\nserver.addClientView(\"/\", \"frameworks\", {\n  title: \"Frameworks\",\n  // …\n});\n```", "```js\nexport default function frameworks(request, response) {\n  return `<p>Welcome!</p> `;\n}\n```", "```js\nserver.addStaticDirectory(\"/images\", \"img\"));\n```", "```js\nclass ReactiveComponent extends HTMLElement {\n  constructor() {\n    super();\n    this.state = this.reactive(this.data());\n    this.attachShadow({ mode: \"open\" });\n  }\n  reactive(data) {\n    return new Proxy(data, {\n      set: (target, key, value) => {\n        target[key] = value;\n        this.update();\n        return true;\n      },\n    });\n  }\n  callback() { this.render(); this.update(); }\n  render() { this.shadowRoot.innerHTML = this.template(); }\n  // methods that child components will override\n  update() {}\n  data() { return {}; }\n  template() { return \"\"; }\n}\n```", "```js\n<body>\n  <h1>Basic Components</h1>\n  <year-component></year-component>\n</body>\n```", "```js\ntemplate() {\n    return `\n      <button id=\"addYears\">Add Years</button>\n      <div id=\"yearCount\">Year: 0</div>\n      <month-component></month-component>\n    `;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.shadowRoot.querySelector\n      (\"#addYears\").addEventListener(\"click\", () => {\n      this.state.yearCount++;\n    });\n  }\n  update() {\n    this.shadowRoot.querySelector(\n      \"#yearCount\"\n    ).textContent = `Year: ${this.state.yearCount}`;\n```", "```js\nimport {html, css, LitElement} from 'lit';\nexport class YearComponent extends LitElement {\n    static styles = css`p { color: green }`;\n    static properties = {\n        year: {type: Number},\n    };\n    constructor() {\n        super();\n        this.year = 2024;\n    }\n    render() {\n        return html`<button id=\"addYears\">Add Years\n          </button>\n      <div id=\"yearCount\">Year: ${this.year}</div>`;\n}\n```", "```js\nimport { css, html, ComponiumComponent } from \"componium\";\n```", "```js\nhtml`<button @click=\"${this._click}\">click</button>`;\n```", "```js\nconst routes = [{\n    path: \"/client-render\",\n    template: \"<nested-component></nested-component>\",\n  },\n  {\n    path: \"/page\",\n    template: \"<navigated-component>\n      </navigated-component>\",\n  },];\n```", "```js\n esbuild ${filePath} --minify --outfile=${newFilePath}.\n```", "```js\n> cd chapter7/componium/tests/sample\n> componium dev\nExecuting (default): SELECT 1+1 AS result\nComponium Server (PID: 59938) started on port: 9000\n```", "```js\nserver.addClientView(\"/\", \"frameworks\", {\n  title: \"Frameworks\",\n});\n```", "```js\nexport default function frameworks(request, response) {\n  const hitsComponium = 1000;\n  // code omitted\n  return `\n    <div class=\"framework-list\">\n      <framework-item name=\"Componium\" count=\n        \"${hitsComponium}\"></framework-item>\n     <!-- extra code omitted -->`;\n}\n```", "```js\n<h1 style=\"font-family: sans-serif; text-align:\n  sscenter;\">List of frameworks</h1>\n    <div class=\"framework-list\">\n      <framework-item\n        name=\"Componium\"\n        count=\"1000\"\n      ></framework-item>\n```", "```js\n<button @click=${() => this.count++}>Add stars</button>\n```"]