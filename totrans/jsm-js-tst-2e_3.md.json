["```js\n<script src=\"img/jquery.js\"></script>\n<script src=\"img/jasmine-jquery.js\"></script>\n```", "```js\n(function ($, Investment, Stock) {\n  function NewInvestmentView (params) {\n\n  }\n\n  this.NewInvestmentView = NewInvestmentView;\n})(jQuery, Investment, Stock);\n```", "```js\nfunction ($, Investment, Stock)\n```", "```js\n})(jQuery, Investment, Stock);\n```", "```js\nthis.NewInvestmentView = NewInvestmentView;\n```", "```js\ndescribe(\"NewInvestmentView\", function() {\n  it(\"should allow the input of the stock symbol\", function() {\n  });\n\n  it(\"should allow the input of shares\", function() {\n  });\n\n  it(\"should allow the input of the share price\", function() {\n  });\n});\n```", "```js\nbeforeEach(function() {\n  $('body').append('<form id=\"my-form\"></form>');\n});\n```", "```js\nafterEach(function() {\n  $('#my-form').remove();\n});\n```", "```js\n<div id=\"html-fixtures\">\n</div>\n```", "```js\nbeforeEach(function() {\n  $('#html-fixtures').html('<form id=\"my-form\"></form>');\n});\n```", "```js\nbeforeEach(function() {\n  $('#html-fixtures').html('<form id=\"new-investment\"><h1>New  investment</h1><label>Symbol:<input type=\"text\" class=\"new-investment-stock-symbol\" name=\"stockSymbol\"  value=\"\"></label><input type=\"submit\" name=\"add\"  value=\"Add\"></form>');\n});\n```", "```js\nbeforeEach(function() {\n  loadFixtures('MyFixture.html');\n});\n```", "```js\n<div id=\"jasmine-fixtures\">\n  <form id=\"new-investment\">\n    <h1>New investment</h1>\n    <label>\n      Symbol:\n      <input type=\"text\" class=\"new-investment-stock-symbol\" name=\"stockSymbol\" value=\"\">\n    </label>\n    <input type=\"submit\" name=\"add\" value=\"Add\">\n  </form>\n</div>\n```", "```js\nbeforeEach(function() {\n  setFixtures('<form id=\"my-form\"></form>');\n});\n```", "```js\n$ open \"Google Chrome.app\" --args --allow-file-access-from-files\n\n```", "```js\n<form id=\"new-investment\">\n  <h1>New investment</h1>\n  <label>\n    Symbol:\n    <input type=\"text\" class=\"new-investment-stock-symbol\" name=\"stockSymbol\" value=\"\">\n  </label>\n  <label>\n    Shares:\n    <input type=\"number\" class=\"new-investment-shares\" name=\"shares\" value=\"0\">\n  </label>\n  <label>\n    Share price:\n    <input type=\"number\" class=\"new-investment-share-price\" name=\"sharePrice\" value=\"0\">\n  </label>\n  <input type=\"submit\" name=\"add\" value=\"Add\">\n</form>\n```", "```js\njasmine.getFixtures().fixturesPath = 'spec/fixtures';\n```", "```js\ndescribe(\"NewInvestmentView\", function() {\n  beforeEach(function() {\n    loadFixtures('NewInvestmentView.html');\n  });\n});\n```", "```js\n<script src=\"img/NewInvestmentView.js\"></script>\n<script src=\"img/NewInvestmentViewSpec.js\"></script>\n```", "```js\ndescribe(\"NewInvestmentView\", function() {\n  var view;\n  beforeEach(function() {\n    loadFixtures('NewInvestmentView.html');\n    view = new NewInvestmentView({\n      selector: '#new-investment'\n    });\n  });\n});\n```", "```js\nfunction NewInvestmentView (params) {\n  this.$element = $(params.selector);\n}\n```", "```js\nit(\"should expose a property with its DOM element\", function() {\n  expect(view.$element).toExist();\n});\n```", "```js\nit(\"should have an empty stock symbol\", function() {\n  expect(view.getSymbolInput()).toHaveValue('');\n});\n```", "```js\nNewInvestmentView.prototype = {\n  getSymbolInput: function () {\n    return $('.new-investment-stock-symbol')\n  }\n};\n```", "```js\nNewInvestmentView.prototype = {\n  getSymbolInput: function () {\n    return this.$element.find('.new-investment-stock-symbol')\n  }\n};\n```", "```js\nNewInvestmentView.prototype = {\n  $: function () {\n    return this.$element.find.apply(this.$element, arguments);\n  },\n  getSymbolInput: function () {\n    return this.$('.new-investment-stock-symbol')\n  }\n};\n```", "```js\n$('.new-investment-stock-symbol').val('from outside the view');\n```", "```js\nnewInvestmentView.setSymbol('from outside the view');\n```", "```js\nNewInvestmentView.prototype.setSymbol = function(value) {\n  this.$('.new-investment-stock-symbol').val(value);\n};\n```", "```js\ndescribe(\"NewInvestmentView\", function() {\n  beforeEach(function() {\n    loadFixtures('NewInvestmentView.html');\n    appendLoadFixtures('InvestmentListView.html');\n\n    listView = new InvestmentListView({\n      id: 'investment-list'\n    });\n\n    view = new NewInvestmentView({\n      id: 'new-investment',\n      listView: listView\n    });\n  });\n\n  describe(\"when its add button is clicked\", function() {\n    beforeEach(function() {\n      // fill form inputs\n      // simulate the clicking of the button\n    });\n\n    it(\"should add the investment to the list\", function() {\n      expect(listView.count()).toEqual(1);\n    });\n  });\n});\n```", "```js\nfunction NewInvestmentView (params) {\n  this.listView = params.listView;\n\n  this.$element.on('submit', function () {\n    this.listView.addInvestment(/* new investment */);\n  }.bind(this));\n}\n```", "```js\nfunction NewInvestmentView (params) {\n  this.listView = params.listView;\n  this.tableView = params.tableView;\n\n  this.$element.on('submit', function () {\n    this.listView.addInvestment(/* new investment */);\n    this.tableView.addInvestment(/* new investment */);\n  }.bind(this));\n}\n```", "```js\ndescribe(\"InvestmentTracker\", function() {\n  beforeEach(function() {\n    loadFixtures('NewInvestmentView.html');\n    appendLoadFixtures('InvestmentListView.html');\n\n    listView = new InvestmentListView({\n      id: 'investment-list'\n    });\n\n    newView = new NewInvestmentView({\n      id: 'new-investment'\n    });\n\n    application = new InvestmentTracker({\n      listView: listView,\n      newView: newView\n    });\n  });\n\n  describe(\"when a new investment is created\", function() {\n    beforeEach(function() {\n      // fill form inputs\n      newView.create();\n    });\n\n    it(\"should add the investment to the list\", function() {\n      expect(listView.count()).toEqual(1);\n    });\n  });\n});\n```", "```js\nfunction InvestmentTracker (params) {\n  this.listView = params.listView;\n  this.newView = params.newView;\n\n  this.newView.onCreate(function (investment) {\n    this.listView.addInvestment(investment);\n  }.bind(this));\n}\n```", "```js\nNewInvestmentView.prototype.onCreate = function(callback) {\n  this._callback = callback;\n};\n```", "```js\nNewInvestmentView.prototype.create = function() {\n  this._callback(/* new investment */);\n};\n```", "```js\nit(\"should expose a property with its DOM element\", function() {\n  expect(view.$element).toExist();\n});\n```", "```js\nit(\"should expose a property with its DOM element\", function() {\n  expect($(document).find(view.$element).length).toBeGreaterThan(0);\n});\n```", "```js\nit(\"should allow the input of the stock symbol\", function() {\n  expect(view.$element.find('.new-investment-stock-symbol')).toBeMatchedBy('input[type=text]');\n});\n```", "```js\nit(\"should allow the input of shares\", function() {\n  expect(view.$element).toContainHtml('<input type=\"number\" class=\"new-investment-shares\" name=\"shares\" value=\"0\">');\n});\n```", "```js\nit(\"should allow the input of the share price\", function() {\n  expect(view.$element).toContainElement('input[type=number].new-investment-share-price');\n});\n```", "```js\nit(\"should have an empty stock symbol\", function() {\n  expect(view.$element.find('.new-investment-stock-symbol')).toHaveValue('');\n});\n\nit(\"should have its shares value to zero\", function() {\n  expect(view.$element.find('.new-investment-shares')).toHaveValue('0');\n});\n```", "```js\nit(\"should have its share price value to zero\", function() {\n  expect(view.$element.find('.new-investment-share-price')).toHaveAttr('value', '0');\n});\n```", "```js\nit(\"should have its stock symbol input on focus\", function() {\n expect(view.$element.find('.new-investment-stock-symbol')).toBeFocused();\n});\n```", "```js\nfunction itShouldNotAllowToAdd () {\n it(\"should not allow to add\", function() {\n  expect(view.$element.find('input[type=submit]')).toBeDisabled();\n});\n```"]