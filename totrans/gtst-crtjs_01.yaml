- en: Chapter 1. Installing CreateJS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Installing and using a client-side library in the right manner is really important.
    Using a large client-side library incorrectly could cause real problems; one obvious
    problem is the slow loading of web pages. In this chapter, we are going to see
    how we can set up and use CreateJS for both development and production environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you''ll learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installation and setup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding CreateJS and subsets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CreateJS contains different libraries such as **SoundJS**, **TweenJS**, **EaselJS**,
    and **PreloadJS**. Each one has different requirements to run in browsers.
  prefs: []
  type: TYPE_NORMAL
- en: 'TweenJS should work in all browsers and their older versions as well. SoundJS
    requires **HTMLAudio**, **Flash**, or **WebAudio**, and these features need modern
    browsers. SoundJS should work perfectly with the following browsers:'
  prefs: []
  type: TYPE_NORMAL
- en: Google Chrome 31+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mozilla Firefox 25+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internet Explorer 9+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opera 18+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Among the mobile browsers, it should work with these:'
  prefs: []
  type: TYPE_NORMAL
- en: iOS Safari 4.0+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android browser 2.3+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BlackBerry browser 7.0+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PreloadJS should work with all browsers, even Internet Explorer 6.
  prefs: []
  type: TYPE_NORMAL
- en: 'EaselJS has a dependency on HTML5 canvas, so your audiences should have one
    of the following browsers to be able to use EaseJS:'
  prefs: []
  type: TYPE_NORMAL
- en: Google Chrome 31+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mozilla Firefox 25+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internet Explorer 9+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opera 18+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For mobile, one of these browsers is required:'
  prefs: []
  type: TYPE_NORMAL
- en: iOS Safari 3.2+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opera Mini 5.0-7.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android browser 2.1+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BlackBerry browser 7.0+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading CreateJS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are some ways to download and include CreateJS files into your project
    which are discussed in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can download the latest version of CreateJS and all subsets from the GitHub,
    as shown in the following screenshot from [https://github.com/CreateJS/](https://github.com/CreateJS/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![GitHub](img/0260OS_1_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After going to each repository, you can either download the ZIP folder of the
    latest changes or use the Git clone command to get the source from GitHub, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![GitHub](img/0260OS_1_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can find this box on the right-hand side of each repository page, which
    helps you to get the code.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Content Delivery Network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CreateJS has a great **Content Delivery Network** (**CDN**), which contains
    all versions and all subset libraries hosted. You can access CDN servers from
    [http://code.createjs.com/](http://code.createjs.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using the CDN-hosted versions of CreateJS libraries in your project allows them
    to be downloaded quickly and cached across different sites using the same version
    of the libraries. This can reduce bandwidth costs and page load times.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find all versions at [http://code.createjs.com/](http://code.createjs.com/)
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Content Delivery Network](img/0260OS_1_3(2).jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can also use a combined version of all subsets and libraries that contains
    all of the latest stable versions of all libraries, including EaselJS, TweenJS,
    SoundJS, and PreloadJS.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After choosing how to download the source, you need to set up the library to
    make it work. In this section, we are going to see how to set up the library for
    both production and development environments.
  prefs: []
  type: TYPE_NORMAL
- en: The production environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to use CreateJS in the production environment, things will be much
    easier. All you need to use is a single compiled source file. For this purpose,
    you can either use hosted files from CreateJS CDN or build locally, and then link
    in locally.
  prefs: []
  type: TYPE_NORMAL
- en: Using CDN
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In this case, all you need to do is link `<script…>` to the source of the file
    in the CreateJS CDN server (see the *Downloading CreateJS* section of this chapter);
    after that, everything should work properly.
  prefs: []
  type: TYPE_NORMAL
- en: The development environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to debug, develop using CreateJS, or see how things are going on
    inside CreateJS, you need to use uncompiled source files.
  prefs: []
  type: TYPE_NORMAL
- en: For each library, you can find the uncompiled source files at `/src/`. All dependencies
    and source code will be here.
  prefs: []
  type: TYPE_NORMAL
- en: To use uncompiled source files, the important thing to keep in mind is that
    all files should be called in the correct order; otherwise, you will get some
    errors. Luckily, there is a file in each project that will give you hints on how
    to include files in the correct order. This config file is placed in `build/config.json`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see an example of this config for EaselJS in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The development environment](img/0260OS_1_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So, you have to put `<script…>` and load files in this order. You can find the
    same config file in the same location for other projects too.
  prefs: []
  type: TYPE_NORMAL
- en: After loading all JS files, you can use the library and also put your breakpoints
    on the source code to trace or debug it.
  prefs: []
  type: TYPE_NORMAL
- en: Building the source code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All CreateJS libraries use Grunt to make and build files, so you need to have
    the NodeJS and Grunt module installed (0.10.2 or greater is required).
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, get the latest version of NodeJS from [www.nodejs.org](http://www.nodejs.org)
    and install it. Then go to the `/build` folder for the library (for example, EaselJS)
    and run the following commands in your command environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'After executing these commands, you should obtain a result as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Building the source code](img/0260OS_1_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After installing all dependencies, you have only one step left to build the
    library. Go to the library folder and run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the following result in your command environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Building the source code](img/0260OS_1_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When you see the `Done, without errors` message, you can find your compiled
    file in the `/lib` folder of the library, named `{PROJECT_NAME}-{VERSION}.min.js`,
    for example `easeljs-0.7.0.min.js`. This is exactly same as the files in the CDN
    server. You can link your `script` tag locally to this file and use it.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about options and how to work with them, you can read the
    `README.md` file in the `/build` folder of each library.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned how to set up and prepare CreateJS for different
    environments, because as a programmer, you may want to make changes to CreateJS
    or customize it for yourself. We also discussed using CreateJS for the production
    environment, using CDN servers, and building the source code.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to discuss how to write the first working
    example with CreateJS and how to use the API.
  prefs: []
  type: TYPE_NORMAL
