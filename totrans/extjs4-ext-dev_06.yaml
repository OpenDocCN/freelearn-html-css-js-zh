- en: Chapter 6. Grid Search
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we are going to develop an Ext JS plugin, which will provide
    a search facility within a grid. This plugin was originally developed by Ing.
    Jozef Sakáloš and it is really useful and popular plugin. We will rewrite this
    plugin for the Ext JS 4x Version.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Functional requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning and coding the grid search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We want to develop a plugin, which will help users to search within a grid panel
    through a text field. The plugin will also offer users the option to select or
    deselect the columns of the grid on which they want to apply the searching. There
    will be a clear button to clear the search text. There will be a configuration
    option where users can set the number of characters they want in order to trigger
    the search by typing within the search textbox.
  prefs: []
  type: TYPE_NORMAL
- en: Planning and coding the grid search
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To develop the plugin, we will create a menu where the user can select and
    deselect the columns of the grid, a text field where the user can write their
    search query, and a clear button that will help to clear the search query. At
    first we will develop the required UI fields and then we will add the corresponding
    functionality to those fields. Now let us start coding:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see that we have defined several configuration options and also the
    required `init` function for the plugin. Now let us define the `onRender` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'In this function, first we are trying to get the toolbar by calling the `getToolbar`
    function as we need to render our plugin UI on the toolbar. Then we are creating
    the menu field, which will hold the column selections, and then the search field.
    After this, we will add the menu field and the search field to that toolbar. Now
    let us define the `getToolbar` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: In this function we are looking for a toolbar item, which is docked at the location
    defined in the position configuration option. We will render our plugin UI on
    this returned toolbar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us use this plugin within a grid and the output of the plugin should
    look like the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Planning and coding the grid search](img/3725OS_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'So, now we have our plugin looking exactly the same as the requirement. Now
    let us start adding functionality. First let us modify the `onRender` function
    of our plugin code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see that we have provided the `onTriggerClear` handler for the `onTriggerClick`
    event to clear the search. We need to add and handle some keyboard events: pressing
    the *Enter* key will trigger searching and pressing the *Esc* key will trigger
    clearing the search. So, we need to add the following code after defining the
    trigger field:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now, we need to prepare the menu to load the column names and we will call the
    `initMenu` function to do that. And that's all we needed to do within the `onRender`
    function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us define the `onKeyUp` handler:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let us go ahead with defining the `initMenu` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'You can see how we are preparing the menu for selecting and deselecting the
    columns in the preceding `initMenu` function. Now let us define the `onTriggerClear`
    function, which is responsible for clearing the search query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Next we define the `onTriggerSearch` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to check against the value set for the `mode` configuration option
    and need to provide separate logic if the value is set to `''local''` or if the
    proxy of the store is a server proxy. Now we need to add the following code within
    the `onTriggerSearch` function when the mode is set with `''local''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'And if the value is not set to `local`, we need to check whether the proxy
    is a server proxy or not. And here is the code that we need to add within the
    `onTriggerSearch` function after the `if (''local'' === this.mode)` block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we define the `getDateFormat` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Following is the screenshot of our working plugin:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Planning and coding the grid search](img/3725OS_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can see that our plugin filters data according to the search query.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we've developed an Ext JS plugin to provide searching facility
    within a grid. Now we have a clear idea about how powerful the Ext JS plugins
    are. We can easily use this plugin within a grid and can provide this excellent
    searching feature whenever we need.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter we will go through another useful plugin targeted for text
    components that show a clear button over the text field, and we will see how clicking
    on the button will clear the texts from the text field.
  prefs: []
  type: TYPE_NORMAL
