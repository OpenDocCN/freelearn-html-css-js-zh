["```js\nlet a = 0b00001111;\nlet b = 15;\n\nconsole.log(a === b);\nconsole.log(a);\n```", "```js\ntrue\n15\n```", "```js\nvar a = 017;\nvar b = 15;\n\nconsole.log(a === b);\nconsole.log(a);\n```", "```js\ntrue\n15\n```", "```js\nlet a = 0o17;\nlet b = 15;\n\nconsole.log(a === b);\nconsole.log(a);\n```", "```js\ntrue\n15\n```", "```js\nlet a = 17.0;\nlet b = 1.2;\n\nconsole.log(Number.isInteger(a));\nconsole.log(Number.isInteger(b));\n```", "```js\ntrue\nfalse\n```", "```js\nlet a = \"NaN\";\nlet b = NaN;\nlet c = \"hello\";\nlet d = 12;\n\nconsole.log(Number.isNaN(a));\nconsole.log(Number.isNaN(b));\nconsole.log(Number.isNaN(c));\nconsole.log(Number.isNaN(d));\n\nconsole.log(isNaN(a));\nconsole.log(isNaN(b));\nconsole.log(isNaN(c));\nconsole.log(isNaN(d));\n```", "```js\nfalse\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\nfalse\n```", "```js\nconsole.log(isFinite(10));\nconsole.log(isFinite(NaN));\nconsole.log(isFinite(null));\nconsole.log(isFinite([]));\n\nconsole.log(Number.isFinite(10));\nconsole.log(Number.isFinite(NaN));\nconsole.log(Number.isFinite(null));\nconsole.log(Number.isFinite([]));\n```", "```js\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\n```", "```js\nconsole.log(Number.isSafeInteger(156));\nconsole.log(Number.isSafeInteger('1212'));\nconsole.log(Number.isSafeInteger(Number.MAX_SAFE_INTEGER));\nconsole.log(Number.isSafeInteger(Number.MAX_SAFE_INTEGER + 1));\nconsole.log(Number.isSafeInteger(Number.MIN_SAFE_INTEGER));\nconsole.log(Number.isSafeInteger(Number.MIN_SAFE_INTEGER - 1));\n```", "```js\ntrue\nfalse\ntrue\nfalse\ntrue\nfalse\n```", "```js\nconsole.log(0.1 + 0.2 == 0.3);\nconsole.log(0.9 - 0.8 == 0.1);\nconsole.log(0.1 + 0.2);\nconsole.log(0.9 - 0.8);\n```", "```js\nfalse\nfalse\n0.30000000000000004\n0.09999999999999998\n```", "```js\nfunctionepsilonEqual(a, b)\n{\n  return Math.abs(a - b) <Number.EPSILON;\n}\n\nconsole.log(epsilonEqual(0.1 + 0.2, 0.3));\nconsole.log(epsilonEqual(0.9 - 0.8, 0.1));\n```", "```js\ntrue\ntrue\n```", "```js\nconsole.log(Math.sinh(0));    //hyberbolic sine of a value\nconsole.log(Math.cosh(0));    //hyberbolic cosine of a value\nconsole.log(Math.tanh(0));    //hyberbolic tangent of a value\nconsole.log(Math.asinh(0));  //inverse hyperbolic sine of a value\nconsole.log(Math.acosh(1));  //inverse hyperbolic cosine of a value\nconsole.log(Math.atanh(0));  //inverse hyperbolic tangent of a value\nconsole.log(Math.hypot(2, 2, 1));//Pythagoras theorem\n\n```", "```js\n0\n1\n0\n0\n0\n0\n3\n```", "```js\nconsole.log(Math.log2(16));    //log base 2\nconsole.log(Math.log10(1000)); //log base 10\nconsole.log(Math.log1p(0));    //same as log(1 + value)\nconsole.log(Math.expm1(0));    //inverse of Math.log1p()\nconsole.log(Math.cbrt(8));     //cube root of a value\n```", "```js\n4\n3\n0\n0\n2\n```", "```js\nconsole.log(Math.imul(590, 5000000)); //32-bit integer multiplication\nconsole.log(590 * 5000000); //64-bit floating-point multiplication\n```", "```js\n-1344967296\n2950000000\n```", "```js\nconsole.log(Math.clz32(7));\nconsole.log(Math.clz32(1000));\nconsole.log(Math.clz32(295000000));\n```", "```js\n29\n22\n3\n```", "```js\nconsole.log(Math.sign(11));\nconsole.log(Math.sign(-11));\nconsole.log(Math.sign(0));\n```", "```js\n1\n-1\n0\n```", "```js\nconsole.log(Math.trunc(11.17));\nconsole.log(Math.trunc(-1.112));\n```", "```js\n11\n-1\n```", "```js\nconsole.log(Math.fround(0));\nconsole.log(Math.fround(1));\nconsole.log(Math.fround(1.137));\nconsole.log(Math.fround(1.5));\n```", "```js\n0\n1\n1.1369999647140503\n1.5\n```", "```js\nvar \\u0061 = \"\\u0061\\u0062\\u0063\";\nconsole.log(a); //Output is \"abc\"\n```", "```js\nconsole.log(\"\\uD83D\\uDE91\");\n```", "```js\nconsole.log(\"\\u{1F691}\");\n```", "```js\nconsole.log(\"\\uD83D\\uDE91\".codePointAt(1));\nconsole.log(\"\\u{1F691}\".codePointAt(1));\nconsole.log(\"hello\".codePointAt(2));\n```", "```js\n56977\n56977\n1080\n```", "```js\nconsole.log(String.fromCodePoint(0x61, 0x62, 0x63));\nconsole.log(\"\\u0061\\u0062 \" == String.fromCodePoint(0x61, 0x62));\n```", "```js\nabc\ntrue\n```", "```js\nconsole.log(\"a\".repeat(6));      //Output \"aaaaaa\"\n```", "```js\nvar str = \"Hi, I am a JS Developer\";\nconsole.log(str.includes(\"JS\")); //Output \"true\"\n```", "```js\nvar str = \"Hi, I am a JS Developer\";\nconsole.log(str.includes(\"JS\", 13)); // Output \"false\"\n```", "```js\nvar str = \"Hi, I am a JS Developer\";\nconsole.log(str.startsWith('Hi, I am')); //Output \"true\"\n```", "```js\nvar str = \"Hi, I am a JS Developer\";\nconsole.log(str.startsWith('JS Developer', 11)); //Output \"true\"\n```", "```js\nvar str = \"Hi, I am a JS Developer\";\nconsole.log(str.endsWith(\"JS Developer\"));  //Output \"true\"\nconsole.log(str.endsWith(\"JS\", 13));        //Output \"true\"\n```", "```js\nconsole.log(\"\\u00E9\");  //output 'é'\nconsole.log(\"e\\u0301\"); //output 'é'\n```", "```js\nvar a = \"\\u00E9\";\nvar b = \"e\\u0301\";\n\nconsole.log(a == b);\nconsole.log(a.length);\nconsole.log(b.length);\n\nfor(let i = 0; i<a.length; i++)\n{\n  console.log(a[i]);\n}\n\nfor(let i = 0; i<b.length; i++)\n{\n  console.log(b[i]);\n}\n```", "```js\nfalse\n1\n2\né\né\n```", "```js\nvar a = \"\\u00E9\".normalize();\nvar b = \"e\\u0301\".normalize();\n\nconsole.log(a == b);\nconsole.log(a.length);\nconsole.log(b.length);\n\nfor(let i = 0; i<a.length; i++)\n{\n  console.log(a[i]);\n}\n\nfor(let i = 0; i<b.length; i++)\n{\n  console.log(b[i]);\n}\n```", "```js\ntrue\n1\n1\né\né\n```", "```js\nlet str1 = `hello!!!`; //template string\nlet str2 = \"hello!!!\";\n\nconsole.log(str1 === str2); //output \"true\"\n```", "```js\nVar a = 20;\nVar b = 10;\nVar c = \"JavaScript\";\nVar str = \"My age is \" + (a + b) + \" and I love \" + c;\n\nconsole.log(str);\n```", "```js\nMy age is 30 and I love JavaScript\n```", "```js\nlet a = 20;\nlet b = 10;\nlet c = \"JavaScript\";\nletstr = `My age is ${a+b} and I love ${c}`;\n\nconsole.log(str);\n```", "```js\nMy age is 30 and I love JavaScript\n```", "```js\nlet tag = function(strings, ...values)\n{\n  let result = \"\";\n\n  for(let i = 0; i<strings.length; i++)\n  {\n    result += strings[i];\n\n    if(i<values.length)\n    {\n      result += values[i];\n    }\n  }\n\n  return result;\n};\n\nreturn result;\n};\n\nlet a = 20;\nlet b = 10;\nlet c = \"JavaScript\";\nlet str = tag `My age is ${a+b} and I love ${c}`;\n\nconsole.log(str);\n```", "```js\nMy age is 30 and I love JavaScript\n```", "```js\nconsole.log(\"1\\n2\\n3\");\n```", "```js\n1\n2\n3\n```", "```js\nconsole.log(`1\n2\n3`);\n```", "```js\n1\n2\n3\n```", "```js\nlet s = String.raw `xy\\n${ 1 + 1 }z`;\nconsole.log(s);\n```", "```js\nxy\\n2z\n```", "```js\nlet tag = function(strings, ...values)\n{\n    return strings.raw[0]\n};\n\nletstr = tag `Hello \\n World!!!`;\n\nconsole.log(str);\n```", "```js\nHello \\n World!!!\n```", "```js\nletstr = \"0123\";\nletobj = {number: 1};\nletarr = Array.from(str, function(value){\n    return parseInt(value) + this.number;\n}, obj);\n\nconsole.log(arr);\n```", "```js\n1, 2, 3, 4\n```", "```js\nlet arr1 = new Array(2);\nlet arr2 = new Array.of(2);\n\nconsole.log(arr1[0], arr1.length);\nconsole.log(arr2[0], arr2.length);\n```", "```js\nundefined 2\n2 1\n```", "```js\nlet arr1 = [1, 2, 3, 4];\nlet arr2 = [1, 2, 3, 4];\nlet arr3 = [1, 2, 3, 4];\nlet arr4 = [1, 2, 3, 4];\nlet arr5 = [1, 2, 3, 4];\n\narr1.fill(5);\narr2.fill(5, 1, 2);\narr3.fill(5, 1, 3);\narr4.fill(5, -3, 2);\narr5.fill(5, 0, -2);\n\nconsole.log(arr1);\nconsole.log(arr2);\nconsole.log(arr3);\nconsole.log(arr4);\nconsole.log(arr5);\n```", "```js\n5,5,5,5\n1,5,3,4\n1,5,5,4\n1,5,3,4\n5,5,3,4\n```", "```js\nvar x = 12;\nvar arr = [11, 12, 13];\nvar result = arr.find(function(value, index, array){\n    if(value == this)\n    {\n        return true;\n    }\n}, x);\n\nconsole.log(result); //Output \"12\"\n```", "```js\nlet x = 12;\nlet arr = [11, 12, 13];\nlet result = arr.findIndex(function(value, index, array){\n    if(value == this)\n    {\n        return true;\n    }\n}, x);\n\nconsole.log(result); Output \"1\"\n```", "```js\nlet arr1 = [1, 2, 3, 4, 5];\nlet arr2 = [1, 2, 3, 4, 5];\nlet arr3 = [1, 2, 3, 4, 5];\nlet arr4 = [1, 2, 3, 4, 5];\n\narr1.copyWithin(1, 2, 4);\narr2.copyWithin(0, 1);\narr3.copyWithin(1, -2);\narr4.copyWithin(1, -2, -1);\n\nconsole.log(arr1);\nconsole.log(arr2);\nconsole.log(arr3);\nconsole.log(arr4);\n```", "```js\n1,3,4,4,5\n2,3,4,5,5\n1,4,5,4,5\n1,4,3,4,5\n```", "```js\nlet arr = ['a', 'b', 'c'];\nlet entries = arr.entries();\nlet keys = arr.keys();\nlet values = arr.values();\n\nconsole.log(...entries);\nconsole.log(...keys);\nconsole.log(...values);\n```", "```js\n0,a 1,b 2,c\n0 1 2\na b c\n```", "```js\nlet buffer = new ArrayBuffer(80); //80 bytes size\n```", "```js\nlet buffer = new ArrayBuffer(80);\nlet view = new DataView(buffer);\n\nview.setInt32(8,22,false);\n\nvar number = view.getInt32(8,false);\n\nconsole.log(number); //Output \"22\"\n```", "```js\nvar buffer = new ArrayBuffer(80);\nvartyped_array = new Float64Array(buffer);\ntyped_array[4] = 11;\n\nconsole.log(typed_array.length);\nconsole.log(typed_array[4]);\n```", "```js\n10\n11\n```", "```js\nlet set1 = new Set();\nlet set2 = new Set(\"Hello!!!\");\n```", "```js\nlet set = new Set(\"Hello!!!\");\n\nset.add(12); //add 12\n\nconsole.log(set.has(\"!\")); //check if value exists\nconsole.log(set.size);\n\nset.delete(12); //delete 12\n\nconsole.log(...set);\n\nset.clear(); //delete all values\n```", "```js\ntrue\n6\nH e l o !\n```", "```js\nletweakset = new WeakSet();\n\n(function(){\n  let a = {};\n  weakset.add(a);\n})()\n\n//here 'a' is garbage collected from weakset\nconsole.log(weakset.size); //output \"undefined\"\nconsole.log(...weakset); //Exception is thrown\n\nweakset.clear(); //Exception, no such function\n```", "```js\nlet map = new Map();\nlet o = {n: 1};\n\nmap.set(o, \"A\"); //add\nmap.set(\"2\", 9);\n\nconsole.log(map.has(\"2\")); //check if key exists\nconsole.log(map.get(o)); //retrieve value associated with key\nconsole.log(...map);\n\nmap.delete(\"2\"); //delete key and associated value\nmap.clear(); //delete everything\n\n//create a map from iterable object\nlet map_1 = new Map([[1, 2], [4, 5]]);\n\nconsole.log(map_1.size); //number of keys\n```", "```js\ntrue\nA\n[object Object],A 2,9\n2\n```", "```js\nlet weakmap = new WeakMap();\n\n(function(){\n  let o = {n: 1};\n  weakmap.set(o, \"A\");\n})()\n\n//here 'o' key is garbage collected\nlet s = {m: 1};\n\nweakmap.set(s, \"B\");\n\nconsole.log(weakmap.get(s));\nconsole.log(...weakmap); //exception thrown\n\nweakmap.delete(s);\nweakmap.clear(); //Exception, no such function\n\nlet weakmap_1 = new WeakMap([[{}, 2], [{}, 5]]);   //this works\n\nconsole.log(weakmap_1.size); //undefined\n```", "```js\n//In ES5\nvar x = {x: 12};\nvar y = Object.create(x, {y: {value: 13}});\n\nconsole.log(y.x); //Output \"12\"\nconsole.log(y.y); //Output \"13\"\n\n//In ES6\nlet a = {a: 12, __proto__: {b: 13}};\nconsole.log(a.a); //Output \"12\"\nconsole.log(a.b); //Output \"13\"\n```", "```js\nconsole.log(Object.is(0, -0));\nconsole.log(0 === -0);\nconsole.log(Object.is(NaN, 0/0));\nconsole.log(NaN === 0/0);\nconsole.log(Object.is(NaN, NaN));\nconsole.log(NaN ===NaN);\n```", "```js\nfalse\ntrue\ntrue\nfalse\ntrue\nfalse\n```", "```js\nlet x = {x: 12};\nlet y = {y: 13};\n\nObject.setPrototypeOf(y, x)\n\nconsole.log(y.x); //Output \"12\"\nconsole.log(y.y); //Output \"13\"\n```", "```js\nlet x = {x: 12};\nlet y = {y: 13, __proto__: x};\nlet z = {z: 14, get b() {return 2;}, q: {}};\n\nObject.defineProperty(z, \"z\", {enumerable: false});\n\nlet m = {};\n\nObject.assign(m, y, z);\n\nconsole.log(m.y);\nconsole.log(m.z);\nconsole.log(m.b);\nconsole.log(m.x);\nconsole.log(m.q == z.q);\n```", "```js\n13\nundefined\n2\nundefined\ntrue\n```"]