["```js\n> cd init\n> npm install\n> cd vuejs-firebase-shopping-cart/\n> npm install\n> npm run build\n> npm run serve\n```", "```js\n> cd vuejs-firebase-shopping-cart \n> npm run build\n> npm run serve\n```", "```js\nDONE  Compiled successfully in 5523ms                     \n1:42:33 PM\n  App running at:\n  - Local:   http://localhost:8080/ \n  - Network: http://192.168.86.64:8080/\n  Note that the development build is not optimized.\n  To create a production build, run npm run build.\n```", "```js\nnpm test\n```", "```js\n> mocha --timeout 30000 --reporter=list\n   Login Page Should have the right title: 3ms\n  1 passing (875ms)\n```", "```js\nconst browser = await puppeteer.launch({ headless: false });\n```", "```js\nPUPPETEER_PRODUCT=firefox npm install puppeteer@7.0.0\n```", "```js\nbrowser = await puppeteer.launch({ product: 'firefox' });\n```", "```js\nmodule.exports = ({\n    local: {\n        baseURL: 'http://localhost:8080/',\n        launchOptions: { headless: false }\n    },\n})[process.env.TESTENV || 'local'];\n```", "```js\nbefore(async() => {\n    browser = await puppeteer.launch(config.launchOptions);\n});\n```", "```js\nit('It should persist the user', async() => {\n    const userDataDir = fs.mkdtempSync('profile');\n    const options = config.launchOptions;\n    options.userDataDir = userDataDir;\n    let persistentBrowser = await puppeteer.launch(options);\n    let persistentPage = await persistentBrowser.newPage();\n    let loginModel = new LoginPageModel(persistentPage, config);\n    await loginModel.go();\n    (await loginModel.logState()).should.equal('Login');\n    await loginModel.login(config.username, config.password);\n    (await loginModel.logState()).should.equal('Logout');\n    await persistentBrowser.close();\n    persistentBrowser = await puppeteer.launch(options);\n    persistentPage = await persistentBrowser.newPage();\n    loginModel = new LoginPageModel(persistentPage, config);\n    await loginModel.go();\n    (await loginModel.logState()).should.equal('Logout');\n\n    await persistentBrowser.close();\n    deleteFolderRecursive(userDataDir);\n});\n```", "```js\nawait this.page.goto(this.config.baseURL + 'login');\n```", "```js\nlocal: {\n    baseURL: 'http://localhost:8080/',\n    timeout: 5000,\n},\n```", "```js\npage.setDefaultTimeout(config.timeout);\n```", "```js\nit('Should redirect to the login page', async() => {\n  const response = await pageModel.go();\n  response.status().should.oneOf([200, 304]);\n  response.url().should.contain('login');\n});\n```", "```js\nit('Should redirect to the login page', async() => {\n  const response = await pageModel.go();\n  response.status().should.equal(200);\n  response.url().should.contain('login');\n  response.request().redirectChain()[0].response().status().should.equal(302);\n  response.request().redirectChain()[0].response().url().should.contain('admin');\n});\n```", "```js\n> git clone https://github.com/kblok/ch3-demo.git\n> cd ch3-demo\n```", "```js\n> git add .\n> git commit -m \"First commit\"\n> git push origin\n```", "```js\nname: CI\non:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\njobs:\n  test:\n    name: Test\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@master\n    - name: Install Web Dependencies\n      working-directory: ./vuejs-firebase-shopping-cart\n      run: npm install\n    - name: Install Test Dependencies\n      env:\n        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'\n      run: npm install\n    - name: Run Site Test Code\n      uses: mujo-code/puppeteer-headful@master\n      env:\n        TESTENV: 'CI'\n        CI: 'true'\n      with:\n        args: sh ./.github/workflows/test.sh\n```", "```js\n    cd ./vuejs-firebase-shopping-cart\n    npm run serve & npx wait-on http://localhost:8080\n    cd ..\n    npm test\n    ```", "```js\nCI: {\n        baseURL : 'http://localhost:8080/',\n        username: 'admin@gmail.com',\n        password: 'admin',\n        launchOptions: { \n            executablePath: process.env.PUPPETEER_EXEC_PATH,\n            headless: true,\n            args: ['--no-sandbox'],\n        },\n        timeout: 5000,\n    },\n```"]