["```js\nGET: /category\nAccepts: N/A\nReturns: [{\"id\":1,\"name\":\"Pilsner\"},{\"id\":2,\"name\":\"IPA\"}]\n```", "```js\nGET: /product\nAccepts:\nsort = [{\"property\":\"id\",\"direction\":\"ASC\"}]\nfilter = [{\"property\":\"categoryId\",\"value\":2}]\nReturns: [{\"id\":1,\"name\":\"Sierra Nevada Torpedo Extra IPA\",\"price\":\"19.99\", \"imagePath\":\"snte1.jpg\"}]\n```", "```js\nGET: /product/:id\nAccepts: N/A\nReturns: { \"id\": 1, <all product fields omitted> }\n```", "```js\nAlcohology.model.Product: extends Alcohology.model.BaseModel\n- id\n- name\n- imagePath\n- description\n- price\n- previousPrice\n- brewery\n- features\n- categoryId\n\nAlcohology.model.Category: extends Alcohology.model.BaseModel\n- id\n- name\n```", "```js\nAlcohology.model.CartItem: extends Alcohology.model.BaseModel\n- productId\n- productName\n- price\n- quantity\n```", "```js\nAlcohology.model.Order: extends Alcohology.model.BaseModel\n- date\n- totalCost\n- items[]\n    - productId\n    - productName\n    - price\n    - quantity\n```", "```js\nAlcohology.store.Cart: extends Ext.data.Store\n- addProduct\n- toOrder\n```", "```js\nAlcohology.view.categories.CategoriesController: extends Ext.app.ViewController\n- onItemClick\n```", "```js\nAlcohology.view.product.ProductController: extends \nExt.app.ViewController\n- onSortSelect\n- onCategoryRoute\n- onProductRoute\n- onProductClick\n- onProductClose\n- onAddToCart\n\n```", "```js\nAlcohology.view.main.MainController: extends Ext.app.ViewController\n- onLoginRequired\n- onCartClick\n- onAccountClick\n- onAccountRoute\n- onCartRoute\n\n```", "```js\nAlcohology.view.cart.CartController: extends \nExt.app.ViewController\n- onCartClose\n- onOrderNow\n\n```", "```js\nAlcohology.view.account.AccountController: extends \nExt.app.ViewController\n- onAccountClose\n- onLoginRegister\n\n```", "```js\n// app/model/BaseModel.js\nExt.define('Alcohology.model.BaseModel', {\n    extend: 'Ext.data.Model',\n\n    schema: {\n        namespace: 'Alcohology.model',\n        urlPrefix: 'http://localhost:3000',\n        proxy: {\n            type: 'rest',\n            url: '{prefix}/{entityName:uncapitalize}'\n        }\n    }\n});\n```", "```js\n// app/model/CartItem.js\nExt.define('Alcohology.model.CartItem', {\n    extend: 'Alcohology.model.BaseModel',\n    fields: [\n        { name: 'productId' },\n        { name: 'productName' },\n        { name: 'price' },\n        { name: 'quantity' }\n    ]\n});\n\n// app/model/Category.js\nExt.define('Alcohology.model.Category', {\n    extend: 'Alcohology.model.BaseModel',\n    fields: [\n        { name: 'id', type: 'integer'}\n    ]\n});\n\n// app/model/Order.js\nExt.define('Alcohology.model.Order', {\n    extend: 'Alcohology.model.BaseModel',\n    fields: [\n        { name: 'date', type: 'date' },\n        { name: 'items', type: 'auto' }\n    ]\n});\n\n// app/model/Product.js\nExt.define('Alcohology.model.Product', {\n    extend: 'Alcohology.model.BaseModel',\n fields: [\n        { name: 'id', type: 'integer'},\n        { name: 'name', type: 'string' },\n        { name: 'imagePath', type: 'string' }\n    ]\n});\n```", "```js\n// app/store/Categories.js\nExt.define('Alcohology.store.Categories', {\n    extend: 'Ext.data.Store',\n    model: 'Alcohology.model.Category',\n    alias: 'store.categories'\n});\n\n// app/store/PastOrders.js\nExt.define('Alcohology.store.PastOrders', {\n    extend: 'Ext.data.Store',\n    model: 'Alcohology.model.Order',\n    alias: 'store.pastorders'\n});\n\n// app/store/Products.js\nExt.define('Alcohology.store.Products', {\n    extend: 'Ext.data.Store',\n    model: 'Alcohology.model.Product',\n    alias: 'store.products'\n});\n```", "```js\n// app/store/Cart.js\nExt.define('Alcohology.store.Cart', {\n    extend: 'Ext.data.Store',\n    model: 'Alcohology.model.CartItem',\n    alias: 'store.cart',\n\n    addProduct: function(product) {\n        // find a product with a matching ID\n        var item = this.findRecord('productId', product.getId());\n\n        if(item) {\n            item.set('quantity', item.get('quantity') + 1);\n            item.commit();\n        } else {\n            item = this.add({\n                productName: product.get('name'),\n                price: product.get('price'),\n                productId: product.getId(),\n                quantity: 1\n            });\n        }\n\n        return item;\n    },\n\n    toOrder: function() {\n        var items = [], total = 0;\n\n        this.each(function(item) {\n            items.push({\n                name: item.get('productName'),\n                quantity: item.get('quantity')\n            });\n\n            total += item.get('price') * item.get('quantity');\n        });\n\n        return Ext.create('Alcohology.model.Order', {\n            date: new Date(), items: items, total: total\n        });\n    }\n});\n```", "```js\n// app/view/main/Main.js\nExt.define('Alcohology.view.main.Main', {\n    extend: 'Ext.Panel',\n    xtype: 'app-main',\n\n    controller: 'main',\n    viewModel: 'main',\n    layout: 'border',\n\n    header: { xtype: 'app-header' },\n    items: [\n        { xtype: 'categories', width: 200, region: 'west' },\n        { xtype: 'product-list', region: 'center' }\n    ],\n\n    initComponent: function() {\n        this.callParent(arguments);\n\n        this.add(Ext.create('Alcohology.view.cart.Cart', {\n            reference: 'cartWindow'\n        }));\n\n        this.add(Ext.create('Alcohology.view.account.Account', {\n            reference: 'accountWindow'\n        }));\n    }\n});\n```", "```js\n// app/view/header/Header.js\nExt.define('Alcohology.view.header.Header', {\n    extend: 'Ext.panel.Header',\n    xtype: 'app-header',\n    cls: 'app-header',\n    layout: 'hbox',\n    title: 'alcohology.',\n    items: [\n        { xtype: 'account-indicator', width: 80, bind: '{currentUser}' },\n        bind: { data: { count: '{cartCount}' } }}\n    ]\n});\n```", "```js\n// app/view/header/MiniCart.js\nExt.define('Alcohology.view.header.MiniCart', {\n    extend: 'Alcohology.ux.ClickContainer',\n    xtype: 'minicart',\n    cls: 'mini-cart',\n    tpl: new Ext.Template('<span style=\"font-family:FontAwesome;\">',\n        '&#xf07a;</span> {count} items')\n});\n```", "```js\n// app/ux/ClickContainer.js\nExt.define('Alcohology.ux.ClickContainer', {\n    extend: 'Ext.Container',\n    xtype: 'clickcontainer',\n    listeners: {\n        'afterrender': function(me) {\n            me.getEl().on('click', function() {\n                me.fireEvent('click');\n            });\n        }\n    }\n});\n```", "```js\n// app/view/header/AccountIndicator.js\nExt.define('Alcohology.view.header.AccountIndicator', {\n    extend: 'Alcohology.ux.ClickContainer',\n    xtype: 'account-indicator',\n    cls: 'account-indicator',\n    config: {\n        user: null\n    },\n    defaultBindProperty: 'user',\n    data: {\n        label: 'Login'\n    },\n    tpl: '<span style=\"font-family:FontAwesome;\">ï€‡</span> {label}',\n\n    applyUser: function(user) {\n        if(user) {\n            this.setData({ label: user.email });\n        }\n    }\n});\n```", "```js\n// app/view/main/MainController.js\nExt.define('Alcohology.view.main.MainController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.main',\n\n    listen: {\n        component: {\n            'component[cls=\"mini-cart\"]': { click: 'onCartClick' },\n            'component[cls=\"account-indicator\"]': { click: 'onAccountClick' },\n        },\n\n        controller: { '*': { loginrequired: 'onLoginRequired' } }\n    },\n\n    routes: {\n        'account': 'onAccountRoute',\n        'cart': 'onCartRoute'\n    },\n\n    onLoginRequired: function() {\n        Ext.toast('Please login or register.');\n        this.redirectTo('account', true);\n    },\n\n    onCartClick: function() {\n        this.redirectTo('cart', true);\n    },\n\n    onAccountClick: function() {\n        this.redirectTo('account', true);\n    },\n\n    onAccountRoute: function() {\n        this.lookupReference('accountWindow').show();\n    },\n\n    onCartRoute: function() {\n        this.lookupReference('cartWindow').show();\n    }\n});\n```", "```js\n// app/view/main/MainModel.js\nExt.define('Alcohology.view.main.MainModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.main',\n\n    stores: {\n        cart: { type: 'cart' },\n        orders: { type: 'pastorders'}\n    },\n\n    data: {\n        cartCount: 0\n    },\n\n    constructor: function() {\n        var me = this;\n\n        me.callParent(arguments);\n\n        me.get('cart').on('datachanged', function(store) {\n            me.set('cartCount', store.count());\n        });\n    }\n});\n```", "```js\n// app/view/categories/Categories.js\nExt.define('Alcohology.view.categories.Categories', {\n    extend: 'Ext.grid.Panel',\n    xtype: 'categories',\n    controller: 'categories',\n    viewModel: 'categories',\n    bodyCls: 'categories-body',\n    requires: [\n        'Alcohology.view.categories.CategoriesModel',\n        'Alcohology.view.categories.CategoriesController'\n    ],\n    bind: {\n        store: '{categories}'\n    },\n hideHeaders: true,\n    viewConfig: {\n        trackOver: false\n    },\n    columns: [\n        { text: 'Name',  dataIndex: 'name', flex: 1 }\n    ]\n});\n```", "```js\n// app/view/categories/CategoriesController.js\nExt.define('Alcohology.view.categories.CategoriesController', {\n  extend: 'Ext.app.ViewController',\n  alias: 'controller.categories',\n  listen: {\n    component: {\n      'categories': { 'itemclick': 'onItemClick' }\n    }\n  },\n\n  onItemClick: function(view, record) {\n    this.redirectTo('category/' + record.getId());\n  }\n});\n```", "```js\n// app/view/categories/CategoriesModel.js\nExt.define('Alcohology.view.categories.CategoriesModel', {\n    extend: 'Ext.app.ViewModel',\n    requires: ['Alcohology.store.Categories'],\n    alias: 'viewmodel.categories',\n    stores: {\n        categories: {\n            type: 'categories',\n            autoLoad: true\n        }\n    }\n});\n```", "```js\n// app/view/product/List.js\nExt.define('Alcohology.view.product.List', {\n    extend: 'Ext.Panel',\n    controller: 'product',\n    xtype: 'product-list',\n    cls: 'product-list',\n    viewModel: 'product',\n    tbar: [\n        {\n            xtype: 'combo',\n            store: Ext.create('Ext.data.Store', {\n                fields: ['text', 'field', 'direction'],\n                data : [\n                    { text: 'Date Added', property: 'id', direction: 'DESC' },\n                    { text: 'Name A-Z', property: 'name', direction: 'ASC' },\n                    { text: 'Name Z-A', property: 'name', direction: 'DESC' },\n                    { text: 'Price ASC', property: 'price', direction: 'ASC' }\n                ]\n            }),\n            displayField: 'text',\n            queryMode: 'local',\n            fieldLabel: 'Sort By',\n            emptyText: 'None',\n            editable: false\n        }\n    ],\n    items: [\n        { \n            xtype: 'dataview', itemId: 'productListView', \n            emptyText: '<span class=\"empty\">No Products Found.</span>',\n            itemSelector: '.product', bind: '{products}',\n            tpl: '<tpl for=\".\"><div class=\"product\"><h2>{name}</h2><img src=\"img/{imagePath}-thumb.jpg\" /><p>&pound;{price}</p></div></tpl>',\n        }\n    ],\n\n    constructor: function() {\n        this.callParent(arguments);\n\n        this.add(Ext.create('Alcohology.view.product.Detail', {\n            reference: 'productWindow'\n        }));\n    }\n});\n```", "```js\n// app/view/product/Detail.js\nExt.define('Alcohology.view.product.Detail', {\n    extend: 'Ext.Window',\n    modal: true,\n    header: false,\n    resizable: false,\n    autoScroll: true,\n    height: 600,\n    width: 800,\n    layout: 'column',\n    cls: 'product-detail',\n    items: [\n        {\n            xtype: 'container',\n            columnWidth: 0.5,\n            defaults: {\n                xtype: 'component',\n                bind: { data: '{currentProduct}' }\n            },\n            items: [\n                { \n                    xtype: 'container', \n                    tpl: '<img src=\"img/{imagePath}-thumb.jpg\" />' \n                },\n                { tpl: '<ul><li>{features}</li></ul>' }\n            ]\n        },\n        {\n            xtype: 'container',\n            columnWidth: 0.5,\n            defaults: {\n                xtype: 'component',\n                bind: { data: '{currentProduct}' }\n            },\n            items: [\n                { tpl: new Ext.Template('<h1>{name}</h1>',\n                    '<h2 class=\"brewery\">{brewery}</h2>',\n                    '<h2><p class=\"price\">&pound;{price}</p>',\n                    '<p class=\"previousPrice\">Was: &pound;{previousPrice}</p>',\n                    '</h2>') },\n                { tpl: '<div class=\"description\">{description}</div>' }\n            ]\n        }\n    ],\n\n    bbar: [\n        { text: 'Back', itemId: 'close', glyph: 0xf190 },\n        '->',\n        { text: 'Add to Cart', itemId: 'addToCart', glyph: 0xf07a }\n    ]\n});\n```", "```js\n// app/view/product/ProductController.js\nExt.define('Alcohology.view.product.ProductController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.product',\n    listen: {\n        component: {\n            '#productListView': { 'itemclick': 'onProductClick' },\n            '#close': { 'click': 'onProductClose' },\n            '#addToCart': { 'click': 'onAddToCart' },\n            'combo': { 'select': 'onSortSelect' }\n        }\n    },\n\n    routes : {\n        'product/:id': 'onProductRoute',\n        'category/:id': 'onCategoryRoute'\n    },\n\n    onSortSelect: function(combo, records) {\n        if(records.length > 0) {\n            var prop = records[0].get('property'),\n                dir = records[0].get('direction');\n\n            this.getViewModel().set('sortProperty', prop);\n            this.getViewModel().set('sortDirection', dir);\n        }\n    },\n\n    onCategoryRoute: function(id) {\n        var cfg = { reference: 'Alcohology.model.Category', id: id };\n        this.getViewModel().linkTo('currentCategory', cfg);\n        this.lookupReference('productWindow').hide();\n    },\n\n    onProductRoute: function(id) {\n        var cfg = { reference: 'Alcohology.model.Product', id: id };\n        this.getViewModel().linkTo('currentProduct',  cfg);\n        this.lookupReference('productWindow').show();\n    },\n\n    onProductClick: function(view, record, el) {    \n        this.redirectTo('product/' + record.getId());\n    },\n\n    onProductClose: function() {\n        var id = this.getViewModel().get('currentCategory').getId();\n        this.redirectTo('category/' + id);\n    },\n\n    onAddToCart: function() {\n        var product = this.getViewModel().get('currentProduct');\n\n        this.getViewModel().get('cart').addProduct(product);\n\n        Ext.toast('Product Added');\n    }\n});\n```", "```js\n// app/view/product/ProductModel.js\nExt.define('Alcohology.view.product.ProductModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.product',\n    links: {\n        currentCategory: {\n            type: 'Alcohology.model.Category',\n            id: 1\n        }\n    },\n    data: {\n        sortProperty: 'id',\n        sortDirection: 'ASC'\n    },\n    stores: {\n        products: {\n            type: 'products',\n            autoLoad: true,\n            remoteFilter: true,\n            remoteSort: true,\n            sorters: [{\n                property: '{sortProperty}',\n                direction: '{sortDirection}'\n            }],\n            filters: [{\n                property: 'categoryId',\n                value: '{currentCategory.id}'\n            }]\n        }\n    }\n});\n```", "```js\n// app/view/cart/Cart.js\nExt.define('Alcohology.view.cart.Cart', {\n    extend: 'Ext.Window',\n    requires: ['Alcohology.view.cart.CartController'],\n    controller: 'cart',\n    width: 500,\n    height: 350,\n    modal: true,\n    resizable: false,\n    header: false,\n    onEsc: Ext.emptyFn,\n    layout: 'fit',\n    items: [\n        {\n            xtype: 'grid',\n            bind: '{cart}',\n            plugins: {\n                ptype: 'cellediting',\n                clicksToEdit: 1\n            },\n            listeners: {\n                edit: function(editor, e) {\n                    e.record.commit();\n                }\n            },\n            hideHeaders: true,\n            emptyText: 'No items in the cart.',\n            columns: [\n                { name: 'Product', dataIndex: 'productName', flex: 1 },\n                {\n                    name: 'Quantity', dataIndex: 'quantity',\n                    editor: {\n                        xtype: 'numberfield',\n                        allowBlank: false\n                    }\n                }\n            ]\n        }\n    ],\n    bbar: [\n        '->',\n        { text: 'Close', itemId: 'closeCart' },\n        { text: 'Order Now', itemId: 'orderNow' }\n    ]\n});\n```", "```js\n// app/view/cart/CartController.js\nExt.define('Alcohology.view.cart.CartController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.cart',\n    listen: {\n        component: {\n            '#closeCart': { click: 'onCartClose' },\n            '#orderNow': { click: 'onOrderNow' }\n        }\n    },\n\n    onCartClose: function() {\n        this.getView().hide();\n    },\n\n    onOrderNow: function() {\n        var vm = this.getViewModel();\n\n        if(!vm.get('currentUser')) {\n            this.fireEvent('loginrequired');\n        } else {\n               var order = vm.get('cart').toOrder();\n\n            vm.get('cart').removeAll();\n            vm.get('orders').add(order);\n\n            Ext.toast('Order Accepted!');\n\n            this.getView().hide();\n        }\n    }\n});\n```", "```js\n// app/view/account/Account.js\nExt.define('Alcohology.view.account.Account', {\n    extend: 'Ext.Window',\n    xtype: 'account',\n    layout: 'fit',\n    controller: 'account',\n    modal: true,\n    resizable: false,\n    header: false,\n    onEsc: Ext.emptyFn,\n    width: 800,\n    autoHeight: true,\n    frame: true,\n    items: [\n        {\n            xtype: 'container',\n            layout: 'column',\n            items: [\n                { xtype: 'login', title: 'Login', columnWidth: 0.5 },\n                { xtype: 'register', title: 'Register', columnWidth: 0.5 }\n            ],\n            bind: { hidden: '{currentUser}' }\n        },\n        {\n            xtype: 'container',\n            layout: 'column',\n            items: [\n                { xtype: 'register', title: 'Register', columnWidth: 0.5 },\n                {\n                    xtype: 'panel',  title: 'Past Orders',\n                    columnWidth: 0.5, items: [\n                        { xtype: 'pastorders', bind: '{orders}' }\n                    ]\n                }\n            ],\n            bind: { hidden: '{!currentUser}' }\n        }\n    ],\n    bbar: [\n        '->',\n        { text: 'Close', itemId: 'close' },\n        {\n            text: 'Login/Register', itemId: 'loginRegister',\n            bind: { hidden: '{currentUser}' }\n        }\n    ]\n});\n```", "```js\n// app/view/account/Login.js\nExt.define('Alcohology.view.account.Login', {\n    extend: 'Ext.FormPanel',\n    xtype: 'login',\n    items: [\n        { \n            xtype: 'fieldset', margin: 10, padding: 10,\n            defaults: { xtype: 'textfield', width: '100%' },\n            items: [\n                { fieldLabel: 'Email', bind: '{email}', vtype: 'email' },\n                { fieldLabel: 'Password', inputType: 'password' }\n            ]\n        },\n        {\n            xtype: 'container',\n            padding: 10,\n            html: 'If you've already got an Alcohology account,please enter your login details above. If not, please complete the registration form and join us!'\n        }\n    ]\n});\n```", "```js\n// app/view/account/Register.js\nExt.define('Alcohology.view.account.Register', {\n    extend: 'Ext.FormPanel',\n    xtype: 'register',\n    defaultType: 'textfield',\n    items: [\n        {\n            xtype: 'fieldset', margin: 10, padding: 10,\n            defaults: { xtype: 'textfield', width: '100%' },\n            items: [\n                { fieldLabel: 'Email', bind: '{email}', vtype: 'email' },\n                { fieldLabel: 'Password', inputType: 'password' }\n            ]\n        },\n        {\n            xtype: 'fieldset', margin: 10, padding: 10,\n            defaults: { xtype: 'textfield', width: '100%' },\n            items: [\n                { fieldLabel: 'House Number' },\n                { fieldLabel: 'Street' },\n                { fieldLabel: 'Town' },\n                { fieldLabel: 'County' },\n                { fieldLabel: 'Postcode' }\n            ]\n        }\n    ]\n});\n```", "```js\n// app/view/account/PastOrders.js\nExt.define('Alcohology.view.account.PastOrders', {\n    extend: 'Ext.DataView',\n    xtype: 'pastorders',\n    tpl: new Ext.XTemplate('<tpl for=\".\"><div class=\"past-order\">',\n        '<h3>Ordered on {date:date(\"m F Y\")}</h3>',\n        '<ul><tpl for=\"items\">{name} x {quantity}</tpl></ul>',\n        '<p>Total: &pound;{total}</p></div></tpl>'),\n    itemSelector: '.fake',\n    emptyText: 'No Previous Orders.'\n});\n```", "```js\n// app/view/account/AccountController.js\nExt.define('Alcohology.view.account.AccountController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.account',\n    listen: {\n        component: {\n            '#close': { click: 'onAccountClose' },\n            '#loginRegister': { click: 'onLoginRegister' }\n        }\n    },\n\n    onAccountClose: function(btn) {\n        this.getView().hide();\n    },\n\n    onLoginRegister: function() {\n        this.getViewModel().set('currentUser', {\n            email: this.getViewModel().get('email')\n        });\n\n        this.getView().hide();\n    }\n});\n```"]