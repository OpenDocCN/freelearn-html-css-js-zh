["```js\n    var second = function() {};\n    console.log(second.name);\n    // \"second\"\n    var myArray = new Array(3);\n    myArray[1] = function() {};\n    console.log(myArray[1].name);\n    // \"\"\n    ```", "```js\n    const myCounter = (function myCounter(initialValue =\n      0) {\n      let count = initialValue;\n      return function () {\n        count++;\n        return count;\n      };\n    })(77);\n    console.log(myCounter()); // 78\n    console.log(myCounter()); // 79\n    console.log(myCounter()); // 80\n    ```", "```js\n    const sum3 = new Function(\n      \"x\",\n      \"y\",\n      \"z\",\n      \"const t = x+y+z; return t;\"\n    );\n    sum3(4, 6, 7); // 17\n    ```", "```js\nconst f1 = (x: number, y: number, z: number): number =>\n  x + y + z;\nconst f2 = (x: number, y: number, z: number): number => {\n  return x + y + z;\n};\n```", "```js\nfunction ShowItself1(identity: string) {\n  this.identity = identity;\n  setTimeout(function () {\n    console.log(this.identity);\n  }, 1000);\n}\nvar x = new ShowItself1(\"Functional\");\n// after one second, undefined is displayed, not Functional\n```", "```js\n// continued...\nfunction ShowItself2(identity: string) {\n  this.identity = identity;\n  const that = this;\n  setTimeout(function () {\n    console.log(that.identity);\n  }, 1000);\n  setTimeout(\n    function () {\n      console.log(this.identity);\n    }.bind(this),\n    2000\n  );\n  setTimeout(() => {\n    console.log(this.identity);\n  }, 3000);\n}\nconst x2 = new ShowItself2(\"JavaScript\");\n// after one second, \"JavaScript\"\n// after another second, the same\n// after yet another second, once again\n```", "```js\n// once.ts\nconst once = <FNType extends (...args: any[]) => any>(\n  fn: FNType\n) => {\n  let done = false;\n  return ((...args: Parameters<FNType>) => {\n    if (!done) {\n      done = true;\n      return fn(...args);\n    }\n  }) as FNType;\n};\n```", "```js\nfunction useArguments() {\n  …\n  var myArray = Array.prototype.slice.call(arguments);\n  somethingElse.apply(null, myArray);\n  …\n}\n```", "```js\nfunction useArguments2(...args) {\n  …\n  somethingElse(...args);\n  …\n}\n```", "```js\n// sum3.ts\nconst altSum3 = (x: number) => (y: number) => (z: number)\n  =>\n    x + y + z;\n```", "```js\naltSum3(1)(2)(3); // 6\n```", "```js\nconst fn1 = altSum3(1);\nconst fn2 = fn1(2);\nconst fn3 = fn2(3);\n```", "```js\nconst fn1 = y => z => 1 + y + z;\n```", "```js\nconst fn2 = z => 1 + 2 + z;\n```", "```js\nfunction xyzzy(...) { ... }\n```", "```js\nvar xyzzy = function(...) { ... }\n```", "```js\n// reducer.ts\nfunction doAction(\n  state = initialState,\n  action = emptyAction\n) {\n  const newState: State = {};\n  switch (action?.type) {\n    case \"CREATE\":\n      // update state, generating newState,\n      // depending on the action data\n      // to create a new item\n      return newState;\n    case \"DELETE\":\n      // update state, generating newState,\n      // after deleting an item\n      return newState;\n    case \"UPDATE\":\n      // update an item,\n      // and generate an updated state\n      return newState;\n    default:\n      return state;\n  }\n}\n```", "```js\n// continued...\nconst dispatchTable = {\n  CREATE: (state, action) => {\n    // update state, generating newState,\n    // depending on the action data\n    // to create a new item\n    const NewState = {\n      /* updated State */\n    };\n    return NewState;\n  },\n  DELETE: (state, action) => {\n    // update state, generating newState,\n    // after deleting an item\n    const NewState = {\n      /* updated State */\n    };\n    return NewState;\n  },\n  UPDATE: (state, action) => {\n    // update an item,\n    // and generate an updated state\n    const NewState = {\n      /* updated State */\n    };\n    return NewState;\n  },\n};\n```", "```js\n// continued...\nfunction doAction2(state, action) {\n  return dispatchTable[action.type]\n    ? dispatchTable[action.type](state, action)\n    : state;\n}\n```", "```js\nfetch(\"some/url\").then(function(data) {\n  processResult(data);\n});\nfetch(\"some/url\").then((data) => processResult(data));\n```", "```js\nfunction someFunction(someData) {\n  return someOtherFunction(someData);\n}\n```", "```js\nfetch(\"some/url\").then(processResult);\n```", "```js\nfetch(\"some/remote/url\").then(function (data) {\n  myObject.store(data);\n});\n```", "```js\nfetch(\"some/remote/url\").then(myObject.store); // Fail!\n```", "```js\nfetch(\"some/remote/url\").then(\n  myObject.store.bind(myObject)\n);\n```", "```js\nconst doSomeMethod = (someData) => {\n  return someObject.someMethod(someData);\n}\n```", "```js\nconst doSomeMethod = someObject.someMethod.bind(someObject);\n```", "```js\n// sort.ts\nconst colors = [\n  \"violet\",\n  \"indigo\",\n  \"blue\",\n  \"green\",\n  \"yellow\",\n  \"orange\",\n  \"red\",\n];\ncolors.sort();\nconsole.log(colors);\n// 'blue', 'green', 'indigo', 'orange', 'red',\n// 'violet', 'yellow'\n```", "```js\n// continued...\nconst someNumbers = [3, 20, 100];\nsomeNumbers.sort();\nconsole.log(someNumbers);\n// 100, 20, 3\n```", "```js\n// continued...\nconst palabras = [\n  \"ñandú\",\n  \"oasis\",\n  \"mano\",\n  \"natural\",\n  \"mítico\",\n  \"musical\",\n];\npalabras.sort();\nconsole.log(palabras);\n// \"mano\", \"musical\", \"mítico\",\n// \"natural\", \"oasis\", \"ñandú\" -- wrong result!\n```", "```js\n// continued...\npalabras.sort((a: string, b: string) =>\n  a.localeCompare(b, \"es\")\n);\nconsole.log(palabras);\n// \"mano\", \"mítico\", \"musical\",\n// \"natural\", \"ñandú\", \"oasis\" –- correct result!\n```", "```js\n// continued...\nconst spanishComparison = (a: string, b: string) =>\n  a.localeCompare(b, \"es\");\npalabras.sort(spanishComparison); // same correct result\n```", "```js\nconst fs = require(\"fs\");\nfs.readFile(\"someFile.txt\", (err, data) => {\n  if (err) {\n    // handle the error\n  } else {\n    // do something with the received data\n  }\n});\n```", "```js\nfetch(\"some/remote/url\")\n  .then((data) => {\n    // do something with the received data\n  })\n  .catch((error) => {\n    // handle the error\n  });\n```", "```js\nfunction doSomething(a, b, c,\n  normalContinuation, errorContinuation) {\n  let r = 0;\n  // ... do some calculations involving a, b, and c,\n  // and store the result in r\n  // if an error happens, invoke:\n  // errorContinuation(\"description of the error\")\n  // otherwise, invoke:\n  // normalContinuation(r)\n}\n```", "```js\n// ajax.ts\nfunction getAjax() {\n  let ajax = null;\n  if (window.XMLHttpRequest) {\n    // modern browser? use XMLHttpRequest\n    ajax = new XMLHttpRequest();\n  } else if (window.ActiveXObject) {\n    // otherwise, use ActiveX for IE5 and IE6\n    ajax = new ActiveXObject(\"Microsoft.XMLHTTP\");\n  } else {\n    throw new Error(\"No Ajax support!\");\n  }\n  return ajax;\n}\n```", "```js\n// continued...\n(function initializeGetAjax() {\n  let myAjax = null;\n  if (window.XMLHttpRequest) {\n    // modern browsers? use XMLHttpRequest\n    myAjax = function () {\n      return new XMLHttpRequest();\n    };\n  } else if (window.ActiveXObject) {\n    // it's ActiveX for IE5 and IE6\n    myAjax = function () {\n      new ActiveXObject(\"Microsoft.XMLHTTP\");\n    };\n  } else {\n    myAjax = function () {\n      throw new Error(\"No Ajax support!\");\n    };\n  }\n  window.getAjax = myAjax;\n})();\n```", "```js\n// ajax.module.ts\nlet getAjax = null;\nif (window.XMLHttpRequest) {\n  // modern browsers? use XMLHttpRequest\n  getAjax = function () {\n    return new XMLHttpRequest();\n  };\n} else if (window.ActiveXObject) {\n  // it's ActiveX for IE5 and IE6\n  getAjax = function () {\n    new ActiveXObject(\"Microsoft.XMLHTTP\");\n  };\n} else {\n  getAjax = function () {\n    throw new Error(\"No Ajax support!\");\n  };\n}\nexport { getAjax };\n```", "```js\nif (currentName.indexOf(\"Mr.\") !== -1) {\n  // it's a man\n  ...\n}\n```", "```js\nif (currentName.includes(\"Mr.\")) {\n  // it's a man\n  ...\n}\n```", "```js\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    \"use strict\";\n    if (typeof start !== \"number\") {\n      start = 0;\n    }\n    if (start + search.length > this.length) {\n      return false;\n    } else {\n      return this.indexOf(search, start) !== -1;\n    }\n  };\n}\n```", "```js\nlet myLog = (someText) => {\n  if (DEVELOPMENT) {\n    console.log(someText); // or some other way of logging\n  } else {\n    // do nothing\n  }\n};\n```", "```js\nlet myLog;\nif (DEVELOPMENT) {\n  myLog = (someText: string) => console.log(someText);\n} else {\n  myLog = (someText: string) => {};\n}\n```", "```js\nconst myLog = DEVELOPMENT\n  ? (someText: string) => console.log(someText)\n  : (someText: string) => {};\n```", "```js\nif (DEVELOPMENT) {\n  // do nothing, let things be\n} else {\n  console.log = (someText: string) => {};\n}\n```", "```js\n(function () {\n  // do something...\n})();\n```", "```js\n(function (a, b) {\n  // do something, using the\n  // received arguments for a and b...\n})(some, values);\n```", "```js\nlet x = (function (a, b) {\n  // ...return an object or function\n})(some, values);\n```", "```js\nfunction ready() { ... }\nfunction set() { ... }\nfunction go() { ... }\n// initialize things calling ready(),\n// set(), and go() appropriately\n```", "```js\nfunction ready() {\n  console.log(\"ready\");\n}\nfunction set() {\n  console.log(\"set\");\n}\nfunction go() {\n  console.log(\"go\");\n}\nready();\nset();\ngo();\nfunction set() {\n  console.log(\"UNEXPECTED...\");\n}\n// \"ready\"\n// \"UNEXPECTED\"\n// \"go\"\n```", "```js\n(function () {\n  function ready() {\n    console.log(\"ready\");\n  }\n  function set() {\n    console.log(\"set\");\n  }\n  function go() {\n    console.log(\"go\");\n  }\n  ready();\n  set();\n  go();\n})();\nfunction set() {\n  console.log(\"UNEXPECTED...\");\n}\n// \"ready\"\n// \"set\"\n// \"go\"\n```", "```js\nconst myCounter = (function () {\n  let count = 0;\n  return function () {\n    count++;\n    return count;\n  };\n})();\n```", "```js\nconst simpleAction = (t:string) => {\n  type: t;\n};\nconsole.log(simpleAction(\"INITIALIZE\"));\n// undefined\n```", "```js\nconst doAction3 = (state = initialState, action) =>\n  (dispatchTable[action.type] &&\n    dispatchTable[action.type](state, action)) ||\n  state;\n```", "```js\nwindow.store = new Store();\nconst oldSet = window.store.set;\nwindow.store.set = (...data) => (\n  console.log(...data), oldSet(...data)\n);\n```"]