- en: Chapter 8. Building Rat-man!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。构建Rat-man！
- en: In this chapter, we will be building a game called **Rat-man**, which is actually
    a modified version of the famous game **Pac-Man**. We will use canvas, JavaScript,
    CSS, and HTML to build our game.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建一个名为**Rat-man**的游戏，这实际上是一个著名游戏**Pac-Man**的修改版。我们将使用canvas、JavaScript、CSS和HTML来构建我们的游戏。
- en: 'Let''s start with introducing our game''s characters:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先介绍我们游戏的角色：
- en: Our game will have one rat. The player will act as the rat.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的游戏将有一个老鼠。玩家将扮演老鼠的角色。
- en: There will be four cats who will try to catch the rat and a lot of cheese for
    the rat to eat.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将有四只猫试图抓住老鼠，以及很多奶酪供老鼠吃。
- en: The main goal of the game is to eat all the cheese without being caught by the
    monster cats.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏的主要目标是吃掉所有奶酪，不被怪物猫抓住。
- en: Sounds fun, right? Let's get right to it...
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很有趣，对吧？让我们直接开始吧...
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'To make our code clean, we will keep our JavaScript, CSS, and images files
    in separate folders. We will have three primary folders named as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的代码更整洁，我们将保持我们的JavaScript、CSS和图像文件在单独的文件夹中。我们将有三个主要文件夹，名称如下：
- en: '`css`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`css`'
- en: '`img`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img`'
- en: '`scripts`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scripts`'
- en: Game user interface
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏用户界面
- en: 'To start building our game, we need to prepare our canvas. Our HTML file should
    look similar to the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始构建我们的游戏，我们需要准备我们的画布。我们的HTML文件应类似于以下内容：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Our game user interface will be in the `<body></body>` tags. We will add JavaScript
    to our canvas soon.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的游戏用户界面将在`<body></body>`标签中。我们很快将为我们的画布添加JavaScript。
- en: 'In the `css` folder, create a CSS file named `styles.css`, which will contain
    the following code for our HTML `body`, `canvas`, and a play `button`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在`css`文件夹中，创建一个名为`styles.css`的CSS文件，该文件将包含以下代码，用于我们的HTML `body`、`canvas`和一个播放`button`：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create another CSS file named `reset.css` in the same folder and add the following
    code to the CSS file. This file will design the user interface for the initial
    screen of the game:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一文件夹中创建另一个CSS文件，命名为`reset.css`，并将以下代码添加到CSS文件中。此文件将设计游戏的初始屏幕的用户界面：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save both the files and include them in your HTML file with the following code
    in the `<head></head>` tags:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这两个文件，并在`<head></head>`标签中使用以下代码将它们包含在你的HTML文件中：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you open an HTML file of a browser now, you will see the following image:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在打开一个浏览器的HTML文件，你会看到以下图片：
- en: '![Game user interface](img/B04720_08_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![游戏用户界面](img/B04720_08_01.jpg)'
- en: We are going to draw our game interface in the preceding rectangle.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在前面的矩形中绘制我们的游戏界面。
- en: Adding functionalities to the game
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为游戏添加功能
- en: 'To add the user interface and the game''s functionalities, we will be needing
    JavaScript. We will need the following JavaScript files in the `scripts` folder:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了添加用户界面和游戏功能，我们需要JavaScript。在`scripts`文件夹中，我们需要以下JavaScript文件：
- en: '`app.main.js`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.main.js`'
- en: '`app.display_functions.js`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.display_functions.js`'
- en: '`app.init.js`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.init.js`'
- en: '`app.key_handler.js`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.key_handler.js`'
- en: '`app.movement_functions.js`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.movement_functions.js`'
- en: '`app.constants.js`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.constants.js`'
- en: The app.main.js file
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`app.main.js`文件'
- en: Our `app.main.js` file should contain the following function that will deal
    with the `app.key_handler.js` file and your computer's keyboard. It will also
    call the `app.init.js` file for the initialization of our variables.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`app.main.js`文件应包含以下函数，该函数将处理`app.key_handler.js`文件和你的电脑键盘。它还将调用`app.init.js`文件以初始化我们的变量。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Here we used `app.main.js`; You need not name your JavaScript file like this.
    But it is a good practice to maintain the naming convention.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们使用了`app.main.js`；你不需要将你的JavaScript文件命名为这样。但保持命名约定是一个好习惯。
- en: 'The following code is the content of the `app.main.js` file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是`app.main.js`文件的内容：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The app.display_functions.js file
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`app.display_functions.js`文件'
- en: In our `app.display_functions.js` file, we will write a function, where we will
    include the `APP.Show_world` function, which is used in the `app.init.js` file.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的`app.display_functions.js`文件中，我们将编写一个函数，其中我们将包含`APP.Show_world`函数，该函数在`app.init.js`文件中使用。
- en: 'The function should contain the following code (refer to the comments to understand
    what each step does):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 函数应包含以下代码（参考注释以了解每一步的作用）：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `APP.map.Draw` function will hold the following code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`APP.map.Draw`函数将包含以下代码：'
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For the cats'' movement, we will use the `APP.monsters.Move` function with
    the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于猫的移动，我们将使用`APP.monsters.Move`函数，以下代码：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Our rat will move when the `APP.player.Move()` function is called with the
    following code:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用以下代码调用`APP.player.Move()`函数时，我们的老鼠将会移动：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we will make our rat visible on our canvas while moving the rat on the
    blocks by calling the function with the following code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将通过调用以下代码的函数，在移动老鼠的同时使我们的老鼠在画布上可见：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To show our cats on the canvas, we need to use the following code in our `APP.Show_Monster()`
    function:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要在画布上显示我们的猫，我们需要在`APP.Show_Monster()`函数中使用以下代码：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To show the portal, we need to write another function called `APP.portals.Show
    ()`, including the following code:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示门户，我们需要编写另一个名为`APP.portals.Show ()`的函数，包括以下代码：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The user will need to see a message after the game is over or make the screen
    blur. To do this, we need to declare another function called `APP.Game_Over()`
    with the following code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏结束后，用户需要看到一条消息或使屏幕模糊。为此，我们需要声明另一个名为`APP.Game_Over()`的函数，包括以下代码：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The app.init.js file
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: app.init.js文件
- en: 'Our `app.init.js` file will contain a function. In the function, we will declare
    the following variables:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`app.init.js`文件将包含一个函数。在这个函数中，我们将声明以下变量：
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Write a function that will contain few more variables, as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个包含更多变量的函数，如下所示：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, we will initialize our game''s map:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将初始化我们的游戏地图：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Images for Rat-man!
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rat-man!的图片！
- en: 'To build the game, we will need a few images. We will keep all our images in
    the `img` folder. In the `img` folder, we will create four folders, as shown in
    the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建游戏，我们需要一些图片。我们将把所有图片保存在`img`文件夹中。在`img`文件夹中，我们将创建四个文件夹，如下所示：
- en: monsters
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: monsters
- en: player
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: player
- en: portal
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: portal
- en: walls
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: walls
- en: We will keep two images, named `dot.png` and `blank.png`, in the `img` folder.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`img`文件夹中保留两张图片，分别命名为`dot.png`和`blank.png`。
- en: The monsters folder
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 怪物文件夹
- en: In the `monsters` folder, create four folders with our cats' names.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在`monsters`文件夹中，创建四个以我们猫的名字命名的文件夹。
- en: 'Say that our cats'' names are as follows (you can name them whatever you want):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们的猫的名字如下（你可以随意命名）：
- en: blinky
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: blinky
- en: inky
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: inky
- en: pinky
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pinky
- en: clyde
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: clyde
- en: 'Each cat folder will have four folders for the directed images of the cats.
    The folder names are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 每个猫文件夹将包含四个文件夹，用于存放猫的定向图片。文件夹名称如下：
- en: '`up`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`up`'
- en: '`down`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`down`'
- en: '`left`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`left`'
- en: '`right`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`right`'
- en: Each direction folder should contain an image of our cat. The image name should
    be `0.png`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 每个方向的文件夹都应该包含我们猫的图片。图片名称应该是`0.png`。
- en: You need to keep your image 50 x 50 px.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要保持你的图片是50 x 50 px。
- en: The player folder
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 玩家文件夹
- en: 'The `player` folder should contain four folders for the direction of our rat.
    The folders should be named as shown in the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`player`文件夹应该包含四个文件夹，用于我们老鼠的方向。文件夹的命名如下所示：'
- en: '`up`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`up`'
- en: '`down`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`down`'
- en: '`left`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`left`'
- en: '`right`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`right`'
- en: Each folder should contain the rat's directed image. There need to be two images,
    `0.png` and `1.png`. One image is the open mouthed rat and another is of the closed
    mouthed rat. The images need to be 50 x 50 px.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 每个文件夹都应该包含老鼠的定向图片。需要两张图片，`0.png`和`1.png`。一张是张嘴的老鼠，另一张是闭嘴的老鼠。图片需要是50 x 50 px。
- en: The portal folder
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 门户文件夹
- en: The `portal` folder should contain two images of the portal through which our
    rat will travel from one end to another. The images names should be `0.png` and
    `1.png`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`portal`文件夹应该包含两张门户图片，我们的老鼠将通过这个门户从一端移动到另一端。图片名称应该是`0.png`和`1.png`。'
- en: The walls folder
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 墙壁文件夹
- en: The `walls` folder should have five images to draw the walls in the canvas.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`walls`文件夹应该有五张图片来绘制画布中的墙壁。'
- en: The images should be named `0.png`, `1.png`, `2.png`, `3.png`, and `4.png`.
    The images will be the corners and straight lines of the wall.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图片应该命名为`0.png`、`1.png`、`2.png`、`3.png`和`4.png`。这些图片将是墙壁的角落和直线。
- en: 'The hierarchical representation of the images used in building our game is
    as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们游戏构建中使用的图片的层次结构表示如下：
- en: '![The walls folder](img/B04720_08_05.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![墙壁文件夹](img/B04720_08_05.jpg)'
- en: Adding images to our cats
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为我们的猫添加图片
- en: 'We will write four functions to add perfect images for our cats. The function
    should look similar to the following function:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写四个函数来为我们的猫添加完美的图片。函数应该类似于以下函数：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We will change the index number of the `APP.monsters[0].Init = function ();`
    function to `APP.monsters[1].Init = function ();` for the second cat. And `APP.monsters[2].Init
    = function ()` & `APP.monsters[3].Init = function ()` for the third and fourth
    cats.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把`APP.monsters[0].Init = function ();`函数的索引号改为`APP.monsters[1].Init = function
    ();`，用于第二只猫。第三和第四只猫分别是`APP.monsters[2].Init = function ()`和`APP.monsters[3].Init
    = function ()`。
- en: We also need to change the image location and index numbers for the cats.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要更改猫的图片位置和索引号。
- en: 'For the initialization of the walls and cheese with the images, we need to
    write a function, as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用图像初始化墙壁和奶酪，我们需要编写一个函数，如下所示：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Draw the canvas
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制画布
- en: 'We will draw our canvas by adding the following function to our `app.init.js`
    file:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过将以下函数添加到`app.init.js`文件中来绘制我们的画布：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The app.key_handler.js file
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`app.key_handler.js`文件'
- en: 'Now, in the `app.key_handler.js` file, we will write our code to give the player
    the ability to move our rat using the keyboard. The code should look similar to
    the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`app.key_handler.js`文件中，我们将编写代码，让玩家能够通过键盘移动我们的老鼠。代码应该看起来类似于以下内容：
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The app.movement_functions.js file
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`app.movement_functions.js`文件'
- en: 'We need to take a look where our wall ends or starts while pressing the keys.
    We need to stop moving the rat when we reach the edges. Therefore, we have to
    set some conditions for that. The first one is to check the direction. The function
    can be written as shown in the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要查看在按键时墙壁的结束或开始位置。当我们到达边缘时，我们需要停止移动老鼠。因此，我们必须为此设置一些条件。第一个是检查方向。函数可以写成以下内容：
- en: '[PRE20]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'While checking the directions, we also need to move in the right direction.
    The function to select the direction can be written as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查方向的同时，我们也需要向正确的方向移动。选择方向的函数可以写成以下内容：
- en: '[PRE21]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, we have to check for the walls. We can do this by adding a few conditions
    to the function as shown in the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须检查墙壁。我们可以通过在函数中添加一些条件来实现这一点，如下所示：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The movement of the arrow keys should be well defined. We should create the
    following functions for the arrow keys:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头键的移动应该定义良好。我们应该为箭头键创建以下函数：
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The app.constants.js file
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`app.constants.js`文件'
- en: 'To keep our game''s canvas clean and in good shape, we need to initialize a
    few variables with a few fixed variables (for example, height of map, height of
    cell, width of map, width of cell, and so on). We can do this by writing the following
    code in our `app.constants.js` file. Check the comments with the code to get a
    clear idea how the code will work:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持我们的游戏画布干净整洁，我们需要使用一些固定变量（例如，地图高度、单元格高度、地图宽度、单元格宽度等）初始化几个变量。我们可以在`app.constants.js`文件中编写以下代码来完成。通过查看代码中的注释，你可以清楚地了解代码将如何工作：
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Playing the game
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 玩游戏
- en: 'If you correctly integrated the code and your HTML file now looks similar to
    the following, you can now run the HTML file:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正确地集成了代码，并且你的HTML文件现在看起来类似于以下内容，你现在可以运行HTML文件：
- en: '[PRE25]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After running the HTML file on your browser, you will be able to see the following
    screen:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的浏览器上运行HTML文件后，你将能够看到以下屏幕：
- en: '![Playing the game](img/B04720_08_02.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![玩游戏](img/B04720_08_02.jpg)'
- en: Congratulations! You have successfully built Rat-man!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经成功构建了“鼠人”！
- en: To play the game, click anywhere on the canvas and use the arrow keys for your
    rat's movement.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要玩游戏，点击画布上的任何位置，并使用箭头键移动你的老鼠。
- en: 'If you lose all your lives, you will see the following screen:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你失去了所有生命，你将看到以下屏幕：
- en: '![Playing the game](img/B04720_08_03.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![玩游戏](img/B04720_08_03.jpg)'
- en: 'If you win, you will see the following screen:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你赢了，你将看到以下屏幕：
- en: '![Playing the game](img/B04720_08_04.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![玩游戏](img/B04720_08_04.jpg)'
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have built the Rat-man! I hope that you are now playing the game that you
    have built. If you cannot play the game after coding for hours, don't worry. Keep
    calm and try again. The whole source code and required images are included in
    the book. You can download and run it. However, before doing this, I would suggest
    you to try at least twice. Let's move on to [Chapter 9](ch09.html "Chapter 9. Tidying
    up Your Code Using OOP"), *Tidying up Your Code Using OOP*, for a better idea
    about making files or folders and accessing them.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经构建了“鼠人”！希望你现在正在玩你构建的游戏。如果你在编码数小时后无法玩游戏，不要担心。保持冷静，再试一次。整个源代码和所需图像都包含在书中。你可以下载并运行它。然而，在这样做之前，我建议你至少尝试两次。让我们继续前进到[第9章](ch09.html
    "第9章。使用面向对象编程整理代码")，*使用面向对象编程整理代码*，以更好地了解创建文件或文件夹以及访问它们的方法。
