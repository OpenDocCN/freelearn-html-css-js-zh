["```js\n> java -version\n```", "```js\n> java –jar jenkins.war\n```", "```js\nimport LoginPage from \"../pageObjects/login.page\";\n// Host or Attend a party in Ghostville or Zombieton\nimport stateDrivenUtils from \"../utilities/stateDriven.utils\";\ndescribe(\"Ch15: State-drive Automation from Jenkins\", () => {\n    it(\"should loop around until the final or first page is found\", async () => {\n        // Get the test data from the JOURNEY environment variable\n        let env = process.env.ENV || \"prod\";\n        await LoginPage.open(env);\n        let testData = process.env.JOURNEY || \"\"; // Get test data from JOURNEY environment variable set by Jenkins\n        stateDrivenUtils.partyPath(testData); // Attend path through the party\n    });\n});\n```", "```js\n> npm init wdio . --yes\n```", "```js\n> npm init wdio . -- --yes\n```", "```js\n\"scripts\": {\n    \"wdio\": \"wdio run test/wdio.conf.ts\"\n},\n```", "```js\n> npm i packageName\n> yarn add packageName\n```", "```js\nyarn add packageName\n```", "```js\nsetValueAdv(this.fldUsername, \"username\")\n```", "```js\nawait setValueAdv(await this.fldUsername, \"username\")\n```", "```js\ndescribe(\"async here causes troubles\", async () => {\n```", "```js\ndescribe(\"no more troubles\", () => {\n```", "```js\n> nvm use 18\n```", "```js\n> nvm install 18\n```", "```js\n> Taskkill /IM chromedriver.exe /F\n```", "```js\nnpm config get prefix\n```", "```js\nnpx wdio run test/wdio.conf.ts\nnpx wdio run wdio.conf.ts\n```", "```js\n\"allure\":\n \"wdio run test/wdio.conf.ts; allure generate report –clean; allure open\"\n```", "```js\n\"allure\":\n \"wdio run test/wdio.conf.ts && allure generate report --clean && allure open\"\n```", "```js\n> allure generate report allure-results\n```", "```js\n\"report\": \"wdio run test/wdio.conf.ts && allure generate report allure-results --clean && allure open\"\n```", "```js\nreporters: ['spec',['allure', {\n        outputDir: 'allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: true,\n}]],\n```", "```js\nnpm install @wdio/allure-reporter --save-dev\nyarn add @wdio/allure-reporter\n```", "```js\nyarn add package-name\n```", "```js\nimport { browser } from \"webdriverio\";\n```", "```js\n\"compilerOptions\": {\n        \"types\": [\n            \"@wdio/jasmine-framework\"\n```", "```js\n> yarn add @types/jasmine jasmine\n```", "```js\n{\"compilerOptions\":{\n\"allowImportingTsExtensions\": true\n\"noEmit\": true,\n...\n}}\n```", "```js\n> yarn add @types/node\n> yarn add @types/jasmine\n```", "```js\n> yarn install\n```", "```js\n    capabilities: [{\n        maxInstances: 5\n```", "```js\n\"types\": [\n\"@wdio/globals\",\n\"jasmine\",\n           \"node\",\n           \"@wdio/jasmine-framework\",\n           \"expect-webdriverio\"\n        ],\n```", "```js\nconst ASB = switchboardFactory // No Parenthesis\nASB.set(\"DEBUG\", true) // Throws error\n```", "```js\nconst ASB = switchboardFactory() // No error\nASB.set(\"DEBUG\", true) // No error\n```", "```js\n> sudo chown –R $USER /usr/local\n```", "```js\n> npm update\n> yarn upgrade\n```", "```js\nimport loginPage from '../pageobjects/login.page'\n```", "```js\nbrowser .addCommand(\"clickAdv\", async function () {...}\nawait this.Submit.clickadv(); //Lowercase 'a' in clickAdv\n```", "```js\nawait this.Submit.clickAdv();\n```", "```js\n\"services\": [\"chromedriver\"]\n```", "```js\nProperty 'toBeExisting' does not exist on type 'FunctionMatchers<any>'.ts\n```", "```js\ntsNodeOpts: {\n            transpileOnly: true,\n            project: './specs/**/*.ts'\n        }\n```", "```js\ndefaultTimeoutInterval: 9_999_999,\n```", "```js\nconsole.log(`timeout = ${Math.ceil(timeout / 60_000)} min.`);\n```", "```js\nfunction log(message: any) {…}\n```", "```js\nexport function log(message: any) {…}\n```", "```js\nclass TyposPage extends Page{\n        public get typoText () {\n        return $(`//p[contains(text(),'random')]`);\n    }\nexport default new SecurePage();\n```", "```js\nclass SecurePage extends Page{\n        public get typoText () {\n        return $(`//p[contains(text(),'random')]`);\n    }\nexport default new SecurePage();\n```", "```js\nawait helpers.clickAdv (this.btnTypos);\n```", "```js\nawait helpers.clickAdv (await this.btnTypos);\n```", "```js\nC:\\users\\darkartswizard\\git\\github\\repos\\webdriverio-book-project\\test\\wdio.conf.ts\n```", "```js\n> brew install yarn\n```", "```js\n> npm config get prefix\n> yarn global dir\n```", "```js\n> nvm install node version.number\n```", "```js\n> nvm use version.number\n```", "```js\n> nvm list\n```", "```js\n> node -v\n> npm –v\n> nvm version\n```", "```js\n> npm show node versions\n```", "```js\n> npm show webdriverio versions\n```", "```js\n> npm show jasmine versions\n```", "```js\n> cd path-to-project\n> npm list\n```", "```js\n> npm prune\n> yarn install\n```", "```js\n> npm list -g --depth=0\n```", "```js\n> cd path/to/project\n> npm wdio .\n> yarn wdio init\n```", "```js\n> npx wdio run test/wdio.conf.ts\n> yarn wdio wdio.conf.ts\n```", "```js\n> npm run wdio\n> yarn wdio\n```", "```js\n> npx wdio run ./wdio.conf.js --spec example.e2e.ts\n> yarn wdio wdio.conf.ts --spec example.e2e.ts\n```"]