["```js\nhttp://myshop.com/createNewProducthttp://myshop.com/deleteProduct\nhttp://myshop.com/updateProduct http://myshop.com/getProductDetail/P01\nhttp://myshop.com/getProductComments/P01\n```", "```js\nhttp://myshop.com/products/P01/comments\n```", "```js\nhttp://myshop.com/products/details/P01/comments/today\n```", "```js\nhttp://myshop.com/products/P01/comments?day=today&count=10\n```", "```js\nfile_content = open(\"my_file.txt\") // takes 10 seconds\nfile_content_2 = open(\"my_other_files.txt\") // takes 20 seconds\nprint file_content\nprint file_content_2   \n```", "```js\nopen(\"my_file.txt\", (file_content) => {\n  console.log(file_content)\n})\n\nopen(\"my_file_2.txt\", (file_content_2) => {\n  console.log(file_content_2)\n})\n```", "```js\n$ mkdir my-server\n$ cd my-server\n```", "```js\n$ npm init -y\n\n{\n \"name\": \"my-server\",\n \"version\": \"1.0.0\",\n \"main\": \"index.js\",\n \"scripts\": {\n \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n },\n \"keywords\": [],\n \"author\": \"\",\n \"license\": \"ISC\",\n \"description\": \"\"\n}\n\n```", "```js\nconst http = require('http')\n```", "```js\nconst myRequestHandler = (request, response) => {\n    response.end('Hello From our Node.js Server !!')\n}\n```", "```js\nconst server = http.createServer(myRequestHandler)\n```", "```js\nserver.listen(5000, () => {\n    console.log(\"server is running on port 5000\")\n})\n```", "```js\n$ mkdir wc-backend\n$ cd wc-backend\n$ npm init -y\n\n{\n \"name\": \"wc-backend\",\n \"version\": \"1.0.0\",\n \"description\": \"\",\n \"main\": \"index.js\",\n \"scripts\": {\n \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n },\n \"keywords\": [],\n \"author\": \"\",\n \"license\": \"ISC\"\n}\n\n```", "```js\n$ npm install --save express\n```", "```js\nconst express = require('express')\nconst app = express()\n\napp.use((req, res) => {\n    res.send(\"Hello!\")\n})\n\napp.listen(3000, () => {\n    console.log('running on port: 3000')\n})\n```", "```js\n$ node server.js\n```", "```js\n$ curl http://localhost:3000\n\nHello!\n```", "```js\n...\napp.use('/hello', (req, res) => {\n    res.send(\"Hello!\")\n})\n...\n```", "```js\n$ curl http://localhost:3000/hello\n\nHello!\n```", "```js\n...\napp.get('/hello', (req, res) => {\n    res.send(\"Hello!\")\n})\n...\n```", "```js\n...\n\napp.get('/teams', (req, res) => {\n    res.send(\"*To retrieve the list of teams*\")\n})\n\napp.post('/teams', (req, res) => {\n    res.send(\"*To create a new team*\")\n})\n\napp.put('/teams', (req, res) => {\n    res.send(\"*To update an existing team*\")\n})\n\napp.delete('/teams', (req, res) => {\n    res.send(\"*To delete an existing team*\")\n})\n\n...\n```", "```js\n$ curl -X POST http://localhost:3000/teams\n *To create a new team* \n$ curl -X GET http://localhost:3000/teams\n  *To retrieve the list of teams*\n```", "```js\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst app = express()\n\napp.use(bodyParser.json())\n\napp.get('/teams', (req, res) => {\n\n    const teams = [{ \"name\": \"Peru\" }, {\"name\": \"Russia\"}]\n\n    res.json(teams)\n})\n...\n```", "```js\n$ curl -X GET http://localhost:3000/teams\n\n[{\"name\":\"Peru\"}, {\"name\":\"Russia\"}]\n```", "```js\nconst express = require('express')\nconst api = new express.Router()\n\nlet teams = [\n    { id: 1, name: \"Peru\"},\n    { id: 2, name: \"Russia\"}\n]\n```", "```js\napi\n  .route('/teams')\n  .get((req, res) => {\n    res.json(teams)\n  })\n  .post((req, res) => {\n\n  })\n\napp.listen(3000, () => {\n...\n```", "```js\n...\nmodule.exports = api\n```", "```js\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst teamsApi = require('./src/routes/teams-api')\nconst app = express()\n\napp.use(bodyParser.json())\napp.use(teamsApi)\n\n...\n```", "```js\n$ curl -X GET localhost:3000/teams\n\n[{\"id\": 1, \"name\":\"Peru\"},{\"id\": 2, \"name\":\"Russia\"}]\n```", "```js\n...\napi\n  .route('/teams')\n  ...\n  .post((req, res) => {\n    let team = req.body \n teams.push(team) \n res.status(201).json(team)\n  })\n  ...\n...\n```", "```js\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"id\":3, \"name\": \"Brasil\"}' localhost:3000/teams\n```", "```js\n...\napi\n  .route('/teams')\n...\n\napi\n  .route('/teams/:id')\n  .get((req, res) => {\n      const id = req.params.id\n\n      for(let team of teams) {\n          if (team.id == id)\n            return res.json(team)\n      }\n\n      return res.status(404).send('team not found')\n  })\n\nmodule.exports = api\n```", "```js\n$ curl http://localhost:3000/teams/1\n {\"id\":1,\"name\":\"Peru\"}$ curl http://localhost:3000/teams/2\n  {\"id\":2,\"name\":\"Russia\"}\n```", "```js\n...\nlet teams = [\n    { id: 1, name: \"Peru\"},\n    { id: 2, name: \"Russia\"}\n]\n\nfunction lookupTeamIndex(id) {\n for(var i = 0; i < teams.length; i++) {\n let team = teams[i]\n if (team.id == id)\n return i\n }\n return -1\n}\n\napi\n  .route('/teams')\n...\n```", "```js\n...\napi\n  .route('/teams/:id')\n  .get((req, res) => {\n      let id = req.params.id\n      let index = lookupTeamIndex(id)\n\n if (index !== -1)\n return res.json(teams[index])\n\n      return res.status(404).send('team not found')\n  })\n...\n```", "```js\n...\napi\n  .route('/teams/:id')\n  .get((req, res) => {\n     ...\n  })\n  .put((req, res) => {\n const id = req.params.id\n const index = lookupTeam(id)\n\n if (index !== -1) {\n const team = teams[index]\n\n team.name = req.body.name\n teams[index] = team\n\n return res.json(team)\n }\n\n return res.status(404).send('team not found')\n })\n...\n```", "```js\n$ curl -X PUT -H \"Content-Type: application/json\" -d '{\"name\": \"Brasil\"}' localhost:3000/teams/999\n\nTeam not found\n```", "```js\n...\napi\n  .route('/teams/:id')\n  .get((req, res) => {\n     ...\n  })\n  .put((req, res) => {\n     ...\n  })\n  .delete((req, res) => {\n const id = req.params.id\n const index = lookupTeam(id)\n const team = teams[index]\n\n if (index !== -1) {\n teams.splice(index, 1)\n return res.send(team)\n }\n\n return res.status(404).send('team not found')\n })\n...\n```"]