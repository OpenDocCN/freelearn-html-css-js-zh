["```js\n$ npm install passport-facebook --save\n```", "```js\n...\n\"node-sass\": \"^4.7.2\",\n\"nodemon\": \"^1.14.10\",\n\"passport\": \"^0.4.0\",\n\"passport-facebook\": \"^2.1.1\",\n...\n```", "```js\n<template>\n  <div>\n    <div class=\"login\">\n      <a class=\"btn facebook\" href=\"/login/facebook\"> LOGIN WITH FACEBOOK</a>\n </div>\n    <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n      <v-text-field\n        label=\"Email\"\n        v-model=\"email\"\n        :rules=\"emailRules\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Password\"\n        v-model=\"password\"\n        :rules=\"passwordRules\"\n        required\n      ></v-text-field>\n      <v-btn\n        @click=\"submit\"\n        :disabled=\"!valid\"\n      >\n        submit\n      </v-btn>\n      <v-btn @click=\"clear\">clear</v-btn><br/>\n    </v-form>\n  </div>\n</template>\n...\n```", "```js\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  width: 100%;\n}\n\n#inspire {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n}\n\n.container.fill-height {\n  align-items: normal;\n}\n\na.side_bar_link {\n  text-decoration: none;\n}\n\n.card__title--primary, .card__text {\n  text-align: left;\n}\n\n.card {\n  height: 100% !important;\n}\n\n.btn.facebook {\n background-color: #3b5998 !important;\n border-color: #2196f3;\n color: #fff !important;\n}\n\n.btn.twitter {\n background-color: #2196f3 !important;\n border-color: #2196f3;\n color: #fff !important;\n}\n\n.btn.google {\n background-color: #dd4b39 !important;\n border-color: #dd4b39;\n color: #fff !important;\n}\n\n.btn.linkedin {\n background-color: #4875B4 !important;\n border-color: #4875B4;\n color: #fff !important;\n}\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-facebook').Strategy;\n\nmodule.exports.controller = (app) => {\n // facebook strategy\n passport.use(new Strategy({\n clientID: config.FACEBOOK_APP_ID,\n clientSecret: config.FACEBOOK_APP_SECRET,\n callbackURL: '/login/facebook/return',\n profileFields: ['id', 'displayName', 'email']\n },\n (accessToken, refreshToken, profile, cb) => {\n // Handle facebook login\n }));\n};\n```", "```js\nmodule.exports = {\n  DB: 'mongodb://localhost/movie_rating_app',\n  SECRET: 'movieratingappsecretkey',\n  FACEBOOK_APP_ID: <facebook_client_id>,\n FACEBOOK_APP_SECRET: <facebook_client_secret>\n}\n```", "```js\nconst User = require(\"../models/User\");\nconst passport = require('passport');\nconst config = require('./../config/Config');\n\nmodule.exports.controller = (app) => {\n  // facebook strategy\n  const Strategy = require('passport-facebook').Strategy;\n\n  passport.use(new Strategy({\n    clientID: config.FACEBOOK_APP_ID,\n    clientSecret: config.FACEBOOK_APP_SECRET,\n    callbackURL: '/api/login/facebook/return',\n    profileFields: ['id', 'displayName', 'email']\n  },\n  function(accessToken, refreshToken, profile, cb) {\n  }));\n\n  app.get('/login/facebook',\n passport.authenticate('facebook', { scope: ['email'] }));\n\n app.get('/login/facebook/return',\n passport.authenticate('facebook', { failureRedirect: '/login' }),\n (req, res) => {\n res.redirect('/');\n });\n}\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-facebook').Strategy;\n\nmodule.exports.controller = (app) => {\n  // facebook strategy\n  passport.use(new Strategy({\n    clientID: config.FACEBOOK_APP_ID,\n    clientSecret: config.FACEBOOK_APP_SECRET,\n    callbackURL: '/login/facebook/return',\n    profileFields: ['id', 'displayName', 'email'],\n  },\n  (accessToken, refreshToken, profile, cb) => {\n const email = profile.emails[0].value;\n User.getUserByEmail(email, (err, user) => {\n if (!user) {\n const newUser = new User({\n fullname: profile.displayName,\n email,\n facebookId: profile.id,\n });\n User.createUser(newUser, (error) => {\n if (error) {\n // Handle error\n }\n return cb(null, user);\n });\n } else {\n return cb(null, user);\n }\n return true;\n });\n }));\n\n  app.get('/login/facebook',\n    passport.authenticate('facebook', { scope: ['email'] }));\n\n  app.get('/login/facebook/return',\n    passport.authenticate('facebook', { failureRedirect: '/login' }),\n    (req, res) => {\n      res.redirect('/');\n    });\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons\" rel=\"stylesheet\">\n    <link href=\"https://unpkg.com/vuetify/dist/vuetify.min.css\" rel=\"stylesheet\">\n    <title>movie_rating_app</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n  <script type=\"text/javascript\">\n if (window.location.hash == '#_=_'){\n history.replaceState\n ? history.replaceState(null, null, window.location.href.split('#')[0])\n : window.location.hash = '';\n }\n </script>\n</html>\n```", "```js\n$ npm install passport-twitter --save\n```", "```js\n...\n\"node-sass\": \"^4.7.2\",\n\"nodemon\": \"^1.14.10\",\n\"passport\": \"^0.4.0\",\n\"passport-twitter\": \"^2.1.1\",\n...\n```", "```js\n<template>\n  <div>\n    <div class=\"login\">\n      <a class=\"btn facebook\" href=\"/login/facebook\"> LOGIN WITH FACEBOOK</a>\n       <a class=\"btn twitter\" href=\"/login/twitter\"> LOGIN WITH TWITTER</a>\n    </div>\n    <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n      <v-text-field\n        label=\"Email\"\n        v-model=\"email\"\n        :rules=\"emailRules\"\n        required\n      ></v-text-field>\n...\n```", "```js\n$ npm run build\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-twitter').Strategy;\n\nmodule.exports.controller = (app) => {\n // twitter strategy\n passport.use(new Strategy({\n consumerKey: config.TWITTER_APP_ID,\n consumerSecret: config.TWITTER_APP_SECRET,\n callbackURL: '/login/twitter/return',\n profileFields: ['id', 'displayName', 'email'],\n },\n (accessToken, refreshToken, profile, cb) => {\n // Handle twitter login\n }));\n};\n```", "```js\nmodule.exports = {\n  DB: 'mongodb://localhost/movie_rating_app',\n  SECRET: 'movieratingappsecretkey',\n  FACEBOOK_APP_ID: <facebook_client_id>,\n  FACEBOOK_APP_SECRET: <facebook_client_secret>, TWITTER_APP_ID: <twitter_consumer_id>,\n  TWITTER_APP_SECRET: <twitter_consumer_secret>\n}\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-twitter').Strategy;\n\nmodule.exports.controller = (app) => {\n  // twitter strategy\n  passport.use(new Strategy({\n    consumerKey: config.TWITTER_APP_ID,\n    consumerSecret: config.TWITTER_APP_SECRET,\n    callbackURL: '/login/twitter/return',\n    profileFields: ['id', 'displayName', 'email'],\n  },\n  (accessToken, refreshToken, profile, cb) => {\n    // Handle twitter login\n  }));\n\n  app.get('/login/google',\n passport.authenticate('google', { scope: ['email'] }));\n\n app.get('/login/google/return',\n passport.authenticate('google', { failureRedirect: '/login' }),\n (req, res) => {\n res.redirect('/');\n });\n};\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-twitter').Strategy;\n\nmodule.exports.controller = (app) => {\n  // twitter strategy\n  passport.use(new Strategy({\n    consumerKey: config.TWITTER_APP_ID,\n    consumerSecret: config.TWITTER_APP_SECRET,\n    userProfileURL: 'https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true',\n    callbackURL: '/login/twitter/return',\n  },\n  (accessToken, refreshToken, profile, cb) => {\n const email = profile.emails[0].value;\n User.getUserByEmail(email, (err, user) => {\n if (!user) {\n const newUser = new User({\n fullname: profile.displayName,\n email,\n facebookId: profile.id,\n });\n User.createUser(newUser, (error) => {\n if (error) {\n // Handle error\n }\n return cb(null, user);\n });\n } else {\n return cb(null, user);\n }\n return true;\n });\n }));\n\n  app.get('/login/twitter',\n    passport.authenticate('twitter', { scope: ['email'] }));\n\n  app.get('/login/twitter/return',\n    passport.authenticate('twitter', { failureRedirect: '/login' }),\n    (req, res) => {\n      res.redirect('/');\n    });\n};\n```", "```js\n...\npassport.use(new Strategy({\n    consumerKey: config.TWITTER_APP_ID,\n    consumerSecret: config.TWITTER_APP_SECRET,\n    userProfileURL: \n    \"https://api.twitter.com/1.1/account/verify_credentials.json?   \n    include_email=true\",\n    callbackURL: '/login/twitter/return',\n  },\n...\n```", "```js\n$ npm install passport-google-oauth20 --save\n```", "```js\n...\n\"node-sass\": \"^4.7.2\",\n\"nodemon\": \"^1.14.10\",\n\"passport\": \"^0.4.0\",\n\"passport-google-oauth20\": \"^1.0.0\",\n...\n```", "```js\n<template>\n  <div>\n    <div class=\"login\">\n       <a class=\"btn facebook\" href=\"/login/facebook\"> LOGIN WITH FACEBOOK</a>\n       <a class=\"btn twitter\" href=\"/login/twitter\"> LOGIN WITH TWITTER</a>\n       <a class=\"btn google\" href=\"/login/google\"> LOGIN WITH GOOGLE</a>\n </div>\n    <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n      <v-text-field\n        label=\"Email\"\n        v-model=\"email\"\n        :rules=\"emailRules\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Password\"\n        v-model=\"password\"\n        :rules=\"passwordRules\"\n        required\n      ></v-text-field>\n      <v-btn\n        @click=\"submit\"\n        :disabled=\"!valid\"\n      >\n        submit\n      </v-btn>\n      <v-btn @click=\"clear\">clear</v-btn><br/>\n    </v-form>\n  </div>\n</template>\n...\n```", "```js\nconst User = require('../models/User');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-google-oauth20').OAuth2Strategy;\n\nmodule.exports.controller = (app) => {\n // google strategy\n passport.use(new Strategy({\n clientID: config.GOOGLE_APP_ID,\n clientSecret: config.GOOGLE_APP_SECRET,\n callbackURL: '/login/google/return',\n },\n (accessToken, refreshToken, profile, cb) => {\n // Handle google login\n }));\n};\n```", "```js\nmodule.exports = {\n  DB: 'mongodb://localhost/movie_rating_app',\n  SECRET: 'movieratingappsecretkey',\n  FACEBOOK_APP_ID: <facebook_client_id>,\n  FACEBOOK_APP_SECRET: <facebook_client_secret>,\n  TWITTER_APP_ID: <twitter_client_id>,\n  TWITTER_APP_SECRET: <twitter_client_secret>, GOOGLE_APP_ID: <google_client_id>,\n  GOOGLE_APP_SECRET: <google_client_secret>\n}\n```", "```js\nconst User = require('../models/User');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-google-oauth20').OAuth2Strategy;\n\nmodule.exports.controller = (app) => {\n  // google strategy\n  passport.use(new Strategy({\n    clientID: config.GOOGLE_APP_ID,\n    clientSecret: config.GOOGLE_APP_SECRET,\n    callbackURL: '/login/google/return',\n  },\n  (accessToken, refreshToken, profile, cb) => {\n    // Handle google login\n  }));\n\n  app.get('/login/google',\n passport.authenticate('google', { scope: ['email'] }));\n\n app.get('/login/google/return',\n passport.authenticate('google', { failureRedirect: '/login' }),\n (req, res) => {\n res.redirect('/');\n });\n};\n```", "```js\nconst User = require('../models/User');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst GoogleStrategy = require('passport-google-oauth20').Strategy;\n\nmodule.exports.controller = (app) => {\n  // google strategy\n  passport.use(new GoogleStrategy({\n    clientID: config.GOOGLE_APP_ID,\n    clientSecret: config.GOOGLE_APP_SECRET,\n    callbackURL: '/login/google/return',\n  },\n  (accessToken, refreshToken, profile, cb) => {\n const email = profile.emails[0].value;\n User.getUserByEmail(email, (err, user) => {\n if (!user) {\n const newUser = new User({\n fullname: profile.displayName,\n email,\n facebookId: profile.id,\n });\n User.createUser(newUser, (error) => {\n if (error) {\n // Handle error\n }\n return cb(null, user);\n });\n } else {\n return cb(null, user);\n }\n return true;\n });\n  }));\n\n  app.get('/login/google',\n    passport.authenticate('google', { scope: ['email'] }));\n\n  app.get('/login/google/return',\n    passport.authenticate('google', { failureRedirect: '/login' }),\n    (req, res) => {\n      res.redirect('/');\n    });\n};\n```", "```js\n$ npm install passport-linkedin --save\n```", "```js\n...\n\"node-sass\": \"^4.7.2\",\n\"nodemon\": \"^1.14.10\",\n\"passport\": \"^0.4.0\",\n\"passport-linkedin-oauth2\": \"^2.1.1\",\n...\n```", "```js\n<template>\n  <div>\n    <div class=\"login\">\n      <a class=\"btn facebook\" href=\"/login/facebook\"> LOGIN WITH FACEBOOK</a>\n       <a class=\"btn twitter\" href=\"/login/twitter\"> LOGIN WITH TWITTER</a>\n       <a class=\"btn google\" href=\"/login/google\"> LOGIN WITH GOOGLE</a>\n       <a class=\"btn linkedin\" href=\"/login/linkedin\"> LOGIN WITH LINKEDIN</a>\n    </div>\n    <v-form v-model=\"valid\" ref=\"form\" lazy-validation>\n      <v-text-field\n        label=\"Email\"\n        v-model=\"email\"\n        :rules=\"emailRules\"\n        required\n      ></v-text-field>\n      <v-text-field\n        label=\"Password\"\n        v-model=\"password\"\n        :rules=\"passwordRules\"\n        required\n      ></v-text-field>\n      <v-btn\n        @click=\"submit\"\n        :disabled=\"!valid\"\n      >\n        submit\n      </v-btn>\n      <v-btn @click=\"clear\">clear</v-btn><br/>\n    </v-form>\n  </div>\n</template>\n<script>\n  import axios from 'axios';\n  import bus from \"./../bus.js\";\n\n  export default {\n    data: () => ({\n      valid: true,\n      email: '',\n      password: '',\n      emailRules: [\n        (v) => !!v || 'E-mail is required',\n        (v) => /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(v) || 'E-mail must be valid'\n      ],\n      passwordRules: [\n        (v) => !!v || 'Password is required',\n      ]\n    }),\n    methods: {\n      async submit () {\n        if (this.$refs.form.validate()) {\n          return axios({\n            method: 'post',\n            data: {\n              email: this.email,\n              password: this.password\n            },\n            url: '/users/login',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          .then((response) => {\n            localStorage.setItem('jwtToken', response.data.token)\n            this.$swal(\"Good job!\", \"You are ready to start!\", \n            \"success\");\n            bus.$emit(\"refreshUser\");\n            this.$router.push({ name: 'Home' });\n          })\n          .catch((error) => {\n            const message = error.response.data.message;\n            this.$swal(\"Oh oo!\", `${message}`, \"error\")\n          });\n        }\n      },\n      clear () {\n        this.$refs.form.reset()\n      }\n    }\n  }\n</script>\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-linkedin').Strategy;\n\nmodule.exports.controller = (app) => {\n // linkedin strategy\n passport.use(new Strategy({\n consumerKey: config.LINKEDIN_APP_ID,\n consumerSecret: config.LINKEDIN_APP_SECRET,\n callbackURL: '/login/linkedin/return',\n profileFields: ['id', 'first-name', 'last-name', 'email-address']\n },\n (accessToken, refreshToken, profile, cb) => {\n // Handle linkedin login\n }));\n};\n```", "```js\nmodule.exports = {\n  DB: 'mongodb://localhost/movie_rating_app',\n  SECRET: 'movieratingappsecretkey',\n  FACEBOOK_APP_ID: <facebook_client_id>,\n  FACEBOOK_APP_SECRET: <facebook_client_secret>,\n  TWITTER_APP_ID: <twitter_consumer_id>,\n  TWITTER_APP_SECRET: <twitter_consumer_secret>,\n  GOOGLE_APP_ID: <google_consumer_id>,\n  GOOGLE_APP_SECRET: <google_consumer_secret>,\n  LINKEDIN_APP_ID: <linkedin_consumer_id>,\n LINKEDIN_APP_SECRET: <linkedin_consumer_secret>\n}\n```", "```js\nconst User = require('../models/User.js');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-linkedin').Strategy;\n\nmodule.exports.controller = (app) => {\n  // linkedin strategy\n  passport.use(new Strategy({\n    consumerKey: config.LINKEDIN_APP_ID,\n    consumerSecret: config.LINKEDIN_APP_SECRET,\n    callbackURL: '/login/linkedin/return',\n    profileFields: ['id', 'first-name', 'last-name', 'email-address']\n  },\n  (accessToken, refreshToken, profile, cb) => {\n    // Handle linkedin login\n  }));\n\n  app.get('/login/linkedin',\n passport.authenticate('linkedin'));\n\n app.get('/login/linkedin/return',\n passport.authenticate('linkedin', { failureRedirect: '/login' }),\n (req, res) => {\n res.redirect('/');\n });\n};\n```", "```js\nconst User = require('../models/User');\nconst passport = require('passport');\nconst config = require('./../config/Config');\nconst Strategy = require('passport-linkedin').Strategy;\n\nmodule.exports.controller = (app) => {\n  // linkedin strategy\n  passport.use(new Strategy({\n    consumerKey: config.LINKEDIN_APP_ID,\n    consumerSecret: config.LINKEDIN_APP_SECRET,\n    callbackURL: '/login/linkedin/return',\n    profileFields: ['id', 'first-name', 'last-name', 'email-address'],\n  },\n  (accessToken, refreshToken, profile, cb) => {\n const email = profile.emails[0].value;\n User.getUserByEmail(email, (err, user) => {\n if (!user) {\n const newUser = new User({\n fullname: profile.displayName,\n email: profile.emails[0].value,\n facebookId: profile.id,\n });\n User.createUser(newUser, (error) => {\n if (error) {\n // Handle error\n }\n return cb(null, user);\n });\n } else {\n return cb(null, user);\n }\n return true;\n });\n  }));\n\n  app.get('/login/linkedin',\n    passport.authenticate('linkedin'));\n\n  app.get('/login/linkedin/return',\n    passport.authenticate('linkedin', { failureRedirect: '/login' }),\n    (req, res) => {\n      res.redirect('/');\n    });\n};\n```"]