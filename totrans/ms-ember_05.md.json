["```js\nAppNamespace.ControllernameController = Ember.Controller.extend();\n```", "```js\nApp.TweetsController = Ember.Controller.extend();\nApp.RetweetsController = App.TweetsController.extend();\n```", "```js\nvar controller = Ember.Controller.create();\nvar tweetsController = App.TweetsController.create();\n```", "```js\nvar mixin = Ember.Mixin.create({\n  model: [1, 2, 3]\n});\nvar controller = Ember.Controller.createWithMixins(mixin);\n```", "```js\nvar Controller = Ember.Controller.extend({\n  model: [1, 2, 3]\n});\nvar controller  Controller.create();\n```", "```js\nApp.Router.map(function(){\n  this.resource('posts', function(){\n  });\n  this.resource('post', {path: '/post/:post_id'});\n});\n```", "```js\nthis.resource('post', {path: '/post/:post_id'});\n```", "```js\nApp.PostRoute = Ember.Route.extend({\n  model: function(params){\n    // load matching post from server\n    return Ember.$.getJSON('/posts/'+params.post_id);\n  }\n});\n```", "```js\nApp.PostRoute = Ember.Route.extend({\n  model: function(params){\n    return Ember.$.getJSON('/posts/'+params.post_id);\n  },\n  setupController: function(controller, model){\n    controller.set('model', model);\n  }\n});\n```", "```js\n  {{! post.hbs}}\n\n  <h1>{{model.title}}</h1>\n  <p>{{model.body}}</p>\n```", "```js\n<h1>Introduction to Ember.js.</h1>\n<p>A gentle introduction to Ember.js.</p>\n```", "```js\n  controller.set(model.title', 'A guide to using Ember.js.');\n```", "```js\n  this.resource('posts', function(){\n    this.route('/new'); // route to add a new post\n\n});\n```", "```js\n{{! posts/new template }}\n\n<form>\n  {{input name='title' value=model.title}}\n  {{textarea name='body' value=model.body}}\n  <button type='submit'>Save post</button>\n</form>\n```", "```js\nApp.PostsNewRoute = Ember.Route.extend({\n  model: function(params){\n    return Ember.Object.create();\n  }\n});\n```", "```js\n{{! application template }}\n{{input name=\"firstName\" value=model.firstName}\n}\n{{input name=\"lastName\" value=model.lastName}}\nFull name: {{fullName}}\n\n// application controller\n\nApp.ApplicationController = Em.Controller.extend({\n  fullName: function(){\n    return this.get('model.firstName') + ' ' + this.get('model.lastName');\n  }.property('model.firstName', 'model.lastName')\n});\n\n// application route\nApp.ApplicationRoute = Em.Route.extend({\n  setupController: function(controller){\n    controller.set('model', Em.Object.create({\n      firstName: 'Jon',\n      lastName: 'Doe',\n    });\n  });\n     });\n```", "```js\n  Full name: {{firstName+lastName}} // wrong\n```", "```js\nApp.ApplicationController = Em.Controller.extend({\n  model: Em.Object.create({\n    firstName: 'Jon',\n    lastName: 'Doe',\n  },\n\n  fullName: function(){\n    return this.get('firstName') + ' ' + this.get('lastName');\n  }.property('firstName', 'lastName')\n\n});\n```", "```js\n{{! search template}}\n\n{{input name=\"search\" value=queryTerm}}\n<ul>\n  {{#each results}}\n  <li>{{user}}: {{body}}<li>\n  {{/each}}\n</ul>\n\n// search controller\nApp.SearchController = Em.Controller.extend({\n\n  // require posts controller\n  needs: ['posts'],\n\n  // compute matching posts\n  results: function(){\n\n    var queryTerm = this.get('queryTerm');\n    if (!queryTerm && queryTerm.trim() === '') return;\n\n    return this\n    .get('controllers.posts.model')\n    .filter(function(){\n      return post.match(queryTerm);\n    });\n\n  }.property('queryTerm')\n\n});\n```", "```js\nApp.SearchController = Em.Controller.extend({\n\n  needs: ['posts'],\n\n  queryTermDidChange: function(){\n    Em.run.debounce(this, this.searchResults, 1000);\n  }.observes('queryTerm'),\n  searchResults: function(){\n    var queryTerm = this.get('queryTerm');\n    if (!queryTerm && queryTerm.trim() === '') return;\n    var results = this\n    .get('controllers.posts.model')\n    .filter(function(){\n      return post.match(queryTerm);\n    });\n    this.set('results', results);\n  }\n});\n```", "```js\nEmber.ObjectController.create({\n  model: {\n    name: 'Jon Doe'\n    age: 23\n  }\n});\n\nEmber.ArrayController.create({\n  model: [1, 2]\n});\n```", "```js\nApp.Post = Ember.Object.extend({\n    title: null,\n    body: null\n});\n```", "```js\nvar post = App.Post.create({\n    title: 'JavaScript prototypes.',\n    body: 'This post will discuss JavaScript prototypes.'\n});\n```", "```js\npost.set('title', 'Design patterns.');\npost.get('title'); // Design patterns.\n```", "```js\nvar postController = Ember.ObjectController.create();\npostController.set('model', post);\npostController.get('title'); // Design patterns.\n```", "```js\nvar postController = Ember.Controller.create();\npostController.set('model', post);\npostController.get('title'); //  undefined\n  postController.get('model.title'); // Design patterns.\n```", "```js\nApp.PostRoute = Ember.Route.extend({\n  model: function(){\n    return App.Post.create({\n      title: 'JavaScript prototypes.',\n      body: 'This post will discuss JavaScript prototypes.',\n      tagIds: [1, 2, 3, 4]\n    });\n  }\n});\n```", "```js\nApp.PostController = Ember.ObjectController.extend({\n\n  TAGS: {\n     1: 'ember.js',\n     2: 'javascript',\n     3: 'web',\n     4: 'mvc'\n  },\n\n  tags: function(){\n    var tags = this.get('TAGS');\n    return this.get('tagIds').map(function(id){\n    return tags[id];\n    });\n  }.property('TAGS', 'tags.length')\n\n});\n```", "```js\n<p>{{title}}</p>\n<p>{{body}}</p>\n<ul>\n     {{#each tags}}\n     <li>{{this}}</li>\n    {{/each}}\n</ul>\n```", "```js\n<p>JavaScript prototypes.</p>\n<p>This post will discuss JavaScript prototypes.</p>\n<ul>\n  <li>ember.js</li>\n  <li>javascript</li>\n  <li>web</li>\n  <li>mvc</li>\n</ul>\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: [1, 2, 3]\n});\ncontroller.get('length'); // 3\n```", "```js\n{{#each}}\n   {{this}}\n{{/each}}\n```", "```js\n{{#each model}}\n{{this}}\n{{/each}}\n\n{{#each controller.model}}\n{{this}}\n{{/each}}\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: []\n});\ncontroller.addObject('a'); // ['a']\ncontroller.addObject('b'); // ['a', 'b']\ncontroller.addObject('b'); // ['a', 'b'] // already added\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: []\n});\ncontroller.pushObject('a');  // ['a']\ncontroller.pushObject('b'); // ['a', 'b']\ncontroller.pushObject('b'); // ['a', 'b', 'b'] // still added\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: ['a', 'b', 'c']\n});\ncontroller.removeObject('a');    // ['b', 'c']\ncontroller.removeObject('b');    // ['c']\ncontroller.removeObject('b');    // ['c'] // fails silently\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: []\n});\ncontroller.pushObjects(['a', 'b']);       // ['a', 'b']\ncontroller.addObjects(['b', 'c']);        // ['a', 'b', 'c']\ncontroller.removeObjects(['b', 'c']); // ['a']\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: ['a', 'c']\n});\ncontroller.contains('a');    // true\ncontroller.contains('b');    // false\n```", "```js\nvar controller = Ember.ArrayController.create({\n  model: ['a', 'b', 'c', undefined, null]\n});\ncontroller.compact();    // ['a', 'b', 'c']\n```", "```js\nvar areEven = [2, 2, 4, 24, 80].every(condition); // true\nvar areEven = [1, 2, 3, 4, 5].every(condition);     // false\n\nfunction condition(integer){\n  return integer %2 === 0;\n}\n```", "```js\n[2, 2, 4, 24, 80].filter(condition); // [2, 2, 4, 24, 80]\n[1, 2, 3, 4, 5].filter(condition);     // [2, 4]\n\nfunction condition(integer){\n  return integer %2 === 0;\n}\n```", "```js\nvar colors = [\n  { name: 'red', isPrimary: true },\n  { name: 'green', isPrimary: false },\n  { name: 'black', isPrimary: undefined },\n  { name: 'white', isPrimary: null },\n];\ncolors.filter(condition);     // [{ name: 'red', isPrimary: true }]\nfunction condition(color){\n  return !!color.isPrimary;\n}\n```", "```js\nvar colors = [\n  { name: 'red', isPrimary: true },\n  { name: 'green', isPrimary: false },\n  { name: 'black', isPrimary: undefined },\n  { name: 'white', isPrimary: null },\n];\ncolors.filterBy('isPrimary');     // [{ name: 'red', isPrimary: true }]\n```", "```js\nvar colors = [\n  { name: 'red', isPrimary: true },\n  { name: 'green', isPrimary: false },\n  { name: 'black', isPrimary: undefined }\n];\ncolors.filter(condition)[0];     // { name: 'red', isPrimary: true }\nfunction condition(color){\n  return !!color.isPrimary;\n}\n```", "```js\nvar colors = [\n  { name: 'red', isPrimary: true },\n  { name: 'green', isPrimary: false },\n  { name: 'black', isPrimary: undefined }\n];\ncolors.find(condition);     // { name: 'red', isPrimary: true }\nfunction condition(color){\n  return !!color.isPrimary;\n}\n```", "```js\nvar colors = [\n  { name: 'red', isPrimary: true },\n  { name: 'green', isPrimary: false },\n  { name: 'black', isPrimary: undefined }\n];\ncolors.findBy('isPrimary', true);     // { name: 'red', isPrimary: true }\n```", "```js\nvar colors = ['red', 'blue'];\ncolors.insertAt(1, 'yellow'); // ['red',  'yellow', 'blue'];\ncolors.insertAt(10, 'green'); // Error: Index out of range\ncolors.objectAt(0); // 'red'\ncolors.objectAt(10); // undefined\ncolors.objectAt(-1); // undefined - negative index\n```", "```js\nvar fruits = ['mango', 'apple, 'banana', 'orange', 'papaya', 'lemon'];\nfruits.removeAt(0); // [apple, 'banana', 'orange', 'papaya', 'lemon'];\nfruits.removeAt(1, 2); [apple, 'papaya', 'lemon'];\nfruits.removeAt (10, 3); // Error: Index out of range\n```", "```js\nvar fruits = ['mango', 'apple', 'banana', 'orange', 'papaya', 'lemon'];\nfruits.map(function(fruit){\n  return {name: fruit};\n});\n// [\n//  { name: 'mango'},\n//  { name: 'apple'},\n//  { name: 'banana'},\n//  { name: 'orange'},\n//  { name: 'papaya'},\n//  { name: 'lemon'}\n// ];\n```", "```js\nvar fruits = [\n { name: 'mango'},\n { name: 'apple'},\n { name: 'banana'},\n { name: 'orange'},\n { name: 'papaya'},\n { name: 'lemon'}\n];\nfruits.mapBy('name');\n// ['mango', 'apple', 'banana', 'orange', 'papaya', 'lemon'];\n```", "```js\nvar Dog = Em.Object.extend({\n  bark: function(){\n    console.log('woof: %s', this.get('name'));\n  }\n});\n// model\nvar dogs = ['bo', 'sunny'].map(function(name){\n  return Dog.create({\n    name: name\n  });\n});\ndogs.forEach(function(dog){\n  dog.bark();\n});\n// woof: bo\n// woof: sunny\n```", "```js\n['papaya', 'apple', 'banana', 'orange', 'papaya', 'apple'].uniq();\n// [\"papaya\", \"apple\", \"banana\", \"orange\"]\n```", "```js\nvar controller = Ember.ArrayControler.create({\n  model: [\n   {name: 'W.A.M.S', album: 'Folie a deux'},    {name: 'Thriller', album: 'Infinity on high'},   {name: 'Tiffany blues', album: 'Folie a deux'},\n  ],\n  sortProperties: ['name', 'album'],\n  sortAscending: true\n});\n```", "```js\n{{! posts/new template }}\n\n<form {{action 'save' model on='submit'}}>\n  {{input name='title' value=title}}\n  {{textarea name='body' value=body}}\n  <button type='submit'>Create</button>\n  <button type='cancel' {{action 'cancel' this}}>Cancel</button>\n</form>\n```", "```js\nApp.PostsNewController = Ember.ObjectController.extend({\n  actions: {\n    save: function(post){\n      post.save();\n    },\n    cancel: function(post){\n      post.rollback();\n    }\n  }\n});\n```", "```js\n<ul class=\"tabs\">\n  {{#each}}\n  <li    {{bind-attr selected=\"selected\"}} \n    {{action \"selected\" this}}>\n      {{name}}\n  </li>\n  {{/each}}\n<ul>\n```", "```js\n.tabs .selected{\n  color: deepskyblue\n}\n```", "```js\nApp.TabsRoute = Ember.Route.extend({\n\n  model: function(){\n\n    return [{\n\n      name: 'tab 1',\n\n      body: 'tab 1 content'\n\n    }, {\n\n      name: 'tab 2',\n\n      body: 'tab 2 content'\n\n    }];\n  }\n\n});\n\nApp.TabsController = Ember.ArrayController.extend({\n\n  actions: {\n\n    selected: function(selectedTab){\n\n      this.forEach(function(tab){\n\n        var selected = tab.get('name') === selectedTab.get('name');\n\n        tab.set('selected', selected);\n\n      });\n\n    }\n\n  }\n\n});\n```", "```js\n  this.resource('post', {path: '/post/:post_id'}, function(){\n    this.resource('comments', function(){\n  });    });\n```", "```js\n{{! comments template}}\n<h1> Comments for <h1>\n<ul>\n  {{#each comments}}\n  <li>{{user}}: {{body}}</li>\n  {{/each}}\n</ul>\n```", "```js\nApp.CommentsController = Ember.Controller.extend({\n  needs: ['post']\n});\n```", "```js\n{{! comments template}}\n<h1>Comment listing for {{controller.controllers.post.title}}</h1>\n<ul>\n     {{#each comments}}\n  <li>{{user}}: {{body}}</li>\n  {{/each}}\n</ul>\n```", "```js\nApp.AController = Ember.Controller.extend({\n  needs: ['b']\n}); \nApp.BController = Ember.Controller.extend({\n  needs: ['a']\n}); \n```", "```js\nApp.IndexRoute = Ember.Route.extend({\n  redirect: function(){\n    this.transintionTo('posts');\n  }\n});\n```", "```js\nApp.PostsNewController = Ember.ObjectController.extend({\n  actions: {\n    cancel: function(post){\n      this.transitionToRoute('posts');\n    }\n  }\n});\n```"]