["```js\n    $ ionic start MyAppVersion blank --v2\n    $ cd MyAppVersion \n\n    ```", "```js\n    $ ionic plugin add cordova-plugin-app-version\n\n    ```", "```js\n    <widget id=\"com.ionicframework.myappversion637242\" version=\"0.0.123\"  >\n\n    ```", "```js\n    $ mkdir ./src/services\n\n    ```", "```js\n    import {Injectable} from '@angular/core';\n    import {AppVersion} from 'ionic-native';\n\n    @Injectable()\n    export class MyEnv {\n      public appVersion: any;\n\n      constructor() {\n        this.appVersion = AppVersion;\n      }\n\n      getAppVersion() {\n        return this.appVersion.getVersionCode();\n      }\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { MyEnv } from '../services/myenv';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: [MyEnv]\n    })\n    export class AppModule {}\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          MyAppVersion\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding class=\"center home\">\n      <button ion-button (click)=\"getVersion()\" >Get App Version</button>\n      <p class=\"large\" *ngIf=\"ver\">\n        MyAppVersion {{ ver }}\n      </p>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { MyEnv } from '../../services/myenv';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      public ver: string;\n\n      constructor(private navCtrl: NavController, public myEnv: MyEnv) {\n        this.myEnv = myEnv;\n      }\n\n      getVersion() {\n        console.log(this.myEnv.getAppVersion());\n        this.myEnv.getAppVersion().then((data) => this.ver = data);\n      }\n    }\n    ```", "```js\n    .home {\n      p.large {\n        font-size: 16px;\n      }\n    }\n\n    ion-content {\n      &.center {\n        text-align: center;\n      }\n    }\n    ```", "```js\n    $ ionic run ios\n\n    ```", "```js\n    $ ionic run android\n\n    ```", "```js\nproviders: [MyEnv]\n```", "```js\n  getAppVersion() {\n    return this.appVersion.getVersionCode();\n  }\n```", "```js\n  getVersion() {\n    console.log(this.myEnv.getAppVersion());\n    this.myEnv.getAppVersion().then((data) => this.ver = data);\n  }\n```", "```js\n    $ ionic build ios\n\n    ```", "```js\n~/Library/Developer/Xcode/Archives\n```", "```js\n    $ ionic package build --release android\n\n    ```", "```js\n    $ keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000\n\n    ```", "```js\n    $ jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore HelloWorld-release-unsigned.apk alias_name\n\n    ```", "```js\n    $ zipalign -v 4 HelloWorld-release-unsigned.apk HelloWorld.apk\n\n    ```"]