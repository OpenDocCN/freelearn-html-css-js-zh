["```js\n    <html>\n      <head>\n        <title>MyApp</title>\n      </head>\n      <body>\n        <h1>This is MyApp.</h1>\n      </body>\n    </html>\n    ```", "```js\n    cloudfiles: {\n      myapp: {\n        user: '[username]',\n        key: '[api key]',\n        region: 'LON',\n        upload: [{\n          container: 'myapp',\n          src: 'index.html',\n        }]\n      }\n    }\n    ```", "```js\n    Running \"cloudfiles:myapp\" (cloudfiles) task\n    Uploading into myapp\n    Syncing files to container: myapp\n    Uploading index.html to myapp (NEW)\n\n    ```", "```js\ncloudfiles: {\n  myapp: {\n    user: 'juriejan',\n    key: 'c980b9327b823b96dd83b51cdc5cf7dd',\n    region: 'LON',\n    upload: [{\n      container: 'myapp',\n      src: 'www/**/*',\n stripcomponents: 1\n    }]\n  }\n}\n```", "```js\ncloudfiles: {\n  myapp: {\n    user: 'juriejan',\n    key: 'c980b9327b823b96dd83b51cdc5cf7dd',\n    region: 'LON',\n    upload: [{\n      container: 'myapp',\n      src: 'index.html',\n      dest: '/htmlfiles/'\n    }]\n  }\n}\n```", "```js\n    <html>\n      <head>\n        <title>MyApp</title>\n      </head>\n      <body>\n        <h1>This is MyApp.</h1>\n      </body>\n    </html>\n    ```", "```js\n    aws_s3: {\n      myapp: {\n        options: {\n          accessKeyId: '[access key id]',\n          secretAccessKey: '[secret access key]',\n          region: 'eu-west-1',\n          bucket: 'gruntbook.myapp',\n        },\n        files: [{\n          src: 'index.html',\n          dest: '/'\n        }]\n      }\n    }\n    ```", "```js\n    Running \"aws_s3:myapp\" (aws_s3) task\n    Uploading to https://s3-eu-west-1.amazonaws.com/gruntbook.myapp/\n    .\n    List: (1 objects):\n    - index.html -> https://s3-eu-west-1.amazonaws.com/gruntbook.myapp/index.html\n\n    ```", "```js\naws_s3: {\n  myapp: {\n    options: {\n      accessKeyId: 'AKIAJG27ICB3NTY3SGCQ',\n      secretAccessKey: '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',\n      region: 'eu-west-1',\n      bucket: 'gruntbook.myapp',\n      access: 'private'\n    },\n    files: [{\n      src: 'index.html',\n      dest: '/'\n    }]\n  }\n}\n```", "```js\naws_s3: {\n  myapp: {\n    options: {\n      accessKeyId: 'AKIAJG27ICB3NTY3SGCQ',\n      secretAccessKey: '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',\n      region: 'eu-west-1',\n      bucket: 'gruntbook.myapp',\n      uploadConcurrency: 3\n    },\n    files: [{\n      expand: true,\n      cwd: 'www',\n      src: '**/*',\n      dest: '/'\n    }]\n  }\n}\n```", "```js\n    <html>\n      <head>\n        <title>MyApp</title>\n      </head>\n      <body>\n        <h1>This is MyApp.</h1>\n      </body>\n    </html>\n    ```", "```js\n    ftp_push: {\n      myapp: {\n        options: {\n          host: '[host]',\n          username: '[username]',\n          password: '[password]',\n          dest: '/www'\n        },\n        files: [{\n          src: 'index.html',\n        }]\n      }\n    }\n    ```", "```js\n    Running \"ftp_push:myapp\" (ftp_push) task\n    >> [username] successfully authenticated!\n    >> /www/index.html transferred successfully.\n    >> FTP connection closed!\n\n    ```", "```js\n    <html>\n      <head>\n        <title>MyApp</title>\n      </head>\n      <body>\n        <h1>This is MyApp.</h1>\n      </body>\n    </html>\n    ```", "```js\n    sftp: {\n      myapp: {\n        options: {\n          host: '[host]',\n          username: '[username]',\n          password: '[password]',\n          path: 'www/'\n        },\n        files: [{\n          src: 'index.html',\n        }]\n      }\n    }\n    ```", "```js\n    Running \"sftp:myapp\" (sftp) task\n    Copied 1 files\n\n    ```", "```js\nsftp: {\n  myapp: {\n    options: {\n      host: '[host]',\n      username: '[username]',\n      privateKey: grunt.file.read('[path to home]/.ssh/id_rsa'),\n passphrase: '[passphrase]',\n      path: 'www/'\n    },\n    files: [{\n      src: 'index.html',\n    }]\n  }\n}\n```", "```js\nsftp: {\n  myapp: {\n    options: {\n      host: '[host]',\n      username: '[username]',\n      agent: process.env.SSH_AUTH_SOCK,\n      path: 'www/'\n    },\n    files: [{\n      src: 'index.html',\n    }]\n  }\n}\n```", "```js\n    <html>\n      <head>\n        <title>MyApp Project Site</title>\n      </head>\n      <body>\n        <h1>Welcome!</h1>\n        <h2>This is the MyApp project site.</h1>\n      </body>\n    </html>\n    ```", "```js\n    'gh-pages': {\n      myapp: {\n        options: {\n          base: 'www'\n        },\n        src: '**/*'\n      }\n    }\n    ```", "```js\n    Running \"gh-pages:myapp\" (gh-pages) task\n    Cloning git@github.com:[name]/myapp.git into .grunt/grunt-gh-pages/gh-pages/myapp\n    Cleaning\n    Fetching origin\n    Checking out origin/gh-pages\n    Removing files\n    Copying files\n    Adding all\n    Committing\n    Pushing\n\n    ```", "```js\n    invalidate_cloudfront: {\n      myapp: {\n        options: {\n          key: '[key]',\n          secret: '[secret]',\n          distribution: '[distribution id]'\n        },\n        files: [{\n          expand: true,\n          cwd: 'www',\n          src: '**/*'\n        }]\n      }\n    }\n    ```", "```js\n    Running \"invalidate_cloudfront:myapp\" (invalidate_cloudfront) task\n    Invalidating 1 files: /index.html\n\n    0 Completed and 0 In Progress invalidations on: [dist id]\n\n    Creating invalidation for 1 files\n    Invalidation created at https://cloudfront.amazonaws.com/2014-10-21/distribution/[dist id]/invalidation/[invalidation id]\n\n    ```", "```js\n    sshexec: {\n      date: {\n        options: {\n          host: '[host]',\n          username: '[username]',\n          password: '[password]'\n        },\n        command: 'date'\n      }\n    }\n    ```", "```js\n    Running \"sshexec:myapp\" (sshexec) task\n    Thu Jan 1 12:00:00 GMT 2015\n\n    ```", "```js\nsshexec: {\n  date: {\n    options: {\n      host: '[host]',\n      username: '[username]',\n      privateKey: grunt.file.read('[path to home]/.ssh/id_rsa'),\n passphrase: '[passphrase]'\n    },\n    command: 'date'\n  }\n}\n```", "```js\nsshexec: {\n  date: {\n    options: {\n      host: '[host]',\n      username: '[username]',\n      agent: process.env.SSH_AUTH_SOCK\n    },\n    command: 'date'\n  }\n}\n```"]