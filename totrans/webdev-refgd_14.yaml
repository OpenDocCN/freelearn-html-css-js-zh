- en: Chapter 14. jQuery – The Popular JavaScript Library
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章。jQuery – 流行的JavaScript库
- en: jQuery is an open source JavaScript library. jQuery makes JavaScript programming
    much simpler.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery是一个开源的JavaScript库。jQuery使得JavaScript编程变得更加简单。
- en: 'The following are the notable corporate members of the jQuery foundation:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些jQuery基金会的知名企业成员：
- en: '**WordPress**: ([http://wordpress.org/](http://wordpress.org/))'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WordPress**: ([http://wordpress.org/](http://wordpress.org/))'
- en: '**IBM**: ([http://ibm.com/](http://ibm.com/))'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IBM**: ([http://ibm.com/](http://ibm.com/))'
- en: '**NeoBux**: ([http://www.neobux.com/](http://www.neobux.com/))'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NeoBux**: ([http://www.neobux.com/](http://www.neobux.com/))'
- en: '**Mozilla**: ([http://www.mozilla.org/](http://www.mozilla.org/))'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mozilla**: ([http://www.mozilla.org/](http://www.mozilla.org/))'
- en: '**Intel''s** **Open Source Technology Center**: ([http://software.intel.com/en-us/oss](http://software.intel.com/en-us/oss))'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**英特尔开源技术中心**：([http://software.intel.com/en-us/oss](http://software.intel.com/en-us/oss))'
- en: '**Adobe**: ([http://adobe.com/](http://adobe.com/))'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Adobe**: ([http://adobe.com/](http://adobe.com/))'
- en: You can find all about jQuery at their official website ([www.jQuery.com](http://www.jQuery.com)).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的官方网站[www.jQuery.com](http://www.jQuery.com)找到有关jQuery的所有信息。
- en: The evolution of JQuery
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JQuery的演变
- en: jQuery has been evolving since day one. There are two major releases available
    for download. The versions 1.x and 2.x differ in a way; 1.x is more stable and
    supports older browsers as well; whereas, 2.x has the same API as 1.x but without
    the support for legacy browsers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery自第一天起一直在发展。目前有两个主要版本可供下载。1.x和2.x版本有所不同；1.x版本更稳定，也支持旧版浏览器；而2.x版本与1.x版本具有相同的API，但不支持旧版浏览器。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A legacy browser is an older version of a browser that has not been updated
    to the latest available version.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 旧版浏览器是指尚未更新到最新版本的较老版本的浏览器。
- en: If you are using jQuery for a project, you can get another version that takes
    fewer resources and is faster to load.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个项目中使用jQuery，你可以获取一个占用资源更少且加载速度更快的版本。
- en: Getting started
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用
- en: To get started with developing jQuery, you can download jQuery software by visiting
    [https://jquery.com/](https://jquery.com/). In the following sections, we will
    cover a few download links.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始开发jQuery，你可以通过访问[https://jquery.com/](https://jquery.com/)下载jQuery软件。在接下来的章节中，我们将介绍一些下载链接。
- en: Installing JQuery
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装jQuery
- en: We can download jQuery from [http://jquery.com/download/](http://jquery.com/download/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从[http://jquery.com/download/](http://jquery.com/download/)下载jQuery。
- en: 'There are two versions of jQuery available for download: compressed and uncompressed.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可以下载的jQuery有两个版本：压缩版和未压缩版。
- en: To choose your option, go to the preceding link and right-click on **Save as**
    and select **My Computer** and download it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择你的选项，请访问前面的链接，右键点击**另存为**并选择**我的电脑**下载它。
- en: jQuery 1.x
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: jQuery 1.x
- en: We can download the minified version from [http://code.jquery.com/jquery-1.11.3.min.js](http://code.jquery.com/jquery-1.11.3.min.js).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从[http://code.jquery.com/jquery-1.11.3.min.js](http://code.jquery.com/jquery-1.11.3.min.js)下载压缩版本。
- en: For development, we can download the version 1.x from [http://code.jquery.com/jquery-1.11.3.js](http://code.jquery.com/jquery-1.11.3.js).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发，我们可以从[http://code.jquery.com/jquery-1.11.3.js](http://code.jquery.com/jquery-1.11.3.js)下载1.x版本。
- en: jQuery 2.x
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: jQuery 2.x
- en: We can download the minified version from [http://code.jquery.com/jquery-2.1.4.min.js](http://code.jquery.com/jquery-2.1.4.min.js).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从[http://code.jquery.com/jquery-2.1.4.min.js](http://code.jquery.com/jquery-2.1.4.min.js)下载压缩版本。
- en: For development, we can download the version 2.x from [http://code.jquery.com/jquery-2.1.4.js](http://code.jquery.com/jquery-2.1.4.js).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发，我们可以从[http://code.jquery.com/jquery-2.1.4.js](http://code.jquery.com/jquery-2.1.4.js)下载2.x版本。
- en: Using jQuery
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用jQuery
- en: jQuery is an extremely powerful JavaScript library. Here are a few sample pieces
    of code to give you a head start on your next project.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery是一个非常强大的JavaScript库。以下是一些代码示例，可以帮助你在下一个项目中快速入门。
- en: 'If you have downloaded the jQuery library to your hard disk and plan to use
    it from there, then you can include the following code in your HTML `<head>` tag:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经将jQuery库下载到你的硬盘上，并计划从那里使用它，那么你可以在你的HTML `<head>`标签中包含以下代码：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, `js` is a folder in the root directory of your project.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`js`是项目根目录中的一个文件夹。
- en: Tip
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To avoid longer loading time and performance issues, scripts should be added
    to the end of the `<body>` tag because when the browser loads the web page (let's
    say, `sample1.html`) and the scripts are at the end of the body tag, the browser
    can render the content of the page (the body) and only start loading scripts afterward.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免较长的加载时间和性能问题，脚本应该添加到 `<body>` 标签的末尾，因为当浏览器加载网页（比如说，`sample1.html`）并且脚本位于body标签的末尾时，浏览器可以渲染页面的内容（body），然后才开始加载脚本。
- en: 'Another preferred approach is to use the Google hosted libraries; these provide
    faster rendering to your pages and jQuery code than using your own hosted jQuery
    libraries. You can use the Google developer hosted libraries with the following
    piece of code:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery语法用于对HTML元素执行任何特定操作。
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The jQuery syntax is used to perform any specific action on elements of HTML.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个点/句号后跟类名作为参数传递。
- en: 'The basic syntax is as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here is the description:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是描述：
- en: '`$`: `$` is used to access the jQuery object.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$`: `$` 用于访问jQuery对象。'
- en: '`(selector)`: The `query (or find)` HTML elements using familiar CSS-style
    selector syntax. For example, you can select by element name, type, class or id.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`(selector)`: 使用熟悉的CSS样式选择器语法查询（或查找）HTML元素。例如，你可以通过元素名称、类型、类或ID来选择。 '
- en: '`jQuery action()`: For example, it can be events like click, keypress, focus
    and so on.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本语法如下：
- en: Selectors
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这通过类名选择元素。
- en: As the name suggests, `selector` attributes are used to select various elements
    of HTML. The `selector` attributes basically support the CSS selectors.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`jQuery action()`: 例如，它可以是指点击、按键、聚焦等事件。'
- en: 'Selectors begin with a `$` sign followed by parentheses: `$()`'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器以 `$` 符号开头，后跟括号：`$()`
- en: Element selectors
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 元素选择器
- en: 'Element selectors select elements using their name. For example, if a paragraph
    is written in the tags `<p>`, you can select this paragraph using its name, that
    is, `p`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 元素选择器通过名称选择元素。例如，如果一个段落被写为 `<p>` 标签，你可以通过其名称选择这个段落，即 `p`：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The name of the element to be chosen is passed as a parameter.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: Returns
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ID选择器通过ID选择元素。HTML的每个元素都可以有自己的标识ID，并且可以使用 `#` 访问。例如，要访问ID为text的元素，我们可以使用以下语法：
- en: The element selectors returns the element.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 元素选择器返回元素。
- en: Description
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: The element selectors select elements using their name. For example, if a paragraph
    is written in the tags `<p>`, you can select this paragraph using its name.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择的元素名称作为参数传递。
- en: ID selectors
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ID选择器
- en: 'ID selectors select elements using their ID. Each element of the HTML can have
    its own identifying ID and it can be accessed using `#`. For example, to access
    the element with the ID text, we can use the following syntax:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这通过ID选择元素。ID通常用于通过JavaScript中的井号或哈希符号唯一标识通过DOM访问的元素。
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 元素选择器通过名称选择元素。例如，如果一个段落被写为 `<p>` 标签，你可以通过其名称选择这个段落。
- en: The pound sign (or number sign) or a hash sign followed by the ID name is passed
    as a parameter.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 数字符号（或井号）后跟ID名称作为参数传递。
- en: Returns
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 另一种首选的方法是使用Google托管库；这些库比使用你自己的托管jQuery库提供了更快的页面渲染和jQuery代码。你可以使用以下代码片段使用Google开发者托管库：
- en: This returns the element using the ID passed as a parameter.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用作为参数传递的ID返回元素。
- en: Description
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This selects elements using their ID. IDs are usually used to uniquely identify
    DOM elements that are accessed through the pound symbol in Javascript or the hash
    sign.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，`selector` 属性用于选择HTML的各种元素。`selector` 属性基本上支持CSS选择器。
- en: Class selectors
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类选择器
- en: 'Class selectors select the elements using the class name. For example, a class
    named sample can be accessed by the following syntax:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用作为参数传递的`Class`名称返回元素。
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: A dot/period followed by the name of the class is passed as a parameter.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: Returns
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 类选择器通过类名选择元素。例如，一个名为sample的类可以通过以下语法访问：
- en: This returns the elements using the `Class` name passed as parameter.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 描述
- en: Description
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This selects the elements using the class name.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: Events
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件
- en: JQuery makes it easier to response when user interacts with the web page. For
    example, we can perform several tasks when they click somewhere, scroll the document,
    hover on field or anything like that. Whenever user interacts with the web page,
    an event is occurred. We can use event handling to execute our code.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery使得当用户与网页交互时更容易做出响应。例如，当他们在某处点击、滚动文档、悬停在字段上或类似操作时，我们可以执行多个任务。每当用户与网页交互时，都会发生一个事件。我们可以使用事件处理来执行我们的代码。
- en: Mouse events
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鼠标事件
- en: These are the events that are instantiated as soon as the user activates any
    of the functions related to the mouse. In the following sections, we will cover
    the description of each mouse event.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是在用户激活与鼠标相关的任何函数时立即实例化的事件。在接下来的章节中，我们将介绍每个鼠标事件的描述。
- en: .click()
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.click()`'
- en: The click event takes a DOM object and calls the function if or when it is clicked
    by the user.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 点击事件接收一个DOM对象，并在用户点击时调用该函数。
- en: Parameters
  id: totrans-79
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The click event receives a callback function.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 点击事件接收一个回调函数。
- en: Returns
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called on click.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在点击时调用的函数生成的响应。
- en: Description
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `click` event uses the ID to get what the user has clicked on and accordingly
    calls its respective function defined inside the body.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 点击事件使用ID获取用户点击的位置，并相应地调用在body内部定义的相应函数。
- en: Here is an example of its usage.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个例子。
- en: '**HTML Code**:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**jQuery Code**:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: .dblclick()
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.dblclick()`'
- en: We can attach a handler to the double-click event of an HTML element using the
    `.dblclick()` jQuery method.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`.dblclick()` jQuery方法将处理程序附加到HTML元素的**双击**事件。
- en: Parameters
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `dbclick` event receives a callback function.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`dbclick`事件接收一个回调函数。'
- en: Returns
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called on **double click**.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在**双击**时调用的函数生成的响应。
- en: Description
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `dblclick` event uses the ID to get what the user had double clicked on
    and accordingly calls its respective function.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`dblclick`事件使用ID获取用户双击的位置，并相应地调用其相应的函数。'
- en: Here is an example of its usage.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个例子。
- en: '**HTML Code**:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE8]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**jQuery Code**:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: .hover()
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.hover()`'
- en: The `hover` event uses the ID to get what the user had his mouse on and accordingly
    calls its respective function.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`hover`事件使用ID获取用户鼠标所在的位置，并相应地调用其相应的函数。'
- en: Parameters
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `hover` event receives a callback function.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`hover`事件接收一个回调函数。'
- en: Returns
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called **on hover**.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在**悬停**时调用的函数生成的响应。
- en: Description
  id: totrans-109
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `hover` event uses the ID to get what the user had his mouse on and accordingly
    calls its respective function.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`hover`事件使用ID获取用户鼠标所在的位置，并相应地调用其相应的函数。'
- en: Here is an example of its usage.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个例子。
- en: '**HTML Code**:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**jQuery Code**:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: .mousedown()
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.mousedown()`'
- en: The `.mousedown` event is activated when the user left-clicks on the mouse and
    highlights a specific text.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户左键点击鼠标并突出显示特定文本时，`.mousedown`事件被激活。
- en: Parameters
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `.mousedown()` function which gets executed when the element is clicked.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当元素被点击时执行的`.mousedown()`函数。
- en: Returns
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called **on click**.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在**点击**时调用的函数生成的响应。
- en: Description
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The event is activated when the user left-clicks and highlights some specific
    text.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户左键点击并突出显示一些特定文本时，此事件被激活。
- en: Here is an example of its usage.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个例子。
- en: '**HTML Code**:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE12]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**jQuery Code**:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: .mouseenter()
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.mouseenter()`'
- en: The event is activated when the mouse is hovered over the selected text and
    a function is called accordingly.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标悬停在所选文本上时，此事件被激活，并相应地调用一个函数。
- en: Parameters
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `mouseenter` event receives a callback function.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`mouseenter`事件接收一个回调函数。'
- en: Returns
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called **on mouse enter**.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在**鼠标进入**时调用的函数生成的响应。
- en: Description
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: This event is activated when the mouse is hovered over the selected text and
    a function is called accordingly. The event related to the `mouseenter()` is fired
    only once, so it does not matter if you hold the cursor over an element, the function
    assigned through this function is executed only once.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标悬停在所选文本上时，此事件被激活，并相应地调用一个函数。与`mouseenter()`相关的事件只触发一次，所以即使你将光标悬停在元素上，通过此函数分配的函数也只执行一次。
- en: Here is an example of its usage.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个例子。
- en: '**HTML Code**:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE14]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**jQuery Code**:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE15]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: .mouseleave()
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.mouseleave()`'
- en: The `.mouseleave` event is activated when the cursor is moved away from the
    HTML element.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 当光标从 HTML 元素移开时，会激活 `.mouseleave` 事件。
- en: Parameters
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `mouseleave` event receives a callback function.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`mouseleave` 事件接收一个回调函数。'
- en: Returns
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called **on clicked**.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了在点击时调用的函数生成的响应。
- en: Description
  id: totrans-148
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The event is activated when the mouse is left. The function is called accordingly.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标离开时，会激活此事件。函数会相应地被调用。
- en: Here is an example of its usage.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它使用的一个示例。
- en: '**HTML Code**:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE16]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**jQuery** **Code**:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE17]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: .mousemove()
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.mousemove()`'
- en: The `.mousemove` event is triggered when the mouse is being moved within an
    element.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标在元素内部移动时，会触发 `.mousemove` 事件。
- en: Parameters
  id: totrans-157
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `mousemove` event receives a callback function.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`mousemove` 事件接收一个回调函数。'
- en: Returns
  id: totrans-159
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called on mouse move.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了在鼠标移动时调用的函数生成的响应。
- en: Description
  id: totrans-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: This event is triggered when the mouse is being moved within an element.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标在元素内部移动时，会触发此事件。
- en: Here is an example of its usage.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它使用的一个示例。
- en: '**HTML Code**:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML 代码**:'
- en: '[PRE18]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**jQuery Code**:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQuery 代码**:'
- en: '[PRE19]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: .mouseout()
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.mouseout()`'
- en: The `.mouseout` event is triggered when the mouse pointer leaves the boundaries
    of the element. Any HTML element can be bound to this event.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标指针离开元素的边界时，会触发 `.mouseout` 事件。任何 HTML 元素都可以绑定到此事件。
- en: Parameters
  id: totrans-170
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `mouseout` event receives a callback function.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`mouseout` 事件接收一个回调函数。'
- en: Returns
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the response generated by the function called when the mouse moves
    out of the targeted element.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了在鼠标移出目标元素时调用的函数生成的响应。
- en: Description
  id: totrans-174
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `mouseout` event is triggered when the mouse pointer leaves the element.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标指针离开元素时，会触发 `mouseout` 事件。
- en: Here is an example of its usage.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它使用的一个示例。
- en: 'Required HTML Code:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的 HTML 代码：
- en: '[PRE20]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Required jQuery Code:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的 jQuery 代码：
- en: '[PRE21]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: .toggle()
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.toggle()`'
- en: This `.toggle()` function is used to bind multiple handlers to matching elements
    that are executed on alternate clicks.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 此 `.toggle()` 函数用于将多个处理程序绑定到匹配的元素上，这些处理程序在交替点击时执行。
- en: Parameters
  id: totrans-183
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The parameters of the `toggle()` function are `duration`, `easing`, and `callback`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`toggle()` 函数的参数是 `duration`、`easing` 和 `callback`。'
- en: The `duration` parameter is optional and is used to specify the speed of the
    hide and show effect. The possible values are fast, slow, and milliseconds. The
    default is 400 ms.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`duration` 参数是可选的，用于指定隐藏和显示效果的速率。可能的值有快速、慢速和毫秒。默认值为 400 毫秒。'
- en: The `easing` parameter is optional and is used to specify the `easing()` function
    that is to be used for animation. The default value is `string`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`easing` 参数是可选的，用于指定用于动画的 `easing()` 函数。默认值是 `string`。'
- en: The `callback` parameter too is optional and is used to specify the function
    that is to be called once the animation is complete.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`callback` 参数也是可选的，用于指定在动画完成后要调用的函数。'
- en: Returns
  id: totrans-188
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the output of the function that is called.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了被调用的函数的输出。
- en: Description
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: This function is used to check the visibility of an element and then alternate
    between the `hide()` and `show()` methods. The callback is always fired once the
    animation is complete and only once for the element that finds a match.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数用于检查元素的可见性，然后交替使用 `hide()` 和 `show()` 方法。回调总是在动画完成后被触发，并且对于找到匹配的元素只触发一次。
- en: Here is an example of its usage.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它使用的一个示例。
- en: 'Required HTML Code:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的 HTML 代码：
- en: '[PRE22]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Required jQuery Code:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的 jQuery 代码：
- en: '[PRE23]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Keyboard events
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 键盘事件
- en: The keyboard events are triggered on `Keyboard` functions, for example, when
    a button/key is pressed or released, and so on. Keyboard events can be controlled
    with the following built-in jQuery functions. The available functions are `KeyDown`,
    `KeyPress`, and `KeyUp`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 键盘事件在 `Keyboard` 函数上触发，例如，当按钮/键被按下或释放时，等等。键盘事件可以通过以下内置 jQuery 函数进行控制。可用的函数有
    `KeyDown`、`KeyPress` 和 `KeyUp`。
- en: The only practical difference between `KeyDown` and `KeyPress` is that `KeyPress`
    relays the character resulting from a `KeyPress` event and is only called if there
    is one.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyDown` 和 `KeyPress` 之间的唯一实际区别是 `KeyPress` 传递由 `KeyPress` 事件产生的字符，并且只有当存在一个时才会被调用。'
- en: 'For example, if you press *A* on your keyboard, you''ll get this sequence of
    events:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你在键盘上按下 *A* 键，你会得到以下事件序列：
- en: '`KeyDown`: `KeyCode=Keys.A`, `KeyData=Keys.A`, `Modifiers=Keys.None`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyDown`: `KeyCode=Keys.A`，`KeyData=Keys.A`，`Modifiers=Keys.None`'
- en: '`KeyPress`: `KeyChar=''a''`'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyPress`: `KeyChar=''a''`'
- en: '`KeyUp`: `KeyCode=Keys.A`'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyUp`: `KeyCode=Keys.A`'
- en: .keydown()
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.keydown()`'
- en: The `keydown` event is instantiated when a key is pressed by the user.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户按下键时，会实例化`keydown`事件。
- en: Parameters
  id: totrans-206
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `keydown` event sends the key pressed as a parameter.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`keydown`事件将按下的键作为参数发送。'
- en: Returns
  id: totrans-208
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the output of the function that is called when a key is pushed
    down.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了按键按下时调用的函数的输出。
- en: Description
  id: totrans-210
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `keydown` event is instantiated when the user presses a key, which calls
    the function to be executed.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户按下键时，会实例化`keydown`事件，这会调用要执行的功能。
- en: Here is an example of its usage.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的HTML代码：
- en: '[PRE24]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Required jQuery Code:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的jQuery代码：
- en: '[PRE25]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The preceding sample code selects the `div` element with the `myTarget` ID and
    triggers the alert function when a key is pressed down.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例代码选择了具有`myTarget` ID 的`div`元素，并在按下键时触发警报函数。
- en: .keypress()
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.keypress()`'
- en: The `keypress` event is instantiated when a key is pressed by the user.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户按下键时，会实例化`keypress`事件。
- en: Parameters
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This sends the key pressed as parameter.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这会将按下的键作为参数发送。
- en: Returns
  id: totrans-222
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the output of the function called by the key press.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了由按键触发的函数的输出。
- en: Description
  id: totrans-224
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `keypress` event is instantiated when the user presses a key, which calls
    the function to be executed.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户按下键时，会实例化`keypress`事件，这会调用要执行的功能。
- en: Here is an example of its usage.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的HTML代码：
- en: '[PRE26]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Required jQuery Code:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的jQuery代码：
- en: '[PRE27]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The preceding sample code selects the `div` element with the `myTarget` ID and
    triggers the alert function when a key is pressed.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例代码选择了具有`myTarget` ID 的`div`元素，并在按下键时触发警报函数。
- en: .keyup()
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.keyup()`'
- en: The `keyup` event occurs when the key that is pressed is released by the user.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户释放按下的键时，会发生`keyup`事件。
- en: Parameters
  id: totrans-234
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This sends the key pressed as a parameter.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 这会将按下的键作为参数发送。
- en: Returns
  id: totrans-236
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the output of the function that is called when key is released.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了释放键时调用的函数的输出。
- en: Description
  id: totrans-238
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The event occurs when the key pressed is released by the user.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户释放按下的键时，会发生此事件。
- en: Here is an example of its usage.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的HTML代码：
- en: '[PRE28]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Required jQuery Code:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的jQuery代码：
- en: '[PRE29]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The preceding sample code selects the `div` with the `myTarget` ID and triggers
    the alert function when a key is released.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例代码选择了具有`myTarget` ID 的`div`元素，并在释放键时触发警报函数。
- en: Form events
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单事件
- en: Form events are when elements inside a form are bound to jQuery. These events
    are helpful when it comes to processing data entered via forms. These events can
    be used on elements inside the `<form>` tags. We will now cover the description
    of each form event.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 表单事件是在表单内的元素绑定到jQuery时发生的。当需要处理通过表单输入的数据时，这些事件非常有用。这些事件可以用在`<form>`标签内的元素上。现在我们将介绍每个表单事件的描述。
- en: submit()
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`submit()`'
- en: The `submit` event, as the name suggests, is fired when a form is submitted.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，当表单提交时，会触发`submit`事件。
- en: Its syntax is `$(selector).submit(function)`.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法是`$(selector).submit(function)`。
- en: Parameters
  id: totrans-251
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The parameter taken is the function that is to be run once the form is submitted.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 传入的参数是表单提交后要运行的功能。
- en: Returns
  id: totrans-253
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This event does not return anything.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件不返回任何内容。
- en: Description
  id: totrans-255
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `submit()` function is a form event. It is used to bind form elements with
    a function that needs to be called whenever a form is submitted.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`submit()`函数是一个表单事件。它用于将函数绑定到表单元素，每当表单提交时都需要调用该函数。'
- en: 'Required HTML Code:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的HTML代码：
- en: '[PRE30]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Required JQuery Code:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的JQuery代码：
- en: '[PRE31]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: change()
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`.change()`'
- en: The `change` event is fired whenever the value of an element in a form changes.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 当表单中的元素值更改时，会触发`change`事件。
- en: Its syntax is `$(selector).change(function)`.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法是`$(selector).change(function)`。
- en: Parameters
  id: totrans-264
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The parameter taken is the function that is to be run once the value of the
    selected element changes.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 传入的参数是当所选元素的值更改时要运行的功能。
- en: Returns
  id: totrans-266
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This event does not return anything.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件不返回任何内容。
- en: Description
  id: totrans-268
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: This event is used to bind the event to a function that needs to be called whenever
    a value inside a form element changes. This function works only on the `<input>`,
    `<textarea>`, and `<select>` elements.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件用于将事件绑定到需要在表单元素中的值更改时调用的函数。此函数仅适用于`<input>`、`<textarea>`和`<select>`元素。
- en: 'Required HTML Code:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的HTML代码：
- en: '[PRE32]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Required JQuery Code:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的JQuery代码：
- en: '[PRE33]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: blur()
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`blur()`'
- en: The `blur` event is fired whenever an element in a form loses its focus and
    the user moves to the next element in the form.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).blur(function)`.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-277
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the element loses
    focus.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-279
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-281
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `blur` event is used to call a function whenever an element loses its focus.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Required JQuery Code:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: focus()
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `focus` event is fired whenever an element in a form gets its focus.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).focus(function)`.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-290
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the element is in
    focus.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-292
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `focus` event is used to call a function whenever an element is in focus.
    An element is generally *in focus* when we select it with the mouse or use the
    *Tab* key to navigate to it. This event is triggered only when the specified element
    is in focus and not the element's children.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: The focus event is generally used with the `blur` event.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Required JQuery Code:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: focusin()
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This event is fired whenever an element or its child is in focus.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).focusin(function)`.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-304
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the element is in
    focus.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-308
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `focusin` event is used to call a function whenever an element is in focus.
    This event is also called whenever a child element is in focus.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Required JQuery Code:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: focusout()
  id: totrans-314
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `focusout` event is fired whenever an element or its child is out of focus.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).focusout(function)`.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the element is in
    focus.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-319
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-321
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event is fired whenever an element or its child loses its focus. This event
    is generally used along with the `focusin` event.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Required JQuery Code:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Document events
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Document events are generally fired whenever a document is loaded. In the following
    sections, we will cover the description of each document event.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: resize()
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `resize` event is fired whenever the user resizes the window. Its syntax
    is as follows:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Parameters
  id: totrans-332
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the window is resized.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-334
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-336
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `resize` event is used to call a function when the user resizes the window.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Required JQuery Code:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: scroll()
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `scroll` event is fired whenever the user scrolls in the (scrollable) element.
    We can use this event to bind it to a function. Its syntax is as follows:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Parameters
  id: totrans-345
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The parameter taken is the function that is to be run once the user scrolls
    on the element.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-347
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This event does not return anything.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-349
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `scroll` event is fired whenever the user scrolls in an element.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Required JQuery Code:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Effects and animations
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Custom animations and effects can be added to various elements to enhance your
    interface using varying designs and colors.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: animate()
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `animate()` function uses some built-in animations to animate objects in
    and off the view.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: 'Its syntax is as follows:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Parameters
  id: totrans-361
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The animate function accepts the parameters `duration`, `easing`, and `callback`.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: The `duration` parameter is optional and is used to specify the speed of the
    hide and show effect. Its possible values are fast, slow, and milliseconds. The
    default is 400ms.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: The `easing` parameter is optional and is used to specify the easing function
    that is to be used for the animation. The default is `string`.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: The `callback` parameter too is optional and is used to specify the function
    that is to be called once the animation is complete.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Animations return the modified object containing all the modifications.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-368
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Custom animations and effects can be added to various elements to enhance your
    interface using varying designs and colors.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: stop()
  id: totrans-370
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `stop()` method stops the animation of the selected element.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).stop(stopAll,goToEnd);`
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-373
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This takes two Booleans, which are both set to false by default, as parameters.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This function stops running the animation as soon as it is called. If the first
    parameter is set to `true`, this removes all the other animations for the element.
    If the second parameter is set to `true`, it quickly finishes the current animation.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Required jQuery Code:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The preceding sample code creates a nice fade effect without the common problem
    of multiple queued animations.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: Hide, show, and toggle
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Elements can be set to hide and show, where hide makes the elements disappear
    from the eye of the user and show does the opposite.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: hide()
  id: totrans-387
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `hide()` function, if applied on an HTML element, hides it from view. This
    can be used in generating dynamic content based on user activity. The following
    is its syntax:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Parameters
  id: totrans-390
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-395
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-397
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This function is equivalent to setting the CSS property `display: none` for
    the selected element. It also saves the original display property for future use.'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Required jQuery Code:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: show()
  id: totrans-404
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `show()` function, if applied on an HTML element, makes the hidden element
    visible. This can be used to control and manipulate dynamic content based on user
    activity, for example, making certain form options visible after a certain checkbox
    is selected. The following is its syntax:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Parameters
  id: totrans-407
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-412
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-414
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This function removes the `display:none` property from the element and reverts
    it to the original. For example, if an element has a property `display:inline-block`
    and was hidden using the hide function, it will set the display back to inline-block.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Required jQuery Code:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: toggle()
  id: totrans-421
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `toggle()` function, if applied on an HTML element, toggles with the visibility
    of that element:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Parameters
  id: totrans-424
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes the speed in milliseconds and the callback function as parameters.
    The values taken are as follows:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-429
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-431
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This function is used to toggle with the visibility of the elements.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-433
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This function should not be confused with the mouse event function `toggle()`,
    which was explained previously. To ensure which `toggle()` function is being used.
    Check the parameters passed to the function.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Required jQuery Code:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Fade
  id: totrans-440
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fade can be used to set the visibility of elements.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: fadeIn()
  id: totrans-442
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `fadeIn()` function is similar to the `show()` function in functionality,
    but `fadeIn()` comes with a nice fading transition effect.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: Its syntax is `$(selector).fadeIn(speed,callback);`.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-445
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-450
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-452
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This works in a similar way to the `show()` function but with a fade transition.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Required jQuery Code:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: The preceding sample code selects the `div` element with the `sample` ID and
    fades in the image with the `myImage` ID with slow animation.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: fadeOut()
  id: totrans-460
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `fadeOut()` function is similar to the `hide()` function in functionality,
    but it comes with a nice fading transition effect.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: 'Its syntax is as follows: `$(selector).fadeOut(speed,callback);`'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  id: totrans-463
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-468
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-470
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `fadeOut()` function works in a similar way to the `hide()` function but
    with a fade transition.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Required jQuery Code:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: fadeToggle()
  id: totrans-477
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `fadeToggle()` function automatically toggles an element's display property
    from `none` to `block`, `inline`, and so on.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of its syntax:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Parameters
  id: totrans-481
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: '`Fast`'
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Slow`'
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Time` in milliseconds'
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-486
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This does not return anything.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-488
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If an element is already hidden, `fadeToggle()` will make it visible and vice
    versa.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of its usage.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: 'Required HTML Code:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Required jQuery Code:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: fadeTo()
  id: totrans-495
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: fadeTo()
- en: The `fadeTo()` function adjusts the opacity of the target element to the given
    value.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '`fadeTo()` 函数将目标元素的透明度调整到给定的值。'
- en: 'Its syntax is as follows:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 它的语法如下：
- en: '[PRE67]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Parameters
  id: totrans-499
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: 'This takes duration in milliseconds as parameters. The values taken as parameters
    are as follows:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 这以毫秒为单位的持续时间作为参数。作为参数接受的值如下：
- en: '`Fast`'
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fast`'
- en: '`Slow`'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Slow`'
- en: '`Time` in milliseconds'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间`（毫秒）'
- en: The other parameter is opacity for the target element. The value lies between
    `0` and `1` and the final parameter is the callback function.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个参数是目标元素的透明度。值介于 `0` 和 `1` 之间，最后一个参数是回调函数。
- en: Returns
  id: totrans-505
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This does not return anything.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会返回任何内容。
- en: Description
  id: totrans-507
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `fadeTo()` function is similar to the `fadeIn()` method. But the user can
    specify the target opacity here. For example, set an element to 50% opacity by
    pacing 0.5 as the opacity.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '`fadeTo()` 函数与 `fadeIn()` 方法类似。但用户可以在此处指定目标透明度。例如，将元素设置为 50% 透明度，可以将透明度设置为
    0.5。'
- en: 'Required HTML Code:'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 HTML 代码：
- en: '[PRE68]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Required jQuery Code:'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 jQuery 代码：
- en: '[PRE69]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Sliding
  id: totrans-513
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滑动
- en: Sliding methods are used to slide the elements in up or down directions. The
    `slideDown()` function will make element visible, while the `slideUp()` function
    will hide the contents of the element.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动方法用于在向上或向下方向滑动元素。`slideDown()` 函数将使元素可见，而 `slideUp()` 函数将隐藏元素的内部内容。
- en: slideDown()
  id: totrans-515
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: slideDown()
- en: The `slideDown()` function slides down the selected element with the specified
    speed.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '`slideDown()` 函数以指定的速度滑动选定的元素。'
- en: 'Here is an example of its syntax:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它的语法示例：
- en: '[PRE70]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Parameters
  id: totrans-519
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: 'This this takes speed in milliseconds and the callback function as parameters.
    The values taken as parameters are as follows:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要以毫秒为单位的速度和回调函数作为参数。作为参数接受的值如下：
- en: '`Fast`'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fast`'
- en: '`Slow`'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Slow`'
- en: '`Time` in milliseconds'
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间`（毫秒）'
- en: Returns
  id: totrans-524
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This does not return anything.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会返回任何内容。
- en: Description
  id: totrans-526
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: The `slideDown()` function makes a hidden element visible with a nice sliding
    effect.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '`slideDown()` 函数以平滑的滑动效果使隐藏的元素可见。'
- en: Here is an example of its usage.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 HTML 代码：
- en: '[PRE71]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Required jQuery Code:'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 jQuery 代码：
- en: '[PRE72]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: slideUp()
  id: totrans-533
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: slideUp()
- en: The `slideUp()` function slides up (hides) the selected element with the specified
    speed.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '`slideUp()` 函数以指定的速度向上滑动（隐藏）选定的元素。'
- en: 'Here is an example of its syntax:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它的语法示例：
- en: '[PRE73]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Parameters
  id: totrans-537
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: 'Takes speed in milliseconds and the callback function as parameters. The values
    taken as parameters are as follows:'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 以毫秒为单位的速度和回调函数作为参数。作为参数接受的值如下：
- en: '`Fast`'
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fast`'
- en: '`Slow`'
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Slow`'
- en: '`Time` in milliseconds'
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间`（毫秒）'
- en: Returns
  id: totrans-542
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This does not return anything.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会返回任何内容。
- en: Description
  id: totrans-544
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: This function hides the selected element with a nice sliding effect in the upward
    direction.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数以向上的滑动效果隐藏选定的元素。
- en: Here is an example of its usage.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 HTML 代码：
- en: '[PRE74]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Required jQuery Code:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 jQuery 代码：
- en: '[PRE75]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: slideToggle()
  id: totrans-551
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: slideToggle()
- en: The `slideToggle()` function toggles between `slideUp()` and `slideDown()` for
    the selected element with the specified speed.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '`slideToggle()` 函数在选定的元素之间切换 `slideUp()` 和 `slideDown()`，并指定速度。'
- en: 'Here is an example of its syntax:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它的语法示例：
- en: '[PRE76]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Parameters
  id: totrans-555
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: 'This takes speed in milliseconds and the callback function as parameters. The
    values taken as parameters are as follows:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 这以毫秒为单位的速度和回调函数作为参数。作为参数接受的值如下：
- en: '`Fast`'
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fast`'
- en: '`Slow`'
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Slow`'
- en: '`Time` in milliseconds'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间`（毫秒）'
- en: Returns
  id: totrans-560
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This does not return anything.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会返回任何内容。
- en: Description
  id: totrans-562
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: Just as `fadeToggle()` switches transitions between two states, `slideToggle()`
    can slide an element up or down.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 正如 `fadeToggle()` 在两种状态之间切换过渡一样，`slideToggle()` 可以滑动元素向上或向下。
- en: Here is an example of its usage.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是它用法的一个示例。
- en: 'Required HTML Code:'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 HTML 代码：
- en: '[PRE77]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Required jQuery Code:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 必须的 jQuery 代码：
- en: '[PRE78]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Callback
  id: totrans-569
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回调
- en: Multiple lines of statements are queued rather than being executed simultaneously.
    A callback function queues the statements and executes them one by one.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 多行语句是排队而不是同时执行。回调函数排队语句并逐个执行。
- en: 'Its syntax is as follows:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 它的语法如下：
- en: '[PRE79]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: The object created can be used to add, remove, instantiate, and disable callbacks.
    The supported functions are `callbacks.add()`, `callbacks.remove()`, `callbacks.fire()`,
    and `callbacks.disable()`.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的对象可以用来添加、删除、实例化和禁用回调。支持的函数有 `callbacks.add()`、`callbacks.remove()`、`callbacks.fire()`
    和 `callbacks.disable()`。
- en: callbacks.add()
  id: totrans-574
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: callbacks.add()
- en: This function is used to add all the functions in an array that are to be called
    later.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数用于添加稍后要调用的数组中的所有函数。
- en: Parameters
  id: totrans-576
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This takes flags as strings as its parameters.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 这以字符串形式作为其参数的标志。
- en: Returns
  id: totrans-578
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This method returns the callback's object to which it is associated with, (this).
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法返回与它关联的回调对象（this）。
- en: Description
  id: totrans-580
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `callbacks.add()` function adds the function to the callback array.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '`callbacks.add()` 函数将函数添加到回调数组中。'
- en: Here is an example of its usage.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是其使用的一个示例。
- en: 'Required jQuery Code:'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 必要的 jQuery 代码：
- en: '[PRE80]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: callbacks.fire()
  id: totrans-585
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: callbacks.fire()
- en: The `callbacks.fire()` function invokes the callbacks in a list with any arguments
    that have been passed.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '`callbacks.fire()` 函数使用已传递的任何参数调用列表中的回调函数。'
- en: Parameters
  id: totrans-587
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This takes a list of arguments to pass back to the callback list.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 这传递一个参数列表，将其传递回回调列表。
- en: Returns
  id: totrans-589
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the callback objects onto which it is attached.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回附加到其上的回调对象。
- en: Description
  id: totrans-591
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `callbacks.fire()` function is used to invoke the callbacks in a list with
    the arguments. The preceding example could be referenced.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: '`callbacks.fire()` 函数用于使用参数调用列表中的回调函数。前一个示例可以参考。'
- en: callbacks.remove()
  id: totrans-593
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: callbacks.remove()
- en: The `callbacks.remove()` function is used to remove a function from the array.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: '`callbacks.remove()` 函数用于从数组中删除一个函数。'
- en: Parameters
  id: totrans-595
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This takes flags as strings as its parameters.
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 这以字符串形式作为其参数的标志。
- en: Returns
  id: totrans-597
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the callbacks object onto which it is attached.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回附加到其上的回调对象。
- en: Description
  id: totrans-599
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This removes the function from the callback array. The preceding example could
    be referenced.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 这从回调数组中删除函数。前一个示例可以参考。
- en: callbacks.disable()
  id: totrans-601
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: callbacks.disable()
- en: The `callbacks.disable()` function disables the call of the next function in
    the array.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '`callbacks.disable()` 函数用于禁用数组中下一个函数的调用。'
- en: Parameters
  id: totrans-603
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This does not take any parameter.
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 这不接收任何参数。
- en: Returns
  id: totrans-605
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the callbacks object to which the object is attached.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回附加到其上的回调对象。
- en: Description
  id: totrans-607
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The execution of the next function in the array is prevented using the `callbacks.disable()`
    function:'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `callbacks.disable()` 函数防止执行数组中的下一个函数：
- en: '[PRE81]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Chaining
  id: totrans-610
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链式操作
- en: A varying amount of statements can be executed by chaining them on the same
    element. Each statement will be executed one after the other.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过将它们链接到同一元素上执行不同数量的语句。每个语句将依次执行。
- en: 'The value returned from each chained action is a new jQuery object. Chaining
    can be done by appending one action to the previous action; for example:'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 从每个链式操作返回的值是一个新的 jQuery 对象。链式操作可以通过将一个操作附加到前一个操作来完成；例如：
- en: '[PRE82]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Here, the actions `slideUp()` and `slideDown()` are performed one after the
    other.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`slideUp()` 和 `slideDown()` 操作依次执行。
- en: jQuery and the document object model
  id: totrans-615
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery 和文档对象模型
- en: 'The DOM defines a standard for accessing HTML and XML documents:'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: DOM 定义了访问 HTML 和 XML 文档的标准：
- en: '*"The W3C Document Object Model (DOM) is a platform and language-neutral interface
    that allows programs and scripts to dynamically access and update the content,
    structure, and style of a document."*'
  id: totrans-617
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"W3C 文档对象模型 (DOM) 是一个平台和语言中立的接口，允许程序和脚本动态访问和更新文档的内容、结构和样式。"*'
- en: 'The following are some ways of DOM manipulation in jQuery:'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些 jQuery 中 DOM 操作的方法：
- en: '`text()`: This sets or returns the text content of the selected elements'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text()`: 这用于设置或返回所选元素的文字内容'
- en: '`html()`: This sets or returns the content of the selected elements'
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`html()`: 这用于设置或返回所选元素的内容'
- en: '`val()`: This sets or returns the values of form fields'
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`val()`: 这用于设置或返回表单字段的值'
- en: jQuery traversing
  id: totrans-622
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery 遍历
- en: You can traverse through the elements in the order they are combined. All the
    elements are mostly combined in the form of a tree, and we can traverse them starting
    from the root.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按元素组合的顺序遍历元素。所有元素大多以树的形式组合，我们可以从根开始遍历它们。
- en: Note
  id: totrans-624
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Elements are not *combined* per se, but they are rather structured or modeled
    within the document object.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 元素本身并不是*组合*的，但它们在文档对象中被结构化或建模。
- en: 'Let''s take a look at the following image:'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下图片：
- en: '![jQuery traversing](img/Image1541.jpg)'
  id: totrans-627
  prefs: []
  type: TYPE_IMG
  zh: '![jQuery 遍历](img/Image1541.jpg)'
- en: 'Let''s take a look at the following description:'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下描述：
- en: The `<div>` element is the parent of `<ul>` and an ancestor of everything inside
    it
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div>` 元素是 `<ul>` 的父元素，也是其内部所有内容的祖先元素'
- en: The `<ul>` element is the parent of both the `<li>` elements and a child of
    `<div>`
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ul>` 元素是 `<li>` 元素的父元素，也是 `<div>` 的子元素'
- en: The left `<li>` element is the parent of `<span>`, child of `<ul>`, and a descendant
    of `<div>`
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左侧 `<li>` 元素是 `<span>` 的父元素，是 `<ul>` 的子元素，也是 `<div>` 的后代。
- en: The `<span>` element is a child of the left `<li>` and a descendant of `<ul>`
    and `<div>`
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<span>` 元素是左侧 `<li>` 的子元素，也是 `<ul>` 和 `<div>` 的后代。'
- en: The two `<li>` elements are siblings (they share the same parent)
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个 `<li>` 元素是兄弟元素（它们具有相同的父元素）
- en: The right `<li>` element is the parent of `<b>`, child of `<ul>`, and a descendant
    of `<div>`
  id: totrans-634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右侧 `<li>` 元素是 `<b>` 的父元素，是 `<ul>` 的子元素，也是 `<div>` 的后代。
- en: The `<b>` element is a child of the right `<li>` and a descendant of `<ul>`
    and `<div>`
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<b>` 元素是右侧 `<li>` 的子元素，也是 `<ul>` 和 `<div>` 的后代。'
- en: Ancestors
  id: totrans-636
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 祖先
- en: An ancestor is a parent!
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 祖先是父元素！
- en: We will cover three useful jQuery methods for traversing up the DOM tree in
    the following sections.
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将介绍三个有用的 jQuery 方法，用于在 DOM 树中向上遍历。
- en: parent()
  id: totrans-639
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: parent()
- en: The `parent()` function returns the parent of selected element.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: '`parent()` 函数返回选定元素的父元素。'
- en: Parameters
  id: totrans-641
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This takes no parameter, but it is called as a function of the jQuery object.
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不接收任何参数，但作为 jQuery 对象的函数被调用。
- en: Returns
  id: totrans-643
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the parent of the element.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回元素的父元素。
- en: Description
  id: totrans-645
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the parent of the selected element:'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回选定元素的父元素：
- en: '[PRE83]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'parents():'
  id: totrans-648
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'parents():'
- en: The `parents():` function returns an array of parents of the selected element
    till root.
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '`parents():` 函数返回选定元素到根元素的所有父元素数组。'
- en: Parameters
  id: totrans-650
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This takes no parameter but is called as a function of the jQuery object.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不接收任何参数，但作为 jQuery 对象的函数被调用。
- en: Returns
  id: totrans-652
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This function returns all the parents of an element.
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个元素的所有父元素。
- en: Description
  id: totrans-654
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `parents():` function returns an array of parents of the selected element
    till root:'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: '`parents():` 函数返回选定元素到根元素的所有父元素数组：'
- en: '[PRE84]'
  id: totrans-656
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'parentsUntil():'
  id: totrans-657
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'parentsUntil():'
- en: '[PRE85]'
  id: totrans-658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: The `parentsUntil()` method returns all ancestors between the `selector` and
    `stop` element.
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: '`parentsUntil()` 方法返回 `selector` 和 `stop` 元素之间的所有祖先元素。'
- en: An ancestor element is a parent, grandparent, great-grandparent, and so on.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 祖先元素是父元素、祖父元素、曾祖父元素等。
- en: Parameters
  id: totrans-661
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Stop an optional parameter that indicates where to stop the search for matching
    ancestor elements. Filter an optional parameter usually an expression to narrow
    down the search between selector and stop.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 停止是一个可选参数，表示搜索匹配祖先元素的停止位置。过滤器是一个可选参数，通常是一个表达式，用于在选择器和停止之间缩小搜索范围。
- en: Returns
  id: totrans-663
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns all parents between the two selected elements.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个选定元素之间的所有父元素。
- en: Description
  id: totrans-665
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the parents between two selected elements:'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个选定元素之间的父元素：
- en: '[PRE86]'
  id: totrans-667
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Descendants
  id: totrans-668
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 后代
- en: A child of the parent is called its descendant.
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 父元素的子元素称为其后代。
- en: In the following sections, we will cover two useful jQuery methods for traversing
    down the DOM tree.
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将介绍两个有用的 jQuery 方法，用于在 DOM 树中向下遍历。
- en: children()
  id: totrans-671
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: children()
- en: The `children()` function returns the children of the selected element.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '`children()` 函数返回选定元素的所有子元素。'
- en: Parameters
  id: totrans-673
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This takes no parameters but it is called as a function of the jQuery object.
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不接收任何参数，但作为 jQuery 对象的函数被调用。
- en: Returns
  id: totrans-675
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns an array of HTML elements that are children of the target element.
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回目标元素的所有子元素数组。
- en: Description
  id: totrans-677
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the children of the selected element:'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回选定元素的所有子元素：
- en: '[PRE87]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: find()
  id: totrans-680
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: find()
- en: The `find()` function returns an array of children up to the child that has
    no children of its own, which is also called a **leaf**.
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '`find()` 函数返回一个数组，直到没有子元素的子元素，这通常被称为 **叶**。'
- en: Parameters
  id: totrans-682
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `find()` function takes the HTML element as parameters.
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: '`find()` 函数接受 HTML 元素作为参数。'
- en: Returns
  id: totrans-684
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns all the children of the target element.
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回目标元素的所有子元素。
- en: Description
  id: totrans-686
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns an array of children up to the leaf of the tree:'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个数组，直到树中的叶元素：
- en: '[PRE88]'
  id: totrans-688
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Siblings
  id: totrans-689
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兄弟元素
- en: Siblings are elements that share a same parent.
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 兄弟元素是具有相同父元素的元素。
- en: There are many useful jQuery methods for traversing sideways in the DOM tree,
    which we cover here.
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 树中横向遍历有许多有用的 jQuery 方法，我们在这里进行介绍。
- en: siblings()
  id: totrans-692
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: siblings()
- en: '[PRE89]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: The `siblings()` function returns all the siblings of the selected element.
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: '`siblings()` 函数返回选定元素的所有兄弟元素。'
- en: Parameters
  id: totrans-695
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Filter is an optional parameter usually an expression to narrow down the search
    among all siblings.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器是一个可选参数，通常是一个表达式，用于在所有兄弟元素中缩小搜索范围。
- en: Returns
  id: totrans-697
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns all the siblings of the element.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回元素的所有兄弟元素。
- en: Description
  id: totrans-699
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns all the siblings of the selected element using the `filter`
    parameter:'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用 `filter` 参数返回所选元素的所有兄弟元素：
- en: '[PRE90]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: next()
  id: totrans-702
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: next()
- en: '[PRE91]'
  id: totrans-703
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Filter is an optional parameter usually an expression to narrow down the search
    for next sibling.
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤是一个可选参数，通常是一个表达式，用于缩小搜索下一个兄弟元素的范围。
- en: Parameters
  id: totrans-705
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This takes no parameters, but is called as a function of the jQuery object.
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数不接收任何参数，但作为 jQuery 对象的函数被调用。
- en: Returns
  id: totrans-707
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: This returns the next siblings of the element.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回元素的下一个兄弟元素。
- en: Description
  id: totrans-709
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the next siblings of the selected element using the `filter`
    parameter:'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用 `filter` 参数返回所选元素的下一个兄弟元素：
- en: '[PRE92]'
  id: totrans-711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: nextAll()
  id: totrans-712
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: nextAll()
- en: '[PRE93]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: The `nextAll()` function returns an array of the next siblings of the selected
    element.
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: '`nextAll()` 函数返回所选元素的下一个兄弟元素的数组。'
- en: Parameters
  id: totrans-715
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Filter is an optional parameter usually an expression to narrow down the search
    for all next sibling.
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤是一个可选参数，通常是一个表达式，用于缩小搜索所有下一个兄弟元素的范围。
- en: Returns
  id: totrans-717
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: This returns an array of all the next siblings of the target element.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回一个包含目标元素所有下一个兄弟元素的数组。
- en: Description
  id: totrans-719
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns an array of the next siblings of the selected element
    using the parameter:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回所选元素的下一个兄弟元素的数组，并使用参数：
- en: '[PRE94]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: nextUntil()
  id: totrans-722
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: nextUntil()
- en: '[PRE95]'
  id: totrans-723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: The `nextUntil()` function returns an array of next siblings of the selected
    element between two specified elements.
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '`nextUntil()` 函数返回一个数组，包含所选元素在两个指定元素之间的下一个兄弟元素。'
- en: Parameters
  id: totrans-725
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Stop an optional parameter that indicates where to stop the search for next
    matching sibling elements.
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 停止一个可选参数，表示搜索下一个匹配兄弟元素的停止位置。
- en: Filter an optional parameter usually an expression to narrow down the search
    for sibling elements between selector and stop.
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤一个可选参数通常是一个表达式，用于缩小在选择器和停止之间的兄弟元素的搜索范围。
- en: Returns
  id: totrans-728
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: This returns all the next siblings of the element.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回元素的 所有下一个兄弟元素。
- en: Description
  id: totrans-730
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns an array of next siblings of the selected element between
    two elements:'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个元素之间的所选元素的下一个兄弟元素的数组：
- en: '[PRE96]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: prev()
  id: totrans-733
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: prev()
- en: '[PRE97]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: The `prev()` function returns the previous siblings of the selected element.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: '`prev()` 函数返回所选元素的先前兄弟元素。'
- en: Parameters
  id: totrans-736
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Filter is an optional parameter usually an expression to narrow down the search
    for previous sibling.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤是一个可选参数，通常是一个表达式，用于缩小搜索前一个兄弟元素的范围。
- en: Returns
  id: totrans-738
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: The `prev()` function returns the previous siblings of the element.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '`prev()` 函数返回元素的先前兄弟元素。'
- en: Description
  id: totrans-740
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the previous siblings of the selected element using the
    `filter` parameter:'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用 `filter` 参数返回所选元素的前一个兄弟元素的数组：
- en: '[PRE98]'
  id: totrans-742
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: prevAll()
  id: totrans-743
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: prevAll()
- en: '[PRE99]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: The `prevAll()` function returns an array of the previous siblings of the selected
    element.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevAll()` 函数返回所选元素的前一个兄弟元素的数组。'
- en: Parameters
  id: totrans-746
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: Filter is an optional parameter usually an expression to narrow down the search
    for all previous siblings.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤是一个可选参数，通常是一个表达式，用于缩小搜索所有前一个兄弟元素的范围。
- en: Returns
  id: totrans-748
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: The `prevAll()` function returns the array of all the previous siblings of the
    element.
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevAll()` 函数返回元素的所有前一个兄弟元素的数组。'
- en: Description
  id: totrans-750
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns an array of the previous siblings of the selected element
    using the parameter:'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用参数返回所选元素的前一个兄弟元素的数组：
- en: '[PRE100]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: prevUntil()
  id: totrans-753
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: prevUntil()
- en: The `prevUntil()` function returns an array of the previous siblings of the
    selected element between two elements.
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: '`prevUntil()` 函数返回一个数组，包含所选元素在两个元素之间的前一个兄弟元素。'
- en: Parameters
  id: totrans-755
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: This takes the element up to which the search of siblings is limited.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 这限制了搜索兄弟元素的范围。
- en: Returns
  id: totrans-757
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: This returns an array of all the previous siblings of the element.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回元素的 所有前一个兄弟元素的数组。
- en: Description
  id: totrans-759
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns an array of the previous siblings of the selected element
    and the parameter:'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回所选元素的前一个兄弟元素的数组，并使用参数：
- en: '[PRE101]'
  id: totrans-761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Filtering
  id: totrans-762
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过滤
- en: The filtering method is used to locate a specific element based on its location.
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤方法用于根据其位置定位特定元素。
- en: first()
  id: totrans-764
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: first()
- en: The `first()` function outputs the first element of the selected elements.
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: '`first()` 函数输出所选元素的第一个元素。'
- en: Parameters
  id: totrans-766
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `first()` function takes the selected element as parameter.
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '`first()` 函数将所选元素作为参数。'
- en: Returns
  id: totrans-768
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: This returns a jQuery object that stores a reference to the first item from
    an array of items matching the provided selector string.
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回一个 jQuery 对象，存储对匹配提供的选择器字符串的项的数组中第一个项的引用。
- en: Description
  id: totrans-770
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function outputs the first element of the selected elements. The following
    example outputs the first `H1` heading inside the `<div>` tag:'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数输出所选元素中的第一个元素。以下示例输出 `<div>` 标签内的第一个 `H1` 标题：
- en: '[PRE102]'
  id: totrans-772
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: last()
  id: totrans-773
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最后()
- en: This function returns the last element of the selected elements.
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数返回所选元素中的最后一个元素。
- en: Parameters
  id: totrans-775
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `last()` function takes the selected element as parameter.
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '`last()` 函数接受所选元素作为参数。'
- en: Returns
  id: totrans-777
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns a jQuery object that stores a reference to the last item from an
    array of items matching the provided selector string.
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回一个 jQuery 对象，该对象存储对匹配提供的选择器字符串的项数组中最后一个项的引用。
- en: Description
  id: totrans-779
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function outputs the last element of the selected elements. The following
    example outputs the last `H1` heading inside the `<div>` tag:'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数输出所选元素中的最后一个元素。以下示例输出 `<div>` 标签内的最后一个 `H1` 标题：
- en: '[PRE103]'
  id: totrans-781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: eq()
  id: totrans-782
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: eq()
- en: The `eq()` function returns the element specified at the corresponding index
    number, provided that we begin the numbering from `0`. Hence, the first element
    will have its index number as `0`, the second element will have the index number
    `1`, and so on.
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq()` 函数返回对应索引号指定的元素，前提是我们从 `0` 开始编号。因此，第一个元素将具有索引号 `0`，第二个元素将具有索引号 `1`，依此类推。'
- en: Parameters
  id: totrans-784
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The `eq()` function takes the selected element and the index number as parameters.
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq()` 函数接受所选元素和索引号作为参数。'
- en: Returns
  id: totrans-786
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns the element at the specified index number.
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回指定索引号处的元素。
- en: Description
  id: totrans-788
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'This function returns the element specified at the corresponding index number.
    The following example returns the fifth `div` element:'
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数返回对应索引号指定的元素。以下示例返回第五个 `div` 元素：
- en: '[PRE104]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: filter()
  id: totrans-791
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤()
- en: The `filter()` function is used to obtain a list of elements that satisfy a
    particular condition. All the elements that satisfy the specified condition will
    be returned.
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '`filter()` 函数用于获取满足特定条件的元素列表。所有满足指定条件的元素都将被返回。'
- en: Parameters
  id: totrans-793
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: The element to be searched and the condition that the element must satisfy are
    taken as parameters here.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，接受的参数是搜索的元素和该元素必须满足的条件。
- en: Returns
  id: totrans-795
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns a list of elements that satisfy a specified condition.
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回满足指定条件的元素列表。
- en: Description
  id: totrans-797
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `filter()` function is useful for searching and obtaining a list of elements
    that satisfy a specified condition. In the following example, we will search and
    obtain a list of all the `<div>` elements that have their class named as `Feedback`:'
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: '`filter()` 函数用于搜索并获取满足指定条件的元素列表。在以下示例中，我们将搜索并获取所有具有名为 `Feedback` 的类的 `<div>`
    元素列表：'
- en: '[PRE105]'
  id: totrans-799
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Note
  id: totrans-800
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `not()` method is the reverse of the `filter()` method. If you want to find
    elements that do not satisfy the mentioned condition, `not()` can be used.
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: '`not()` 方法是 `filter()` 方法的逆操作。如果你想找到不满足所述条件的元素，可以使用 `not()`。'
- en: Using AJAX in jQuery
  id: totrans-802
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 jQuery 中使用 AJAX
- en: '**Asynchronous** **JavaScript and XML** (**AJAX**) was the base building block
    of **Single Page Applications** (**SPAs**). This method is used to update the
    content of a web page without reloading the whole page. This method helps save
    precious resources and decreases the time taken for loading a page considerably,
    since only parts of the page are reloaded and not the entire page.'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: '**异步** **JavaScript 和 XML** (**AJAX**) 是 **单页应用程序** (**SPA**) 的基础构建块。这种方法用于在不重新加载整个页面的情况下更新网页的内容。这种方法有助于节省宝贵的资源，并且可以显著减少页面加载时间，因为只有页面的部分被重新加载，而不是整个页面。'
- en: More than often, you have visited the Google search page for searching answers
    to your questions. Have you noticed how the page displays results as you type
    into the search box and provides useful suggestions of related searches? Or the
    product filters on Amazon and Ebay websites. These effects are achieved with AJAX.
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: 更多的时候，你访问谷歌搜索页面来寻找你问题的答案。你有没有注意到当你在搜索框中输入时，页面是如何显示结果并提供相关搜索的有用建议？或者亚马逊和 eBay
    网站上的产品过滤器。这些效果都是通过 AJAX 实现的。
- en: The jQuery Ajax load
  id: totrans-805
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: jQuery Ajax 加载
- en: The `load()` method loads data from a server and puts the returned data into
    the selected element.
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: '`load()` 方法从服务器加载数据并将返回的数据放入所选元素中。'
- en: 'Its syntax is as follows:'
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE106]'
  id: totrans-808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Parameters
  id: totrans-809
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The `load()` method take the `URL`, `data`, and `callback` as parameters.
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: '`load()` 方法接受 `URL`、`data` 和 `callback` 作为参数。'
- en: 'The `callback` parameter can have the following parameters:'
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: '`callback` 参数可以有以下参数：'
- en: '`responseTxt`: This parameter contains the resulting content when successful'
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`responseTxt`：此参数包含成功时的结果内容'
- en: '`statusTxt`: This parameter contains the status of the request, that is, `success`,
    `notmodified`, `error`, `timeout`, `parsererror`'
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`statusTxt`：此参数包含请求的状态，即 `success`、`notmodified`、`error`、`timeout`、`parsererror`'
- en: '`xhr`: This parameter contains the `XMLHttpRequest` object'
  id: totrans-814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xhr`：此参数包含 `XMLHttpRequest` 对象'
- en: Returns
  id: totrans-815
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: The data from the URL is placed in the selected element.
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: 从 URL 获取的数据放置在选定的元素中。
- en: Description
  id: totrans-817
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `load()` method loads data from a server and puts the returned data into
    the selected element. The following example loads the `Sample.txt` file into the
    specified `<div>` tag:'
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: '`load()` 方法从服务器加载数据并将返回的数据放入选定的元素中。以下示例将 `Sample.txt` 文件加载到指定的 `<div>` 标签中：'
- en: '[PRE107]'
  id: totrans-819
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: jQuery Ajax Get
  id: totrans-820
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: jQuery Ajax Get
- en: 'The `Get` request gets the data from the server with an HTTP `GET` request:'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '`Get` 请求通过 HTTP `GET` 请求从服务器获取数据：'
- en: '`GET`: This requests data from a specified resource'
  id: totrans-822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GET`：此请求从指定的资源请求数据'
- en: 'Its syntax is as follows:'
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE108]'
  id: totrans-824
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Parameters
  id: totrans-825
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This takes the URL and callback as parameters. Here the `callback` parameter
    is optional.
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: 这接受 URL 和回调作为参数。在这里，`callback` 参数是可选的。
- en: Returns
  id: totrans-827
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: The `Get` request returns the data fetched from the URL.
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '`Get` 请求返回从 URL 获取的数据。'
- en: Description
  id: totrans-829
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `Get` request gets the data from the server with an HTTP `GET` request:'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: '`Get` 请求通过 HTTP `GET` 请求从服务器获取数据：'
- en: '[PRE109]'
  id: totrans-831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The required HTML file is as follows:'
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的 HTML 文件如下：
- en: '[PRE110]'
  id: totrans-833
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: The preceding code will fetch the data from the html file and the line **This
    is the data from the Sample.html** will be displayed in an alert box on triggering.
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将从 html 文件中获取数据，并在触发时，行 **这是从 Sample.html 获取的数据** 将在警告框中显示。
- en: jQuery Ajax Post
  id: totrans-835
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: jQuery Ajax Post
- en: 'The `Post` request gets data from the server with an HTTP `POST` request:'
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: '`Post` 请求通过 HTTP `POST` 请求从服务器获取数据：'
- en: '`POST`: This requests data from a specified resource'
  id: totrans-837
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`：此请求从指定的资源请求数据'
- en: 'Its syntax is as follows:'
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE111]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Parameters
  id: totrans-840
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: This takes `URL`, `data`, and `callback` as parameters. Here, the `data` and
    `callback` parameters are optional.
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 这接受 `URL`、`data` 和 `callback` 作为参数。在这里，`data` 和 `callback` 参数是可选的。
- en: Returns
  id: totrans-842
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: This returns the data fetched from the URL.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回从 URL 获取的数据。
- en: Description
  id: totrans-844
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This gets data from the server with an HTTP `POST` request:'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 这通过 HTTP `POST` 请求从服务器获取数据：
- en: '[PRE112]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'The required HTML file is as follows:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的 HTML 文件如下：
- en: '[PRE113]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: The preceding code will fetch the data from the HTML file and **This is the
    data from the Sample.html** will be displayed in an alert box when triggered.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将从 HTML 文件中获取数据，并在触发时，**这是从 Sample.html 获取的数据** 将在警告框中显示。
- en: Miscellaneous jQuery functions
  id: totrans-850
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他 jQuery 函数
- en: Here are a few more jQuery functions.
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些更多的 jQuery 函数。
- en: noConflict()
  id: totrans-852
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: noConflict()
- en: Different scripts cannot work at the same time. Hence, in order to remove the
    conflicts, we use the `noConflict()` function.
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的脚本不能同时工作。因此，为了消除冲突，我们使用 `noConflict()` 函数。
- en: 'Its syntax is as follows:'
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE114]'
  id: totrans-855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Parameters
  id: totrans-856
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: An optional parameter for this method is `removeAll`. This parameter is used
    to release the control over all jQuery variables. It's a Boolean value. If present,
    it indicates that the control over all values must be released.
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法的一个可选参数是 `removeAll`。此参数用于释放对所有 jQuery 变量的控制。它是一个布尔值。如果存在，则表示必须释放对所有值的控制。
- en: Returns
  id: totrans-858
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: This method does not return anything.
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法不返回任何内容。
- en: Description
  id: totrans-860
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `$` symbol is used by various JavaScript libraries, which if used alongside
    jQuery may cause issues. The `noConflict()` function returns the control of the
    `$` symbol to the other library.
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: '`$` 符号被各种 JavaScript 库使用，如果与 jQuery 一起使用可能会引起问题。`noConflict()` 函数将 `$` 符号的控制权交回给其他库。'
- en: 'The following code shows how one event has to wait when the other event is
    in process:'
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了当一个事件正在处理时，另一个事件必须等待的情况：
- en: '[PRE115]'
  id: totrans-863
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: param()
  id: totrans-864
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: param()
- en: The `param()` method is used to create a serialized representation of an object.
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: '`param()` 方法用于创建对象的序列化表示。'
- en: 'Its syntax is as follows:'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE116]'
  id: totrans-867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Parameters
  id: totrans-868
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`Object` and `trad` are the parameters used in this function. `Trad` is an
    optional parameter and is used when a traditional param serialization is needed.
    This parameter is optional.'
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: '`Object` 和 `trad` 是此函数中使用的参数。`Trad` 是一个可选参数，在需要传统参数序列化时使用。此参数是可选的。'
- en: Returns
  id: totrans-870
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回
- en: This returns a serialized representation of the object.
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回对象的序列化表示。
- en: Description
  id: totrans-872
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `param()` method is used to generate a serialized representation of an
    object or an array. This is mostly used where a query string is to be generated.
    The following example creates a query string for the student object:'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: '`param()` 方法用于生成对象或数组的序列化表示形式。这主要用于生成查询字符串。以下示例为学生对象创建了一个查询字符串：'
- en: '[PRE117]'
  id: totrans-874
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: index()
  id: totrans-875
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: index()
- en: The `index()` method is used to find out the position of an element.
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: '`index()` 方法用于找出元素的位置。'
- en: 'Its syntax is as follows:'
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE118]'
  id: totrans-878
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Parameters
  id: totrans-879
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The element whose position is to be found is taken as a parameter.
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找位置的元素被作为参数。
- en: Returns
  id: totrans-881
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This method returns the index position of the first occurrence of the specified
    element, which is relative to the selector or specified element.
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法返回指定元素的第一次出现的位置，相对于选择器或指定元素。
- en: Description
  id: totrans-883
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `index()` method is used to get the position of the element that is passed
    as a parameter. The first occurrence of that element is searched for and its position
    is returned. If the particular element is not found, then `-1` is returned. The
    position numbering begins at `0`.
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: '`index()` 方法用于获取作为参数传递的元素的位置。搜索该元素的第一种出现，并返回其位置。如果找不到特定元素，则返回 `-1`。位置编号从 `0`
    开始。'
- en: 'The following example finds the position of the `div` element and returns its
    index in an alert box:'
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例找到 `div` 元素的位置，并在警告框中返回其索引：
- en: '[PRE119]'
  id: totrans-886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: each()
  id: totrans-887
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: each()
- en: The `each()` function is used to run a specific function for every element that
    matches the criteria.
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: '`each()` 函数用于为符合标准的每个元素运行特定函数。'
- en: 'Its syntax is as follows:'
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：
- en: '[PRE120]'
  id: totrans-890
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Parameters
  id: totrans-891
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The only parameter this takes is the `function(index, element)`. Here the position
    of the selector can be specified at `index` and the element can be specified in
    `element`.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法仅接受一个参数，即 `function(index, element)`。在这里，可以在 `index` 中指定选择器的位置，并在 `element`
    中指定元素。
- en: Returns
  id: totrans-893
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This method does not return anything.
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法不返回任何内容。
- en: Description
  id: totrans-895
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `each()` function runs the specified function for each and every element
    that matches the criteria. In the following example, an alert is created every
    time the `<div>` tag is encountered:'
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: '`each()` 函数为符合标准的每个元素运行指定的函数。在以下示例中，每次遇到 `<div>` 标签时都会创建一个警告框：'
- en: '[PRE121]'
  id: totrans-897
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: data()
  id: totrans-898
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: data()
- en: The `data()` method is used to obtain data from the selected element. It is
    also used to submit data to the selected element.
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: '`data()` 方法用于从所选元素获取数据。它也用于向所选元素提交数据。'
- en: 'Its syntax is as follows: `$(selector).data(name)`'
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法如下：`$(selector).data(name)`
- en: Parameters
  id: totrans-901
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '[PRE122]'
  id: totrans-902
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: To attach data to element, parameters passed are name and value. that name is
    then used to retrieve the data value.
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据附加到元素，传递的参数是名称和值。该名称随后用于检索数据值。
- en: Returns
  id: totrans-904
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This returns data from the selected element.
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从所选元素返回数据。
- en: Description
  id: totrans-906
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `data()` function is used to attach data to or from an element. In the
    following example, we first attach the data to the `<div>` element:'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: '`data()` 函数用于将数据附加到或从元素中。在以下示例中，我们首先将数据附加到 `<div>` 元素：'
- en: '[PRE123]'
  id: totrans-908
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: removeData()
  id: totrans-909
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: removeData()
- en: The `removeData()` method is used to remove data that was previously attached
    to the element with the `data()` method.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: '`removeData()` 方法用于使用 `data()` 方法从元素中删除之前附加的数据。'
- en: Its syntax is `$(selector).removeData(name)`.
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为 `$(selector).removeData(name)`。
- en: Parameters
  id: totrans-912
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The name of the data that is to be removed is taken as a parameter.
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除的数据的名称被作为参数。
- en: Returns
  id: totrans-914
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: This does not return anything.
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: 这不返回任何内容。
- en: Description
  id: totrans-916
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'As the name suggests, the `removeData()` method is used to remove data that
    was already set. The following example removes data that was set on the `<div>`
    tag:'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，`removeData()` 方法用于删除已设置的数据。以下示例删除了设置在 `<div>` 标签上的数据：
- en: '[PRE124]'
  id: totrans-918
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: jQuery plugins
  id: totrans-919
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery 插件
- en: 'Plugins are used to create a modular part of an application using various elements
    that can be used in multiple projects. Here is a simple demonstration:'
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: 插件用于使用可以在多个项目中使用的各种元素创建应用程序的模块化部分。以下是一个简单的演示：
- en: '[PRE125]'
  id: totrans-921
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Note
  id: totrans-922
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more support on creating custom plugins, you can visit [https://learn.jquery.com/plugins/basic-plugin-creation/](https://learn.jquery.com/plugins/basic-plugin-creation/).
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多有关创建自定义插件的支持，您可以访问 [https://learn.jquery.com/plugins/basic-plugin-creation/](https://learn.jquery.com/plugins/basic-plugin-creation/)。
- en: 'The jQuery community is huge. Developers have made some really great jQuery
    plugins and extensions that you can use in your projects. All these projects are
    available free of cost; however, there are some paid options too. The following
    are some great jQuery plugins:'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery社区非常庞大。开发者们制作了一些真正优秀的jQuery插件和扩展，你可以在你的项目中使用它们。所有这些项目都是免费提供的；然而，也有一些付费选项。以下是一些优秀的jQuery插件：
- en: '**NIVO Slider**: This is one of the oldest and most popular image gallery plugins
    by **Dev7Studios**. It has a built-in image cropping system and comes with many
    themes and visual transitions.'
  id: totrans-925
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NIVO Slider**：这是由**Dev7Studios**开发的最古老且最受欢迎的图片画廊插件之一。它内置了图片裁剪系统，并附带了许多主题和视觉过渡效果。'
- en: '**nanoGALLERY**: This is another great image gallery plugin that comes with
    navigation, lightbox, lazy load, thumbnails, and many more goodies. It is also
    compatible with Bootstrap.'
  id: totrans-926
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**nanoGALLERY**：这是另一个优秀的图片画廊插件，它包含了导航、灯箱、懒加载、缩略图和许多其他功能。它还与Bootstrap兼容。'
- en: '**MixItUp**: This plugin will help you make AJAX filters for your portfolio
    and galleries with smooth animations.'
  id: totrans-927
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MixItUp**：这个插件将帮助你为你的作品集和画廊制作AJAX过滤器，并带有平滑的动画效果。'
- en: '**jQuery Knob**: This is an extremely innovative jQuery plugin that makes touchable
    and clickable dials. Even if you are not using it in your projects, you should
    definitely take a look at its implementation.'
  id: totrans-928
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jQuery Knob**：这是一个极具创新性的jQuery插件，它使得旋钮可触摸和可点击。即使你不在你的项目中使用它，你也应该一定看看它的实现方式。'
- en: '**Tubular**: This plugin lets you set a YouTube video as your web page''s background.'
  id: totrans-929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Tubular**：这个插件允许你将YouTube视频设置为你的网页背景。'
- en: '**Arc Text**: This plugin converts your text into arc shapes. You can use your
    mouse to push and pull the text to shape them in arcs.'
  id: totrans-930
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Arc Text**：这个插件可以将你的文本转换为弧形。你可以使用鼠标推动和拉动文本，使其形成弧形。'
- en: jQuery resources
  id: totrans-931
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery资源
- en: If you are hungry for more jQuery goodies, head over to this great website called
    **jQuery Rain** at [www.jqueryrain.com](http://www.jqueryrain.com). They have
    over 3500 jQuery plugins and tutorials with working demonstrations and sample
    codes.
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你渴望更多的jQuery好东西，请访问这个名为**jQuery Rain**的网站[www.jqueryrain.com](http://www.jqueryrain.com)。他们有超过3500个jQuery插件和教程，包括工作演示和示例代码。
