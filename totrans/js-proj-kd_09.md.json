["```js\nvar person = new Object();\nperson.name = \"Harry Potter\";\nperson.age = 22;\nperson.job = \"Magician\";\n```", "```js\nperson.callName = function(){\n  alert(this.name);\n};\n```", "```js\nvar person = {\n  name: \"Harry Potter\",\n  age: 22,\n  job: \"Magician\",\n  callName: function(){\n  alert(this.name);\n  }\n};\n```", "```js\nfunction Animal(){\n//We can code here. \n}; \n```", "```js\nAnimal.prototype.eat = function(){\n  alert(\"Animal can eat.\");\n};\n```", "```js\nfunction Bird(){\n};\nBird.prototype = new Animal();\nBird.prototype.fly = function(){\n  alert(\"Birds can fly.\");\n};\nBird.prototype.sing = function(){\n  alert(\"Bird can sing.\");\n};\n```", "```js\nvar person = {\n  \"name\" : \"Harry Potter\",\n  \"age\" : 22,\n};\nalert(person.name);\nperson.name = \"John\";\nalert(person.name);\n```", "```js\nvar person = function () {\n  var Name = \"Harry Potter\";\n  var reg = new RegExp(/\\d+/);\n  return { \n    \"setName\" : function (newValue) {\n      if( reg.test(newValue) ) {\n        alert(\"Invalid Name\");\n      }\n      else {\n        Name = newValue;\n      }\n    },\n    \"getName\" : function () {\n      return Name; \n    }\n  }; \n}(); \n\nalert(person.getName());   // Harry potter\nperson.setName( \"John\" );\nalert(person.getName());  // John\nperson.setName( 42 ); // Invalid Name; the name is not changed.\nperson.Name = 42;     // Doesn't affect the private Name variable.\nalert(person.getName());  // John is printed again.\n```", "```js\n<html lang=\"en\" ng-app=\"hangman\"> \n  <head>\n    <title>Hangman</title>\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n    <script src=\"img/angular.min.js\"></script>\n  </head>\n  <body ng-controller=\"StartHangman\">\n    <p>Hangman</p>\n    <svg width=\"400\" height=\"400\">\n      <rect ng-show=\"failedGuess.length >= 1\" x=\"0\" y=\"0\" width=\"40\" height=\"400\"></rect>\n      <rect ng-show=\"failedGuess.length >= 2\" x=\"40\" y=\"20\" width=\"200\" height=\"40\"></rect>\n      <rect ng-show=\"failedGuess.length >= 3\" x=\"173\" y=\"50\" width=\"4\" height=\"100\"></rect>\n      <circle ng-show=\"failedGuess.length >= 3\" cx=\"175\" cy=\"120\" r=\"40\"></circle>\n      <line ng-show=\"failedGuess.length >= 4\" x1=\"175\" y1=\"150\" x2=\"175\" y2=\"185\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n      <line ng-show=\"failedGuess.length >= 4\" x1=\"175\" y1=\"180\" x2=\"100\" y2=\"240\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n      <line ng-show=\"failedGuess.length >= 5\" x1=\"175\" y1=\"180\" x2=\"250\" y2=\"240\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n      <line ng-show=\"failedGuess.length >= 6\" x1=\"175\" y1=\"180\" x2=\"175\" y2=\"265\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n      <line ng-show=\"failedGuess.length >= 7\" x1=\"175\" y1=\"260\" x2=\"120\" y2=\"340\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n      <line ng-show=\"failedGuess.length >= 8\" x1=\"175\" y1=\"260\" x2=\"230\" y2=\"340\" style=\"stroke:rgb(0,0,0)\" stroke-width=\"10\"></line>\n    </svg>\n\n    <div ng-show=\"stage == 'initial'\">\n      <h2>Please enter your secret words:</h2>\n      <input type=\"text\" ng-model=\"secretWords\" autofocus ng-keyup=\"$event.keyCode == 13 ? startGame() : null\">\n      <button ng-click=\"startGame()\">Enter</button>\n    </div>\n\n    <div ng-show=\"stage == 'play'\">\n      <h1>{{ answer }}</h1>\n      <h2>Failed guess ({{ failedGuess.length }}) = {{ failedGuess}}</h2>\n\n      <input type=\"text\" ng-model=\"charGuess\" id=\"char-guess\" ng-keyup=\"$event.keyCode == 13 ? guess(charGuess) : null\" placeholder=\"Guess a letter\">\n      <button ng-click=\"guess(charGuess)\">Enter</button>\n    </div>\n\n    <div ng-show=\"stage == 'won'\">\n      <h1>You Win! :)</h1>\n      <h2>That's right, the secret words is {{ secretWords }}</h2>\n      <p>Press F5 to replay</p>\n    </div>\n\n    <div ng-show=\"stage == 'lost'\">\n      <h1>You Lose! :(</h1>\n      <h2>The secret word is {{ secretWords }}</h2>\n      <p>Press F5 to replay</p>\n    </div>\n\n    <script src=\"img/hangman.js\"></script>\n  </body>\n</html>\n```", "```js\nbody {\n  font-family: monospace;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1.40;\n}\n\ninput[type=\"text\"] {\n  padding: 5px;\n  font-family: monospace;\n  height: 30px;\n  font-size: 1.8em;\n  background-color: #fff;\n  border: 2px solid #000;\n  vertical-align: bottom;\n}\n\nsvg {\n  margin: 0 0 30px;\n}\n\nbutton {\n  cursor: pointer;\n  margin: 0;\n  height: 44px;\n  background-color: #fff;\n  border: 2px solid #000;\n}\n```", "```js\nvar hangman = angular.module('hangman', []).controller('StartHangman', StartHangman);\n  function StartHangman($scope, $document) {\n    $scope.stage = \"initial\";\n    $scope.secretWords = \"\";\n    $scope.answer = \"\";\n    $scope.failedGuess = [];\n    var hasWon = function() {\n      var foundDash = $scope.answer.search(/-/);\n      return (foundDash == -1);\n    }\n    var hasLost = function() {\n      return ($scope.failedGuess.length >= 8);\n    }\n    $scope.startGame = function() {\n      $scope.secretWords = $scope.secretWords.toLowerCase();\n      for(i in $scope.secretWords) {\n        $scope.answer += $scope.secretWords[i] == ' ' ? ' ' : '-';\n      }\n      $scope.stage = \"play\"\n    }\n    $scope.guess = function(ch) {\n      ch = ch.toLowerCase();\n      $scope.charGuess = \"\";\n      if(ch.length != 1) {\n        if(ch.length > 1) {\n          alert(\"Please only enter one character at a time\");\n        }\n      return ;\n    }\n    /* If ch is already in the failed guess list */\n    for(i in $scope.failedGuess) {\n      if(ch == $scope.failedGuess[i]) return ;\n    }\n    /* Check if it's part of the answer */\n    var found = false;\n    $scope.answer = $scope.answer.split(\"\"); /* convert to array of char */\n    for(i in $scope.secretWords) {\n      if($scope.secretWords[i] === ch) {\n        found = true;\n        $scope.answer[i] = ch;\n      }\n    }\n    $scope.answer = $scope.answer.join(\"\"); /* convert back to string */\n    if(!found) {\n      $scope.failedGuess.push(ch);\n    }\n    if(hasWon()) {\n      $scope.stage = \"won\";\n    }\n    if(hasLost()) {\n      $scope.stage = \"lost\";\n    }\n  }\n}\n```", "```js\n$scope.stage = \"initial\";\n$scope.secretWords = \"\";\n$scope.answer = \"\";\n$scope.failedGuess = [];\n```", "```js\nvar hasWon = function() {\n  var foundDash = $scope.answer.search(/-/);\n  return (foundDash == -1);\n}\nvar hasLost = function() {\n  return ($scope.failedGuess.length >= 8);\n}\n```", "```js\n$scope.startGame = function() {\n  $scope.secretWords = $scope.secretWords.toLowerCase();\n  for(i in $scope.secretWords) {\n    $scope.answer += $scope.secretWords[i] == ' ' ? ' ' : '-';\n  }\n  $scope.stage = \"play\"\n}\n```"]