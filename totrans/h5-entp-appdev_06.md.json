["```js\n<video poster=\"img/trailer-poster.png\" controls>\n```", "```js\n<source type=\"video/mp4\" src=\"img/path\"></source>\n```", "```js\n<video poster=\"img/trailer-poster.png\" controls>\n  <source type=\"video/mp4\" src=\"img/trailer.mp4\"></source>\n  <source type=\"video/webm\" src=\"img/trailer.webm\"></source>\n  <source type=\"video/ogg\" src=\"img/trailer.ogv\"></source>\n  <p>Video not supported.</p>\n</video>\n```", "```js\n<script src=\"img/jquery-ui-1.8.23.custom.min.js\"></script>\n```", "```js\n<link rel=\"stylesheet\" href=\" css/ui-darkness/jquery-ui-1.8.23.custom.css\" type=\"text/css\" />\n```", "```js\n<script src=\"img/jquery.ui.touch-punch.min.js\"></script>\n```", "```js\n<video poster=\"img/trailer-poster.png\" class=\"media\">\n```", "```js\n<div class=\"media-container\">\n  <div>\n    <div class=\"media-area\">\n      <video poster=\"img/trailer-poster.png\" class=\"media\">\n        <source type=\"video/mp4\" src=\"img/trailer.mp4\"></source>\n        <source type=\"video/webm\" src=\"img/trailer.webm\"></source>\n        <source type=\"video/ogg\" src=\"img/trailer.ogv\"></source>\n        <p>Video not supported.</p>\n      </video>\n    </div>\n    <div class=\"controls\">\n      <div class=\"play-button\"></div>\n      <div class=\"seek\"></div>\n      <div class=\"fullscreen-button\"></div>\n      <div class=\"volume-container\">\n        <div class=\"volume-slider-container\">\n          <div class=\"volume-slider\"></div>\n        </div>\n        <div class=\"volume-button\"></div>\n      </div>\n      <div class=\"timer\">00:00</div>\n    </div>\n  </div>\n</div>\n```", "```js\n.media{\n  width:100%;\n  background-color:#000;\n  outline:none;\n}\n```", "```js\n.media-container{\n  margin-right:200px;\n}\n```", "```js\n@media only screen and (max-width: 737px){\n  â€¦\n  .media-container{\n    margin-right:0;\n  }\n}\n```", "```js\n<link rel=\"stylesheet\" href=\"css/mediaplayer.css\" type=\"text/css\" />\n```", "```js\n.controls{\n  background-color:#000;\n  height:35px;\n  line-height:35px;\n  position:relative;\n}\n```", "```js\n.play-button,.volume-button,.fullscreen-button{\n  width:35px;\n  height:35px;\n  cursor:pointer;\n  background-image:url(../img/player-control.png);\n}\n```", "```js\n.play-button.playing{\n  background-position:0 -35px;\n}\n```", "```js\n.fullscreen-button{\n  background-position:0 -105px;\n}\n```", "```js\n.volume-button{\n  background-position:0 -70px;\n  position:absolute;\n  left:0;\n  background-color:#000;\n  z-index:1000;\n}\n```", "```js\n    .timer{\n      color:#fff;\n      font-size:.8em;\n      padding:1px 8px 0;\n    }\n    ```", "```js\n    .play-button,.seek{\n      float:left;\n    }\n    .timer,.volume-container,.fullscreen-button{\n      float:right;\n    }\n    ```", "```js\n    .media{\n      float:left;\n    }\n    ```", "```js\n    .media-area{\n      overflow:hidden;\n      background-color:#000;\n    }\n    ```", "```js\n    .seek{\n      top:12px;\n      left:48px;\n      right:133px;\n      height:10px;\n      position:absolute;\n    }\n    ```", "```js\n.no-fullscreen .fullscreen-button{\n  display:none;\n}\n.no-volume .volume-container{\n  display:none;\n}\n```", "```js\n.no-volume .seek,.no-fullscreen .seek{\n  right:88px;\n}\n.no-fullscreen.no-volume .seek{\n  right:53px;\n}\n```", "```js\n    .ui-state-active{\n      background-image:none;\n    }\n    ```", "```js\n    .ui-slider .ui-slider-handle{\n      cursor:pointer;\n      outline:none;\n    }\n    ```", "```js\n    .seek .ui-slider-handle {\n      width:16px;\n      height:16px;\n      top: -4px;\n      -moz-border-radius:10px;\n      -ms-border-radius:10px;\n      -webkit-border-radius:10px;\n      border-radius:10px;\n    }\n    ```", "```js\n    .ui-slider-range {\n      -moz-border-radius:15px;\n      -ms-border-radius:15px;\n      -webkit-border-radius:15px;\n      border-radius:15px;\n      box-shadow:inset 0 -3px 3px #39a2ce;\n    }\n    ```", "```js\n    .seek .ui-slider-range {\n      background: #4cbae8;\n      background-image:-moz-linear-gradient(top, #4cbae8, #39a2ce);\n      background-image:-webkit-gradient(linear,left top,left bottom,color-stop(0, #4cbae8),color-stop(1, #39a2ce));\n    }\n    ```", "```js\n    .volume-slider .ui-slider-range {\n      background:#4cbae8;\n    }\n    ```", "```js\n    .volume-slider{\n      margin:12px auto;\n      width:6px;\n      height:76px;\n    }\n    ```", "```js\n    .volume-slider .ui-slider-handle {\n      width:12px;\n      height:12px;\n      left: -4px;\n    }\n    ```", "```js\n    .volume-container{\n      width:35px;\n      height:35px;\n      position:relative;\n    }\n    ```", "```js\n    .volume-slider-container{\n      -moz-transition:all 0.1s ease-in-out;\n      -ms-transition:all 0.1s ease-in-out;\n      -o-transition:all 0.1s ease-in-out;\n      -webkit-transition:all 0.1s ease-in-out;\n      transition:all 0.1s ease-in-out; \n      position:absolute;\n      bottom:1px;\n      left:0;\n      height:34px;\n      width:35px;\n      background-color:#000;\n      z-index:900;\n      overflow:hidden;\n    }\n    ```", "```js\n    .volume-container:hover .volume-slider-container{\n      height:135px;\n    }\n    ```", "```js\n<script src=\"img/movienow.mediaplayer.js\"></script>\n```", "```js\nvar movienow = movienow || {};\nmovienow.mediaplayer = (function(){\n  var that = this;\n  /** OUR CODE GOES HERE **/ \n})();\n```", "```js\n$(document).ready(function(){ \n  $(\".media-container .play-button\").click(that.play);\n  var mediaElements=$(\".media-container .media\");\n  if (mediaElements[0].fullscreenEnabled) {$(\".media-container .fullscreen-button\").click(that.fullScreen);\n  }else if(mediaElements[0].mozRequestFullScreen){\n    $(\".media-container .fullscreen-button\").click(that.mozFullScreen);\n  }else if(mediaElements[0].webkitRequestFullScreen){\n    $(\".media-container .fullscreen-button\").click(that.webkitFullScreen);\n  }else{\n    $(\".media-container\").addClass(\"no-fullscreen\");\n  }  \n  $(\".media-container .seek\").each(function() {\n    var duration=that.getPlayer($(this))[0].duration;\n    duration = duration?duration:0;\n    $(this).slider({\n      value: 0,\n      step: 0.01,\n      orientation: \"horizontal\",\n      range: \"min\",\n      max: duration,\n      start: function(event,ui){\n        var mediaArea=that.getPlayer($(event.target));\n        mediaArea.addClass(\"seeking\");\n        mediaArea[0].pause();\n      },\n      slide:function(event,ui){\n        sliderTime(event,ui);\n      },\n      stop:function(event,ui){\n        var mediaArea=that.getPlayer($(event.target));\n        controls=that.controls(mediaArea);\n        sliderTime(event,ui);\n        if(controls.find(\".play-button\").hasClass(\"playing\")){\n          mediaArea[0].play();\n        }\n        mediaArea.removeClass(\"seeking\");\n      }\n    });\n    if(navigator.userAgent.match(/(iPhone|iPod|iPad)/i)){\n      $(\".media-container\").addClass(\"no-volume\");\n    }else{\n      that.controls($(this)).find(\".volume-slider\").slider({\n        value: 1,\n        step: 0.05,\n        orientation: \"vertical\",\n        range: \"min\",\n        max: 1,\n        animate: true,\n        slide:function(event,ui){\n          var mediaArea=that.getPlayer($(event.target));\n          mediaArea[0].volume=ui.value;\n        }\n      });\n    }\n  });\n  mediaElements.bind(\"timeupdate\", that.timeUpdate);\n  mediaElements.bind('ended', that.endReproduction);\n});\n```", "```js\n$(this).slider({\n  value: 0,\n  step: 0.01,\n  orientation: \"horizontal\",\n  range: \"min\",\n  max: duration,\n  start: function(event,ui){\n    var mediaArea=that.getPlayer($(event.target));\n    mediaArea.addClass(\"seeking\");\n    mediaArea[0].pause();\n  },\n  slide:function(event,ui){\n    sliderTime(event,ui);\n  },\n  stop:function(event,ui){\n    var mediaArea=that.getPlayer($(event.target));\n    controls=that.controls(mediaArea);\n    sliderTime(event,ui);\n    if(controls.find(\".play-button\").hasClass(\"playing\")){\n      mediaArea[0].play();\n    }\n    mediaArea.removeClass(\"seeking\");\n  }\n});\n```", "```js\nthat.controls($(this)).find(\".volume-slider\").slider({\n  value: 1,\n  step: 0.05,\n  orientation: \"vertical\",\n  range: \"min\",\n  max: 1,\n  animate: true,\n  slide:function(event,ui){\n    var mediaArea=that.getPlayer($(event.target));\n    mediaArea[0].volume=ui.value;\n  }\n});\n```", "```js\nmediaArea[0].volume=ui.value;\n```", "```js\nthis.getPlayer= function(domObject){\n  return $(domObject.parentsUntil(\".media-container\").find(\".media\"));\n};\nthis.controls= function(domObject){\n  return $(domObject.parentsUntil(\".media-container\").find(\".controls\"));\n};\n```", "```js\nthis.play = function(event){\n  var button=$(event.target);\n  var player=that.getPlayer(button);\n  if(button.hasClass(\"playing\")) {\n    player[0].pause();\n    button.removeClass(\"playing\");\n  } else {\n    player[0].play();\n    button.addClass(\"playing\");\n  }\n};\n```", "```js\nthis.fullScreen = function(event){\n  var button=$(event.target);\n  var player=that.getPlayer(button);\n  if(document.fullScreen){\n    document.exitFullScreen();\n  } else {\n    player[0].requestFullScreen();\n  }\n};\n```", "```js\nthis.mozFullScreen = function(event){\n  var button=$(event.target);\n  var player=that.getPlayer(button);\n  if(document.mozfullScreen){\n    document.mozCancelFullScreen();\n  } else {\n    player[0].mozRequestFullScreen();\n  }\n};\n```", "```js\nthis.webkitFullScreen = function(event){\n  var button=$(event.target);\n  var player=that.getPlayer(button);\n  if(document.webkitIsFullScreen){\n    document.webkitCancelFullScreen();\n  } else {\n    player[0].webkitEnterFullScreen();\n  }\n};\n```", "```js\nthis.timeFormat=function(seconds){\n  var m=Math.floor(seconds/60)<10?\"0\"+Math.floor(seconds/60):Math.floor(seconds/60);\n  var s=Math.floor(seconds-(m*60))<10?\"0\"+Math.floor(seconds-(m*60)):Math.floor(seconds-(m*60));\n  return m+\":\"+s;\n};\n```", "```js\nthis.sliderTime = function(event, ui) {\n  var mediaArea=that.getPlayer($(event.target));\n  var controls=that.controls(mediaArea);\n  mediaArea[0].currentTime=ui.value;\n};\n```", "```js\nthis.timeUpdate = function(event) {\n  var mediaArea=$(event.target);\n  var controls=that.controls(mediaArea);\n  var currentTime=mediaArea[0].currentTime;\n  var duration=mediaArea[0].duration;\n  var timer=$(controls.find(\".timer\"));\n  if(currentTime>=0)timer.html(that.timeFormat(currentTime));\n  if(!mediaArea.hasClass(\"seeking\")){\n    var seekSlider=$(controls.find(\".seek\"));\n    if(seekSlider.slider(\"option\",\"max\")==0){\n      var newDuration=mediaArea[0].duration;\n      newDuration=newDuration?newDuration:0;\n      seekSlider.slider(\"option\",\"max\", newDuration);\n    }\n    seekSlider.slider(\"value\", currentTime);\n  }\n};\n```", "```js\nthis.endReproduction = function(event) {\n  var mediaArea=$(event.target);\n  $(that.controls(mediaArea)).find(\".play-button\").removeClass(\"playing\");\n};\n```", "```js\nvar movienow = movienow || {};\nmovienow.mediaplayer = (function(){\n  var that = this;\n  $(document).ready(function(){\n    /*** play/pause button click event listener ***/ $(\".media-container .play-button\").click(that.play);var mediaElements=$(\".media-container .media\");\n    if(mediaElements[0].fullscreenEnabled) {/*** fullscreen button click event listener ***/\n      $(\".media-container .fullscreen-button\").click(that.fullScreen);\n    }else if(mediaElements[0].mozRequestFullScreen){/*** fullscreen button click event listener mozilla ***/\n      $(\".media-container .fullscreen-button\").click(that.mozFullScreen);\n    }else if(mediaElements[0].webkitRequestFullScreen){/*** fullscreen button click event listener webkit ***/\n      $(\".media-container .fullscreen-button\").click(that.webkitFullScreen);\n    }else{\n      /*** we add class no-fullscreen to hide fullscreen button when it is not available ***/$(\".media-container\").addClass(\"no-fullscreen\");\n    }\n    /*** Loop to add jquery ui sliders to progress/seek bar and volume ***/\n    $(\".media-container .seek\").each(function() {\n      /*** Duration of the media ***/\n      var duration=that.getPlayer($(this))[0].duration;\n      duration = duration?duration:0;\n      $(this).slider({\n        value: 0,\n        step: 0.01,\n        orientation: \"horizontal\",\n        range: \"min\",\n        max: duration,\n        /*** Start seek ***/\n        start: function(event,ui){\n          var mediaArea=that.getPlayer($(event.target));\n          /*** Class seeking to know status of the media player ***/\n          mediaArea.addClass(\"seeking\");\n          mediaArea[0].pause();\n        },\n        /*** During seek ***/\n        slide:function(event,ui){\n          sliderTime(event,ui);\n        },\n        /*** Stop seek ***/\n        stop:function(event,ui){\n          var mediaArea=that.getPlayer($(event.target));\n          var controls=that.controls(mediaArea);\n          sliderTime(event,ui);\n          /*** We restore the status (paying or not) to the one before start seeking ***/\n          if(controls.find(\".play-button\").hasClass(\"playing\")){\n            mediaArea[0].play();\n          }\n          mediaArea.removeClass(\"seeking\");\n        }\n      });\n      /*** Volume controllers ***/\n      if(navigator.userAgent.match(/(iPhone|iPod|iPad)/i)){\n        /*** ios devices only allow to change volume using the device hardware, so we hide volume controllers ***/\n        $(\".media-container\").addClass(\"no-volume\");\n      }else{\n        /*** volume slider controller ***/\n        that.controls($(this)).find(\".volume-slider\").slider({\n          value: 1,\n          step: 0.05,\n          orientation: \"vertical\",\n          range: \"min\",\n          max: 1,\n          animate: true,\n          slide:function(event,ui){\n            var mediaArea=that.getPlayer($(event.target));\n            mediaArea[0].volume=ui.value;\n          }\n        });\n      }\n    });\n    /*** event triggered when time change on media player ***/ \n    mediaElements.bind(\"timeupdate\", that.timeUpdate);\n    /*** event triggered when reproduction end on media player ***/\n    mediaElements.bind('ended', that.endReproduction);\n  });\n  /*** get player using jQuery selectors ***/\n  this.getPlayer= function(domObject){\n    return $(domObject.parentsUntil(\".media-container\").find(\".media\"));\n  };\n  /*** get control area using jQuery selectors ***/\n  this.controls= function(domObject){\n    return $(domObject.parentsUntil(\".media-container\").find(\".controls\"));\n  };\n  /*** play or pause and chenge play button icon ***/\n  this.play = function(event){\n    var button=$(event.target);\n    var player=that.getPlayer(button);\n    if(button.hasClass(\"playing\")) {\n      player[0].pause();\n      button.removeClass(\"playing\");\n    }else{\n      player[0].play();\n      button.addClass(\"playing\");\n    }\n  };\n  /*** set on and off fullscreen mode ***/\n  this.fullScreen = function(event){\n    var button=$(event.target);\n    var player=that.getPlayer(button);\n    if($(document).context.fullScreenElement){\n      $(document).context.exitFullscreen();\n    }else{\n      player[0].requestFullscreen();\n    }\n  };\n  this.mozFullScreen = function(event){\n    var button=$(event.target);\n    var player=that.getPlayer(button);\n    if($(document).context.mozFullScreenElement){\n      $(document).context.mozCancelFullScreen();\n    }else{\n      player[0].mozRequestFullScreen();\n    }\n  };\n  this.webkitFullScreen = function(event){\n    var button=$(event.target);\n    var player=that.getPlayer(button);\n    if($(document).context.webkitIsFullScreen){\n      $(document).context.webkitCancelFullScreen();\n    }else{\n      player[0].webkitEnterFullScreen();\n    }\n  };\n  /*** set time format to mm:ss ***/\n  this.timeFormat=function(seconds){\n    var m=Math.floor(seconds/60)<10?\"0\"+Math.floor(seconds/60):Math.floor(seconds/60);\n    var s=Math.floor(seconds-(m*60))<10?\"0\"+Math.floor(seconds-(m*60)):Math.floor(seconds-(m*60));\n    return m+\":\"+s;\n  };\n  /*** use by seek slider, change slider position and time on controllers ***/\n  this.sliderTime = function(event, ui) {\n    var mediaArea=that.getPlayer($(event.target));\n    var controls=that.controls(mediaArea);\n    mediaArea[0].currentTime=ui.value;\n  };\n  /*** use by timeupdate event, change slider position and time on controllers ***/\n  this.timeUpdate = function(event) {\n    var mediaArea=$(event.target);\n    var controls=that.controls(mediaArea);\n    var currentTime=mediaArea[0].currentTime;\n    var duration=mediaArea[0].duration;\n    var timer=$(controls.find(\".timer\"));\n    if(currentTime>=0)timer.html(that.timeFormat(currentTime));\n    if(!mediaArea.hasClass(\"seeking\")){\n      var seekSlider=$(controls.find(\".seek\"));\n      /*** some players (like safari) don't have duration when a player is initialized, this verify duration and assigned again to max property on slider ***/\n      if(seekSlider.slider(\"option\",\"max\")==0){\n        var newDuration=mediaArea[0].duration;\n        newDuration=newDuration?newDuration:0;\n        seekSlider.slider(\"option\",\"max\", newDuration);\n      }\n      seekSlider.slider(\"value\", currentTime);\n    }\n  };\n  /*** change play button when reproduction ends ***/\n  this.endReproduction = function(event) {\n    var mediaArea=$(event.target);\n    $(that.controls(mediaArea)).find(\".play-button\").removeClass(\"playing\");\n  };\n})();\n```", "```js\n<audio>\n  <source src=\"img/horse.ogg\" type=\"audio/ogg\" />\n  <source src=\"img/horse.mp3\" type=\"audio/mp3\" />\n  <p>Audio not supported.</p>\n</audio>\n```", "```js\n<div class=\"media-container no-fullscreen\">\n  <div>\n    <div class=\"media-area\">\n      <audio class=\"media\">\n        <source src=\"img/horse.ogg\" type=\"audio/ogg\" />\n        <source src=\"img/horse.mp3\" type=\"audio/mp3\" />\n        <p>Audio not supported.</p>\n      </audio>\n    </div>\n    <div class=\"controls\">\n      <div class=\"play-button\"></div>\n      <div class=\"seek\"></div>\n      <div class=\"volume-container\">\n        <div class=\"volume-slider-container\">\n          <div class=\"volume-slider\"></div>\n        </div>\n        <div class=\"volume-button\"></div>\n      </div>\n      <div class=\"timer\">00:00</div>\n    </div>\n  </div>\n</div>\n```", "```js\naudio.media{\n  height:0;\n}\n```"]