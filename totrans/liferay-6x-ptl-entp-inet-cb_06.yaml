- en: Chapter 6. Documents and Media in Liferay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Managing files in Liferay using the Documents and Media portlet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing document types and metadata sets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with the Amazon S3 cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data migration between storage hooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The primary task of any intranet is to allow efficient exchange of information
    between the employees of a company. In most cases, business knowledge is stored
    in the form of files and—if the company does not have a dedicated system—distributed
    between mailboxes, network drives, FTP servers, employees' computer drives, and
    external data carriers. In such cases, there is often a problem in determining
    who has the current version of the file, whether such documents exist at all,
    or where to find them. Liferay helps in coping with the dispersal of information
    by providing an internal repository of files.
  prefs: []
  type: TYPE_NORMAL
- en: Managing files in Liferay using the Documents and Media portlet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each site in Liferay has its own separate repository, accessible by going to
    **Admin** | **Site Administration** | **Content** | **Documents and Media**. In
    addition, it is also possible to place the Documents and Media portlet on one
    of the pages where it can be shared between users who do not have access to the
    admin functionalities. The Documents and Media portlet allow us to manage all
    the folders and documents that can be published within a site.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Documents and Media portlet provides tools to create, edit, and delete folders,
    documents, and shortcuts. It also enables us to create multiple documents by uploading
    whole groups of files. This recipe will cover all the basic actions that can be
    performed in order to create an efficient and easy-to-search structure of documents
    and folders.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new folder
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add a new folder, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Folder** or **Subfolder** option.![Creating a new folder](img/image00330.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name (Required)** of the folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Description** of the folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine the **Permissions** for the folder by setting all actions that may
    be performed by specific roles (you can find more permissions after clicking on
    the **More options** link).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Editing a folder
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To edit a folder, perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the folder you want to edit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on its actions icon (the down arrow icon visible when hovering on the
    folder miniature).![Editing a folder](img/image00331.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Edit** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a new **Name** for the folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a new **Description** of the folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine the way in which document type restrictions and wokflow definition
    settings work for this particular folder. You can do this by setting **Use document
    type restrictions and workflow of the parent folder** by going to the **Document
    Type Restrictions and Workflow** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding a new document
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add a new document, perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the appropriate document type, for example, Basic Document.![Adding a
    new document](img/image00332.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Select File** button and choose a file from your drive to be
    added to the repository.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Title** of the document (if you do not provide a title, the filename
    will be used as the title).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Description** of the document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the **Categorization** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Categories** and type or select **Tags** that describe the document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If there are no visible categories that can be assigned to the document, it
    means that either the categories for the specific site have not been created or
    the account of the user who is working on it does not have access to the existing
    dictionaries category.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Determine the permissions for the document by setting all actions that may be
    performed by specific roles.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Related Assets** button, and find and choose documents (or other
    content types) that will be set as related content.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Publish** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Uploading multiple documents
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is also possible to add more than one document and set metadata for multiple
    documents at a time.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add multiple documents, go to the **Documents and Media** section. Then,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Multiple Documents** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Select Files** button and choose all the files you want to upload.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: It is also possible to choose the group of files that should be uploaded using
    drag-and-drop.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After uploading all the files, mark the checkboxes next to the names of files
    that will have the same type, set of tags and categories, and permissions:![Uploading
    multiple documents](img/image00333.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the description, choose a document type, and define categories, tags,
    and permissions for these documents.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat steps 6 and 7 until all the uploaded files are saved.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Editing documents
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To edit a document, perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the document you want to edit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on its actions icon:![Editing documents](img/image00334.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Edit** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a new **Title** and **Description**, choose **Document Type**, define
    **Categories** and **Tags**, and choose **Related Content** for the edited document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Publish** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Removing folders and documents
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each folder and document can be temporarily or permanently removed from the
    repository. Both temporary and permanent removal are done through the *Recycle
    Bin* mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: 'To temporarily remove a folder or document, perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the folder or document you want to delete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on its actions icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Move to the Recycle Bin** action.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You can undo this action by clicking on the undo button that will appear just
    after moving a document to the trash. By default, trash is enabled and keeps removed
    items for 30 days. The trash availability for the particular site and the maximum
    age of trash entries can be changed by going to **Admin** | **Site Administration**
    | **Configurations** | **Site Settings** | **Recycle Bin**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To permanently remove a folder or document, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Admin** | **Site Administration** | **Content** | **Recycle Bin**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Actions** button located near the name of the document you want
    to delete:![Removing folders and documents](img/image00335.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Delete** action and confirm your wish by clicking on **Ok**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that when removing a folder, its whole content is also removed.
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible to restore a document using the **Restore** action available
    in the **Actions** menu.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Liferay's documents and media library allows us to create a tree-like structure
    of folders and documents. This means that each folder can contain subfolders and
    documents. Each document in Liferay Portal consists of a file and a set of metadata
    describing it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Liferay provides many properties to configure the Documents and Media portlet.
    They are localized in the `portal-impl/src/portal.properties` file, which can
    be overridden by `portal-ext.properties` located in the `${liferay.home}` folder.
    One of the properties is to deny names of files or folders, regardless of the
    extension:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It is also possible to define the extension''s restriction and permit the addition
    only of defined extensions (by default, this property permits all file extensions).
    To reduce or add available extensions, set the following property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The next important and useful property is the definition of the maximum size
    of files. By default, it is unlimited. To change it, define how many bytes are
    allowed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The Liferay search indexer tries to index the content of the file. It is possible
    to define which types of extensions should be ignored. You can also define the
    size for indexing files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: More settings are available in `portal-impl/src/portal.properties` in the Document
    Library portlet section.
  prefs: []
  type: TYPE_NORMAL
- en: Types of documents
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are five default types of documents: Basic Document, Contract, Marketing
    Banner, Online Training, and Sales Presentation. Each type of document may contain
    a different set of metadata. For instance, when adding a new contract, the user
    can provide data such as effective date, expiration date, contract type, legal
    reviewer, status, and so on. The Basic Document contains only the basic information,
    such as name, description, tags, categories and permissions.'
  prefs: []
  type: TYPE_NORMAL
- en: Very often, these default document types or metadata sets provided by Liferay
    are not sufficient. It is required to compose personalized types of documents
    containing very specific metadata information. This can be achieved using the
    Document Types and Metadata Sets that create tools, as described in the following
    recipe.
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to restrict folders to contain documents of one or more particular
    types. The document type restrictions can be set separately for each folder or
    inherited from parent folders.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each folder and document has its own permissions set, which defines the list
    of actions that can be performed on it by users assigned to different roles. For
    example, it is possible to set such permissions so that users with a specific
    role will have access to a specific folder, but will not see some of the files
    stored there.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more information on permissions, refer to [Chapter 5](part0045.xhtml#aid-1AT9A1
    "Chapter 5. Roles and Permissions"), *Roles and Permissions*.
  prefs: []
  type: TYPE_NORMAL
- en: Categories and tags
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If an intranet groups a very large number of documents, a well-designed structure
    cannot sufficiently help users get to the correct documents. Categories and tags
    provide an additional mechanism to mark, list, and search files and allow their
    subsequent selection with the help of dedicated portlets, such as Category Navigation,
    Asset Publisher, or Tag Cloud. Categories as well as documents can create a tree-like
    structure. Each category is placed in the dictionary and can have subcategories.
    Tags, on the contrary, are not stored in dictionaries and create a flat structure.
    It is possible to assign one or more categories and tags to a document.
  prefs: []
  type: TYPE_NORMAL
- en: Related assets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Liferay, an asset is a piece of content that can be shown on a page, such
    as a document, web content, blog entry, and so on. Each document can be connected
    to another document (or other types of assets). These documents will be listed
    by portlets, such as the Asset Publisher.
  prefs: []
  type: TYPE_NORMAL
- en: Additional information
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let's understand in detail how Liferay stores files with the default configuration.
    First of all, the system reads a file's metadata, such as extension, title, size.
    Next, it recognizes the mime type of a file (`image/png`, `audio/mpeg`, `application/pdf`,
    and so on). This setting depends on the file's extension. The next thing that
    the portlet does is create a version. By default, the first uploaded file has
    the version 1.0\. Liferay also recognizes in which folder and in which repository
    a file is added. All of this information is stored in the `DLFileEntry` table.
    This type of data is called metadata.
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, physically each file is stored on a local hard drive in the `${liferay.home}/data/document_library`
    folder. A hierarchy of the folders is very specific. It is difficult to recognize
    where each file is stored. Let''s examine one of the paths to the file: `data/document_library/10157/11501/303/1.0`.'
  prefs: []
  type: TYPE_NORMAL
- en: As we said earlier, each file is placed in the `data/document_library` folder.
    The next folder name is an `instanceId`, which can be set by going to **Admin**
    | **Control Panel** | **Configuration** | **Portal Instances**. The next identifier
    is `folderId`. It is good to know that this identifier is exactly a parent folder
    of this file. If the file is placed in the folder's hierarchy, it is the last
    folder's identifier. 303 is a number stored in the `DLFileEntry.name` column.
    Each file has only the version name. In this example, the name of the file is
    1.0\. In the real world, this is a PNG image. All the necessary data for this
    file, such as its name, is placed in the database.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be careful and remember that a file entry consists of metadata stored in the
    database and bytes stored on the hard drive in the specific location.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is also possible for the user to create a shortcut to any document that they
    can access. The permissions set on the shortcut enable the user to access the
    original document through the shortcut.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to create a shortcut, use these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the appropriate shortcut.![There's more…](img/image00336.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Site** button and choose the site containing the document for
    which you want to create a shortcut.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Document** button and choose the document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine the permissions for the shortcut by setting all actions that may be
    performed by specific roles.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For information on permissions, refer to the *Creating and configuring roles*
    recipe from [Chapter 5](part0045.xhtml#aid-1AT9A1 "Chapter 5. Roles and Permissions"),
    *Roles and Permissions*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Kaleo Web installation* recipe from [Chapter 9](part0065.xhtml#aid-1TVKI1
    "Chapter 9. Liferay Workflow Capability"), *Liferay Workflow Capability*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information on categorizing documents, refer to the *Tagging and categorizing
    content* recipe from [Chapter 8](part0059.xhtml#aid-1O8H61 "Chapter 8. Search
    and Content Presentation Tools"), *Search and Content Presentation Tool*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing document types and metadata sets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As was mentioned in the previous recipe, each file, while provided with metadata,
    becomes a document. By default, each document consists of information, such as
    name, description, category, tags, permissions, or related assets. Very often,
    the basic set is not sufficient. In such cases, it may be necessary to create
    a new document type, which allows us to provide a file with specific additional
    information.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It this recipe, we will describe how to define different types of documents
    and teach how to compose and use metadata sets.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new document type using metadata sets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add a new document type, perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Admin** | **Site Administration** | **Content**
    | **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Manage** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Document Types** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name** of the type of document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a description of the type of document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine **Metadata Fields**, which will be available in this type of document,
    by dragging and dropping fields from the left column menu to the area on the right-hand
    side.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set all the added fields by clicking on each field and defining its properties
    (**Field Label**, **Show Label**, **Required**, **Name**, **Predefined Value**,
    **Tip**, **Indexable**, **Repeatable**, **Options**, and **Multiple**).![Creating
    a new document type using metadata sets](img/image00337.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Select Additional Metadata Set** and choose one of the available
    metadata sets (see the next section of this recipe to understand how to work with
    metadata sets).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine the permissions for the document type by setting all actions that
    may be performed by specific roles.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Defining metadata sets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To define a new metadata set, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator and go to **Site Administration** | **Content** |
    **Documents and Media**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Manage** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Metadata Sets** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add** button.![Defining metadata sets](img/image00338.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name (Required)** of the metadata set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Description** of the metadata set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose **Parent Metadata Set**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine **Metadata Fields**, which will be available in this type of document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When defining a new type of document, we not only define the scope of information
    that is stored with the file, but also compose a form that allows us to enter
    the information. Both document type forms and the metadata set form can be composed
    using a simple form editor. This editor contains a small library of different
    form fields, such as **Boolean**, **Date**, **Decimal**, **Documents and Media**,
    **HTML**, **Integer**, **Link to Page**, **Number**, **Radio**, **Select**, **Text**,
    and **Text Box**. It is worth noticing that it is also possible to create groups
    of fields by dragging and dropping one field (or more) onto another.
  prefs: []
  type: TYPE_NORMAL
- en: When defining a new type of document, we have to decide whether the set of fields
    we want to include will be used in this particular document only or with different
    document types. In the first case, we can compose the form directly within the
    new document type. In the second case, it is better to create a metadata set that
    can be used as a part of many document types, but is managed in one place. Similarly
    as in case of Liferay assets, metadata sets may be created and used in one particular
    scope only or, when created in global scope, may be used in all scopes within
    one Liferay Portal instance.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, metadata sets can inherit a set of fields from other metadata
    sets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fields can be defined by the following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Type | Defines the type of the field |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Field Label | This allows us to provide a label for the field |'
  prefs: []
  type: TYPE_TB
- en: '| Show Label | This lets you decide whether the label should be shown or not
    |'
  prefs: []
  type: TYPE_TB
- en: '| Required | This lets you decide whether filling the field is necessary or
    optional |'
  prefs: []
  type: TYPE_TB
- en: '| Name | This allows us to define the name of the field |'
  prefs: []
  type: TYPE_TB
- en: '| Predefined Value | This allows us to define they value that will be shown
    by default before a user enters their own value |'
  prefs: []
  type: TYPE_TB
- en: '| Tip | This lets you provide a short text, which will be shown as a tooltip
    for the field |'
  prefs: []
  type: TYPE_TB
- en: '| Indexable | This lets you decide whether the content of the file should be
    indexed and searched |'
  prefs: []
  type: TYPE_TB
- en: '| Repeatable | This allows us to determine whether the field can be repeated
    |'
  prefs: []
  type: TYPE_TB
- en: '| Options | This lets you provide possible options for all the fields that
    allows users to choose options from a defined list |'
  prefs: []
  type: TYPE_TB
- en: '| Multiple | This allows us to determine whether a user can choose more than
    one option |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For information on document management, refer to the *Managing files in Liferay
    using the Documents and Media portlet* recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Integration with the Amazon S3 cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Liferay provides a built-in capability to communicate with the Amazon S3 cloud.
    This feature gives users a really powerful tool to store their documents in a
    cloud-based solution. The **Amazon Simple Storage Service** (**Amazon S3**) is
    a scalable, high-speed, low-cost, and web-based service designed for online backup
    and archiving of data such as documents, presentations, spreadsheets, pictures,
    photos, and so on. The greatest feature of the **Amazon Storage** is the fact
    that it claims 99.99 percent availability of objects over a given year. Moreover,
    these services provide highly scalable storage that can be easily increased as
    data increases. The whole infrastructure has secure SSL data transfer and encryption.
    Amazon Simple Storage Service is a part of the bigger project called **Amazon
    Web Services** ([http://aws.amazon.com](http://aws.amazon.com)). This is a collection
    of many web services, such as computing cloud, storage cloud, databases, networking,
    and administration and security.
  prefs: []
  type: TYPE_NORMAL
- en: Liferay gives users a feature to store and manage documents in remote repositories.
    This type of repository can be Amazon S3\. In order to allow communication between
    a portal and Amazon S3, Liferay uses *JetS3t toolkit*. It is an open source project
    based on Java. More details about this solution are available at [http://www.jets3t.org/](http://www.jets3t.org/).
    Technically, it is a `jets3t.jar` archive placed in the `ROOT/WEB-INF/lib/` folder
    of the deployed Liferay instance.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Communication between Liferay and Amazon S3 works with Amazon S3 API. In order
    to properly configure this access, you need to have three things: access key,
    secret key, and bucket name. To generate this data (access key, secret key, and
    bucket name), follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in to the Amazon Web Service console: [https://console.aws.amazon.com](https://console.aws.amazon.com).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Your Name** | **Security Credentials** on the dockbar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand **Access Keys** (access key ID and secret access key).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Create New Access Key** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the popup window, you will see the following message:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Your access key (access key ID and secret access key) has been created successfully.**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it…](img/image00339.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Click on **Show Access Key** and copy **Access Key ID** and **Secret Access
    Key**. This pair of keys will be used a little later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The next few steps are responsible for creating a new bucket, where Liferay
    will store its files:'
  prefs: []
  type: TYPE_NORMAL
- en: In [https://console.aws.amazon.com](https://console.aws.amazon.com), go to **Services**
    | **S3**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create a new bucket, click on the **Create Bucket** button.![How to do it…](img/image00340.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill in all required fields and save the form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remember your bucket name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The last thing is Liferay Portal configuration. As we said in the beginning,
    Liferay provides a built-in capability to communicate with Amazon, so the configuration
    is not difficult. It is only a simple setting with `${liferay.home}/portal-ext.properties`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Finally, restart your portal instance and try to upload a file in the Documents
    and Media portlet. From the user's point of view, it should not be any different
    with the upload action. In order to see the difference, you can log in to the
    S3 storage bucket to check out the uploaded file.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The portal provides many configurable hooks to upload and put documents into
    various persistence systems. All of them are implemented as Liferay core functionalities.
    The basic and default persistence system is `FileSystemStore`, which keeps data
    in the local hard drive. Liferay provides other implementations, such as `AdvancedFileSystemStore`,
    `CMISStore`, `DBStore`, `JCRStore`, and `S3Store`. One of these types can be set
    in `portal-ext.properties`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following description shows differences in storage implementation:'
  prefs: []
  type: TYPE_NORMAL
- en: '`FileSystemStore`: This saves documents directly to the local filesystem.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AdvancedFileSystemStore`: Similar to `FileSystemStore`, but divides the data
    into buckets (folders), thus avoiding the many-files-in-one-directory limitation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DBStore`: Keeps binary data in the database as blobs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CMISStore`: **Content Management Interoperability Services** (**CMIS**) is
    a specification to improve the interoperability between **Enterprise Content Management**
    (**ECM**) systems. Documents and Media allow users to connect to multiple third-party
    repositories that support CMIS 1.0 with **AtomPub** and web service protocols.
    It is possible to integrate Liferay with many CMIS-compliant ECM vendors, such
    as SharePoint, Alfresco, Documentum, IBM FileNet, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`JCRStore`: Implements content repository API for Java. The well-known implementation
    is **Apache Jackrabbit**. So, if this hook is set, it is possible to keep binary
    data in the Apache Jackrabbit content repository.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`S3Store`: Keeps data in the Amazon Simple Storage Service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's examine a code that is responsible for this integration. The `S3Store`
    class implements the `Store` interface. Thus, it provides all the necessary operations
    on files, for instance, `addFile`, `addDirectory`, `deleteFile`, `deleteDirectory`,
    and so on. In `portal-ext.properties`, we set the `dl.store.impl` property as
    the `S3Store` class.
  prefs: []
  type: TYPE_NORMAL
- en: Liferay uses the JetS3t toolkit to communicate with Amazon services. This toolkit
    is responsible for transferring files from/to Amazon Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Amazon S3 repository, the structure of the folders and files looks the
    same as in the local filesystem. The following screenshot shows an example of
    the folder hierarchy:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works…](img/image00341.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Integration with Amazon S3 Cloud works perfectly if the document library repository
    is small. The problems occur when the number of concurrent users and number of
    files is huge. The problem is between `HttpClient` and S3 and their parallel communication
    (concurrent communication threads). It is possible to increase the number of connections
    by overriding `jets3t.properties`. To properly change it, put this file in the
    Tomcat classpath, for instance, in the `${CATALINA_BASE}/lib` folder. Afterwards,
    change the following properties and try to fit the values to your environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The official documentation at [https://jets3t.s3.amazonaws.com/toolkit/configuration.html](https://jets3t.s3.amazonaws.com/toolkit/configuration.html)
    describes the properties as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Property name | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `s3service.internal-error-retry-max` | This refers to the maximum number
    of concurrent communication threads that will be started by the `ThreadedStorageService`
    / `SimpleThreadedStorageService` services for upload and download operations.
    This value should not be too high. Otherwise, you risk I/O errors due to bandwidth
    starvation when transferring many large files. *It works only with Liferay 6.0
    and Liferay 6.1*. |'
  prefs: []
  type: TYPE_TB
- en: '| `cloudfront-service.internal-error-retry-max` | This refers to the maximum
    number of retries that will be attempted when a CloudFront connection fails with
    an InternalServer error. To disable retries of InternalError failures, set this
    to 0\. *It works only with Liferay 6.2*. |'
  prefs: []
  type: TYPE_TB
- en: '| `threaded-service.max-thread-count` | This is the maximum number of concurrent
    communication threads that will be started by the `ThreadedStorageService` / `SimpleThreadedStorageService`
    services for upload and download operations. This value should not be too high.
    Otherwise, you risk I/O errors due to bandwidth starvation when transferring many
    large files.The default value is `2`.This value must not exceed the maximum number
    of HTTP connections available to JetS3t, as set by the `httpclient.max-connections`
    property. |'
  prefs: []
  type: TYPE_TB
- en: '| `httpclient.retry-max` | This determines the number of times to retry connections
    when they fail with I/O errors. Set this to `0` to disable retries.The default
    value is `5`. |'
  prefs: []
  type: TYPE_TB
- en: '| `httpclient.connection-timeout-ms` | This determines the number of milliseconds
    to wait before a connection times out. `0` means infinity.The default value is
    `60000`. |'
  prefs: []
  type: TYPE_TB
- en: '| `httpclient.socket-timeout-ms` | This determines the number of milliseconds
    to wait before a socket connection times out. `0` means infinity.The default value
    is `60000`. |'
  prefs: []
  type: TYPE_TB
- en: '| `httpclient.max-connections` | This refers to the maximum number of simultaneous
    connections to be allowed globally.The default value is `20`.If you have a fast
    Internet connection, you can improve the performance of your S3 client by increasing
    this setting and the corresponding S3 Service properties, `s3service.max-thread-count`
    and `s3service.admin-max-thread-count`. However, be careful because, if you increase
    this value too much for your connection, you may exceed your available bandwidth
    and cause communication errors. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For information on building scalable systems, refer to the *Scalable infrastructure*
    recipe in [Chapter 12](part0088.xhtml#aid-2JTHG1 "Chapter 12. Basic Performance
    Tuning"), *Basic Performance Tuning*.
  prefs: []
  type: TYPE_NORMAL
- en: Data migration between storage hooks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe is dedicated to administrators who have to change from one store
    implementation to another for any reason. This example shows you how we can migrate
    binary files stored in the document library to other storage repositories. In
    our example, we will examine migration from S3Store (Amazon S3) to the local `FileSystemStore`
    repository hook.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Liferay has a built-in functionality to migrate documents between storage hooks.
    Let''s assume that our Liferay instance is already started, and the library is
    connected to the Amazon S3 cloud. In order to migrate documents to the filesystem,
    go through the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in as an administrator to the Liferay instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Admin** | **Control Panel**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then go to **Configuration** | **Server Administration** | **Data Migration**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll to the **Migrate documents from one repository to another** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a new repository hook called **com.liferay.portlet.documentlibrary.store.FileSystemStore**.![How
    to do it…](img/image00342.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Execute** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Liferay temporarily changes the status to maintenance mode.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Look into the `catalina.out` log and check the execution. The log file should
    look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Liferay provides powerful features to migrate data between store hooks. It
    is an important tool when our Liferay instance works and our project manager or
    product owner wants to change the storage system to another, such as Amazon S3
    or even SharePoint. Moreover, it is possible to do it without your developers
    having to write custom scripts. This functionality is implemented in the `com.liferay.portal.convert.ConvertDocumentLibrary`
    class. The `doConvert` method invokes migration processes for the following files:'
  prefs: []
  type: TYPE_NORMAL
- en: Migrate images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrate document libraries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrate message board attachments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrate wiki attachments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In fact, these four methods call *Dynamic Query* to get all the file definitions
    placed in the database and physically copy them from one place to another. The
    structure of all the folders and files is mapped one by one.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Carefully study your logfile in order to make sure that all of the data is moved
    correctly.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For information on how to change a database engine, refer to the *Migrating
    content from one database to another database* recipe in [Chapter 11](part0080.xhtml#aid-2C9D01
    "Chapter 11. Quick Tricks and Advanced Knowledge"), *Quick Tricks and Advanced
    Knowledge*.
  prefs: []
  type: TYPE_NORMAL
