["```js\n    class HelloReact extends React.Component {\n      render() {\n        return <div>Hello, {this.props.name}!</div>;\n      }\n    }\n\n    ReactDOM.render(\n      <HelloReact name=\"World\"/>,\n      document.getElementById('root')\n    );\n\n```", "```js\n    class HelloReact extends React.Component {\n      render() {\n        return React.createElement(\n          \"div\", null,\n          \"Hello, \", this.props.name, \"!\"\n        );\n      }\n    }\n\n    ReactDOM.render(\n      React.createElement(HelloReact, { name: \"World\" }),\n      document.getElementById('root')\n    );\n\n```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Hello, World!</title>\n      </head>\n      <body>\n        <div id=\"root\"> <!-- this is where we'll hook React -->\n        </div>\n <script src=\"img/react.min.js\"></script>\n <script src=\"img/react-dom.min.js\"></script>\n        <script type=\"text/javascript\">\n          class HelloReact extends React.Component {\n render() {\n return React.createElement(\n \"div\", null,\n \"Hello, \", this.props.name, \"!\"\n );\n }\n }\n\n          ReactDOM.render(\n React.createElement(HelloReact, { name: \"World\" }),\n document.getElementById('root')\n );\n        </script>\n      </body>\n    </html>\n\n```", "```js\n npm install create-react-app@1.3.1 --global\n\n```", "```js\n create-react-app react-shopping-cart\n\n```", "```js\n cd react-shopping-cart\n npm start\n\n```", "```js\n    node_modules\n    public\n      |- favicon.ico\n      |- index.html\n      |- manifest.json\n    src\n      |- App.css\n      |- App.js\n      |- App.test.js\n      |- index.css\n      |- index.js\n      |- logo.svg\n      |- registerServiceWorker.js\n    .gitignore\n    package.json\n    README.md\n\n```", "```js\n    node_modules\n    public\n      |- favicon.ico\n      |- index.html\n    src\n |- components\n |- App.js\n |- Product.js\n |- ProductList.js\n         |- ShoppingCart.js\n |- ShoppingCartItem.js\n |- css\n |- site.css\n |- images\n |- <images>\n      |- index.js\n    .gitignore\n    package.json\n    README.md\n\n```", "```js\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n import App from './components/App'; import './css/site.css';    ReactDOM.render(\n      <App/>,\n      document.getElementById('root')\n    );\n\n```", "```js\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Serverless Store</title>\n        <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n <link rel=\"stylesheet\" href=\"bootstrap.min.css\">     \n      </head>\n      <body>\n        <div id=\"root\"></div>\n      </body>\n    </html>\n\n```", "```js\n    // import React and other dependencies\n    import React, { Component } from 'react';\n    import AnotherComponent from './AnotherComponent';\n\n    // define the Component as a class\n class MyComponent extends Component {\n      // optional method\n      constructor() {\n super();\n this.state = {\n // state };\n }\n\n      // this method must be implemented\n      render() {\n return (\n // HTML definition\n );\n }\n    }\n\n    // export the component, so it can be used by others    \n export default MyComponent;\n\n```", "```js\n    render() {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1>Serverless Store</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <h3>Products</h3>\n              <ProductList\n products={this.state.products} onSelect={this.handleSelect}/>            </div>\n            <div className=\"col-md-4\">\n              <h3>Shopping Cart</h3>\n              <ShoppingCart \n                selectedProducts={\n                  this.state\n                      .products\n .filter(p => p.isSelected)\n                } \n                onDeselect={this.handleDeselect}/>            </div>\n          </div>\n        </div>\n      );\n    }\n\n```", "```js\n <ProductList products={this.state.products} onSelect={this.handleSelect}/>\n\n```", "```js\n <ShoppingCart      selectedProducts={\n        this.state\n            .products\n .filter(p => p.isSelected)\n      }onDeselect={this.handleDeselect}/>\n\n```", "```js\n    import lonelyBird from '../images/lonely-bird.jpg';\n    import solidFriendship from '../images/solid-friendship.jpg';\n\n    const products = [{\n        id: 1,\n        name: 'Lonely Bird',\n        image: lonelyBird,\n        price: 29.99,\n        isSelected: false\n    }, {\n        id: 2,\n        name: 'Solid Friendship',\n        image: solidFriendship,\n        price: 19.99,\n        isSelected: false\n    }];\n\n```", "```js\n    constructor() {\n       super();\n       this.state = {\n products: products };       // bind the component's \"this\" to the callback\n       this.handleSelect = this.handleSelect.bind(this);\n       this.handleDeselect = this.handleDeselect.bind(this);     }\n\n```", "```js\n    handleSelect(product) {\n      // create a copy of the products array\n      const products = this.state.products.slice();\n\n      // find the index of the product to modify\n const index = products.map(i => i.id).indexOf(product.id);\n\n      // modify the selection state\n products[index].isSelected = product.isSelected;      // make React aware that the state has changed\n      this.setState({products: products});\n    } \n\n```", "```js\n    handleDeselect(product) {\n      this.handleSelect(product);\n    }\n\n```", "```js\n    render() {\n const onSelect = this.props.onSelect;\n      const productList = \n this.props.products.map(product => {          return (\n            <div key={product.id} \n                 className=\"product-box\">\n              <Product\n product={product} onSelect={onSelect}/>            </div>\n          )\n        });\n\n      return (\n        <div>\n          {productList}\n        </div>\n      );\n    }\n\n```", "```js\n    render() {\n      return (\n        <div>\n          <img src={this.props.product.image}/>\n          <div>\n            <h3>{this.props.product.name}</h3>\n            <div>US$ {this.props.product.price}</div>\n            <div>\n              <button onClick={() => {\n const product = this.props.product; product.isSelected = !product.isSelected; this.props.onSelect(product);              }}>\n                {this.props\n                     .product\n                     .isSelected ? 'Remove' : 'Add to cart'}\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n```", "```js\n    render() {\n      const onDeselect = this.props.onDeselect;\n      const products = \n this.props.selectedProducts.map(product => {\n          return (\n            <ShoppingCartItem key={product.id}\n                              product={product}\n                              onDeselect={onDeselect}/>\n          )\n });\n\n      const empty = \n        <div className=\"alert alert-warning\">\n          Cart is empty\n        </div>;\n\n      return (\n        <div className=\"panel panel-default\">\n          <div className=\"panel-body\">\n {products.length > 0 ? products : empty}\n            <div>Total: US$ {this.getTotal()}</div>          </div>\n        </div>\n      );\n    }\n\n```", "```js\n    getTotal() {\n      return this.props\n                 .selectedProducts\n                 .map(p => p.price)\n                 .reduce((a, b) => a + b, 0);\n    }\n\n```", "```js\n    render() {\n      const product = this.props.product;\n      return (\n        <div>\n          <span>\n            {product.name}: US$ {product.price}\n          </span>\n          <a \n            onClick={() => {\n product.isSelected = false;\n this.props.onDeselect(product); \n }}>\n            <span className=\"glyphicon glyphicon-remove\">\n            </span>\n          </a>\n        </div>\n      );\n    }\n\n```", "```js\n npm start\n\n```", "```js\n npm run build\n\n```", "```js\n aws s3 sync ./build s3://my-bucket-name --acl public-read\n\n```", "```js\n aws s3 cp ./build/index.html s3://my-bucket-name \\ --cache-control no-cache --acl public-read\n\n```", "```js\n npm install axios --save\n\n```", "```js\n import axios from 'axios';\n\n```", "```js\n    constructor() {\n      super();\n\n      // empty initial state\n      this.state = {\n products: [],\n ready: false\n };  \n    }    \n\n```", "```js\n    componentDidMount() {\n      const apiAddress =\n        'https://abc123.execute-api.us-east-1.amazonaws.com';\n      const stage = 'prod';\n      const service = 'store/products';\n\n      axios\n .get(`${apiAddress}/${stage}/${service}`)\n .then(res => {\n this.setState({ \n products: res.data.products, \n ready: true \n });\n })\n .catch(error => {\n console.log(error);\n });\n    }\n\n```", "```js\n        handleSave(products) {       \n          axios\n .post(`${apiAddress}/${stage}/${service}`, \n products) // data to send\n .then(res => {\n this.setState({ \n products: this.state.products, \n hasSaved: true \n });\n })\n .catch(error => {\n console.log(error);\n });\n       }\n\n```", "```js\n        <ShoppingCart \n          products={this.state.products} \n          hasSaved={this.state.hasSaved}\n onSave={this.handleSave}/>\n\n```", "```js\n        return (\n          <div>\n            {products}\n            <div>Total: US$ {this.getTotal()}</div>\n            <button\n              onClick={() => {this.props.onSave();}}>\n              Save\n            </button>\n {this.props.hasSaved ? <div>saved</div> : ''}\n          </div>\n        );\n\n```", "```js\n npm install react-router-dom@4.x --save\n\n```", "```js\n        import React, { Component } from 'react';\n import { \n BrowserRouter as Router, Route, Switch \n } from 'react-router-dom';\n\n```", "```js\n        render() {\n          return (\n <Router>\n              <div>\n                <Header/>\n <Switch>\n                  <Route path=\"/\" exact component={ProductList}/>\n <Route path=\"/product/:id\" component={Product}/>\n <Route path=\"/shopping-cart\" component={ShoppingCart}/>\n <Route component={NoMatch}/>\n </Switch>\n                <Footer/>\n              </div>\n </Router>\n          );\n        }\n\n```", "```js\n    import { Link } from 'react-router-dom';\n\n```", "```js\n    render() {\n      return (\n        <div>\n          <ul>\n            <li>\n              <Link to='/product/1'>\n Product 1\n </Link>\n            </li>\n            <li>\n              <Link to='/product/2'>\n Product 2\n </Link>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n```", "```js\n <Route path=\"/product/:id\" component={Product}/>\n\n```", "```js\n    render() {\n      return (\n        <div>\n          <h4>\n Product Details for ID: {this.props.match.params.id}\n          </h4>\n        </div>\n      );\n    }\n\n```", "```js\n    const fs = require('fs');\n    const webPage = require('webpage');\n    const page = webPage.create();\n\n    const path = 'page1';\n    const url = 'https://example.com/' + path;\n\n    page.open(url, (status) => {\n\n      if (status != 'success') {\n        console.log('Error trying to prerender ' + url);\n        phantom.exit();\n      }\n\n      const content = page.content;\n      fs.write(path + '.html', content, 'w');\n\n      console.log(\"The file was saved.\");\n      phantom.exit();\n    });\n\n```", "```js\n phantomjs prerender.js\n\n```", "```js\n    const phantomjsLambdaPack = \n      require('phantomjs-lambda-pack');\n    const exec = phantomjsLambdaPack.exec;\n\n    exports.handler = (event, context, callback) => {\n      exec('prerender.js', (err, stdout, stderr) => {\n        console.log(err, 'finished'); \n        callback(err, 'finished');\n      });\n    };\n\n```", "```js\n npm install react-boostrap --save npm install react-router-bootstrap --save\n\n```", "```js\n        import { \n Navbar, Nav, NavItem \n        } from 'react-bootstrap';\n        import { \n IndexLinkContainer, LinkContainer \n        } from 'react-router-bootstrap';\n\n```", "```js\n        <Navbar>\n          <Nav>\n            <IndexLinkContainer to=\"/\">\n <NavItem>Home</NavItem>\n </IndexLinkContainer>\n <LinkContainer to=\"/shopping-cart\">\n <NavItem>Shopping Cart</NavItem>\n </LinkContainer>\n          </Nav>\n          <Nav pullRight>\n            <LinkContainer to=\"/signup\">\n <NavItem>Signup</NavItem>\n </LinkContainer>\n <LinkContainer to=\"/login\">\n <NavItem>Login</NavItem>\n </LinkContainer>\n            <NavItem>\n              <span className=\"glyphicon glyphicon-bell\">\n              </span>\n            </NavItem>\n          </Nav>\n        </Navbar>\n\n```", "```js\n <Route path=\"/\" exact component={ProductList}/> \n\n```", "```js\n    <Route path=\"/\" exact render={ \n      () => <ProductList \n products={this.state.products} \n onSelect={this.handleSelect}/> \n    }/>\n\n```", "```js\n <Link to={`/product/${this.props.product.id}`}>\n      <img src={this.props.product.image}/>\n </Link>\n\n```", "```js\n    <Route path=\"/product/:id\" render={\n      (props) => <Product \n                   product={\n                     this.state\n                         .products\n                         .find(x => \n                           x.id === props.match.params.id)\n                   }\n                   onSelect={this.handleSelect}/>\n     }/>\n\n```", "```js\n    <Modal show={this.state.showModal} onHide={this.closeModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>Your order has been sent</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>However, this is a demo...</p>\n      </Modal.Body>\n    </Modal>\n\n```", "```js\n    closeModal() {\n      this.setState({ showModal: false });\n    }\n\n```"]