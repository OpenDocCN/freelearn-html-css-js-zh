["```js\nMediaStreamTrack.getSources(function(sources){\n  for(var count = 0; count < sources.length; count++)\n  {\n    console.log(\"Source \" + (count + 1) + \" info:\");\n    console.log(\"ID is: \" + sources[count].id);\n\n    if(sources[count].label == \"\")\n    {\n      console.log(\"Name of the source is: unknown\");\n    }\n    else\n    {\n      console.log(\"Name of the source is: \" + sources[count].label);\n    }\n\n    console.log(\"Kind of source: \" + sources[count].kind);\n\n    if(sources[count].facing == \"\")\n    {\n      console.log(\"Source facing: unknown\");\n    }\n    else\n    {\n      console.log(\"Source facing: \" + sources[count].facing);\n    }\n  }\n})\n```", "```js\nSource 1 info:\nID is: 0c1cb4e9e97088d405bd65ea5a44a20dab2e9da0d298438f82bab57ff9787675\nName of the source is: unknown\nKind of source: audio\nSource facing: unknown\nSource 2 info:\nID is: 68fb69033c86a4baa4a03f60cac9ad1c29a70f208e392d3d445f3c2d6731f478\nName of the source is: unknown\nKind of source: audio\nSource facing: unknown\nSource 3 info:\nID is: c83fc025afe6c7841a1cbe9526a6a4cb61cdc7d211dd4c3f10405857af0776c5\nName of the source is: unknown\nKind of source: video\nSource facing: unknown\n```", "```js\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\nvar constraints = {\n  audio: true, \n  video: {\n    mandatory: {\n      minWidth: 640,\n      minHeight: 360\n    },\n    optional: [{\n      minWidth: 1280\n    }, {\n      minHeight: 720\n    }]\n  }\n}\n\nvar av_stream = null;\n\nnavigator.getUserMedia(constraints, function(mediastream){\n  av_stream = mediastream; //this is the MediaStream\n}, function(err){\n  console.log(\"Failed to get MediaStream\", err);\n});\n```", "```js\n<!doctype html>\n<html>\n  <body>\n\n    <video id=\"myVideo\"></video>\n    <br>\n    <input value=\"Pause\" onclick=\"pause()\" type=\"button\" />\n\n    <script type=\"text/javascript\">\n\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n      var constraints = {\n        audio: true, \n        video: true\n      }\n\n      var av_stream = null;\n\n      navigator.getUserMedia(constraints, function(mediastream){\n\n        av_stream = mediastream;\n\n        document.getElementById(\"myVideo\").setAttribute(\"src\", URL.createObjectURL(mediastream));\n        document.getElementById(\"myVideo\").play();\n      }, function(err){\n        console.log(\"Failed to get MediaStream\", err);\n      });\n\n      function pause()\n      {\n        av_stream.getTracks()[0].enabled = !av_stream.getTracks()[0].enabled;\n        av_stream.getTracks()[1].enabled = !av_stream.getTracks()[1].enabled;\n      }\n\n    </script>\n  </body>\n</html>\n```", "```js\n<!doctype html>\n<html>\n  <head>\n    <title>PeerJS Demo</title>\n  </head>\n  <body>\n\n    <!-- Place HTML code here -->\n\n    <script src=\"img/peer.min.js\"></script>\n    <script>\n      //place JavaScript code here\n    </script>\n  </body>\n</html>\n```", "```js\n<video id=\"remoteVideo\"></video>\n<br>\n<button onclick=\"connect()\">Connect</button>\n<br>\n<input type=\"text\" id=\"message\">\n<button onclick=\"send_message()\">Send Message</button>\n```", "```js\nvar peer = null;\n\nwindow.addEventListener(\"load\", function(){\n  var id = prompt(\"Please enter an unique name\");\n\n  peer = new Peer(id, {key: \"io3esxy6y43zyqfr\"}); \n\n  peer.on(\"open\", function(id){\n    alert(\"Connected to PeerServer successfully with ID: \" + id);\n  });\n\n  peer.on(\"error\", function(err){\n    alert(\"An error occured. Error type: \" + err.type);\n  })\n\n  peer.on(\"disconnected\", function(){\n    alert(\"Disconnected from signaling server. You ID is taken away. Peer-to-peer connections is still intact\");\n  })\n\n  peer.on(\"close\", function(){\n    alert(\"Connection to signaling server and peer-to-peer connections have been killed. You ID is taken away. You have been destroyed\");\n  })\n\n  peer.on(\"connection\", function(dataConnection){\n    setTimeout(function(){\n      if(confirm(dataConnection.peer + \" wants to send data to you. Do you want to accept?\"))\n      {\n        acceptDataConnection(dataConnection);\n      }\n      else\n      {\n        dataConnection.close();\n      }\n    }, 100)\n  })\n\n  peer.on(\"call\", function(mediaConnection){\n    setTimeout(function(){\n      if(confirm(\"Got a call from \" + mediaConnection.peer + \". Do you want to pick the call?\"))\n      {\n        acceptMediaConnection(mediaConnection);\n      }\n      else\n      {\n        mediaConnection.close();\n      }\n    }, 100);\n  })\n});\n```", "```js\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\nvar myDataConnection = null;\nvar myMediaConnection = null;\n\nfunction acceptDataConnection(dataConnection)\n{\n  myDataConnection = dataConnection;\n\n  dataConnection.on(\"data\", function(data){\n    alert(\"Message from \" + dataConnection.peer + \".\\n\" + data)\n  })\n\n  dataConnection.on(\"close\", function(data){\n    alert(\"DataConnecion closed\");\n  })\n\n  dataConnection.on(\"error\", function(err){\n    alert(\"Error occured on DataConnection. Error: \" + err);\n  })\n}\n\nfunction acceptMediaConnection(mediaConnection)\n{\n  myMediaConnection = mediaConnection;\n\n  mediaConnection.on(\"stream\", function(remoteStream){\n\n    document.getElementById(\"remoteVideo\").setAttribute(\"src\", URL.createObjectURL(remoteStream));\n    document.getElementById(\"remoteVideo\").play();\n  })\n\n  mediaConnection.on(\"close\", function(data){\n    alert(\"MediaConnecion closed\");\n  })\n\n  mediaConnection.on(\"error\", function(err){\n    alert(\"Error occured on MediaConnection. Error: \" + err);\n  })\n\n  navigator.getUserMedia({video: true, audio: true}, function(mediaStream) {\n    mediaConnection.answer(mediaStream);\n  }, function(e){ alert(\"Error with MediaStream: \" + e); });\n}\n```", "```js\nfunction connect()\n{\n  var id = prompt(\"Please enter other peer ID\");\n  establishDataConnection(id);\n  establishMediaConnection(id);\n}\n\nfunction establishDataConnection(id)\n\n{\n  var dataConnection = peer.connect(id, {reliable: true, ordered: true});\n\n  myDataConnection = dataConnection;\n\n  dataConnection.on(\"open\", function(){\n    alert(\"DataConnecion Established\");\n  });\n\n  dataConnection.on(\"data\", function(data){\n    alert(\"Message from \" + dataConnection.peer + \".\\n\" + data)\n  })\n\n  dataConnection.on(\"close\", function(data){\n    alert(\"DataConnecion closed\");\n  })\n\n  dataConnection.on(\"error\", function(err){\n    alert(\"Error occured on DataConnection. Error: \" + err);\n  })\n}\n\nfunction establishMediaConnection(id)\n{\n  var mediaConnection = null;\n\n  navigator.getUserMedia({video: true, audio: true}, function(mediaStream) {\n    mediaConnection = peer.call(id, mediaStream);\n\n    myMediaConnection = mediaConnection;\n\n    mediaConnection.on(\"stream\", function(remoteStream){\n      document.getElementById(\"remoteVideo\").setAttribute(\"src\", URL.createObjectURL(remoteStream));\n      document.getElementById(\"remoteVideo\").play();\n    })\n\n    mediaConnection.on(\"error\", function(err){\n      alert(\"Error occured on MediaConnection. Error: \" + err);\n    })\n\n    mediaConnection.on(\"close\", function(data){\n      alert(\"MediaConnecion closed\");\n    })\n  }, function(e){ alert(\"Error with MediaStream: \" + e); });\n}\n```", "```js\nfunction send_message()\n{\n  var text = document.getElementById(\"message\").value;\n\n  myDataConnection.send(text);\n}\n```"]