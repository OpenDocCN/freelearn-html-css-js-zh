["```js\n$('input .address')\n```", "```js\n$('input .address').addClass('highlighted').removeAttr('disabled')\n```", "```js\n$.each [1, 2, 3, 4], (index, value) -> alert(index + ' is ' + value)\n```", "```js\n<script src=\"img/jquery.min.js\"></script>\n    <script>window.jQuery || document.write('<script src=\"img/jquery-1.7.2.min.js\"><\\/script>')\n</script>\n```", "```js\ncoffee -co public/js -w src/\n```", "```js\n$ -> alert \"It works!\"\n```", "```js\n// Generated by CoffeeScript 1.3.3\n(function() {\n    alert('It works!');\n}).call(this);\n```", "```js\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>jQuery and CoffeeScript Todo</title>\n  <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n<body>\n  <script src=\"img/jquery.min.js\"></script>\n  <script src=\"img/app.js\"></script>\n</body>\n</html>\n```", "```js\nnpm install http-server -g\n```", "```js\nhttp-server\n```", "```js\n<section id=\"todoapp\">\n    <header id=\"header\">\n      <h1>todos</h1>\n      <input id=\"new-todo\" placeholder=\"What needs to be done?\" autofocus>\n    </header>\n    <section id=\"main\">\n      <ul id=\"todo-list\"></ul>\n    </section>\n    <footer id=\"footer\">\n      <button id=\"clear-completed\">Clear completed</button>\n    </footer>\n  </section> \n```", "```js\nclass TodoApp\n  constructor: ->\n    @bindEvents()\n\n  bindEvents: ->\n    alert 'binding events'\n\n$ ->\n  app = new TodoApp()\n```", "```js\n  bindEvents: ->\n    $('#new-todo').on('keyup', @create)\n\n  create: (e) ->\n    $input = $(this)\n    val = ($.trim $input.val())\n    return unless e.which == 13 and val\n    alert val\n    # We create the todo item\n```", "```js\nlocalStorage.setItem(key, value)\nlocalStorage.getItem(key)\nlocalStorage.removeItem(key)\n```", "```js\nStorage::setObj = (key, obj) ->\n  @setItem key, JSON.stringify(obj)\n\nStorage::getObj = (key) ->\n  JSON.parse @getItem(key)\n```", "```js\n  create: (e)->\n    $input = $(this)\n    val = ($.trim $input.val())\n    return unless e.which == 13 and val\n\n randomId = (Math.floor Math.random()*999999)\n\n localStorage.setObj randomId,{\n id: randomId\n title: val\n completed: false\n }\n $input.val ''\n\n```", "```js\ndisplayItems: ->\n    alert 'displaying items'\n```", "```js\n  create: (e) ->\n    $input = $(this)\n    val = ($.trim $input.val())\n    return unless e.which == 13 and val\n\n    randomId = (Math.floor Math.random()*999999)\n\n    localStorage.setObj randomId,{\n      id: randomId\n      title: val\n      completed: false\n    }\n    $input.val ''\n @displayItems()\n\n```", "```js\n  bindEvents: ->\n $('#new-todo').on('keyup',(e) => @create(e))\n\n```", "```js\n  create: (e) ->\n $input = $(e.target)\n    val = ($.trim $input.val())\n```", "```js\nclass TodoApp\n\n  constructor: ->\n @cacheElements()\n    @bindEvents()\n\n cacheElements: ->\n @$input = $('#new-todo')\n\n  bindEvents: ->\n @$input.on('keyup',(e) => @create(e))\n\n  create: (e) ->\n val = ($.trim @$input.val())\n    return unless e.which == 13 and val\n\n    randomId = (Math.floor Math.random()*999999)\n\n    localStorage.setObj randomId,{\n      id: randomId\n      title: val\n        completed: false\n    }\n @$input.val ''\n @displayItems()\n```", "```js\n  cacheElements: ->\n    @$input = $('#new-todo')\n @$todoList = $('#todo-list')\n  displayItems: ->\n @clearItems()\n @addItem(localStorage.getObj(id)) for id in Object.keys(localStorage)\n\n clearItems: ->\n @$todoList.empty()\n\n addItem: (item) ->\n html = \"\"\"\n <li #{if item.completed then 'class=\"completed\"' else ''} data-id=\"#{item.id}\">\n <div class=\"view\">\n <input class=\"toggle\" type=\"checkbox\" #{if item.completed then 'checked' else ''}>\n <label>#{item.title}</label>\n <button class=\"destroy\"></button>\n </div>\n </li> \n \"\"\"\n @$todoList.append(html)\n\n```", "```js\n  constructor: ->\n    @cacheElements()\n    @bindEvents()\n @displayItems()\n\n```", "```js\n  bindEvents: ->\n    @$input.on('keyup',(e) => @create(e))\n @$todoList.on('click', '.destroy', (e) => @destroy(e.target)) \n\n```", "```js\n  destroy: (elem) ->\n    id = $(elem).closest('li').data('id')\n    localStorage.removeItem(id)\n    @displayItems()\n```", "```js\n  bindEvents: ->\n    @$input.on('keyup',(e) => @create(e))\n    @$todoList.on('click', '.destroy', (e) => @destroy(e.target))\n @$todoList.on('change', '.toggle', (e) => @toggle(e.target))\n\n```", "```js\n  toggle: (elem) ->\n    id = $(elem).closest('li').data('id')\n    item = localStorage.getObj(id)\n    item.completed = !item.completed\n    localStorage.setObj(id, item)\n```"]