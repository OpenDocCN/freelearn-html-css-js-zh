["```js\n      chart: {\n        renderTo: 'container',\n        type: 'pie',\n        borderWidth: 1,\n        borderRadius: 5\n      },\n      title: {\n        text: 'Number of Software Games Sold in 2011 Grouped by Publishers',\n      },\n      credits: { \n        ...\n      },\n      series: [{\n        data: [ [ 'Nintendo', 54030288 ], \n            [ 'Electronic Arts', 31367739 ],\n            ... ]\n      }]\n```", "```js\n   plotOptions: {\n     pie: {\n       slicedOffset: 20,\n       allowPointSelect: true,\n       dataLabels: {\n         style: {\n              width: '140px'\n         },\n         formatter: function() {\n           var str = this.point.name + ': ' +          \n             Highcharts.numberFormat(this.y, 0);\n           return str;\n         }\n       }\n     }\n   },\n```", "```js\n    series: [{\n      data: [ { \n        name: 'Nintendo', \n        y: 54030288, \n        sliced: true, \n        dataLabels: { \n          style: { \n          fontWeight: 'bold' \n          } \n        } \n       }, [ 'Electronic Arts', 31367739 ], \n        [ 'Activision', 30230170 ], .... ]\n    }]\n```", "```js\n      plotOptions: {\n        pie: {\n          showInLegend: true,\n          dataLabels: {\n            distance: -24,\n            color: 'white',\n            style: {\n              fontWeight: 'bold'\n            },\n            formatter: function() {\n              return Highcharts.numberFormat(this.percentage) + '%';\n            }          \n          }\n        }\n      },\n```", "```js\n      legend: {\n        align: 'right',\n        layout: 'vertical',\n        verticalAlign: 'middle',\n        itemMarginBottom: 4,\n        itemMarginTop: 4,\n        x: -40\n      },\n```", "```js\n      plotOptions:{\n        pie: {\n           ....,\n           size: '75%'\n        }\n      },\n      series: [{\n        center: [ '25%', '50%' ],\n        data: [ [ 'Nintendo', 54030288 ], \n                [ 'Electronic Arts', 31367739 ], \n                .... ]\n      }, {\n        center: [ '75%', '50%' ],\n        dataLabels: {\n          formatter: function() {\n            var str = this.point.name + ': ' +                    Highcharts.numberFormat(this.percentage, 0) + '%';\n            return str;\n          }\n        },\n        data: [ [ 'Xbox', 80627548 ], \n                [ 'PS3', 64788830 ], \n                   ....  ]\n      }]\n```", "```js\n      series: [{\n        name: 'Publishers',\n        dataLabels : {\n          distance: -70,\n          color: 'white',\n          formatter: function() {\n             return this.point.name + ':<br/> ' +\n Highcharts.numberFormat(this.y / 1000000, 2);\n          },\n          style: {\n             fontWeight: 'bold'\n          }\n        },\n        data: [ [ 'Nintendo', 54030288 ], \n                [ 'Electronic Arts', 31367739 ],\n                [ 'Activision', 30230170 ] ]\n      }, {\n        name: 'Titles',\n        innerSize: '60%',\n        dataLabels: {\n          formatter: function() {\n            var str = '<b>' + this.point.name + '</b>: ' + \n                 Highcharts.numberFormat(this.y / 1000000, 2);\n            return str;\n          }\n        },\n        data: [ // Nintendo\n            { name: 'Pokemon B&W', y: 8541422,\n             color: colorBrightness(\"#4572A7\",\n                        0.05) }, \n            { name: 'Mario Kart', y: 5349103,\n             color: colorBrightness('#4572A7',\n                        0.1) },\n            ....\n\n            // EA\n            { name: 'Battlefield 3', y: 11178806,\n             color: colorBrightness('#AA4643',\n                        0.05) }, \n            .... \n\n            // Activision\n            { name: 'COD: Modern Warfare 3', \n             y: 23981182, \n             color: colorBrightness('#89A54E',\n                        0.1) },\n            ....\n        }]\n      }]\n```", "```js\ncolor: Highcharts.Color(color).brighten(brightness).get()\n```", "```js\n function colorBrightness(color, brightness) {\n   return   \n     Highcharts.Color(color).brighten(brightness).get();\n }\n```", "```js\n    var wiiColor = '#BBBBBB',\n        x360Color = '#89A54E',\n        ps3Color = '#4572A7',\n        splineColor = '#FF66CC';\n```", "```js\n    var chart = new Highcharts.Chart({\n      chart: {\n        renderTo: 'container',        \n        borderWidth: 1,\n        spacingTop: 40,\n        backgroundColor: {\n          linearGradient: { x1: 0, y1: 0, \n                            x2: 0, y2: 1 },\n          stops: [ [ 0, '#0A0A0A' ],\n                   [ 1, '#303030' ] ]\n        }\n      },\n      subtitle: {\n          floating: true,\n          text: 'Number of consoles sold (in millions)',\n          y: -5\n      },\n```", "```js\n      xAxis: {\n        minPadding: 0.2,\n        tickInterval: 1,\n        labels: {\n          formatter: function() {            \n            return this.value;\n            },  \n          style: {\n           color: '#CFCFCF'\n          } \n        }\n      },\n```", "```js\n      yAxis: [{\n        title: {\n          text: 'Number of games sold',\n          align: 'low',\n          style: {           \n            color: '#CFCFCF'\n          }\n        },\n        labels: {\n          style: {\n           color: '#CFCFCF'\n          }\n        },\n        maxPadding: 0.5\n      }, {\n        title: {\n          text: 'Number of games released',\n          style: {           \n           color: splineColor\n          } \n        },\n        labels: {\n          style: {\n           color: splineColor\n          } \n        },\n        maxPadding: 0.5,\n        opposite: true\n      }],\n```", "```js\n      series:[{\n        type: 'pie',\n        name: 'Hardware 2011',\n        size: '25%',\n        center: [ '88%', '5%' ],\n        data: [{ name: 'PS3', y: 14128407, \n             color: ps3Color }, \n            { name: 'X360', y: 13808365, \n             color: x360Color }, \n            { name: 'Wii', y: 11567105, \n             color: wiiColor } ],\n        .....\n```", "```js\n      {  name: \"Game released\",\n        type: 'spline',\n        showInLegend: false,\n        lineWidth: 3,\n        yAxis: 1,\n        color: splineColor,\n        pointStart: 2008, \n        pointInterval: 1,\n        data: [ 1170, 2076, 1551, 1378 ]\n      }, \n```", "```js\n    chart.renderer.image('./pacman.svg', 0,\n               0, 200, 200).attr({\n       'zIndex': 10 \n    }).add();\n```", "```js\n            plotOptions: {\n               pie: {\n                   startAngle: 30,\n                   endAngle: 270 \n               }\n            },\n```", "```js\n            plotOptions: {\n                pie: {\n                    startAngle: 120,\n                    endAngle: 420,\n                    innerSize: 110,\n                    ....\n                }\n           } \n```", "```js\n          var data = [{\n               name: 'MCD 0.96%',\n               y: 1,\n               dataLabels: { rotation: 35 },\n               color: colorBrightness('#365D97', ratio1)\n          }, {\n              name: 'HD 0.86%',\n              y: 1,\n              dataLabels: { rotation: 45 },\n              color: colorBrightness('#365D97', ratio2)\n          }, {\n              ....\n          }]\n```", "```js\n       plotOptions: {\n           pie: {\n               size: '100%',\n               startAngle: 120,\n               endAngle: 420,\n               innerSize: 110,\n               dataLabels: {\n                   connectorWidth: 0,\n                   distance: -40,\n                   color: 'white',\n                   y: 15\n               }\n    },\n```", "```js\n  var mouseOver = function(event) {\n         // 'this' keyword in this handler represents \n         // the triggered object, i.e. the data point\n         // being hovered over \n         var point = this;\n\n         // retrieve the renderer object from the \n         // chart hierarchy\n         var renderer = point.series.chart.renderer;\n\n         // Initialise the SVG elements group\n         group = renderer.g().add();\n\n         // Calculate the x and y coordinate of the \n         // pie center from the plot dimension\n         var arcX = c.plotWidth/2 - c.plotLeft;\n         var arcY = c.plotHeight/2 + c.plotTop;\n\n         // Create and display the SVG arc with the \n         // same color hovered slice and add the arc \n         // into the group\n         detailArc = \n             renderer.arc(arcX, arcY, 230, 70, -0.3, 0.3)\n                      .css({\n                           fill: point.options.color\n                       }).add(group);\n\n         // Create and display the text box with stock\n         // detail and add into the group\n         detailBox = renderer.text(sharePrice, \n                                   arcX + 80, arcY - 5)\n                             .css({\n                                   color: 'white',\n                                   fontWeight: 'bold',\n                                   fontSize: '15px'\n                             }).add(group);\n  };\n\n  plotOptions: {\n      pie: {\n          ....\n          point: {\n              events: {\n                  mouseOver: mouseOver,\n                  mouseOut: function(event) {\n                      group && (group = group.destroy());\n                  }\n          }\n```"]