["```js\nvar myView = new Backbone.View();\nmyView.on('myevent', function () {\n  console.log('\"myevent\" is fired');\n});\n\nmyView.trigger('myevent');\n```", "```js\nvar Login = Backbone.View.extend({\n  'click #login-btn': 'doLogin',\n  doLogin: function () {\n    var me = this;\n\n    // send a login request\n    $.ajax({\n      url: '/login',\n      method: 'POST',\n      data: {\n        username: 'foo',\n        password: 'foo'\n      },\n      success: function (response) {\n        me.trigger('loggedin', response);\n      }\n    });\n  }\n});\n\nvar loginView = new Login();\nlogin.doLogin();\n```", "```js\n// in some other component\nloginView.on('loggedin', function(response){\n  // Do something\n});\n```", "```js\n// Pass multiple data\nme.trigger('loggedin', response, 'foo', 'bar');\n\n// All the passed params will be available as function arguments\nloginView.on('loggedin', function(response, foo, bar){\n  console.log(response, foo, bar);\n});\n```", "```js\nvar vent = _.extend({}, Backbone.Events);\n\n// Listen to a custom event\nvent.on('customevent', function(){\n  console.log('Custom event fired');\n});\n\n// Fire the event\nvent.trigger('customevent');\n```", "```js\nvent.on('addcomment', user.addComment);\nvent.on('addcomment', company.addComment);\n```", "```js\nApp.userVent = _.extend({}, Backbone.Events);\nApp.documentVent = extend({}, Backbone.Events);\n```", "```js\nApp.userVent.on('addcomment', user.addComment);\nApp.documentVent.on('addcomment', company.addComment);\n```", "```js\nApp.vent.trigger('before:login');\nApp.vent.trigger('after:login');\nApp.vent.trigger('user:add:comment');\n```", "```js\n// Memory leak\nvar MyView = Backbone.View.extend({\n  tpl: '<%= name %>',\n  model: new Backbone.Model({\n    name: 'Suramya'\n  }),\n\n  initialize: function () {\n    this.model.on('change', this.render, this);\n  },\n\n  render: function () {\n    var html = _.template(this.tpl, this.model.toJSON());\n    this.$el.html(html);\n    return this;  \n  }\n});\n\nvar myView = new MyView();\n$(document.body).append(myView.render().el);\n\nmyView.model.set('name', 'Arup');\nmyView.remove();\n```", "```js\nclose: function () {\n  this.model.off('change', this.render, this);\n  this.remove();\n}\n```", "```js\nthis.listenTo(this.model, 'change', this.render);\n```", "```js\nvar methodMap = {\n  'create': 'POST',\n  'update': 'PUT',\n  'patch': 'PATCH',\n  'delete': 'DELETE',\n  'read': 'GET'\n};\n```", "```js\n// FooApi is a public api with 'add', 'edit', 'read' \n// and 'delete' methods\nvar User = Backbone.Model.extend({\n  sync: function (method, model, options) {\n    options || (options = {});\n\n    switch (method) {\n    case 'create':\n      FooApi.add(options.data);\n      break;\n\n    case 'update':\n      FooApi.edit(options.data);\n      break;\n\n    case 'delete':\n      FooApi.delete({\n        id: options.data.id\n      });\n      break;\n\n    case 'read':\n      FooApi.read({\n        id: options.data.id\n      });\n      break;\n    }\n    // Other stuff\n  }\n});\n\nvar user = new User({\n  name: 'Manali',\n  age: 29\n});\n\n// This will call FooApi.add() method\nuser.save();\n```", "```js\nvar Users = Backbone.Collection.extend({\n  model: Backbone.Model,\n  localStorage: new Backbone.LocalStorage(\"users\")\n});\n\nvar users = new Users();\n\n// Add items to collection\nusers.add([{\n  name: 'Soumendu De'\n}, {\n  name: 'Bikash Debroy'\n}])\n\n// Sync collection data to localstorage\nusers.each(function (user) {\n  user.save();\n}); \n```"]