["```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>React Demo</title>\n\n    <script src=\"img/react.js\"></script>\n    <script src=\"img/react-dom.js\"></script>\n  </head>\n  <body>\n\n    <script>\n      //place React code here\n    </script>\n  </body>\n</html>\n```", "```js\n<div id=\"container1\"></div>\n```", "```js\nvar helloBold = React.createElement(\"b\", {}, \"Hello\");\nvar worldItalic = React.createElement(\"i\", {}, \" World\");\nvar helloWorld = React.createElement(\"a\", {href: \"#\"}, helloBold, worldItalic);\n\nReactDOM.render(helloWorld, document.getElementById(\"container1\"));\n```", "```js\n<div id=\"container1\"></div>\n```", "```js\nvar anchorWithBoldItalic = React.createClass({\n  render: function() {\n    return React.createElement(\n      \"a\", \n      {href: this.props.href}, \n      React.createElement(\"b\", {}, this.props.boldText), \n      React.createElement(\"i\", {}, this.props.italicText)\n    );\n  }\n});\n\nvar HelloWorld = React.createElement(anchorWithBoldItalic, {href: \"#\", boldText: \"Hello\", italicText: \" World\" });\n\nReactDOM.render(HelloWorld, document.getElementById(\"container2\"));\n```", "```js\n<div id=\"container3\"></div>\n```", "```js\nvar hideShowBoxButton = React.createClass({\n  getInitialState: function(){\n    return {\n      display: \"inline-block\"\n    }\n  },\n  handleClick: function(){\n    if(this.state.display == \"inline-block\")\n    {\n      this.setState({display: \"none\"});\n    }\n    else\n    {\n        this.setState({display: \"inline-block\"});\n    }\n  },\n  render: function(){\n    return React.createElement(\n      \"div\", \n      {}, \n      React.createElement(\n        \"a\", \n        {href: \"#\", onClick: this.handleClick}, \n        \"Click to Show/Hide\"\n      ), \n      React.createElement(\n        \"span\", \n        {\n          style: {\n            display: this.state.display, \n            height: 30, \n            width: 30, \n            backgroundColor: \"red\"\n          }\n        }\n      )\n    );\n  }\n});\n\nReactDOM.render(React.createElement(hideShowBoxButton), document.getElementById(\"container3\"));\n```", "```js\n{\n  \"name\": \"React-Server-Demo\",\n  \"dependencies\": {\n    \"express\": \"4.13.3\",\n    \"react\": \"0.14.7\",\n    \"react-dom\": \"0.14.7\"\n  }\n}\n```", "```js\nvar React = require(\"react\");\nvar ReactDOMServer = require(\"react-dom/server\");\nvar express = require(\"express\");\nvar app = express();\n\nvar anchorWithBoldItalic = React.createClass({\n  render: function() {\n    return React.createElement(\n      \"a\", \n      {href: this.props.href}, \n      React.createElement(\"b\", {}, this.props.boldText), \n      React.createElement(\"i\", {}, this.props.italicText)\n    );\n  }\n});\n\nvar HelloWorld = React.createElement(anchorWithBoldItalic, {href: \"#\", boldText: \"Hello\", italicText: \" World\" });\n\napp.get(\"/\", function(httpRequest, httpResponse, next){\n  var reactHtml = ReactDOMServer.renderToString(HelloWorld);\n  httpResponse.send(reactHtml)\n})\n\napp.listen(8080);\n```", "```js\n<script src=\"img/browser.min.js\"></script>\n```", "```js\n<script type=\"text/babel\">\n</script>\n```", "```js\n<div id=\"container4\"></div>\n```", "```js\nvar HideShowBoxButton = React.createClass({\n  getInitialState: function(){\n    return {\n      display: \"inline-block\"\n    }\n  },\n  handleClick: function(){\n    if(this.state.display == \"inline-block\")\n    {\n      this.setState({display: \"none\"});\n    }\n    else\n    {\n      this.setState({display: \"inline-block\"});\n    }\n  },\n  render: function(){\n    var boxStyle = {\n      display: this.state.display, \n      height: 30, \n      width: 30, \n      backgroundColor: \"red\"\n    };\n\n    return (\n      <div>\n        <a href=\"#\" onClick={this.handleClick}>Click to Show/Hide</a>\n        <span style={boxStyle}></span>\n      </div>\n    )\n  }\n});\n\nReactDOM.render(<HideShowBoxButton />, document.getElementById(\"container4\"));\n```", "```js\nvar HideShowBoxButton = React.createClass({\n  displayName: \"HideShowBoxButton\",\n\n  getInitialState: function getInitialState() {\n    return {\n      display: \"inline-block\"\n    };\n  },\n  handleClick: function handleClick() {\n    if (this.state.display == \"inline-block\") {\n      this.setState({ display: \"none\" });\n    }\n    else\n    {\n      this.setState({ display: \"inline-block\" });\n    }\n  },\n  render: function render() {\n    var boxStyle = {\n      display: this.state.display,\n      height: \"30px\",\n      width: \"30px\",\n      backgroundColor: \"red\"\n    };\n\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        \"a\",\n        { href: \"#\", onClick: this.handleClick },\n        \"Click to Show/Hide\"\n      ),\n      React.createElement(\"span\", { style: boxStyle })\n    );\n  }\n});\n\nReactDOM.render(React.createElement(HideShowBoxButton, null), document.getElementById(\"container4\"));\n```", "```js\n<div id=\"container5\"></div>\n```", "```js\nvar ResponsiveImage = React.createClass({\n  render: function(){\n\n    var imgWidth = {\n      width: \"100%\"\n    }\n\n    return (\n      <img src={this.props.src} style={imgWidth} />\n    )\n  }\n})\n\nvar Card = React.createClass({\n  render: function(){\n    var CardContainerStyle = {\n      maxWidth: 300,\n      backgroundColor: \"grey\"\n    }\n\n    return (\n      <div style={CardContainerStyle}>\n        <h4>{this.props.heading}</h4>\n        <ResponsiveImage src={this.props.src} />\n      </div>\n    )\n  }\n})\n\nReactDOM.render(<Card src=\"img/350x150\" heading=\"This is a Card Header\" />, document.getElementById(\"container5\"));\n```", "```js\n<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>\n```", "```js\n<ul>\n  <li>Item 2</li>\n</ul>\n```", "```js\n<ul>\n  <li>Item 0</li>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>\n```", "```js\n<div id=\"container6\"></div>\n```", "```js\nvar DynamicList = React.createClass({\n  getInitialState: function(){\n    return {\n      results: this.props.results\n    }\n  },\n  handleClick: function(){ \n    var results = this.state.results;\n    var firstId = results[0].id - 1;\n    var firstValue = results[0].value - 1;\n\n    results.unshift({id: firstId, value: firstValue});\n    this.setState({results: results});\n  },\n  render: function(){\n    return (\n      <div>\n        <a href=\"#\" onClick={this.handleClick}>Click to add new item</a>\n        <ul>\n          {this.state.results.map(function(result) {\n            return <li key={result.id}> {result.value} </li>;\n          })}\n        </ul>\n      </div>\n\n    )\n  }\n})\n\nvar results = [{id: 1, value: 1}, {id: 2, value: 2}];\n\nReactDOM.render(<DynamicList results={results} />, document.getElementById(\"container6\"));\n```", "```js\nvar ComponentWithDefaultProps = React.createClass({\n  getDefaultProps: function() {\n    return {\n      value: 'default value'\n    };\n  }\n});\n```", "```js\n<div id=\"container7\"></div>\n```", "```js\nvar ButtonComponent = React.createClass({\n  componentWillReceiveProps: function(nextProps){\n    console.log(\"Text changed to \" + nextProps.text);\n  },\n  render: function(){\n    return (\n      <button>{this.props.text}</button>\n    )\n  }\n})\n\nvar ButtonHolderComponent = React.createClass({\n  componentDidMount: function(){\n    setInterval(function(){\n      this.setState({\n        text: this.state.text + 1\n      });\n    }.bind(this), 1000)\n  },\n  getInitialState: function(){\n    return {\n      text: 1\n    }\n  },\n  render: function(){\n    return (\n      <ButtonComponent text={this.state.text} />\n    )\n  }\n})\n\nReactDOM.render(<ButtonHolderComponent />, document.getElementById(\"container7\"));\n```", "```js\n<div id=\"container8\"></div>\n```", "```js\nvar Mixin1 = {\n  componentWillMount: function(){\n    console.log(\"Component will mount now\");\n  }\n}\n\nvar Mixin2 = {\n  componentDidMount: function(){\n    console.log(\"Component did mount\");\n  }\n}\n\nvar HeadingComponent = React.createClass({\n  mixins: [Mixin1, Mixin2],\n  render: function(){\n    return <h1>React is Awesome</h1>\n  }\n});\n\nReactDOM.render(<HeadingComponent />, document.getElementById(\"container8\"));\n```", "```js\n<div id=\"container9\"></div>\n```", "```js\nvar FormComponent = React.createClass({\n  clicked: function(){\n    console.log(this.refs.myInput.value);\n  },\n  render: function(){\n    return (\n      <div>\n        <input type=\"text\" placeholder=\"Write Something\" ref=\"myInput\" />\n        <input type=\"button\" value=\"Click to Submit\" onClick={this.clicked} />\n      </div>\n\n    )\n  }\n})\n\nReactDOM.render(<FormComponent />, document.getElementById(\"container9\"));\n```", "```js\nHello World\n```"]