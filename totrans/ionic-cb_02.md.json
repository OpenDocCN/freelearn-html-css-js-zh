["```js\n$ sudo npm install -g cordova ionic ios-sim\n```", "```js\n$ ionic start PagesAndTabs tabs \n$ cd PagesAndTabs\n$ code .\n```", "```js\n<ion-tabs> \n  <ion-tab [root]=\"tab1Root\" tabTitle=\"One\" \n   tabIcon=\"water\"></ion-tab>  <ion-tab [root]=\"tab2Root\" \n   tabTitle=\"Two\" \n   tabIcon=\"leaf\"></ion-tab>  <ion-tab [root]=\"tab3Root\" \n   tabTitle=\"Three\" \n   tabIcon=\"flame\"></ion-tab> \n</ion-tabs> \n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>One</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <h2>Welcome to Ionic!</h2>\n  <p>\n    This starter project comes with simple tabs-based layout for \n    apps\n    that are going to primarily use a Tabbed UI.\n  </p>\n  <p>\n    Take a look at the <code>src/pages/</code> directory to add or     \n    change tabs, update any existing page or create new pages.\n  </p>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Two\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-item>\n      <ion-input type=\"text\" placeholder=\"First Name\"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-input type=\"text\" placeholder=\"Last Name\"></ion-input>\n    </ion-item>\n\n    <div padding>\n      <button ion-button primary block>Create Account</button>\n    </div>\n  </ion-list>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Three\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-slides #mySlider index=0 (ionSlideDidChange)=\"onSlideChanged($event)\">\n    <ion-slide style=\"background-color: green\">\n      <h2>Slide 1</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: blue\">\n      <h2>Slide 2</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: red\">\n      <h2>Slide 3</h2>\n    </ion-slide>\n\n </ion-slides>\n</ion-content>\n```", "```js\nimport { Component, ViewChild } from '@angular/core';\nimport { NavController, Slides } from 'ionic-angular';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n  @ViewChild('mySlider') slider: Slides;\n  constructor(public navCtrl: NavController) {\n\n  }\n  onSlideChanged(e) {\n    let currentIndex = this.slider.getActiveIndex();\n    console.log(\"You are on Slide \", (currentIndex + 1));\n  }\n\n}\n```", "```js\n$ ionic serve\n```", "```js\nimport { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { TabsPage } from '../pages/tabs/tabs';\n```", "```js\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: \n  SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n```", "```js\n<ion-nav [root]=\"rootPage\"></ion-nav>\n```", "```js\nclass Example {}\n```", "```js\nexport class Example {} \n```", "```js\nplatform.ready().then(() => { \n\n}); \n```", "```js\nplatform.ready().then(function() { \n\n}); \n```", "```js\nvar a1 = a.map( s => s.length ); \n```", "```js\nvar a1 = a.map(function(s){ return s.length }); \n```", "```js\nimport { Component } from '@angular/core'; \nimport { HomePage } from '../home/home'; \nimport { AboutPage } from '../about/about'; \nimport { ContactPage } from '../contact/contact'; \n```", "```js\n@Component({ \n  template: \n  ` <ion-tabs> \n      <ion-tab [root]=\"tab1Root\" tabTitle=\"One\" \n       tabIcon=\"water\"></ion-tab><ion-tab [root]=\"tab2Root\" tabTitle=\"Two\" \n       tabIcon=\"leaf\"></ion-tab><ion-tab [root]=\"tab3Root\"  \n       tabTitle=\"Three\" \n       tabIcon=\"flame\"></ion-tab> \n   </ion-tabs>` \n}) \n```", "```js\nconsole.log(\"string text line 1\\n\"+ \n\"string text line 2\"); \n```", "```js\nconsole.log(`string text line 1 \nstring text line 2`); \n```", "```js\nexport class TabsPage { \n  tab1Root: any = HomePage; \n  tab2Root: any = AboutPage; \n  tab3Root: any = ContactPage; \n\n  constructor() { \n  } \n} \n```", "```js\n<ion-tabs> \n    <ion-tab><ion-tab> \n</ion-tabs> \n```", "```js\n<ion-content padding> \n  <h2>Welcome to Ionic 2 Tabs!</h2> \n  <p> \n    This starter project comes with simple tabs-based layout for \n     apps that are going to primarily use a Tabbed UI. \n  </p> \n</ion-content> \n```", "```js\n<ion-title>One</ion-title>\n```", "```js\nimport { Component } from '@angular/core'; \nimport { NavController } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-about', \n  templateUrl: 'about.html' \n}) \nexport class AboutPage { \n\n  constructor(public navCtrl: NavController) { \n\n  } \n\n  ionViewWillEnter() { \n    console.log('Enter Page 2'); \n  } \n} \n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Three\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-slides #mySlider index=0 (ionSlideDidChange)=\"onSlideChanged($event)\">\n    <ion-slide style=\"background-color: green\">\n      <h2>Slide 1</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: blue\">\n      <h2>Slide 2</h2>\n    </ion-slide>\n\n    <ion-slide style=\"background-color: red\">\n      <h2>Slide 3</h2>\n    </ion-slide>\n\n </ion-slides>\n</ion-content>\n```", "```js\n$ ionic start LeftRightMenu sidemenu\n$ cd LeftRightMenu\n```", "```js\nimport { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n  text: string = '';\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n\n  rightMenuClick(text) {\n    this.text = text;\n  } \n}\n```", "```js\n<ion-menu id=\"leftMenu\" [content]=\"content\" side=\"left\" type=\"overlay\">\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Menu</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content>\n    <ion-list>\n      <button menuClose ion-item *ngFor=\"let p of pages\" \n       (click)=\"openPage(p)\">\n        {{p.title}}\n      </button>\n    </ion-list>\n  </ion-content>\n\n</ion-menu>\n\n<ion-menu id=\"rightMenu\" [content]=\"content\" side=\"right\" type=\"reveal\">\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Items</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content>\n   <ion-list>\n    <button ion-item (click)=\"rightMenuClick('Item One')\">\n      Item One\n    </button>\n\n    <button ion-item (click)=\"rightMenuClick('Item Two')\"> \n      Item Two \n    </button>\n\n   </ion-list>\n\n   <ion-card *ngIf=\"text\">\n    <ion-card-content>\n      You just clicked {{ text }}\n    </ion-card-content>\n   </ion-card>\n  </ion-content>\n\n</ion-menu>\n\n<!-- Disable swipe-to-go-back because it's poor UX to combine STGB with side menus -->\n<ion-nav [root]=\"rootPage\" #content swipeBackEnabled=\"false\"></ion-nav>\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>Getting Started</ion-title>\n    <ion-buttons left>\n      <button ion-button menuToggle=\"leftMenu\">\n        <ion-icon name=\"menu\"></ion-icon>\n      </button>\n    </ion-buttons>\n\n    <ion-buttons right>\n      <button ion-button menuToggle=\"rightMenu\">\n        <ion-icon name=\"menu\"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding class=\"getting-started\">\n  <h3>Welcome to the Menu Experiment</h3>\n  <p>\n    You can open both left and right menu using below buttons or top \n    navigation bar!\n  </p>\n  <ion-row>\n    <ion-col width-50>\n      <button ion-button primary block menuToggle=\"leftMenu\">Toggle Left</button>\n    </ion-col>\n    <ion-col width-50>\n      <button ion-button primary block menuToggle=\"rightMenu\">Toggle Right</button>\n    </ion-col>\n  </ion-row>\n</ion-content>\n```", "```js\npage-home {\n    .getting-started {\n        p {\n            margin: 20px 0;\n            line-height: 22px;\n            font-size: 16px;\n        }\n    }\n    .bar-button-menutoggle {\n        display: inline-flex;\n    }\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle>\n      <ion-icon name=\"menu\"></ion-icon>\n    </button>\n    <ion-title>List</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <button ion-item *ngFor=\"let item of items\" (click)=\"itemTapped($event, item)\">\n      <ion-icon [name]=\"item.icon\" item-left></ion-icon>\n      {{item.title}}\n      <div class=\"item-note\" item-right>\n        {{item.note}}\n      </div>\n    </button>\n  </ion-list>\n  <div *ngIf=\"selectedItem\" padding>\n    You navigated here from <b>{{selectedItem.title}}</b>\n  </div>\n</ion-content>\n```", "```js\n$ ionic serve\n```", "```js\nside=\"left\" type=\"overlay\" \n```", "```js\nside=\"right\" type=\"reveal\" \n```", "```js\n<ion-nav id=\"nav\" [root]=\"rootPage\" #content swipeBackEnabled=\"false\"></ion-nav> \n```", "```js\n    <ion-list> \n      <button menuClose ion-item *ngFor=\"let p of pages\" \n       (click)=\"openPage(p)\"> \n        {{p.title}} \n      </button> \n    </ion-list>\n```", "```js\n    <ion-card *ngIf=\"text\"> \n      <ion-card-content> \n        You just clicked {{ text }} \n      </ion-card-content> \n    </ion-card> \n```", "```js\n<ion-header> \n  <ion-navbar> \n    <ion-title>Getting Started</ion-title> \n\n    <ion-buttons start> \n      <button ion-button menuToggle=\"leftMenu\"> \n        <ion-icon name=\"menu\"></ion-icon> \n      </button> \n    </ion-buttons>  \n\n    <ion-buttons end> \n      <button ion-button menuToggle=\"rightMenu\"> \n        <ion-icon name=\"menu\"></ion-icon> \n      </button>  \n    </ion-buttons>  \n  </ion-navbar> \n</ion-header> \n```", "```js\n  <ion-row> \n    <ion-col width-50> \n      <button primary block menuToggle=\"leftMenu\">Toggle \n       Left</button> \n    </ion-col> \n    <ion-col width-50> \n      <button primary block menuToggle=\"rightMenu\">Toggle \n       Right</button> \n    </ion-col> \n  </ion-row>\n```", "```js\n$ ionic start Navigation blank\n$ cd Navigation\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { OtherPage } from '../pages/otherPage/otherPage';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    OtherPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    OtherPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>\n      Home\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card>\n    <ion-card-header>\n      NavPush 1\n    </ion-card-header>\n    <ion-card-content>\n      <p>Use both <code>navPush</code> and \n      <code>navParams</code></p>\n        <button ion-button block [navPush]=\"otherPage\" \n        [navParams]=\"myString\">\n          OtherPage 1\n        </button>\n    </ion-card-content>\n  </ion-card>\n\n <ion-card>\n  <ion-card-header>\n  NavPush 2\n  </ion-card-header>\n   <ion-card-content>\n    <p>Use only <code>navPush</code> and pass an array instead</p>\n      <ion-list>\n        <ion-item>\n          <ion-label floating>Name</ion-label>\n          Adding Ionic 2 Components 58\n          <ion-input type=\"text\" [(ngModel)]=\"myJSON.text\"></ion-\n          input>\n        </ion-item>\n      </ion-list>\n      <div>\n        <button ion-button block color=\"secondary\" \n        [navPush]=\"otherPage\" \n        [navParams]=\"myJSON\">OtherPage 2</button>\n      </div>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card>\n    <ion-card-header>\n      NavPush 3\n    </ion-card-header>\n    <ion-card-content>\n      <p>Use click event to trigger <code>nav.push</code> in \n      Javascript </p>\n      <button ion-button block color=\"dark\" \n      (click)=\"gotoOtherPage()\">OtherPage 3</button>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { OtherPage } from '../otherPage/otherPage';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public myString: string = 'Example 1 - This is just a string';\n  public myJSON: any = {text: ''};\n  otherPage: any = OtherPage;\n  constructor(public navCtrl: NavController) {\n\n  }\n\n  gotoOtherPage() {\n    this.navCtrl.push(OtherPage, {text: 'Example 3 - This is an object'});\n  }\n\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>Other</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n <ion-card *ngIf=\"navParams.data\">\n    <ion-card-header>\n      navParams.data\n    </ion-card-header>\n    <ion-card-content>\n    {{ navParams.data | json }}\n    </ion-card-content>\n </ion-card>\n\n <button ion-button block (click)=\"goBack()\">\n    goBack()\n </button>\n\n <button ion-button block navPop>\n    nav-pop\n </button>\n</ion-content>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-other',\n  templateUrl: 'otherPage.html',\n})\nexport class OtherPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad OtherPage');\n  }\n  goBack() {\n    this.navCtrl.pop();\n  }\n}\n```", "```js\n$ ionic serve\n```", "```js\nimport { NavController, NavParams } from 'ionic-angular';\n```", "```js\n  public myString: string = 'Example 1 - This is just a string'; \n  public myJSON: any = {text: ''}; \n  otherPage: any = OtherPage; \n\n  constructor(public navCtrl: NavController) { \n  } \n```", "```js\n  gotoOtherPage() { \n    this.navCtrl.push(OtherPage, {text: 'Example 3 - This is an \n     object'}); \n  } \n```", "```js\n<button block [navPush]=\"otherPage\" \n [navParams]=\"myString\">OtherPage 1</button>\n```", "```js\n<button ion-button block color=\"secondary\" \n [navPush]=\"otherPage\" [navParams]=\"myJSON\">OtherPage \n 2</button>\n```", "```js\n<button block dark (click)=\"gotoOtherPage()\">OtherPage 3</button> \n```", "```js\nconstructor(public navCtrl: NavController, public params: NavParams) { \n} \n```", "```js\n<ion-header>\n  <ion-navbar>\n    <ion-title>Other</ion-title>\n  </ion-navbar>\n</ion-header>\n```", "```js\n  <ion-card *ngIf=\"params.data\"> \n    <ion-card-header> \n      params.data \n    </ion-card-header> \n    <ion-card-content> \n      {{ params.data | json }} \n    </ion-card-content> \n  </ion-card>\n```", "```js\n  <button block (click)=\"goBack()\"> \n    goBack() \n  </button> \n```", "```js\n  <button block navPop> \n    nav-pop \n  </button> \n```", "```js\n$ ionic start MenuTabsSegment tabs\n$ cd MenuTabsSegment \n```", "```js\n<ion-menu [content]=\"content\">\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Menu</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content>\n    <ion-list>\n      <button ion-item menuToggle>\n        Close Menu\n      </button>\n    </ion-list>\n  </ion-content>\n</ion-menu>\n\n<ion-nav #content [root]=\"rootPage\"></ion-nav>\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n  seg:string = \"flame\";\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n```", "```js\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle icon-only>\n      <ion-icon name='menu'></ion-icon>\n    </button>\n    <ion-title>\n      About\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-segment [(ngModel)]=\"seg\" color=\"danger\">\n      <ion-segment-button value=\"flame\">\n        <ion-icon name=\"flame\"></ion-icon>\n      </ion-segment-button>\n      <ion-segment-button value=\"leaf\">\n        <ion-icon name=\"leaf\"></ion-icon>\n      </ion-segment-button>\n  </ion-segment>\n\n  <div *ngIf=\"seg === 'flame'\">\n    <ion-card>\n      <ion-card-header>\n        Flame\n      </ion-card-header>\n      <ion-card-content>\n        A flame (from Latin flamma) is the visible, gaseous part of \n        a fire. It is caused by a highly exothermic reaction taking place in \n        a thin zone.\n      </ion-card-content>\n    </ion-card>\n  </div>\n\n  <div *ngIf=\"seg === 'leaf'\">\n     <ion-card>\n      <ion-card-header>\n        Leaf\n      </ion-card-header>\n      <ion-card-content>\n        A leaf is an organ of a vascular plant and is the principal \n        lateral appendage of the stem.\n      </ion-card-content>\n    </ion-card>\n  </div>\n</ion-content>\n```", "```js\n<ion-menu [content]=\"content\">\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Menu</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content>\n    <ion-list>\n      <button ion-item menuToggle>\n        Close Menu\n      </button>\n    </ion-list>\n  </ion-content>\n</ion-menu>\n\n<ion-nav #content [root]=\"rootPage\"></ion-nav>\n```", "```js\nrootPage:any = TabsPage;\n```", "```js\n<ion-segment [(ngModel)]=\"seg\" color=\"danger\">\n      <ion-segment-button value=\"flame\">\n        <ion-icon name=\"flame\"></ion-icon>\n      </ion-segment-button>\n      <ion-segment-button value=\"leaf\">\n        <ion-icon name=\"leaf\"></ion-icon>\n      </ion-segment-button>\n  </ion-segment>\n```", "```js\n<div *ngIf=\"seg === 'flame'\">\n    <ion-card>\n      <ion-card-header>\n        Flame\n      </ion-card-header>\n      <ion-card-content>\n        A flame (from Latin flamma) is the visible, gaseous part of a \n       fire. \n        It is caused by a highly exothermic reaction taking place in a     \n       thin zone.\n      </ion-card-content>\n    </ion-card>\n  </div>\n\n  <div *ngIf=\"seg === 'leaf'\">\n     <ion-card>\n      <ion-card-header>\n        Leaf\n      </ion-card-header>\n      <ion-card-content>\n        A leaf is an organ of a vascular plant and is the principal\n        lateral appendage of the stem.\n      </ion-card-content>\n    </ion-card>\n  </div>\n```", "```js\nseg:string = \"flame\";\n```", "```js\n$ ionic start IonicGrid blank \n$ cd IonicGrid\n```", "```js\nimport { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  socialFeed:Array<any>;\n  constructor(public navCtrl: NavController) {\n    this.socialFeed = [\n      { post: 'Building Complex Mobile App Layout using Ionic Grid. You can \n       nest ion-row inside ion-col and so. It is really awesome.'},\n      { post: 'Web components are really great web technology to create \n      reusable web components which are standard compliant.'},\n      { post: 'Nothing is in my mind. I am just writing to make sure there \n      are at least 3 rows in feed'}\n    ]\n  }\n\n}\n```", "```js\n<ion-header>\n  <ion-navbar color=\"danger\">\n    <ion-title>\n      Jon Doe\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n <ion-grid>\n   <ion-row text-center id=\"info-row\">\n     <ion-col>\n       <ion-avatar>\n         <img src=\"img/avatar.png\">\n       </ion-avatar>\n       <h3>Based in</h3>\n       <h4>Vienna, Austria</h4>\n     </ion-col>\n   </ion-row>\n\n   <ion-row text-center id=\"contact-icons\">\n     <ion-col><ion-icon name=\"call\" color=\"danger\"></ion-icon>\n</ion-col><ion-col><ion-icon name=\"text\" color=\"danger\"></ion-icon>\n</ion-col><ion-col><ion-icon name=\"globe\" color=\"danger\"></ion-icon>\n</ion-col><ion-col><ion-icon name=\"more\" color=\"danger\"></ion-icon>\n</ion-col></ion-row>\n\n   <h2 text-center><ion-icon name=\"paper\" color=\"danger\"></ion-icon>  \n   Social Feed</h2>\n   <ion-row class=\"social-row\" *ngFor=\"let feed of socialFeed\">\n     <ion-col col-2>\n      <ion-avatar>\n         <img src=\"img/avatar.png\">\n      </ion-avatar>\n     </ion-col>\n\n     <ion-col col-10>\n      <ion-row>\n        <ion-col><h3>Jon Doe @jondoe</h3></ion-col>\n      </ion-row>\n\n      <ion-row>\n        <p>{{feed.post}}</p>\n      </ion-row>\n\n      <ion-row text-center class=\"social-interaction-row\">\n        <ion-col><ion-icon name=\"undo\" color=\"danger\"></ion-icon>\n      </ion-col>\n        <ion-col><ion-icon name=\"repeat\" color=\"danger\"></ion-icon>\n      </ion-col>\n        <ion-col><ion-icon name=\"heart\" color=\"danger\"></ion-icon>\n      </ion-col>\n      </ion-row>\n\n     </ion-col>\n   </ion-row>\n </ion-grid>\n</ion-content>\n```", "```js\npage-home {\n    #info-row {\n        ion-col {\n            ion-avatar img{\n                margin: 0 auto;\n                border-radius:50%;\n            }\n        }\n    }\n    #contact-icons {\n        ion-icon {\n            font-size:40px;\n        }\n    }\n\n    .social-row {\n        ion-avatar {\n            margin-top: 0.8rem;\n        }\n        p {\n            font-size:1.6rem;\n        }\n        .social-interaction-row {\n            font-size: 20px;\n        }\n    }\n}\n```", "```js\n <ion-row text-center id=\"info-row\">\n     <ion-col>\n       <ion-avatar>\n         <img src=\"img/avatar.png\">\n       </ion-avatar>\n       <h3>Based in</h3>\n       <h4>Vienna, Austria</h4>\n     </ion-col>\n </ion-row>\n```", "```js\n <ion-row text-center id=\"contact-icons\">\n     <ion-col><ion-icon name=\"call\" color=\"danger\"></ion-icon></ion-\n     col><ion-col><ion-icon name=\"text\" color=\"danger\"></ion-icon></ion-\n     col><ion-col><ion-icon name=\"globe\" color=\"danger\"></ion-icon></ion-\n     col><ion-col><ion-icon name=\"more\" color=\"danger\"></ion-icon></ion-\n     col></ion-row>\n```", "```js\n<ion-row class=\"social-row\" *ngFor=\"let feed of socialFeed\">\n     <ion-col col-2>\n      <ion-avatar>\n         <img src=\"img/avatar.png\">\n      </ion-avatar>\n     </ion-col>\n\n     <ion-col col-10>\n      <ion-row>\n        <ion-col><h3>Jon Doe @jondoe</h3></ion-col>\n      </ion-row>\n\n      <ion-row>\n        <p>{{feed.post}}</p>\n      </ion-row>\n\n      <ion-row text-center class=\"social-interaction-row\">\n        <ion-col><ion-icon name=\"undo\" color=\"danger\"></ion-icon></ion-\n      col>\n        <ion-col><ion-icon name=\"repeat\" color=\"danger\"></ion-icon> \n      </ion-col>\n        <ion-col><ion-icon name=\"heart\" color=\"danger\"></ion-icon>\n      </ion-col>\n      </ion-row>\n\n     </ion-col>\n   </ion-row>\n```"]