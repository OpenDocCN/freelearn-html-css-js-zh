["```js\n<script type=\"text/javascript\"> \nvar body = d3.select(\"body\"),  \nduration = 5000; \n\nbody.append(\"div\") // <-A \n            .classed(\"box\", true) \n            .style(\"background-color\", \"#e9967a\") // <-B \n        .transition() // <-C \n        .duration(duration) // <-D \n            .style(\"background-color\", \"#add8e6\") // <-E \n            .style(\"margin-left\", \"600px\") // <-F \n            .style(\"width\", \"100px\") \n            .style(\"height\", \"100px\"); \n</script> \n\n```", "```js\nbody.append(\"div\") // <-A \n            .classed(\"box\", true) \n            .style(\"background-color\", \"#e9967a\") // <-B \n            .transition() // <-C \n            .duration(duration) // <-D \n\n```", "```js\n.style(\"background-color\", \"#e9967a\") // <-B \n\n```", "```js\n.style(\"background-color\", \"#add8e6\") // <-E \n.style(\"margin-left\", \"600px\") // <-F \n.style(\"width\", \"100px\") \n.style(\"height\", \"100px\"); \n\n```", "```js\n<script type=\"text/javascript\"> \nvar id= 0, \ndata = [], \nduration = 500, \nchartHeight = 100, \nchartWidth = 680; \n\nfor(vari = 0; i< 20; i++) push(data); \n\nfunction render(data) { \n        var selection = d3.select(\"body\") \n                .selectAll(\"div.v-bar\") \n                 .data(data, function(d){return d.id;}); // <-A \n\n        // enter \n        selection.enter() \n                .append(\"div\") \n                .attr(\"class\", \"v-bar\") \n                .style(\"z-index\", \"0\") \n                .style(\"position\", \"fixed\") \n                .style(\"top\", chartHeight + \"px\") \n                 .style(\"left\", function(d, i){ \n                    return barLeft(i+1) + \"px\"; // <-B \n                }) \n                .style(\"height\", \"0px\") // <-C \n                .append(\"span\"); \n\n        // update \n        selection \n             .transition().duration(duration) // <-D \n                .style(\"top\", function (d) { \n                       return chartHeight - barHeight(d) + \"px\"; \n                }) \n                .style(\"left\", function(d, i){ \n                    return barLeft(i) + \"px\"; \n                }) \n                .style(\"height\", function (d) { \n                    return barHeight(d) + \"px\"; \n                }) \n                .select(\"span\") \n                .text(function (d) {return d.value;}); \n\n        // exit \n        selection.exit() \n                .transition().duration(duration) // <-E \n                .style(\"left\", function(d, i){ \n                    return barLeft(-1) + \"px\"; //<-F \n                }) \n                .remove(); // <-G \n    } \n\nfunction push(data) { \n    data.push({ \n        id: ++id, \n        value: Math.round(Math.random() * chartHeight) \n    }); \n} \n\nfunctionbarLeft(i) { \n    return i * (30 + 2); \n} \n\nfunctionbarHeight(d) { \n    returnd.value; \n} \n\nsetInterval(function () { \n               data.shift(); \n               push(data); \n               render(data); \n    }, 2000); \n\nrender(data); \n\nd3.select(\"body\") \n       .append(\"div\") \n           .attr(\"class\", \"baseline\") \n           .style(\"position\", \"fixed\") \n           .style(\"z-index\", \"1\") \n           .style(\"top\", chartHeight + \"px\") \n           .style(\"left\", \"0px\") \n           .style(\"width\", chartWidth + \"px\"); \n</script> \n\n```", "```js\nvar selection = d3.select(\"body\") \n                .selectAll(\"div.v-bar\") \n                .data(data, function(d){return d.id;}); // <-A \n\n```", "```js\n// enter \nselection.enter() \n                .append(\"div\") \n                .attr(\"class\", \"v-bar\") \n                .style(\"z-index\", \"0\") \n                .style(\"position\", \"fixed\") \n                .style(\"top\", chartHeight + \"px\") \n                .style(\"left\", function(d, i){ \nreturnbarLeft(i+1) + \"px\"; // <-B \n                }) \n                .style(\"height\", \"0px\") // <-C \n                .append(\"span\"); \n\n```", "```js\n// update \nselection \n            .transition().duration(duration) // <-D \n                .style(\"top\", function (d) {  \nreturnchartHeight - barHeight(d) + \"px\";  \n                }) \n                .style(\"left\", function(d, i){ \nreturnbarLeft(i) + \"px\"; \n                }) \n                .style(\"height\", function (d) {  \nreturnbarHeight(d) + \"px\";  \n                }) \n                .select(\"span\") \n                    .text(function (d) {return d.value;}); \n\n```", "```js\n// exit \nselection.exit() \n                .transition().duration(duration) // <-E \n                .style(\"left\", function(d, i){ \nreturnbarLeft(-1) + \"px\"; // <-F \n                }) \n                .remove(); // <-G \n\n```", "```js\nleft: barLeft(i) + \"px\" >barLeft(i-1) + \"px\" \n\n```", "```js\n<script type=\"text/javascript\"> \nvar data = [ // <-A \n            {name: 'Linear', fn: d3.easeLinear}, \n            {name: 'Cubic', fn: d3.easeCubic}, \n            {name: 'CubicIn', fn: d3.easeCubicIn}, \n            {name: 'Sin', fn: d3.easeSin}, \n            {name: 'SinIn', fn: d3.easeSinIn}, \n            {name: 'Exp', fn: d3.easeExp}, \n            {name: 'Circle', fn: d3.easeCircle}, \n            {name: 'Back', fn: d3.easeBack}, \n            {name: 'Bounce', fn: d3.easeBounce}, \n            {name: 'Elastic', fn: d3.easeElastic}, \n            {name: 'Custom', fn: function(t){ return t * t; }}// <-B \n    ], \ncolors = d3.scaleOrdinal(d3.schemeCategory20); \n\nd3.select(\"body\").selectAll(\"div\") \n            .data(data) // <-C \n        .enter() \n        .append(\"div\") \n            .attr(\"class\", \"fixed-cell\") \n            .style(\"top\", function (d, i) { \n            returni * 40 + \"px\"; \n            }) \n            .style(\"background-color\", function (d, i) { \n            return colors(i); \n            }) \n            .style(\"color\", \"white\") \n            .style(\"left\", \"500px\") \n            .text(function (d) { \n            return d.name; \n            }); \n\nd3.selectAll(\"div\").each(function(d){ \nd3.select(this) \n      .transition().ease(d.fn) // <-D \n      .duration(1500) \n      .style(\"left\", \"10px\"); \n    }); \n</script> \n\n```", "```js\nvar data = [ // <-A \n            {name: 'Linear', fn: d3.easeLinear}, \n            {name: 'Cubic', fn: d3.easeCubic}, \n            {name: 'CubicIn', fn: d3.easeCubicIn}, \n            {name: 'Sin', fn: d3.easeSin}, \n            {name: 'SinIn', fn: d3.easeSinIn}, \n            {name: 'Exp', fn: d3.easeExp}, \n            {name: 'Circle', fn: d3.easeCircle}, \n            {name: 'Back', fn: d3.easeBack}, \n            {name: 'Bounce', fn: d3.easeBounce}, \n            {name: 'Elastic', fn: d3.easeElastic}, \n            {name: 'Custom', fn: function(t){ return t * t; }}// <-B \n    ], \ncolors = d3.scaleOrdinal(d3.schemeCategory20); \n\n```", "```js\nd3.selectAll(\"div\").each(function(d){ \nd3.select(this) \n      .transition().ease(d.fn) // <-D \n      .duration(1500) \n      .style(\"left\", \"10px\"); \n    }); \n\n```", "```js\nd3.selectAll(\"div\").transition().ease(d.fn) // does not work \n        .duration(1500) \n        .style(\"left\", \"10px\"); \n\n```", "```js\nfunction(t){ // <-B \n    return t * t; \n} \n\n```", "```js\n<script type=\"text/javascript\"> \nvar body = d3.select(\"body\"), duration = 5000; \n\nbody.append(\"div\").append(\"input\") \n        .attr(\"type\", \"button\") \n        .attr(\"class\", \"countdown\") \n        .attr(\"value\", \"0\") \n        .style(\"width\", \"150px\") \n        .transition().duration(duration).ease(d3.easeLinear) \n            .style(\"width\", \"400px\") \n            .attr(\"value\", \"9\"); \n\nbody.append(\"div\").append(\"input\") \n        .attr(\"type\", \"button\") \n        .attr(\"class\", \"countdown\") \n        .attr(\"value\", \"0\") \n        .transition().duration(duration).ease(d3.easeLinear) \n.styleTween(\"width\", widthTween) // <- A \n            .attrTween(\"value\", valueTween); // <- B \n\nfunctionwidthTween(a){ \nvar interpolate = d3.scaleQuantize() \n            .domain([0, 1]) \n            .range([150, 200, 250, 350, 400]); \n\n              return function(t){ \n              return interpolate(t) + \"px\"; \n        }; \n    } \n\nfunctionvalueTween(){ \nvar interpolate = d3.scaleQuantize() // <-C \n            .domain([0, 1]) \n            .range([1, 2, 3, 4, 5, 6, 7, 8, 9]); \n\n             return function(t){ // <-D \n             return interpolate(t); \n        }; \n    }         \n</script> \n\n```", "```js\nbody.append(\"div\").append(\"input\") \n        .attr(\"type\", \"button\") \n        .attr(\"class\", \"countdown\") \n        .attr(\"value\", \"0\") \n        .style(\"width\", \"150px\") \n        .transition().duration(duration).ease(d3.easeLinear) \n            .style(\"width\", \"400px\") \n            .attr(\"value\", \"9\"); \n\n```", "```js\n  .transition().duration(duration).ease(d3.easeLinear) \n            .styleTween(\"width\", widthTween) // <- A \n            .attrTween(\"value\", valueTween); // <- B \n\n```", "```js\nfunctionwidthTween(a){ \nvar interpolate = d3.scaleQuantize() \n            .domain([0, 1]) \n            .range([150, 200, 250, 350, 400]); \n\nreturn function(t){ \nreturn interpolate(t) + \"px\"; \n        }; \n    } \n\nfunctionvalueTween(){ \nvar interpolate = d3.scaleQuantize() // <-C \n            .domain([0, 1]) \n            .range([1, 2, 3, 4, 5, 6, 7, 8, 9]); \n\nreturn function(t){ // <-D \nreturn interpolate(t); \n        }; \n    } \n\n```", "```js\n<script type=\"text/javascript\"> \nvar body = d3.select(\"body\"); \n\nfunction teleport(s){ \ns.transition().duration(1000) // <-A \n            .style(\"width\", \"200px\") \n            .style(\"height\", \"1px\") \n        .transition().duration(500) // <-B \n            .style(\"left\", \"600px\") \n        .transition().duration(1000) // <-C \n            .style(\"left\", \"800px\") \n            .style(\"height\", \"80px\") \n            .style(\"width\", \"80px\"); \n    } \n\nbody.append(\"div\")     \n            .style(\"position\", \"fixed\") \n            .style(\"background-color\", \"steelblue\") \n            .style(\"left\", \"10px\") \n            .style(\"width\", \"80px\") \n            .style(\"height\", \"80px\") \n            .call(teleport); // <-D       \n</script> \n\n```", "```js\nfunction teleport(s){ \ns.transition().duration(1000) // <-A \n        .style(\"width\", \"200px\") \n        .style(\"height\", \"1px\") \n    .transition().duration(500) // <-B \n        .style(\"left\", \"600px\") \n    .transition().duration(1000) // <-C \n        .style(\"left\", \"800px\") \n        .style(\"height\", \"80px\") \n        .style(\"width\", \"80px\"); \n}; \n\n```", "```js\n<script type=\"text/javascript\"> \nvar data = [\"Cat\", \"Dog\", \"Cat\", \"Dog\", \"Cat\", \"Dog\", \"Cat\", \"Dog\"], \nduration = 1500; \n\nd3.select(\"body\").selectAll(\"div\") \n            .data(data) \n        .enter() \n        .append(\"div\") \n            .attr(\"class\", \"fixed-cell\") \n            .style(\"top\", function (d, i) { \n            return i * 40 + \"px\"; \n            }) \n            .style(\"background-color\", \"steelblue\") \n            .style(\"color\", \"white\") \n            .style(\"left\", \"500px\") \n            .text(function (d) { \nreturn d; \n            }) \n            .transition() // <- A \n                .duration(duration) \n                    .style(\"left\", \"10px\") \n            .filter(function(d){return d == \"Cat\";}) // <- B \n                .transition() // <- C \n                .duration(duration) \n                    .style(\"left\", \"500px\"); \n</script> \n\n```", "```js\n.transition() // <- A \n.duration(duration) \n    .style(\"left\", \"10px\") \n.filter(function(d){return d == \"Cat\";}) // <- B \n.transition() // <- C \n.duration(duration) \n    .style(\"left\", \"500px\"); \n\n```", "```js\n<script type=\"text/javascript\"> \nvar body = d3.select(\"body\"), duration = 3000; \n\nvar div = body.append(\"div\") \n            .classed(\"box\", true) \n            .style(\"background-color\", \"steelblue\") \n            .style(\"color\", \"white\") \n.text(\"waiting\") // <-A \n        .transition().duration(duration) // <-B \n                .delay(1000) // <-C \n                .on(\"start\", function(){ // <-D \n                d3.select(this).text(function (d, i) { \n                return \"transitioning\"; \n                    }); \n                }) \n                .on(\"end\", function(){ // <-E \n                d3.select(this).text(function (d, i) { \n                return \"done\"; \n                    }); \n                }) \n            .style(\"margin-left\", \"600px\"); \n</script> \n\n```", "```js\nvar div = body.append(\"div\") \n            .classed(\"box\", true) \n            .style(\"background-color\", \"steelblue\") \n            .style(\"color\", \"white\") \n            .text(\"waiting\") // <-A \n        .transition().duration(duration) // <-B \n                .delay(1000) // <-C \n\n```", "```js\n.on(\"start\", function(){ // <-D \nd3.select(this).text(function (d, i) { \n  return \"transitioning\"; \n    }); \n}) \n\n```", "```js\n.on(\"end\", function(){ // <-E \nd3.select(this).text(function (d, i) { \n  return \"done\"; \n    }); \n}) \n\n```", "```js\n<script type=\"text/javascript\"> \nvar body = d3.select(\"body\"); \n\nvar countdown = body.append(\"div\").append(\"input\"); \n\ncountdown.attr(\"type\", \"button\") \n        .attr(\"class\", \"countdown\") \n        .attr(\"value\", \"0\"); \n\nfunctioncountUp(target){ // <-A \n  var t = d3.timer(function(){ // <-B \n  var value = countdown.attr(\"value\"); \n    if( value == target ) { \n       t.stop(); \n          return true; \n}  // <-C \ncountdown.attr(\"value\", ++value); // <-D             \n        }); \n    } \n\nfunction reset(){ \n  countdown.attr(\"value\", 0); \n} \n</script> \n\n<div class=\"control-group\"> \n<button onclick=\"countUp(100)\"> \n        Start \n</button> \n<button onclick=\"reset()\"> \n        Clear \n</button> \n</div> \n\n```", "```js\nfunctioncountUp(target){ // <-A \n    var t = d3.timer(function(){ // <-B \n        var value = countdown.attr(\"value\"); \n        if( value == target ) { \n            t.stop(); \n            return true; \n        }  // <-C \n        countdown.attr(\"value\", ++value); // <-D             \n    }); \n} \n\n```"]