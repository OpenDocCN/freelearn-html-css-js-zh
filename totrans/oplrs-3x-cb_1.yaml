- en: Chapter 1. Web Mapping Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter we cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Creating a simple full screen map
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different ways to include OpenLayers
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding base and non-base layers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoiding the need of a base layer
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Playing with the map's options
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing map's stack layers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing map's controls
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moving around the map view
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricting the map extent
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every history has a beginning, in the same way every recipe starts with the
    initial condiments.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: This chapter shows us the basics and more important things that we need to know
    when we start creating our first web mapping applications with OpenLayers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: As we will see in this chapter and the following chapters, OpenLayers is a big
    and complex framework but, at the same time it is also very powerful and flexible.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to other libraries, such as the nice but much more simple Leaflet
    project ([http://leaflet.cloudmade.com](http://leaflet.cloudmade.com)) library,
    OpenLayers tries to implement all the required things a developer could need to
    create a web GIS application. That is, not only GIS related concepts such as map,
    layer, or standard formats but also manipulation of document elements or helper
    functions to make asynchronous requests.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Trivializing, we have described a big picture of the framework in the next paragraph.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'The main concept in OpenLayers is the map. It represents the view where information
    is rendered. The map can contain any number of layers, which can be the raster
    or vector layer. On its way, each layer has a data source that serves data with
    its own format: a PNG image, a KML file, and so on. In addition, the map can contain
    controls, which help to interact with the map and its contents: pan, zoom, feature
    selection, and so on.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started with learning OpenLayers by examples.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Creating a simple full screen map
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you work in mapping applications, the first and important task is the creation
    of the map itself. The map is the core of your application and it is where you
    will add and visualize data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: This recipe will guide you through the process of creating our first and very
    simple web map application.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is supposed that a web server is configured and ready. Remember our recipes
    are nothing more than HTML, CSS, and JavaScript code and because of this we need
    a web server that serves them to be interpreted on the browser's side.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Programming with OpenLayers is mainly related to writing HTML code and, of course,
    JavaScript code. So, we simply need a text editor to start coding our recipes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: There exist plenty of great text editors, many of them with web programming
    capabilities. Because we are going to start exploring an open source project such
    as OpenLayers we will refer to a couple of great open projects.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: For Windows users, Notepad++ ([http://notepad-plus-plus.org](http://notepad-plus-plus.org))
    is a great alternative to the default text editor. It is simple and quick, offers
    syntax highlighting, and addition of plugins to extend capabilities.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, instead of text editors you can find complete development
    frameworks with support for web development, not only with syntax highlighting
    but with autocomplete, code navigation, and many more.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，你不仅可以找到支持网页开发的完整开发框架，而且这些框架不仅提供语法高亮，还提供自动完成、代码导航等功能，而不是仅仅使用文本编辑器。
- en: 'In this group, two projects are the stars within the open source projects universe:
    Eclipse ([http://www.eclipse.org](http://www.eclipse.org)) and NetBeans ([http://netbeans.org](http://netbeans.org)).
    Both are Java-based projects and run on any platform.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个组中，有两个项目在开源项目宇宙中是明星：Eclipse ([http://www.eclipse.org](http://www.eclipse.org))
    和 NetBeans ([http://netbeans.org](http://netbeans.org))。这两个项目都是基于Java的，并且可以在任何平台上运行。
- en: You can find the source code at `recipe/ch01/ch01_simple_map_book.html` file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`recipe/ch01/ch01_simple_map_book.html`文件中找到源代码。
- en: How to do it...
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Let''s start by creating a new empty `index.html` file and inserting the following
    block of code in it. We will explain it step-by-step in the next section:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们先创建一个新的空`index.html`文件，并在其中插入以下代码块。我们将在下一节中一步一步地解释它：
- en: '[PRE0]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以从你购买的所有Packt书籍的账户中下载示例代码文件。[http://www.packtpub.com](http://www.packtpub.com)。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给你。
- en: 'Open the file in your browser and see the result. You will see a whole screen
    map with some controls on the top-left corner, as shown in the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的浏览器中打开文件，查看结果。你将看到一个全屏地图，在左上角有一些控件，如下面的截图所示：
- en: '![How to do it...](img/7843_01_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![如何做到这一点...](img/7843_01_01.jpg)'
- en: How it works...
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Let us explain the mystery step-by-step. First, we created a HTML5 document,
    see the `doctype` declaration code`<!DOCTYPE html>`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步地解释这个神秘步骤。首先，我们创建了一个HTML5文档，查看`doctype`声明代码`<!DOCTYPE html>`。
- en: 'In the `head` section, we have included a reference to the OpenLayers library
    using a `script` element, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在`head`部分，我们通过`script`元素包含了对OpenLayers库的引用，如下所示：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We have added a `style` element to force the document to occupy the whole page,
    as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了一个`style`元素来强制文档占据整个页面，如下所示：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After the `style` element comes the `script` element with some JavaScript code,
    but we will explain it at the end.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在`style`元素之后是带有一些JavaScript代码的`script`元素，但我们将它在最后进行解释。
- en: 'After the `head` section starts the `body` section. Our `body` has an `onload`
    event associated to it. This means, once the whole content of the `body` section
    is completely loaded by the browser, the `init()` function will be called:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在`head`部分开始后，`body`部分开始。我们的`body`与一个`onload`事件相关联。这意味着，一旦浏览器完全加载了`body`部分的所有内容，`init()`函数将被调用：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Finally, within the body we have put a `div` element with the identifier `rcp1_map`,
    which will be used by OpenLayers to render the map.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`body`中，我们放置了一个具有标识符`rcp1_map`的`div`元素，OpenLayers将使用它来渲染地图。
- en: 'Again, we force the element to fill the entire parent''s space:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们强制元素填充整个父元素的空间：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**A word about styles...**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于样式的说明...**'
- en: Setting the `div` element `width/height` to `100%` means it will fill 100 percent
    of the parent's space. In this case, the parent is the `body` element, which is
    also set to fill 100 percent of the page space. More and better information about
    CSS can be found at [http://www.w3schools.com/css](http://www.w3schools.com/css).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将`div`元素的`width/height`设置为`100%`意味着它将填充父元素的100%空间。在这种情况下，父元素是`body`元素，它也被设置为填充100%的页面空间。更多和更好的关于CSS的信息可以在[http://www.w3schools.com/css](http://www.w3schools.com/css)找到。
- en: Now, let's take a look at the `script` element in the `head` section.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看`head`部分中的`script`元素。
- en: As we have mentioned previously, using the `onload` event we ensure the `init`
    function is executed once the entire `body` elements are loaded by the browser,
    which means we can access`<div id="rcp1_map" ...>` without any problem.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前提到的，使用`onload`事件，我们确保在浏览器加载完整个`body`元素后执行`init`函数，这意味着我们可以无任何问题地访问`<div
    id="rcp1_map" ...>`。
- en: 'First we created an `OpenLayers.Map` object that will be rendered in the previously
    mentioned `div` element. This is achieved by passing the `DOM` element identifier
    in the constructor:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建了一个`OpenLayers.Map`对象，它将在之前提到的`div`元素中渲染。这是通过在构造函数中传递`DOM`元素标识符来实现的：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we created a new raster layer that will show imagery from the `OpenStreetMaps`
    project:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们创建了一个新的栅格图层，它将显示来自`OpenStreetMaps`项目的图像：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once created we add it to the map:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建，我们就将其添加到地图中：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, set the `map` view to the maximum valid extent:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将地图视图设置为最大有效范围：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: There's more...
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Remember there is no one way to do things.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，做事情没有唯一的方法。
- en: The recipes in this book have not been coded as standalone applications. Instead,
    to improve the user experience, we have created a rich application that allows
    you to choose and run the desired recipe, with the possibility to see the source
    code.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的配方并没有作为独立应用程序编写。相反，为了提高用户体验，我们创建了一个丰富的应用程序，允许你选择并运行所需的配方，同时还有查看源代码的可能性。
- en: '![There''s more...](img/7843_01_09.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/7843_01_09.jpg)'
- en: So the way to code the recipes in the book is slightly different, because they
    must be integrated with the application's design. For example, they do not require
    including the OpenLayers libraries because this is included in another place of
    the main application.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，书中编写配方的方法略有不同，因为它们必须与应用程序的设计集成。例如，它们不需要包含OpenLayers库，因为这在主应用程序的另一个地方已经包含了。
- en: In addition, the way presented in the *How to do it..*. section is more oriented
    toward standalone applications.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，*如何做*部分中介绍的方法更倾向于独立应用程序。
- en: 'If you are looking at the source code of this recipe, located at `recipes/ch01/ch01_simple_map.html`,
    we will see a slightly different code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在查看这个配方的源代码，位于`recipes/ch01/ch01_simple_map.html`，我们会看到略微不同的代码：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As we can see, it contains the main parts described in the previous sections.
    We have a `div` element to hold the map instance and a `script` element with all
    the required JavaScript code.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，它包含了前几节中描述的主要部分。我们有一个`div`元素来包含地图实例，以及一个包含所有必需JavaScript代码的`script`元素。
- en: 'To create the rich application, we have to use the Dojo Toolkit framework ([http://dojotoolkit.org](http://dojotoolkit.org)),
    which offers almost any kind of required feature: access and modification of the
    document object structure, event handling, internationalization, and so on. But
    the main reason we have chosen it is because, in addition it offers a great set
    of homogeneous widgets (tabs, buttons, lists, and so on) to create applications
    with a great look and feel.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建丰富的应用程序，我们必须使用Dojo Toolkit框架([http://dojotoolkit.org](http://dojotoolkit.org))，它提供了几乎任何所需的功能：访问和修改文档对象结构、事件处理、国际化等等。但我们选择它的主要原因是因为，除了提供一套优秀的同质化小部件（标签页、按钮、列表等等）来创建外观和感觉都很好的应用程序之外。
- en: It is beyond the scope of this book to teach Dojo but its use is so easy and
    specific that it will not disturb the objective of this recipe, which is to teach
    OpenLayers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 教授Dojo超出了本书的范围，但它的使用非常简单和具体，不会干扰本配方的目标，即教授OpenLayers。
- en: See also
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Different ways to include OpenLayers* recipe
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*包含OpenLayers的不同方法*配方'
- en: The *Understanding base and non-base layers* recipe
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解基本层和非基本层*配方'
- en: Different ways to include OpenLayers
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包含OpenLayers的不同方法
- en: There are different ways we can include OpenLayers in our projects depending
    on the environment we are working in, that is development or production.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们工作的环境，即开发或生产，我们可以以不同的方式将OpenLayers包含到我们的项目中。
- en: The environment refers to the server tier required for a stage in our process.
    In this way, the development environment is related to the development process,
    where programmers are working day to day, testing and checking.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 环境指的是我们流程中某个阶段所需的服务器层。这样，开发环境与开发过程相关联，程序员每天在这里工作，进行测试和检查。
- en: Production environment refers to the final stage of the projects. It must run
    on stable servers and without dependency problems.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 生产环境指的是项目的最终阶段。它必须在稳定的服务器上运行，且没有依赖问题。
- en: As we will see shortly, we can summarize the solutions to include OpenLayers
    JavaScript code in two groups, those with code hosted on a remote server or those
    with code hosted on our own server.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们很快将看到的，我们可以将包含OpenLayers JavaScript代码的解决方案总结为两组，一组是在远程服务器上托管代码的，另一组是在我们自己的服务器上托管代码的。
- en: Let's start and see the pros and cons of each solution.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始，看看每种解决方案的优缺点。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a folder called `myProject` that will contain all our project files and
    library dependencies. Then create an `index.html` file and continue with the code
    given in the *Creating a simple full screen map* recipe.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `myProject` 的文件夹，它将包含所有我们的项目文件和库依赖项。然后创建一个 `index.html` 文件，并继续使用 *创建一个简单的全屏地图*
    菜单中给出的代码。
- en: Note
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is supposed that the project folder resides within a folder accessible by
    the web server folder, so it can serve its content.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 假设项目文件夹位于可以被 web 服务器文件夹访问的文件夹中，因此它可以提供其内容。
- en: Now download OpenLayers code from the project's web page at [http://www.openlayers.org](http://www.openlayers.org).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，从项目的网页 [http://www.openlayers.org](http://www.openlayers.org) 下载 OpenLayers
    代码。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing this book, OpenLayers version 2.11 is the stable release,
    which can be found at [http://openlayers.org/download/OpenLayers-2.11.tar.gz](http://openlayers.org/download/OpenLayers-2.11.tar.gz).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，OpenLayers 版本 2.11 是稳定版本，可以在 [http://openlayers.org/download/OpenLayers-2.11.tar.gz](http://openlayers.org/download/OpenLayers-2.11.tar.gz)
    找到。
- en: 'Save the bundle in the `myProject` folder and uncompress it. We need to have
    a folder structure similar to the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 将包保存到 `myProject` 文件夹中，并解压缩它。我们需要有一个类似于以下截图的文件夹结构：
- en: '![Getting ready](img/7843_01_02.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/7843_01_02.jpg)'
- en: How to do it...
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We have three ways to include the OpenLayers library in our code:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有三种方法将 OpenLayers 库包含到我们的代码中：
- en: '`<script type="text/javascript" src="img/OpenLayers.js"> </script>`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<script type="text/javascript" src="img/OpenLayers.js"> </script>`'
- en: '`<script type="text/javascript" src="img/OpenLayers.js"></script>`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<script type="text/javascript" src="img/OpenLayers.js"></script>`'
- en: '`<script type="text/javascript" src="img/OpenLayers.js"></script>`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<script type="text/javascript" src="img/OpenLayers.js"></script>`'
- en: How it works...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The first option includes an all-in-one compressed file hosted at the OpenLayers
    project server. It is simple to use but you cannot work locally in offline mode:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选项包括一个由 OpenLayers 项目服务器托管的全压缩文件。它使用简单，但无法在离线模式下本地工作：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The size of the compressed all-in-one file `OpenLayers.js` is nearly 1 MB, so
    in a production environment with lots of requests it is probably better to host
    this file in a Content Delivery Network or CDN ([http://en.wikipedia.org/wiki/Content_delivery_network](http://en.wikipedia.org/wiki/Content_delivery_network)).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩的全压缩文件 `OpenLayers.js` 的大小接近 1 MB，因此在具有大量请求的生产环境中，可能最好将此文件托管在内容分发网络或 CDN ([http://en.wikipedia.org/wiki/Content_delivery_network](http://en.wikipedia.org/wiki/Content_delivery_network))
    上。
- en: The second option is very similar to the first one, but the all-in-one compressed
    file is attached to the project. This option is suitable for cases in which you
    need OpenLayers to be in your own server with the code of your application.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个选项与第一个选项非常相似，但全压缩文件附加到项目中。此选项适用于需要 OpenLayers 在自己的服务器上，并且与你的应用程序代码一起使用的场景。
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Finally, the third option includes the uncompressed code of the OpenLayers library,
    which in fact includes many other files required by layers, controls, and so on.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第三个选项包括 OpenLayers 库的未压缩代码，实际上它还包括许多其他文件，如图层、控件等所需的文件。
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This option is mainly used by programmers who want to extend OpenLayers and
    need to debug the code.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项主要供想要扩展 OpenLayers 并需要调试代码的程序员使用。
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: I encourage you to work in this mode. Use some tool such as Firebug for Firefox
    web browser or the Chrome browser console and put breakpoints on OpenLayers classes
    to better understand what is happening.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励你在这种模式下工作。使用一些工具，例如 Firefox 网络浏览器的 Firebug 或 Chrome 浏览器控制台，并在 OpenLayers
    类上设置断点，以更好地理解正在发生的事情。
- en: It is worth saying when using this method lots of files are loaded from the
    server, one per class, which means many more server requests are made.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，使用这种方法会从服务器加载很多文件，每个类一个，这意味着会发起更多的服务器请求。
- en: The most notable impact of this is that the page load time is much longer than
    with the previous options.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法最显著的影响是页面加载时间比前几种选项长得多。
- en: There's more...
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you choose to download OpenLayers and include it within your project, you
    don''t need to put the whole uncompressed bundle. As you can see, it contains
    lots of files and folders: source code, building scripts, test code, and other
    tools, but only a few are really required.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择下载 OpenLayers 并将其包含在你的项目中，你不需要放置整个未压缩的包。正如你所见，它包含了很多文件和文件夹：源代码、构建脚本、测试代码和其他工具，但只有少数是真正需要的。
- en: 'In this case, the only things you need to attach are:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你需要附加的只有：
- en: The all-in-one `OpenLayers.js` file
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全压缩的 `OpenLayers.js` 文件
- en: The `theme` and `img` folders
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme`和`img`文件夹'
- en: See also
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Understanding base and non-base layers* recipe
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理解基图层和非基图层**食谱'
- en: The *Creating a simple full screen map* recipe
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建一个简单的全屏地图**食谱'
- en: Understanding base and non-base layers
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解基图层和非基图层
- en: One of the first things you need to have clear when working with OpenLayers
    is the base layer concept.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用OpenLayers时，您需要清楚的第一件事之一就是基图层概念。
- en: A **base layer** is a special kind of layer, which is always visible and determines
    some map properties such as projection and zoom levels.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**基图层**是一种特殊的图层，它始终可见，并确定一些地图属性，如投影和缩放级别。'
- en: A map can have more than one base layer but only one of them can be active at
    a time.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一个地图可以拥有多个基图层，但一次只能有一个处于活动状态。
- en: In addition, if you add more than one flagged base layer to the map, the first
    base layer added will be used as the map's active base layer.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您向地图添加多个标记的基图层，则第一个添加的基图层将被用作地图的当前活动基图层。
- en: This recipe will show you how to add layers to the map flagging them to be base
    layers. We are going to create a page with two maps side-by-side and every map
    will have a layer switcher control that allows you to control the map layers.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将向您展示如何向地图添加图层，并将它们标记为基图层。我们将创建一个包含两个并排地图的页面，每个地图都将有一个图层切换器控件，允许您控制地图图层。
- en: '![Understanding base and non-base layers](img/7843_01_03.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![理解基图层和非基图层](img/7843_01_03.jpg)'
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We assume you have created an `index.html` file and included the OpenLayers
    library as we have seen in the *Different ways to include OpenLayers* recipe.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您已经创建了一个`index.html`文件，并像我们在*不同的方式包含OpenLayers*食谱中看到的那样包含了OpenLayers库。
- en: How to do it...
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Start by creating the necessary HTML code to have both our maps side-by-side:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建必要的HTML代码以使我们的地图并排显示：
- en: '[PRE13]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After this, add a `script` element `(<script type="text/javascript"></script>)`
    with the necessary code to initialize every map. The map on the left will contain
    two layers, one base layer and one non-base layer:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此之后，添加一个`script`元素`(<script type="text/javascript"></script>)`，其中包含初始化每个地图所需的代码。左侧的地图将包含两个图层，一个基图层和一个非基图层：
- en: '[PRE14]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The map on the right will contain two base layers:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右侧的地图将包含两个基图层：
- en: '[PRE15]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Let''s take a look at the explanation for the map on the left. The first thing
    we have done is the creation of an `OpenLayers.Map` instance that will be rendered
    in the `div` element prepared for it, on the left side:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看左侧地图的解释。我们首先做的是创建一个`OpenLayers.Map`实例，它将在为其准备的`div`元素中渲染，位于左侧：
- en: '[PRE16]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Next, we have created two layers and added them to the map. The magic to make
    the second layer a non-base layer comes with the properties specified in the constructor:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们已经创建了两个图层并将它们添加到地图中。将第二个图层变为非基图层的魔法来自于构造函数中指定的属性：
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In OpenLayers, all layer classes are inherited from the base class `OpenLayers.Layer`.
    This class defines some properties common for all layers, such as `opacity` or
    `isBaseLayer`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenLayers中，所有图层类都是从基类`OpenLayers.Layer`继承的。这个类定义了所有图层共有的某些属性，例如`opacity`或`isBaseLayer`。
- en: The Boolean `isBaseLayer` property is used by the map to know if a layer must
    act as a base or non-base layer.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`isBaseLayer`布尔属性被地图用来知道一个图层是否必须作为基图层或非基图层。'
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Non-base layers are also called **overlays**.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 非基图层也称为**叠加图层**。
- en: As you can imagine, the `opacity` property is a float value ranging from 0.0
    to 1.0 and specifies the opacity of the layer. We have set it to `50%` of the
    opacity to allow view through the overlay layer, that is, to be able to see the
    base layer.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所想象，`opacity`属性是一个介于0.0到1.0之间的浮点值，指定了图层的透明度。我们将其设置为`50%`的透明度，以便允许通过叠加图层查看，即能够看到基图层。
- en: For the right-hand map, we have added two layers without any specific property.
    This, by default, makes the WMS layer a base layer.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 对于右侧地图，我们没有添加任何特定属性的图层。默认情况下，这使得WMS图层成为基图层。
- en: If you expand the layer switcher control, you will see that on the left map
    you can show/hide the overlay layer but you can't hide the base layer. In contrast,
    in the right map, both are base layers and they are mutually exclusive, which
    means only one can be active at a time.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您展开图层切换器控件，您会看到在左侧地图中您可以显示/隐藏叠加图层，但无法隐藏基图层。相比之下，在右侧地图中，两者都是基图层，它们是互斥的，这意味着一次只能有一个处于活动状态。
- en: There's more...
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多...
- en: When you play with the layer switcher control, an internal call is made to the
    map's `setBaseLayer(newBaseLayer)` method. This method is responsible for changing
    the active base layer used by the map.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the specify properties at construction time, you can also use
    the setter methods `setOpacity(opacity)` and `setIsBaseLayer(isBaseLayer)` to
    change the values at runtime.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *Avoiding the need of a base layer* recipe
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Managing map's stack layers* recipe
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoiding the need of a base layer
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There can be situations where you don't want a base layer and only want a bunch
    of layers to work on.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Imagine an online GIS editor where users can add and remove layers but they
    are not obligated to have an always visible one.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows how we can easily avoid the requirement of setting a base
    layer within the map.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '![Avoiding the need of a base layer](img/7843_01_04.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As always, create a DOM element to render the map:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now create a new `OpenLayers.Map` instance and set the `allOverlays` property
    to `true:`
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Add two layers to see a result. Also add the layer switcher control:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Center the map view to some nice place:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When the map's property `allOverlays` is set to `true`, the map ignores the
    `isBaseLayer` property of the layers.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: If you expand the layer switcher control, you will see that it contains two
    overlay layers, no base layer, which you can show or hide and, if desired, leave
    a blank map without layers.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: In addition, in this recipe we have used the `map.setCenter()` method, which
    needs a position, an `OpenLayers.LonLat` instance, and a zoom level to work.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When working in the `allOverlays` mode, the lowest layer will act as base layer,
    although all the layers will be flagged as `isBaseLayer` is set to `false.`
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *Understanding base and non-base layers* recipe
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Moving around the map view* recipe
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Restricting the map extent* recipe
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Playing with the map's options
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you create a map to visualize data, there are some important things you
    need to take into account: projection to use, available zoom levels, the default
    tile size to be used by the layer requests, and so on.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Most of these important things are enclosed in the so-called map properties
    and, if you work in the `allOverlays` mode, you need to take them specially into
    account.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows you how to set some of the most common map properties.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before you continue, it is important to note that instances of the `OpenLayers.Map`
    class can be created in three ways:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'Indicating the identifier of the DOM element where the map will be rendered:'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Indicating the identifier of the DOM element and also indicating a set of options:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Only indicating a set of options. This way we can later set the DOM element
    where the map will be rendered:'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How to do it...
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a DOM element to render the map:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Define some map options:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Create the map by passing `options:`
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Add the `MousePosition` control to see the mouse position over the map:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `MousePosition` 控制以查看鼠标在地图上的位置：
- en: '[PRE28]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add a WMS layer and set the map view on some desired place:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 WMS 图层并设置地图视图到某个期望的位置：
- en: '[PRE29]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How it works...
  id: totrans-202
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this case we have used five map options to initialize our `OpenLayers.Map`
    instance.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用了五个地图选项来初始化我们的 `OpenLayers.Map` 实例。
- en: 'We have used the `div` option to pass the identifier of the DOM element where
    the map will be rendered: `div: "ch1_map_options"`.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '我们使用了 `div` 选项来传递将要渲染地图的 DOM 元素的标识符：`div: "ch1_map_options"`。'
- en: Note
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The `OpenLayers.Map` class uses some default values for most of its options:
    `projection="EPSG:4326", units="degrees"`, and so on.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`OpenLayers.Map` 类为其大多数选项使用一些默认值：`projection="EPSG:4326", units="degrees"`
    等。'
- en: 'The `projection` option is used to set the projection used by the map to render
    data from layers: `projection: "EPSG:4326"`. Take into account it must be a string
    with the projection code. On other classes or options it can also be an `OpenLayers.Projection`
    instance.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`projection` 选项用于设置地图用于渲染来自图层的投影：`projection: "EPSG:4326"`。请注意，它必须是一个包含投影代码的字符串。在其他类或选项中，它也可以是一个
    `OpenLayers.Projection` 实例。'
- en: There are some implications with the map's projection. Firstly, the tiles to
    fill WMS layers will be requested using the map's projection, if no other projection
    is explicitly used by the layer. So you need to be sure the WMS server accepts
    the projection. Secondly, data from vector layers will be translated from the
    specific projection of every vector layer to the map's projection, so you will
    need to set the vector layer's projection options while creating them.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 地图的投影有一些影响。首先，填充 WMS 图层的瓦片将使用地图的投影请求，如果没有其他投影被图层明确使用。因此，您需要确保 WMS 服务器接受该投影。其次，矢量图层的数据将从每个矢量图层的特定投影转换为地图的投影，因此您需要在创建它们时设置矢量图层的投影选项。
- en: Note
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For translations other than `EPSG:4326` and `EPSG:900913`, you need to include
    the `Proj4js` project ([http://proj4js.org](http://proj4js.org)) in your web application.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 对于除 `EPSG:4326` 和 `EPSG:900913` 之外的翻译，您需要在您的网络应用程序中包含 `Proj4js` 项目 ([http://proj4js.org](http://proj4js.org))。
- en: Teaching map projections is beyond the scope of this book. A great description
    can be found on Wikipedia ([http://en.wikipedia.org/wiki/Map_projection](http://en.wikipedia.org/wiki/Map_projection)).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 教学地图投影超出了本书的范围。有关详细信息，请参阅维基百科 ([http://en.wikipedia.org/wiki/Map_projection](http://en.wikipedia.org/wiki/Map_projection))。
- en: EPSG codes are a way to name and classify the set of available projections.
    The site Spatial Reference ([http://spatialreference.org](http://spatialreference.org))
    is a great place to find more information about them.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: EPSG 代码是一种命名和分类可用投影集的方法。Spatial Reference ([http://spatialreference.org](http://spatialreference.org))
    网站是查找更多关于它们的好地方。
- en: 'The `units` option specifies that the units used by the map are decimal degrees:
    `units: "dd"`. This option is related to some resolution options.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`units` 选项指定地图使用的单位是十进制度：`units: "dd"`。此选项与某些分辨率选项相关。'
- en: 'The `displayProjection` option allows us to specify the projection that must
    be used to show the mouse position: `displayProjection: new OpenLayers.Projection("EPSG:900913")`.
    In this case, our map is in the `EPSG:4326` projection, also known as `WGS84`,
    with degree units but we show mouse position in `EPSG:900913`, also known as **Spherical
    Mercator**, which is in meter unit coordinates.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`displayProjection` 选项允许我们指定必须用于显示鼠标位置的投影：`displayProjection: new OpenLayers.Projection("EPSG:900913")`。在这种情况下，我们的地图位于
    `EPSG:4326` 投影，也称为 `WGS84`，以度为单位，但我们以 `EPSG:900913` 显示鼠标位置，也称为 **球面墨卡托**，它以米为单位。'
- en: Finally, the `numZoomLevels` sets the number of available zoom levels the user
    can change. A value of `7` means the user can go from *zoom level 0* to *zoom
    level 6*.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`numZoomLevels` 设置用户可以更改的可用缩放级别数量。`7` 的值意味着用户可以从 *缩放级别 0* 切换到 *缩放级别 6*。
- en: There's more...
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 更多...
- en: Imagery from sources such as Google Maps or OpenStreetMap are special cases
    where the pyramid of images is previously created with the Spherical Mercator
    projection - EPSG:900913\. This means you can't set the projection when requesting
    tiles because it is implicit.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Maps 或 OpenStreetMap 等来源的图像是特殊情况，其中图像金字塔之前已使用球面墨卡托投影 - EPSG:900913
    创建。这意味着在请求瓦片时不能设置投影，因为它隐含的。
- en: If you put a layer in a different projection other than the one used by the
    map, it will be automatically disabled.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将图层放置在除地图使用的投影之外的其他投影中，它将被自动禁用。
- en: See also
  id: totrans-219
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参见
- en: The *Understanding base and non-base layers*, recipe
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解基本和非基本图层*，食谱'
- en: The *Managing map's stack layers*, recipe
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Managing map's controls*, recipe
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Working with projections*, recipe in [Chapter 8](ch08.html "Chapter 8. Beyond
    the Basics"), *Beyond the Basics.*
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing map's stack layers
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Map is the core concept in OpenLayers. It allows us to visualize information
    from different kinds of layers and brings us methods to manage layers attached
    to it.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will learn how to control layers. This is important because
    add, remove, or reorder layers are very common operations we need to do on almost
    every web mapping application.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '![Managing map''s stack layers](img/7843_01_05.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
- en: The application will show a map on the left and a control panel on the right,
    with some buttons to control the layers.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember we have used the Dojo toolkit framework ([http://dojotoolkit.org](http://dojotoolkit.org))
    to code a nicer and richer application to show the recipes of this book.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: Because of this, you can see strange attributes in the HTML elements such as
    `dojoType="dijit.form.Button"` or `onClick="topLayer"`. Do not worry about it,
    there is no impact in the OpenLayers code we are covering in this book.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Start by creating an `index.html` file to put the code needed to create the
    application layout. We place it within a table. On the left we put the map:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'And, on the right we put the controls:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create an `OpenLayers.Map` instance working in the `allOverlays` mode:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Add some layers to the map:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Add a layers switcher control (to show the layers) and center the map view:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Finally, add the JavaScript code that will react when the previous four buttons
    were clicked:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: How it works...
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There is not much to say about the HTML code for the layout. We have used a
    table to put the map on the left and the set of buttons on the right. In addition,
    we have associated actions to the buttons that will be executed when they are
    clicked.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: 'With respect to the OpenLayers code, we have created the map instance working
    in the `allOverlays` mode. This will let us move any layer without being worried
    about a base layer:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Later, we created three WMS layers and added them to the map. For some of them
    we have set the `opacity` property to `50%` to see through them:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: It is very important to note that we have used the same name for the option's
    value attribute in the HTML select element as we have used for the layer. Later,
    this will let us select a map's layer by its name.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: Next, we have added an `OpenLayers.Control.LayerSwitcher` control by setting
    its `ascending` property to `false:`
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: You can think of the map as storing layers in a stack and they are rendered
    from bottom to top, so the above layers can hide beneath the below layers depending
    on its opacity and extent.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default the `ascending` property is `true`, and the layer switcher control
    shows the layers of the map in the reverse order, that is, the bottom layer is
    drawn first in the control and the top layer is drawn last. You can avoid this
    by setting `ascending` to `false`.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`ascending`属性为`true`，层切换控件以相反的顺序显示地图的层，即控制中首先绘制底层，最后绘制顶层。你可以通过将`ascending`设置为`false`来避免这种情况。
- en: Finally, the only thing we need to take a look at is the code responsible for
    button actions, which is the most interesting code in this recipe.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要查看的是负责按钮操作的代码，这是这个配方中最有趣的代码。
- en: 'Let''s take a look to the `raiseLayer()` action (which is very similar to `lowerLayer()`
    action):'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`raiseLayer()`操作（它与`lowerLayer()`操作非常相似）：
- en: '[PRE39]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: First, we get the name of the currently selected layer in the select element
    (don't worry if you don't understand that line completely, it is more related
    to the Dojo framework than to OpenLayers).
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在选择元素中获取当前选中层的名称（如果你不完全理解这一行，不要担心，这更多与Dojo框架相关，而不是OpenLayers）。
- en: Then, we use the `map.getLayersByName()` method, which returns an array with
    all the layers that have the specified name. Because of this, we get the first
    element of the array.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用`map.getLayersByName()`方法，它返回一个包含所有具有指定名称的层的数组。因此，我们得到数组的第一个元素。
- en: Now we have a reference to the layer instance. We can raise it in the map using
    the `map.raiseLayer()` method. You can raise it by one or more positions indicating
    a `delta` number or, like in the `lowerLayer()` function, you can lower it by
    one or more positions indicating a negative value.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了层实例的引用。我们可以使用`map.raiseLayer()`方法在地图中提升它。你可以通过指定一个`delta`数字来提升一个或多个位置，或者，就像在`lowerLayer()`函数中一样，你可以通过指定一个负值来降低一个或多个位置。
- en: Internally `OpenLayers.Map` stores layers in an array (the `layers` attribute)
    and they are rendered in the order they are stored in the array (so the first
    element is the bottom layer).
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 内部`OpenLayers.Map`将层存储在数组（`layers`属性）中，并且它们按照在数组中存储的顺序渲染（因此第一个元素是底层）。
- en: The `topLayer()` and `bottomLayer()` actions are similar too, they move the
    specified layer to the top or bottom of the stack. They both work using the `map.setLayerIndex()`
    method, which is responsible to move a layer to a specified position.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`topLayer()`和`bottomLayer()`操作也类似，它们将指定的层移动到堆栈的顶部或底部。它们都使用`map.setLayerIndex()`方法，该方法负责将层移动到指定的位置。'
- en: Note
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The method `map.setLayerIndex()` is used internally by `map.raiseLayer()` to
    move layers.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`map.setLayerIndex()`方法被`map.raiseLayer()`内部用于移动层。'
- en: 'Because the bottom layer corresponds to the first layer in the array of layers,
    the `bottomLayer()` action is the easiest to implement because we simply need
    to move the layer to the first position:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 因为底层对应于层数组中的第一层，所以`bottomLayer()`操作是最容易实现的，因为我们只需要将层移动到第一个位置：
- en: '[PRE40]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: For the `topLayer()` actions, we need to move the layer to the last position.
    To do this, we can get help from the `map.getNumLayers()` method, which returns
    the total number of layers in the map. In this way, if we have four layers in
    the map, the last corresponds to the index `3` (because the index value changes
    from `0` to `3)`.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`topLayer()`操作，我们需要将层移动到最后的位置。为此，我们可以从`map.getNumLayers()`方法获得帮助，它返回地图中层的总数。这样，如果我们有四个层在地图中，最后一个对应于索引`3`（因为索引值从`0`变为`3`）。
- en: '[PRE41]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: There's more...
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `OpenLayers.Map` class has plenty of methods to manipulate the contained
    layers. We have seen a few in these recipes, to add, get layers by name, move
    up or down in the stack, and so on. But you can find more methods to remove layers,
    get layers by their position, and so on.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`OpenLayers.Map`类有许多方法可以操作包含的层。我们在这些配方中看到了一些，例如添加层、通过名称获取层、在堆栈中上下移动等。但你还可以找到更多方法来删除层、通过位置获取层等。'
- en: See also
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参见
- en: The *Managing map's controls* recipe
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*管理地图控件*的配方'
- en: The *Moving around the map view* recipe
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在地图视图中移动*的配方'
- en: The *Restricting the map extent* recipe
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*限制地图范围*的配方'
- en: Managing map's controls
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理地图控件
- en: 'OpenLayers comes with lots of controls to interact with the map: pan, zoom,
    show overview map, edit features, and so on.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: OpenLayers附带了许多与地图交互的控件：平移、缩放、显示概览图、编辑要素等。
- en: In the same way as layers, the `OpenLayers.Map` class has methods to manage
    the controls attached to the map.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 与层类似，`OpenLayers.Map`类有管理附加到地图上的控件的方法。
- en: '![Managing map''s controls](img/7843_01_06.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![管理地图控件](img/7843_01_06.jpg)'
- en: How to do it...
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow the given steps:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 按照给定的步骤进行：
- en: Create a new HTML file and add the OpenLayers dependencies.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的HTML文件并添加OpenLayers依赖项。
- en: 'Now, add the required code to create the buttons and `div` element to hold
    the map instance:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加必要的代码来创建按钮和`div`元素以容纳地图实例：
- en: '[PRE42]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Within the `script` element section, create the map instance:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`script`元素部分，创建地图实例：
- en: '[PRE43]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Add some layers to the map and center the view:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向地图添加一些图层并居中视图：
- en: '[PRE44]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Finally, add the actions code associated to the buttons:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，添加与按钮关联的动作代码：
- en: '[PRE45]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: How it works...
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Every button action function checks if the toggle button is checked or unchecked
    and depending on the value we add or remove the control to the map:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 每个按钮动作函数都会检查切换按钮是否被选中或取消选中，并根据值将控制添加到地图或从地图中删除控制：
- en: '[PRE46]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Adding a control is fairly simple through the `map.addControl()` method, which,
    given a control instance—and, optionally a `OpenLayers.Pixel` instance—adds the
    control to the map at the specified position.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`map.addControl()`方法添加控制相对简单，该方法接受一个控制实例（可选地，一个`OpenLayers.Pixel`实例），并将控制添加到地图的指定位置。
- en: Note
  id: totrans-296
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Usually, a control position is controlled by modifying the `top` and `left`
    values in the CSS class used by the control. If you use a `OpenLayers.Pixel` value
    to position the control, then that value will overwrite the CSS ones.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，控制位置是通过修改控制所使用的CSS类中的`top`和`left`值来控制的。如果你使用一个`OpenLayers.Pixel`值来定位控制，那么该值将覆盖CSS中的值。
- en: To remove a control we need to have a reference to the instance that has to
    be removed. The method `map.getControlsByClass()` returns an array of controls
    of the specified class and helps us to get a reference to the desired control.
    Next, we can remove it with `map.removeControl().`
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除一个控制，我们需要有一个要删除的实例的引用。`map.getControlsByClass()`方法返回一个指定类的控制数组，帮助我们获取所需控制的引用。接下来，我们可以使用`map.removeControl()`方法来删除它。
- en: There's more...
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多...
- en: 'Note, in this recipe we have centered the map''s view passing a `OpenLayers.LonLat`
    instance created in a different way. Instead of using the `new` operator, we have
    used the method `OpenLayers.LonLat.fromString`, which created a new instance from
    a string:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在这个菜谱中，我们通过传递一个以不同方式创建的`OpenLayers.LonLat`实例来居中地图的视图。我们不是使用`new`操作符，而是使用了`OpenLayers.LonLat.fromString`方法，它从一个字符串创建了一个新的实例：
- en: '[PRE47]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'In addition, the map instance created in this recipe has initialized with only
    one control, `OpenLayers.Control.Navigation()`, which allows us to navigate the
    map using the mouse:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在这个菜谱中创建的地图实例仅初始化了一个控制，即`OpenLayers.Control.Navigation()`，这允许我们使用鼠标导航地图：
- en: '[PRE48]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Note
  id: totrans-304
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Passing an empty array to the `controls` property creates a map instance without
    any control associated with it. In addition, without specifying the `controls`
    property, OpenLayers creates a set of default controls for the map, which includes
    the `OpenLayers.Control.Navigation` and `OpenLayers.Control.PanZoom` controls.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 将空数组传递给`controls`属性将创建一个没有任何控制与之关联的地图实例。此外，如果没有指定`controls`属性，OpenLayers将为地图创建一组默认控制，包括`OpenLayers.Control.Navigation`和`OpenLayers.Control.PanZoom`控制。
- en: See also
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参见
- en: The *Managing map's stack layers* recipe
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*管理地图堆叠层*菜谱'
- en: The *Moving around the map view* recipe
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在地图视图中移动*菜谱'
- en: Moving around the map view
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在地图视图中移动
- en: Unless you want to create a completely static map, without the controls required
    for the user to pan or zoom, you would like the user to be able to navigate and
    explore the map.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你想创建一个完全静态的地图，没有用户平移或缩放所需的控制，否则你希望用户能够导航和探索地图。
- en: There can be situations when the controls are not enough. Imagine a web application
    where the user can make a search, such as Everest, and the application must find
    its location and fly to it. In this case, you need to navigate by code and not
    by using a control.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 有可能存在控制不够用的情况。想象一个用户可以搜索如珠穆朗玛峰的Web应用程序，应用程序必须找到其位置并飞到那里。在这种情况下，你需要通过代码导航，而不是使用控制。
- en: This recipe shows you some of the `OpenLayers.Map` class methods that will allow
    you to improve the user's experience.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱展示了`OpenLayers.Map`类的一些方法，这些方法将允许你提高用户体验。
- en: '![Moving around the map view](img/7843_01_07.jpg)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![在地图视图中移动](img/7843_01_07.jpg)'
- en: The application layout contains three main sections. At the top there is a label
    to show the current map center position and zoom level. It is automatically updated
    when the map is moved or the zoom is changed.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 应用布局包含三个主要部分。在顶部有一个标签来显示当前地图中心位置和缩放级别。当地图移动或缩放改变时，它会自动更新。
- en: The map is in the center and there are a bunch of controls on the right to set
    and test the main map methods to interact with the view.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 地图位于中心，右侧有一堆控件来设置和测试与视图交互的主要地图方法。
- en: As you will see, the map has no control attached to it, so the only way to interact
    with it is through the right controls.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，地图上没有附加控件，所以与地图交互的唯一方式是通过右侧的控件。
- en: Note
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We omit the HTML code necessary to create the application layout, so if you
    are interested in the HTML code you can take a look at the source code available
    on the Packt Publishing website.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们省略了创建应用程序布局所需的HTML代码，所以如果你对HTML代码感兴趣，可以查看Packt Publishing网站上的源代码。
- en: How to do it...
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Create an HTML file with OpenLayers dependencies.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含OpenLayers依赖项的HTML文件。
- en: Note
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The HTML code to create the buttons and layout of the previous screenshot is
    extensive and not related to the goal of the book, so here we avoid writing it.
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上一个截图中的按钮和布局的HTML代码非常长，并且与本书的目标无关，所以这里我们避免编写它。
- en: 'Add a `div` element to hold the map instance:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个`div`元素来包含地图实例：
- en: '[PRE49]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Create a map instance. This time we specify a listener for some events that
    will update the center and zoom values of the label on top of the map:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个地图实例。这次我们指定一个监听器，用于更新地图顶部标签的中心点和缩放值的一些事件：
- en: '[PRE50]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Add one layer and center the view:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个图层并定位视图：
- en: '[PRE51]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Insert the code that will be executed by the button actions:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入将由按钮动作执行的代码：
- en: '[PRE52]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: How it works...
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'To update the center and zoom level values at the top, we have instantiated
    the `Map` object with some event listeners attached to it. Actually, the same
    listener function is attached to all three events:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更新顶部中心点和缩放级别值，我们实例化了`Map`对象，并附加了一些事件监听器。实际上，相同的监听器函数附加到了所有三个事件上：
- en: '[PRE53]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Within the `changeListener()` function we use `map.getCenter()`, which returns
    an `OpenLayers.LonLat` object, and `map.getZoom()` to get the current values and
    update the top-left label.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在`changeListener()`函数中，我们使用`map.getCenter()`，它返回一个`OpenLayers.LonLat`对象，以及`map.getZoom()`来获取当前值并更新顶部的左上角标签。
- en: '[PRE54]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: For every button, an action is executed. They are responsible to get the required
    values and invoke a `map` method.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个按钮，都会执行一个动作。它们负责获取所需的值并调用一个`map`方法。
- en: The `map.moveByPx()` method moves the map by a delta value specified in pixels.
    Note, it moves the map; it doesn't pan, so don't expect any effect.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`map.moveByPx()` 方法通过指定像素值移动地图。注意，它移动地图；它不会平移，所以不要期望有任何效果。'
- en: '[PRE55]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The `map.moveTo()` method is similar to the previous one but moves the view
    to a specified position (instead of an increment) and is specified with an `OpenLayers.LonLat`
    instance.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`map.moveTo()`方法与上一个类似，但它将视图移动到指定的位置（而不是增量）并使用`OpenLayers.LonLat`实例指定。'
- en: The `map.setCenter()` method is similar to `map.moveTo()` but it centers the
    view on the specified location.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '`map.setCenter()`方法与`map.moveTo()`类似，但它将视图中心定位在指定的位置。'
- en: Finally, there are two pan-related actions, which make nice smooth movements.
    The `map.pan()` method moves the view with a pan effect specified by a pixel delta.
    The `map.panTo()` method does something similar, it moves the view to a specified
    location.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有两个与平移相关的动作，它们可以产生平滑的移动效果。`map.pan()`方法通过指定像素增量移动视图。`map.panTo()`方法做类似的事情，它将视图移动到指定的位置。
- en: See also
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参见
- en: The *Managing map's stack layers* recipe
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*管理地图的堆叠图层* 菜谱'
- en: The *Restricting the map extent* recipe
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*限制地图范围* 菜谱'
- en: Restricting the map extent
  id: totrans-345
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制地图范围
- en: Often, there are situations where you are interested to show data to the user
    but only for a specific area, which your available data corresponds to (a country,
    a region, a city, and so on).
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 经常会有这样的情况，你希望向用户展示数据，但只限于特定的区域，这些区域与你的可用数据相对应（一个国家、一个地区、一个城市等等）。
- en: In this case, there is no point in allowing the user to explore the whole world,
    so you need to limit the extent the user can navigate.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，允许用户探索整个世界没有意义，因此你需要限制用户可以导航的范围。
- en: In this recipe, we present some ways to limit the area a user can explore.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们介绍了一些限制用户可探索区域的方法。
- en: '![Restricting the map extent](img/7843_01_08.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![限制地图范围](img/7843_01_08.jpg)'
- en: How to do it...
  id: totrans-350
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a map instance. Take a look at the couple of properties used in the
    constructor:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个地图实例。看看构造函数中使用的几个属性：
- en: '[PRE56]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'As always, add some layer to see content and center the view:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 和往常一样，添加一些图层来查看内容并定位视图：
- en: '[PRE57]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Add the functions that will be executed when buttons are clicked:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加当按钮被点击时将执行的函数：
- en: '[PRE58]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: How it works...
  id: totrans-357
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: As you have seen, the map has been instantiated using the two properties `maxExtent`
    and `restrictedExtent`, which are responsible for limiting the area of the map
    we can explore.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，地图是通过使用两个属性`maxExtent`和`restrictedExtent`实例化的，这两个属性负责限制我们可以探索的地图区域。
- en: Although similar, these two properties have different meanings. Setting the
    `maxExtent` property limits the viewport so its center cannot go outside the specified
    bounds. By setting the `restrictedExtent` property the map itself cannot be panned
    beyond the given bounds.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然相似，但这两个属性有不同的含义。设置`maxExtent`属性会限制视口，使其中心不能超出指定的边界。通过设置`restrictedExtent`属性，地图本身不能超出给定的边界。
- en: 'The functions that react when buttons are clicked get the values from the input
    fields and apply the new values through the `map.setOptions()` method:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 当按钮被点击时，响应的函数会从输入字段获取值，并通过`map.setOptions()`方法应用新值：
- en: '[PRE59]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: We can pass the same properties we use when creating a new `OpenLayers.Map`
    instance to the `map.setOptions()` method and it will take care to update them.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将创建新的`OpenLayers.Map`实例时使用的相同属性传递给`map.setOptions()`方法，它将负责更新它们。
- en: There's more...
  id: totrans-363
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Limiting the map extent is not the only way to limit the information we show
    to the user. The layers have also similar properties to filter or limit the information
    they must render.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 限制地图范围并不是限制我们向用户展示信息的唯一方法。图层也有类似的属性来过滤或限制它们必须渲染的信息。
- en: See also
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参见
- en: The *Moving around the map view* recipe
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在地图视图中移动*菜谱'
