- en: Chapter 7. Using JavaScript Libraries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章。使用 JavaScript 库
- en: '*While developing a web application, nearly every developer uses their own
    or another public JavaScript framework or library, because no one wants to do
    all the required script coding again and again. The wheel does not have any time
    to be reinvented!*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在开发一个网络应用程序时，几乎每个开发者都会使用他们自己的或另一个公共 JavaScript 框架或库，因为没有人愿意一遍又一遍地编写所有必需的脚本代码。没有必要重新发明轮子！*'
- en: '*Another pro is, of course, that popular JavaScript frameworks such as Dojo
    Toolkit, jQuery, or ExtJS are already proofed across browsers , making their use
    more attractive.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*另一个优点当然是，像 Dojo Toolkit、jQuery 或 ExtJS 这样的流行 JavaScript 框架已经在浏览器中得到了验证，这使得它们的使用更具吸引力。*'
- en: '*Therefore, we want to easily integrate libraries from other developers or
    use our own existing libraries.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*因此，我们希望能够轻松地集成其他开发者的库或使用我们自己的现有库。*'
- en: 'In this chapter we will cover the requirements for including JavaScript libraries:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍包含 JavaScript 库的要求：
- en: Using jQuery
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 jQuery
- en: Using Dojo Toolkit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Dojo Toolkit
- en: Using ExtJS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ExtJS
- en: Requirements for including a JavaScript library
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包含 JavaScript 库的要求
- en: In order to make Aptana Studio work with the JavaScript library, some requirements
    must be met so that this library can provide information to the Aptana Studio
    Content Assist.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使 Aptana Studio 能够与 JavaScript 库一起工作，必须满足一些要求，以便该库可以向 Aptana Studio 内容辅助提供信息。
- en: 'The library you want to integrate must have either of the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您想要集成的库必须具有以下之一：
- en: A JSCA 1.0 specification file. You can read more about it on [https://wiki.appcelerator.org/display/tis/JSCA+1.0+Specification](https://wiki.appcelerator.org/display/tis/JSCA+1.0+Specification).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 JSCA 1.0 规范文件。您可以在 [https://wiki.appcelerator.org/display/tis/JSCA+1.0+Specification](https://wiki.appcelerator.org/display/tis/JSCA+1.0+Specification)
    上了解更多信息。
- en: Script comments can also be read using the ScriptDoc specifications, as we have
    already described in a previous chapter.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本注释也可以使用 ScriptDoc 规范进行读取，正如我们在前一章中已经描述的。
- en: A **Virtual Studio Documentation** (**VSDoc**) for JavaScript.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个针对 JavaScript 的 **虚拟工作室文档**（**VSDoc**）。
- en: Tip
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Using an Aptana Studio 2.X Code Assist XML file**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 Aptana Studio 2.X 代码辅助 XML 文件**'
- en: You can also use an Aptana Studio 2.X Code Assist XML file. In such a case,
    you just have to rename the file extension to `.sdocml`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用一个 Aptana Studio 2.X 代码辅助 XML 文件。在这种情况下，您只需将文件扩展名重命名为 `.sdocml`。
- en: 'A further requirement is that the project must have one of the following types:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要求是项目必须具有以下类型之一：
- en: Web
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络
- en: PHP
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP
- en: Python
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python
- en: Ruby
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ruby
- en: Rails
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rails
- en: The reason that we need one of these project types is that (as discussed in
    [Chapter 3](ch03.html "Chapter 3. Working with Workspaces and Projects"), *Working
    with Workspaces and Projects*) each one of them is able to access and add different
    features to a project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要这些项目类型中的一个的原因是（如第 3 章[Chapter 3](ch03.html "Chapter 3. Working with Workspaces
    and Projects")中讨论的，*使用工作空间和项目*），它们中的每一个都能够访问并向项目添加不同的功能。
- en: In [Chapter 3](ch03.html "Chapter 3. Working with Workspaces and Projects"),
    *Working with Workspaces and Projects*, you can read about how to create a project
    in one of these types, or how to change the type of project.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 3 章](ch03.html "Chapter 3. Working with Workspaces and Projects")，*使用工作空间和项目*中，您可以了解如何创建这些类型之一的项目，或者如何更改项目的类型。
- en: Using jQuery
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 jQuery
- en: jQuery is one of the most popular JavaScript libraries. jQuery is a free and
    very extensive library that provides many comfortable functions for DOM manipulation
    and navigation.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 是最受欢迎的 JavaScript 库之一。jQuery 是一个免费且非常广泛的库，它提供了许多方便的函数用于 DOM 操作和导航。
- en: As the name suggests, it started as a JavaScript query library and today provides
    a huge number of plugins and even a complete UI package.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名所示，它最初是一个 JavaScript 查询库，如今提供了大量的插件甚至一个完整的 UI 包。
- en: You can get it from the jQuery website at [http://docs.jquery.com/Downloading_jQuery](http://docs.jquery.com/Downloading_jQuery).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 jQuery 网站下载它，链接为 [http://docs.jquery.com/Downloading_jQuery](http://docs.jquery.com/Downloading_jQuery)。
- en: Before we start to integrate jQuery, we can also install the additional jQuery
    bundle. This does not take long and only needs to be installed once. After installation,
    the Content Assist provides us with additional useful jQuery snippets and commands.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始集成 jQuery 之前，我们还可以安装额外的 jQuery 包。这不会花费很长时间，并且只需要安装一次。安装后，内容辅助将为我们提供额外的有用
    jQuery 片段和命令。
- en: Time for action – installing the jQuery bundle
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 安装 jQuery 包
- en: 'To install the jQuery bundle, follow these steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 jQuery 包，请按照以下步骤操作：
- en: In the menu, navigate to **Commands** | **Bundle Development** | **Install Bundle**.![Time
    for action – installing the jQuery bundle](img/8246_07_03.jpg)
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单中，导航到**命令** | **包开发** | **安装包**。![行动时间 – 安装jQuery包](img/8246_07_03.jpg)
- en: Select the **jQuery** entry and click on **OK**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**jQuery**条目并点击**确定**。
- en: Now, Aptana Studio pulls the jQuery ruble from github and integrates it into
    the system.![Time for action – installing the jQuery bundle](img/8246_07_04.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Aptana Studio从github拉取jQuery库并将其集成到系统中。![行动时间 – 安装jQuery包](img/8246_07_04.jpg)
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Cloning the Git Repository failed?**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**克隆Git仓库失败？**'
- en: 'If you receive an error such as **fatal: Unable to look up github.com**, just
    check your DNS setting and make sure that the github domain is correctly resolved.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你收到诸如**致命：无法查找github.com**的错误，请检查你的DNS设置并确保github域名正确解析。
- en: '*What just happened?*'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have just installed the jQuery bundle directly from the Aptana Git Repository.
    Aptana Studio has integrated it automatically into the system so that you receive
    many further jQuery specific Content Assist entries. From now on, you will find
    a **jQuery** entry within the **Commands** menu, which contains the jQuery bundle
    with all their snippets and some commands.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经直接从Aptana Git仓库安装了jQuery包。Aptana Studio已自动将其集成到系统中，以便你收到许多进一步的jQuery特定内容辅助条目。从现在起，你将在**命令**菜单中找到一个**jQuery**条目，其中包含所有片段和一些命令。
- en: '![What just happened?](img/8246_07_05.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_07_05.jpg)'
- en: Now that we have installed the jQuery bundle, we will go on and integrate the
    jQuery library.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了jQuery包，我们将继续集成jQuery库。
- en: Time for action – integrating jQuery
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 集成jQuery
- en: 'In this section, we will see how to integrate jQuery. To do this, refer to
    the following steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何集成jQuery。为此，请参考以下步骤：
- en: Create a new web project named `Using JavaScript Libraries - jQuery`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Using JavaScript Libraries - jQuery`的新Web项目。
- en: Download the jQuery source and save it under `jquery-release-1.7.2-src`.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载jQuery源并将其保存到`jquery-release-1.7.2-src`。
- en: Create a folder named `jquery-vsdoc-*version*` (replace `*version*` with your
    jQuery version), in our case `jquery-vsdoc-1.7.2`.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`jquery-vsdoc-*version*`（将`*version*`替换为你的jQuery版本），在我们的例子中是`jquery-vsdoc-1.7.2`的文件夹。
- en: Now we have to download the relevant VSDoc file. You can download this from
    the website at [http://appendto.com/community/jquery-vsdoc](http://appendto.com/community/jquery-vsdoc).
    Now just select your version and click on the **VSDOC** link, in our case on **jQuery
    1.7.2 VSDOC**, and save the file into the `jquery-vsdoc-1.7.2` directory.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们必须下载相关的VSDoc文件。你可以从[http://appendto.com/community/jquery-vsdoc](http://appendto.com/community/jquery-vsdoc)网站下载此文件。现在只需选择你的版本并点击**VSDOC**链接，在我们的例子中是**jQuery
    1.7.2 VSDOC**，并将文件保存到`jquery-vsdoc-1.7.2`目录中。
- en: Finally, you must drag the VSDOC file into your `Project` folder, otherwise
    the Content Assist will not provide you with the information from the VSDOC file.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你必须将VSDOC文件拖放到你的`项目`文件夹中，否则内容辅助将不会为你提供VSDOC文件中的信息。
- en: Why does Content Assist not work? If Content Assist did not provide any jQuery
    functions or some other functions, maybe you have not integrated the VSDoc file
    via drag-and-drop into your project. As a quick solution, you could just drag-and-drop
    the file into another project and then back to the current project.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么内容辅助不起作用？如果内容辅助没有提供任何jQuery函数或其他函数，可能你没有通过拖放将VSDoc文件集成到你的项目中。作为一个快速解决方案，你可以将文件拖放到另一个项目中，然后再拖回到当前项目中。
- en: '*What just happened?*'
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have integrated the jQuery VSDoc file into our web project. From now on,
    the Content Assist will provide us with all of the available jQuery functions
    from the current scope.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将jQuery VSDoc文件集成到我们的Web项目中。从现在起，内容辅助将为我们提供当前作用域中所有可用的jQuery函数。
- en: So if, for example, you type `$(d)` and place the cursor behind the `d` variable,
    you can then trigger the Content Assist by pressing *Ctrl* + Space bar; the Content
    Assist will then give you some suggestions.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，例如，如果你输入`$(d)`并将光标放在`d`变量后面，你可以通过按*Ctrl* + 空格键来触发内容辅助；内容辅助将随后为你提供一些建议。
- en: '![What just happened?](img/8246_07_06.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_07_06.jpg)'
- en: You could then place the cursor, for example, behind a `$(document)` entry,
    and trigger the Content Assist once more. Now the Content Assist will also provide
    you with all available jQuery functions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将光标放在例如`$(document)`条目后面，并再次触发内容辅助。现在内容辅助也将为你提供所有可用的jQuery函数。
- en: '![What just happened?](img/8246_07_07.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_07_07.jpg)'
- en: Easy, isn't it? No more searching within the documentation because you didn't
    know which functions were available or how they should have been written—now you
    can just navigate through the list of all functions and properties and select
    the required one.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 简单，不是吗？不再需要在文档中搜索，因为您不知道哪些函数可用或应该如何编写它们——现在您可以直接浏览所有函数和属性的列表，并选择所需的项。
- en: Using Dojo Toolkit
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Dojo Toolkit
- en: Dojo Toolkit is a solid JavaScript toolkit that provides many home-made components,
    plugins, and widgets. All of them are internationalized and, as the Dojo team
    says, *unbeatable*. It has already been thoroughly tested in all major browsers
    and is appropriate for programming a variety of applications, from large web applications
    to mobile applications.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Dojo Toolkit 是一个可靠的 JavaScript 工具包，提供了许多自制的组件、插件和小部件。所有这些都具有国际化特性，正如 Dojo 团队所说，它们是**无与伦比的**。它已经在所有主流浏览器中进行了彻底测试，适用于编写各种应用程序，从大型网络应用程序到移动应用程序。
- en: You can get it from the Dojo Toolkit website at [http://dojotoolkit.org/download/](http://dojotoolkit.org/download/).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 Dojo Toolkit 网站获取它，网址为 [http://dojotoolkit.org/download/](http://dojotoolkit.org/download/)。
- en: Time for action – integrating the Dojo Toolkit
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 集成 Dojo Toolkit
- en: 'The following steps show how to integrate the Dojo Toolkit:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何集成 Dojo Toolkit：
- en: Create a new web project named `Using JavaScript Libraries - Dojo`.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Using JavaScript Libraries - Dojo` 的新网络项目。
- en: Download the Dojo Toolkit source and extract it into a folder, for example,
    `dojo-release-1.7.2-src`.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 Dojo Toolkit 源代码并将其解压到一个文件夹中，例如，`dojo-release-1.7.2-src`。
- en: Copy the folder that contains the Dojo Toolkit source into your `Project` folder.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将包含 Dojo Toolkit 源代码的文件夹复制到您的 `项目` 文件夹中。
- en: Create a folder named `dojo-sdocml-*version*` (replace `*version*` with your
    Dojo Toolkit version), in our case `dojo-sdocml-1.7.2`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `dojo-sdocml-*version*` 的文件夹（将 `*version*` 替换为您的 Dojo Toolkit 版本），在我们的例子中是
    `dojo-sdocml-1.7.2`。
- en: 'After the preceding steps, your project should look like the following screenshot
    in your **Project Explorer** view:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在完成前面的步骤后，您的项目在 **项目资源管理器** 视图中应该看起来像以下截图：
- en: '![Time for action – integrating the Dojo Toolkit](img/8246_07_01.jpg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 集成 Dojo Toolkit](img/8246_07_01.jpg)'
- en: In order to use the Dojo Toolkit within Aptana Studio, we have to create a SDOCML
    file for it, because its documentation isn't created in ScriptDoc.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在 Aptana Studio 中使用 Dojo Toolkit，我们必须为其创建一个 SDOCML 文件，因为它的文档不是在 ScriptDoc
    中创建的。
- en: If you want to use version 1.6.0 of the Dojo Toolkit, it can be downloaded at
    [https://raw.github.com/aptana/dojo.ruble/master/support/dojo.1.6.0.sdocml](https://raw.github.com/aptana/dojo.ruble/master/support/dojo.1.6.0.sdocml),
    and version 1.7.0 at [https://github.com/gigi81/studio3-sdk/blob/master/tools/frameworks/dojo/1.7/api.sdocml](https://github.com/gigi81/studio3-sdk/blob/master/tools/frameworks/dojo/1.7/api.sdocml).
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想使用 Dojo Toolkit 的 1.6.0 版本，可以从 [https://raw.github.com/aptana/dojo.ruble/master/support/dojo.1.6.0.sdocml](https://raw.github.com/aptana/dojo.ruble/master/support/dojo.1.6.0.sdocml)
    下载，1.7.0 版本可以从 [https://github.com/gigi81/studio3-sdk/blob/master/tools/frameworks/dojo/1.7/api.sdocml](https://github.com/gigi81/studio3-sdk/blob/master/tools/frameworks/dojo/1.7/api.sdocml)
    下载。
- en: If you want to use another version, you might have to create your own. But don't
    be afraid, it's very easy. If you are going to use one of the the Dojo Toolkit
    SDOCML files, please skip to step 10.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想使用其他版本，可能需要自己创建。但不必害怕，这非常简单。如果您打算使用 Dojo Toolkit 的 SDOCML 文件之一，请跳到步骤 10。
- en: The first step is to download the current API file. The API file contains a
    complete list of all of the packages and functions of the Dojo Toolkit, which
    is more than 7 MB and has more than 213 thousand lines. You can find this file
    on the Dojo Toolkit website at [http://download.dojotoolkit.org/release-*version*/api.xml](http://download.dojotoolkit.org/release-*version*/api.xml).
    Just replace `*version*` with your Dojo Toolkit version. In our case, we are using
    the current version, that is 1.7.2; therefore, we download the following file
    from [http://download.dojotoolkit.org/release-1.7.2/api.xml](http://download.dojotoolkit.org/release-1.7.2/api.xml).
    Save the file into the `dojo-sdocml-1.7.2` directory.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是下载当前的 API 文件。API 文件包含 Dojo Toolkit 所有包和函数的完整列表，超过 7 MB，有超过 213,000 行。您可以在
    Dojo Toolkit 网站上找到此文件，网址为 [http://download.dojotoolkit.org/release-*version*/api.xml](http://download.dojotoolkit.org/release-*version*/api.xml)。只需将
    `*version*` 替换为您的 Dojo Toolkit 版本。在我们的例子中，我们使用的是当前版本，即 1.7.2；因此，我们从 [http://download.dojotoolkit.org/release-1.7.2/api.xml](http://download.dojotoolkit.org/release-1.7.2/api.xml)
    下载以下文件，并将其保存到 `dojo-sdocml-1.7.2` 目录中。
- en: 'We need to convert the API file into the required SDOCML file. Because the
    API file is a simple XML file, we can do this with an XSL transformation. You
    can download this XSL file for the conversion at [https://raw.github.com/aptana/studio3-sdk/master/tools/frameworks/dojo/1.6/update_dojo_metadata_1.6.xsl](https://raw.github.com/aptana/studio3-sdk/master/tools/frameworks/dojo/1.6/update_dojo_metadata_1.6.xsl).
    This XSL file was created for version 1.6.0 of the Dojo Toolkit, but it also works
    for newer versions. Just save it into the same location as the API file (into
    the `dojo-sdocml-1.7.2` directory). For transforming the API file using the XSL
    file into the required SDOCML file, you need the `xsltproc` package. You can install
    it, If you have not already done so, do this simply with `apt-get`:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要将 API 文件转换为所需的 SDOCML 文件。因为 API 文件是一个简单的 XML 文件，我们可以使用 XSL 转换来完成这个任务。你可以在此处下载用于转换的
    XSL 文件：[https://raw.github.com/aptana/studio3-sdk/master/tools/frameworks/dojo/1.6/update_dojo_metadata_1.6.xsl](https://raw.github.com/aptana/studio3-sdk/master/tools/frameworks/dojo/1.6/update_dojo_metadata_1.6.xsl)。这个
    XSL 文件是为 Dojo Toolkit 的 1.6.0 版本创建的，但它也适用于更新的版本。只需将其保存到与 API 文件相同的目录（`dojo-sdocml-1.7.2`
    目录）中。要使用 XSL 文件将 API 文件转换为所需的 SDOCML 文件，你需要 `xsltproc` 包。如果你还没有安装，可以使用 `apt-get`
    简单地安装它：
- en: '[PRE0]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you''re using a Windows operating system, just navigate to the [http://xmlsoft.org/XSLT/downloads.html](http://xmlsoft.org/XSLT/downloads.html)
    website. Here you will find a link to the windows port (by Igor Zlatkovic) of
    this library. After installing the package, you can create the SDOCML file using
    the following simple shell action:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows 操作系统，只需导航到 [http://xmlsoft.org/XSLT/downloads.html](http://xmlsoft.org/XSLT/downloads.html)
    网站。在这里，你可以找到一个指向该库 Windows 版本（由 Igor Zlatkovic 提供）的链接。安装完包后，你可以使用以下简单的 shell 操作来创建
    SDOCML 文件：
- en: '[PRE1]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Finally, you just have to drag the downloaded or created SDOCML file somewhere
    into your project. We drag this file into the `dojo-sdocml-1.7.2` directory.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你只需将下载或创建的 SDOCML 文件拖放到你的项目中的某个位置。我们将此文件拖放到 `dojo-sdocml-1.7.2` 目录中。
- en: 'After all these steps, your project may look something like this:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经过所有这些步骤后，你的项目可能看起来像这样：
- en: '![Time for action – integrating the Dojo Toolkit](img/8246_07_02.jpg)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 集成 Dojo Toolkit](img/8246_07_02.jpg)'
- en: '*What just happened?*'
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have just integrated the Dojo Toolkit source into one of our projects. Furthermore,
    we created a Dojo Toolkit SDOCML file that provides the Content Assist with the
    necessary information so that it can provide us with all the available features
    in the current scope.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将 Dojo Toolkit 源代码集成到我们的一个项目中。此外，我们创建了一个 Dojo Toolkit SDOCML 文件，它提供了必要的信息以便内容辅助功能能够提供当前作用域内所有可用的功能。
- en: Let's do a simple check. Create a JavaScript file within our Dojo project. Open
    the file, type in `dojo`, and trigger the Content Assist by pressing *Ctrl* +
    Space bar. The Content Assist will suggest the `dojo` object to you along with
    other options that begin with the same letters. In the right-hand side column,
    you can see from which file the Content Assist gets the information for this object.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一个简单的检查。在我们的 Dojo 项目中创建一个 JavaScript 文件。打开文件，输入 `dojo`，然后通过按 *Ctrl* + 空格键触发内容辅助。内容辅助将为你建议
    `dojo` 对象以及其他以相同字母开头的选项。在右侧列中，你可以看到内容辅助从哪个文件获取了此对象的信息。
- en: '![What just happened?](img/8246_07_08.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_07_08.jpg)'
- en: Now, let's go forward and type in `dojo`. The Content Assist will list all available
    methods from the `dojo` object. When we specify our input further, for example,
    `dojo.q`, the Content Assist updates its list and removes all entries that no
    longer match.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续输入 `dojo`。内容辅助将列出 `dojo` 对象的所有可用方法。当我们进一步指定输入，例如 `dojo.q` 时，内容辅助会更新其列表并删除所有不再匹配的条目。
- en: '![What just happened?](img/8246_07_09.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_07_09.jpg)'
- en: This time the object that the method belongs to is displayed in the right-hand
    side column. To the right-hand side of the list is a tooltip that displays the
    documentation of this method.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，方法所属的对象显示在右侧列中。列表右侧有一个工具提示，显示该方法的文档。
- en: Using ExtJS
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ExtJS
- en: ExtJS is a JavaScript framework, just like Dojo Toolkit, that provides many
    rich, modern UI widgets. ExtJS was a collection of function extensions from the
    **Yahoo User Interface** (**YUI**) library that, in time, became more and more
    popular. Through increasing complexity and popularity, it developed into an independent
    library called **ExtJS**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: ExtJS 是一个 JavaScript 框架，就像 Dojo Toolkit 一样，它提供了许多丰富、现代的 UI 小部件。ExtJS 是从 **Yahoo
    用户界面**（**YUI**）库中收集的功能扩展集合，随着时间的推移，它变得越来越受欢迎。通过不断增加的复杂性和受欢迎程度，它发展成为一个独立的库，称为 **ExtJS**。
- en: You can get it from the Sencha website [at http://www.sencha.com/products/extjs/download/](http://at
    http://www.sencha.com/products/extjs/download/).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 Sencha 网站获取它 [在 http://www.sencha.com/products/extjs/download/](http://at
    http://www.sencha.com/products/extjs/download/)。
- en: Time for action – integrating ExtJS
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行时间 – 集成 ExtJS
- en: 'The following steps are required to integrate ExtJS:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 集成 ExtJS 需要以下步骤：
- en: Create a new web project named `Using JavaScript Libraries - ExtJS`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Using JavaScript Libraries - ExtJS` 的新网络项目。
- en: Download the ExtJS package. In our case, we will choose the `ext-4.1.0-gpl.zip`
    package.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 ExtJS 软件包。在我们的例子中，我们将选择 `ext-4.1.0-gpl.zip` 软件包。
- en: Extract the ExtJS package into your `Project` folder.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 ExtJS 软件包提取到你的 `项目` 文件夹中。
- en: Create a folder named `extjs-sdocml-4.1.0` (replace `*version*` with your ExtJS
    version), in our case `extjs-sdocml-4.1.0`.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `extjs-sdocml-4.1.0`（将 `*version*` 替换为你的 ExtJS 版本），在我们的例子中为 `extjs-sdocml-4.1.0`
    的文件夹。
- en: 'After the preceding steps, your project should look like the following screenshot:'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在完成前面的步骤后，你的项目应该看起来像下面的截图：
- en: '![Time for action – integrating ExtJS](img/8246_07_11.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![执行时间 – 集成 ExtJS](img/8246_07_11.jpg)'
- en: Refresh your project by right-clicking on the project name in the `Project Explorer`
    folder and click on **Refresh**. Now, Aptana Studio will index the new files and
    read the required information for the Content Assist. This may take a moment because
    ExtJS has a lot of files.![Time for action – integrating ExtJS](img/8246_07_10.jpg)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在“项目资源管理器”文件夹中右键单击项目名称并点击**刷新**来刷新你的项目。现在，Aptana Studio 将索引新文件并读取内容辅助所需的信息。这可能需要一点时间，因为
    ExtJS 有很多文件。![执行时间 – 集成 ExtJS](img/8246_07_10.jpg)
- en: Now we have to get the required ScriptDoc file. If you want to use version 3.3.0
    of ExtJS, you can find the file at [https://raw.github.com/aptana/sencha.ruble/master/support/ext-js-3.3.0.sdocml](https://raw.github.com/aptana/sencha.ruble/master/support/ext-js-3.3.0.sdocml).
    If you want to use version 4.0 or 4.1 (as in our example), you can download the
    ScriptDoc file from the web blog at [http://www.thekuroko.com/aptana-sdocml-code-hinting-support/](http://www.thekuroko.com/aptana-sdocml-code-hinting-support/).
    John Crosby has written a tool that uses Adobe AIR and jsduck to create the necessary
    ScriptDoc file. At this point, we can thank John for his work. We download the
    required file and drag it into the `sdocml` directory.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们必须获取所需的 ScriptDoc 文件。如果你想使用 ExtJS 的 3.3.0 版本，你可以在 [https://raw.github.com/aptana/sencha.ruble/master/support/ext-js-3.3.0.sdocml](https://raw.github.com/aptana/sencha.ruble/master/support/ext-js-3.3.0.sdocml)
    找到该文件。如果你想使用 4.0 或 4.1 版本（如我们的示例所示），你可以从网络博客 [http://www.thekuroko.com/aptana-sdocml-code-hinting-support/](http://www.thekuroko.com/aptana-sdocml-code-hinting-support/)
    下载 ScriptDoc 文件。John Crosby 开发了一个工具，该工具使用 Adobe AIR 和 jsduck 创建必要的 ScriptDoc 文件。到目前为止，我们可以感谢
    John 的工作。我们下载所需的文件并将其拖入 `sdocml` 目录。
- en: '*What just happened?*'
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We have integrated ExtJS into one of our own projects. It is done in the same
    way as jQuery and Dojo Toolkit. Again, it is very important that the file is dragged
    into the project, otherwise the Content Assist will not provide any information
    contained within the ScriptDoc file.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将 ExtJS 集成到我们自己的项目中。这和 jQuery 以及 Dojo Toolkit 的集成方式相同。再次强调，非常重要的一点是将文件拖入项目中，否则内容辅助功能将不会提供
    ScriptDoc 文件中的任何信息。
- en: You will be able to test it in a similar way to the way we tested it in the
    jQuery and Dojo Toolkit case.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你将能够以类似于我们在 jQuery 和 Dojo Toolkit 案例中测试的方式测试它。
- en: Have a go hero – integrating a JavaScript library into a current project of
    your own
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄般的操作 – 将 JavaScript 库集成到你的当前项目中
- en: Now your task is to select a current project of yours that uses one of the libraries
    we have dealt with in this chapter. Take a look at how this library is currently
    integrated and adjust its integration in such a way that you can use the Content
    Assist for further development.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的任务是选择你当前使用我们在本章中处理过的库之一的项目。看看这个库是如何目前集成的，并调整其集成方式，以便你可以在进一步开发中使用内容辅助。
- en: When you're done, try out the code completion and see whether all of the library
    features are provided.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，尝试使用代码补全，看看是否提供了所有库功能。
- en: Pop quiz
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速问答
- en: Q1\. Which requirements must be met in order to use the JavaScript library with
    the Content Assist?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 为了使用内容辅助与 JavaScript 库一起使用，必须满足哪些要求？
- en: The Library API must be available in XML or JSON format
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 库 API 必须以 XML 或 JSON 格式可用
- en: None, the Content Assist reads directly from your source code files
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无，内容辅助直接从您的源代码文件中读取
- en: The Library must be documented in ScriptDoc format, in Virtual Studio Documentation
    (VSDoc) for JavaScript, or must have a JSCA 1.0 specification file
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 库必须在 ScriptDoc 格式、虚拟工作室文档（VSDoc）或具有 JSCA 1.0 规范文件中进行文档记录。
- en: Q2\. Can you use the Aptana Studio 2.X Code Assist XML file with Aptana Studio
    3?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 你可以使用 Aptana Studio 2.X 代码辅助 XML 文件与 Aptana Studio 3 一起使用吗？
- en: Yes, just rename the XML file extension to the SDOCML file extension
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，只需将 XML 文件扩展名重命名为 SDOCML 文件扩展名
- en: No, there is no way to use them in Aptana Studio 3
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，在 Aptana Studio 3 中无法使用它们
- en: Yes, but it must be converted with an XSLT conversion
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，但必须使用 XSLT 转换
- en: Q3\. What is absolutely necessary to get the Content Assist to work with your
    libraries?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. 为了使内容辅助与您的库一起工作，绝对必要的是什么？
- en: The ScriptDoc file must be copied and pasted into your project
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 必须将 ScriptDoc 文件复制并粘贴到您的项目中
- en: The ScriptDoc file must be dragged into your project
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 必须将 ScriptDoc 文件拖入您的项目
- en: Nothing
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有内容
- en: Q4\. What does the jQuery bundle provide?
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Q4. jQuery 包提供了什么？
- en: The complete jQuery Content Assist information to enable all Content Assist
    functionalities
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整的 jQuery 内容辅助信息，以启用所有内容辅助功能
- en: Only jQuery snippets and some commands
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只有 jQuery 片段和一些命令
- en: jQuery itself—a separate copy of the jQuery library is not required anymore
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: jQuery 本身——不再需要 jQuery 库的单独副本
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After reading this chapter, you should be able to integrate several JavaScript
    libraries into your projects so that the Content Assist provides all the necessary
    information to work much more effectively. In addition, you should know in detail
    what is required for integration other than what has been dealt within this chapter—JavaScript
    libraries.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章之后，您应该能够将几个 JavaScript 库集成到您的项目中，以便内容辅助提供所有必要的信息，使您的工作更加高效。此外，您应该详细了解除了本章中已经讨论的
    JavaScript 库之外，还需要哪些内容才能进行集成。
- en: In the next chapter we will learn how to work on a remote server with FTP.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用 FTP 在远程服务器上工作。
