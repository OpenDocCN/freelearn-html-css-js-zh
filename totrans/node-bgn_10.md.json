["```js\nnpm install express@4\n```", "```js\nimport express from 'express'\nconst app = express()\nconst port = 3000\napp.get('/', (req, res) => {\n  res.send('Hello World from Express!')\n})\napp.listen(port, () => {\n  console.log(`Hello World app listening on port ${port}`)\n})\n```", "```js\nnode helloWorld.js\n```", "```js\nHello World app listening on port 3000\n```", "```js\nnpx express-generator@4\n```", "```js\n   create : public/\n   create : public/javascripts/\n   create : public/images/\n   create : public/stylesheets/\n   create : public/stylesheets/style.css\n   create : routes/\n   create : routes/index.js\n   create : routes/users.js\n   create : views/\n   create : views/error.jade\n   create : views/index.jade\n   create : views/layout.jade\n   create : app.js\n   create : package.json\n   create : bin/\n   create : bin/www\n   install dependencies:\n     $ npm install\n   run the app:\n     $ DEBUG=generated:* npm start\n```", "```js\nnpm install\n```", "```js\nnpm start\n```", "```js\n> generated@0.0.0 start\n> node ./bin/www\nGET / 304 125.395 ms - -\nGET /stylesheets/style.css 304 1.265 ms - -\nGET / 304 11.043 ms - -\nGET /stylesheets/style.css 304 0.396 ms - -\nGET /ws 404 11.822 ms - 1322\n```", "```js\nimport express from ('express')\nconst app = express()\nconst port = 3000\napp.set('view engine', 'ejs')\napp.get('/', (req, res) => {\n  res.render('index', {\n    title: 'This is an Express app',\n    subtitle: 'using EJS as template engine'})\n})\napp.listen(port, () => {\n  console.log(`Application running in http://localhost:${port}`)\n})\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title><%= title %></title>\n</head>\n<body>\n  <h1><%= title %></h1>\n  <h2><%= subtitle %></h2>\n</body>\n</html>\n```", "```js\nnpm install ejs@3\n```", "```js\nnode helloWorldTemplate.js\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>This is an Express app</title>\n</head>\n<body>\n  <h1>This is an Express app</h1>\n  <h2>using EJS as template engine</h2>\n</body>\n</html>\n```", "```js\napp.set('view engine', 'ejs')\n```", "```js\nres.render('index', {\n    title: 'This is an Express app',\n    subtitle: 'using EJS as template engine'\n})\n```", "```js\nimport express from ('express')\nconst app = express()\napp.method(route, handler)\n```", "```js\napp.get ('/', () => {})\napp.post('/', () => {})\napp.put('/', () => {})\napp.delete('/', () => {})\n```", "```js\napp.all('/', () => {})\n```", "```js\napp.get('/', () => {})\napp.get('/users', () => {})\napp.get('/user/me', () => {})\n```", "```js\napp.get('/users/:id', () => {})\n```", "```js\napp.get('/users/:id/profile', () => {})\n```", "```js\napp.get('/users/:id', (req, res) => {\n    const { originCity, destinationCity } = req.params\n    res.send(`You are flying from ${originCity} to ${destinationCity}`)\n})\n```", "```js\napp.get('/invoice/:id?', (req, res) => {\n    const id = parseInt(req.params.id)\n    if (id) {\n        res.send(`You are looking for the invoice with id ${id}`)\n    } else {\n        res.send(`You are looking for all the invoices`)\n    }\n})\n```", "```js\napp.get(/.*fly$/, (req, res) => {\n  res.send(`Match with any route that ends with fly`)\n})\n```", "```js\napp.get('/msg/:id/:action(edit|delete)', (req, res, next) => {\n  res.send(`You request the action ${req.params.action} for the message ${req.params.id}`);\n});\n```", "```js\napp.get('/films', (req, res) => {\n    const { category, director } = req.query\n    res.send(`You are looking for films with category ${category} and director ${director}`)\n})\n```", "```js\napp.get('/users/:id', () => {\n    res.send(`You are looking for the user with id ${req.params.id}`)\n})\napp.get('/users/me', () => {\n    res.send(`You are looking for the current user`)\n})\n```", "```js\napp.get('/users/me', () => {})\napp.get('/users/:id', () => {})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.send(\"Hello World\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.set('Content-Type', 'text/html')\n    res.send(\"<h1>Hello World</h1>\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.set({\n        'Content-Type': 'text/html',\n        'x-powered-by': 'Unicorns and rainbows'\n    })\n    res.send(\"<h1>Hello World</h1>\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.set({\n        'Content-Type': 'text/html',\n        'x-powered-by': 'Unicorns and rainbows'\n    })\n    res.removeHeader('x-powered-by')\n    res.send(\"<h1>Hello World</h1>\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.status(200)\n    res.send(\"<h1>Hello World</h1>\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.status(200).set('Content-Type', 'text/html').send(\"<h1>Hello World</h1>\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.sendStatus(500)\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.redirect('https://ulisesgascon.com/')\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.redirect(301, 'https://ulisesgascon.com/')\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.redirect('/about')\n})\n```", "```js\napp.get('/about/me', (req, res, next) => {\n    res.redirect('..')\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.redirect('back')\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.send(\"Hello World\")\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.set('Content-Type', 'text/html')\n    res.send(Buffer.from('<p>Hello World</p>'))\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.json({message: 'Hello World'})\n})\n```", "```js\napp.get('/', (req, res, next) => {\n    res.set('Content-Type', 'application/json')\n    res.send(JSON.stringify({message: 'Hello World'}))\n})\n```", "```js\napp.get('/report', (req, res, next) => {\n    res.sendFile('/path/to/file.txt')\n})\n```", "```js\napp.get('/report', (req, res, next) => {\n    res.attachment('/path/to/file.txt')\n})\n```", "```js\nconst middleware(req, res, next) {}\n```", "```js\nconst detectLangMiddleware(req, res, next) {\n    req.lang = req.headers['accept-language'] || 'en'\n    next()\n}\n```", "```js\nconst legacyBrowsersMiddleware(req, res, next) {\n    if (req.headers['user-agent'].includes('MSIE')) {\n        res.redirect('https://updatemybrowser.org/')\n    } else {\n        next()\n    }\n}\n```", "```js\nconst detectLangMiddleware = defaultLang => (req, res, next) => {\n    req.lang = req.headers['accept-language'] || defaultLang\n    next()\n}\n```", "```js\nimport { detectLangMiddleware } from './utils'\n// With the closure\napp.use(detectLangMiddleware('es'))\n// without the closure\napp.use(detectLangMiddleware)\n```", "```js\napp.use(legacyBrowsersMiddleware)\n```", "```js\napp.get('/users', legacyBrowsersMiddleware, (req, res) => {\n    res.send('Hello world')\n})\n```", "```js\napp.get('/users', legacyBrowsersMiddleware, detectLangMiddleware, (req, res) => {\n    res.send('Hello world')\n})\n```", "```js\napp.use(express.static('public'))\n```", "```js\napp.use(express.static('public'))\napp.use(express.static('files'))\n```", "```js\napp.use((err, req, res, next) => {\n    console.error(err.stack)\n    res.status(500).send('Ohh! The Server needs some love')\n})\n```", "```js\nimport express from 'express'\nconst app = express()\nconst port = 3000\napp.get('/next-error', (req, res, next) => {\n    next(new Error('Ohh! Something went wrong'))\n})\napp.get('/throw-error', (req, res) => {\n    throw new Error('Ohh! Something went wrong')\n})\napp.use((err, req, res, next) => {\n    console.error(err.stack)\n    res.status(500).send('Ohh! The Server needs some love')\n})\napp.listen(port, () => {\n  console.log(`running at http://localhost:${port}`)\n})\n```", "```js\nnpm install body-parser@1\n```", "```js\nimport express from 'express'\nimport bodyParser from 'body-parser'\nconst app = express()\nconst port = 3000\napp.use(bodyParser.json())\napp.post('/echo', (req, res) => {\n    // Echo the request body\n    res.json(req.body)\n})\napp.listen(port, () => {\n  console.log(`running at http://localhost:${port}`)\n})\n```", "```js\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"name\":\"John\"}' http://localhost:3000/echo\n```"]