["```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/create-stack --path cncb-create-stack\n```", "```js\nservice: cncb-create-stack\n\nprovider:\n  name: aws\n```", "```js\n{\n  \"name\": \"cncb-create-stack\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"test\": \"sls package -r us-east-1 -s test\",\n    \"dp:lcl\": \"sls deploy -r us-east-1\",\n    \"rm:lcl\": \"sls remove -r us-east-1\"\n  },\n  \"devDependencies\": {\n    \"serverless\": \"1.26.0\"\n  }\n}\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-create-stack@1.0.0 dp:lcl <path-to-your-workspace>/cncb-create-stack\n> sls deploy -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\nServerless: Creating Stack...\nServerless: Checking Stack create progress...\n.....\nServerless: Stack create finished...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Validating template...\nServerless: Updating Stack...\nService Information\nservice: cncb-create-stack\nstage: john\nregion: us-east-1\nstack: cncb-create-stack-john\napi keys:\n None\nendpoints:\n None\nfunctions:\n None\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/create-function --path cncb-create-function\n```", "```js\nservice: cncb-create-function\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  environment:\n    V1: value1\n\nfunctions:\n  hello:\n    handler: handler.hello\n```", "```js\nmodule.exports.hello = (event, context, callback) => {\n  console.log('event: %j', event);\n  console.log('context: %j', context);\n  console.log('env: %j', process.env);\n\n  callback(null, 'success');\n};\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-create-function@1.0.0 dp:lcl <path-to-your-workspace>/cncb-create-function\n> sls deploy -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Creating Stack...\nServerless: Checking Stack create progress...\n.....\nServerless: Stack create finished...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (881 B)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n.................\nServerless: Stack update finished...\nService Information\nservice: cncb-create-function\nstage: john\nregion: us-east-1\nstack: cncb-create-function-john\napi keys:\n None\nendpoints:\n None\nfunctions:\n hello: cncb-create-function-john-hello\n```", "```js\n$ sls invoke -r us-east-1 -f hello -s $MY_STAGE -d '{\"hello\":\"world\"}'\n\"success\"\n```", "```js\n$ sls logs -f hello -r us-east-1 -s $MY_STAGE\nSTART RequestId: ... Version: $LATEST\n2018-03-24 15:48:45 ... event: {\"hello\":\"world\"}\n2018-03-24 15:48:45 ... context: {\"functionName\":\"cncb-create-function-john-hello\",\"memoryLimitInMB\":\"1024\", ...}\n2018-03-24 15:48:45 ... env: {\"V1\":\"value1\",\"TZ\":\":UTC\",\"AWS_REGION\":\"us-east-1\", \"AWS_ACCESS_KEY_ID\":\"...\", ...}\nEND RequestId: ...\nREPORT ... Duration: 3.64 ms Billed Duration: 100 ms ... Max Memory Used: 20 MB    \n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/event-stream --path cncb-event-stream\n```", "```js\nservice: cncb-event-stream\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - kinesis:PutRecord\n      Resource:\n        Fn::GetAtt: [ Stream, Arn ]\n\nfunctions:\n  publish:\n    handler: handler.publish\n    environment:\n      STREAM_NAME:\n        Ref: Stream\n\nresources:\n  Resources:\n    Stream:\n      Type: AWS::Kinesis::Stream\n      Properties:\n        Name: ${opt:stage}-${self:service}-s1\n        RetentionPeriodHours: 24\n        ShardCount: 1\n\n  Outputs:\n    streamName:\n      Value: \n        Ref: Stream\n    streamArn:\n      Value: \n        Fn::GetAtt: [ Stream, Arn ]\n```", "```js\nconst aws = require('aws-sdk');\nconst uuid = require('uuid');\n\nmodule.exports.publish = (event, context, callback) => {\n  const e = {\n    id: uuid.v1(),\n    partitionKey: event.partitionKey || uuid.v4(),\n    timestamp: Date.now(),\n    tags: {\n      region: process.env.AWS_REGION,\n    },\n    ...event,\n  }\n\n  const params = {\n    StreamName: process.env.STREAM_NAME,\n    PartitionKey: e.partitionKey,\n    Data: Buffer.from(JSON.stringify(e)),\n  };\n\n  const kinesis = new aws.Kinesis();\n\n```", "```js\n  kinesis.putRecord(params, callback);\n};\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-create-stream@1.0.0 dp:lcl <path-to-your-workspace>/cncb-create-stream\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\nService Information\nservice: cncb-event-stream\nstage: john\nregion: us-east-1\nstack: cncb-event-stream-john\n...\nfunctions:\n publish: cncb-event-stream-john-publish\n\nStack Outputs\nPublishLambdaFunctionQualifiedArn: arn:aws:lambda:us-east-1:999999999999:function:cncb-event-stream-john-publish:3\nstreamArn: arn:aws:kinesis:us-east-1:999999999999:stream/john-cncb-event-stream-s1\nstreamName: john-cncb-event-stream-s1\n...\n```", "```js\n$ sls invoke -r us-east-1 -f publish -s $MY_STAGE -d '{\"type\":\"thing-created\"}'\n{\n    \"ShardId\": \"shardId-000000000000\",\n    \"SequenceNumber\": \"49582906351415672136958521359460531895314381358803976194\"\n}\n```", "```js\n$ sls logs -f publish -r us-east-1 -s $MY_STAGE\nSTART ...\n2018-03-24 23:20:46 ... event: {\"type\":\"thing-created\"}\n2018-03-24 23:20:46 ... event:\n{\n  \"type\":\"thing-created\",\n  \"id\":\"81fd8920-2fdb-11e8-b749-0d2c43ec73d0\",\n  \"partitionKey\":\"6f4f9a38-61f7-41c9-a3ad-b8c16e42db7c\",\n  \"timestamp\":1521948046003,\n  \"tags\":{\n    \"region\":\"us-east-1\"\n  }\n}\n2018-03-24 23:20:46 ... params: {\"StreamName\":\"john-cncb-event-stream-s1\",\"PartitionKey\":\"6f4f9a38-61f7-41c9-a3ad-b8c16e42db7c\",\"Data\":{\"type\":\"Buffer\",\"data\":[...]}}\nEND ...\nREPORT ... Duration: 153.47 ms    Billed Duration: 200 ms ... Max Memory Used: 39 MB    \n```", "```js\ninterface Event {\n    id: string;\n    type: string;\n    timestamp: number;\n    partitionKey: string;\n    tags: { [key: string]: string };\n}\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/create-stream-processor --path cncb-create-stream-processor\n```", "```js\nservice: cncb-create-stream-processor\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n\nfunctions:\n  listener:\n    handler: handler.listener\n    events:\n      - stream:\n          type: kinesis\n          arn: ${cf:cncb-event-stream-${opt:stage}.streamArn}\n          batchSize: 100\n          startingPosition: TRIM_HORIZON\n```", "```js\nconst _ = require('highland');\n\nmodule.exports.listener = (event, context, cb) => {\n  _(event.Records)\n    .map(recordToEvent)\n    .tap(printEvent)\n    .filter(forThingCreated)\n    .collect()\n    .tap(printCount)\n    .toCallback(cb);\n};\n\nconst recordToEvent = r => JSON.parse(Buffer.from(r.kinesis.data, 'base64'));\nconst forThingCreated = e => e.type === 'thing-created';\n\nconst printEvent = e => console.log('event: %j', e);\nconst printCount = events => console.log('count: %d', events.length);\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-create-stream-processor@1.0.0 dp:lcl <path-to-your-workspace>/cncb-create-stream-processor\n> sls deploy -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\nService Information\nservice: cncb-create-stream-processor\nstage: john\nregion: us-east-1\nstack: cncb-create-stream-processor-john\n...\nfunctions:\n  listener: cncb-create-stream-processor-john-listener\n```", "```js\n$ cd <path-to-your-workspace>/cncb-event-stream\n$ sls invoke -r us-east-1 -f publish -s $MY_STAGE -d '{\"type\":\"thing-created\"}'\n{\n    \"ShardId\": \"shardId-000000000000\",\n    \"SequenceNumber\": \"49582906351415672136958521360120605392824155736450793474\"\n}\n```", "```js\n$ sls logs -f listener -r us-east-1 -s $MY_STAGE\nSTART ...\n2018-03-25 00:16:32 ... event:\n{\n  \"type\":\"thing-created\",\n  \"id\":\"81fd8920-2fdb-11e8-b749-0d2c43ec73d0\",\n  \"partitionKey\":\"6f4f9a38-61f7-41c9-a3ad-b8c16e42db7c\",\n  \"timestamp\":1521948046003,\n  \"tags\":{\n    \"region\":\"us-east-1\"\n  }\n}\n2018-03-25 00:16:32 ... event:\n{\n  \"type\":\"thing-created\",\n  \"id\":\"c6f60550-2fdd-11e8-b749-0d2c43ec73d0\",\n  ...\n}\n2018-03-25 00:16:32 ... count: 2\nEND ...\nREPORT ... Duration: 7.73 ms    Billed Duration: 100 ms ... Max Memory Used: 22 MB    \n\nSTART ...\n2018-03-25 00:22:22 ... event:\n{\n  \"type\":\"thing-created\",\n  \"id\":\"1c2b5150-2fe4-11e8-b749-0d2c43ec73d0\",\n  ...\n}\n2018-03-25 00:22:22 ... count: 1\nEND ...\nREPORT ... Duration: 1.34 ms    Billed Duration: 100 ms ... Max Memory Used: 22 MB    \n\n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/create-api-gateway --path cncb-create-api-gateway\n```", "```js\nservice: cncb-create-api-gateway\n\nprovider:\n  name: aws\n  runtime: nodejs8.10\n\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hello\n          method: get\n          cors: true\n```", "```js\nmodule.exports.hello = (event, context, callback) => {\n  console.log('event: %j', event);\n\n  const response = {\n    statusCode: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n    },\n    body: JSON.stringify({\n      message: 'JavaScript Cloud Native Development Cookbook! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n};\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-create-api-gateway@1.0.0 dp:lcl <path-to-your-workspace>/cncb-create-api-gateway\n> sls deploy -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n.....\nServerless: Stack update finished...\nService Information\nservice: cncb-create-api-gateway\nstage: john\nregion: us-east-1\nstack: cncb-create-api-gateway-john\napi keys:\n  None\nendpoints:\n  GET - https://k1ro5oasm6.execute-api.us-east-1.amazonaws.com/john/hello\nfunctions:\n  hello: cncb-create-api-gateway-john-hello\n```", "```js\n$ curl -v https://k1ro5oasm6.execute-api.us-east-1.amazonaws.com/john/hello | json_pp\n\n{\n   \"input\" : {\n      \"body\" : null,\n      \"pathParameters\" : null,\n      \"requestContext\" : { ... },\n      \"resource\" : \"/hello\",\n      \"headers\" : { ... },\n      \"queryStringParameters\" : null,\n      \"httpMethod\" : \"GET\",\n      \"stageVariables\" : null,\n      \"isBase64Encoded\" : false,\n      \"path\" : \"/hello\"\n   },\n   \"message\" : \"JavaScript Cloud Native Development Cookbook! Your function executed successfully!\"\n}\n```", "```js\n$ sls logs -f hello -r us-east-1 -s $MY_STAGE\n\nSTART ...\n2018-03-25 01:04:47 ... event: {\"resource\":\"/hello\",\"path\":\"/hello\",\"httpMethod\":\"GET\",\"headers\":{ ... },\"requestContext\":{ ... },\"body\":null,\"isBase64Encoded\":false}\nEND \nREPORT ... Duration: 2.82 ms    Billed Duration: 100 ms ... Max Memory Used: 20 MB    \n```", "```js\n$ sls create --template-url https://github.com/danteinc/js-cloud-native-cookbook/tree/master/ch1/deploy-spa --path cncb-deploy-spa\n```", "```js\nservice: cncb-deploy-spa\n\nprovider:\n  name: aws\n\nplugins:\n  - serverless-spa-deploy\n\ncustom:\n  spa:\n    files:\n      - source: ./build\n        globs: '**/*'\n        headers:\n          CacheControl: max-age=300\n\nresources:\n  Resources:\n    WebsiteBucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        AccessControl: PublicRead\n        WebsiteConfiguration:\n          IndexDocument: index.html\n          ErrorDocument: index.html\n\n  Outputs:\n    WebsiteBucketName:\n      Value:\n        Ref: WebsiteBucket\n    WebsiteURL:\n      Value:\n        Fn::GetAtt: [ WebsiteBucket, WebsiteURL ]\n```", "```js\n{\n  \"name\": \"cncb-deploy-spa\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"sls package -r us-east-1 -s test\",\n    \"dp:lcl\": \"sls deploy -v -r us-east-1\",\n    \"rm:lcl\": \"sls remove -r us-east-1\"\n  },\n  \"dependencies\": {\n    \"react\": \"16.2.0\",\n    \"react-dom\": \"16.2.0\"\n  },\n  \"devDependencies\": {\n    \"react-scripts\": \"1.1.1\",\n    \"serverless\": \"1.26.0\",\n    \"serverless-spa-deploy\": \"^1.0.0\"\n  }\n}\n```", "```js\n$ npm run dp:lcl -- -s $MY_STAGE\n\n> cncb-deploy-spa@1.0.0 dp:lcl <path-to-your-workspace>/cncb-deploy-spa\n> sls deploy -v -r us-east-1 \"-s\" \"john\"\n\nServerless: Packaging service...\n...\nServerless: Stack update finished...\n...\nStack Outputs\nWebsiteBucketName: cncb-deploy-spa-john-websitebucket-1s8hgqtof7la7\nWebsiteURL: http://cncb-deploy-spa-john-websitebucket-1s8hgqtof7la7.s3-website-us-east-1.amazonaws.com\n...\nServerless: Path: ./build\nServerless: File: asset-manifest.json (application/json)\nServerless: File: favicon.ico (image/x-icon)\nServerless: File: index.html (text/html)\nServerless: File: manifest.json (application/json)\nServerless: File: service-worker.js (application/javascript)\nServerless: File: static/css/main.c17080f1.css (text/css)\nServerless: File: static/css/main.c17080f1.css.map (application/json)\nServerless: File: static/js/main.ee7b2412.js (application/javascript)\nServerless: File: static/js/main.ee7b2412.js.map (application/json)\nServerless: File: static/media/logo.5d5d9eef.svg (image/svg+xml)\n```"]