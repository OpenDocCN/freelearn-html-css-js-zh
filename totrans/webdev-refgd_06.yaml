- en: Chapter 6. CSS Properties – Part 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章 CSS 属性 – 第三部分
- en: Now that we're done with Part 2 of the CSS properties, let's end strongly with
    Part 3.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们完成了 CSS 属性的第二部分，让我们以第三部分的内容来结束。
- en: Let's do this.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来做这件事。
- en: Page box
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面框
- en: 'The page box is a square/rectangular area built out of two parts: the *page
    area* and the *margin area*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 页面框是由两部分组成的正方形/矩形区域：*页面区域* 和 *页边距区域*。
- en: The page area is where the content sits and all elements are laid out. The margin
    area sits around the page area and is transparent. If we add a background color
    to the page area, it will cover the page area and the margin area.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 页面区域是内容所在的地方，所有元素都进行布局。页边距区域位于页面区域周围，是透明的。如果我们给页面区域添加背景颜色，它将覆盖页面区域和页边距区域。
- en: The size of the page box cannot be modified. But if we plan to modify some of
    the page box properties, we need to include them in an `@page` rule.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 页面框的大小不能修改。但如果我们计划修改页面框的一些属性，我们需要在 `@page` 规则中包含它们。
- en: Let's check it out.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看。
- en: bleed
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: bleed
- en: The `bleed` CSS property is also called the *CSS at-rule descriptor*. It defines
    how much a page should "*overflow*" or bleed outside the page box. This property
    only works if marks have been enabled using the `marks` property, which we'll
    see next.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`bleed` CSS 属性也称为 *CSS at-rule 描述符*。它定义了页面应该溢出或超出页面框的多少。此属性仅在已使用 `marks` 属性启用标记的情况下才有效，我们将在下一部分看到。'
- en: Description
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `bleed` property only supports a length value: `px`, `em`, `in`, `mm`,
    `cm`, `vw`, and so on.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`bleed` 属性仅支持长度值：`px`、`em`、`in`、`mm`、`cm`、`vw` 等。'
- en: '**CSS**:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: marks
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: marks
- en: The `marks` CSS property, also called a *CSS at-rule descriptor*, defines the
    types of mark that should be rendered and printed outside the page box.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`marks` CSS 属性，也称为 *CSS at-rule 描述符*，定义了应在页面框外渲染和打印的标记类型。'
- en: Since the marks are printed outside the page box, the pages need to be a bit
    larger in order to have the space to print the marks.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于标记是在页面框外打印的，因此页面需要稍微大一点，以便有空间打印标记。
- en: Description
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `marks` property supports three keyword values: `crop`, `cross`, and `none`.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`marks` 属性支持三个关键字值：`crop`、`cross` 和 `none`。'
- en: '`crop`: Crop marks define where the page should be cut'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crop`：裁剪标记定义了页面应该被裁剪的位置'
- en: '`cross`: Cross marks are used to align the pages'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross`：交叉标记用于对齐页面'
- en: '`none`: Marks will not be displayed'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`：标记将不会显示'
- en: '**CSS**:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: List
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表
- en: CSS lists are one of the most versatile elements of web design. Aside from being
    used for making, well, lists, they are also used for navigation, layouts, slideshows,
    carousels, and so on.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 列表是网页设计中最多变的元素之一。除了用于创建列表之外，它们还用于导航、布局、幻灯片、轮播图等。
- en: Let's see some of their properties.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它们的属性。
- en: list-style
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: list-style
- en: The `list-style` CSS property is shorthand for the `list-style-type`, `list-style-image`,
    and `list-style-position` properties. These properties are actually the values
    that the `list-style` CSS property supports. We'll see all these properties next.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style` CSS 属性是 `list-style-type`、`list-style-image` 和 `list-style-position`
    属性的缩写。这些属性实际上是 `list-style` CSS 属性支持的值。我们将在下一部分看到所有这些属性。'
- en: Description
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `list-style` property supports one, two, or three values, in any order.
    If a value isn't declared, it will use its default value.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style` 属性支持一个、两个或三个值，顺序不限。如果没有声明值，它将使用其默认值。'
- en: '**CSS**:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: list-style-type
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: list-style-type
- en: The `list-style-type` CSS property defines the type of graphic or marker (also
    called **bullet**) the list will use. The color of the marker is determined by
    the color of the text of the element it's applied to.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-type` CSS 属性定义了列表将使用的图形或标记（也称为 **项目符号**）。标记的颜色由应用到的元素的文本颜色决定。'
- en: Description
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `list-style-type` property supports many values, but we''ll list 15 of
    the most commonly used ones: `armenian`, `circle`, `decimal`, `decimal-leading-zero`,
    `disc`, `georgian`, `lower-alpha`, `lower-greek`, `lower-latin`, `lower-roman`,
    `none`, `square`, `upper-alpha`, `upper-latin`, and `upper-roman`.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-type` 属性支持许多值，但我们将列出最常用的 15 个：`armenian`、`circle`、`decimal`、`decimal-leading-zero`、`disc`、`georgian`、`lower-alpha`、`lower-greek`、`lower-latin`、`lower-roman`、`none`、`square`、`upper-alpha`、`upper-latin`
    和 `upper-roman`。'
- en: 'Here''s a screenshot with all values except the `none` value:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个截图，除了 `none` 值以外的所有值：
- en: '![Description](img/B03289_06_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![描述](img/B03289_06_01.jpg)'
- en: '**CSS**:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: list-style-position
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: list-style-position
- en: The `list-style-position` CSS property defines the location of the marker.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-position` CSS 属性定义了标记的位置。'
- en: Description
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `list-style-position` property supports two keyword values: `inside` and
    `outside`.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-position` 属性支持两个关键字值：`inside` 和 `outside`。'
- en: inside
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 内部
- en: When the `inside` value is applied, the marker will appear inside the text.
    If there's a line that wraps, the marker will be flushed to the left and not "*sticking
    out*" like in traditional lists.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用 `inside` 值时，标记将出现在文本内部。如果有换行，标记将被左对齐，不会像传统列表那样“突出”。
- en: outside
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 外部
- en: The default value is `outside`. When this value is applied (or not, since it's
    the default), the marker will appear outside the text. If there's a line that
    wraps, the marker will be outside the text block. It will "*stick out*" just like
    in traditional lists.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值是 `outside`。当应用此值（或没有应用，因为它是默认值）时，标记将出现在文本外部。如果有换行，标记将出现在文本块外部。它将“突出”出来，就像在传统列表中一样。
- en: '**CSS**:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: list-style-image
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表样式图像
- en: The `list-style-image` CSS property allows us to replace the default markers
    with a custom image.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-image` CSS 属性允许我们用自定义图像替换默认标记。'
- en: Description
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `list-style-image` property supports one keyword value and one function:
    `none` and `url()`.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-style-image` 属性支持一个关键字值和一个函数：`none` 和 `url()`。'
- en: '`none`: No image is used to replace the marker'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`: 不使用图像替换标记'
- en: '`url()`: It''s used to define the path to the image that will replace the marker'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url()`: 它用于定义替换标记的图像的路径'
- en: '**CSS**:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here''s a demo in CodePen with all HTML lists: [http://tiny.cc/html-lists](http://tiny.cc/html-lists)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个包含所有HTML列表的 CodePen 示例：[http://tiny.cc/html-lists](http://tiny.cc/html-lists)
- en: Counter
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计数器
- en: Traditional lists via the `<ul>`, `<ol>`, `<dl>` tags aren't too versatile when
    it comes to styling the markers. Sometimes, we have to rely on extra markup to
    accomplish some minimal custom styling.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `<ul>`、`<ol>`、`<dl>` 标签的传统列表在样式标记方面并不太灵活。有时，我们必须依赖额外的标记来完成一些基本的自定义样式。
- en: CSS counters, on the other hand, take styling lists (or any element for that
    matter) to a whole new level of customization and styling.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，CSS 计数器将样式列表（或任何元素）提升到了一个全新的定制和样式水平。
- en: Granted, CSS counters rely not only on the properties we're going to see next,
    but also on the `content` property and the `:before` pseudo-element.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然CSS计数器不仅依赖于我们接下来将要看到的属性，还依赖于 `content` 属性和 `:before` 伪元素。
- en: Let's check out the properties that make CSS counters so great.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看使 CSS 计数器如此出色的属性。
- en: counter-reset
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: counter-reset
- en: 'The `counter-reset` CSS property resets the counter by giving it a name, and
    it looks like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`counter-reset` CSS 属性通过提供一个名称来重置计数器，其外观如下：'
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Description
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `counter-reset` property serves two purposes: resets the counter and defines
    a name for the counter. The name is later used by the `counter-increment` and
    `counter()`/`counters()` functions that we''ll see later.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`counter-reset` 属性有两个作用：重置计数器并为计数器定义一个名称。该名称稍后将被我们稍后看到的 `counter-increment`
    和 `counter()`/`counters()` 函数使用。'
- en: I have to admit that the term "`counter-reset`" isn't as intuitive as it should
    be if it's used to set a name for the counter. Something like "`counter-name`"
    would be more suitable if you ask me.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须承认，如果用“counter-reset”来设置计数器的名称，这个术语并不像它应该的那样直观。如果问我，像“counter-name”这样的术语会更合适。
- en: 'This property supports two values: a *name* and a *number*.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持两个值：一个 *名称* 和一个 *数字*。
- en: We can reference multiple counter resets in the same declaration.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在同一个声明中引用多个计数器重置。
- en: name
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 名称
- en: 'We need to give the reset counter a name. This value is required. It can be
    any name but it needs to adhere to the following conditions:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要给重置计数器一个名称。这个值是必需的。可以是任何名称，但需要遵守以下条件：
- en: It can start with a letter, an underscore "`_`", or a hyphen "`-`"
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以以字母、下划线 "`_`" 或连字符 "`-`" 开头
- en: It can start with a hyphen "`-`" character but cannot have two consecutive hyphens
    at the beginning of the name
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以以连字符 "`-`" 字符开头，但不能以两个连续的连字符开头
- en: The name cannot be just a hyphen"`-`"; at least one more character is required,
    but it can't be a number since it would be interpreted as "`minus 1`" (`-1`)
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称不能只是一个连字符"`-`"；至少需要一个额外的字符，但不能是数字，因为这将解释为“减1”(`-1`)
- en: It cannot start with a number or a special character like `#`, `$`, `!`, and
    so on
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不能以数字或像 `#`、`$`、`!` 等特殊字符开头
- en: number
  id: totrans-79
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数字
- en: It's the number that the counter is reset to. The default value is `0` (zero)
    if no value is declared.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是计数器重置到的数字。如果没有声明值，默认值是`0`（零）。
- en: This value is optional unless we want to start the list from a number different
    than `1`. Pay close attention to this value, because the first number in the list
    is not the number declared in this value.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此值是可选的，除非我们想要从不同于 `1` 的数字开始列表。请特别注意此值，因为列表中的第一个数字不是在此值中声明的数字。
- en: If we set the value to `1`, the list starts at `2`. If we leave the value empty,
    it defaults to `0` (zero) and the list starts at `1`. Negative values are valid.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将值设置为 `1`，列表从 `2` 开始。如果我们留空值，它默认为 `0`（零），列表从 `1` 开始。负值是有效的。
- en: '**CSS**:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: counter-increment
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: counter-increment
- en: 'The `counter-increment` CSS property increments the value of one or more counters,
    and it looks like this:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`counter-increment` CSS 属性增加一个或多个计数器的值，其外观如下：'
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Description
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property is used with the `counter-reset` CSS property. This is because
    the name specified in the `counter-reset` property is used in the `counter-increment`
    CSS property.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性与 `counter-reset` CSS 属性一起使用。这是因为 `counter-reset` 属性中指定的名称在 `counter-increment`
    CSS 属性中使用。
- en: As a refresher, remember that the counter name will also be used by the `counter()`/`counters()`
    function.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 作为复习，请记住计数器名称也将由 `counter()`/`counters()` 函数使用。
- en: 'We can declare multiple counter increments in the same declaration. Multiple
    counters are separated by a space. This property supports two values: A *name*
    and a *number*.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在同一个声明中声明多个计数器增量。多个计数器之间用空格分隔。此属性支持两个值：一个 *名称* 和一个 *数字*。
- en: name
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: name
- en: 'It can be any name but it needs to adhere to the following conditions:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以是任何名称，但需要遵守以下条件：
- en: It can start with a letter, an underscore "`_`", or a hyphen "`-`"
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以以字母、下划线 "`_" 或连字符 "`-`" 开头
- en: It can start with a hyphen "`-`" character but not have two consecutive hyphens
    at the beginning of the name
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以以连字符 "`-`" 字符开头，但名称开头不能有两个连续的连字符
- en: The name cannot be just the hyphen"`-`"; at least one more character is required,
    but it can't be a number since it would be interpreted as "`minus 1`" (`-1`).
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称不能只是连字符 "`-`"；至少需要更多字符，但不能是数字，因为这将解释为 "`minus 1`" (`-1`)。
- en: It cannot start with a number or a special character like `#`, `$`, `!`, and
    so on.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不能以数字或特殊字符如 `#`、`$`、`!` 等开头。
- en: number
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: number
- en: This is the number that the counter is reset to. The default value is `0` (zero)
    if no value is declared. This value is optional unless we want to start the list
    from a number different than `1`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是计数器重置到的数字。如果没有声明值，默认值为 `0`（零）。此值是可选的，除非我们想要从不同于 `1` 的数字开始列表。
- en: Now, the `number` value defines the amount of increments each counter will have.
    For example, if we declare `2`, then the counter will be `2`, `4`, `6`, and so
    on. If we declare `3`, then the counter will be `3`, `6`, `9`, and so on.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`number` 值定义了每个计数器将有的增量数量。例如，如果我们声明 `2`，那么计数器将是 `2`、`4`、`6` 等等。如果我们声明 `3`，那么计数器将是
    `3`、`6`、`9` 等等。
- en: If we do not declare a value, the default increment will be by `1`, as in `1`,
    `2`, `3`, and so on.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有声明值，默认增量将是 `1`，例如 `1`、`2`、`3` 等等。
- en: Negative values are valid. If we declare `-2`, then the counter will be `-2`,
    `-4`, `-6`, and so on.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 负值是有效的。如果我们声明 `-2`，那么计数器将是 `-2`、`-4`、`-6` 等等。
- en: '**CSS**:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE9]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is a demo in CodePen: [http://tiny.cc/css-counters](http://tiny.cc/css-counters)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个在 CodePen 上的演示：[http://tiny.cc/css-counters](http://tiny.cc/css-counters)
- en: Drop shadows
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 投影阴影
- en: 'There are three ways to create the effect of depth: using lights, shadows,
    or both.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种方法可以创建深度效果：使用灯光、阴影或两者结合。
- en: Let's see how we create box shadows for our containers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们是如何为我们的容器创建阴影的。
- en: box-shadow
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: box-shadow
- en: 'The `box-shadow` CSS property creates one or several shadows on an element,
    and it looks like this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`box-shadow` CSS 属性在元素上创建一个或多个阴影，其外观如下：'
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Description
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `box-shadow` property supports three, four, five, or six values in the
    same declaration: four *length* values, one *color* value, and the *keyword* `inset`.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`box-shadow` 属性在同一声明中支持三个、四个、五个或六个值：四个 *长度* 值、一个 *颜色* 值和 *关键字* `inset`。'
- en: Length values
  id: totrans-114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 长度值
- en: 'We use one of the following units when we use the length values: `px`, `em`,
    `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用长度值时，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等等。
- en: 'The four length values are as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 四个长度值如下：
- en: The first value is for the horizontal offset of the shadow. Negative values
    are valid. This value is required.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个值是阴影的水平偏移。负值是有效的。此值是必需的。
- en: The second value is for the vertical offset of the shadow. Negative values are
    valid. This value is required.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表中的第二个值是用于阴影的垂直偏移。负值有效。此值是必需的。
- en: The third value is for the blur radius of the shadow. The larger the value,
    the more spread the shadow becomes, but also more translucent. Negative values
    are not valid. This value is required.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表中的第三个值是用于阴影的模糊半径。值越大，阴影扩散得越广，但同时也越透明。负值无效。此值是必需的。
- en: The fourth value is for the size of the shadow (or "spread radius"). Negative
    values are valid. This value is optional.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表中的第四个值是用于阴影的大小（或“扩散半径”）。负值有效。此值是可选的。
- en: Color value
  id: totrans-121
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 颜色值
- en: 'This is the fifth value in the list. It supports all color modes: `HEX`, `RGB`,
    `RGBa`, `HSL`, `HSLs`, and *color name*.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是列表中的第五个值。它支持所有颜色模式：`HEX`、`RGB`、`RGBa`、`HSL`、`HSLs`和*颜色名称*。
- en: This value is optional. If no color is specified, it's up to the browser to
    decide which color to use. Some browsers may not even display a shadow at all
    without a color value.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此值是可选的。如果没有指定颜色，则由浏览器决定使用哪种颜色。某些浏览器甚至可能在没有颜色值的情况下根本不显示阴影。
- en: The *color* value can go either at the beginning or at the end of the declaration
    but never between the length values; otherwise, the `box-shadow` property won't
    work.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*颜色*值可以放在声明开始或结束处，但不能放在长度值之间；否则，`box-shadow`属性将不起作用。'
- en: inset
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: inset
- en: The sixth value in the list is `inset`. It creates the shadow inside the container,
    like a background. However, if there is actually a background color or image,
    the `inset` shadow will sit on top of it but under the content without affecting
    the layout of the child elements of the container.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的第六个值是`inset`。它创建容器内的阴影，就像背景一样。然而，如果实际上有背景颜色或图像，`inset`阴影将位于其上方但内容下方，不影响容器子元素的布局。
- en: This value is optional. If this value is not declared, the shadow defaults to
    displaying the shadow outside the element.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 此值是可选的。如果没有声明此值，阴影默认显示在元素外部。
- en: This value can go either at the beginning or at the end of the declaration but
    never between the length values; otherwise, the `box-shadow` property won't work.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 此值可以放在声明开始或结束处，但不能放在长度值之间；否则，`box-shadow`属性将不起作用。
- en: '**CSS**:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE11]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Display and visibility
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示和可见性
- en: Display properties are some of the most widely used CSS features in web design
    and development.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 显示属性是网页设计和开发中最广泛使用的CSS功能之一。
- en: Let's check them out.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来检查一下。
- en: all
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: all
- en: 'The `all` CSS property resets an element''s properties to its default values,
    and it looks like this:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`all` CSS属性将元素属性重置为其默认值，其外观如下：'
- en: '[PRE12]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Description
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The only properties that are not reset are the `direction` and `unicode-bidi`
    properties, which control text direction. This is important because text direction
    is required to understand the content. If these properties were reset by the `all`
    property, then text would run the opposite way it's supposed to, disrupting the
    message completely.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一不重置的属性是`direction`和`unicode-bidi`属性，它们控制文本方向。这很重要，因为文本方向是理解内容所必需的。如果这些属性被`all`属性重置，则文本将按照相反的方向运行，完全破坏信息。
- en: 'This property supports three keyword values: `initial`, `inherit`, and `unset`.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持三个关键字值：`initial`、`inherit`和`unset`。
- en: '`initial`: This changes all the properties of the element or the element''s
    parent to their initial values.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initial`: 这将更改元素或其父元素的属性，将其更改为它们的初始值。'
- en: '`inherit`: This changes all the properties of the element or the element''s
    parent to their parent values.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inherit`: 这将更改元素或其父元素的属性，将其更改为父值。'
- en: '`unset`: This changes all the properties of the element or the element''s parent
    to their parent values if those properties are inheritable, otherwise it will
    change them to their initial value.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unset`: 这将更改元素或其父元素的属性，如果这些属性是可继承的，则将其更改为父值，否则将更改为它们的初始值。'
- en: '**CSS**:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE13]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: clear
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: clear
- en: 'The `clear` CSS property specifies which side of an element, or both, should
    not *float*, and it looks like this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`clear` CSS属性指定元素哪一侧，或两侧，不应*浮动*，其外观如下：'
- en: '[PRE14]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Description
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: When the `clear` property is used, it clears the specific box in question, not
    its child elements. If we wanted to clear its child elements, we'd have to declare
    the `clear` property on them.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`clear`属性时，它清除特定的框，而不是其子元素。如果我们想清除其子元素，我们必须在它们上声明`clear`属性。
- en: When dealing with float-based grids, this property is crucial to the layout.
    That is because floated elements are taken out of the document flow. Thus, their
    parent container will not take them into account and its height isn't determined
    by those floated elements anymore.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理基于浮动的网格时，此属性对布局至关重要。这是因为浮动元素被移出文档流。因此，其父容器不会考虑它们，其高度也不再由这些浮动元素决定。
- en: 'So, adding a clearing declaration (with the `display` and `content` properties)
    to the parent''s `:after` pseudo element "*tells*" the parent element to consider
    the floated elements and thus the parent container''s height is now determined
    by the tallest floating child element. Let''s take a look at the following image:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，向父元素的`:after`伪元素添加清除声明（带有`display`和`content`属性）"*告诉*"父元素考虑浮动元素，因此父容器的高度现在由最高的浮动子元素决定。让我们看看下面的图片：
- en: '![Description](img/B03289_06_02.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![描述](img/B03289_06_02.jpg)'
- en: 'Here is a demo in CodePen: [http://tiny.cc/clearing-floats](http://tiny.cc/clearing-floats)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个CodePen上的演示：[http://tiny.cc/clearing-floats](http://tiny.cc/clearing-floats)
- en: 'The `clear` CSS property supports four values: `left`, `right`, `both`, and
    `none`.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`clear` CSS属性支持四个值：`left`、`right`、`both`和`none`。'
- en: '`left`: It means that floated elements to the left are not allowed.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`left`: 这意味着不允许向左浮动元素。'
- en: '`right`: It means that floated elements to the right are not allowed.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`right`: 这意味着不允许向右浮动元素。'
- en: '`both`: It means that floated elements, both left and right, are not allowed.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`both`: 这意味着不允许左右两侧的浮动元素。'
- en: '`none`: This is the default value. No clearing is performed and floating elements
    to both sides are allowed.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`: 这是默认值。不执行清除操作，允许两侧都有浮动元素。'
- en: '**CSS**:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE15]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: display
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: display
- en: 'The `display` CSS property defines how an element (box) should be or should
    not be displayed on a page. It looks like this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`display` CSS属性定义了元素（框）应在页面上如何显示或不应显示。它看起来像这样：'
- en: '[PRE16]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Description
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property accepts about 25 keyword values; some of them are very obscure
    and rarely used. Let''s focus on the 15 most relevant ones:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性接受大约25个关键字值；其中一些非常晦涩且很少使用。让我们关注最相关的15个：
- en: '`block`'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`block`'
- en: '`flex`'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex`'
- en: '`grid`'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid`'
- en: '`inline`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline`'
- en: '`inline-block`'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline-block`'
- en: '`inline-flex`'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline-flex`'
- en: '`none`'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`'
- en: '`table`'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table`'
- en: '`table-cell`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-cell`'
- en: '`table-column`'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-column`'
- en: '`table-column-group`'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-column-group`'
- en: '`table-footer-group`'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-footer-group`'
- en: '`table-header-group`'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-header-group`'
- en: '`table-row`'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-row`'
- en: '`table-row-group`'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-row-group`'
- en: '`block`: Makes an element be displayed as a block-level element, like a `<div>`
    tag or an `<h1>` element.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`block`: 将元素显示为块级元素，就像`<div>`标签或`<h1>`元素一样。'
- en: '`flex`: Makes an element be displayed as a block-level element and lays out
    its content based on the `Flexbox` model.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex`: 将元素显示为块级元素，并根据`Flexbox`模型布局其内容。'
- en: '`grid`: Makes an element be displayed as a block-level element and lays out
    its content based on the `Grid` model.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid`: 将元素显示为块级元素，并根据`Grid`模型布局其内容。'
- en: '`inline`: Makes an element be displayed as an inline-level element, like a
    link `<a>` element.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline`: 将元素显示为内联级元素，就像链接`<a>`元素一样。'
- en: '`inline-block`: Makes an element be displayed as an `inline-block` element,
    like a list `<li>` element.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline-block`: 将元素显示为内联块级元素，就像列表`<li>`元素一样。'
- en: '`inline-flex`: Makes an element be displayed as an inline element and lays
    out its content based on the `Flexbox` model.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inline-flex`: 将元素显示为内联元素，并根据`Flexbox`模型布局其内容。'
- en: '`none`: Hides the element from rendering in the browser. The element still
    exists in the markup though. When this value is applied to an element, the browser
    does not render the element and all its children.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`: 隐藏元素在浏览器中的渲染。尽管如此，元素仍然存在于标记中。当此值应用于元素时，浏览器不会渲染该元素及其所有子元素。'
- en: Table-related values
  id: totrans-188
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 表相关值
- en: 'In the following list, all the `table-related` values are mapped to an HTML
    element. So when any of those values are applied to an element, they make that
    element behave as a `table-related` element. Let''s take a look at the attributes:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下列表中，所有`table-related`值都映射到一个HTML元素。因此，当这些值应用于元素时，它们使该元素表现得像`table-related`元素。让我们看看属性：
- en: table = `<table>`
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table = `<table>`
- en: table-cell = `<td>`
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-cell = `<td>`
- en: table-column = `<col>`
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-column = `<col>`
- en: table-column-group = `<colgroup>`
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-column-group = `<colgroup>`
- en: table-footer-group = `<tfoot>`
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-footer-group = `<tfoot>`
- en: table-header-group = `<thead>`
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-header-group = `<thead>`
- en: table-row = `<tr>`
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-row = `<tr>`
- en: table-row-group = `<tbody>`
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table-row-group = `<tbody>`
- en: 'Visit MDN for a list of all the display values: [http://tiny.cc/mdn-display](http://tiny.cc/mdn-display)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 访问MDN以获取所有显示值的列表：[http://tiny.cc/mdn-display](http://tiny.cc/mdn-display)
- en: '**CSS**:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE17]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: opacity
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 透明度
- en: 'The `opacity` CSS property defines the transparency (opacity) of an element,
    and it looks like this:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 'The `opacity` CSS property defines the transparency (opacity) of an element,
    and it looks like this:'
- en: '[PRE18]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Description
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: When the `opacity` property is applied to an element, the element itself and
    its children are affected.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当`opacity`属性应用于一个元素时，该元素及其子元素都会受到影响。
- en: This property supports a *numeric* value ranging from 0.0 (zero) to 1.0, which
    is the default value. A value of 0 is completely transparent, as in 0 percent
    opaque, and 1 is 100 percent opaque, no transparency whatsoever. Decimal numbers
    are allowed.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持从0.0（零）到1.0的数值范围，默认值为1.0。值为0表示完全透明，即0%不透明，值为1表示100%不透明，没有任何透明度。允许使用小数。
- en: This property behaves the same as the alpha channel value used in the RGBa and
    HSLa color modes.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性的行为与RGBa和HSLa颜色模式中使用的alpha通道值相同。
- en: '**CSS**:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE19]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: filter
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`filter`'
- en: 'The `filter` CSS property allows us to apply visual effects to an `img` element
    or to the `background` or `border` properties, and it looks like this:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 'The `filter` CSS property allows us to apply visual effects to an `img` element
    or to the `background` or `border` properties, and it looks like this:'
- en: '[PRE20]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Description
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: A few examples of CSS filters are blur, turning a color image into grayscale
    or sepia, or changing its opacity.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: CSS滤镜的一些例子包括模糊、将彩色图像转换为灰度或棕褐色，或改变其透明度。
- en: Tip
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This `filter` property is not the same as Microsoft's proprietary `filter` property
    that only IE supports. Unlike Microsoft's proprietary filters, which are not part
    of a standard, this CSS `filter` property is part of a work in progress of the
    W3C.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: This `filter` property is not the same as Microsoft's proprietary `filter` property
    that only IE supports. Unlike Microsoft's proprietary filters, which are not part
    of a standard, this CSS `filter` property is part of a work in progress of the
    W3C.
- en: This property supports 11 values. These values are called CSS functions. Multiple
    functions can be declared in the same selector, separated by a space.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持11个值。这些值被称为CSS函数。可以在同一个选择器中声明多个函数，用空格分隔。
- en: 'Let''s see the list:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看列表：
- en: '`blur()`'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blur()`'
- en: '`brightness()`'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`brightness()`'
- en: '`contrast()`'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contrast()`'
- en: '`drop-shadow()`'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drop-shadow()`'
- en: '`grayscale()`'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灰度
- en: '`hue-rotate()`'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hue-rotate()`'
- en: '`invert()`'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`invert()`'
- en: '`opacity()`'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`opacity()`'
- en: '`saturate()`'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`saturate()`'
- en: '`sepia()`'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sepia()`'
- en: '`url()`'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url()`'
- en: blur()
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`blur()`'
- en: This gives a **smudge** effect. Values are declared as *length* values (`px`,
    `em`, `in`, `mm`, `cm`, `vw` and so on). The higher the value, the more intense
    the blur effect is (and vice versa).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生一种**模糊**效果。值以长度值（`px`、`em`、`in`、`mm`、`cm`、`vw`等）声明。值越高，模糊效果越强烈（反之亦然）。
- en: Percentage and negative values are not allowed, but decimal values are allowed.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许使用百分比和负值，但允许使用小数。
- en: brightness()
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`brightness()`'
- en: This modifies the illumination of an image. Values are declared as either a
    *percentage* or a *number* without a unit, for example, 10% and 0.5%.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这会修改图像的照明。值以百分比或没有单位的数字声明，例如，10%和0.5%。
- en: A value of 100% leaves the element unchanged, and a value of 0% makes the element
    completely black. Values over 100% are allowed and create a more intense effect.
    There is no limit to the value.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 值为100%保持元素不变，值为0%使元素完全变黑。允许使用大于100%的值，以产生更强烈的效果。值没有上限。
- en: Then, a value of 1 leaves the element unchanged; a value of 0 makes the element
    completely black. Values over 1 are allowed and create a more intense effect.
    There is no limit to the value. Negative values are not valid.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，值为1保持元素不变；值为0使元素完全变黑。允许使用大于1的值，以产生更强烈的效果。值没有上限。
- en: contrast()
  id: totrans-237
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 对比度
- en: This modifies the contrast of an element. Values are declared as either a *percentage*
    or a *number* without a unit, for example, 10% and 0.5%.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 这会修改元素的对比度。值以百分比或没有单位的数字声明，例如，10%和0.5%。
- en: A value of 100% leaves the element unchanged, and a value of 0% makes the element
    completely black. Values over 100% are allowed and create a more intense effect.
    There is no limit to the value.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 值为100%保持元素不变，值为0%使元素完全变黑。允许使用大于100%的值，以产生更强烈的效果。值没有上限。
- en: Then, a value of 1 leaves the element unchanged; a value of 0 makes the element
    completely black. Values over 1 are allowed and create a more intense effect.
    There is no limit to the value. Negative values are not valid, and decimal values
    are allowed.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，值为1保持元素不变；值为0使元素完全变黑。允许使用大于1的值，以产生更强烈的效果。值没有上限。负值无效，允许使用小数。
- en: drop-shadow()
  id: totrans-241
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: drop-shadow()
- en: This adds a shadow under the element.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在元素下方添加一个阴影。
- en: 'This function works almost exactly the same way as the `box-shadow` property
    with two differences: the `drop-shadow()` function doesn''t support the `spread-radius`
    attribute or the `inset` values.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数几乎与`box-shadow`属性完全相同，但有两个不同之处：`drop-shadow()`函数不支持`spread-radius`属性或`inset`值。
- en: Please refer to the `box-shadow` property for a detailed description of all
    the values.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅`box-shadow`属性以获取所有值的详细描述。
- en: Additionally, some browsers actually provide hardware acceleration when using
    this function, which eventually improves performance. You know how it goes, anything
    we can do to improve performance is always a+1.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些浏览器在使用此函数时实际上会提供硬件加速，这最终会提高性能。你知道的，我们能做的任何提高性能的事情都是加分项。
- en: grayscale()
  id: totrans-246
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: grayscale()
- en: This converts an element to grayscale. Values are declared as either a *percentage*
    or a *number* without a unit, for example, 10% and 0.5%.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 这将元素转换为灰度。值声明为不带单位的*百分比*或*数字*，例如，10%和0.5%。
- en: A value of 0% leaves the element unchanged; a value of 100% makes the element
    grayscale. Values over 100% are not allowed.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 0%的值不会改变元素；100%的值将元素转换为灰度。不允许超过100%的值。
- en: A value of 0 leaves the element unchanged, and a value of 1 makes the element
    grayscale. Values over 1 are not allowed. Negative values are not valid, and decimal
    values are allowed.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 0的值不会改变元素，而1的值将元素转换为灰度。不允许超过1的值。负值无效，允许使用小数。
- en: hue-rotate()
  id: totrans-250
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: hue-rotate()
- en: This applies a hue rotation to the element. It accepts an *angle* value.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这将对元素应用色调旋转。它接受一个*角度*值。
- en: The angle value defines the degrees around the color wheel the element sample
    will be modified to. There isn't a maximum value, however, if the value is larger
    than `360deg`, the rotation will just go around. For example, if we declare `380deg`,
    that would the same as `20deg`.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 角度值定义了元素样本将修改到的颜色轮上的度数。然而，如果没有最大值，如果值大于`360deg`，旋转将只是循环。例如，如果我们声明`380deg`，那么它等同于`20deg`。
- en: invert()
  id: totrans-253
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: invert()
- en: The `invert()` function inverts the color of the element. If used in an image,
    it makes the image look like a film negative.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`invert()`函数反转元素的颜色。如果用于图像，它会使图像看起来像负片。'
- en: A value of 100% completely inverts the element's color; a value of 0% leaves
    the element unchanged. Values over 100% are not allowed.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 100%的值完全反转元素的颜色；0%的值不会改变元素。不允许超过100%的值。
- en: A value of 1 completely inverts the element's color, and a value of 0 leaves
    the element unchanged. Values over 1 are not allowed.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 1的值完全反转元素的颜色，而0的值不会改变元素。不允许超过1的值。
- en: Negative values are not valid, and decimal values are allowed.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 负值无效，允许使用小数。
- en: opacity()
  id: totrans-258
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: opacity()
- en: It defines the transparency (opacity) of an element. When this function is applied
    to an element, the element itself and its children are affected.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 它定义了元素的透明度（不透明度）。当此函数应用于元素时，元素及其子元素都会受到影响。
- en: This function supports a numeric value ranging from 0 (zero) to 1, which is
    the default value. A value of 0 is completely transparent, as in 0% opaque, and
    1 is 100% opaque, no transparency whatsoever.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数支持从0（零）到1的数值范围，这是默认值。0是完全透明的，就像0%不透明一样，而1是100%不透明，没有任何透明度。
- en: Negative values are not valid, and decimal values are allowed.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 负值无效，允许使用小数。
- en: saturate()
  id: totrans-262
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: saturate()
- en: It affects the saturation levels of an element. Values are declared as either
    a *percentage* or a *number* without a unit, for example, 10% and 0.5%.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 它影响元素的饱和度级别。值声明为不带单位的*百分比*或*数字*，例如，10%和0.5%。
- en: The default saturation value of an element is 100%, or 1 if using a unitless
    number.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 元素的默认饱和度值为100%，或使用无单位数字时的1。
- en: A value of 0% completely desaturates the element (it removes all color leaving
    the element in grayscale); a value of 100% leaves the element unchanged. Values
    over 100% are allowed, creating a more intense effect.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 0%的值完全去饱和元素（它移除所有颜色，使元素变为灰度）；100%的值不会改变元素。允许超过100%的值，创建更强烈的效果。
- en: A value of 0 completely desaturates the element (it removes all color leaving
    the element in grayscale), and a value of 1 leaves the element unchanged. Values
    over 1 are allowed, creating a more intense effect.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 0的值完全去饱和元素（它移除所有颜色，使元素变为灰度），而1的值不会改变元素。允许超过1的值，创建更强烈的效果。
- en: sepia()
  id: totrans-267
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: sepia()
- en: This converts an element to sepia—think of a grayscale image but in shades of
    brown.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 这会将元素转换为棕褐色——想象一下灰度图像，但以棕色色调呈现。
- en: A value of 100% completely turns the element to sepia; a value of 0% leaves
    the element unchanged. Values over 100% are not allowed.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 值为 100% 完全将元素转换为棕褐色；值为 0% 保持元素不变。不允许超过 100% 的值。
- en: A value of 1 completely turns the element to sepia; a value of 0 leaves the
    element unchanged. Values over 1 are not allowed. Negative values are not valid.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 值为 1 完全将元素转换为棕褐色；值为 0 保持元素不变。不允许超过 1 的值。负值无效。
- en: url()
  id: totrans-271
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: url()
- en: It takes the location of an XML file with an SVG filter to be applied to the
    element. The URL may include an anchor to a specific filter element in the SVG.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 它接受一个 XML 文件的位置，该文件包含应用于元素的 SVG 过滤器。URL 可以包含指向 SVG 中特定过滤元素的锚点。
- en: '**CSS**:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE21]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: overflow
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: overflow
- en: 'The `overflow` CSS property defines how a block level element should handle
    content that "*bleeds*" (overflows) outside its boundaries, and it looks like
    this:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`overflow` CSS 属性定义了块级元素应该如何处理超出其边界的内容（“溢出”），其外观如下：'
- en: '[PRE22]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Description
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: A peculiarity of the `overflow` property is that it is used to clear floats
    and make the parent container expand vertically to wrap the floating elements.
    This is accomplished by using any of the following values except `visible`.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`overflow` 属性的一个特性是它用于清除浮动，并使父容器垂直扩展以包裹浮动元素。这是通过使用以下任何值（除了 `visible`）来实现的。'
- en: However, a word of caution. When using the prior technique since it can have
    unforeseen effects. For example, if a child element has a `box-shadow`, the shadow
    could be clipped/hidden.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一个警告。当使用先前的技术时，可能会有意想不到的效果。例如，如果一个子元素有 `box-shadow`，阴影可能会被裁剪/隐藏。
- en: 'In order for content to overflow, the parent container needs to have a fixed
    height or the content needs to have a `white-space: nowrap;` declaration applied
    to it.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '为了使内容溢出，父容器需要具有固定高度，或者内容需要应用 `white-space: nowrap;` 声明。'
- en: 'This property supports four keyword values: `auto`, `hidden`, `scroll`, and
    `visible`.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持四个关键字值：`auto`、`hidden`、`scroll` 和 `visible`。
- en: '`auto`: This creates horizontal and vertical scrollbars only if necessary.
    In other words, if the content overflows the container in any direction, the browser
    will create scrollbars in one or both axes.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：只有当需要时才会创建水平和垂直滚动条。换句话说，如果内容在任何方向上超出容器，浏览器将在一个或两个轴上创建滚动条。'
- en: '`hidden`: This will clip/hide the content that''s outside of the element. No
    scrollbars are generated. This value is very popular when clearing floats. Again,
    be careful when using this value.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hidden`：这将裁剪/隐藏元素之外的内容。不会生成滚动条。这个值在清除浮动时非常受欢迎。再次提醒，使用此值时要小心。'
- en: '`scroll`: This creates horizontal and vertical scrollbars even if the content
    isn''t overflowing the container.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scroll`：即使内容没有超出容器，也会创建水平和垂直滚动条。'
- en: '`visible`: This is the default value. No content is clipped/hidden and no scrollbars
    are generated.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`visible`：这是默认值。不裁剪/隐藏任何内容，也不生成滚动条。'
- en: '**CSS**:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE23]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: overflow-x
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: overflow-x
- en: 'The `overflow-x` CSS property behaves the same as the `overflow` property,
    and it looks like this:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`overflow-x` CSS 属性的行为与 `overflow` 属性相同，其外观如下：'
- en: '[PRE24]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Description
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The difference is that the `overflow-x` property handles the overflow on the
    *X* axis (horizontally). Please refer to the description of `overflow`, since
    the values are the same.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 不同之处在于 `overflow-x` 属性处理的是 *X* 轴（水平）上的溢出。请参考 `overflow` 的描述，因为值是相同的。
- en: '**CSS**:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE25]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: overflow-y
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: overflow-y
- en: 'The `overflow-y` CSS property behaves like the `overflow` property, and it
    looks like this:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`overflow-y` CSS 属性的行为类似于 `overflow` 属性，其外观如下：'
- en: '[PRE26]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Description
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The difference is that the `overflow-y` property handles the overflow on the
    *Y* axis (vertically). Please refer to the prior description of `overflow`, since
    the values are the same.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 不同之处在于 `overflow-y` 属性处理的是 *Y* 轴（垂直）上的溢出。请参考 `overflow` 的先前描述，因为值是相同的。
- en: '**CSS**:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE27]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: visibility
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: visibility
- en: 'The `visibility` CSS property defines whether an element is visible or not,
    and it looks like this:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '`visibility` CSS 属性定义了元素是否可见，其外观如下：'
- en: '[PRE28]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Description
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `visibility` property is similar to `display: none;` in terms of hiding
    an element; the difference is that when hiding an element with the `visibility`
    property, the space the element occupies still affects the layout. It''s just
    "*invisible*". With `display: none;`, it''s like the element doesn''t even exist.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '在隐藏元素方面，`visibility` 属性类似于 `display: none;`，区别在于使用 `visibility` 属性隐藏元素时，该元素占据的空间仍然会影响布局。它只是“*不可见*”。使用
    `display: none;`，就像元素根本不存在一样。'
- en: The `visibility` CSS property is not inheritable; in other words, we can still
    make the child elements visible even if their parent container is not. It can
    also be used to hide rows and columns in tables.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`visibility` CSS 属性是不可继承的；换句话说，即使它们的父容器不可见，我们仍然可以使子元素可见。它也可以用于隐藏表格中的行和列。'
- en: 'This property supports three different keyword values: `collapse`, `hidden`,
    and `visible`.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持三个不同的关键字值：`collapse`、`hidden`和`visible`。
- en: '`collapse`: This is used only on table elements to remove rows or columns.
    However, the collapsed/hidden elements still affect the layout since they are
    still taking up their space. If this value is used in other elements than a table
    elements, they will be treated as if the value `hidden` is being used.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collapse`：这个属性仅用于表格元素，用于删除行或列。然而，折叠/隐藏的元素仍然会影响布局，因为它们仍然占据着它们的空间。如果在这个值用于除表格元素之外的元素上，它们将被视为使用了
    `hidden` 值。'
- en: '`hidden`: This is used to visually hide an element. However, any hidden elements
    still affect the layout because they are still taking up their space.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hidden`：这个属性用于视觉上隐藏一个元素。然而，任何隐藏的元素仍然会影响布局，因为它们仍然占据着它们的空间。'
- en: '`visible`: This is the default value. It makes an element visible.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`visible`：这是默认值。它使一个元素可见。'
- en: '**CSS**:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE29]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: z-index
  id: totrans-315
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: z-index
- en: 'The `z-index` CSS property defines the stacking order of elements. Think of
    it in this way: elements sometimes overlap, like a stack of poker cards on a table.
    The card sitting at the top of the stack has the highest `z-index`, the card sitting
    at the bottom has the lowest `z-index`.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`z-index` CSS 属性定义了元素的堆叠顺序。可以这样想：元素有时会重叠，就像桌子上的一叠扑克牌。位于堆叠顶部的牌具有最高的 `z-index`，位于底部的牌具有最低的
    `z-index`。'
- en: For this property to work, the element has to have a position `property` declared
    with any value different from `static`.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个属性生效，元素必须有一个声明了任何不同于 `static` 值的 `position` 属性。
- en: Description
  id: totrans-318
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `z-index` property accepts two values: a *number* and a *keyword* value.'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`z-index` 属性接受两个值：一个*数字*和一个*关键字*值。'
- en: '**Number value**: This is also called an "**integer**". It''s just a number
    without a unit.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数值类型**：这也可以称为一个“**整数**”。它只是一个没有单位的数字。'
- en: '**auto**: This is the default value. The stacking order of elements is the
    same as their parent.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**auto**：这是默认值。元素的堆叠顺序与它们的父元素相同。'
- en: '**CSS**:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE30]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Masking and clipping
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 遮罩和裁剪
- en: 'These two features allow us to hide parts of an element in order to show a
    background image or color, or to give an element a special shape. Both terms can
    be a bit confusing, so let''s see a brief description of each:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个特性允许我们隐藏元素的一部分，以便显示背景图像或颜色，或者给元素一个特殊的形状。这两个术语可能有点令人困惑，所以让我们简要地描述每个术语：
- en: '**Clipping** is done with vectors or paths since this CSS feature was taken
    from the SVG specification. It creates a solid edge between the element and its
    background.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**裁剪**是通过向量或路径完成的，因为这项 CSS 功能是从 SVG 规范中借鉴的。它创建了一个元素与其背景之间的实边。'
- en: '**Masking**, on the other hand, uses images/bitmaps. With images, we can have
    "*feathered*" or blurred edges, whereas with clipping we have straight edges.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一方面，**遮罩**使用图像/位图。使用图像，我们可以有“*羽化*”或模糊的边缘，而使用裁剪则有直边。
- en: Let's check these properties out.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这些属性。
- en: mask
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask
- en: 'The `mask` CSS property is the shorthand for the `mask-clip`, `mask-composite`,
    `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, and
    `mask-size` properties. We''ll see each of these in more detail later. The `mask`
    property looks like this:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask` CSS 属性是 `mask-clip`、`mask-composite`、`mask-image`、`mask-mode`、`mask-origin`、`mask-position`、`mask-repeat`
    和 `mask-size` 属性的缩写。我们将在稍后更详细地了解每个属性。`mask` 属性看起来是这样的：'
- en: '[PRE31]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Description
  id: totrans-332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: A group of all the prior properties is called a "*mask layer*".
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 所有先前属性的组合被称为一个“*遮罩层*”。
- en: It's recommended to use the shorthand syntax over individual specific properties,
    since the shorthand resets undeclared properties to their initial values. This
    is helpful because it makes it easier to override values later in the cascade,
    thus avoiding specificity issues and potential use of the `!important` directive.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用简写语法而不是单个特定属性，因为简写语法会将未声明的属性重置为其初始值。这很有用，因为它使得在层叠中稍后覆盖值变得更容易，从而避免了特定性问题以及潜在的使用
    `!important` 指令。
- en: Additionally, `mask-clip` and `mask-origin` use a `geometry` value. If we declare
    only one value, then both properties will use that value. With two values, `mask-clip`
    will use the first one and `mask-origin` will use the second one.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`mask-clip` 和 `mask-origin` 使用 `geometry` 值。如果我们只声明一个值，那么这两个属性都将使用该值。如果有两个值，`mask-clip`
    将使用第一个值，而 `mask-origin` 将使用第二个值。
- en: As I mentioned before, CSS masks use images, which means that we can reference
    a bitmap/raster file with a transparency or a background gradient with the `linear-gradient()`
    CSS function. We can even create a mask by referencing several images in the same
    declaration.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前提到的，CSS蒙版使用图像，这意味着我们可以使用 `linear-gradient()` CSS 函数引用具有透明度的位图/光栅文件或具有背景渐变的背景。我们甚至可以通过在同一个声明中引用多个图像来创建蒙版。
- en: 'There are two types of mask: *alpha* masks and *luminance* masks. We''ll see
    what each of these types of mask are later.'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的蒙版：*alpha* 蒙版和 *亮度* 蒙版。我们将在稍后了解每种类型蒙版的内容。
- en: '**CSS**:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE32]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: mask-clip
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-clip
- en: 'The `mask-clip` CSS property determines the area of the element that will be
    affected by the mask, and it looks like this:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-clip` CSS 属性确定元素受蒙版影响的区域，其外观如下：'
- en: '[PRE33]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Description
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property is similar to the `background-clip` CSS property. Refer to [Chapter
    4](ch04.html "Chapter 4. CSS Properties – Part 1"), *CSS Properties – Part 1*,
    for more information.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性类似于 `background-clip` CSS 属性。有关更多信息，请参阅[第4章](ch04.html "第4章。CSS属性 - 第1部分")，*CSS属性
    - 第1部分*。
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separated values of
    the `mask-image` property.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表 `mask-image` 属性逗号分隔值中的相应图像。
- en: 'It supports four keyword values: `border-box`, `content-box`, `padding-box`,
    and `no-clip`.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持四个关键字值：`border-box`、`content-box`、`padding-box` 和 `no-clip`。
- en: '`border-box`: This is the default value. If the element has any borders, they
    are seen through the mask.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`border-box`：这是默认值。如果元素有任何边框，它们将通过蒙版可见。'
- en: '`content-box`: Only the parts of the element that are inside its *content*
    area are visible through the mask.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`content-box`：只有元素内容区域内的部分通过蒙版可见。'
- en: '`padding-box`: If the element has any padding, it will be seen through the
    mask.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding-box`：如果元素有任何填充，它将通过蒙版可见。'
- en: '`no-clip`: The content is not *clipped*.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no-clip`：内容不会被 *裁剪*。'
- en: '**CSS**:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE34]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: mask-composite
  id: totrans-353
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-composite
- en: 'The `mask-composite` CSS property defines how multiple masks with different
    shapes are combined or *composited* to form a single mask, and it looks like this:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-composite` CSS 属性定义了如何将具有不同形状的多个蒙版组合或 *合成* 成单个蒙版，其外观如下：'
- en: '[PRE35]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Description
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `mask-composite` property works when `mask-image` is used and at least two
    mask images are declared. Multiple comma-separated keyword values can be present
    in the same declaration. Each value represents its corresponding image in the
    comma-separates values of the `mask-image` property.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-composite` 属性在 `mask-image` 被使用并且至少声明了两个蒙版图像时起作用。同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表
    `mask-image` 属性逗号分隔值中的相应图像。'
- en: 'The `mask-composite` CSS property supports four keyword values: `add`, `subtract`,
    `exclude`, and `intersect`.'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-composite` CSS 属性支持四个关键字值：`add`、`subtract`、`exclude` 和 `intersect`。'
- en: 'For example, picture part of triangle over part of a circle, where the triangle
    is on top and the circle below; the different types of *composite* make different
    shapes of masks:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一个三角形覆盖在圆形的一部分上，其中三角形在上，圆形在下；不同的 *合成* 类型会形成不同形状的蒙版：
- en: '![Description](img/B03289_06_03.jpg)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![描述](img/B03289_06_03.jpg)'
- en: '`intersect`: The shape of the mask is where the triangle and the circle overlap,
    or *intersect*. The rest of the shape is discarded.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`intersect`：蒙版的形状是三角形和圆形重叠的部分，或 *交集*。其余的形状将被丢弃。'
- en: '`exclude`: The part where the triangle and the circle intersect is discarded,
    and the rest of the elements is what makes the mask.'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exclude`：三角形和圆形相交的部分被丢弃，其余的元素构成了蒙版。'
- en: '`subtract`: Since the triangle is on top, it will *trim* or *crop* the circle,
    thus leaving a **Pac-Man** shape mask.'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subtract`：由于三角形位于上方，它将 *裁剪* 或 *裁剪* 圆形，从而留下一个 **吃豆人** 形状的蒙版。'
- en: '`add`: The triangle is fused to the circle creating a single shape that will
    be used as the mask.'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`add`：三角形与圆形融合，形成一个单一形状，该形状将用作蒙版。'
- en: '**CSS**:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE36]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: mask-image
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-image
- en: 'The `mask-image` CSS property defines the image or images to be used as mask
    layers on any given element, and it looks like this:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-image` CSS 属性定义了在给定元素上用作蒙版层的图像或图像，其形式如下：'
- en: '[PRE37]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Description
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `mask-image` property may also refer to `<mask>` elements in an SVG file.
    Multiple values are comma-separated. The images can be bitmap files, SVGs, and
    even CSS gradients that are images as well.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-image` 属性还可以引用 SVG 文件中的 `<mask>` 元素。多个值以逗号分隔。图像可以是位图文件、SVG，甚至是图像的 CSS
    渐变。'
- en: '**CSS**:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE38]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: mask-mode
  id: totrans-374
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-mode
- en: 'The `mask-mode` CSS property defines whether the mask layer is an `alpha` mask
    or a `luminance` mask. These terms are the actual keyword values, and it looks
    like this:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-mode` CSS 属性定义了蒙版层是 `alpha` 蒙版还是 `luminance` 蒙版。这些术语是实际的关键字值，其形式如下：'
- en: '[PRE39]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Description
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separates values of
    the `mask-image` property.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表 `mask-image` 属性逗号分隔值中对应的图像。
- en: Alpha masks
  id: totrans-379
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Alpha 蒙版
- en: Alpha masks use the *alpha channel* of the image. Whatever is transparent will
    be covered; whatever is opaque will show. Of course, a semi-transparent area on
    the image is partially covered.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: Alpha 蒙版使用图像的 *alpha 通道*。透明部分将被覆盖；不透明部分将显示出来。当然，图像上的半透明区域将被部分覆盖。
- en: Luminance masks
  id: totrans-381
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 亮度蒙版
- en: Luminance masks uses the *luminance values* of the image. Whatever is *white*
    on the image being used as mask will show. Whatever is black is hidden. Gray areas
    partially cover the image.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 亮度蒙版使用图像的 *亮度值*。在用作蒙版的图像上，*白色*的部分将显示出来。黑色部分将被隐藏。灰色区域部分覆盖图像。
- en: '**CSS**:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE40]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: mask-origin
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-origin
- en: 'The `mask-origin` CSS property defines the location or position of the mask
    layer in relation to the element''s box starting at the top left corner, and it
    looks like this:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-origin` CSS 属性定义了蒙版层相对于元素框从左上角开始的位置或位置，其形式如下：'
- en: '[PRE41]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Description
  id: totrans-388
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `mask-origin` property works in a similar way to the `background-origin`
    property. Refer to [Chapter 4](ch04.html "Chapter 4. CSS Properties – Part 1"),
    *CSS Properties – Part 1*, for more information.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-origin` 属性的工作方式与 `background-origin` 属性类似。有关更多信息，请参阅[第4章](ch04.html "第4章。CSS属性
    - 第1部分")，*CSS属性 - 第1部分*。'
- en: Now, this property can be used in both HTML and SVG elements. However, there
    are some keyword values that apply to one that won't work on the other.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，此属性可以在 HTML 和 SVG 元素中使用。然而，有些关键字值适用于一个，但在另一个中不起作用。
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separates values of
    the `mask-image` property.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表 `mask-image` 属性逗号分隔值中对应的图像。
- en: The HTML keyword values are `border-box`, `padding-box`, `margin-box`, and `content-box`.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 关键字值是 `border-box`、`padding-box`、`margin-box` 和 `content-box`。
- en: The SVG keyword values are `view-box`, `fill-box`, and `stroke-box`.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: SVG 关键字值是 `view-box`、`fill-box` 和 `stroke-box`。
- en: '`border-box`: The origin starts at the top left corner of the border box. It
    will include the border and any padding (if any is declared) when applying the
    mask, but it will not go beyond that border.'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`border-box`：原点从边框框的左上角开始。应用蒙版时将包括边框和任何填充（如果声明了），但不会超出该边框。'
- en: '`padding-box`: The origin starts at the top-left corner of the padding box.
    It will include the padding when applying the mask, but it will not include any
    borders if any are declared.'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding-box`：原点从填充框的左上角开始。应用蒙版时将包括填充，但如果声明了边框，则不包括任何边框。'
- en: '`margin-box`: The origin starts at the top-left corner of the margin box. It
    will include the margin, the border, and the padding when applying the mask.'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`margin-box`：原点从边框框的左上角开始。应用蒙版时将包括边距、边框和填充（如果声明了）。'
- en: '`content-box`: The origin starts at the top-left corner of the content box.
    It will include only the *content* area. No margins, padding, or borders are taken
    into consideration.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`content-box`：原点从内容框的左上角开始。它只包括 *内容* 区域。不考虑边距、填充或边框。'
- en: '`view-box`: It uses the closest SVG viewport as a reference box.'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`view-box`: 它使用最近的SVG视口作为参考框。'
- en: '`fill-box`: The position of the mask is relative to the *object bounding box*.'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fill-box`: 遮罩的位置相对于**对象边界框**。'
- en: '`stroke-box`: The position of the mask is relative to the *stroke bounding
    box*.'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stroke-box`: 遮罩的位置相对于**描边边界框**。'
- en: '**CSS**:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE42]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: mask-position
  id: totrans-403
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-position
- en: 'The `mask-position` CSS property defines the starting position of the mask,
    and it looks like this:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-position` CSS属性定义了遮罩的起始位置，其外观如下：'
- en: '[PRE43]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Description
  id: totrans-406
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property works similar to the `background-position` property. Refer to
    [Chapter 4](ch04.html "Chapter 4. CSS Properties – Part 1"), *CSS Properties –
    Part 1*, for more information.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性的工作方式与`background-position`属性类似。有关更多信息，请参阅[第4章](ch04.html "第4章。CSS属性 - 第1部分")，*CSS属性
    - 第1部分*。
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separates values of
    the `mask-image` property.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表`mask-image`属性逗号分隔值中对应的图像。
- en: 'The `mask-position` CSS property supports several types of values: four *keyword*
    values, `top`, `right`, `bottom`, and `left`; a *length* value, `px`, `em`, `in`,
    `mm`, `cm`, `vw`, and so on; and a *percentage* value such as 50%, 85%, and so
    on.'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-position` CSS属性支持几种类型的值：四个**关键字**值，`top`、`right`、`bottom`和`left`；一个**长度**值，`px`、`em`、`in`、`mm`、`cm`、`vw`等等；以及一个**百分比**值，如50%、85%等等。'
- en: '**CSS**:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE44]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: mask-repeat
  id: totrans-412
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-repeat
- en: 'The `mask-repeat` CSS property defines whether a mask layer is repeated or
    not, and it looks like this:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-repeat` CSS属性定义了遮罩层是否重复，其外观如下：'
- en: '[PRE45]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Description
  id: totrans-415
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property works in a similar way to the `background-repeat` property. Refer
    to [Chapter 4](ch04.html "Chapter 4. CSS Properties – Part 1"), *CSS Properties
    – Part 1*, for more information.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性的工作方式与`background-repeat`属性类似。有关更多信息，请参阅[第4章](ch04.html "第4章。CSS属性 - 第1部分")，*CSS属性
    - 第1部分*。
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separates values of
    the `mask-image` property.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表`mask-image`属性逗号分隔值中对应的图像。
- en: 'It supports six keyword values: `repeat`, `no-repeat`, `repeat-x`, `repeat-y`,
    `space`, and `round`.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持六个关键字值：`repeat`、`no-repeat`、`repeat-x`、`repeat-y`、`space`和`round`。
- en: '`repeat`: The mask will be repeated on both the *X* and *Y* axes. This is the
    default value.'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repeat`: 遮罩将在**X**轴和**Y**轴上重复。这是默认值。'
- en: '`no-repeat`: The mask is not repeated on any axis. The mask image is displayed
    only once.'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no-repeat`: 遮罩在任何轴向上都不会重复。遮罩图像只显示一次。'
- en: '`repeat-x`: The mask is repeated on the *X* axis (horizontally).'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repeat-x`: 遮罩在**X**轴（水平方向）上重复。'
- en: '`repeat-y`: The mask is repeated on the *Y* axis (vertically).'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repeat-y`: 遮罩在**Y**轴（垂直方向）上重复。'
- en: '`space`: The mask is repeated as many times as possible without being clipped
    or cut in both the *X* and *Y* axes.'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space`: 遮罩在**X**轴和**Y**轴上尽可能多次重复，而不会被裁剪或切割。'
- en: '`round`: Similar to the space value, the difference is that the mask images
    are rescaled in order to fit the specified direction.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`round`: 与`space`值类似，不同之处在于遮罩图像会按指定方向进行缩放以适应。'
- en: '**CSS**:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE46]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: mask-size
  id: totrans-427
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-size
- en: 'The `mask-size` CSS property defines the dimensions or size of a mask image,
    and it looks like this:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-size` CSS属性定义了遮罩图像的尺寸或大小，其外观如下：'
- en: '[PRE47]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Description
  id: totrans-430
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `mask-size` property works similar to the `background-size` property. Refer
    to [Chapter 4](ch04.html "Chapter 4. CSS Properties – Part 1"), *CSS Properties
    – Part 1*, for more information.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-size`属性的工作方式与`background-size`属性类似。有关更多信息，请参阅[第4章](ch04.html "第4章。CSS属性
    - 第1部分")，*CSS属性 - 第1部分*。'
- en: Multiple comma-separated keyword values can be present in the same declaration.
    Each value represents its corresponding image in the comma-separates values of
    the `mask-image` property.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个声明中可以存在多个以逗号分隔的关键字值。每个值代表`mask-image`属性逗号分隔值中对应的图像。
- en: 'The `mask-position` CSS property supports several types of value: a *length*
    value, a *percentage* value, and three *keyword* values.'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-position` CSS属性支持几种类型的值：一个**长度**值，一个**百分比**值，以及三个**关键字**值。'
- en: '`Length value`: This is when we use one of the following units: `px`, `em`,
    `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`：这是当我们使用以下单位之一时：`px`、`em`、`in`、`mm`、`cm`、`vw`等等。'
- en: '`Percentage value`: This is when we use percentages such as 50%, 85%, and so
    on.'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`：这是当我们使用百分比，如50%、85%等等时。'
- en: '`contain`: This scales the image mask without distorting its aspect ratio to
    fit the maximum width or height of the element.'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contain`：此选项将图像遮罩缩放，而不扭曲其宽高比，以适应元素的宽度和高度的最大值。'
- en: '`cover`: This scales the image mask and distorts it if necessary in order to
    fit the maximum width or height of the element. If the image mask is larger on
    its width or height, it will get clipped.'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cover`：此选项将图像遮罩缩放并扭曲（如果需要），以适应元素的宽度和高度的最大值。如果图像遮罩在宽度和高度上更大，它将被裁剪。'
- en: '`auto`: This scales the image mask to the actual size of the image''s intrinsic
    proportions without distorting it.'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：此选项将图像遮罩缩放至图像固有比例的实际大小，而不会扭曲图像。'
- en: '**CSS**:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE48]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: mask-type
  id: totrans-441
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-type
- en: The `mask-type` CSS property is specifically for SVG files. It specifies if
    an SVG `<mask>` element is an *alpha* or a *luminance* mask.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-type` CSS 属性专门用于 SVG 文件。它指定 SVG `<mask>` 元素是 *alpha* 遮罩还是 *luminance*
    遮罩。'
- en: For the definitions of *alpha* and *luminance* masks, refer to the `mask-mode`
    property.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 *alpha* 和 *luminance* 遮罩的定义，请参考 `mask-mode` 属性。
- en: mask-border
  id: totrans-444
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border
- en: 'The `mask-border` CSS property is the shorthand for the `mask-border-source`,
    `mask-border-mode`, `mask-border-slice`, `mask-border-width`, `mask-border-outset`,
    and `mask-border-repeat` properties. It looks like this:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border` CSS 属性是 `mask-border-source`、`mask-border-mode`、`mask-border-slice`、`mask-border-width`、`mask-border-outset`
    和 `mask-border-repeat` 属性的缩写。其外观如下：'
- en: '[PRE49]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Description
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Using the shorthand is recommended because any values that are not declared
    are set to their initial values, thus making it easier to override down the road,
    minimizing the use of the `!important` directive.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用缩写，因为未声明的任何值都将设置为它们的初始值，这使得在以后覆盖时更加容易，从而最小化了 `!important` 指令的使用。
- en: '**CSS**:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE50]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: mask-border-source
  id: totrans-451
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-source
- en: The `mask-border-source` CSS property defines an image that is to be used in
    the `border-image` declaration.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-source` CSS 属性定义了一个要在 `border-image` 声明中使用的图像。'
- en: '**CSS**:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE51]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: mask-border-mode
  id: totrans-455
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-mode
- en: The `mask-border-mode` CSS property defines whether the image used for the mask
    is an *alpha* mask or a *luminance* mask.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-mode` CSS 属性定义了用于遮罩的图像是 *alpha* 遮罩还是 *luminance* 遮罩。'
- en: For the definitions of *alpha* and *luminance* masks, refer to the `mask-mode`
    property.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 *alpha* 和 *luminance* 遮罩的定义，请参考 `mask-mode` 属性。
- en: '**CSS**:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE52]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: mask-border-slice
  id: totrans-460
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-slice
- en: 'The `mask-border-slice` CSS property is used to **slice** the image into nine
    parts, and it looks like this:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-slice` CSS 属性用于将图像切割成九部分，其外观如下：'
- en: '[PRE53]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Description
  id: totrans-463
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'Think of this example: take a square image and trace two vertical lines and
    then two horizontal lines. We end up with nine parts, like **Tic-Tac-Toe**, on
    top of the image.'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 想象这个例子：取一个正方形图像，画两条垂直线和两条水平线。我们最终在图像上得到九个部分，就像 **井字棋** 一样。
- en: 'This property supports one, two, three, or four keyword offset values: `top`,
    `right`, `bottom`, `left`, and `fill`. These values, except `fill`, can be declared
    using either a *number* value without a unit or a *percentage* value using 50%,
    85%, and so on.'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持一个、两个、三个或四个关键字偏移值：`top`、`right`、`bottom`、`left` 和 `fill`。这些值（除了 `fill`）可以使用不带单位的
    *number* 值或使用 50%、85% 等的 *percentage* 值声明。
- en: If one value is declared, all four sides take that value. If two values are
    declared, the first value is for the top and bottom sides, and the second value
    for the left and right sides. If three values are declared, then the first value
    is for the top side, the second value is for the left and right sides, and the
    third for the bottom side. If four values are declared, they correspond to top,
    right, bottom, and left sides.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 如果声明了一个值，则所有四边都采用该值。如果声明了两个值，则第一个值用于顶部和底部边，第二个值用于左侧和右侧边。如果声明了三个值，则第一个值用于顶部边，第二个值用于左侧和右侧边，第三个值用于底部边。如果声明了四个值，则它们分别对应顶部、右侧、底部和左侧边。
- en: Tip
  id: totrans-467
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When declaring a unitless value with a bitmap image mask, the value is interpreted
    as if it were pixels.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用位图图像遮罩声明无单位值时，该值被解释为像素。
- en: fill
  id: totrans-469
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: fill
- en: By default, the center of the image mask is discarded and treated as empty.
    If this value is present, the center will be taken into account and will become
    part of the mask.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，图像遮罩的中心会被丢弃并视为空白。如果存在此值，则中心将被考虑，并成为遮罩的一部分。
- en: '**CSS**:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE54]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: mask-border-width
  id: totrans-473
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-width
- en: 'The `mask-border-width` CSS property scales the mask image slices created by
    the `mask-border-slices` property, and it looks like this:'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-width` CSS 属性缩放由 `mask-border-slices` 属性创建的遮罩图像切片，其外观如下：'
- en: '[PRE55]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Description
  id: totrans-476
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This `mask-border-width` property supports one, two, three, or four keyword
    offset values: `top`, `right`, `bottom`, `left`, and `auto`. These values, except
    `auto`, can be declared using either a *number* value without a unit, or a *percentage*
    value such as 50%, 85%, and so on.'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 该 `mask-border-width` 属性支持一个、两个、三个或四个关键字偏移值：`top`、`right`、`bottom`、`left` 和
    `auto`。除了 `auto` 之外，这些值可以使用不带单位的 *number* 值或使用如 50%、85% 等的 *percentage* 值来声明。
- en: If one value is declared, all four sides take that value. If two values are
    declared, the first value is for the top and bottom sides, and the second value
    for the left and right sides. If three values are declared, then the first value
    is for the top side, the second value is for the left and right sides, and the
    third for the bottom side. If four values are declared, they correspond to top,
    right, bottom and left sides.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 如果声明了一个值，则所有四个边都采用该值。如果声明了两个值，则第一个值用于顶部和底部边，第二个值用于左侧和右侧边。如果声明了三个值，则第一个值用于顶部边，第二个值用于左侧和右侧边，第三个值用于底部边。如果声明了四个值，它们分别对应顶部、右侧、底部和左侧边。
- en: auto
  id: totrans-479
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: auto
- en: It makes the mask border use the intrinsic width or height of the image slice.
    The browser is the one that decides if it needs to use this intrinsic width or
    height or not.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 它使遮罩边框使用图像切片的内联宽度和高度。浏览器将决定是否需要使用这个内联宽度和高度。
- en: '**CSS**:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE56]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: mask-border-outset
  id: totrans-483
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-outset
- en: 'The `mask-border-outset` CSS property defines the amount the border mask image
    area extends beyond its border box, and it looks like this:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-outset` CSS 属性定义了边框遮罩图像区域超出其边框框的量，其外观如下：'
- en: '[PRE57]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Description
  id: totrans-486
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports one, two, three, or four keyword outset values: `top`,
    `right`, `bottom`, and `left`. These values can be declared using either a *number*
    value without a unit, or a *length* value using `px`, `em`, `in`, `mm`, `cm`,
    `vw`, and so on. The *number* value without a unit is a multiplier of the `border-width`
    property of the element.'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持一个、两个、三个或四个关键字外延值：`top`、`right`、`bottom` 和 `left`。这些值可以使用不带单位的 *number*
    值或使用 `px`、`em`、`in`、`mm`、`cm`、`vw` 等单位的 *length* 值来声明。不带单位的 *number* 值是元素 `border-width`
    属性的乘数。
- en: If one value is declared, all four sides take that value. If two values are
    declared, the first value is for the top and bottom sides, and the second value
    for the left and right sides. If three values are declared, then the first value
    is for the top side, the second value is for the left and right sides, and the
    third for the bottom side. If four values are declared, they correspond to the
    top, right, bottom and left sides.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 如果声明了一个值，则所有四个边都采用该值。如果声明了两个值，则第一个值用于顶部和底部边，第二个值用于左侧和右侧边。如果声明了三个值，则第一个值用于顶部边，第二个值用于左侧和右侧边，第三个值用于底部边。如果声明了四个值，它们分别对应顶部、右侧、底部和左侧边。
- en: '**CSS**:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE58]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: mask-border-repeat
  id: totrans-491
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mask-border-repeat
- en: 'The `mask-border-repeat` CSS property defines how the image mask for all four
    sides and the center are scaled and tiled (repeated) around the element, and it
    looks like this:'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-repeat` CSS 属性定义了图像蒙版如何缩放和铺贴（重复）在元素的所有四个边和中心周围，其外观如下：'
- en: '[PRE59]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Description
  id: totrans-494
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `mask-border-repeat` property supports one or two keyword values. The values
    are: `repeat`, `round`, `stretch` and `space`.'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '`mask-border-repeat` 属性支持一个或两个关键字值。这些值是：`repeat`、`round`、`stretch` 和 `space`。'
- en: repeat
  id: totrans-496
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: repeat
- en: The mask border image is tiled (repeated). Under certain circumstances, the
    image mask can be clipped on the edges showing only part of it.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 遮罩边框图像是平铺（重复）的。在特定情况下，图像蒙版可以在边缘被裁剪，只显示其中的一部分。
- en: round
  id: totrans-498
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: round
- en: This works in a similar way to `repeat`; the difference is that the image mask
    is scaled to fit exactly in the allotted distance without clipping the image mask.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 这与 `repeat` 的作用方式类似；区别在于图像蒙版被缩放到正好适合分配的距离，而不会裁剪图像蒙版。
- en: stretch
  id: totrans-500
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: stretch
- en: This is the default value. The image mask is stretched to completely fill the
    area.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。图像蒙版被拉伸以完全填充区域。
- en: space
  id: totrans-502
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: space
- en: Similar to `repeat`, but the difference is that if the area isn't filled with
    complete image masks, it will distribute the space around the tiles.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `repeat` 类似，但不同之处在于，如果区域没有被完整的图像蒙版填满，它将分配围绕瓦片的空间。
- en: '**CSS**:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE60]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: clip-path
  id: totrans-506
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: clip-path
- en: 'The `clip-path` CSS property is used to partially or fully hide parts of an
    element and it looks like this:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '`clip-path` CSS 属性用于部分或完全隐藏元素的一部分，其外观如下：'
- en: '[PRE61]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Description
  id: totrans-509
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: We can say that `clip-path` is a form of *masking*. The difference is that clipping
    uses a vector graphic to do the clipping, rather than a bitmap/raster image.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以说`clip-path`是一种*遮罩*形式。区别在于裁剪使用矢量图形进行裁剪，而不是位图/光栅图像。
- en: This vector graphic can be a *basic shape* or an *SVG path*.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 这个矢量图形可以是*基本形状*或*SVG路径*。
- en: Tip
  id: totrans-512
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Note: The `clip` CSS property is now deprecated due to poor features and limitations
    with SVGs. The current and widely supported `clip-path` property is part of the
    SVG specification, and it''s been adopted by the CSS masking module.'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：由于SVG的特性和限制不佳，`clip` CSS属性现在已被弃用。当前的广泛支持的`clip-path`属性是SVG规范的一部分，并且已被CSS遮罩模块采用。
- en: The `clip-path` CSS property combined with the `shape-outside` property can
    create amazing layouts. With this combination, we can make a paragraph "*curve*"
    around a clipped element whose basic shape is also a curve or circle.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '`clip-path` CSS属性与`shape-outside`属性结合可以创建令人惊叹的布局。通过这种组合，我们可以使一个段落围绕一个裁剪元素“*弯曲*”，其基本形状也是一个曲线或圆形。'
- en: 'This property supports four values: three *functions*: `url()`, a *shape*,
    a *geometry box*, and one *keyword* value `none`.'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持四个值：三个*函数*：`url()`、一个*形状*、一个*几何框*，以及一个*关键字*值`none`。
- en: url()
  id: totrans-516
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: url()
- en: This CSS function points to an SVG `clipPath` element that will be used as the
    clipping path.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS函数指向一个SVG `clipPath` 元素，该元素将被用作裁剪路径。
- en: '**CSS**:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE62]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: circle()
  id: totrans-520
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: circle()
- en: 'This CSS function declares a circle as a clipping path. This function accepts
    two arguments: a *shape radius* and a *position*.'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS函数声明一个圆作为裁剪路径。此函数接受两个参数：一个*形状半径*和一个*位置*。
- en: '**Shape radius**: It defines the radius of the circle. It supports a *length*,
    a *percentage*, and two *keyword* values. Negative values are not allowed.'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**形状半径**：它定义了圆的半径。它支持*长度*、*百分比*和两个*关键字*值。不允许使用负值。'
- en: 'The two keyword values are: `closest-side` or `farthest-side`.'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两个关键字值是：`closest-side`或`farthest-side`。
- en: '`closest-side`: This is the default value. If this value is not declared, the
    browser will take the length from the center of the circle to its closest side,
    and create a circle based on that distance. With this, the circle never bleeds
    or overflows the content, it''s always complete.'
  id: totrans-524
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closest-side`：这是默认值。如果没有声明此值，浏览器将取圆的中心到其最近边的长度，并基于该距离创建一个圆。这样，圆永远不会溢出或超出内容，它总是完整的。'
- en: '`farthest-side`: This value will create a circle by taking the length from
    the center to the farthest side. This means that if the element has a side that
    is longer than the other, the circle will bleed or overflow on the opposite sides.'
  id: totrans-525
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`farthest-side`：此值将通过从中心到最远边的长度创建一个圆。这意味着如果元素有一边比另一边长，圆将溢出或溢出到对面。'
- en: '**Position**: It defines the location of the circle. The position value is
    preceded by the `at` word. If this value is not declared, the circle will be positioned
    at the center of the element. The values for this argument are the same as those
    of the `background-position` property.'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**位置**：它定义了圆的位置。位置值由`at`词 precede。如果没有声明此值，圆将位于元素的中心。此参数的值与`background-position`属性的值相同。'
- en: '**CSS**:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE63]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: ellipse()
  id: totrans-529
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: ellipse()
- en: This CSS function declares an ellipse as a clipping path. It takes the same
    arguments as the `circle()` function; the only difference is that it accepts two
    radii values, `rx` and `ry`, for the shape radius instead of one. `rx` represents
    the *X* axis and `ry` the *Y* axis.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS函数声明一个椭圆作为裁剪路径。它接受与`circle()`函数相同的参数；唯一的区别是它接受两个半径值，`rx`和`ry`，用于形状半径而不是一个。`rx`代表*X*轴，`ry`代表*Y*轴。
- en: '**CSS**:'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE64]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: inset()
  id: totrans-533
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: inset()
- en: This CSS function defines a rectangle shape inside the element. It can take
    one, two, three, or four offset values. The syntax is the same as the syntax of
    the `margin` property.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS函数在元素内部定义一个矩形形状。它可以接受一个、两个、三个或四个偏移值。其语法与`margin`属性的语法相同。
- en: It supports a *length* and a *percentage* value.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持*长度*和*百分比*值。
- en: Additionally, the `inset()` function also supports a `border-radius` value,
    which is optional. This value must be preceded by the term `round` before any
    *length* or *percentages* are declared.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`inset()`函数还支持一个可选的`border-radius`值。此值必须在声明任何*长度*或*百分比*之前，由术语`round` precede。
- en: '**CSS**:'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE65]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: polygon()
  id: totrans-539
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: polygon()
- en: This CSS function is used to declare more various types of shapes, usually irregular
    ones that are different from a square, a circle or an ellipse.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS函数用于声明更多种类的形状，通常是不同于正方形、圆形或椭圆的不规则形状。
- en: '*Coordinate pairs* are used to declare the points of the polygon; each pair
    specifies the position of a point. The first argument represents the X-position
    and the second argument, the Y-position coordinates. The first and last coordinate
    points are closed automatically by the browser. The coordinate values are comma-separated
    and support a *length* or a *percentage* value.'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '*坐标对* 用于声明多边形的点；每一对指定一个点的位置。第一个参数表示 X 位置，第二个参数表示 Y 位置坐标。浏览器会自动关闭第一个和最后一个坐标点。坐标值用逗号分隔，并支持
    *长度* 或 *百分比* 值。'
- en: 'Now, creating polygons by hand is not only a major undertaking but it could
    be very time consuming. The best solution is to use a tool for the creation process:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，手动创建多边形不仅是一项重大任务，而且可能非常耗时。最好的解决方案是使用工具进行创建过程：
- en: Bennet Feely's *Clippy* ([http://bennettfeely.com/clippy/](http://bennettfeely.com/clippy/))
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bennet Feely 的 *Clippy* ([http://bennettfeely.com/clippy/](http://bennettfeely.com/clippy/))
- en: '*Clip Path* *Generator* ([http://cssplant.com/clip-path-generator](http://cssplant.com/clip-path-generator))'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*裁剪路径* *生成器* ([http://cssplant.com/clip-path-generator](http://cssplant.com/clip-path-generator))'
- en: '**CSS**:'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE66]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: none
  id: totrans-547
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: none
- en: There is no clipping path that gets created.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 没有创建裁剪路径。
- en: Image rendering and orientation
  id: totrans-549
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像渲染和方向
- en: Making sure images display correctly is not only a designer's responsibility,
    we as web designers and developers also have a say in how images behave and display
    under particular circumstances.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 确保图像正确显示不仅是设计师的责任，我们作为网页设计师和开发者也有权决定图像在特定情况下的行为和显示方式。
- en: Let's see how to change the orientation and rendering quality of images with
    CSS.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 CSS 改变图像的方向和渲染质量。
- en: image-orientation
  id: totrans-552
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: image-orientation
- en: 'The `image-orientation` CSS property defines the rotation that we can apply
    to an image, and it looks like this:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: '`image-orientation` CSS 属性定义了我们可以对图像应用的旋转，其外观如下：'
- en: '[PRE67]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Description
  id: totrans-555
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Many images contain information about the settings used to take a picture, such
    as ISO speed, aperture, shutter speed, camera model, white balance, date and time,
    and so on. This information is called **EXIF Data**, and CSS uses this data for
    image orientation purposes. It also supports one or two values in a single declaration.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 许多图像包含有关拍照时使用的设置的详细信息，例如 ISO 速度、光圈、快门速度、相机型号、白平衡、日期和时间等。这些信息被称为 **EXIF 数据**，CSS
    使用这些数据用于图像方向的目的。它还支持在单个声明中包含一个或两个值。
- en: 'The `image-orientation` property supports two keyword values and an *angle*
    value: `from-image`, `flip`, and an *angle* value.'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '`image-orientation` 属性支持两个关键字值和一个 *角度* 值：`from-image`、`flip` 和一个 *角度* 值。'
- en: '`from-image`: The image is rotated using the EXIF Data contained in the image.'
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from-image`：图像使用图像中包含的 EXIF 数据进行旋转。'
- en: '`flip`: The image is flipped horizontally; it''s reflected. This value should
    go after the *angle* value.'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flip`：图像水平翻转；它被反射。这个值应该跟在 *角度* 值之后。'
- en: '`Angle value`: This defines the rotation applied to the image. It uses a number
    followed by the `deg` unit. This value should go before the `flip` keyword value.'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`角度值`：这定义了应用于图像的旋转。它使用一个数字后跟 `deg` 单位。这个值应该在 `flip` 关键字值之前。'
- en: '**CSS**:'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE68]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: image-rendering
  id: totrans-563
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: image-rendering
- en: 'The `image-rendering` CSS property defines what type of algorithm the browser
    should use to render scaled images, and it looks like this:'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: '`image-rendering` CSS 属性定义了浏览器应使用哪种算法来渲染缩放图像，其外观如下：'
- en: '[PRE69]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Description
  id: totrans-566
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `image-rendering` CSS property works for either downscaled or upscaled
    images. This property supports three keyword values: `auto`, `crisp-edges`, and
    `pixelated`.'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: '`image-rendering` CSS 属性适用于缩小或放大的图像。此属性支持三个关键字值：`auto`、`crisp-edges` 和 `pixelated`。'
- en: '`auto`: This is the default value. When an image is either scaled up or down,
    this property *smooths* or blurs the image in order to preserve the best appearance
    possible. However, sometimes this may produce undesired results, depending on
    the type of image.'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：这是默认值。当图像放大或缩小时，此属性会 *平滑* 或模糊图像以保留最佳外观。然而，有时这可能会产生不期望的结果，具体取决于图像类型。'
- en: '`crisp-edges`: This property does not apply any smoothing or blurring to the
    image. It preservers its contrast, edges, and color. This property was exclusively
    created for pixel art.'
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crisp-edges`：此属性不对图像应用任何平滑或模糊。它保留了其对比度、边缘和颜色。此属性专门为像素艺术创建。'
- en: '`pixelated`: This property only works on images that have been scaled up via
    the **nearest** **neighbor** algorithm, which makes the image look like it was
    made with large pixels. This is useful when scaling up *checkered* patterns like
    a chessboard, a checkerboard, or QR codes.'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pixelated`：此属性仅适用于通过**最近****邻**算法缩放的图像，这使得图像看起来像是用大像素制作的。这在放大类似棋盘、棋盘或二维码的**棋盘**图案时很有用。'
- en: '**CSS**:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE70]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: User interface
  id: totrans-573
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户界面
- en: The following properties are directly tied to UX Design but on the frontend.
    Addressing the following properties from the beginning of any build can go a long
    way.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 以下属性直接与用户体验设计相关，但位于前端。在任何构建的开始阶段解决以下属性可以大有裨益。
- en: Let's check them out.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看它们。
- en: cursor
  id: totrans-576
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`cursor`'
- en: 'The `cursor` CSS property defines the style of the pointer, and it looks like
    this:'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor` CSS 属性定义了指针的样式，其外观如下：'
- en: '[PRE71]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Description
  id: totrans-579
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `cursor` property is meant to work only in the hover state; this property
    is not meant to replace the styling of the pointer in its *normal* state.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor` 属性旨在仅在悬停状态下工作；此属性不打算替换指针在其**正常**状态下的样式。'
- en: All operating system have many types of cursors for all types of behaviors,
    so whenever we need a certain action a cursor for it may already exist.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作系统都有许多类型的指针，用于各种行为，所以每当我们需要某种动作时，可能已经存在一个相应的指针。
- en: 'We can also use custom cursors. Keep in mind the following notes:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用自定义指针。请注意以下注意事项：
- en: It's recommended that the image of the cursor is 32 x 32 pixels.
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议指针图像为 32 x 32 像素。
- en: It's required to declare a built-in cursor to act as a fallback in case the
    custom image(s) doesn't load.
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在自定义图像（或图像）无法加载的情况下，需要声明一个内置指针作为后备。
- en: Legacy versions of IE require an absolute path to the image of the custom cursor.
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IE 的旧版本需要自定义指针图像的绝对路径。
- en: We can use `.cur` or `.png` files for custom cursors. However, legacy IEs only
    support the `.cur` extension.
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用 `.cur` 或 `.png` 文件作为自定义指针。然而，旧版 IE 只支持 `.cur` 扩展名。
- en: The `cursor` CSS property can accept one or multiple values in the same declaration.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor` CSS 属性可以在同一声明中接受一个或多个值。'
- en: 'This property supports the following values: a `URL`, `X` and `Y` coordinates,
    and 32 keyword values.'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持以下值：一个 `URL`、`X` 和 `Y` 坐标以及 32 个关键字值。
- en: A URL (or URI)
  id: totrans-589
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 一个 URL（或 URI）
- en: The URL is used for custom cursors. It's the path to the image. Several URLs
    can be defined in the same declaration. Thus, several custom cursors can be used.
    If declaring more than one URL, the values are comma-separated.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: URL 用于自定义指针。它是图像的路径。可以在同一声明中定义多个 URL。因此，可以使用多个自定义指针。如果声明多个 URL，则值以逗号分隔。
- en: It's mandatory that after the declaration of the URL, a native non-URL value
    should be declared. This is so if everything else fails, the user can still use
    the pointer. This value is optional.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 在 URL 声明之后，必须声明一个本地非 URL 值。这样，如果所有其他方法都失败，用户仍然可以使用指针。此值是可选的。
- en: X and Y coordinates
  id: totrans-592
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: X 和 Y 坐标
- en: The `X` and `Y` coordinates are used to align the custom cursor with the right
    hotspot. These coordinates are just two numbers without a unit and separated only
    by a space.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: '`X` 和 `Y` 坐标用于将自定义指针与正确的热点对齐。这些坐标只是两个没有单位的数字，仅由空格分隔。'
- en: Negative numbers are not allowed and the values range from `0` to `32`.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许使用负数，值范围从 `0` 到 `32`。
- en: 32 keyword values
  id: totrans-595
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 32 个关键字值
- en: The keyword values use the operating system or browser native cursors. There's
    practically a cursor for any pointer action.
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 关键字值使用操作系统或浏览器本地的指针。实际上，对于任何指针动作都有相应的指针。
- en: 'Here''s a list of the 32 keyword values:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 32 个关键字值的列表：
- en: '`alias`'
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alias`'
- en: '`all-scroll`'
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`all-scroll`'
- en: '`auto`'
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`'
- en: '`cell`'
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cell`'
- en: '`col-resize`'
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`col-resize`'
- en: '`context-menu`'
  id: totrans-603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context-menu`'
- en: '`copy`'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`copy`'
- en: '`crosshair`'
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crosshair`'
- en: '`default`'
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default`'
- en: '`e-resize`'
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`e-resize`'
- en: '`ew-resize`'
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ew-resize`'
- en: '`help`'
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help`'
- en: '`move`'
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`move`'
- en: '`n-resize`'
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n-resize`'
- en: '`ne-resize`'
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ne-resize`'
- en: '`nesw-resize`'
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nesw-resize`'
- en: '`no-drop`'
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no-drop`'
- en: '`none`'
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`'
- en: '`not-allowed`'
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`not-allowed`'
- en: '`ns-resize`'
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ns-resize`'
- en: '`nw-resize`'
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nw-resize`'
- en: '`nwse-resize`'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nwse-resize`'
- en: '`pointer`'
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pointer`'
- en: '`progress`'
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`progress`'
- en: '`row-resize`'
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`row-resize`'
- en: '`s-resize`'
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s-resize`'
- en: '`se-resize`'
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`se-resize`'
- en: '`sw-resize`'
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sw-resize`'
- en: '`text`'
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text`'
- en: '`vertical-text`'
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vertical-text`'
- en: '`w-resize`'
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`w-resize`'
- en: '`wait`'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wait`'
- en: 'Some of the most commonly used values are `default`, `move`, `pointer`, and
    `text`:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的值包括 `default`、`move`、`pointer` 和 `text`：
- en: '`default`: This sets the default pointer. This is the arrow pointer we all
    know.'
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default`：这设置了默认指针。这是我们所有人都知道的箭头指针。'
- en: '`move`: This sets the *move* pointer. It looks like a large plus sign with
    arrows on all four ends.'
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`move`：这设置了**移动**指针。它看起来像一个大加号，四个端点都有箭头。'
- en: '`pointer`: This sets the pointer to the "hand" icon.'
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pointer`：这设置指针为“手”图标。'
- en: '`text`: This sets the *text* pointer. It usually looks like a serif capital
    "`I`" but taller.'
  id: totrans-634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text`：这设置文本指针。它通常看起来像带衬线的字母"I"但更高。'
- en: 'See all cursors in action here: [http://tiny.cc/cursor](http://tiny.cc/cursor)'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里查看所有光标的动作：[http://tiny.cc/cursor](http://tiny.cc/cursor)
- en: '**CSS**:'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE72]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: pointer-events
  id: totrans-638
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pointer-events
- en: 'The `pointer-events` CSS property controls when an element in the document
    can become a target of mouse/touch events, and it looks like this:'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: '`pointer-events` CSS属性控制文档中的元素何时可以成为鼠标/触摸事件的目标，其外观如下：'
- en: '[PRE73]'
  id: totrans-640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Description
  id: totrans-641
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'One particularity of `pointer-events` is as shown in the following example:
    say we have two containers where they considerably overlap. If we apply `pointer-events:
    none;` to the element on top, the clicking/tapping goes through that element and
    targets the content in the bottom one. Basically, we can select the content on
    the bottom element even if we''re clicking/tapping on the element on top.'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '`pointer-events`的一个特殊性如下所示：假设我们有两个容器，它们有相当大的重叠。如果我们将`pointer-events: none;`应用于顶部的元素，点击/触摸就会穿过该元素并针对下方的元素内容。基本上，即使我们点击/触摸顶部的元素，我们也可以选择下方的元素内容。'
- en: This property supports ten keyword values. However, only two are related to
    HTML; all the rest are part of the SVG specification, which is out of the scope
    of this guide.
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持十个关键字值。然而，只有两个与HTML相关；其余的都是SVG规范的一部分，这超出了本指南的范围。
- en: Those HTML-related values are `none` and `auto`.
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 与HTML相关的值是`none`和`auto`。
- en: none
  id: totrans-645
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: none
- en: No mouse/touch events will act on the element. However, if the element has descendants
    with `pointer-events` set to a different value, those descendent elements will
    trigger mouse events.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 不会有鼠标/触摸事件作用于该元素。然而，如果元素有`pointer-events`设置为不同值的后代，这些后代元素将触发鼠标事件。
- en: auto
  id: totrans-647
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: auto
- en: This is the default value. This acts as if no `pointer-events` were declared.
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。这相当于没有声明`pointer-events`。
- en: 'More info on MDN can be found here: [http://tiny.cc/mdn-pointer-events](http://tiny.cc/mdn-pointer-events)'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于MDN的信息可以在以下链接找到：[http://tiny.cc/mdn-pointer-events](http://tiny.cc/mdn-pointer-events)
- en: '**CSS**:'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE74]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: outline
  id: totrans-652
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: outline
- en: The `outline` CSS property creates a border around an element to provide a visual
    cue that it's active or has gained focus.
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: '`outline` CSS属性在元素周围创建一个边框，以提供视觉提示，表明它处于活动状态或已获得焦点。'
- en: This property is the shorthand for the `outline-color`, `outline-width` `and
    outline-style` properties. For convenience, it's recommended to always use this
    shorthand rather than separate properties when declaring `outline`.
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性是`outline-color`、`outline-width`和`outline-style`属性的简写。为了方便，建议在声明`outline`时始终使用这个简写，而不是单独的属性。
- en: The difference between `outline` and `border` is that `outline` doesn't take
    up space; it's created on top of the content, so the layout is never affected
    by it.
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: '`outline`和`border`之间的区别在于`outline`不占用空间；它是在内容之上创建的，因此布局永远不会受到影响。'
- en: However, declaring the `outline` values is exactly the same as declaring the
    `border` values.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，声明`outline`值与声明`border`值完全相同。
- en: Description
  id: totrans-657
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `outline` CSS property supports three values represented in longhand properties:
    the *color*, the *width*, and the *style*. All three values are required and can
    appear in any order in the declaration.'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: '`outline` CSS属性支持三个用长写属性表示的值：颜色、宽度和样式。所有三个值都是必需的，可以在声明中按任何顺序出现。'
- en: '`color`: This is mapped to the `outline-color` property. It''s the color of
    the outline. It supports all color modes: `HEX`, `RGB`, `RGBa`, `HSL`, `HSLs`,
    and color name.'
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color`：这映射到`outline-color`属性。它是轮廓的颜色。它支持所有颜色模式：`HEX`、`RGB`、`RGBa`、`HSL`、`HSLs`和颜色名称。'
- en: '`width`: This is mapped to the `outline-width` property. It''s the thickness
    of the outline. It supports any length value, such as `px`, `em`, `in`, `mm`,
    `cm`, `vw`, and so on. Percentage values are not valid.'
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`width`：这映射到`outline-width`属性。它是轮廓的厚度。它支持任何长度值，例如`px`、`em`、`in`、`mm`、`cm`、`vw`等等。百分比值无效。'
- en: '`style`: This is mapped to the `outline-style` property. It''s the type of
    line to be used. It takes the same values as border: `dashed`, `dotted`, `double`,
    `groove`, `hidden`, `inset`, `none`, `outset`, `ridge`, and `solid`.'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`style`：这映射到`outline-style`属性。它表示要使用的线的类型。它接受与`border`相同的值：`dashed`、`dotted`、`double`、`groove`、`hidden`、`inset`、`none`、`outset`、`ridge`和`solid`。'
- en: '**CSS**:'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE75]'
  id: totrans-663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 3-Dimensional
  id: totrans-664
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 三维
- en: The power of CSS is mind-boggling; not only can we do amazing animations just
    with CSS, but CSS can also handle three-dimensional designs.
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 的功能令人惊叹；我们不仅可以用 CSS 做出惊人的动画，CSS 还可以处理三维设计。
- en: Let's check out the properties that allows us to do so.
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看那些使我们能够做到这一点的属性。
- en: perspective
  id: totrans-667
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视点
- en: 'The `perspective` CSS property defines the distance between the screen and
    the user in the *Z* axis, and it looks like this:'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '`perspective` CSS 属性定义了屏幕和用户在 *Z* 轴之间的距离，其外观如下：'
- en: '[PRE76]'
  id: totrans-669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Description
  id: totrans-670
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Keep in mind that the `perspective` property is applied to the parent element
    in order to enable a 3D canvas or space in which its child elements will move.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，`perspective` 属性应用于父元素，以便启用一个 3D 画布或空间，其中其子元素将移动。
- en: This property accepts a keyword value, `normal`, and a *length* value.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性接受一个关键字值 `normal` 和一个长度值。
- en: normal
  id: totrans-673
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: normal
- en: No perspective is defined on the parent element.
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 父元素上没有定义透视。
- en: Length value
  id: totrans-675
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 长度值
- en: 'This is when we use one of the following units: `px`, `em`, `in`, `mm`, `cm`,
    `vw`, and so on.'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 这时我们会使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等等。
- en: The lower the value, the closer the elements will move in the *Z* axis. Thus,
    the perspective is more pronounced. With higher values, the perspective effect
    is less intense.
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 值越低，元素在 *Z* 轴上移动得越近。因此，透视效果越明显。值越高，透视效果越不强烈。
- en: '**CSS**:'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE77]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: perspective-origin
  id: totrans-680
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视点原点
- en: 'The `perspective-origin` CSS property defines the origin of the *X* and *Y*
    axis of an element in a 3D space, and it looks like this:'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '`perspective-origin` CSS 属性定义了元素在 3D 空间中 *X* 和 *Y* 轴的原点，其外观如下：'
- en: '[PRE78]'
  id: totrans-682
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Description
  id: totrans-683
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is what is known as the **vanishing point** used by the `perspective`
    property. The `perspective-origin` property supports a combination of three types
    of value: a *length* value, a *percentage* value, and five keyword values in both
    *X* and *Y* axes.'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 `perspective` 属性所使用的所谓**消失点**。`perspective-origin` 属性支持三种类型的值组合：一个长度值、一个百分比值，以及
    *X* 和 *Y* 轴上的五个关键字值。
- en: Length value
  id: totrans-685
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 长度值
- en: 'This is when we use one of the following units: `px`, `em`, `in`, `mm`, `cm`,
    `vw`, and so on.'
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 这时我们会使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等等。
- en: Percentage value
  id: totrans-687
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 百分比值
- en: This is when we use percentages like 50%, 85%, and so on.
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 这时我们会使用百分比，如 50%、85% 等等。
- en: Keyword values
  id: totrans-689
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 关键字值
- en: The five keyword values are `top`, `right`, `bottom`, `left`, and `center`.
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 五个关键字值是 `top`、`right`、`bottom`、`left` 和 `center`。
- en: '**CSS**:'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: 'Adding to the prior CSS from the `perspective` example:'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `perspective` 示例中的先前 CSS 上添加：
- en: '[PRE79]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: backface-visibility
  id: totrans-694
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: backface-visibility
- en: 'The `backface-visibility` CSS property defines whether the rear face of an
    element that''s facing the viewer is visible or not, and it looks like this:'
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '`backface-visibility` CSS 属性定义了面向观察者的元素的背面是否可见，其外观如下：'
- en: '[PRE80]'
  id: totrans-696
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Description
  id: totrans-697
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `backface-visibility` property supports two self-explanatory keyword values:
    `visible` and `hidden`.'
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: '`backface-visibility` 属性支持两个自解释的关键字值：`visible` 和 `hidden`。'
- en: '**CSS**:'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE81]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Summary
  id: totrans-701
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: And this is it for the CSS Properties chapters, quite a ride eh?
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 CSS 属性章节的全部内容，相当刺激吧？
- en: In this final chapter we learned how to work with the Page Box's properties
    like bleed and marks for printing. We also learned that HTML lists are used for
    many other things like menus, navigation, slideshow, and so on, amongst other
    things like CSS counters and how to create custom styles for list marks.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一章中，我们学习了如何处理页面框的属性，如出血和印刷标记。我们还了解到，HTML 列表用于许多其他事物，如菜单、导航、幻灯片放映等，以及其他事物，如
    CSS 计数器和如何为列表标记创建自定义样式。
- en: Creating the effect of depth with drop shadows is quite easy with the `box-shadow`
    property. Just don't overdo it. Then we learned about display and visibility,
    one of the most important features of CSS. In this section we learned how to clear
    floating elements as well in addition to applying filters to images and elements
    alike.
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `box-shadow` 属性创建具有阴影效果的深度感相当简单。只是不要过度使用。然后我们学习了显示和可见性，这是 CSS 中最重要的特性之一。在本节中，我们学习了如何清除浮动元素，以及如何对图像和元素应用过滤器。
- en: Masking and clipping elements isn't so difficult after all, we can use either
    bitmaps or vectors depending on our specific circumstances. This led us to understand
    better how to work with images and their orientation.
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 元素遮罩和裁剪实际上并不难，我们可以根据具体情况使用位图或矢量图。这使我们更好地理解了如何处理图像及其方向。
- en: Then we talked about some User Interface features like creating custom cursors
    or adapting the default cursor to change depending on its context.
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们讨论了一些用户界面特性，比如创建自定义光标或根据上下文改变默认光标。
- en: And finally we learned about the 3D properties like `perspective` and `backface-visiblity`
    that allow us to do pretty cool things with CSS only.
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学习了3D属性，如`透视`和`背面可见性`，这些属性使我们能够仅使用CSS就完成一些相当酷的事情。
- en: The following chapter about CSS functions is going to take what we've seen so
    far to a new level of possibilities.
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章关于CSS函数的内容将把我们迄今为止所看到的内容提升到一个新的可能性水平。
- en: Let's fly.
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们飞吧。
