["```js\narr1 = new Array(\"purple\", \"green\", \"yellow\");\narr2 = [\"black\", \"orange\", \"pink\"]; \n```", "```js\narr3 = new Array(10);\narr4 = [10]; \n```", "```js\nconsole.log(arr3);\nconsole.log(arr4); \n```", "```js\n[ <10 empty items> ]\n[ 10 ] \n```", "```js\nlet arr = [\"hi there\", 5, true];\nconsole.log(typeof arr[0]);\nconsole.log(typeof arr[1]);\nconsole.log(typeof arr[2]); \n```", "```js\nstring\nnumber\nboolean \n```", "```js\nconst arr = [\"hi there\"];\narr[0] = \"new value\";\nconsole.log(arr[0]);\n\narr = [\"nope, now you are overwriting the array\"]; \n```", "```js\nnew value\nTypeError: Assignment to constant variable. \n```", "```js\ncars = [\"Toyota\", \"Renault\", \"Volkswagen\"];\nconsole.log(cars[0]); \n```", "```js\nconsole.log(cars[1]); \n```", "```js\nconsole.log(cars[2]); \n```", "```js\nconsole.log(cars[3]);\nconsole.log(cars[-1]); \n```", "```js\ncars[0] = \"Tesla\";\nconsole.log(cars[0]); \n```", "```js\nconsole.log(cars); \n```", "```js\n[ 'Tesla', 'Renault', 'Volkswagen' ] \n```", "```js\ncars[3] = \"Kia\"; \n```", "```js\ncars[-1] = \"Fiat\"; \n```", "```js\nconsole.log(cars[3]);\nconsole.log(cars[-1]); \n```", "```js\nKia\nFiat \n```", "```js\ncolors = [\"black\", \"orange\", \"pink\"]\nbooleans = [true, false, false, true];\nemptyArray = [];\nconsole.log(\"Length of colors:\", colors.length);\nconsole.log(\"Length of booleans:\", booleans.length);\nconsole.log(\"Length of empty array:\", emptyArray.length); \n```", "```js\nLength of colors: 3 \nLength of booleans: 4 \nLength of empty array: 0 \n```", "```js\nlastElement = colors[colors.length - 1]; \n```", "```js\nnumbers = [12, 24, 36];\nnumbers[5] = 48;\nconsole.log(numbers.length); \n```", "```js\nconsole.log(\"numbers\", numbers); \n```", "```js\nnumbers [ 12, 24, 36, <2 empty items>, 48 ] \n```", "```js\nfavoriteFruits = [\"grapefruit\", \"orange\", \"lemon\"];\nfavoriteFruits.push(\"tangerine\"); \n```", "```js\nlet lengthOfFavoriteFruits = favoriteFruits.push(\"lime\"); \n```", "```js\nconsole.log(favoriteFruits); \n```", "```js\n[ 'grapefruit', 'orange', 'lemon', 'tangerine', 'lime' ] \n```", "```js\nlet arrOfShapes = [\"circle\", \"triangle\", \"rectangle\", \"pentagon\"];\narrOfShapes.splice(2, 0, \"square\", \"trapezoid\");\nconsole.log(arrOfShapes); \n```", "```js\n[\n  'circle',\n  'triangle',\n  'square',\n  'trapezoid',\n  'rectangle',\n  'pentagon'\n] \n```", "```js\narrOfShapes.splice(2, 2, \"square\", \"trapezoid\");\nconsole.log(arrOfShapes); \n```", "```js\n[ 'circle', 'triangle', 'square', 'trapezoid' ] \n```", "```js\narrOfShapes.splice(2, 12, \"square\", \"trapezoid\");\nconsole.log(arrOfShapes); \n```", "```js\n[ 'circle', 'triangle', 'square', 'trapezoid' ] \n```", "```js\nlet arr5 = [1, 2, 3];\nlet arr6 = [4, 5, 6];\nlet arr7 = arr5.concat(arr6);\nconsole.log(arr7); \n```", "```js\n[ 1, 2, 3, 4, 5, 6 ] \n```", "```js\nlet arr8 = arr7.concat(7, 8, 9);\nconsole.log(arr8); \n```", "```js\n[ 1, 2, 3, 4, 5, 6, 7, 8, 9 ] \n```", "```js\narr8.pop(); \n```", "```js\n[ 1, 2, 3, 4,  5, 6, 7, 8 ] \n```", "```js\narr8.shift(); \n```", "```js\n[ 2, 3, 4, 5,  6, 7, 8 ] \n```", "```js\narr8.splice(1, 3); \n```", "```js\n[ 2, 6, 7, 8 ] \n```", "```js\ndelete arr8[0]; \n```", "```js\n[ <1 empty item>, 6, 7, 8 ] \n```", "```js\narr8 = [ 2, 6, 7, 8 ];\nlet findValue = arr8.find(function(e) { return e === 6});\nlet findValue2 = arr8.find(e => e === 10);\nconsole.log(findValue, findValue2); \n```", "```js\narr8 = [ 2, 6, 7, 8 ];\nlet findIndex = arr8.indexOf(6);\nlet findIndex2 = arr8.indexOf(10);\nconsole.log(findIndex, findIndex2); \n```", "```js\narr8 = [ 2, 6, 7, 8 ];\nlet findIndex3 = arr8.indexOf(6, 2); \n```", "```js\nlet animals = [\"dog\", \"horse\", \"cat\", \"platypus\", \"dog\"];\nlet lastDog = animals.lastIndexOf(\"dog\"); \n```", "```js\nlet names = [\"James\", \"Alicia\", \"Fatiha\", \"Maria\", \"Bert\"];\nnames.sort(); \n```", "```js\n[ 'Alicia', 'Bert', 'Fatiha', 'James', 'Maria' ] \n```", "```js\nlet ages = [18, 72, 33, 56, 40];\nages.sort(); \n```", "```js\n[ 18, 33, 40, 56, 72 ] \n```", "```js\n[ 'Alicia', 'Bert', 'Fatiha', 'James', 'Maria' ] \n```", "```js\nnames.reverse(); \n```", "```js\n[ 'Maria', 'James', 'Fatiha', 'Bert', 'Alicia' ] \n```", "```js\n    [\"Bananas\", \"Carrots\", \"Lettuce\", \"Eggs\", \"Milk\", \"Juice\", \"Pop\", \"Juice\", \"Pop\"] \n    ```", "```js\nlet someValues1 = [1, 2, 3];\nlet someValues2 = [4, 5, 6];\nlet someValues3 = [7, 8, 9];\nlet arrOfArrays = [someValues1, someValues2, someValues3]; \n```", "```js\nlet arrOfArrays2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]; \n```", "```js\nlet value1 = arrOfArrays[0][1]; \n```", "```js\nlet value2 = arrOfArrays[2][2]; \n```", "```js\narrOfArraysOfArrays = [arrOfArrays, arrOfArrays, arrOfArrays]; \n```", "```js\n[\n  [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ],\n  [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ],\n  [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ]\n] \n```", "```js\nlet middleValue = arrOfArraysOfArrays[1][1][1]; \n```", "```js\nlet arr = [0, 1, 2];\nconsole.log(typeof arr); \n```", "```js\nObject \n```", "```js\nlet dog = { dogName: \"JavaScript\", \n            weight: 2.4, \n            color: \"brown\", \n            breed: \"chihuahua\", \n            age: 3, \n            burglarBiter: true \n          }; \n```", "```js\nlet dogColor1 = dog[\"color\"]; \n```", "```js\nlet dogColor2 = dog.color; \n```", "```js\ndog[\"color\"] = \"blue\";\ndog.weight = 2.3; \n```", "```js\nconsole.log(dog); \n```", "```js\n{\n  dogName: 'JavaScript',\n  weight: 2.3,\n  color: 'blue',\n  breed: 'chihuahua',\n  age: 3,\n  burglarBiter: true\n} \n```", "```js\ndog[\"age\"] = \"three\"; \n```", "```js\nlet variable = \"age\";\nconsole.log(dog[variable]); \n```", "```js\nvariable = \"breed\";\nconsole.log(dog[variable]); \n```", "```js\ndog[variable] = \"dachshund\";\nconsole.log(dog[\"breed\"]); \n```", "```js\nlet company = { companyName: \"Healthy Candy\",\n                activity: \"food manufacturing\",\n                address: {\n                  street: \"2nd street\",\n                  number: \"123\",\n                  zipcode: \"33116\",\n                  city: \"Miami\",\n                  state: \"Florida\"\n                },\n                yearOfEstablishment: 2021 \n              }; \n```", "```js\ncompany.address.zipcode = \"33117\";\ncompany[\"address\"][\"number\"] = \"100\"; \n```", "```js\ncompany = { companyName: \"Healthy Candy\",\n                activities: [\"food manufacturing\", \n\"improving kids' health\", \"manufacturing toys\"],\n                address: {\n                  street: \"2nd street\",\n                  number: \"123\",\n                  zipcode: \"33116\",\n                  city: \"Miami\",\n                  state: \"Florida\"\n                },\n                yearOfEstablishment: 2021 \n              }; \n```", "```js\nlet activity = company.activities[1]; \n```", "```js\nlet addresses = [{\n    street: \"2nd street\",\n    number: \"123\",\n    zipcode: \"33116\",\n    city: \"Miami\",\n    state: \"Florida\"\n  },\n  {\n    street: \"1st West avenue\",\n    number: \"5\",\n    zipcode: \"75001\",\n    city: \"Addison\",\n    state: \"Texas\"\n  }]; \n```", "```js\nlet streetName = addresses[0].street; \n```", "```js\n company = { companyName: \"Healthy Candy\",\n                    activities: [ \"food manufacturing\", \n\"improving kids' health\", \n\"manufacturing toys\"],\n                    address: [{\n                      street: \"2nd street\",\n                      number: \"123\",\n                      zipcode: \"33116\",\n                      city: \"Miami\",\n                      state: \"Florida\"\n                    },\n                    {\n                      street: \"1st West avenue\",\n                      number: \"5\",\n                      zipcode: \"75001\",\n                      city: \"Addison\",\n                      state: \"Texas\"\n                    }],\n                    yearOfEstablishment: 2021 \n                  }; \n```", "```js\nlet streetName = company.address[0].street; \n```", "```js\nconst theList = ['Laurence', 'Svekis', true, 35, null, undefined, {test: 'one', score: 55}, ['one', 'two']]; \n```", "```js\n[\"FIRST\", \"Svekis\", \"MIDDLE\", \"hello World\", \"LAST\"] \n```", "```js\n    const myArr1 = [1,3,5,6,8,9,15];\n    console.log(myArr1.indexOf(0));\n    console.log(myArr1.indexOf(3)); \n    ```", "```js\n    const myArr2 = [];\n    myArr2[10] = 'test'\n    console.log(myArr2);\n    console.log(myArr2[2]); \n    ```", "```js\n    const myArr3 = [3,6,8,9,3,55,553,434];\n    myArr3.sort();\n    myArr3.length = 0;\n    console.log(myArr3[0]); \n    ```"]