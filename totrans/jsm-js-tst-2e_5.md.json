["```js\n describe(\"NewInvestmentView\", function() {\n  var view;\n\n  // setup and other specs ...\n\n  describe(\"with its inputs correctly filled\", function() {\n\n    // setup and other specs ...\n\n    describe(\"and when an investment is created\", function() {\n      var callbackSpy;\n      var investment;\n\n      beforeEach(function() {\n        callbackSpy = jasmine.createSpy('callback');\n        view.onCreate(callbackSpy);\n\n        investment = view.create();\n      });\n\n      it(\"should invoke the 'onCreate' callback with the created investment\", function() {\n\n expect(callbackSpy).toHaveBeenCalled();\n expect(callbackSpy).toHaveBeenCalledWith(investment);\n      });\n    });\n  });\n});\n```", "```js\ndescribe(\"NewInvestmentView\", function() {\n  var view;\n\n  // setup and other specs ...\n\n  describe(\"with its inputs correctly filled\", function() {\n\n    // setup and other specs ...\n\n    describe(\"and when the form is submitted\", function() {\n      beforeEach(function() {\n        spyOn(view, 'create');\n        view.$element.submit();\n      });\n\n      it(\"should create an investment\", function() {\n        expect(view.create).toHaveBeenCalled();\n      });\n    });\n  });\n});\n```", "```js\ndescribe(\"and when its add button is clicked\", function() {\n  beforeEach(function() {\n    spyOnEvent(view.$element, 'submit');\n    view.20.18.find('input[type=submit]').click();\n  });\n\n  it(\"should submit the form\", function() {\n    expect('submit').toHaveBeenTriggeredOn(view.20.18);\n  });\n});\n```"]