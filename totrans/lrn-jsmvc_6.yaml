- en: Chapter 6. Building the App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：构建应用程序
- en: In the past few chapters we have learned what JavaScriptMVC is, how to install
    it, and we went through its components.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几章中，我们学习了什么是JavaScriptMVC，如何安装它，并了解了其组件。
- en: Now is the time for the most exciting chapter for any developer. We are going
    to build a real-world application. Due to the book's scope limitation we are not
    going to write backend API set-up servers, and so on, instead of we will use browser
    storage.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是任何开发者最激动人心的章节。我们将构建一个真实世界的应用程序。由于本书的范围限制，我们不会编写后端API设置服务器等，而是将使用浏览器存储。
- en: Thanks to layer separation in JavaScriptMVC this is easily done by changing
    the code in the model to switch the application persistent layer from browser
    storage option to any backend language, framework, or system such as Sinatra,
    Ruby on Rails, Django, and Node.js.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于JavaScriptMVC中的层分离，这可以通过更改模型中的代码轻松完成，将应用程序持久层从浏览器存储选项切换到任何后端语言、框架或系统，例如Sinatra、Ruby
    on Rails、Django和Node.js。
- en: This chapter's goal is to show how to build a real-word application from concept
    through design, implementation, documentation, and testing. We will develop an
    application that actually does something, is useful for readers, and can be easily
    customized to the reader's needs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是展示如何从概念到设计、实现、文档和测试构建一个真实世界的应用程序。我们将开发一个真正有用的应用程序，对读者有帮助，并且可以轻松定制以满足读者的需求。
- en: Time tracking and invoicing for freelancers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自由职业者的时间跟踪和开票
- en: The app we are going to build in this chapter is called Time tracking and invoicing
    for freelancers; let's call it TTI in short.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将构建的应用程序称为自由职业者的时间跟踪和开票；让我们简称它为TTI。
- en: Application development will only start here. We are not going to write the
    complete code base, it will be simply too big to fit it here. It's like a homework
    exercise, when students start their writing application at university and finish
    them at home. Be creative!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 应用开发将从这里开始。我们不会编写完整的代码库，因为这会太大，无法在这里容纳。这就像一个家庭作业练习，当学生在大学开始写应用程序并在家里完成它们时。要有创意！
- en: Planning
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规划
- en: 'Okay, so we are going to write an application. Now it''s time to answer the
    most important question: *What problem is our application is about to solve?*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，所以我们将编写一个应用程序。现在是我们回答最重要的问题的时候了：*我们的应用程序将要解决什么问题？*
- en: 'We can clearly identify two main application areas:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地识别出两个主要的应用程序领域：
- en: Tracking time we spend on a task
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪我们在任务上花费的时间
- en: Making an invoice
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作发票
- en: 'Let''s break down our application''s main areas into a features list as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把应用程序的主要区域分解成一个功能列表，如下所示：
- en: Clients list
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户列表
- en: Time tracker
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间跟踪器
- en: Track time
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪时间
- en: Fixed cost task
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定成本任务
- en: Reports
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告
- en: Daily
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每日
- en: Weekly
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每周
- en: Statistics
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计数据
- en: Monthly
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月
- en: Yearly
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每年
- en: Invoicing
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开票
- en: Export and import data
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出和导入数据
- en: A features list will help us make a development plan. Now we can think about
    how much time we need to accomplish for each of them. We can use just a calendar
    to write down our estimates or use one of many the free issue-tracking tools such
    as [https://trello.com/](https://trello.com/) or [http://trac.edgewall.org/](http://trac.edgewall.org/).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个功能列表将帮助我们制定开发计划。现在我们可以考虑完成每个功能所需的时间。我们可以只用日历来写下我们的估计，或者使用许多免费的问题跟踪工具之一，例如[https://trello.com/](https://trello.com/)或[http://trac.edgewall.org/](http://trac.edgewall.org/)。
- en: The ideal solution would be to use a methodology such as Scrum—[http://en.wikipedia.org/wiki/Scrum_(development)](http://en.wikipedia.org/wiki/Scrum_(development))
    or one of the best issue-tracking tools in the business, JIRA—[http://en.wikipedia.org/wiki/JIRA](http://en.wikipedia.org/wiki/JIRA).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 理想解决方案是使用一种方法，如Scrum—[http://en.wikipedia.org/wiki/Scrum_(development)](http://en.wikipedia.org/wiki/Scrum_(development))或商业中最优秀的任务跟踪工具之一，JIRA—[http://en.wikipedia.org/wiki/JIRA](http://en.wikipedia.org/wiki/JIRA)。
- en: Preparing wireframes
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备线框
- en: The next step is preparing application wireframes. This is a very important
    step in the application development cycle. It allows us to quickly sketch the
    application interface for different pages as well as very fast redesign pages
    and saves time in future development. Once we start writing the code, any changes
    will be harder and less cost efficient than changing wireframes.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是准备应用程序线框。这是应用程序开发周期中的一个非常重要的步骤。它允许我们快速绘制不同页面的应用程序界面，以及非常快速地重新设计页面，并在未来的开发中节省时间。一旦我们开始编写代码，任何更改都将比更改线框更困难且成本效益更低。
- en: The next steps are creating mockups and prototypes. However, we do not have
    a graphic designer here and no client to show business logic and finally it's
    out of this book's scope, so we are going straight to the next step.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建原型和线框。然而，我们这里没有图形设计师，也没有客户来展示业务逻辑，最终这超出了本书的范围，所以我们直接进入下一步。
- en: '**Wireframes** are generally basic sketches of components used in the application
    to show user interface and application features.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**线框**通常是应用程序中使用的组件的基本草图，用于展示用户界面和应用程序功能。'
- en: '**Mockups** are the next level of wireframes, basically containing all we can
    find on wireframes but were in the actual design.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**原型**是线框的下一级，基本上包含了线框上所有我们能找到的内容，但它们是在实际设计中。'
- en: '**Prototypes** are semi-functional applications to present business logic.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**原型**是半功能性的应用程序，用于展示业务逻辑。'
- en: We can create wireframes by using just a piece of paper and pencil; a lot of
    people prefer this way. There is a bunch of different software that can help us
    in this step. I'll use Balsamiq Mockups but really any tool will be good here.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用一张纸和一支铅笔来创建线框；很多人更喜欢这种方式。有许多不同的软件可以帮助我们在这一步。我将使用Balsamiq Mockups，但实际上任何工具都适用。
- en: 'To give us a better overview on TTI application let''s have a look at wireframes:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解TTI应用程序，让我们看看线框：
- en: Since this book orientation is portrait and web browsers orientation are landscape,
    the reader is asked to have a look at following the wireframes from a different
    perspective.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书的定位是纵向而网页浏览器的定位是横向，因此要求读者从不同的角度查看以下线框。
- en: The following wireframe shows the time tracker main page.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的线框显示了时间追踪器的主要页面。
- en: The main menu is located at the top-left corner and allows us to switch between
    the main application functionalities.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 主要菜单位于左上角，允许我们在主要应用程序功能之间切换。
- en: Breadcrumb is located at the top center and allows us to easily indicate which
    part of the appllication we are currently in.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 面包屑导航位于顶部中央，允许我们轻松地指示我们当前在应用程序的哪个部分。
- en: '**Settings** and **Export/Import Data** tabs go on the top-right corner.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置**和**导出/导入数据**标签位于右上角。'
- en: '**Time Tracker** is located in the center with two main tabs: **Active Tasks**
    and **Archive Tasks**. Each task has fields: **Hours**, **Cost**, **Task ID**,
    **Description**, and **Notes**. The **Add New Task** button is located at the
    bottom that allows us to add a new task. **Archive** button is visible when task
    is hovered. To edit a task double-click on it. The URL for the time tracker page
    is `/timetracker`.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间追踪器**位于中心位置，有两个主要标签：**活动任务**和**存档任务**。每个任务都有字段：**小时数**、**成本**、**任务ID**、**描述**和**备注**。**添加新任务**按钮位于底部，允许我们添加新任务。当鼠标悬停在任务上时，**存档**按钮可见。要编辑任务，请双击它。时间追踪器页面的URL是`/timetracker`。'
- en: '![Preparing wireframes](img/0205OS_06_01.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![准备线框](img/0205OS_06_01.jpg)'
- en: 'The following wireframe shows the invoice main page. The URL is `/invoice`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的线框显示了发票的主要页面。URL是`/invoice`：
- en: '![Preparing wireframes](img/0205OS_06_02.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![准备线框](img/0205OS_06_02.jpg)'
- en: The following wireframe shows the clients main page. The URL is `/clients`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的线框显示了客户端的主要页面。URL是`/clients`。
- en: '![Preparing wireframes](img/0205OS_06_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![准备线框](img/0205OS_06_03.jpg)'
- en: Setup project
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置项目
- en: We are assuming that the reader has installed a web server, such as Apache or
    Nginx. In the server-working directory we need to create the `TTI` folder. Another
    option is to use the Vagrant-powered environment created especially for this book
    available at [https://github.com/wbednarski/JavaScriptMVC_kick-starter](https://github.com/wbednarski/JavaScriptMVC_kick-starter).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设读者已经安装了网络服务器，例如Apache或Nginx。在服务器工作目录中，我们需要创建`TTI`文件夹。另一个选项是使用专门为本书创建并由Vagrant提供的环境，可在[https://github.com/wbednarski/JavaScriptMVC_kick-starter](https://github.com/wbednarski/JavaScriptMVC_kick-starter)找到。
- en: In this folder we will initialize the Git repository to track all changes, install
    JavaScriptMVC, and create the application structure.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件夹中，我们将初始化Git仓库以跟踪所有更改，安装JavaScriptMVC，并创建应用程序结构。
- en: Tracking changes under VCS
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在VCS下跟踪更改
- en: It's a good idea from the very beginning to keep all the project files under
    the version control system. The reason for that is very simple and beneficial
    for future development—we can easily revert any changes and track them.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始就保持所有项目文件在版本控制系统下是一个好主意。这样做的原因非常简单，并且对未来的开发有益——我们可以轻松地回滚任何更改并跟踪它们。
- en: Using decentralized VCS has an invaluable benefit over centralized VCS, because
    we can commit changes without push, so we can commit often even after a small
    change in the codebase. Another good practice is to use one branch per feature.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用去中心化的VCS比集中式VCS具有无价的优点，因为我们可以在不推送的情况下提交更改，因此即使在代码库中进行小的更改后，我们也可以频繁提交。另一个好的做法是使用一个分支来处理一个特性。
- en: In this book we are going to use Git, but actually any **Distributed Version
    Control Systems** (**DVCS**) is good. Mercurial is another popular DVCS.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中我们将使用Git，但实际上任何**分布式版本控制系统**（**DVCS**）都是好的。Mercurial是另一个流行的DVCS。
- en: 'The following steps should be performed to create a new Git repository, add
    all the files, and commit them:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的Git仓库、添加所有文件并提交它们的以下步骤应该执行：
- en: 'Inside the `TTI` directory, type to install JavaScriptMVC:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`TTI`目录下，输入以下命令安装JavaScriptMVC：
- en: '[PRE0]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install and update JavaScriptMVC submodules using the following commands:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装和更新JavaScriptMVC子模块：
- en: '[PRE1]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Install Syn using the following commands:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装Syn：
- en: '[PRE2]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Move the `js` command to the project''s root directory (run from root directory):'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`js`命令移动到项目的根目录（从根目录运行）：
- en: '[PRE3]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: By default all the repositories are on a master branch. Let's switch to the
    latest version of JavaScriptMVC, which is 3.2.2 at the time this book was written.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，所有仓库都在master分支上。让我们切换到JavaScriptMVC的最新版本，本书编写时为3.2.2。
- en: 'In all the submodules directories, type the following command:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有子模块目录中，输入以下命令：
- en: '[PRE4]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the `TTI` directory create our application directory `tti` and add it under
    Git.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`TTI`目录下创建我们的应用程序目录`tti`并将其添加到Git中。
- en: '[PRE5]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the reader wants to keep the codebase copy on the server, they can do this
    using the free code hosting solutions available at [https://github.com](https://github.com)
    or [https://bitbucket.org](https://bitbucket.org).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果读者希望将代码库副本保留在服务器上，他们可以使用[https://github.com](https://github.com)或[https://bitbucket.org](https://bitbucket.org)提供的免费代码托管解决方案来完成此操作。
- en: All the code we are going to develop will be placed in the `tti` folder.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要开发的全部代码都将放置在`tti`文件夹中。
- en: Application structure
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序结构
- en: 'Our application structure will look similar to the following hierarchy:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序结构将类似于以下层次结构：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: IndexedDB
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IndexedDB
- en: Since local storage is too simple for our application and Web SQL database is
    deprecated the natural choice is IndexedDB.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本地存储对我们应用程序来说太简单，而Web SQL数据库已被弃用，因此自然的选择是IndexedDB。
- en: In the root level create `vendors` directory to store all third part code, plugins,
    and so on.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在根级别创建`vendors`目录以存储所有第三方代码、插件等。
- en: 'Download and copy PouchDB to the `vendors` directory library, which provides
    good cross-browser API for IndexedDB. You can download PouchDB from the following
    location:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并将PouchDB复制到`vendors`目录库，该库为IndexedDB提供了良好的跨浏览器API。您可以从以下位置下载PouchDB：
- en: '[http://pouchdb.com](http://pouchdb.com)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pouchdb.com](http://pouchdb.com)'
- en: '[https://github.com/daleharvey/pouchdb](https://github.com/daleharvey/pouchdb)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/daleharvey/pouchdb](https://github.com/daleharvey/pouchdb)'
- en: Creating models
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模型
- en: Let's create a `task.js` file under the `models` directory. In the `Task` model
    we will keep all task-related CRUD methods that operate on a local database.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在`models`目录下创建一个`task.js`文件。在`Task`模型中，我们将保留所有与任务相关的CRUD方法，这些方法在本地数据库上操作。
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `init` method is responsible for creating a `time-tracker` database or getting
    reference to it if it exists. The `idb://` protocol is telling PouchDB to use
    `IndexedDB` as a storage option.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`init`方法负责创建一个`time-tracker`数据库或获取其引用（如果它已存在）。`idb://`协议告诉PouchDB使用`IndexedDB`作为存储选项。'
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `findAll` method is responsible for retrieving an object with all the items
    from our database. Readers can have a look at the example usage in the comment
    on the preceding code listing.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`findAll`方法负责从我们的数据库中检索包含所有条目的对象。读者可以查看前述代码列表中的注释中的示例用法。'
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `findOne` method is responsible for retrieving an object with a particular
    item from our database. Readers can have a look at the example usage in the comment
    on the preceding code listing.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`findOne`方法负责从我们的数据库中检索具有特定条目的对象。读者可以查看前述代码列表中的注释中的示例用法。'
- en: '[PRE10]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `create` method is responsible for creating a new item in our database.
    Readers can have a look at the example usage in the comment on the preceding code
    listing.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`create`方法负责在我们的数据库中创建一个新的条目。读者可以查看前述代码列表中的注释中的示例用法。'
- en: '[PRE11]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `update` method is responsible for updating a particular item in our database.
    Readers can have a look at the example usage in the comment on the preceding code
    listing.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`update` 方法负责更新数据库中的特定项。读者可以查看前面代码列表中的注释中的示例用法。'
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This `destroy` method is responsible for destroying a particular item in our
    database. Readers can have a look at the example usage in the comment on the preceding
    code listing.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 `destroy` 方法负责销毁数据库中的特定项。读者可以查看前面代码列表中的注释中的示例用法。
- en: 'Let''s create a `client.js` file under `models` directory. In `Client` model
    we will keep all the task-related CRUD methods that operate on a local database.
    Create a bootstrap file:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `models` 目录下创建一个名为 `client.js` 的文件。在 `Client` 模型中，我们将保留所有与任务相关的 CRUD 方法，这些方法在本地数据库上操作。创建一个引导文件：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Creating controllers
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建控制器
- en: Let's create a `tasks.js` file under the `controllers` directory where we can
    handle all the application actions.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `controllers` 目录下创建一个 `tasks.js` 文件，以便我们可以处理所有应用程序操作。
- en: '[PRE14]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Let's create the `clients.js` file under the `controllers` directory.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `controllers` 目录下创建一个 `clients.js` 文件。
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Let's create the `router.js` file under the `controllers` directory.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `controllers` 目录下创建一个 `router.js` 文件。
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Let's create the `navigation.js` file under the `controllers` directory.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `controllers` 目录下创建一个 `navigation.js` 文件。
- en: '[PRE17]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Creating views
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建视图
- en: 'Let''s create the `views` folder under the `tti` directory and inside it, two
    directories: `styles` and `templates`.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `tti` 目录下创建一个 `views` 文件夹，并在其中创建两个文件夹：`styles` 和 `templates`。
- en: 'In the `templates` directory create `client.ejs` file with the following content:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `templates` 目录下创建一个名为 `client.ejs` 的文件，内容如下：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the `templates` directory create the `navigation.ejs` file with the following
    content:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `templates` 目录下创建一个名为 `navigation.ejs` 的文件，内容如下：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In the `templates` directory create the `tasks` directory. Create the `tasks.ejs`
    file with the following content:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `templates` 目录下创建一个名为 `tasks` 的文件夹。创建一个名为 `tasks.ejs` 的文件，内容如下：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In the `tasks` directory create the `task.ejs` file with the following content:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `tasks` 目录下创建一个名为 `task.ejs` 的文件，内容如下：
- en: '[PRE21]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the `tasks` directory create the `add_task.ejs` file with the following
    content:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `tasks` 目录下创建一个名为 `add_task.ejs` 的文件，内容如下：
- en: '[PRE22]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In the `styles` directory create two directories: `css` and `sass`.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `styles` 目录下创建两个文件夹：`css` 和 `sass`。
- en: 'In the `sass` directory create the `tti.scss` file with the following content:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `sass` 目录下创建一个名为 `tti.scss` 的文件，内容如下：
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In the `sass` directory create the `_static.scss` file with the following content:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `sass` 目录下创建一个名为 `_static.scss` 的文件，内容如下：
- en: '[PRE24]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In the `sass` directory create the `_mixins.scss` file with the following content:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `sass` 目录下创建一个名为 `_mixins.scss` 的文件，内容如下：
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In the `sass` directory create the `_reset.scss` file with the following content:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `sass` 目录下创建一个名为 `_reset.scss` 的文件，内容如下：
- en: '[PRE26]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In the `sass` directory create the `skelton.scss` file with the following content:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `sass` 目录下创建一个名为 `skelton.scss` 的文件，内容如下：
- en: '[PRE27]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Creating a bootstrap
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建引导
- en: In the root directory let's create the `index.html` file with the following
    code. Bootstrap is responsible for loading all the files needed by the application
    to run.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在根目录下创建一个名为 `index.html` 的文件，代码如下。引导负责加载应用程序运行所需的所有文件。
- en: '[PRE28]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In the `tti` directory create the `tti.js` file with the following code:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `tti` 目录下创建一个名为 `tti.js` 的文件，代码如下：
- en: '[PRE29]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Running the application
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: In order to run our application we convert the SASS files into the CSS file
    which can be read by web browsers.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行我们的应用程序，我们将 SASS 文件转换为浏览器可以读取的 CSS 文件。
- en: We used SASS instead of plain CSS to split code into many small files for better
    readability and better code re-use. This aspect is very important, especially
    in big applications.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 SASS 而不是纯 CSS 来将代码拆分成许多小文件，以提高可读性和更好的代码重用。这个方面非常重要，尤其是在大型应用程序中。
- en: SASS can be installed by executing `$ gem install sass` command or downloading
    it from the Git repository at [http://sass-lang.com/download.html](http://sass-lang.com/download.html).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过执行 `$ gem install sass` 命令或从 Git 仓库 [http://sass-lang.com/download.html](http://sass-lang.com/download.html)
    下载来安装 SASS。
- en: 'To compile SASS code into CSS code, go to views folder and type:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 SASS 代码编译成 CSS 代码，请转到视图文件夹并输入：
- en: '[PRE30]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Then run the web server and navigate to `index.html`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行 Web 服务器并导航到 `index.html`。
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter we learned how to build a JavaScriptMVC application and organize
    code and workflow to create web applications in a more efficient and less error
    prone way.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何构建一个 JavaScriptMVC 应用程序，以及如何以更高效和更少出错的方式组织和编写代码以及工作流程。
