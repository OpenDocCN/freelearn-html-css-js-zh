["```js\n//Module Starts\n\n(function(window){\n  var sum = function(x, y){\n    return x + y;\n  }\n\n  var sub = function(x, y){\n    return x - y;\n  }\n\n  var math = {\n    findSum: function(a, b){\n      return sum(a,b);\n    },\n    findSub: function(a, b){\n      return sub(a, b);\n    }\n  }\n\n  window.math = math;\n})(window)\n\n//Module Ends\n\nconsole.log(math.findSum(1, 2)); //Output \"3\"\nconsole.log(math.findSub(1, 2)); //Output \"-1\"\n```", "```js\ndefine(function(){\n  var sum = function(x, y){\n    return x + y;\n  }\n  var sub = function(x, y){\n    return x - y;\n  }\n  var math = {\n    findSum: function(a, b){\n      return sum(a,b);\n    },\n    findSub: function(a, b){\n      return sub(a, b);\n    }\n  }\n  return math;\n});\n```", "```js\nrequire([\"math\"],Â function(math){\n  console.log(math.findSum(1, 2)); //Output \"3\"\n  console.log(math.findSub(1, 2)); //Output \"-1\"\n})\n```", "```js\nvar sum = function(x, y){\n  return x + y;\n}\n\nvar sub = function(x, y){\n  return x - y;\n}\n\nvar math = {\n  findSum: function(a, b){\n    return sum(a,b);\n  },\n\n  findSub: function(a, b){\n    return sub(a, b);\n  }\n}\n\nexports.math = math;\n```", "```js\nvar math = require(\"./math\").math;\n\nconsole.log(math.findSum(1, 2)); //Output \"3\"\nconsole.log(math.findSub(1, 2)); //Output \"-1\"\n```", "```js\n(function (root, factory) {\n  //Environment Detection\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.returnExports = factory();\n  }\n}(this, function () {\n  //Module Definition\n  var sum = function(x, y){\n    return x + y;\n  }\n  var sub = function(x, y){\n    return x - y;\n  }\n  var math = {\n    findSum: function(a, b){\n      return sum(a,b);\n    },\n    findSub: function(a, b){\n      return sub(a, b);\n    }\n  }\n  return math;\n}));\n```", "```js\nexport {variableName};\nexport {variableName1, variableName2, variableName3};\nexport {variableName as myVariableName};\nexport {variableName1 as myVariableName1, variableName2 as myVariableName2};\nexport {variableName as default};\nexport {variableName as default, variableName1 as myVariableName1, variableName2};\nexport default function(){};\nexport {variableName1, variableName2} from \"myAnotherModule\";\nexport * from \"myAnotherModule\";\n```", "```js\nimport x from \"module-relative-path\";\nimport {x} from \"module-relative-path\";\nimport {x1 as x2} from \"module-relative-path\";\nimport {x1, x2} from \"module-relative-path\";\nimport {x1, x2 as x3} from \"module-relative-path\";\nimport x, {x1, x2} from \"module-relative-path\";\nimport \"module-relative-path\";\nimport * as x from \"module-relative-path\";\nimport x1, * as x2 from \"module-relative-path\";\n```", "```js\n    var LN2 = Math.LN2;\n    var N10 = Math.LN10;\n\n    function getLN2()\n    {\n      return LN2;\n    }\n\n    function getLN10()\n    {\n      return LN10;\n    }\n\n    export {getLN2, getLN10};\n    ```", "```js\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction getSin(value)\n{\n  return sin(value);\n}\n\nfunction getCos(value)\n{\n  return cos(value);\n}\n\nexport {getCos, getSin};\n```", "```js\nimport * as logarithm from \"math_modules/logarithm\";\nimport * as trigonometry from \"math_modules/trigonometry\";\n\nexport default {\n  logarithm: logarithm,\n  trigonometry: trigonometry\n}\n```", "```js\nimport math from \"math\";\n\nconsole.log(math.trigonometry.getSin(3));\nconsole.log(math.logarithm.getLN2(3));\n```"]