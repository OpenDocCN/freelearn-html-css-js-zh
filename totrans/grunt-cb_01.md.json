["```js\n    $ npm install --global grunt-cli\n\n    ```", "```js\n    grunt-cli: The grunt command line interface. (v0.1.13)\n\n    Fatal error: Unable to find local grunt.\n\n    If you're seeing this message, either a Gruntfile wasn't found or grunt hasn't been installed locally to your project. For more information about installing and configuring grunt, please see the Getting Started guide:\n\n    http://gruntjs.com/getting-started\n\n    ```", "```js\nname: (grunt-book) myproject\nversion: (0.0.0)\ndescription: My first Grunt project.\nentry point: (index.js)\ntest command:\ngit repository:\nkeywords:\nauthor:\nlicense: (ISC)\n\n```", "```js\n{\n  \"name\": \"myproject\",\n  \"version\": \"0.0.0\",\n  \"description\": \"My first Grunt project.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```", "```js\n    $ npm install --save grunt\n\n    ```", "```js\n    module.exports = function (grunt) {\n      grunt.initConfig({});\n      grunt.registerTask('default', []);\n    };\n    ```", "```js\n    Done, without errors.\n\n    ```", "```js\n    $ npm install --save grunt-contrib-jshint\n\n    ```", "```js\n    module.exports = function (grunt) {\n      grunt.initConfig({});\n      grunt.loadNpmTasks('grunt-contrib-jshint');\n      grunt.registerTask('default', []);\n    };\n    ```", "```js\n    module.exports = function (grunt) {\n      grunt.initConfig({\n        jshint: {\n          sample: {\n            files: 'src/*.js'\n          }\n        }\n      });\n      grunt.loadNpmTasks('grunt-contrib-jshint');\n      grunt.registerTask('default', []);\n    };\n    ```", "```js\n    $ npm install --save load-grunt-tasks\n\n    ```", "```js\n    module.exports = function (grunt) {\n      require('load-grunt-tasks')(grunt);\n      grunt.initConfig({\n        jshint: {\n          sample: {\n            files: 'src/*.js'\n          }\n        }\n      });\n      grunt.registerTask('default', []);\n    };\n    ```", "```js\n    connect: {\n      server: {\n        options: {\n          base: 'www',\n          keepalive: true\n        }\n      }\n    }\n    ```", "```js\n    <html>\n      <head>\n        <title>Test Page</title>\n      </head>\n      <body>\n        <h1>This is a test page.</h1>\n      </body>\n    </html>\n    ```", "```js\n    Running \"connect:server\" (connect) task\n    Waiting forever...\n    Started connect web server on http://0.0.0.0:8000\n\n    ```", "```js\noptions: {\n  base: 'www',\n  keepalive: true,\n  open: true\n}\n```", "```js\noptions: {\n  base: 'www',\n  keepalive: true,\n  open: {\n    target: 'http://localhost:8000/test.html',\n    appName: 'firefox',\n    callback: function() {\n      console.log('Test URL opened in Firefox!');\n    }\n  }\n}\n```", "```js\noptions: {\n  port: 3000,\n  base: 'www',\n  keepalive: true\n}\n```", "```js\noptions: {\n  base: 'www',\n  keepalive: true,\n  useAvailablePort: true\n}\n```", "```js\noptions: {\n  base: 'www',\n  keepalive: true,\n  hostname: 'something.else.com'\n}\n```", "```js\noptions: {\n  base: ['www', 'other'],\n  keepalive: true\n}\n```", "```js\n    $ npm install --save connect\n\n    ```", "```js\n    options: {\n      base: 'www',\n      keepalive: true,\n      middleware: function(connect, options, middlewares) {\n        middlewares.push(\n          require('connect').middleware.compress()\n        );\n        return middlewares;\n      }\n    }\n    ```", "```js\noptions: {   base: 'www',\n  keepalive: true,\n  onCreateServer: function(server, connect, options) {\n    var io = require('socket.io').listen(server);\n    io.sockets.on('connect', function (socket) {\n      // do something with socket\n    });\n  }\n}\n```", "```js\n    var sample = 'Sample';\n    console.log(sample);\n    ```", "```js\n    jshint: {\n      sample: {\n        src: ['sample.js']\n      }\n    }\n    ```", "```js\n    watch: {\n      sample: {\n        files: ['sample.js'],\n        tasks: ['jshint']\n      }\n    }\n    ```", "```js\n    Running \"watch\" task\n    Waiting...\n\n    ```", "```js\n    Running \"watch\" task\n    Waiting...\n    >> File \"sample.js\" changed.\n    Running \"jshint:sample\" (jshint) task\n    >> 1 file lint free.\n\n    Done, without errors.\n    Completed in 1.0s at Wed Jan 1 2014 00:00:00 GMT - Waiting...\n\n    ```", "```js\nwatch: {\n  sample: {\n    files: ['**/*.txt'],\n    tasks: ['sample']\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample', 'another', 'finally']\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample'],\n    options: {\n      spawn: false\n    }\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample'],\n    options: {\n      interrupt: true\n    }\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample'],\n    options: {\n      debounceDelay: 1000\n    }\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample'],\n    options: {\n      event: ['added', 'deleted']\n    }\n  }\n}\n```", "```js\nwatch: {\n  options: {\n    forever: false\n  },\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample']\n  }\n}\n```", "```js\nwatch: {\n  sample: {\n    files: ['sample.txt'],\n    tasks: ['sample'],\n    options: {\n      atBegin: true\n    }\n  }\n}\n```", "```js\n    <html>\n      <head>\n        <title>LiveReload Test</title>\n      </head>\n      <body>\n        <h1>First there was this.</h1>\n      </body>\n    </html>\n    ```", "```js\n    connect: {\n      dev: {\n        options: {\n          base: 'www',\n          livereload: true\n        }\n      }\n    }\n    ```", "```js\n    watch: {\n      www: {\n        files: ['www/index.html'],\n        options: {\n          livereload: true\n        }\n      }\n    }\n    ```", "```js\n    Running \"connect:dev\" (connect) task\n    Started connect web server on http://0.0.0.0:8000\n\n    Running \"watch\" task\n    Waiting...\n\n    ```", "```js\n    >> File \"www/index.html\" changed.\n    Completed in 0.001s at Wed Jan 01 2014 00:00:00 GMT – Waiting...\n\n    ```", "```js\n    jshint: {\n      sample: {\n        src: 'src/**/*.js'\n      }\n    }\n    ```", "```js\n    Running \"jshint:sample\" (jshint) task\n    >> 3 files lint free.\n\n    ```", "```js\n    Running \"newer:jshint\" (newer) task\n\n    Running \"newer:jshint:sample\" (newer) task\n\n    Running \"jshint:sample\" (jshint) task\n    >> 3 files lint free.\n\n    Running \"newer-postrun:jshint:sample:.cache\" (newer-postrun) task\n\n    ```", "```js\n    Running \"newer:jshint\" (newer) task\n\n    Running \"newer:jshint:sample\" (newer) task\n    No newer files to process.\n\n    ```", "```js\n    Running \"newer:jshint\" (newer) task\n\n    Running \"newer:jshint:sample\" (newer) task\n\n    Running \"jshint:sample\" (jshint) task\n    >> 1 file lint free.\n\n    Running \"newer-postrun:jshint:sample:1:.cache\" (newer-postrun) task\n\n    ```", "```js\n    watch: {\n      jshint: {\n        files: ['src/**/*.js'],\n        tasks: ['newer:jshint']\n      }\n    }\n    ```", "```js\n    Running \"watch\" task\n    Waiting...\n\n    ```", "```js\n    >> File \"src/file.js\" changed.\n    Running \"newer:jshint\" (newer) task\n\n    Running \"newer:jshint:sample\" (newer) task\n\n    Running \"jshint:sample\" (jshint) task\n    >> 1 file lint free.\n\n    Running \"newer-postrun:jshint:sample:1:.cache\" (newer-postrun) task\n\n    ```", "```js\n    module.exports = function () {\n      var sample = 'Sample';\n      console.log(sample);\n    };\n    ```", "```js\n    {\n      pkg: grunt.file.readJSON('package.json')\n    }\n    ```", "```js\n    uglify: {\n      sample: {\n        files: {\n          'sample_<%= pkg.version %>.js': 'sample.js'\n        }\n      }\n    }\n    ```", "```js\n    Running \"uglify:sample\" (uglify) task\n    File sample_0.0.0.js created: 81 B → 57 B\n\n    ```", "```js\n    module.exports = function(){var a=\"Sample\";console.log(a)};\n    ```", "```js\n    version: 0.0.0\n\n    ```", "```js\n    pkg: grunt.file.readYAML('sample.yaml')\n\n    ```", "```js\n    Running \"uglify:sample\" (uglify) task\n    File sample_0.0.0.js created: 81 B → 57 B\n\n    ```"]