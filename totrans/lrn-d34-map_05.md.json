["```js\n<body> \n  <button id=\"btn\">Click me</button> \n\n  <script> \n    varbtn = document.getElementById('btn'); \n    btn.addEventListener('click', function() { \n      console.log('Hello world'); }, false ); \n  </script> \n</body> \n```", "```js\n#tooltip{ \nposition: absolute; \nz-index: 2; \nbackground: rgba(0,153,76,0.8); \nwidth:130px; \nheight:20px; \ncolor:white; \nfont-size: 14px; \npadding:5px; \ntop:-150px; \nleft:-150px; \nfont-family: \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \n \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif; \n} \n```", "```js\n<div id=\"tooltip\"></div> \n```", "```js\nvar hover = function(d) { \n  var div = document.getElementById('tooltip'); \n  div.style.left = event.pageX +'px'; \n  div.style.top = event.pageY + 'px'; \n  div.innerHTML = d.properties.NAME_1; \n}; \n```", "```js\n//Enter \nmexico.enter() \n  .append('path') \n  .attr('d', path) \n  .on(\"mouseover\", hover); \n```", "```js\n#tooltip svg{ \nborder-top:0; \nmargin-left:-5px; \nmargin-top:7px; \n} \n```", "```js\n<script src=\"img/base.js\"></script> \n<script src=\"img/sparkline.js\"></script> \n```", "```js\nvar db = d3.map(); \nvar sparkline = d3.charts.sparkline().height(50).width(138); \n```", "```js\nvar setDb = function(data) { \n  data.forEach(function(d) { \n    db.set(d.geoID, [ \n       {\"x\": 1, \"y\": +d.q1}, \n       {\"x\": 2, \"y\": +d.q2}, \n       {\"x\": 3, \"y\": +d.q3}, \n       {\"x\": 4, \"y\": +d.q4} \n    ]); \n  }); \n}; \n```", "```js\nvar geoID = function(d) { \n  return \"c\" + d.properties.ID_1; \n}; \n```", "```js\nvar hover = function(d) { \n  var div = document.getElementById('tooltip'); \n  div.style.left = event.pageX +'px'; \n  div.style.top = event.pageY + 'px'; \n  div.innerHTML = d.properties.NAME_1; \n\n  var id = geoID(d); \n  d3.select(\"#tooltip\").datum(db.get(id)).call(sparkline.draw); \n}; \n```", "```js\nd3.csv('states-data.csv', function(data) { \n  setDb(data); \n}); \n```", "```js\n.overlay { \nfill: none; \npointer-events: all; \n} \n```", "```js\nvar zoomed = function () { \n  map.attr(\"transform\", \"translate(\"+ d3.event.translate + \")\n   scale(\" + d3.event.scale + \")\"); \n}; \n```", "```js\nvar zoom = d3.behavior.zoom() \n    .scaleExtent([1, 8]) \n    .on(\"zoom\", zoomed); \n    .size([width, height]); \n```", "```js\nsvg.append(\"rect\") \n      .attr(\"class\", \"overlay\") \n      .attr(\"width\", width) \n      .attr(\"height\", height) \n      .call(zoom); \n```", "```js\nvar height = 600; \nvar width = 900; \nvar projection = d3.geo.orthographic().clipAngle(90); \nvar path = d3.geo.path().projection(projection); \n```", "```js\nd3.json('world.json', function(data) { \nvar countries = topojson.feature(data, data.objects.countries); \nvar map = svg.append('g').attr('class', 'boundary'); \nvar world = map.selectAll('path').data(countries.features); \n```", "```js\nworld.enter() \n      .append('path') \n      .attr('d', path); \n```", "```js\nvar i = 0; \n```", "```js\nd3.json('world.json', function(data) { \nvar countries = topojson.feature(data, data.objects.countries); \nvar mexico = countries.features[102]; \n```", "```js\nvar map = svg.append('g').attr('class', 'boundary'); \nvar world = map.selectAll('path').data(countries.features); \nvar mexico = map.selectAll('.mexico').data([mexico]); \n```", "```js\nmexico.enter() \n  .append('path') \n  .attr('class', 'mexico') \n  .attr('d', path) \n  .style('fill', 'lightyellow').style('stroke', 'orange'); \n```", "```js\nsetInterval(function() { \ni = i+0.2; \n      // move i around in the array to get a feel for yaw, pitch \n      // and roll \n      // see diagram \nprojection.rotate([i,0,0]) \nworld.attr('d', path); \nmexico.attr('d', path)\n   .style('fill', 'lightyellow').style('stroke', 'orange'); \n    }, 20); \n```", "```js\nprojection.rotate([i,0,0]) \n```", "```js\nproject.rotate([0,i,0]); \n```", "```js\nvar dragging = function(d) { \nvar c = projection.rotate(); \nprojection.rotate([c[0] + d3.event.dx/2, c[1], c[2]]) \n\nworld.attr('d', path); \nmexico.attr('d', path) \n        .style('fill', 'lightyellow').style('stroke', 'orange'); \n}; \n```", "```js\nvar drag = d3.behavior.drag() \n    .on(\"drag\", dragging); \n```", "```js\nsvg.append(\"rect\") \n      .attr(\"class\", \"overlay\") \n      .attr(\"width\", width) \n      .attr(\"height\", height) \n      .call(drag); \n```"]