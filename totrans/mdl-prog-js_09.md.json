["```js\n// adding AppTester as a sub-module\nImagesInc_Core.AppTester = (function(){\n    function runAllUnitTests(){\n        var testModule;\n        for(testModule in ImagesInc_Core.AppTester){\n\n            if(typeof ImagesInc_Core.AppTester[testModule] === 'object'){\n                // run tests\n                ImagesInc_Core.AppTester[testModule].runAllTest(); \n            }\n        }        \n    }    \n    function reportTestResults(totalNumOfTest, passedNum, failedNum){      \n        var failTestMsgColor;        \n        failTestMsgColor = failedNum ? 'red':'pink';\n\n        ImagesInc_Core.log(1, 'Total number of tests run: ' + totalNumOfTest, 'orange');\n        ImagesInc_Core.log(1, 'Number of Tests Passed: ' + passedNum, 'green');\n        ImagesInc_Core.log(1, 'Number of Tests failed: ' + failedNum, failTestMsgColor);        \n    }    \n    return {\n        runAllUnitTests: runAllUnitTests,\n        reportTestResults: reportTestResults\n    };            \n})();\n```", "```js\nImagesInc_Core.AppTester = (function(mainTestModule){\n\n    if(!mainTestModule){\n        ImagesInc_Core.log(3, 'main test module not found!');\n        return false;  \n    }    \n    var CookieTester = mainTestModule.CookieHandlerTester = {};    \n    var unitTests = [], totalErrors = 0, totalPasses = 0;\n\n    //create a new value in the cookie\n    unitTests[unitTests.length] = CookieTester.createCookie = function(name, value, decodeFlag){    \n        if(!name){\n            name = \"testCreateCookie\";\n        }\n        if(!value){\n            value = \"testing for cookie\";\n        }\n        if(!decodeFlag){\n            decodeFlag = false;\n        }\n...\nreturn mainTestModule;\n\n})(ImagesInc_Core.AppTester); // using tight augmentation\n```", "```js\nvar CookieTester = mainTestModule.CookieHandlerTester = {};\n```", "```js\nCookieTester.createCookie = function(name, value, decodeFlag){\n...\n}\n```", "```js\n// run all unit tests\nCookieTester.runAllTests = function (){    \n        ImagesInc_Core.log(1, '*** RUNNING CookieHandler MODULE UNIT TESTS ***', 'orange');\n\n        // run all unit tests\n        for(var i=0; i< unitTests.length; i++){\n          unitTests[i]();  \n        }\n\n        //** test for negative result\n        // should not be able to find the value below in the cookie specified\n        CookieTester.findValueInCookie(\"testCreateCookie\", \"some value!\", true);\n        unitTests.length++;\n        // should not be able to add the value to the cookie as it will be a duplicate\n        CookieTester.addValueToCookie(\"testCreateCookie\",\"testing for cookie\",false);\n        unitTests.length++;        \n        mainTestModule.reportTestResults(unitTests.length,totalPasses, totalErrors);\n        CookieTester.cleanup();    \n};\n```", "```js\nCookieTester.findValueInCookie(\"testCreateCookie\", \"some value!\", true);\n```", "```js\nunitTests[unitTests.length] = CookieTester.createCookie = function(name, value, decodeFlag)\n```", "```js\nImagesInc_Core.runAllUnitTests();\n```", "```js\nmainCore.runAllUnitTests = function(){         \n        if(typeof ImagesInc_Core.AppTester !== 'undefined'){\n\n            try{\n                ImagesInc_Core.AppTester.runAllUnitTests();                \n            }catch(e){\n                mainCore.log(3, 'AppTester ERROR! ' + e.name + \": \" + e.message);\n            }\n        }else{         \n            mainCore.log(3, 'AppTester not available! ');\n        }                  \n};\n```", "```js\nfunction runAllUnitTests(){\n        var testModule;        \n        for(testModule in ImagesInc_Core.AppTester){            \n            if(typeof ImagesInc_Core.AppTester[testModule] === 'object'){\n                // run tests\n                ImagesInc_Core.AppTester[testModule].runAllTests(); \n            }\n        }        \n}\n```", "```js\nCookieTester.runAllTests = function (){\n   ...\n}\n```", "```js\nCookieTester.cleanup = function(){    \n        ImagesInc_Core.CookieHandler.deleteAllCookies();\n        totalErrors = 0; totalPasses = 0;    \n};\n```", "```js\ndescribe(\"Testing cookieHandler Sub-module\", function() {\n...\n}\n```", "```js\ndescribe(\"Testing cookieHandler Sub-module\", function() {\n\n    var cookieHandler = ImagesInc_Core.CookieHandler;  \n    describe(\"createCookie Method\", function() {\n        it(\"should exist\", function() {\n            expect(cookieHandler.createCookie).toBeDefined();\n        });\n…\n}\n```", "```js\nvar expect = chai.expect;\ndescribe(\"Testing storageHandler Sub-module\", function() {\n    var storageHandler = ImagesInc_Core.StorageHandler;\n\n    describe(\"saveValueToLocalStorage Method\", function() {\n        it(\"should exit\", function() {\t\t \n         \texpect(storageHandler.saveValueToLocalStorage).to.exit;\n        });\n….\n});\n```"]