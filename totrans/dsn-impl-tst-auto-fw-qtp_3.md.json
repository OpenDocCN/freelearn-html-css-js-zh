["```js\n    Browser(\"Customer\").page(\"Customer\").weblist(\"date\").select \"31\"\n    Browser(\"Customer\").page(\"Customer\").WebList(\"date\").Select \"31\"\n    ```", "```js\n    Dim objtype= \"WinButton\" or objtype= \"WinButton\"\n    ```", "```js\n    today = #7/10/2013#   or  Dim today = #7/10/2013#\n    ```", "```js\n    Set ObjectVar = ObjectHierarchy \n    Set UserEditBox = Browser(\"email\").Page(\"email\").WebEdit(\"username\") \n    UserEditBox.Set \"John\" \n    ```", "```js\n    MyVar = Browser(\"email\").Page(\"email\").WebEdit(\"username\").GetTOProperty(\"text\")  \n    ```", "```js\n    Dim Myvar = Browser(\"email\").Page(\"email\").WebEdit(\"username\").GetTOProperty(\"text\")  \n    ```", "```js\n    Set WebEditObj = Browser(\"Mercury\").Page(\"Mercury\").WebTable(\"table\").ChildItem (8, 2, \"WebEdit\", 0) \n    WebEditObj.Set \"name\" \n    ```", "```js\n    Call RunAction(\"BookFlight\", oneIteration) \n    ```", "```js\n    result = Browser(\"Customer\").Page(\"Customer\").Check (CheckPoint(\"MyProperty\")) \n    ```", "```js\n    Browser(\"Mercury Tours\").Page(\"Method of Payment\").WebTable(\"FirstName\").Click \n    ```", "```js\nSub subSUM(a,b)\n  print a+b\nEnd Sub\n```", "```js\nFunction funcSUM(a,b)\nFuncSUM = a+b\nEnd Function\n```", "```js\nWindow(\"WinFlight\").Activate\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type \"111114\"\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom:\").Select \"Frankfurt\"\n'Insert a checkpoint to verify if button is enabled or not\nWindow(\"WinFlight\").WinButton(\"FLIGHT\").Check CheckPoint(\"WINFLIGHT\")\n'In the preceding checkpoint verify if button is enabled or not\nisChkPointPass= Window(\"WinFlight\").WinButton(\"FLIGHT\").Check (CheckPoint(\"FLIGHT\"))\n'Note: We have used the bracket around Checkpoint to get the outcome\nIf isChkPointPass = True Then\n  'Continue with order of creation\n  Window(\"WinFlight\").WinComboBox(\"FlyTo:\").Select \"Paris\"\nWindow(\"WinFlight\").WinButton(\"FLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightsTable\").WinButton(\"WinOK\").Click\nWindow(\"WinFlight\").WinEdit(\"Name:\").Set \"ashish\"\nWindow(\"WinFlight\").WinButton(\"Insert Order\").Click\n  Else\n      'Leave the action if a checkpoint fails\n  ExitAction\nEnd If\n```", "```js\nWindow(\"WinFlight\").Activate\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type \"111114\"\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom:\").Select \"Frankfurt\"\n'Insert an output value to verify if button is enabled or not\nWindow(\"WinFlight\").WinButton(\"FLIGHT\"). Output CheckPoint(\"FLIGHT\")\n'The first column represents from where value is retrieved and the second column represents sheet Global/local\noutval= Datatable(\"WINFLIGHT_Button\",dtGlobalSheet)\n'Verify the expected and actual values and report them in test results using reporter.reportevent\nIf   outval = True Then\n  Reporter.ReportEvent micPass,\"Verify WinFlight Button\", \"Match\"\n  else\n  Reporter.ReportEvent micFail,\"Verify WinFlight Button\", \"The property value does not match with the expected value\"\nExitAction\nEnd If\n```", "```js\nWindow(\"WinFlight\").WinButton(\"FLIGHT\").CheckProperty( \"enabled\", True, 10000)\n```", "```js\n    Window(\"WinFlight\").WinComboBox(\"FlyTo:\").CheckProperty(\"items count\", micGreaterThanOrEqual(10), 10000)\n    ```", "```js\n    Window(\"WinFlight\").WinEdit(\"Order No:\").CheckProperty (\"text\",micRegExpMatch(\"\\d{1,3}\"),10000) \n    Creating checkpoint using GetROProperty\n    ```", "```js\n    Required. A String value. Property to retrieve from the object. Required. A String value. Property to retrieve from the object. \n    'We are retrieving the value of enable property of the FLIGHT Button and comparing it with expected value thus serves as a check to take a further action\n    Pvalue =Window(\"WinFlight\").WinButton(\"FLIGHT\").GetRoProperty(\"enabled\")\n    If Pvalue = True Then\n      'Create the order\n      Else\n    'Exit the Test \n      ExitTest\n    End If\n    ```", "```js\n'Open the Flight Reservation login window and create the script\nDialog(\"DialogLogin\").WinEdit(\"AgentName\").Set \"ashish\"\nDialog(\"DialogLogin\").WinEdit(\"AgentPassword\").SetSecure \"51d84ff2108dc473a416b19e1fed478fab95ca75\"\nDialog(\"DialogLogin\").WinButton(\"WinOK\").Click\n'The script will fail at this step, the object synchronization is 2 seconds but window takes more time to open; hence script fails\nWindow(\"WinFlight\").Activate\n```", "```js\nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"AgentName\").Set \"ashish\"\nDialog(\"DialogLogin\").WinEdit(\"AgentPassword\").SetSecure \"51d84ff2108dc473a416b19e1fed478fab95ca75\"\nDialog(\"DialogLogin\").WinButton(\"WinOK\").Click\n'The script will fail at this step. To avoid this, insert a wait statement\nwait 10'Window(\"WinFlight\").Activate\n```", "```js\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type \"111114\"\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom:\").Select \"Frankfurt\"\nWindow(\"WinFlight\").WinComboBox(\"FlyTo:\").Select \"Los Angeles\"\nWindow(\"WinFlight\").WinButton(\"FLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightsTable\").WinButton(\"WinOK\").Click\nWindow(\"WinFlight\").WinEdit(\"Name:\").Set \"ashish\"\nWindow(\"WinFlight\").WinButton(\"Insert Order\").Click\n'Window(\"WinFlight\").WinButton(\"Button\").Click\n'When QTP tries to execute the following statement, application will not allow to click on the button since it is waiting for progress bar to reach 100% and display the message Insert Done...\n'Here script will fail\n'We need  to insert the dynamic synchronization point; this waits until the text changes to Insert Done...\n'Window(\"WinFlight\").ActiveX(\"ThreedPanelControl\").WaitProperty \"text\", \"Insert Done...\", 10000\n```", "```js\nSet Object = Window(\"WinFlight\").ActiveX(\"ThreedPanelControl\")\nSet WinsObject = Window(\"WinFlight\")\n'It accepts the object with its property and value. You have to wait along with timeout\nFunction ManualSyncPoint (Object,propertyname, propertyval,timeout )\n   Do \n  If Object.GetROProperty(propertyname)  =propertyval then\n'if propertyname and propertyval match, come out of the loop and execute next step\n      Exit Do\n  else\n       wait(1)\nend if \n   Loop While (i <= timeout)\nEnd Function\n'In the preceding method we have used the static wait; we can implement it without using wait statement as well\nExample 2:\nFunction ManualSyncPoint2(Object ,propertyname, propertyval, timeout )\n   sttimer = Timer\n'Timer allows to get the number of seconds elapsed since midnight (12:00 AM)\n   Do \n   If Object.GetROProperty(propertyname)  = propertyval then\nExit Do\n  else\n      end if \n        endtimer = Timer\n    'The difference between the two timer objects provides the number of seconds we need to determine for timeout\n   Loop While ( int (endtimer-sttimer) <= -timeout)\n End Function\n'Function that allows to wait till object exists\nFunction WaitTillExists(Object, timeout )\nloadtimer = Timer\n Do\n      isObjectExists = Object.Exist\n  If isObjectExists = true Then\n  Exit Do\n    else\n  End If\n    completetimer = Timer\n Loop While(completetimer-loadtimer  <= timeout)\nEnd Function\n'Now we will use these functions in our scripts; refer to the following script\nDialog(\"DialogLogin\").Activate\nDialog(\"DialogLogin\").WinEdit(\"AgentName\").Set \"ashish\"\nDialog(\"DialogLogin\").WinEdit(\"Password\").SetSecure \"51d84ff2108dc473a416b19e1fed478fab95ca75\"\nDialog(\"DialogLogin\").WinButton(\"WinOK\").Click\n' wait\n'Go to the test settings and make object synchronization time to 2 sec\nWaitTillExists WinsObject, 10\nWindow(\"WinFlight\").Activate\nWindow(\"WinFlight\").ActiveX(\"MaskEdBox\").Type \"111114\"\nWindow(\"WinFlight\").WinComboBox(\"FlyFrom:\").Select \"Frankfurt\"\nWindow(\"WinFlight\").WinComboBox(\"FlyTo:\").Select \"Los Angeles\"\nWindow(\"WinFlight\").WinButton(\"FLIGHT\").Click\nWindow(\"WinFlight\").Dialog(\"FlightsTable\").WinButton(\"WinOK\").Click\nWindow(\"WinFlight\").WinEdit(\"Name:\").Set \"ashish\"\nWindow(\"WinFlight\").WinButton(\"Insert Order\").Click\nWindow(\"WinFlight\").WinButton(\"Button\").Click\n'When QTP tries to execute the following statement, the application will not allow to click on the button since it is waiting for progress bar to reach 100% and display the message Insert Done...\n'Here script will fail\n'We need to insert the dynamic synchronization point\nWindow(\"WinFlight\").ActiveX(\"ThreedPanelControl\").WaitProperty \"text\", \"Insert Done...\", 5000\n\n'The preceding statement waits till the text property changes to Insert Done... and waits for upto 10 secs\n If ManualSyncPoint1(Object ,\"text\",\"Insert Doneâ€¦\",10)  = true then\n   'do nothing\n  else \n  ExitTest\n  end if\nWindow(\"WinFlight\").WinButton(\"Button\").Click\n```", "```js\n'Add object description as property value pair\nDialog(\"regexpwndclass:=Login\").Activate\nDialog(\"regexpwndclass:=Login\").WinEdit(\"regexpwndclass:=Edit\",\"attached text:=AgentName\").Set \"ashish\"\nDialog(\"regexpwndclass:=Login\").WinEdit(\"regexpwndclass:=Edit\",\"attached text:=AgentPassword\").Set \"mercury\"\nDialog(\"regexpwndclass:=Login\").WinButton(\"regexpwndtitle:=OK\").Click\n'The multiple property and value pair is provided in the object description; property value pair should be comma separated\n\nMethod 2: Define Description as constant\nNote:\nConstant represents the literal value and gives it a name that is not allowed to change at time of script execution. Declare constants for use in place of literal values. For example, Const Env = \"QA\"\nDefine Constant\nName of the constant and expression; expression is Literal or another constant, or any combination that includes all arithmetic or logical operators\nConstant can be declared as Public or Private. A variable that is declared as a constant is available to all procedures in all scripts. Not allowed in procedures. The Private keyword is used at script level to declare constants available only within the script where the declaration is made. Not allowed in procedures\nConst Dailoglogin =\"regexpwndtitle:=Login\"\nConst agent = \"attached text:=AgentName\"\nConst password = \"attached text:=Password:\"\nConst okButton =\"text:=OK\"\n\nDialog(Dialoglogin).Activate\nDialog(Dialoglogin).WinEdit(agent).Set \"ashish\"\nDialog(Dialoglogin).WinButton(okButton).Click\n\nMethod 3: Substitution of property values shown as follows\n\ndialogname =\"login\"\nagentname =\"AgentName\"\npasswdname =\"Password:\"\nbuttonlabel=\"OK\"\n\nDialog(\"regexpwndtitle:=\"&dialogname).Activate\nDialog(\"regexpwndtitle:=\"&dialogname).WinEdit(\"attached text:=\"&agentname).Set \"ashish\"\nDialog(\"regexpwndtitle:=\"&dialogname).WinEdit(\"attached text:=\"&passwdname).Set \"mercury\"\nDialog(\"regexpwndtitle:=\"&dialogname).WinButton(\"text:=\"& buttonlabel).Click\n```", "```js\nSet diaDesc = Description.Create()\ndiaDesc(\"micclass\").value=\"Dialog\"\ndiaDesc(\"regexpwndtitle\").Value =\"Login\"\n\nSet btnDesc=Description.Create()\nbtnDesc(\"micclass\").value=\"WinButton\"\nbtnDesc(\"text\").value=\"OK\"\n\nSet txtDesc = Description.Create()\ntxtDesc(\"micclass\").value=\"WinEdit\"\ntxtDesc(\"attached text\").Value =\"AgentName\"\n\nSet pwdDesc = Description.Create()\npwdDesc(\"micclass\").value=\"WinEdit\"\npwdDesc(\"attached text\").Value =\"Password:\"\n\n'Use these objects into the scripts shown as follows\n\nDialog(diaDesc).Activate\nDialog(diaDesc).WinEdit(txtDesc).Set \"ashish\"\nDialog(diaDesc).WinEdit(pwdDesc).Set \"mercury\"\nDialog(diaDesc).WinButton(btnDesc).Click\n```", "```js\n'Ordinal Identifier stats with 0\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"index:=0\").Set \"Ashish1\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"index:=1\").Set \"Ashish2\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"index:=2\").Set \"Ashish3\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"index:=3\").Set \"Ashish4\"\n\n```", "```js\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"location:=0\").Set \"Ashish1\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"location:=1\").Set \"Ashish2\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"location:=2\").Set \"Ashish3\"\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=FNAME\", \"location:=3\").Set \"Ashish4\"\n\n```", "```js\nCode = getCode() ' getCode is a function that's return the code given in previous page, we can use that code to create the object description for webEdit\nBrowser(\"email\").Page(\"email\").WebEdit(\"name:=text_\"&Code).Set \"jonh\"\n```", "```js\nSet buttonDesc=Description.Create()\nbuttonDesc(\"micclass\").value=\"WinButton\"\nSet winAll=Window(\"regexpwndtitle:=Flight Reservation\").ChildObjects(buttonDesc)\ncnt=winAll.count\nMsgBox \"Total number of Buttons: \"&cnt\nFor i=0 to cnt-1\n  MsgBox winAll(i).getroproperty(\"text\")\n   If  winAll(i).Getroproperty(\"text\")=\"FLIGHT\" Then\n  winAll(i).Click\n    End If\nNext\n```", "```js\nWindow(\"WinFlight\").Dialog(\"regexpwndclass:=#32770\", \"text:=Fax Order No\\. \\d{1,3}\").Activex(\"progid:=MSMask.MaskEdBox.1\").Type \"1111111111\"\n```", "```js\n'Verify whether the order number is numeric\nWindow(\"WinFlight\").WinEdit(\"Order No:\").CheckProperty (\"text\",micRegExpMatch(\"\\d{1,3}\"),10000) \n```", "```js\nType in the QTP editor   \nResult = 5 / 0\n'When test runs the preceding line, it will display Error Division by zero\n```", "```js\nOn Error Resume Next\nResult = 5 / 0 \n'The above line will not display any error\n```", "```js\nOn Error Resume Next 'Enables the Err object to deal with error\n'Raise an overflow error.\nErr.Raise 6   \nMsgBox \"Error number is\" & CStr(Err.Number) & \"--\" & Cstr(Err.Description))\n'Clear the error.\nErr.Clear   \n```", "```js\nOn Error Resume Next\nConst ForReading = 1\nDim fso, theFile, retstring\n   Set fileso = CreateObject(\"Scripting.FileSystemObject\")\n   Set theFile = fileso.OpenTextFile(\"c:\\FilenotFound.txt\", ForReading)\n'Verify if error number of the Err object using its property number\n   If Err.number <> 0 then\n   'Error send there is no file exists by FilenotFound.txt   \n  MsgBox Cstr(Err.number & \"--\"&  Cstr(Err.Description)\n   ExitAction(-1)\nelse\n  'Do While   theFile.AtEndOfStream <> True\nDo until   theFile.AtEndOfStream \n      str = theFile.ReadLine()\n      MsgBox str\n  Loop\n   theFile.Close\n  end if\n```", "```js\nres = Browser(\"Mercury\").Page(\"Mercury\").WebEdit(\"userName\").Check ( CheckPoint(\"Name\") ) \nIf res = False Then \n'ExitActionIteration /ExitAction / /ExitTestIteration /ExitTest /ExitComponentIteration /ExitComponent\n'We can use any one of them to gracefully exit based on how test is executing.\nEnd If \n```"]