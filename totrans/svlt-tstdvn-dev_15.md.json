["```js\nimport { writable } from 'svelte/store';\nexport const birthdays = writable([]);\n```", "```js\nimport {\n  birthdays as birthdaysStore\n} from '../../stores/birthdays.js';\n...\ndescribe('NextBirthday', () => {\n  it('displays a single birthday', () => {\n    birthdaysStore.set([\n      createBirthday('Hercules', '2023-09-01')\n    ]);\n    render(NextBirthday);\n    expect(document.body).toHaveTextContent(\n      'Hercules has the next birthday, on 2056-09-01'\n    );\n  });\n});\n```", "```js\nconst julyOfYear = (year) => {\n  const date = new Date();\n  date.setFullYear(year, 6, 1);\n  return date;\n};\ndescribe('NextBirthday', () => {\n  beforeEach(() => {\n    vi.useFakeTimers();\n    vi.setSystemTime(julyOfYear(2056));\n  });\n  afterEach(() => {\n    vi.useRealTimers();\n  });\n  ...\n});\n```", "```js\nit('updates the displayed data when the store is updated', async () => {\n  birthdaysStore.set([\n    createBirthday('Hercules', '2023-09-01')\n  ]);\n  render(NextBirthday);\n  await birthdaysStore.set([\n    createBirthday('Hercules', '2023-09-01'),\n    createBirthday('Ares', '2023-08-01')\n  ]);\n  expect(document.body).toHaveTextContent(\n    'Ares has the next birthday, on 2056-08-01'\n  );\n});\n```", "```js\n$: nextBirthday = findNextBirthday($birthdays);\n```", "```js\nit('saves the loaded birthdays into the birthdays store', () => {\n  let storedBirthdays;\n  birthdaysStore.subscribe(\n    (value) => (storedBirthdays = value)\n  );\n  render(Page, { data: { birthdays } });\n  expect(storedBirthdays).toEqual(birthdays);\n});\n```", "```js\nit('updates the birthdays store when the component props change', async () => {\n  let storedBirthdays;\n  birthdaysStore.subscribe(\n    (value) => (storedBirthdays = value)\n  );\n  const { component } = render(Page, {\n    data: { birthdays }\n  });\n  await component.$set({ data: { birthdays: [] } });\n  expect(storedBirthdays).toEqual([]);\n});\n```"]