["```js\nconst assert = require('assert');\n\nfunction add(n1, n2) {\n  return 0;\n}\n```", "```js\nlet result = add(5, 5);\nassert.equal( result, 10, \"Should be 10\");\n\nconsole.log(\"Test passed!!\");\n```", "```js\n$ node testing.js\n```", "```js\nassert.js:81\n  throw new assert.AssertionError({\n  ^\nAssertionError: Should be 10\n    ...\n```", "```js\n\nconst assert = require('assert');\n\nfunction add(n1, n2) {\n\n  const result = n1 + n2;\n\n return result;\n\n}\n\nvar result = add(5, 5);\nassert.equal(result, 10, \"Should be 10\");\n\nconsole.log(\"Test passed!!\");\n```", "```js\n$ node testing.js\n Test passed!!\n```", "```js\nvar assert = require('assert');\n\nfunction add(n1, n2) {\n  return n1 + n2;\n}\n\nassert.equal(add(5, 5), 10, \"Should be 10\");\n\nconsole.log(\"Test passed!!\");\n```", "```js\n$ npm install jasmine --global\n```", "```js\n$ mkdir practice-jasmine\n$ cd practice-jasmine\n$ jasmine init\n```", "```js\n└───spec \n    └───support\n      └───jasmine.json\n\n```", "```js\n{\n  \"spec_dir\": \"spec\",\n  \"spec_files\": [\n    \"**/*[sS]pec.js\"\n  ],\n  \"helpers\": [\n    \"helpers/**/*.js\"\n  ],\n  \"stopSpecOnExpectationFailure\": false,\n  \"random\": true\n}\n```", "```js\n$ jasmine \nStarted\n\nNo specs found\nFinished in 0.002 seconds\n```", "```js\ndescribe(\"Calculator\", function() {\n\n   ...\n\n});\n```", "```js\ndescribe(\"Calculator\", function() {\n\n   it(\"should return the addition \", function() {\n ...\n });\n\n   it(\"should return the substraction \", function() {\n ...\n });\n\n   it(\"should return the multiplication \", function() {\n ...\n })\n\n   it(\"should return the division \", function() {\n ...\n })\n\n});\n```", "```js\nvar Calculator = {\n add: function(n1, n2) {\n return n1 + n2;\n },\n substract: function(n1, n2) {\n return n1 - n2;\n },\n multiply: function(n1, n2) {\n return n1 * n2;\n },\n divide: function(n1, n2) {\n return n1 / n2;\n }\n}\n\ndescribe(\"Calculator\", function() {\n...\n```", "```js\n...\n\ndescribe(\"Calculator\", function() {\n\n   it(\"should return the addition \", function() {\n       expect(Calculator.add(1, 2)).toEqual(3);\n   });\n\n   it(\"should return the substraction \", function() {\n       expect(Calculator.substract(1, 2)).toEqual(-1);\n   });\n\n   it(\"should return the multiplication \", function() {\n       expect(Calculator.multiply(1, 2)).toEqual(2);\n   })\n\n    it(\"should return the division \", function() {\n       expect(Calculator.divide(1, 2)).toEqual(0.5);\n   })\n\n});\n```", "```js\n$ jasmine \nStarted\n....\n\n4 specs, 0 failures\nFinished in 0.006 seconds\n```", "```js\n...\n\nit(\"should return the addition \", function() {\n       expect(Calculator.add(1, 2)).toEqual(30);\n});\n\n...\n```", "```js\n$ jasmine \n\nStarted \nF... \n\nFailures: \n1) Calculator should return the addition \n Message: \n Expected 3 to equal 30\\. \n Stack: \n Error: Expected 3 to equal 30\\. \n ...\n\n4 specs, 1 failure \nFinished in 0.011 seconds \n```", "```js\n$ mkdir practice-karma\n$ cd practice-karma\n$ npm init\n```", "```js\n{\n  \"name\": \"practice-karma\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```", "```js\npractice-karma/\n└── package.json\n```", "```js\n$ npm install karma karma-jasmine jasmine-core karma-chrome-launcher --save-dev\n```", "```js\n{\n  \"name\": \"practice-karma\",\n  \"version\": \"1.0.0\",\n  ...\n  \"devDependencies\": {\n \"jasmine-core\": \"^2.8.0\",\n \"karma\": \"^1.7.1\",\n \"karma-chrome-launcher\": \"^2.2.0\",\n \"karma-jasmine\": \"^1.1.1\"\n }\n}\n```", "```js\n$ karma init\n```", "```js\nmodule.exports = function(config) {\n  config.set({\n    basePath: '',\n    frameworks: ['jasmine'],\n    files: [\n ],\n    exclude: [\n    ],\n    preprocessors: {\n    },\n    reporters: ['progress'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: true,\n    browsers: ['Chrome'],\n    singleRun: false,\n    concurrency: Infinity\n  })\n}\n```", "```js\n...\nfiles: [\n   'specs/*.spec.js'\n],\n...\n```", "```js\n$ mkdir specs\n$ touch calculator.spec.js\n```", "```js\n.\n└── node_modules\n├── package.json\n├── karma.spec.js\n└── specs\n    └── calculator.spec.js\n```", "```js\n$ mkdir src\n$ touch src/calculator.js\n```", "```js\n...\nfiles: [\n      'specs/*.spec.js',\n      'src/*.js'\n],\n...\n```", "```js\nwindow.Calculator = {\n\n  add: function(n1, n2) {\n    return n1 + n2;\n  },\n\n  multiply: function(n1, n2) {\n    return n1 * n2;\n  }\n\n}\n```", "```js\ndescribe(\"Calculator Tests\", function() {\n\n  it(\"should return 10\", function() {\n\n    expect(window.Calculator.add(5, 5)).toBe(10);\n\n  });\n\n});\n```", "```js\n./node_modules/karma/.bin/karma start karma.conf.js\n```", "```js\n$ ./node_modules/karma/bin/karma start karma.conf.js\n\n10 12 2017 12:12:43.049:WARN [karma]: No captured browser, open http://localhost:9876/\n10 12 2017 12:12:43.059:INFO [karma]: Karma v1.7.1 server started at http://0.0.0.0:9876/\n10 12 2017 12:12:43.060:INFO [launcher]: Launching browser Chrome with unlimited concurrency\n10 12 2017 12:12:43.086:INFO [launcher]: Starting browser Chrome\n10 12 2017 12:12:44.628:INFO [Chrome 62.0.3202 (Mac OS X 10.12.6)]: Connected on socket 8n0My3AYk-xKfu9sAAAA with id 38155723\nChrome 62.0.3202 (Mac OS X 10.12.6): Executed 1 of 1 SUCCESS (0 secs / 0.002 secChrome 62.0.3202 (Mac OS X 10.12.6): Executed 1 of 1 SUCCESS (0.007 secs / 0.002 secs)\n```", "```js\n{\n  \"name\": \"practice-karma\",\n  ...\n  \"scripts\": {\n    \"test\": \"./node_modules/karma/bin/karma start karma.conf.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n   ...\n  }\n}\n```", "```js\n$ npm test\n```", "```js\n$ au new aurelia-testapp\n```", "```js\n$ cd aurelia-testapp\n$ au run --watch\n\n...\nFinished 'writeBundles'\nApplication Available At: http://localhost:9000\nBrowserSync Available At: http://localhost:3001 \n```", "```js\n$ au generate component info-box\n\nWhat sub-folder would you like to add it to?\nIf it doesn't exist it will be created for you.\n\nDefault folder is the source folder (src).\n\n[.]>\nCreated info-box in the 'src' folder\n```", "```js\nexport class InfoBox { \n  constructor() {\n    this.username = 'Reader';\n this.topic = 'Testing and Debugging';\n  }\n}\n```", "```js\n<template>\n  <h1>Hello, ${username}!</h1>\n  <p>You are learning: <b>${topic} </b></p>\n</template>\n```", "```js\n<template>\n  <require from=\"info-box\"></require> \n  <info-box></info-box>\n</template>\n```", "```js\n.\n├── aurelia-karma.js\n└── unit\n    └── setup.js\n```", "```js\n import {StageComponent} from 'aurelia-testing';\n import {bootstrap} from 'aurelia-bootstrapper';\n\n describe('Info-Box', () => {\n\n   it('should render the username and topic', () => {\n\n   });\n });\n```", "```js\n import {StageComponent} from 'aurelia-testing';\n import {bootstrap} from 'aurelia-bootstrapper';\n\n describe('Info-Box', () => {\n\n   it('should render the username and topic', done => {\n\n     let component = StageComponent\n .withResources('info-box')\n .inView('<info-box></info-box>');\n\n     component\n .create(bootstrap);\n\n   });\n\n });\n```", "```js\n import {StageComponent} from 'aurelia-testing';\n import {bootstrap} from 'aurelia-bootstrapper';\n\n describe('Info-Box', () => {\n\n   it('should render the username and topic', done => {\n     let component = StageComponent\n               .withResources('info-box') \n               .inView('<info-box></info-box>');\n\n     component\n     .create(bootstrap)\n     .then(() => {\n\n const h1 = component.element.querySelector('h1').innerHTML;\n const pa = component.element.querySelector('p').innerHTML;\n\n expect(h1).toBe('Hello, Reader!');\n expect(pa).toBe('You are learning: <b>Testing and Debugging </b>'); \n done();\n\n })\n .catch(e => console.log(e.toString()));\n   });\n });\n```", "```js\n$ au karma\n```", "```js\n...\nStarting 'karma'...\n...\nChrome 62.0.3202 (Mac OS X 10.12.6): Executed 1 of 1 SUCCESS (0 secs / 0.105 secChrome 62.0.3202 (Mac OS X 10.12.6): Executed 1 of 1 SUCCESS (0.109 secs / 0.105 secs)\nFinished 'karma'\n```", "```js\n$ cd aurelia-testapp\n$ au run --watch\n```", "```js\n<template>\n\n  <button click.trigger=\"debugme()\"> Debug Me!</button>\n\n</template>\n```", "```js\nexport class InfoBox { \n\n  debugme() {\n\n alert(\"YOU PRESSED THE DEBUGME BUTTON\")\n\n }\n\n}\n```", "```js\nexport class InfoBox { \n\n  debugme() {\n\n    debugger;\n\n    alert(\"YOU PRESSED THE DEBUGME BUTTON\")\n\n  }\n\n}\n```"]