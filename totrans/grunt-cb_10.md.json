["```js\n    $ npm install --global yo\n\n    ```", "```js\n    $ npm install --global generator-assemble\n\n    ```", "```js\n    $ mkdir mysite && cd mysite\n\n    ```", "```js\n    $ yo assemble\n\n    ```", "```js\n    ? Your project name: mysite\n    ? Your project description: The best project ever.\n    ? Would you mind telling me your username on Github? me\n    ? Do you want to install Ass\n    emble plugins? No\n\n    ```", "```js\n    create AUTHORS\n    create CHANGELOG\n    create LICENSE-MIT\n    create Gruntfile.js\n    create package.json\n    create .editorconfig\n    create README.md\n    create .gitignore\n    create .gitattributes\n    create bower.json\n    create src/data/site.yml\n    create src/assets/theme.css\n    create src/content/markdown.md\n    create src/templates/pages/blog.hbs\n    create src/templates/pages/index.hbs\n    create src/templates/layouts/default.hbs\n    create src/templates/partials/navbar-fixed-top.hbs\n\n    ```", "```js\n    $ bower install & npm install\n\n    ```", "```js\n    Running \"clean:0\" (clean) task\n    >> 0 paths cleaned.\n\n    Running \"copy:bootstrap\" (copy) task\n    Created 4 directories, copied 12 files\n\n    Running \"copy:theme\" (copy) task\n    Created 1 directories, copied 1 files\n\n    Running \"assemble:pages\" (assemble) task\n    Assembling dist/blog.html OK\n    Assembling dist/index.html OK\n    >> 2 pages assembled.\n\n    Running \"connect:livereload\" (connect) task\n    Started connect web server on http://localhost:9000\n\n    Running \"watch\" task\n    Waiting...\n\n    ```", "```js\n    ---\n    title: Bio\n    heading: 'Biography'\n    ---\n    ```", "```js\n    <div class=\"jumbotron\">\n      <h1>{{ heading }}</h1>\n      <p>Building awesome sites since 2014.</p>\n    </div>\n    ```", "```js\n    >> File \"src/templates/pages/bio.hbs\" added.\n    Running \"assemble:pages\" (assemble) task\n    Assembling dist/bio.html OK\n    Assembling dist/blog.html OK\n    Assembling dist/index.html OK\n    >> 3 pages assembled.\n\n    ```", "```js\n    ## Achievements\n\n    * Built this awesome site\n    * Mastered Grunt\n    * Explored Assemble\n\n    ## History\n\n    Born in a galaxy far, far away.\n    ```", "```js\n    ---\n    title: Bio\n    heading: 'Biography'\n    ---\n    <div class=\"jumbotron\">\n      <h1>{{ heading }}</h1>\n      {{md 'src/content/bio.md'}}\n    </div>\n    ```", "```js\n    >> File \"src/templates/pages/bio.hbs\" changed.\n    Running \"assemble:pages\" (assemble) task\n    Assembling dist/bio.html OK\n    Assembling dist/blog.html OK\n    Assembling dist/index.html OK\n    >> 3 pages assembled.\n\n    ```", "```js\n    title: Mysite\n    sections:\n      - title: Home\n        dest: 'dist/index.html'\n      - title: Bio\n        dest: 'dist/bio.html'\n      - title: Blog\n        dest: 'dist/blog.html'\n    ```", "```js\n    {{#each pages}}\n    <li{{#if this.isCurrentPage}} class=\"active\"{{/if}}>\n      <a href=\"{{relative dest this.dest}}\">{{data.title}}</a>\n    </li>\n    {{/each}}\n    ```", "```js\n    {{#each site.sections}}\n    <li {{#is dest ../page.dest}} class=\"active\"{{/is}}>\n      <a href=\"{{relative ../page.dest dest}}\">{{title}}</a>\n    </li>\n    {{/each}}\n    ```", "```js\n    >> File \"src/templates/partials/navbar-fixed-top.hbs\" changed.\n    Running \"assemble:pages\" (assemble) task\n    Assembling dist/bio.html OK\n    Assembling dist/blog.html OK\n    Assembling dist/index.html OK\n    >> 3 pages assembled.\n    ```", "```js\n    ---\n    layout: src/templates/layouts/default.hbs\n    ---\n    <div class=\"row\">\n      <div class=\"col-xs-3\">\n        <ul class=\"nav nav-pills nav-stacked\">\n          {{#each pages}}\n            <li{{#if this.isCurrentPage}} class=\"active\"{{/if}}>\n              <a href=\"{{relative dest this.dest}}\">\n                {{data.title}}\n              </a>\n            </li>\n          {{/each}}\n        </ul>\n      </div>\n      <div class=\"col-xs-9\">\n        <h1>{{title}}</h1>\n        {{> body}}\n      </div>\n    </div>\n    ```", "```js\n    ---\n    title: One\n    ---\n    <p>This is post one.</p>\n    ```", "```js\n    assemble: {\n      options: {\n        flatten: true,\n        assets: '<%= config.dist %>/assets',\n        layout: '<%= config.src %>/templates/layouts/default.hbs',\n        data: '<%= config.src %>/data/*.{json,yml}',\n        partials: '<%= config.src %>/templates/partials/*.hbs'\n      },\n      pages: {\n        files: {\n          '<%= config.dist %>/': [\n            '<%= config.src %>/templates/pages/*.hbs'\n          ]\n        }\n      }\n    }\n    ```", "```js\n    posts: {\n      options: {\n        layout: '<%= config.src %>/templates/layouts/post.hbs',\n      },\n      files: {\n        '<%= config.dist %>/posts/': [\n          '<%= config.src %>/templates/pages/posts/*.hbs'\n        ]\n      }\n    }\n    ```", "```js\n    ---\n    title: Blog\n    ---\n    <h1>Posts</h1>\n    <ul>\n      <li><a href=\"/posts/one.html\">One</a></li>\n      <li><a href=\"/posts/two.html\">Two</a></li>\n      <li><a href=\"/posts/three.html\">Three</a></li>\n    </ul>\n    ```", "```js\n    assemble: {\n      files: [\n        '<%= config.src %>' +\n        '/{content,data,templates}/**/*.{md,hbs,yml}'\n      ],\n      tasks: ['assemble']\n    }\n    ```", "```js\n    Running \"assemble:posts\" (assemble) task\n    Assembling dist/posts/one.html OK\n    Assembling dist/posts/three.html OK\n    Assembling dist/posts/two.html OK\n    >> 3 pages assembled.\n\n    ```", "```js\n    - filename: one\n     data:\n     title: One\n     content: <p>This is post one.</p>\n    - filename: two\n     data:\n     title: Two\n     content: <p>This is post two.</p>\n    - filename: three\n     data:\n     title: Three\n     content: <p>This is post three.</p>\n\n    ```", "```js\n    Posts: {\n      options: {\n        layout: '<%= config.src %>/templates/layouts/post.hbs',\n        pages: grunt.file.readYAML('src/data/posts.yml')\n      },\n      files: {'<%= config.dist %>/posts/': []}\n    }\n    ```", "```js\n    Running \"assemble:posts\" (assemble) task\n    Assembling dist/posts/one.html OK\n    Assembling dist/posts/two.html OK\n    Assembling dist/posts/three.html OK\n    >> 3 pages assembled.\n\n    ```", "```js\n    module.exports.register = function(\n      Handlebars, options, params\n    ) {\n      Handlebars.registerHelper(\n        'pages',\n        function(target, options) {\n          var config = params.grunt.config;\n          var pages = config.get('assemble')[target].options.pages;\n          var result = '';\n          for(var i = 0; i < pages.length; i++) {\n            result = result + options.fn(pages[i]);\n          }\n          return result;\n        }\n      );\n    };\n    ```", "```js\n    config: {\n      lib: 'lib',\n      src: 'src',\n      dist: 'dist'\n    }\n    ```", "```js\n    assemble: {\n      files: [\n        '<%= config.src %>' +\n          '/{content,data,templates}/**/*.{md,hbs,yml}',\n        '<%= config.lib %>/helpers/*.js'\n      ],\n      tasks: ['assemble']\n    }\n    ```", "```js\n    options: {\n      flatten: true,\n      assets: '<%= config.dist %>/assets',\n      layout: '<%= config.src %>/templates/layouts/default.hbs',\n      data: '<%= config.src %>/data/*.{json,yml}',\n      partials: '<%= config.src %>/templates/partials/*.hbs',\n      helpers: '<%= config.lib %>/helpers/*.js'\n    }\n    ```", "```js\n    ---\n    title: Blog\n    ---\n    <h1>Posts</h1>\n    <ul>\n      {{#pages 'posts'}}\n        <li>\n         <a href=\"/posts/{{filename}}.html\">\n          {{data.title}}\n         </a>\n        </li>\n      {{/pages}}\n    </ul>\n    ```", "```js\n    $ npm install assemble-middleware-sitemap\n\n    ```", "```js\n    options: {\n      flatten: true,\n      assets: '<%= config.dist %>/assets',\n      layout: '<%= config.src %>/templates/layouts/default.hbs',\n      data: '<%= config.src %>/data/*.{json,yml}',\n      partials: '<%= config.src %>/templates/partials/*.hbs',\n      helpers: '<%= config.lib %>/helpers/*.js',\n      plugins: ['assemble-middleware-sitemap']\n    }\n    ```"]