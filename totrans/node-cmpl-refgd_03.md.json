["```js\nconst fs = require('fs'); \n```", "```js\nvar count = 0;\nexports.next = function() { return ++count; };\nexports.hello = function() {\n  return \"Hello, world!\";\n};\n```", "```js\n$ node\n> const s = require('./simple');\nundefined\n> s.hello();\n'Hello, world!'\n> s.next();\n1\n> s.next();\n2\n> s.next();\n3\n> console.log(s.count);\nundefined\nundefined\n> \n```", "```js\n(function() { ... contents of module file ... })(); \n```", "```js\nexports.funcName = function(arg, arg1) { ... };\nmodule.exports.funcName = function(arg, arg2) { .. }; \n```", "```js\nexports = function(arg, arg1) { ... };\n```", "```js\nmodule.exports = function(arg, arg1) { ... };\n```", "```js\nvar count = 0;\nexport function next() { return ++count; }\nfunction squared() { return Math.pow(count, 2); }\nexport function hello() {\n    return \"Hello, world!\";\n}\nexport default function() { return count; }\nexport const meaning = 42;\nexport let nocount = -1;\nexport { squared };\n```", "```js\n export function next() { .. }\n```", "```js\nmodule.exports.next = function() { .. }\n```", "```js\nimport * as simple2 from './simple2.mjs';\n\nconsole.log(simple2.hello());\nconsole.log(`${simple2.next()} ${simple2.squared()}`);\nconsole.log(`${simple2.next()} ${simple2.squared()}`);\nconsole.log(`${simple2.default()} ${simple2.squared()}`);\nconsole.log(`${simple2.next()} ${simple2.squared()}`);\nconsole.log(`${simple2.next()} ${simple2.squared()}`);\nconsole.log(`${simple2.next()} ${simple2.squared()}`);\nconsole.log(simple2.meaning);\n```", "```js\n$ node --experimental-modules simpledemo.mjs \n(node:63937) ExperimentalWarning: The ESM module loader is experimental.\nHello, world!\n1 1\n2 4\n2 4\n3 9\n4 16\n5 25\n42\n```", "```js\nimport { \n    default as simple, hello, next \n} from './simple2.mjs';\nconsole.log(hello());\nconsole.log(next());\nconsole.log(next());\nconsole.log(simple());\nconsole.log(next());\nconsole.log(next());\nconsole.log(next());\n```", "```js\nimport _fs from 'fs';\nconst fs = _fs.promises;\nimport util from 'util';\n\n(async () => {\n  const files = await fs.readdir('.');\n  for (let fn of files) {\n    console.log(fn);\n  }\n})().catch(err => { console.error(err); });\n```", "```js\nimport { promises as fs } from 'fs';\n```", "```js\n$ node --experimental-modules ls.mjs \n(node:45186) ExperimentalWarning: The ESM module loader is experimental.\nfile:///Volumes/Extra/book-4th/chap03/ls.mjs:1\nimport { promises as fs } from 'fs';\n ^^^^^^^^\nSyntaxError: The requested module 'fs' does not provide an export named 'promises'\n at ModuleJob._instantiate (internal/modules/esm/module_job.js:89:21)\n```", "```js\nimport _fs from 'fs';\nconst fs = _fs.promises;\n```", "```js\n$ node --experimental-modules ls.mjs\n(node:65359) ExperimentalWarning: The ESM module loader is experimental.\n(node:37671) ExperimentalWarning: The fs.promises API is experimental\nls.mjs\nmodule1.js\nmodule2.js\nsimple.js\nsimple2.mjs\nsimpledemo.mjs\nsimpledemo2.mjs\n```", "```js\n{\n   export const meaning = 42;\n}\n```", "```js\n$ node --experimental-modules badexport.mjs \n(node:67984) ExperimentalWarning: The ESM module loader is experimental.\nSyntaxError: Unexpected token export\n at ModuleJob.loaders.set [as moduleProvider] (internal/loader/ModuleRequest.js:32:13)\n at <anonymous>\n```", "```js\nconst fs = require('fs');\nmodule.exports = JSON.parse(\n        fs.readFileSync('/path/to/file-name.json', 'utf8'));\n```", "```js\n{ \n    \"hello\": \"Hello, world!\", \n    \"meaning\": 42 \n}\n```", "```js\nconst util = require('util');\nconst data = require('./data');\nconsole.log(util.inspect(data));\n```", "```js\n$ node showdata.js \n{ hello: 'Hello, world!', meaning: 42 }\n```", "```js\n$ nvm install 6\nDownloading and installing node v6.14.1...\nDownloading https://nodejs.org/dist/v6.14.1/node-v6.14.1-darwin-x64.tar.xz...\n######################################################################## 100.0%\nComputing checksum with shasum -a 256\nChecksums matched!\nNow using node v6.14.1 (npm v3.10.10)\n$ nvm use 6\nNow using node v6.14.1 (npm v3.10.10)\n$ npm install esm\n... npm output\n$ node --require esm simpledemo.mjs \nHello, world!\n1 1\n2 4\n2 4\n3 9\n4 16\n5 25\n42\n\n```", "```js\n$ node --version\nv6.14.1\n$ node -r esm ls.mjs \n/Users/David/chap03/ls.mjs:5\n(async () => {\n ^\n\nSyntaxError: Unexpected token (\n at exports.runInThisContext (vm.js:53:16)\n at Module._compile (module.js:373:25)\n```", "```js\n(function() { ... contents of module file ... })();\n```", "```js\nconst A = \"value A\";\nconst B = \"value B\";\nexports.values = function() {\n   return { A: A, B: B };\n}\n```", "```js\nconst util = require('util');\nconst A = \"a different value A\";\nconst B = \"a different value B\";\nconst m1 = require('./module1');\nconsole.log(`A=${A} B=${B} values=${util.inspect(m1.values())}`);\nconsole.log(`${m1.A} ${m1.B}`);\nconst vals = m1.values();\nvals.B = \"something completely different\";\nconsole.log(util.inspect(vals));\nconsole.log(util.inspect(m1.values()));\n```", "```js\n$ node module2.js \nA=a different value A B=a different value B values={ A: 'value A', B: 'value B' }\nundefined undefined\n{ A: 'value A', B: 'something completely different' }\n{ A: 'value A', B: 'value B' }\n```", "```js\n{ name: \"myAwesomeLibrary\", \n  main: \"./lib/awesome.js\" }\n```", "```js\nconst notesModel = require('./models-sequelize/notes'); \n```", "```js\nconst app = require('../app'); \n```", "```js\nconst express = require('express');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\n```", "```js\n$ npm ls cookie\nnotes@0.0.0 /Users/David/chap05/notes\n├─┬ cookie-parser@1.3.5\n│ └── cookie@0.1.3 \n└─┬ express@4.13.4\n  └── cookie@0.1.5\n```", "```js\nimport './foo?search';\nimport './foo#hash';\n```", "```js\nimport cjsModule from 'common-js-module';\n...\ncjsModule.functionName();\n```", "```js\n// Node.js dynamically determined module loading\nconst moduleName = require(`../models/${process.env.MODEL_NAME}`);\n```", "```js\n$  npm help json\n```", "```js\n{ \"name\": \"packageName\", \n   \"version\": \"1.0\", \n   \"main\": \"mainModuleName\", \n   \"modules\": { \n    \"mod1\": \"lib/mod1\", \n    \"mod2\": \"lib/mod2\" \n  } \n} \n```", "```js\n$ npm search packageName\n```", "```js\n\"dependencies\": { \n    \"foo\" : \"1.0.0 - 2.x.x\", \n    \"bar\" : \">=1.0.2 <2.1.2\" \n } \n```", "```js\n\"description\": \"My wonderful package that walks dogs\",\n\"homepage\": \"http://npm.dogs.org/dogwalker/\",\n\"author\": \"dogwhisperer@dogs.org\"\n```", "```js\nbin: { \n  'nodeload.js': './nodeload.js',\n  'nl.js': './nl.js' \n},\n```", "```js\ndirectories: { lib: './lib', bin: './bin' }, \n```", "```js\n$ npm help scripts  \n```", "```js\n$ npm install moduleName  \n```", "```js\n$ npm install acoustid  \n```", "```js\n$ npm view akasharender\n...\n{ name: 'akasharender',\n  description: 'Rendering support for generating static HTML websites \n  or EPUB eBooks',\n  'dist-tags': { latest: '0.6.15' },\n  versions: \n   [ '0.0.1',\n  ...\n  author: 'David Herron <david@davidherron.com> \n (http://davidherron.com)',\n  repository: { type: 'git', url: \n 'git://github.com/akashacms/akasharender.git' },\n  homepage: 'http://akashacms.com/akasharender/toc.html',\n...\n} \n```", "```js\n$ npm view akasharender homepage\nhttp://akashacms.org/akasharender/toc.html \n```", "```js\n$ npm help <command>\nThe help text will be shown on your screen.\nOr, see the website: http://docs.npmjs.com \n```", "```js\n$ npm install express\n/home/david/projects/notes/\n- express@4.13.4\n...  \n```", "```js\n$ npm install package-name@tag\n$ npm install package-name@version\n$ npm install package-name@version-range\n```", "```js\n$ npm install -g grunt-cli  \n```", "```js\n$ sudo npm install -g grunt-cli\n```", "```js\n$ npm config get prefix\n/Users/david/.nvm/versions/node/v8.9.1\n```", "```js\n$ npm install akasharender --save  \n```", "```js\n\"dependencies\": { \n    \"akasharender\": \"^0.6.15\" \n} \n```", "```js\n$ npm install --production  \n```", "```js\n$ npm config set save false\n```", "```js\n\"dependencies\": {\n    \"module1\": \"6.1.2\"\n}\n```", "```js\n$ export PATH=./node_modules/.bin:${PATH}     # bash\n$ setenv PATH ./node_modules/.bin:${PATH}     # csh\n```", "```js\n$ npm outdated \n```", "```js\n$ npm update express\n$ npm update \n```", "```js\n$ npm install git+ssh://user@hostname:project.git#tag --save  \n```", "```js\n\"engines\": { \n    \"node\": \">= 8.x\" \n} \n```"]