["```js\n<section>\n    <h3>Immediate Control</h3>\n    <p>Status: \n        <strong><span id=\"control-status\"></span></strong>\n    </p>\n</section>\n```", "```js\nif (registration.installing) {\n    serviceWorker = registration.installing;\n    document.querySelector('#control-status')\n    .textContent = 'Installing';\n} else if (registration.waiting) {\n    serviceWorker = registration.waiting;\n    document.querySelector('#control-status')\n    .textContent = 'Waiting';\n} else if (registration.active) {\n    serviceWorker = registration.active;\n    document.querySelector('#control-status')\n    .textContent = 'Active';\n}\n```", "```js\nif (typeof self.skipWaiting === 'function') {\n  console.log('self.skipWaiting()');\n  self.addEventListener('install', function(evt) {\n    evt.waitUntil(self.skipWaiting());\n  });\n} else {\n  console.log('self.skipWaiting() is unsupported.');\n}\n\nif (self.clients && (typeof self.clients.claim === 'function')) {\n  console.log('self.clients.claim()');\n  self.addEventListener('activate', function(evt) {\n    evt.waitUntil(self.clients.claim());\n  });\n} else {\n  console.log('self.clients.claim() is unsupported.');\n}\n```", "```js\nfunction printStatus(status) {\n    document.querySelector('#status').innerHTML = status;\n    document.body.appendChild(document.createTextNode(Array.prototype.join.call(arguments, \", \") + '\\n'));\n\n    console.log.apply(console, arguments); \n}\n```", "```js\nfunction wait(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n```", "```js\nself.addEventListener('install', function(evt) {\n  console.log('INSTALL: In progress ..');\n  evt.waitUntil(\n    wait(DELAY).then(function() {\n      console.log('INSTALL: Complete');\n    })\n  );\n});\n\nself.addEventListener('activate', function(evt) {\n  console.log('ACTIVATION: In progress ..');\n  evt.waitUntil(\n    wait(DELAY).then(function() {\n      console.log('ACTIVATION: Complete');\n    })\n  );\n});\n\nself.addEventListener('fetch', function(evt) {\n  evt.respondWith(new Response(\"Service workers says Hello!\"));\n});\n```", "```js\n  if (navigator.serviceWorker) {\n    var message = document.querySelector('#message');\n    var received = document.querySelector('#received');\n    var status = document.querySelector('#status');\n    var inbox = {};\n```", "```js\nnavigator.serviceWorker.addEventListener('message', function(evt) {\n\n      var userId = evt.data.client;\n      var node;\n\n      if (!inbox[userId]) {\n        node = document.createElement('div');\n        received.appendChild(node);\n        inbox[userId] = node;\n      }\n\n      node = inbox[userId];\n      node.textContent = 'User ' + userId + ' says: ' + evt.data.message;\n});\n```", "```js\nmessage.addEventListener('input', function() {\n      if (!navigator.serviceWorker.controller) {\n        status.textContent = 'ERROR: no controller';\n        return;\n      }\n\n      navigator.serviceWorker.controller.postMessage(message.value);\n});\n```", "```js\nself.addEventListener('message', function(event) {\n\n  var promise = self.clients.matchAll()\n  .then(function(clientList) {\n    var senderID = event.source ? event.source.id : 'unknown';\n\n    if (!event.source) {\n      console.log('Unsure about the sender');\n    }\n\n    clientList.forEach(function(client) {\n      if (client.id === senderID) {\n        return;\n      }\n      client.postMessage({\n        client: senderID,\n        message: event.data\n      });\n    });\n  });\n\n  if (event.waitUntil) {\n    event.waitUntil(promise);\n  }\n});\n```", "```js\nself.addEventListener('activate', function(event) {\n  event.waitUntil(self.clients.claim());\n});\n```", "```js\n<section class=\"message\">\n    <div id=\"received\"></div>\n\n    <textarea id=\"message\" style=\"width: 90%;padding: 10px;\" rows=\"5\"></textarea>\n    <p>Message</p>\n</section>\n```", "```js\n<section >\n    <h1>Proxy</h1>\n    <p>Click the links below for navigating to fetch handlers:</p>\n    <div class=\"links\">\n      <a href=\"/service-workers/07/04/hello\">/hello</a><br />\n      <a href=\"/service-workers/07/04/hello/world\">/hello/world</a>\n    </div>\n</section>\n```", "```js\nvar helloFetchHandler = function(event) {\n  if (event.request.url.indexOf('/hello') !== -1) {\n    console.log('DEBUG: Inside the /hello handler.');\n    event.respondWith(new Response('Fetch handler for /hello'));\n  }\n};\n\nvar helloWorldFetchHandler = function(event) {\n  if (event.request.url.endsWith('/hello/world')) {\n    console.log('DEBUG: Inside the /hello/world handler.');\n    event.respondWith(new Response('Fetch handler for /hello/world'));\n  }\n};\n```", "```js\nvar fetchHandlers = [helloWorldFetchHandler, helloFetchHandler];\n\nfetchHandlers.forEach(function(fetchHandler) {\n  self.addEventListener('fetch', fetchHandler);\n}); \n```", "```js\nthis.serviceWorkerUtil = new ServiceWorkerUtil();\n```", "```js\ndocument.getElementById('reloadapp').addEventListener('click', function() {\n    window.location.reload();\n  });\n```", "```js\nif (this.serviceWorkerUtil.isServiceWorkerSupported()) {\n    document.getElementById('swinstall').addEventListener('click',\n      function() {\n        self.enableFeatures();\n      }\n    );\n\n    document.getElementById('swuninstall').addEventListener('click',\n      function() {\n        self.disableFeatures();\n      }\n    );\n```", "```js\nif (this.serviceWorkerUtil.isServiceWorkerControllingThisApp()) {\n      Logger.info('App code run as expected');\n\n      this.disableSWRegistration();\n    } else {\n      this.enableSWRegistration();\n    }\n```", "```js\nApp.prototype.enableFeatures = function enableFeatures() {\n  var scriptURL;\n  var scope;\n\n  Logger.newSection();\n  Logger.log('ENABLE: Features enabled.');\n\n  scriptURL = document.getElementById('swscripturl');\n  scope = document.getElementById('swscope');\n\n  Logger.debug(\n    'Configuring the following service worker ' + scriptURL.value +\n    ' with scope ' + scope.value\n  );\n\n  if (scriptURL.value !== '') {\n    Logger.debug('scriptURL: ' + scriptURL.value);\n  } else {\n    Logger.error('No SW scriptURL specified');\n    return;\n  }\n\n  if (scope.value !== '') {\n    Logger.debug('SCOPE: ' + scope.value);\n  } else {\n    Logger.warn('SCOPE: not specified');\n  }\n\n  this.serviceWorkerUtil.registerServiceWorker(scriptURL.value, scope.value).then(\n      this.disableSWRegistration,\n      this.enableSWRegistration\n  );\n};\n```", "```js\nApp.prototype.enableSWRegistration = function() {\n  document.getElementById('swinstall').disabled = false;\n  document.getElementById('swuninstall').disabled = true;\n};\n\nApp.prototype.disableSWRegistration = function() {\n  document.getElementById('swinstall').disabled = true;\n  document.getElementById('swuninstall').disabled = false;\n};\n```", "```js\nvar app = new App();\n\nconsole.debug(app);\n```", "```js\n'use strict';\n\nself.addEventListener('push', function(event) {\n  event.waitUntil(\n    self.clients.matchAll().then(function(clients) {\n\n      var focused = clients.some(function(client) {\n        return client.focused;\n      });\n\n      var notificationMessage;\n\n      if (focused) {\n        notificationMessage = 'Same Page';\n      } else if (clients.length > 0) {\n        notificationMessage = 'Diffrerent Page, ' +\n                              'click here to gain focus';\n      } else {\n        notificationMessage = 'Page Closed, ' +\n                              'click here to re-open it!';\n      }\n\n      return self.registration.showNotification('ServiceWorker Cookbook', {\n        body: notificationMessage,\n      });\n    })\n  );\n});\n```", "```js\n<section class=\"playground\">\n    <div class=\"inputs\">\n        <span class=\"title\">Service Worker</span>\n        <input id=\"swscripturl\" placeholder=\"SW path\" value=\"./service-worker.js\" />\n        <span class=\"title\">Options </span>\n        <input id=\"swscope\" placeholder=\"scope (optional)\" />\n    </div>\n    <div class=\"actions\">\n        <button id=\"swinstall\" disabled>Register specified SW</button>\n        <button id=\"reloadapp\">Reload document</button>\n        <button id=\"swuninstall\" disabled>Unregister active SW</button>\n    </div>\n    <div id=\"log\" class=\"log\"></div>\n</section>\n```"]