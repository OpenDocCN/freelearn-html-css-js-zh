["```js\nnpm init -y\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\nconst board = new five.Board({\n  io: new Raspi()\n})\n\nboard.on('ready', () => {\n\n})\n```", "```js\nlet motor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V2.M1)\n```", "```js\nlet motor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V1.M1)\n```", "```js\nmotor.forward(speed) // speed 0-255, starts the motor forward\nmotor.stop() // the motor coasts to a stop\nmotor.start(speed) // resumes the motor moving forward\nmotor.reverse(speed) // moves the motor backward\n```", "```js\nboard.repl.inject({\n  motor\n})\n```", "```js\nnpm i --save johnny-five raspi-io\n```", "```js\nsudo node motor-test.js\n```", "```js\nmotor.forward(speed) // speed 0-255\nmotor.stop()\nmotor.start(speed)\nmotor.reverse(speed)\n```", "```js\nstartMovement()\n\nfunction startMovement(){\n  let direction = Math.round(Math.random())\n  let speed = Math.round(Math.random() * 75)\n  let time = Math.round(Math.random() * 10)\n\n  if(direction == 0){\n    motor.forward(speed)\n  } else {\n    motor.reverse(speed)\n  }\n\n  setTimeout(stopMovement, time*1000) \n}\n\nfunction stopMovement(){\n  let time = Math.round(Math.random() * 10)\n  motor.stop()\n  setTimeout(startMovement, time * 1000)\n}\n```", "```js\nsudo node cat-toy.js\n```", "```js\nconst Raspi = require('raspi-io')\nconst five = require('johnny-five')\nconst board = new five.Board({\n  io: new Raspi()\n})\n\nboard.on('ready', () => {\n\n})\n```", "```js\nlet leftMotor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V2.M1)\nlet rightMotor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V2.M2)\n```", "```js\nlet leftMotor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V1.M1)\nlet rightMotor = new five.Motor(five.Motor.SHIELD_CONFIGS.ADAFRUIT_V1.M2)\n```", "```js\nlet motors = new Five.Motors([leftMotor, rightMotor])\n```", "```js\nleftMotor.forward(255) // left motor full speed ahead!\nrightMotor.reverse(255) // right motor full speed reverse!\nmotors.stop() // both motors coast to a stop\n```", "```js\nfunction goForward(speed) {\n  motors.forward(speed)\n}\n```", "```js\nfunction stop() {\n  motors.stop()\n}\n```", "```js\nfunction goBackward(speed) {\n  motors.reverse(speed)\n}\n```", "```js\nfunction turnRight(speed) {\n  leftMotor.forward(speed)\n  rightMotor.stop()\n}\n\nfunction turnLeft(speed) {\n  rightMotor.forward(speed)\n  leftMotor.stop()\n}\n```", "```js\nfunction spinRight(speed) {\n  leftMotor.forward(speed)\n  rightMotor.reverse(speed)\n}\n\nfunction spinLeft(speed) {\n  rightMotor.forward(speed)\n  leftMotor.reverse(speed)\n}\n```", "```js\nboard.repl.inject({\n leftMotor,\n rightMotor,\n motors,\n goForward,\n goBackward,\n stop,\n turnRight,\n turnLeft,\n spinRight,\n spinLeft\n})\n```", "```js\nsudo node driver-bot.js\n```", "```js\ngoForward(100) // start moving both motors forward\nstop() // and stop\ngoBackward(50) // go backward at half the previous speed\nstop()\ngoForward(100)\nturnRight(100)\nturnLeft(200) // a faster left turn\nspinRight(255) // robots can't get dizzy, maximum fastness\nspinLeft(100)\nstop()\n```"]