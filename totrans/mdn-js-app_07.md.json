["```js\n$http(\"http://example.com/data.json\").then(function(){\n  //do something\n}).then(function(){\n  //do something more here\n}).then(function(){\n  //do something more here\n}).catch(function(){\n  //handle error\n})\n```", "```js\nfunction a()\n{\n  var b = 12;\n  function c()\n  {\n    console.log(b);\n  }\n\n  return c;\n}\n\nvar d = a();\n\nd(); //Output \"12\"\n```", "```js\n<!doctype html>\n<html>\n  <head>\n    <title>Bacon.js Example</title>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"img/jquery-2.2.0.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/Bacon.js\"></script>\n    <script type=\"text/javascript\" src=\"img/index.js\"></script>\n  </body>\n</html>\n```", "```js\n{\n  \"name\": \"Baconjs-Example\",\n  \"dependencies\": {\n    \"express\": \"4.13.3\",\n    \"baconjs\": \"0.7.83\"\n  }\n}\n```", "```js\nvar Bacon = require(\"baconjs\").Bacon;\nvar express = require(\"express\");\nvar app = express();\n\napp.use(express.static(__dirname + \"/public\"));\n\napp.get(\"/\", function(httpRequest, httpResponse, next){\n  httpResponse.sendFile(__dirname + \"/public/html/index.html\");\n})\n\napp.listen(8080);\n```", "```js\n<button id=\"myButton\">Click me!!!</button>\n```", "```js\ndocument.getElementById(\"myButton\").addEventListener(\"click\", function(){\n  console.log(\"Button Clicked\");\n}, false)\n```", "```js\nvar myButton_click_stream = $(\"#myButton\").asEventStream(\"click\");\nmyButton_click_stream.onValue(function(e){\n  console.log(\"Button Clicked\");\n})\n```", "```js\nvar button_click_counter = myButton_click_stream.scan(0, function(value, e){\n  return ++value;\n})\n\nbutton_click_counter.onValue(function(value){\n  console.log(\"Button is clicked \" + value + \" number of times\");\n})\n```", "```js\nvar button_click_time = button_click_counter.scan({}, function(value, count){\n  return {time: Date.now(), clicks: count};\n})\n\nbutton_click_time.onValue(function(value){\n  console.log(value);\n})\n```", "```js\nvar merged_property = Bacon.mergeAll([button_click_counter, button_click_time]);\n\nmerged_property.onValue(function(e){\n  console.log(e);\n})\n```", "```js\nvar myButton_click_stream = $(\"#myButton\").asEventStream(\"click\");\nmyButton_click_stream.onValue(function(e){\n  console.log(e);\n  console.log(\"Button Clicked\");\n})\n```", "```js\nvar myButton_click_stream = $(\"#myButton\").asEventStream(\"click\").filter(function(e){\n  return e.shiftKey === true;\n});\n\nmyButton_click_stream.onValue(function(e){\n  console.log(e);\n  console.log(\"Button Clicked\");\n})\n```", "```js\nvar button_click_time = button_click_counter.scan({}, function(value, count){\n  return {time: Date.now(), clicks: count};\n})\n```", "```js\nvar button_click_time = button_click_counter.scan({}, function(value, count){\n  return {time: Date.now(), clicks: count};\n}).map(function(value){\n  var date = new Date(value.time);\n  return (date).getHours() + \":\" + (date).getMinutes();\n})\n```", "```js\n<input id=\"url\" type=\"url\">\n```", "```js\nvar enter_key_click_stream = $(\"#url\").asEventStream(\"keyup\").filter(function(e){\n  return e.keyCode == 13;\n})\n\nvar url = enter_key_click_stream.scan(\"\", function(value, e){\n  return e.currentTarget.value;\n})\n\nvar response = url.flatMap(function(value){\n return Bacon.fromPromise($.ajax({url:value}));\n}).toProperty();\n\nresponse.onValue(function(value){\n  console.log(value);\n})\n```"]