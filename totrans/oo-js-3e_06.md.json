["```js\n    > function foo(a, b) { \n        return a * b; \n      } \n    > foo.length; \n    2 \n    > foo.constructor; \n    function Function() { [native code] } \n\n```", "```js\n    > typeof foo.prototype; \n    \"object\" \n\n```", "```js\n    > foo.prototype = {}; \n\n```", "```js\n    function Gadget(name, color) { \n      this.name = name; \n      this.color = color; \n      this.whatAreYou = function () { \n        return 'I am a ' + this.color + ' ' + this.name; \n      }; \n    } \n\n```", "```js\n    Gadget.prototype.price = 100; \n    Gadget.prototype.rating = 3; \n    Gadget.prototype.getInfo = function () { \n      return 'Rating: ' + this.rating + \n             ', price: ' + this.price; \n    }; \n\n```", "```js\n    Gadget.prototype = { \n      price: 100, \n      rating: ...  /* and so on... */ \n    }; \n\n```", "```js\n    > var newtoy = new Gadget('webcam', 'black'); \n    > newtoy.name; \n    \"webcam\" \n    > newtoy.color; \n    \"black\" \n    > newtoy.whatAreYou(); \n    \"I am a black webcam\" \n    > newtoy.price; \n    100 \n    > newtoy.rating; \n    3 \n    > newtoy.getInfo(); \n    \"Rating: 3, price: 100\" \n\n```", "```js\n    Gadget.prototype.get = function (what) { \n      return this[what]; \n    }; \n\n```", "```js\n    > newtoy.get('price'); \n    100 \n    > newtoy.get('color'); \n    \"black\" \n\n```", "```js\n    Gadget.prototype.getInfo = function () { \n      return 'Rating: ' + Gadget.prototype.rating + \n             ', price: ' + Gadget.prototype.price; \n    }; \n\n```", "```js\n    var newtoy = new Gadget('webcam', 'black'); \n\n```", "```js\n    > newtoy.name; \n    \"webcam\" \n\n```", "```js\n    > newtoy.rating; \n    3 \n\n```", "```js\n    > newtoy.constructor === Gadget; \n    true \n    > newtoy.constructor.prototype.rating; \n    3 \n\n```", "```js\n    > newtoy.toString(); \n    \"[object Object]\" \n\n```", "```js\n    > function Gadget(name) { \n        this.name = name; \n      } \n    > Gadget.prototype.name = 'mirror'; \n\n```", "```js\n    > var toy = new Gadget('camera'); \n    > toy.name; \n    \"camera\" \n\n```", "```js\n    > toy.hasOwnProperty('name'); \n    true \n\n```", "```js\n    > delete toy.name; \n    true \n    > toy.name; \n    \"mirror\" \n    > toy.hasOwnProperty('name'); \n    false \n\n```", "```js\n    > toy.name = 'camera'; \n    > toy.name; \n    \"camera\" \n\n```", "```js\n    > toy.toString(); \n    \"[object Object]\" \n    > toy.hasOwnProperty('toString'); \n    false \n    > toy.constructor.hasOwnProperty('toString'); \n    false \n    > toy.constructor.prototype.hasOwnProperty('toString'); \n    false \n    > Object.hasOwnProperty('toString'); \n    false \n    > Object.prototype.hasOwnProperty('toString'); \n    true \n\n```", "```js\n    var params = { \n      productid: 666, \n      section: 'products' \n    }; \n\n    var url = 'http://example.org/page.php?', \n        i, \n        query = []; \n\n    for (i in params) { \n        query.push(i + '=' + params[i]); \n    } \n\n    url += query.join('&'); \n\n```", "```js\n    function Gadget(name, color) { \n      this.name = name; \n      this.color = color; \n      this.getName = function () { \n        return this.name; \n      }; \n    } \n    Gadget.prototype.price = 100; \n    Gadget.prototype.rating = 3; \n\n```", "```js\n    var newtoy = new Gadget('webcam', 'black'); \n\n```", "```js\n    for (var prop in newtoy) {  \n      console.log(prop + ' = ' + newtoy[prop]);  \n    } \n\n```", "```js\n    name = webcam \n    color = black \n    getName = function () { \n      return this.name; \n    } \n    price = 100 \n    rating = 3 \n\n```", "```js\n    > newtoy.hasOwnProperty('name'); \n    true \n    > newtoy.hasOwnProperty('price'); \n    false \n\n```", "```js\n    for (var prop in newtoy) {  \n      if (newtoy.hasOwnProperty(prop)) { \n        console.log(prop + '=' + newtoy[prop]);  \n      } \n    } \n\n```", "```js\n    name=webcam \n    color=black \n    getName = function () { \n      return this.name; \n    } \n\n```", "```js\n    > newtoy.propertyIsEnumerable('name'); \n    true \n\n```", "```js\n    > newtoy.propertyIsEnumerable('constructor'); \n    false \n\n```", "```js\n    > newtoy.propertyIsEnumerable('price'); \n    false \n\n```", "```js\n    > newtoy.constructor.prototype.propertyIsEnumerable('price'); \n    true \n\n```", "```js\n    var monkey = {    \n      hair: true,    \n      feeds: 'bananas',    \n      breathes: 'air'  \n    }; \n\n```", "```js\n    function Human(name) { \n      this.name = name; \n    } \n    Human.prototype = monkey; \n\n```", "```js\n    > var george = new Human('George');  \n    > monkey.isPrototypeOf(george); \n    true \n\n```", "```js\n    > Object.getPrototypeOf(george).feeds; \n    \"bananas\" \n    > Object.getPrototypeOf(george) === monkey; \n    true \n\n```", "```js\n    > var monkey = { \n        feeds: 'bananas', \n        breathes: 'air' \n      }; \n    > function Human() {}  \n    > Human.prototype = monkey; \n\n```", "```js\n    > var developer = new Human(); \n    > developer.feeds = 'pizza'; \n    > developer.hacks = 'JavaScript'; \n\n```", "```js\n    > developer.hacks; \n    \"JavaScript\" \n\n```", "```js\n    > developer.feeds; \n    \"pizza\" \n\n```", "```js\n    > developer.breathes; \n    \"air\" \n\n```", "```js\n    > developer.__proto__ === monkey; \n    true \n\n```", "```js\n    > typeof developer.__proto__; \n    \"object\" \n    > typeof developer.prototype; \n    \"undefined\" \n    > typeof developer.constructor.prototype; \n    \"object\" \n\n```", "```js\n    Array.prototype.inArray = function (needle) { \n      for (var i = 0, len = this.length; i < len; i++) { \n        if (this[i] === needle) { \n          return true; \n        } \n      } \n      return false; \n    }; \n\n```", "```js\n    > var colors = ['red', 'green', 'blue']; \n    > colors.inArray('red'); \n    true \n    > colors.inArray('yellow'); \n    false \n\n```", "```js\n    String.prototype.reverse = function () { \n      return Array.prototype.reverse. \n               apply(this.split('')).join(''); \n    }; \n\n```", "```js\n    > \"bumblebee\".reverse(); \n      \"eebelbmub\"\n\n```", "```js\n    if (typeof String.prototype.trim !== 'function') { \n      String.prototype.trim = function () { \n        return this.replace(/^\\s+|\\s+$/g,''); \n      }; \n    } \n    > \" hello \".trim(); \n    \"hello\" \n\n```", "```js\n    > function Dog() { \n        this.tail = true; \n      } \n    > var benji = new Dog(); \n    > var rusty = new Dog(); \n\n```", "```js\n    > Dog.prototype.say = function () { \n        return 'Woof!'; \n      }; \n\n```", "```js\n    > benji.say(); \n    \"Woof!\" \n     rusty.say(); \n    \"Woof!\" \n\n```", "```js\n    > benji.constructor === Dog; \n    true \n    > rusty.constructor === Dog; \n    true \n\n```", "```js\n    > Dog.prototype = { \n        paws: 4, \n        hair: true \n      }; \n\n```", "```js\n    > typeof benji.paws; \n    \"undefined\" \n    > benji.say(); \n    \"Woof!\" \n    > typeof benji.__proto__.say; \n    \"function\" \n    > typeof benji.__proto__.paws; \n    \"undefined\" \n\n```", "```js\n    > var lucy = new Dog(); \n    > lucy.say(); \n    TypeError: lucy.say is not a function \n    > lucy.paws; \n    4 \n\n```", "```js\n    > typeof lucy.__proto__.say; \n    \"undefined\" \n    > typeof lucy.__proto__.paws; \n    \"number\" \n\n```", "```js\n    > lucy.constructor; \n    function Object() { [native code] } \n    > benji.constructor; \n    function Dog() { \n      this.tail = true; \n    } \n\n```", "```js\n    > function Dog() {} \n    > Dog.prototype = {}; \n    > new Dog().constructor === Dog; \n    false \n    > Dog.prototype.constructor = Dog; \n    > new Dog().constructor === Dog; \n    true \n\n```", "```js\n            > var t = new Triangle(1, 2, 3); \n            > t.constructor === Triangle; \n                   true \n            > shape.isPrototypeOf(t); \n                   true \n            > t.getPerimeter(); \n                   6 \n            > t.getType(); \n                   \"triangle\" \n\n    ```", "```js\n            > [1, 2, 3, 4, 5, 6, 7, 8, 9].shuffle(); \n              [2, 4, 1, 8, 9, 6, 5, 3, 7] \n\n    ```"]