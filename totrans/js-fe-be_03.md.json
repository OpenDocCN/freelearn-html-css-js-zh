["```js\nclass Person {\n```", "```js\n}\n```", "```js\n// define the Person class\n```", "```js\nclass Person {\n```", "```js\n}\n```", "```js\n// create an object of class Person\n```", "```js\nvar p = new Person;  // object p of class Person\n```", "```js\nconsole.log(p);\n```", "```js\n<html>\n```", "```js\n  <head>\n```", "```js\n    <meta charset=\"utf-8\" />\n```", "```js\n    <script>\n```", "```js\n      class Person {\n```", "```js\n      }\n```", "```js\n      var p = new Person;\n```", "```js\n      console.log(p);\n```", "```js\n    </script>\n```", "```js\n  </head>\n```", "```js\n  <body>\n```", "```js\n  </body>\n```", "```js\n</html>\n```", "```js\nvar p = { lastname : \"Clinton\", firstname : \"Bill\" };\n```", "```js\nconsole.log(\"The person is\", p);\n```", "```js\nclass Person {\n```", "```js\n  firstname;\n```", "```js\n  lastname;\n```", "```js\n  age;\n```", "```js\n}\n```", "```js\nvar p = new Person;\n```", "```js\nconsole.log(p);\n```", "```js\nclass Person {\n```", "```js\n  firstname = \"\";\n```", "```js\n  lastname = \"\";\n```", "```js\n  age = 0;\n```", "```js\n}\n```", "```js\nvar p = new Person;\n```", "```js\nconsole.log(p);\n```", "```js\nclass Person {\n```", "```js\n  // class properties\n```", "```js\n  firstname = \"\";\n```", "```js\n  lastname = \"\";\n```", "```js\n  age = 0;\n```", "```js\n  // class methods\n```", "```js\n  display() {\n```", "```js\nconsole.log(\"The person's lastname is = \" + \n```", "```js\n                this.lastname +\n```", "```js\n                \", firstname = \" + this.firstname);\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nvar p = new Person;\n```", "```js\nconsole.log(\"Variable p = \", p);\n```", "```js\np.display();  // use of the display() method on the p object\n```", "```js\nclass Person {\n```", "```js\n  // class properties\n```", "```js\n  lastname = \"\";\n```", "```js\n  firstname = \"\";\n```", "```js\n  age = 0;\n```", "```js\n  // class methods\n```", "```js\n  display() {\n```", "```js\n    console.log(\" The person's lastname = \" + this.lastname +\n```", "```js\n                \", firstname = \" + this.firstname);\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nvar p = new Person;\n```", "```js\np.lastname = \"Clinton\";  // initialization of the lastname \n```", "```js\n                         // property of the object p\n```", "```js\np.firstname = \"Bill\";    // initialization of the firstname \n```", "```js\n                         // property of the object p\n```", "```js\nconsole.log(\"Variable p = \", p);\n```", "```js\np.display();\n```", "```js\nclass Person {\n```", "```js\n  // class properties\n```", "```js\n  lastname = \"\";\n```", "```js\n  firstname = \"\";\n```", "```js\n  age = 0;\n```", "```js\n  // class methods\n```", "```js\n  constructor(lastname, firstname, age) {\n```", "```js\n    this.lastname = lastname;\n```", "```js\n    this.firstname = firstname;\n```", "```js\n    this.age = age;\n```", "```js\n  }\n```", "```js\n  display() {\n```", "```js\n    console.log(\" The person's lastname = \" + this.lastname +\n```", "```js\n                \", firstname = \" + this.firstname);\n```", "```js\n  }\n```", "```js\n}\n```", "```js\nvar p = new Person(\"Clinton\", \"Bill\");\n```", "```js\nconsole.log(\"Variable p = \", p);\n```", "```js\np.display();\n```", "```js\nclass Person {\n```", "```js\n  // class properties\n```", "```js\n  lastname = \"\";\n```", "```js\n  firstname = \"\";\n```", "```js\n  age = 0;\n```", "```js\n  // class methods\n```", "```js\n  constructor(lastname, firstname, age) {\n```", "```js\n    this.lastname = lastname;\n```", "```js\n    this.firstname = firstname;\n```", "```js\n    this.age = age;\n```", "```js\n  }\n```", "```js\n  display() {\n```", "```js\n    // the age of the person is also displayed\n```", "```js\n    console.log(\"The person's lastname = \" + this.lastname +\n```", "```js\n\", firstname = \" + this.firstname + \n```", "```js\n                \", age = \" + this.age);         \n```", "```js\n  }\n```", "```js\n}\n```", "```js\nvar p = new Person(\"Clinton\", \"Bill\", 33);    // age is now \n```", "```js\n                                              // transmitted\n```", "```js\nconsole.log(\"Variable p = \", p);\n```", "```js\np.display();\n```", "```js\nvar p = { lastname : \"Clinton\", firstname : \"Bill\" };\n```", "```js\nconsole.log(\"p (before modification of p2) =\", p);  \n```", "```js\n       // p = { lastname : \"Clinton\", firstname : \"Bill\" }\n```", "```js\nvar p2 = p;\n```", "```js\np2.city = \"Washington\";\n```", "```js\nconsole.log(\"p (after modification of p2) =\", p);  \n```", "```js\n       // p = { lastname : \"Clinton\", firstname : \"Bill\", \n```", "```js\n       // city : \"Washington\"}\n```", "```js\nconsole.log(\"p2 =\", p2);  \n```", "```js\n       // p2 = { lastname : \"Clinton\", firstname : \"Bill\", \n```", "```js\n       // city : \"Washington\"}\n```", "```js\nvar p = { lastname : \"Clinton\", firstname : \"Bill\" }\n```", "```js\nconsole.log(\"p (before modification of p2) =\", p);\n```", "```js\nvar p2 = { ...p};   // copy the properties of object p into \n```", "```js\n                    // object p2\n```", "```js\np2.city = \"Washington\";\n```", "```js\nconsole.log(\"p (after modification of p2) =\", p);\n```", "```js\nconsole.log(\"p2 =\", p2);\n```", "```js\n// to avoid writing p2.city = \"Washington\"\n```", "```js\nvar p2 = { ...p, city : \"Washington\" };  \n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(tab);\n```", "```js\nvar tab = new Array(\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\");\n```", "```js\nconsole.log(tab);\n```", "```js\nvar tab = new Array();    // or new Array;\n```", "```js\nconsole.log(tab);\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\nconsole.log(\"tab[0] =\", tab[0]);\n```", "```js\nconsole.log(\"tab[1] =\", tab[1]);\n```", "```js\nconsole.log(\"tab[2] =\", tab[2]);\n```", "```js\nconsole.log(\"tab[3] =\", tab[3]);\n```", "```js\nconsole.log(\"tab[4] =\", tab[4]);\n```", "```js\nconsole.log(\"tab[5] =\", tab[5]);\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"Array before modification\");\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\n// modification of elements, index 2 and 3\n```", "```js\ntab[2] = \"New element 3\";\n```", "```js\ntab[3] = \"New element 4\";\n```", "```js\nconsole.log(\"Array after modification\");\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\nconsole.log(\"Access to each element by a for() loop\");\n```", "```js\nfor (var i = 0; i < tab.length; i++) console.log(\"tab[\" + i + \"]=\", tab[i]);\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\nconsole.log(\"Access to each element by the forEach() method\");\n```", "```js\ntab.forEach(function(elem, i) {\n```", "```js\n  console.log(\"tab[\" + i + \"]=\", elem);\n```", "```js\n});\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\n// adding a new element in the array, at index 10\n```", "```js\ntab[10] = \"Element 9\";\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\n// display the array with a for() loop\n```", "```js\nconsole.log(\"Access to each element by a for() loop\");\n```", "```js\nfor (var i = 0; i < tab.length; i++) console.log(\"tab[\" + i + \"]=\", tab[i]);\n```", "```js\n// display the array by the forEach() method\n```", "```js\nconsole.log(\"Access to each element by the forEach() method\");\n```", "```js\ntab.forEach(function(elem, i) {\n```", "```js\n  console.log(\"tab[\" + i + \"]=\", elem);\n```", "```js\n});\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\n// insert an element using the push() method\n```", "```js\ntab.push(\"Element 6\");\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\n// display the array with a for() loop\n```", "```js\nconsole.log(\"Access to each element by a for() loop\");\n```", "```js\nfor (var i = 0; i < tab.length; i++) console.log(\"tab[\" + i + \"]=\", tab[i]);\n```", "```js\n// display the array by the forEach() method\n```", "```js\nconsole.log(\"Access to each element by the forEach() method\");\n```", "```js\ntab.forEach(function(elem, i) {\n```", "```js\n  console.log(\"tab[\" + i + \"]=\", elem);\n```", "```js\n});\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\n// delete the value of the element with index 0\n```", "```js\ndelete tab[0];\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\n// display the array with a for() loop\n```", "```js\nconsole.log(\"Access to each element by a for() loop\");\n```", "```js\nfor (var i = 0; i < tab.length; i++) console.log(\"tab[\" + i + \"]=\", tab[i]);\n```", "```js\n// display the array by the forEach() method\n```", "```js\nconsole.log(\"Access to each element by the forEach() method\");\n```", "```js\ntab.forEach(function(elem, i) {\n```", "```js\n  console.log(\"tab[\" + i + \"]=\", elem);\n```", "```js\n});\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\n// remove 1 element from index 0\n```", "```js\ntab.splice(0, 1);\n```", "```js\nconsole.log(\"tab =\", tab);\n```", "```js\n// display the array with a for() loop\n```", "```js\nconsole.log(\"Access to each element by a for() loop\");\n```", "```js\nfor (var i = 0; i < tab.length; i++) console.log(\"tab[\" + i + \"]=\", tab[i]);\n```", "```js\n// display the array by the forEach() method\n```", "```js\nconsole.log(\"Access to each element by the forEach() method\");\n```", "```js\ntab.forEach(function(elem, i) {\n```", "```js\n  console.log(\"tab[\" + i + \"]=\", elem);\n```", "```js\n});\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"initial tab =\", tab);\n```", "```js\n// keep only items with index >= 2\n```", "```js\ntab = tab.filter(function(element, index) {\n```", "```js\n  if (index >= 2) return true;   // keep this element\n```", "```js\n});\n```", "```js\nconsole.log(\"\\nfinal tab =\", tab);\n```", "```js\n// original array\n```", "```js\nvar tab = [\"Element 1\", \"Element 2\", \"Element 3\", \"Element 4\", \"Element 5\"];\n```", "```js\nconsole.log(\"initial tab =\", tab);\n```", "```js\n// capitalize all elements\n```", "```js\ntab = tab.map(function(element, index) {\n```", "```js\n  return element.toUpperCase();\n```", "```js\n});\n```", "```js\nconsole.log(\"\\nfinal tab =\", tab);\n```", "```js\nvar s = \"String 1\";\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\nvar s = 'String 1';\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\nvar lastname = \"Clinton\";\n```", "```js\nvar firstname = \"Bill\";\n```", "```js\n// old way of concatenating strings and variables\n```", "```js\nvar s1 = \"lastname is \" + lastname + \", firstname is \" + firstname;\n```", "```js\n// new way of concatenating strings and variables\n```", "```js\nvar s2 = `lastname is ${lastname}, firstname is ${firstname}`;\n```", "```js\nconsole.log(\"s1 =\", s1);\n```", "```js\nconsole.log(\"s2 =\", s2);\n```", "```js\nvar s = new String(\"I'll love JavaScript\");\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\nvar s1 = new String(\"I'll love JavaScript\");\n```", "```js\nvar s2 = \"I'll love JavaScript\";\n```", "```js\nconsole.log(\"s1 =\", s1);\n```", "```js\nconsole.log(\"s2 =\", s2);\n```", "```js\nconsole.log(\"s1.length =\", s1.length);\n```", "```js\nconsole.log(\"s2.length =\", s2.length);\n```", "```js\nvar s = \"Hello\";\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\nfor (var i = 0; i <s.length; i++) console.log(`s.charAt(${i}) = ${s.charAt(i)}`);\n```", "```js\nvar s = \"Hello\";\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\nconsole.log(`s.slice(0,2) = ${s.slice(0,2)}`);\n```", "```js\nconsole.log(`s.slice(0,3) = ${s.slice(0,3)}`);\n```", "```js\nconsole.log(`s.slice(1,3) = ${s.slice(1,3)}`);\n```", "```js\nconsole.log(`s.slice(0,-1) = ${s.slice(0,-1)}`);\n```", "```js\nconsole.log(`s.slice(0,-2) = ${s.slice(0,-2)}`);\n```", "```js\nconsole.log(`s.slice(1,-2) = ${s.slice(1,-2)}`);\n```", "```js\nvar s = \"Hello\";\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\n// search for \"Hel\"\n```", "```js\nconsole.log(`s.match(/Hel/) = ${s.match(/Hel/)}`);\n```", "```js\n// search for \"hel\"\n```", "```js\nconsole.log(`s.match(/hel/) = ${s.match(/hel/)}`);  \n```", "```js\n// search for \"hel\" ignoring upper/lower case\n```", "```js\nconsole.log(`s.match(/hel/i) = ${s.match(/hel/i)}`);\n```", "```js\n// search for H followed by a or b or e followed by l\n```", "```js\nconsole.log(`s.match(/H[abe]l/) = ${s.match(/H[abe]l/)}`);\n```", "```js\n// search for He followed by 0 or 1 a followed by l\n```", "```js\nconsole.log(`s.match(/Hea?l/) = ${s.match(/Hea?l/)}`);\n```", "```js\n// search for He followed by 0 (min) to 1 (max) followed by l\n```", "```js\nconsole.log(`s.match(/Hea{0,1}l/) = ${s.match(/Hea{0,1}l/)}`);\n```", "```js\n// search for He followed 1 (min) to 2 (max) followed by l\n```", "```js\nconsole.log(`s.match(/Hea{1,2}l/) = ${s.match(/Hea{1,2}l/)}`);\n```", "```js\nvar s = \"Hello\";\n```", "```js\nconsole.log(\"s =\", s);\n```", "```js\n// search for \"Hel\" and replace with \"abc\"\n```", "```js\nconsole.log(`s.replace(/Hel/, \"abc\") => ${s.replace(/Hel/, \"abc\")}`);\n```", "```js\n// search for \"hel\" and replace with \"abc\"\n```", "```js\nconsole.log(`s.replace(/hel/, \"abc\") => ${s.replace(/hel/, \"abc\")}`);  \n```", "```js\n// search for hel ignoring upper/lower case and replacing with \n```", "```js\n// \"abc\"\n```", "```js\nconsole.log(`s.replace(/hel/i, \"abc\") => ${s.replace(/hel/i, \"abc\")}`);\n```", "```js\n// search for H followed by a or b or e followed by l and \n```", "```js\n// replace with \"abc\"\n```", "```js\nconsole.log(`s.replace(/H[abe]l/, \"abc\") => ${s.replace(/H[abe]l/, \"abc\")}`);\n```", "```js\n// search for He followed by 0 or 1 a followed by l and \n```", "```js\n// replaced by \"abc\"\n```", "```js\nconsole.log(`s.replace(/Hea?l/, \"abc\") => ${s.replace(/Hea?l/, \n```", "```js\n\"abc\")}`);\n```", "```js\n// search for He followed by 0 (min) to 1 (max) followed by l \n```", "```js\n// and replaced by \"abc\"\n```", "```js\nconsole.log(`s.replace(/Hea{0,1}l/, \"abc\") => ${s.replace(/Hea{0,1}l/, \"abc\")}`);\n```", "```js\n// search for He followed by 1 (min) to 2 (max) followed by l \n```", "```js\n// and replaced by \"abc\"\n```", "```js\nconsole.log(`s.replace(/Hea{1,2}l/, \"abc\") => ${s.replace(/Hea{1,2}l/, \"abc\")}`);\n```", "```js\nconsole.log(\"Before setTimeout()\");\n```", "```js\nsetTimeout(function() {\n```", "```js\n  console.log(\"In the callback function\");\n```", "```js\n}, 5000);  // 5000 milliseconds, or 5 seconds\n```", "```js\nconsole.log(\"After setTimeout()\");\n```", "```js\nconsole.log(time(), \"Before setTimeout()\");\n```", "```js\nsetTimeout(function() {\n```", "```js\n  console.log(time(), \"In the callback function\");\n```", "```js\n}, 5000);   // 5000 = 5 seconds\n```", "```js\nconsole.log(time(), \"After setTimeout()\");\n```", "```js\nfunction time() {\n```", "```js\n // return time as HH:MM:SS\n```", "```js\n var date = new Date();\n```", "```js\n var hour = date.getHours();\n```", "```js\n var min = date.getMinutes();\n```", "```js\n var sec = date.getSeconds();\n```", "```js\n if (hour < 10) hour = \"0\" + hour;\n```", "```js\n if (min < 10) min = \"0\" + min;\n```", "```js\n if (sec < 10) sec = \"0\" + sec;\n```", "```js\n return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n}\n```", "```js\nconsole.log(time(), \"Start of timer\");\n```", "```js\nvar count = 1;\n```", "```js\nsetInterval(function() {\n```", "```js\n  console.log(time(), `count = ${count}`);\n```", "```js\n  count++;\n```", "```js\n}, 1000);    // 1000 = 1 second\n```", "```js\nfunction time() {\n```", "```js\n // return time as HH:MM:SS\n```", "```js\n var date = new Date();\n```", "```js\n var hour = date.getHours();\n```", "```js\n var min = date.getMinutes();\n```", "```js\n var sec = date.getSeconds();\n```", "```js\n if (hour < 10) hour = \"0\" + hour;\n```", "```js\n if (min < 10) min = \"0\" + min;\n```", "```js\n if (sec < 10) sec = \"0\" + sec;\n```", "```js\n return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n}\n```", "```js\nconsole.log(time(), \"Start of timer\");\n```", "```js\nvar count = 1;\n```", "```js\nvar timer = setInterval(function() {\n```", "```js\n  console.log(time(), `count = ${count}`);\n```", "```js\n  if (count == 5) {\n```", "```js\n    clearInterval(timer);  // timer stop\n```", "```js\n    console.log(time(), \"End of timer\");\n```", "```js\n  } else count++;\n```", "```js\n}, 1000);\n```", "```js\nfunction time() {\n```", "```js\n // return time as HH:MM:SS\n```", "```js\n var date = new Date();\n```", "```js\n var hour = date.getHours();\n```", "```js\n var min = date.getMinutes();\n```", "```js\n var sec = date.getSeconds();\n```", "```js\n if (hour < 10) hour = \"0\" + hour;\n```", "```js\n if (min < 10) min = \"0\" + min;\n```", "```js\n if (sec < 10) sec = \"0\" + sec;\n```", "```js\n return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n}\n```", "```js\nfunction time() {\n```", "```js\n // return time as HH:MM:SS\n```", "```js\n var date = new Date();\n```", "```js\n var hour = date.getHours();\n```", "```js\n var min = date.getMinutes();\n```", "```js\n var sec = date.getSeconds();\n```", "```js\n if (hour < 10) hour = \"0\" + hour;\n```", "```js\n if (min < 10) min = \"0\" + min;\n```", "```js\n if (sec < 10) sec = \"0\" + sec;\n```", "```js\n return \"\" + hour + \":\" + min + \":\" + sec + \" \";\n```", "```js\n}\n```", "```js\nfunction wait(sec) {\n```", "```js\n  return new Promise(function(resolve, reject) {\n```", "```js\n    setTimeout(function() {\n```", "```js\n      resolve(sec);  // triggers the then() method\n```", "```js\n    }, sec*1000);\n```", "```js\n  });\n```", "```js\n}\n```", "```js\nconsole.log(time(), \"Start of timer\");\n```", "```js\nwait(2).then(function(sec) {\n```", "```js\n  console.log(time(), `End of timer of ${sec} seconds`);\n```", "```js\n});\n```"]