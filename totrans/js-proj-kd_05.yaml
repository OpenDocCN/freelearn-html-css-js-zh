- en: Chapter 5. Ahoy! Sailing into Battle
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。Ahoy! Sailing into Battle
- en: In this chapter, we are going to develop a full game using HTML, CSS, and JavaScript.
    We will focus on the JavaScript coding, therefore, we will not care about the
    graphics of the game. We will code a game named **Battleship**. Many of you have
    heard of it before. This is a memory game. Your imagination and intuition will
    help you to win the game. There are a few variations for playing the game.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用HTML、CSS和JavaScript开发一个完整的游戏。我们将专注于JavaScript编程，因此，我们不会关心游戏的图形。我们将编写一个名为**Battleship**的游戏。你们中的许多人以前都听说过它。这是一个记忆游戏。你的想象力和直觉将帮助你赢得游戏。游戏有多种玩法。
- en: 'Let''s discuss how the game looks. There are a few square-shaped geometrical
    objects connected to each other as shown in the following. The number of rows
    and columns need to be equal:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一下游戏的外观。以下图中展示了几个相互连接的方形几何物体：
- en: '![Ahoy! Sailing into Battle](img/B04720_05_01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![Ahoy! Sailing into Battle](img/B04720_05_01.jpg)'
- en: 'The rows and columns are usually named with the help of number system or alphabets.
    Let''s say that the rows are **1**, **2**, **3**, **4**, **5**, **6**, **7**,
    **8**, **9**, and **10**. The columns are **A**, **B**, **C**, **D**, **E**, **F**,
    **G**, **H**, **I**, and **J**. We can name them by either numbers or alphabets:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 行和列通常用数字系统或字母来命名。比如说，行是**1**、**2**、**3**、**4**、**5**、**6**、**7**、**8**、**9**和**10**。列是**A**、**B**、**C**、**D**、**E**、**F**、**G**、**H**、**I**和**J**。我们可以用数字或字母来命名它们：
- en: '![Ahoy! Sailing into Battle](img/B04720_05_02.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![Ahoy! Sailing into Battle](img/B04720_05_02.jpg)'
- en: 'It is a two player game. The following are its rules:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个两人游戏。以下是其规则：
- en: Both the players will secretly place their ships (there can be different types
    of boats or water vehicles) on their matrices/grids.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两位玩家将秘密地将他们的船（可以是不同类型的船只或水上交通工具）放置在他们的矩阵/网格上。
- en: The players can put their ships vertically or horizontally; however, not diagonally.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 玩家可以将他们的船只垂直或水平放置；然而，不能对角放置。
- en: The players must place all their ships on the grid before they start playing.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 玩家必须在开始游戏之前将所有船只放置在网格上。
- en: Their ships cannot overlap each other's.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们的船只不能相互重叠。
- en: When all the ships are placed, the players cannot move their ships from the
    grid.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当所有船只都放置好后，玩家不能将他们的船只从网格中移动。
- en: After placing all the ships, the first player will state a coordinate of the
    second player and if there is a ship belonging to the second player, the ship
    will blow.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 放置所有船只后，第一位玩家将声明第二位玩家的坐标，如果第二位玩家有船，则该船将被击沉。
- en: Then, the second player will state a coordinate of the first player. If there
    is a ship belonging to the first player, it will blow.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，第二位玩家将声明第一位玩家的坐标。如果第一位玩家有船，它将被击沉。
- en: The coordinate may look similar to **A2**, **B2**, **D5**, and so on. The first
    alphabet will be the *x* axis of the grids and the number will represent *y* axis
    of the grid.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 坐标可能看起来像**A2**、**B2**、**D5**等等。第一个字母将是网格的*x*轴，数字将代表网格的*y*轴。
- en: The player that blows all the ships of the opponent will win.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 击沉对手所有船只的玩家将获胜。
- en: 'The following figure shows few ships placed on the grid:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了网格上放置的一些船只：
- en: '![Ahoy! Sailing into Battle](img/B04720_05_03.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Ahoy! Sailing into Battle](img/B04720_05_03.jpg)'
- en: Now, we will head to the programming part of the game.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将进入游戏的编程部分。
- en: 'We will stick to the following rules so that our game does not become difficult
    to code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将坚持以下规则，以便我们的游戏不会变得难以编码：
- en: There will be one ship belonging to both the players.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将有一艘属于两位玩家的船。
- en: The ship will occupy four parts of the grid.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 船将占据网格的四个部分。
- en: A player will have to input both the *x* and *y* axes coordinates at the prompt.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩家必须在提示符中输入*x*和*y*轴的坐标。
- en: The grid will be 9 x 9.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网格将是9 x 9。
- en: The player will have to put `h` or `v` for the horizontal or vertical position
    of the ship.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩家需要输入`h`或`v`来表示船的水平或垂直位置。
- en: To simplify the drawing, we will put dots (**.**) on the position of the grids.
    The grids will look similar to the following image:![Ahoy! Sailing into Battle](img/B04720_05_04.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了简化绘图，我们将在网格的位置上放置点（**.**）。网格看起来将类似于以下图像：![Ahoy! Sailing into Battle](img/B04720_05_04.jpg)
- en: We will need a **Fire** button to start the game.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一个**Fire**按钮来开始游戏。
- en: The HTML part
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML部分
- en: 'The HTML part will look similar to the following code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: HTML部分将类似于以下代码：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output of the code will be as shown in the following image:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的输出将如下所示：
- en: '![The HTML part](img/B04720_05_05.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![HTML部分](img/B04720_05_05.jpg)'
- en: The CSS part
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CSS部分
- en: 'We use a CSS coding in the `<style></style>` tags for the body. As we will
    heed on the coding in JavaScript only, we will not bother about the visual part
    of the game. To make the body of the game colorful, we will use the following
    code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`<style></style>`标签中使用CSS代码来设置页面样式。因为我们只关注JavaScript的编码，所以我们不会关心游戏的视觉部分。为了使游戏页面更加多彩，我们将使用以下代码：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The JavaScript part
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript部分
- en: This part is the main part of our game, we will pay attention to this part the
    most. We will write all our codes in the `<script></script>` tags.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分是游戏的主要部分，我们将最关注这部分。我们将在`<script></script>`标签中编写所有代码。
- en: 'For the grids, we will need a two dimensional array. We will take a `game`
    variable to store the data as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于网格，我们需要一个二维数组。我们将使用一个`game`变量来存储数据，如下所示：
- en: Note
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many programs may require the processing of multiple data items that have common
    characteristics. In such situations, it is often convenient to place the data
    items in an array, where they will all share the same name. The individual data
    can be characters, floats, integers, and so on. However, they must all be of the
    same type and class.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 许多程序可能需要处理具有共同特征的多项数据项。在这种情况下，将数据项放置在数组中通常很方便，它们将共享相同的名称。单个数据可以是字符、浮点数、整数等。然而，它们必须都是同一类型和类。
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will take a variable to display the two dimensional array on the HTML page:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个变量来在HTML页面上显示二维数组：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We will now append this on the body and create a button:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将此代码附加到主体并创建一个按钮：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This button will call the `fire` function (we will write the function later.):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 此按钮将调用`fire`函数（我们稍后会编写该函数）：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, we will place the button on the body part:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将按钮放置在页面主体部分：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let''s make a function to draw the board:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个绘制棋盘的函数：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, put draw the board on the HTML page by writing the following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过编写以下代码在HTML页面上绘制棋盘：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We will ask the player where he wants to place his ship using the `prompt()`
    function:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`prompt()`函数询问玩家他想要将船只放置在哪里：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If the player chooses the horizontal orientation for their ship, we need to
    replace the dots by writing the following code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家选择水平方向放置他们的船只，我们需要用以下代码替换点：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If the player chooses the vertical orientation for their ship, we need to replace
    the dots by writing the following code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家选择垂直方向放置他们的船只，我们需要用以下代码替换点：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We need to redraw the board after placing the ship, as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在放置船只后，我们需要重新绘制棋盘，如下所示：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Lets create the `fire()` function.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建`fire()`函数。
- en: 'Our `fire()` function will be as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`fire()`函数如下所示：
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'When the `fire()` function is called, we need to take input from the player
    as shown in the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当调用`fire()`函数时，我们需要从玩家那里获取输入，如下所示：
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Convert the inputs into numbers, as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将输入转换为数字，如下所示：
- en: '[PRE15]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If the input does not match with the `#` character, we will print `You Missed.`
    using the following code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入不匹配`#`字符，我们将使用以下代码打印`You Missed.`：
- en: '[PRE16]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If the input hits the ship, we will print few messages and draw the board again:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入击中船只，我们将打印一些消息并重新绘制棋盘：
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, we need to check whether there is any ship remaining on the board. We
    will use the following code:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要检查棋盘上是否还有剩余船只。我们将使用以下代码：
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If no ship is left, we will end the game:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有剩余船只，我们将结束游戏：
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The final code
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终代码
- en: 'Our final codes will look similar to the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终的代码将类似于以下内容：
- en: '[PRE20]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If you run the preceding code, you will see the following prompt:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果运行前面的代码，您将看到以下提示：
- en: '![The final code](img/B04720_05_06.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![最终代码](img/B04720_05_06.jpg)'
- en: Let's play the game that we created. The first player has to place his ship.
    He has to input the coordinates of the ship.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们玩我们创建的游戏。第一位玩家必须放置他的船只。他必须输入船只的坐标。
- en: 'Consider that we input `3` on the *x* axis and `2` on the *y* axis. Place our
    ship on the vertical orientation. The game screen will look as shown in the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在*x*轴上输入`3`，在*y*轴上输入`2`。将我们的船只放置在垂直方向。游戏屏幕将如下所示：
- en: '![The final code](img/B04720_05_07.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![最终代码](img/B04720_05_07.jpg)'
- en: You can see that your ship is placed. Now, you can shoot your opponent (computer)
    by pressing the **Fire** button. You will be asked to input the coordinates of
    the grid, where you want to shoot. If you miss a shot, you will see a message
    that we coded, **You Missed.**
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到你的船只已经放置好了。现在，你可以通过按下**开火**按钮来射击对手（电脑）。你将被要求输入你想要射击的网格坐标。如果你射偏了，你会看到一个我们编写的消息，**你错过了**。
- en: I hope that you are able to play the game that you built.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能玩到你构建的游戏。
- en: Congratulations!
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！
- en: If you want to develop your game more (such as enhance the graphics, number
    of ships, and so on), you only need to develop CSS and JavaScript.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要进一步开发你的游戏（例如增强图形、船只数量等），你只需要开发CSS和JavaScript。
- en: 'Now, we will see a better code for the Battleship game, as shown in the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到 Battleship 游戏的更好代码，如下所示：
- en: Make a `js` folder anywhere in your computer.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的电脑的任何位置创建一个`js`文件夹。
- en: 'In the `js` folder, place the three files that are included in this chapter:
    `battleship.js`, `functions.js`, and `jquery.min.js`.'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`js`文件夹中，放置本章包含的三个文件：`battleship.js`、`functions.js`和`jquery.min.js`。
- en: Outside the `js` folder, place the `battleship.css` and `index.html` files.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`js`文件夹外，放置`battleship.css`和`index.html`文件。
- en: 'Open the `index.html` file in a Notepad, you will see the following code:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在记事本中打开`index.html`文件，你会看到以下代码：
- en: '[PRE21]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We included the three JavaScript files in the HTML file. We added a jQuery
    file, which we will discuss in the next chapter. The output of the preceding code
    will show you the following screen:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在HTML文件中包含了这三个JavaScript文件。我们添加了一个jQuery文件，我们将在下一章讨论。前面代码的输出将显示以下屏幕：
- en: '![The final code](img/B04720_05_08.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![最终代码](img/B04720_05_08.jpg)'
- en: You can click the **Standard** button to play the standard Battlefield or **Custom**
    button to play a non-standard Battlefield.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以点击**标准**按钮来玩标准战场游戏，或者点击**自定义**按钮来玩非标准战场游戏。
- en: 'If you select the **Standard** button, you will get the following screen:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择**标准**按钮，你会得到以下屏幕：
- en: '![The final code](img/B04720_05_09.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![最终代码](img/B04720_05_09.jpg)'
- en: Now, you can guess the position of the opponent's ship and click on the grid.
    There will be a log panel on the right-hand side of the screen. You can also see
    how many and which ships you have destroyed from the preceding panel of the game
    log panel.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以猜测对手船只的位置并点击网格。屏幕右侧将有一个日志面板。你还可以从游戏日志面板的前一个面板中看到你摧毁了多少艘以及哪些船只。
- en: 'If you select the **Custom** play, you will see the following screen:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择**自定义**玩法，你会看到以下屏幕：
- en: '![The final code](img/B04720_05_10.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![最终代码](img/B04720_05_10.jpg)'
- en: After adding the five ships, you can play the game. You can add the same ship
    twice or more, if required.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了五艘船之后，你就可以玩游戏了。如果需要，你可以添加相同船只两次或更多。
- en: You can place your ships vertically or horizontally and click on the tiles to
    blow the opponent's ship. You can click one tile at a time.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将你的船只垂直或水平放置，并点击方块来击沉对手的船只。你一次只能点击一个方块。
- en: Summary
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we built a complete game and played it. We also played a better
    version of the game we have built. All you need to remember is that you must know
    the logic behind all the code that we previously discussed. You are given the
    source code of the better version of the game with this chapter. I hope that you
    will study the code and write your own Battleship game. We used a `jquery.js`
    JavaScript file on our improved version of the Battleship. The `jquery.js` file
    has a lot of lines of code (We will discuss this in [Chapter 6](ch06.html "Chapter 6. Exploring
    the Benefits of jQuery"), *Exploring the Benefits of jQuery*).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们构建了一个完整的游戏并进行了游戏。我们还玩了一个我们构建的游戏的更好版本。你需要记住的是，你必须了解我们之前讨论的所有代码背后的逻辑。本章提供了游戏更好版本的源代码。我希望你会研究代码并编写你自己的
    Battleship 游戏。我们在改进的 Battleship 中使用了`jquery.js` JavaScript 文件。`jquery.js`文件有很多行代码（我们将在[第6章](ch06.html
    "第6章. 探索jQuery的优势")，*探索jQuery的优势*中讨论这一点）。
- en: If you master all the code that we discussed in this chapter, we can now move
    to the next chapter.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你掌握了本章我们讨论的所有代码，我们现在可以进入下一章。
