["```js\nexports.handler = async (event) => {\n    if (event.httpMethod === \"POST\") {\n        let reply = await sendToLex(event);\n        return done(reply);\n    }\n};\n```", "```js\nconst sendToLex = async event => {\n    console.log('event', event);\n    let messageForLex = mapMessageToLex(JSON.parse(event.body));\n}\n```", "```js\nconst AWS = require('aws-sdk');\nconst lexruntime = new AWS.LexRuntime();\n```", "```js\nlet lexPromise = new Promise((resolve, reject) => {\n    lexruntime.postText(messageForLex, (err, data) => {\n        if (err) {\n            reject(err);\n        } else {\n            resolve(data);\n        }\n    })\n});\n```", "```js\nlet [err, res] = await to(lexPromise);\nif (err) {\n    return { err }\n}\nconsole.log('lex response', res);\nreturn { res: { message: res.message } }\n```", "```js\nconst done = ({ err, res }) => {\n    console.log('res', res);\n    console.log('error', err);\n    return {\n        statusCode: err ? '404' : '200',\n        body: err ? JSON.stringify({ error: err }) : JSON.stringify(res),\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': '*',\n            'Access-Control-Allow-Origin': '*'\n        },\n    };\n}\n```", "```js\nconst mapMessageToLex = message => {\n    return {\n        botAlias: 'prod',\n        botName: 'shoppingBot',\n        inputText: message.text,\n        userId: message.sessionID,\n        sessionAttributes: {}\n    };\n}\n```", "```js\n{\n    \"body\": \"{\\\"text\\\":\\\"I want to buy a shirt\\\", \\\"sessionID\\\": \\\"abc123\\\"}\",\n    \"httpMethod\": \"POST\"\n}\n```", "```js\n{\n    \"statusCode\": \"200\",\n    \"body\": \"{\\\"message\\\":\\\"What size of shirt are you looking for?\\\"}\",\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Origin\": \"*\"\n    }\n}\n```", "```js\n{\n    \"text\":\"I want to buy a shirt\",\n    \"sessionID\": \"abc123\"\n}\n```", "```js\n{\n    \"message\": \"What size of shirt are you looking for?\"\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n    <div id=\"messageArea\"></div>\n    <div id=\"inputDivs\">\n        <input type=\"text\" id=\"textInput\">\n        <button id=\"sendButton\">Send</button>\n    </div>\n</body>\n<script src=\"img/axios.min.js\"></script>\n<script src=\"img/script.js\"></script>\n</html>\n```", "```js\nif (document.readyState === 'complete') {\n    start();\n} else {\n    document.addEventListener(\"DOMContentLoaded\", start())\n}\n```", "```js\nfunction start() {\n    const URL = 'YOUR-API-URL/production/shopping-bot';\n    // create unique code for this session\n    const sessionID = Math.random().toString().slice(-16);\n}\n```", "```js\nlet messageArea = document.querySelector('#messageArea');\nlet textArea = document.querySelector('#textInput');\nlet sendButton = document.querySelector('#sendButton');\n```", "```js\nsendButton.addEventListener('click', async e => {\n    let text = textArea.value;\n    console.log(text);\n    if (!text) return;\n}\n```", "```js\n// Add to sent messages\nlet sendElement = document.createElement('div');\nsendElement.classList.add('sendMessage');\nsendElement.classList.add('message');\nsendElement.appendChild(document.createTextNode(text));\nmessageArea.appendChild(sendElement);\n```", "```js\n// send to the API\nlet [err, response] = await to(axios.post(URL, { text, sessionID }));\n```", "```js\nlet responseMessage;\nif (err) {\n    responseMessage = 'Sorry I appear to have had an error';\n} else {\n    responseMessage = response.data.message;\n}\n```", "```js\n// adding the response to received messages\nlet receiveElement = document.createElement('div');\nreceiveElement.classList.add('receivedMessage');\nreceiveElement.classList.add('message');\nreceiveElement.appendChild(document.createTextNode(responseMessage));\nmessageArea.appendChild(receiveElement);\n```", "```js\n#messageArea {\n    height: 93vh;\n    max-width: 450px;\n    background: #eee;\n    overflow-y: scroll;\n}\n```", "```js\n.message {\n    padding: 3%;\n    margin: 2%;\n    position: relative;\n    max-width: 70%;\n}\n.sendMessage {\n    right: -20%;\n    background: blue;\n    color: white;\n    border-radius: 16px 16px 8px 16px\n}\n.receivedMessage {\n    background: #bbb;\n    left: 0;\n    border-radius: 16px 16px 16px 8px;\n}\n```", "```js\n#inputDivs {\n    width: 450px;\n    display: flex;\n}\n#textInput {\n    font-size: 15px;\n    flex-grow: 2;\n}\n#sendButton {\n    font-size: 15px;\n    border: 0px solid lightskyblue;\n    background: lightskyblue;\n    border-radius: 8px;\n    padding: 8px;\n    margin-left: 8px;\n}\n```"]