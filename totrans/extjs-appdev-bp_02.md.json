["```js\n// view/List.js\nExt.define('MvcEx1v4.view.List', {\n    extend: 'Ext.grid.GridPanel',\n    alias: 'widget.app-list',\n    store: 'Albums',\n    forceFit: true,\n    frame: true,\n    requires: ['Ext.Msg'],\n\n    columns: [\n        { text: 'Name', dataIndex: 'name' },\n        { text: 'Artist', dataIndex: 'artist' }\n    ],\n\n    initComponent: function() {\n        this.bbar = [\n            '->',\n            { xtype: 'button', text: 'Show Artist Summary', handler: this.onShowSummary, scope: this },\n            '->'\n        ];\n\n        this.callParent(arguments);\n    },\n\n    onShowSummary: function() {\n        var summary = this.getStore().collect('name').join(', ');\n\n        Ext.Msg.alert('Artists', summary);\n    }\n});\n```", "```js\n// view/Detail.js\nExt.define('MvcEx1v4.view.Detail', {\n    extend: 'Ext.Container',\n    alias: 'widget.app-detail',\n    html: 'Double-click an Album to select'\n});\n```", "```js\n// view/Viewport.js\nExt.define('MvcEx1v4.view.Viewport', {\n    extend: 'Ext.container.Viewport',\n    requires:['MvcEx1v4.view.List'],\n    layout: 'hbox',\n    defaults: {\n        width: 250,\n        margin: 20\n    },\n    items: [{ xtype: 'app-list' }, { xtype: 'app-detail' }]\n});\n```", "```js\n// model/Album.js\nExt.define('MvcEx1v4.model.Album', {\n    extend: 'Ext.data.Model',\n\n    fields: [\n        { name: 'name', type: 'string' },\n        { name: 'artist', type: 'string' }\n    ]\n});\n// store/Albums.js\nExt.define('MvcEx1v4.store.Albums', {\nextend: 'Ext.data.JsonStore',\n\n   model: 'MvcEx1v4.model.Album',\n\n   data: [\n        { name: 'In Rainbows', artist: 'Radiohead' },\n        { name: 'Swim', artist: 'Caribou' }\n    ]\n});\n```", "```js\n// controller/Album.js\nExt.define('MvcEx1v4.controller.Album', {\n    extend: 'Ext.app.Controller',\n\n    refs: [{\n        ref: 'detail',\n        selector: 'app-detail'\n    }],\n\n    init: function() {\n        this.control({\n            '.app-list': {\n                itemdblclick: this.onAlbumDblClick\n            }\n        });\n    },\n\n    onAlbumDblClick: function(list, record) {\n        var html = Ext.String.format('{0} by {1}', record.get('name'), record.get('artist'));\n\n        this.getDetail().getEl().setHTML(html);\n    }\n});\n```", "```js\nrefs: [{\n    // We give our ref the name \"detail\". This autogenerates\n    // a method on the controller called \"getDetail\" which\n    // will enable us to access the view defined by the selector.\n    ref: 'detail',\n\n    // The selector is passed to Ext.ComponentQuery.query,\n    // so any valid component query would work here. We're\n    // just directly referencing the app-detail alias we\n    // set up in the view's configuration\n    selector: 'app-detail'\n}]\n```", "```js\n// model/Album.js\nExt.define('MvvmEx1v5.model.Album', {\n    extend: 'Ext.data.Model',\n\n    fields: [\n        { name: 'name', type: 'string' },\n        { name: 'artist', type: 'string' }\n    ]\n});\n```", "```js\n// store/Albums.js\nExt.define('MvvmEx1v5.store.Albums', {\n    extend: 'Ext.data.JsonStore',\n\n    model: 'MvvmEx1v5.model.Album',\n\n    data: [\n        { name: 'In Rainbows', artist: 'Radiohead' },\n        { name: 'Swim', artist: 'Caribou' }\n    ]\n});\n```", "```js\n// view/album/Album.js\nExt.define('MvvmEx1v5.view.album.Album', {\n    extend: 'Ext.container.Container',\n    xtype: 'app-album',\n    requires: ['Ext.grid.Panel'],\n    controller: 'album',\n    layout: 'hbox',\n    defaults: {\n        width: 250,\n        margin: 20\n    },\n    items: [\n        {\n            xtype: 'grid',\n            reference: 'list',\n            viewModel: 'album',\n            bind: '{albums}',\n            forceFit: true,\n            frame: true,\n            margin: '20 10 20 20',\n            columns: [\n                { text: 'Album', dataIndex: 'name' },\n                { text: 'Artist', dataIndex: 'artist' }\n            ],\n            bbar: [\n                '->',\n                { xtype: 'button', text: 'Show Artist Summary', handler: 'onShowSummary' },\n                '->'\n            ],\n            listeners: {\n                rowdblclick: 'onAlbumDblClick'\n            }\n        },\n        { xtype: 'container', margin: '20 10', reference: 'detail', width: 150, html: 'Double-click an Album to select' }\n    ]\n});\n```", "```js\n// view/album/AlbumModel.js\nExt.define('MvvmEx1v5.view.album.AlbumModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.album',\n\n    requires: [\n        'MvcEx1.store.Albums'\n        'Ext.Msg'\n    ],\n    stores: {\n        albums: {\n            type: 'albums'\n        }\n    },\n\n    buildSummary: function() {\n        return this.getStore('albums').collect('name').join(', ');\n    }\n});\n```", "```js\n// view/album/AlbumController.js\nExt.define('MvvmEx1v5.view.album.AlbumController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.album',\n\n    onShowSummary: function() {\n        var summary = this.lookupReference('list').getViewModel().buildSummary();\n\n        Ext.Msg.alert('Artists', summary);\n    },\n\n    onAlbumDblClick: function(list, record) {\n        var html = Ext.String.format('{0} by {1}', record.get('name'), record.get('artist'));\n        this.lookupReference('detail').getEl().setHtml(html);\n    }\n});\n```", "```js\ninit: function() {\n    this.listen({\n        component: {\n            'app-album grid': {\n               'rowdblclick': 'onAlbumDblClick'\n            },\n            'app-album button': {\n               'click': 'onShowSummary'\n            }\n        }\n    });\n}, \n```", "```js\n// view/search/SearchController.js\nExt.define('EventDomain1.view.search.SearchController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.search',\n\n    init: function() {\n        this.listen({\n            component: {\n                'app-search button': {\n                   'click': 'onSearchSubmit'\n                }\n            }\n        });\n    },\n\n    onSearchSubmit: function() {\n        var val = this.lookupReference('searchfield').getValue();\n        this.fireEvent('search', val);\n    }\n});\n```", "```js\n// partial /view/album/AlbumController.js\ninit: function() {\n    this.listen({\n        controller: {\n            '*': {\n                'search': 'onSearch'\n            }\n        }\n    });\n}\n```", "```js\nonSearch: function(searchTerm) {\n    var list = this.lookupReference('list');\n    list.getViewModel().search('searchTerm');\n}\n```"]