["```js\n//Create our application namespace\nvar my = {\n  secure : require('bencoding.securely'),\n  isAndroid : Ti.Platform.osname === 'android',\n  testObjects:{\n    testList : [\n      {name:'Name 1', address:'1 Main St'},\n      {name:'Name 2', address:'2 Main St'}\t\n    ]\n  }\n};\n```", "```js\n    var properties = my.secure.createProperties({\n      secret:\"sshh_dont_tell\",\n      identifier:\"myPropertyIdentifier\",\n      accessGroup:\"myAccessGroup\",\n      encryptFieldNames:false\n    });\n    ```", "```js\nfunction displayResults(result, expected) {\n  if (result instanceof Array) {\n    return displayResults(JSON.stringify(result), \n    JSON.stringify(expected));\n  }else{\n    if (result === expected) {\n      return \"Success (\"+result+\"==\"+expected+\")\";\n    } else {\n      return \"Fail: \" + result + \"!=\" + expected;\n    }\n  }\n};\n```", "```js\nTi.API.info('Bool: ' + displayResults(properties.getBool('whatever'),\n(my.isAndroid ? false : null)));\n\nTi.API.info('Double: ' + \ndisplayResults(properties.getDouble('whatever'),\n(my.isAndroid ? 0: null)));\n\nTi.API.info('int: ' + displayResults(properties.getInt('whatever'),\n(my.isAndroid ? 0 : null)));\n\nTi.API.info('String: ' + \ndisplayResults(properties.getString('whatever'),null));\n\nTi.API.debug('StringList: ' + \ndisplayResults(properties.getList('whatever'),null));\n```", "```js\nTi.API.info('Bool: ' + \ndisplayResults(properties.getBool('whatever',true),true));\n\nTi.API.info('Double: ' + \ndisplayResults(properties.getDouble('whatever',2.5),2.5));\n\nTi.API.info('int: ' + \ndisplayResults(properties.getInt('whatever',1),1));\n\nTi.API.info('String: ' + \ndisplayResults(properties.getString('whatever',\"Fred\"),\"Fred\"));\n\nTi.API.debug('StringList: ' + \ndisplayResults(properties.getList('whatever'),testList));\n```", "```js\nproperties.setString('MyString','I am a String Value ');\nproperties.setInt('MyInt',10);\nproperties.setBool('MyBool',true);\nproperties.setDouble('MyDouble',10.6);\nproperties.setList('MyList',my.testObjects.testList);\n```", "```js\nTi.API.info('MyString: '+ properties.getString('MyString'));\nTi.API.info('MyInt: '+ properties.getString('MyInt'));\nTi.API.info('MyBool: '+ properties.getString('MyBool'));\nTi.API.info('MyDouble: '+ properties.getString('MyDouble'));\nvar list = properties.getList('MyList');\nTi.API.info('List: ' + JSON.stringify(list));\n```", "```js\nif(!properties.hasFieldsEncrypted()){\n  var allProperties = properties.listProperties();\n  Ti.API.info(JSON.stringify(allProperties));\n}\n```", "```js\nproperties.removeProperty('MyInt');\n```", "```js\nproperties.removeAllProperties();\n```", "```js\nTi.API.info(\"Does MyInt property exist? \" + \nproperties.hasProperty('MyInt'));\n```", "```js\n//Create our application namespace\nvar my = {\n  secure : require('bencoding.securely'),\n  isAndroid : Ti.Platform.osname === 'android'\n};\n```", "```js\n    var usingGUID = \n    my.secure.generateDerivedKey(Ti.Platform.createUUID());\n    ```", "```js\n    var usingAppID = my.secure.generateDerivedKey(Ti.App.guid);\n    ```", "```js\nvar randomKey = my.secure.generateRandomKey();\n```", "```js\nvar stringCrypto = my.secure.createStringCrypto();\n```", "```js\nvar desEncryptedString = stringCrypto.DESEncrypt\n(usingGUID,\nplainTextString);\nvar desEncryptedObject = stringCrypto.DESEncrypt\n(usingGUID,\nJSON.stringify(plainObject));\n```", "```js\nvar desDecryptedString = stringCrypto.DESDecrypt\n(usingGUID,\ndesEncryptedString);\n```", "```js\nvar desDecryptedObject = JSON.parse\n(stringCrypto.DESDecrypt(usingGUID,\ndesEncryptedObject));\n```", "```js\nvar aesEncryptedString = stringCrypto.AESEncrypt\n(usingGUID,\nplainTextString);\nvar aesEncryptedObject = stringCrypto.AESEncrypt\n(usingGUID,\nJSON.stringify(plainObject));\n```", "```js\nvar aesDecryptedString = stringCrypto.AESDecrypt\n(usingGUID,\naesEncryptedString);\n```", "```js\nvar aesDecryptedObject = JSON.parse\n(stringCrypto.AESDecrypt(usingGUID,\naesEncryptedObject));\n```", "```js\n//Create our application namespace\nvar my = {\n  secure : require('bencoding.securely'),\n  isAndroid : Ti.Platform.osname === 'android'\n};\n```", "```js\n    var win = Ti.UI.createWindow({\n      backgroundColor: '#fff', title: 'File Crypto Example', \n      barColor:'#000',layout:'vertical',fullscreen:false\n    });\n    ```", "```js\n    var txtPassword = Ti.UI.createTextField({\n      value:'foo123',hintText:'Enter Password',\n      height:45, left:5, right:5, passwordMask:true\n    });\n    win.add(txtPassword);\n    ```", "```js\n    var btnEncrypt = Ti.UI.createButton({\n      title:'Encrypt', top:25, height:45, left:5, right:5\t\n    });\n    win.add(btnEncrypt);\n    ```", "```js\n    var btnDecrypt = Ti.UI.createButton({\n      title:'Decrypt', top:25, height:45, left:5, right:5\t\n    });\n    win.add(btnDecrypt);\n    ```", "```js\nbtnEncrypt.addEventListener('click',function(x){\n```", "```js\n      function onEncryptCompleted(e){\n        if(e.success){\n          var test = Ti.Filesystem.getFile(e.to);\n          Ti.API.info(\"Test file contents:\\n\" + \n          (test.read()).text);\n        }else{\n          alert('failed due to: ' + e.message);\n        }\n      };\n    ```", "```js\n      var fileCrypto = my.secure.createFileCrypto();\n    ```", "```js\n      var plainTextFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.resourcesDirectory, \n      'PlainText.txt'),\n      futureEncrypted = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'encryptedFile.txt');\n    ```", "```js\n          fileCrypto.AESEncrypt({\n            password:txtPassword.value,\n            from:plainTextFile.nativePath,\n            to:futureEncrypted.nativePath,\n            completed:onEncryptCompleted\n          });\n        });\n        ```", "```js\nbtnDecrypt.addEventListener('click',function(x){\n```", "```js\n      function onDecryptCompleted(e){\n        if(e.success){\n          var test = Ti.Filesystem.getFile(e.to);\n          Ti.API.info(\"Test file contents:\\n\" + \n          (test.read()).text);\n        }else{\n          alert('failed due to: ' + e.message);\n        }\n      };\n    ```", "```js\n      var encryptedFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'encryptedFile.txt'),\n      futureDecrypted = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'decryptedFile.txt');\n    ```", "```js\n      var fileCrypto = my.secure.createFileCrypto();\n    ```", "```js\n          fileCrypto.AESDecrypt({\n            password:txtPassword.value,\n            from:encryptedFile.nativePath,\n            to:futureDecrypted.nativePath,\n            completed:onDecryptCompleted\n          });\n        });\n        ```", "```js\n//Create our application namespace\nvar my = {\n  secure : require('bencoding.securely')\n};\n```", "```js\n    var win = Ti.UI.createWindow({\n      backgroundColor: '#fff', title: 'PDF Protection Example', \n      barColor:'#000',layout:'vertical'\n    });\n    ```", "```js\n    var txtPassword = Ti.UI.createTextField({\n      value:'foo123',hintText:'Enter Password',\n      height:45, left:5, right:5, passwordMask:true\n    });\t\n    win.add(txtPassword);\n    ```", "```js\n    var btnLock = Ti.UI.createButton({\n      title:'Lock PDF', top:25, height:45, left:5, right:5\n    });\n    win.add(btnLock);\n    ```", "```js\n    var btnUnlock = Ti.UI.createButton({\n      title:'Unlock PDF', top:25, height:45, left:5, right:5\n    });\n    win.add(btnUnlock);\n    ```", "```js\nbtnLock.addEventListener('click',function(x){\n```", "```js\n      function onProtected(e){\n        if(e.success){\n          alert('Protected PDF file created at: ' + e.to);\n        }else{\n          alert('failed due to: ' + e.message);\n        }\n      };\n    ```", "```js\n      var inputFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.resourcesDirectory, \n      'w4.pdf'),\n      outputFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'locked.pdf');\n    ```", "```js\n      var pdf = my.secure.createPDF();\n    ```", "```js\n          pdf.protect({\n            userPassword:txtPassword.value,\n            ownerPassword:txtPassword.value,\n            from:inputFile.nativePath,\n            to:outputFile.nativePath,\n            allowCopy:false,\n            completed:onProtected\n          });\n        });\n        ```", "```js\nbtnUnlock.addEventListener('click',function(x){\n```", "```js\n      function onUnlock(e){\n        if(e.success){\n          alert('Unlocked PDF file created at: ' + e.to);\n        }else{\n          alert('failed due to: ' + e.message);\n        }\n      };\n    ```", "```js\n      var protectedFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'locked.pdf'),\n      unlockedFile = Ti.Filesystem.getFile(\n      Ti.Filesystem.applicationDataDirectory, \n      'unlocked.pdf');\n    ```", "```js\n      var pdf = my.secure.createPDF();\n    ```", "```js\n          pdf.unprotect({\n            password:txtPassword.value,\n            from:protectedFile.nativePath,\n            to:unlockedFile.nativePath,\n            completed:onUnlock\n          });\n        });\n        ```", "```js\n//Create our application namespace\nvar my = {\n  secure : require('bencoding.securely')\n};\n```", "```js\nvar win = Ti.UI.createWindow({\n  backgroundColor: '#fff', title: 'Lock Screen Monitor', \n  fullscreen:false, exitOnClose:true\n});\n```", "```js\n      var platform = my.secure.createPlatform();\n    ```", "```js\n      if(!platform.lockPatternEnabled()){\n        alert('lock screen is not enabled on this device');\n      }\n    ```", "```js\n    var lockHelper = my.secure.createLockScreenHelper();\n    ```", "```js\n    lockHelper.startMonitorForScreenOff();\n    ```", "```js\n    lockHelper.startMonitorForScreenOn();\n    ```", "```js\nTi.App.addEventListener('BCX:SCREEN_OFF',function(e){\n  Ti.API.info('Last locked at ' + \n  String.DateFormat(new Date(e.actionTime)));\n});\n\nTi.App.addEventListener('BCX:SCREEN_ON',function(e){\n  Ti.API.info('Last unlocked at ' + \n  String.DateFormat(new Date(e.actionTime)));\n});\n```", "```js\nwin.addEventListener('focus',function(e){\n```", "```js\n      if(lockHelper.wasLocked()){\n    ```", "```js\n        if(!lockHelper.isShowingLockScreen()){\n    ```", "```js\n          lockHelper.resetMonitorForScreenOff();\n\n        }\n      }\t\n    });\n    ```", "```js\nwin.addEventListener('close',function(e){\n  lockHelper.stopMonitoring();\n  Ti.App.removeEventListener('BCX:SCREEN_ON',screenON);\n  Ti.App.removeEventListener('BCX:SCREEN_OFF',screenOFF); \n});\t\n```"]