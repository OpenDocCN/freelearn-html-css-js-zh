["```js\n$ npm install passport --save\npassport@0.3.2 node_modules/passport\n|- pause@0.0.1\n|_ passport-strategy@1.0.0\n\n```", "```js\n$ npm install passport-local -save\npassport-local@1.0.0 node_modules/passport-local\n|_ passport-strategy@1.0.0\n\n```", "```js\n$ npm install express-session -save\nexpress-session@1.13.0 node_modules/express-session\n|- utils-merge@1.0.0\n|- cookie-signature@1.0.6\n|- parseurl@1.3.1\n|- cookie@0.2.3\n|- on-headers@1.0.1\n|- depd@1.1.0\n|- crc@3.4.0\n|- uid-safe@2.0.0 (base64-url@1.2.1)\n\n```", "```js\nvar express = require('express'); \nvar path = require('path'); \nvar favicon = require('serve-favicon'); \nvar logger = require('morgan'); \nvar cookieParser = require('cookie-parser'); \nvar bodyParser = require('body-parser'); \nvar isJSON = require('./utils/json'); \nvar routing = require('resource-routing'); \nvar controllers = path.resolve('./controllers'); \n\n//Database stuff \nvar mongodb = require('mongodb'); \nvar monk = require('monk'); \nvar db = monk('localhost:27017/giftapp'); \n\nvar routes = require('./routes/index'); \nvar users = require('./routes/users'); \nvar dashboard = require('./routes/dashboard'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'ejs'); \n\napp.set('x-powered-by', false); \n\napp.locals.appName = \"My Gift App\"; \n\n// uncomment after placing your favicon in /public \n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); \napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \napp.use(isJSON); \n\nvar passport = require('passport');\nvar expressSession = require('express-session');\napp.use(expressSession({secret: 'someKeyYouPick'}));\napp.use(passport.initialize());\napp.use(passport.session()); \n\n//Database middleware \napp.use(function(req,res,next){ \n    req.db = db; \n    next(); \n}); \n\napp.use('/', routes); \napp.use('/users', users); \napp.use('/dash', dashboard); \n\nrouting.resources(app, controllers, \"giftlist\"); \nrouting.expose_routing_table(app, { at: \"/my-routes\" }); \n\n// catch 404 and forward to error handler \napp.use(function(req, res, next) { \n  var err = new Error('Not Found'); \n  err.status = 404; \n  next(err); \n}); \n\n// error handlers \n\n// development error handler \n// will print stacktrace \nif (app.get('env') === 'development') { \n  app.use(function(err, req, res, next) { \n    res.status(err.status || 500); \n    res.render('error', { \n      message: err.message, \n      error: err \n    }); \n  }); \n} \n\n// production error handler \n// no stacktraces leaked to user \napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n\nmodule.exports = app; \n\n```", "```js\n$ npm install mongoose -save\nmongoose@4.3.7 node_modules/mongoose\n|- ms@0.7.1\n|- regexp-clone@0.0.1\n|- hooks-fixed@1.1.0\n|- async@0.9.0\n|- mpromise@0.5.4\n|- mpath@0.1.1\n|- muri@1.0.0\n|- sliced@0.0.5\n|- kareem@1.0.1\n|- bson@0.4.21\n|- mquery@1.6.3 (bluebird@2.9.26)\n|_ mongodb@2.1.4 (es6-promise@3.0.2, readable-stream@1.0.31, kerberos@0.0.18, mongodb-core@1.2.32)\n\n```", "```js\nvar express = require('express'); \nvar path = require('path'); \nvar favicon = require('serve-favicon'); \nvar logger = require('morgan'); \nvar cookieParser = require('cookie-parser'); \nvar bodyParser = require('body-parser'); \nvar isJSON = require('./utils/json'); \nvar routing = require('resource-routing'); \nvar controllers = path.resolve('./controllers'); \n\n//Database stuff \nvar mongodb = require('mongodb'); \nvar monk = require('monk'); \nvar db = monk('localhost:27017/giftapp'); \n\nvar mongoose = require('mongoose');\nmongoose.connect('localhost:27017/giftapp'); \n\nvar routes = require('./routes/index'); \nvar users = require('./routes/users'); \nvar dashboard = require('./routes/dashboard'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'ejs'); \n\napp.set('x-powered-by', false); \n\napp.locals.appName = \"My Gift App\"; \n\n// uncomment after placing your favicon in /public \n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); \napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \napp.use(isJSON); \n\nvar passport = require('passport'); \nvar expressSession = require('express-session'); \napp.use(expressSession({secret: 'mySecretKey'})); \napp.use(passport.initialize()); \napp.use(passport.session()); \n\n//Database middleware \napp.use(function(req,res,next){ \n    req.db = db; \n    next(); \n}); \n\napp.use('/', routes); \napp.use('/users', users); \napp.use('/dash', dashboard); \n\nrouting.resources(app, controllers, \"giftlist\"); \nrouting.expose_routing_table(app, { at: \"/my-routes\" }); \n\n// catch 404 and forward to error handler \napp.use(function(req, res, next) { \n  var err = new Error('Not Found'); \n  err.status = 404; \n  next(err); \n}); \n\n// error handlers \n\n// development error handler \n// will print stacktrace \nif (app.get('env') === 'development') { \n  app.use(function(err, req, res, next) { \n    res.status(err.status || 500); \n    res.render('error', { \n      message: err.message, \n      error: err \n    }); \n  }); \n} \n\n// production error handler \n// no stacktraces leaked to user \napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n\nmodule.exports = app; \n\n```", "```js\n> use giftapp\nswitched to db giftapp\n> show collections\ngiftapp\ngiftlist\nsystem.indexes\ntest\nusers\n> db.users.drop()\ntrue\n> show collections\ngiftapp\ngiftlist\nsystem.indexes\ntest\n\n```", "```js\nvar mongoose = require('mongoose'); \nvar Schema = mongoose.Schema; \nmodule.exports = mongoose.model('User', new Schema({ \n    id: String, \n    username: String, \n    email: String, \n    password: String, \n    firstName: String, \n    lastName: String \n})); \n\n```", "```js\nvar User = require('../models/user'); \n\nmodule.exports = function(passport){ \n  passport.serializeUser(function(user, done) { \n        done(null, user._id); \n    }); \n\n    passport.deserializeUser(function(id, done) { \n        User.findById(id, function(err, user) { \n\n            done(err, user); \n        }); \n    }); \n} \n\n```", "```js\nvar express = require('express'); \nvar path = require('path'); \nvar favicon = require('serve-favicon'); \nvar logger = require('morgan'); \nvar cookieParser = require('cookie-parser'); \nvar bodyParser = require('body-parser'); \nvar isJSON = require('./utils/json'); \nvar routing = require('resource-routing'); \nvar controllers = path.resolve('./controllers'); \n\n//Database stuff \nvar mongodb = require('mongodb'); \n\nvar mongoose = require('mongoose'); \nmongoose.connect('localhost:27017/giftapp'); \n\nvar routes = require('./routes/index'); \nvar users = require('./routes/users'); \nvar dashboard = require('./routes/dashboard'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'ejs'); \n\napp.set('x-powered-by', false); \n\napp.locals.appName = \"My Gift App\"; \n\n// uncomment after placing your favicon in /public \n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); \napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \napp.use(isJSON); \n\nvar flash = require('connect-flash');\napp.use(flash()); \n\nvar passport = require('passport'); \nvar expressSession = require('express-session'); \napp.use(expressSession({secret: 'mySecretKey'})); \napp.use(passport.initialize()); \napp.use(passport.session()); \n\nvar initializePassport = require('./passport/init');\ninitializePassport(passport); \n\n//Database middleware \napp.use(function(req,res,next){ \n    req.db = db; \n    next(); \n}); \n\napp.use('/', routes); \napp.use('/users', users); \napp.use('/dash', dashboard); \n\nrouting.resources(app, controllers, \"giftlist\"); \nrouting.expose_routing_table(app, { at: \"/my-routes\" }); \n\n// catch 404 and forward to error handler \napp.use(function(req, res, next) { \n  var err = new Error('Not Found'); \n  err.status = 404; \n  next(err); \n}); \n\n// error handlers \n\n// development error handler \n// will print stacktrace \nif (app.get('env') === 'development') { \n  app.use(function(err, req, res, next) { \n    res.status(err.status || 500); \n    res.render('error', { \n      message: err.message, \n      error: err \n    }); \n  }); \n} \n\n// production error handler \n// no stacktraces leaked to user \napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n\nmodule.exports = app; \n\n```", "```js\n$ npm install connect-flash --save\nconnect-flash@0.1.1 node_modules/connect-flash\n\n```", "```js\n$ npm install bcrypt-nodejs --save\nbcrypt-nodejs@0.0.3 node_modules/bcrypt-nodejs\n\n```", "```js\nvar LocalStrategy   = require('passport-local').Strategy; \nvar User = require('../models/user'); \nvar bCrypt = require('bcrypt-nodejs'); \n\nmodule.exports = function(passport){ \n\n    passport.use('signup', new LocalStrategy({ \n            passReqToCallback : true \n        }, \n        function(req, username, password, done) { \n            //this is asynchronous \n            process.nextTick(function () { \n                console.log('inside signup'); \n                // see if user already exists \n                User.findOne({'username': username}, function (err, user) { \n                    if (err) { \n                        console.log('Error in SignUp: ' + err); \n                        return done(err); \n                    } \n                    // user exists \n                    if (user) { \n                        console.log('User already exists'); \n                        return done(null, false, req.flash('message', 'User\n                        Already Exists')); \n                    } else { \n                        //create a new User and store to the\n                        database \n                        var user = new User(); \n\n                        user.username = username; \n                        user.email = req.param('email'); \n                        user.password = \n                        bCrypt.hashSync(password,\n                        bCrypt.genSaltSync(10), null); \n                        user.firstName = \n                        req.param('firstName'); \n                        user.lastName = req.param('lastName'); \n\n                        user.save(function (err) { \n                            if (err) { \n                                console.log('save error ' + \n                                             err); \n                                throw err; \n                            } \n                            console.log(\"saving\") \n                            return done(null, user); \n                        }); \n                    } \n                }); \n            }); \n\n        }) \n    ); \n\n} \n\n```", "```js\nvar signup = require('./signup'); \nvar User = require('../models/user'); \n\nmodule.exports = function(passport){ \n\n  passport.serializeUser(function(user, done) { \n\n        done(null, user._id); \n    }); \n\n    passport.deserializeUser(function(id, done) { \n        User.findById(id, function(err, user) { \n\n            done(err, user); \n        }); \n    }); \n\n    signup(passport); \n\n} \n\n```", "```js\nvar LocalStrategy   = require('passport-local').Strategy; \nvar User = require('../models/user'); \nvar bCrypt = require('bcrypt-nodejs'); \n\nmodule.exports = function(passport){ \n\n    passport.use('login', new LocalStrategy({ \n            passReqToCallback : true \n        }, \n        function(req, username, password, done) { \n\n            User.findOne({ 'username' :  username }, \n                function(err, user) { \n                    if (err) \n                        return done(err); \n                    if (!user){ \n                        // username not found \n                        return done(null, false, req.flash('message', 'Username\n                        or password incorrect.')); \n                    } \n\n                    if (!bCrypt.compareSync(password, user.password)){ \n                        //password is invalid \n                        return done(null, false, req.flash('message', 'Username \n                        or password incorrect.')); \n                    } \n                    //success condition \n                    return done(null, user); \n                } \n            ); \n\n        }) \n    ); \n\n} \n\n```", "```js\nvar signup = require('./signup'); \nvar login = require('./login'); \nvar User = require('../models/user'); \n\nmodule.exports = function(passport){ \n\n    passport.serializeUser(function(user, done) { \n\n        done(null, user._id); \n    }); \n\n    passport.deserializeUser(function(id, done) { \n        User.findById(id, function(err, user) { \n\n            done(err, user); \n        }); \n    }); \n\n    signup(passport); \n    login(passport); \n\n} \n\n```", "```js\nvar express = require('express'); \nvar router = express.Router(); \n\nmodule.exports = function(passport){ \n\n    router.get('/', function(req, res) { \n\n        res.render('login/login', { message: req.flash('message') }); \n    }); \n\n    router.post('/', passport.authenticate('login', { \n        successRedirect: '/dash', \n        failureRedirect: '/login', \n        failureFlash : true \n    })); \n\n    router.get('/signup', function(req, res){ \n        res.render('login/signup',{message: req.flash('message')}); \n    }); \n\n    router.post('/signup', passport.authenticate('signup', { \n        successRedirect: '/dash', \n        failureRedirect: '/login/signup', \n        failureFlash : true \n    })); \n\n    router.get('/signout', function(req, res) { \n        req.logout(); \n        res.redirect('/login'); \n    }); \n\n    return router; \n} \n\n```", "```js\nvar express = require('express'); \nvar path = require('path'); \nvar favicon = require('serve-favicon'); \nvar logger = require('morgan'); \nvar cookieParser = require('cookie-parser'); \nvar bodyParser = require('body-parser'); \nvar isJSON = require('./utils/json'); \nvar routing = require('resource-routing'); \nvar controllers = path.resolve('./controllers'); \n\n//Database stuff \nvar mongodb = require('mongodb'); \n\nvar mongoose = require('mongoose'); \nmongoose.connect('localhost:27017/giftapp'); \n\nvar routes = require('./routes/index'); \nvar users = require('./routes/users'); \nvar dashboard = require('./routes/dashboard'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'ejs'); \n\napp.set('x-powered-by', false); \n\napp.locals.appName = \"My Gift App\"; \n\n// uncomment after placing your favicon in /public \n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); \napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \napp.use(isJSON); \n\nvar flash = require('connect-flash'); \napp.use(flash()); \n\nvar passport = require('passport'); \nvar expressSession = require('express-session'); \napp.use(expressSession({secret: 'mySecretKey'})); \napp.use(passport.initialize()); \napp.use(passport.session()); \n\nvar initializePassport = require('./passport/init'); \ninitializePassport(passport); \n\n//Database middleware \napp.use(function(req,res,next){ \n    req.db = db; \n    next(); \n}); \n\napp.use('/', routes); \napp.use('/users', users); \napp.use('/dash', dashboard); \n\nvar login = require('./routes/login')(passport);\napp.use('/login', login); \n\nrouting.resources(app, controllers, \"giftlist\"); \nrouting.expose_routing_table(app, { at: \"/my-routes\" }); \n\n// catch 404 and forward to error handler \napp.use(function(req, res, next) { \n  var err = new Error('Not Found'); \n  err.status = 404; \n  next(err); \n}); \n\n// error handlers \n\n// development error handler \n// will print stacktrace \nif (app.get('env') === 'development') { \n  app.use(function(err, req, res, next) { \n    res.status(err.status || 500); \n    res.render('error', { \n      message: err.message, \n      error: err \n    }); \n  }); \n} \n\n// production error handler \n// no stacktraces leaked to user \napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n\nmodule.exports = app; \n\n```", "```js\n<!DOCTYPE html> \n<html> \n<head > \n    <title>Signup</title> \n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> \n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\"> \n\n</head> \n<body> \n\n<nav class=\"nav navbar-default\"> \n    <div class=\"container-fluid\"> \n        <div class=\"navbar-header\"> \n            <a class=\"navbar-brand\" href=\"#\"> Giftapp Signup</a> \n        </div> \n    </div> \n</nav> \n\n<div class=\"container\"> \n    <% if(message){ %> \n    <div class=\"row\"> \n        <div class=\"col-md-4 col-md-offset-4\" role=\"alert\"> \n            <%= message %> \n        </div> \n    </div> \n    <% } %> \n\n    <div class=\"row\"> \n        <div class=\"col-md-6 col-md-offset-3\"> \n            <form method=\"post\" action=\"/login/register\"> \n                <div class=\"form-group\"> \n                    <label for=\"username\">Username</label> \n                    <input type=\"text\" class=\"form-control\" id=\"username\" \n                     name=\"username\" placeholder=\"username\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"password\">Password</label> \n                    <input type=\"password\" class=\"form-control\" id=\"password\" \n                     name=\"password\" placeholder=\"Password\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"email\">Email address</label> \n                    <input type=\"email\" class=\"form-control\" id=\"email\" \n                      name=\"email\" placeholder=\"Email\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"firstName\">First Name</label> \n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" \n                      name=\"firstName\" placeholder=\"First Name\"> \n                </div> \n\n                <div class=\"form-group\"> \n                    <label for=\"lastName\">Last Name</label> \n                    <input type=\"text\" class=\"form-control\" id=\"lastName\" \n                     name=\"lastName\" placeholder=\"Last Name\"> \n                </div> \n                <button type=\"submit\" class=\"btn btn-default\">Submit</button> \n            </form> \n        </div> \n    </div> \n\n</div> \n\n</body> \n</html> \n\n```", "```js\n> db.users.find({}).pretty()\n{\n \"_id\" : ObjectId(\"56ae11990d7ca83f048f3c2a\"),\n \"lastName\" : \"Moore\",\n \"firstName\" : \"John\",\n \"password\" :\n      \"$2a$10$OFhNNsA5MKrWCyFG9nATq.CIpTYZ5DH.jr8FnJYYFzgH7P4qM5QZy\",\n \"email\" : \"john@johnmoore.ninja\",\n \"username\" : \"ninja\",\n \"__v\" : 0\n}\n{\n \"_id\" : ObjectId(\"56ae18d10d7ca83f048f3c2b\"),\n \"lastName\" : \"Blanks\",\n \"firstName\" : \"Billy\",\n \"password\" :\n      \"$2a$10$NZQz8Nq4hBjSuU5yvO1Lnen.sy.sxEWwht0nPrIlP3aKC0jUrgSTq\",\n \"email\" : \"billy@fakeemailaddress.com\",\n \"username\" : \"billy\",\n \"__v\" : 0\n}\n\n```", "```js\n<!DOCTYPE html> \n<html> \n<head > \n    <title>Signup</title> \n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n\n    <link rel=\"stylesheet\"\n    href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> \n    <link rel=\"stylesheet\"\n     href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-\n     theme.min.css\"> \n\n</head> \n<body> \n\n<nav class=\"nav navbar-default\"> \n    <div class=\"container-fluid\"> \n        <div class=\"navbar-header\"> \n            <a class=\"navbar-brand\" href=\"#\"> Giftapp Login</a> \n        </div> \n    </div> \n</nav> \n\n<div class=\"container\"> \n    <% if(message){ %> \n    <div class=\"row\"> \n        <div class=\"col-md-4 col-md-offset-4\" role=\"alert\"> \n            <%= message %> \n        </div> \n    </div> \n    <% } %> \n\n    <div class=\"row\"> \n        <div class=\"col-md-6 col-md-offset-3\"> \n            <form method=\"post\" action=\"/login\"> \n                <div class=\"form-group\"> \n                    <label for=\"username\">Username</label> \n                    <input type=\"text\" class=\"form-control\" id=\"username\"\n                     name=\"username\" placeholder=\"username\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"password\">Password</label> \n                    <input type=\"password\" class=\"form-control\" id=\"password\" \n                     name=\"password\" placeholder=\"Password\"> \n                </div> \n\n                <button type=\"submit\" class=\"btn btn-default\">Submit</button> \n            </form> \n        </div> \n    </div> \n\n</div> \n\n</body> \n</html> \n\n```", "```js\nvar authenticated = function (req, res, next) { \n\n    if (req.isAuthenticated()){ \n        return next(); \n    } else { \n        res.redirect('/login'); \n    } \n\n} \n\nmodule.exports = authenticated; \n\n```", "```js\nvar express = require('express'); \nvar router = express.Router(); \nvar isAuthenticated = require('../utils/authenticated');\nrouter.get('/', isAuthenticated, function(req, res, next) {\n res.send('respond with a resource');\n}); \n\nrouter.param('id', function(req, res, next, id) { \n    var db = req.db; \n    var collection = db.get('giftlist'); \n\n    collection.find({'owner_id':id}, {}, function(err,giftlists){ \n        if(err){ \n            res.send(err); \n        }else if(giftlists){ \n            req.giftlists = giftlists; \n            collection = db.get('users'); \n            collection.findOne({\"_id\":id}, function(err, user){ \n                if(err){ \n                    res.send(err); \n                } else { \n\n                    req.user = user; \n                    next(); \n                } \n\n            }); \n\n        } else { \n            res.send(new Error('User not found.')); \n        } \n    }); \n}); \n\nrouter.get('/:id', function(req, res, next){ \n    res.render('dash/dashboard', {user: req.user, giftlists: req.giftlists}); \n}); \n\nmodule.exports = router; \n\n```", "```js\nvar express = require('express'); \nvar router = express.Router(); \nvar isAuthenticated = require('../utils/authenticated'); \n\nrouter.get('/', isAuthenticated, function(req, res, next) { \n\n    var db = req.db; \n    var collection = db.get('giftlist'); \n\n    collection.find({'owner_id':req.user._id}, {}, function(err,giftlists){ \n        if(err){ \n            res.send(err); \n        }else { \n            giftlists = giftlists || []; \n            res.render('dash/dashboard', {user: req.user, giftlists: giftlists}); \n        } \n    }); \n}); \n\nmodule.exports = router; \n\n```", "```js\n$ npm install helmet --save\nhelmet@1.1.0 node_modules/helmet\n|- nocache@1.0.0\n|- hide-powered-by@1.0.0\n|- dont-sniff-mimetype@1.0.0\n|- dns-prefetch-control@0.1.0\n|- ienoopen@1.0.0\n|- hpkp@1.0.0\n|- x-xss-protection@1.0.0\n|- hsts@1.0.0 (core-util-is@1.0.2)\n|- frameguard@1.0.0 (lodash.isstring@3.0.1)\n|- connect@3.4.0 (parseurl@1.3.1, utils-merge@1.0.0, finalhandler@0.4.0)\n|_ helmet-csp@1.0.3 (lodash.isfunction@3.0.6, platform@1.3.0, camelize@1.0.0, lodash.assign@3.2.0, content-security-policy-builder@1.0.0, lodash.reduce@3.1.2, lodash.some@3.2.3)\n\n```", "```js\nvar express = require('express'); \nvar path = require('path'); \nvar favicon = require('serve-favicon'); \nvar logger = require('morgan'); \nvar cookieParser = require('cookie-parser'); \nvar bodyParser = require('body-parser'); \nvar isJSON = require('./utils/json'); \nvar routing = require('resource-routing'); \nvar controllers = path.resolve('./controllers'); \nvar helmet = require('helmet'); \n\n//Database stuff \nvar mongodb = require('mongodb'); \nvar monk = require('monk'); \nvar db = monk('localhost:27017/giftapp'); \n\nvar mongoose = require('mongoose'); \nmongoose.connect('localhost:27017/giftapp'); \n\nvar routes = require('./routes/index'); \nvar users = require('./routes/users'); \nvar dashboard = require('./routes/dashboard'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'views')); \napp.set('view engine', 'ejs'); \n\napp.set('x-powered-by', false); \n\napp.locals.appName = \"My Gift App\"; \n\n// uncomment after placing your favicon in /public \n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); \napp.use(logger('dev')); \napp.use(bodyParser.json()); \napp.use(bodyParser.urlencoded({ extended: false })); \napp.use(cookieParser()); \napp.use(express.static(path.join(__dirname, 'public'))); \napp.use(isJSON); \n\nvar flash = require('connect-flash'); \napp.use(flash()); \n\nvar passport = require('passport'); \nvar expressSession = require('express-session'); \napp.use(expressSession({secret: 'mySecretKey'})); \napp.use(passport.initialize()); \napp.use(passport.session()); \n\nvar initializePassport = require('./passport/init'); \ninitializePassport(passport); \n\n//Database middleware \napp.use(function(req,res,next){ \n    req.db = db; \n    next(); \n}); \n\napp.use('helmet'); \n\napp.use('/', routes); \napp.use('/users', users); \napp.use('/dash', dashboard); \n\nvar login = require('./routes/login')(passport); \napp.use('/login', login); \n\nrouting.resources(app, controllers, \"giftlist\"); \nrouting.expose_routing_table(app, { at: \"/my-routes\" }); \n\n// catch 404 and forward to error handler \napp.use(function(req, res, next) { \n  var err = new Error('Not Found'); \n  err.status = 404; \n  next(err); \n}); \n\n// error handlers \n\n// development error handler \n// will print stacktrace \nif (app.get('env') === 'development') { \n  app.use(function(err, req, res, next) { \n    res.status(err.status || 500); \n    res.render('error', { \n      message: err.message, \n      error: err \n    }); \n  }); \n} \n\n// production error handler \n// no stacktraces leaked to user \napp.use(function(err, req, res, next) { \n  res.status(err.status || 500); \n  res.render('error', { \n    message: err.message, \n    error: {} \n  }); \n}); \n\nmodule.exports = app; \n\n```", "```js\n$ npm install csurf --save\ncsurf@1.8.3 node_modules/csurf\n|- cookie@0.1.3\n|- cookie-signature@1.0.6\n|- http-errors@1.3.1 (inherits@2.0.1, statuses@1.2.1)\n|_ csrf@3.0.1 (rndm@1.2.0, base64-url@1.2.1, scmp@1.0.0, uid-safe@2.1.0)\n\n```", "```js\nvar express = require('express'); \nvar router = express.Router(); \n\nmodule.exports = function(passport){ \n\n    router.get('/', function(req, res) { \n res.render('login/login', { message: req.flash('message'), csrfToken:\n        req.csrfToken() }); \n    }); \n\n    router.post('/', passport.authenticate('login', { \n        successRedirect: '/dash', \n        failureRedirect: '/login', \n        failureFlash : true \n    })); \n\n    router.get('/signup', function(req, res){ \n        console.log('signing up'); \n res.render('login/signup',{message: req.flash('message'), csrfToken:\n        req.csrfToken()}); \n    }); \n\n    router.post('/register', passport.authenticate('signup', { \n        successRedirect: '/dash', \n        failureRedirect: '/login/signup', \n        failureFlash : true \n    })); \n\n    router.get('/signout', function(req, res) { \n        req.logout(); \n        res.redirect('/login'); \n    }); \n\n    return router; \n} \n\n```", "```js\n<!DOCTYPE html> \n<html> \n<head > \n    <title>Signup</title> \n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> \n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\"> \n\n</head> \n<body> \n\n<nav class=\"nav navbar-default\"> \n    <div class=\"container-fluid\"> \n        <div class=\"navbar-header\"> \n            <a class=\"navbar-brand\" href=\"#\"> Giftapp Signup</a> \n        </div> \n    </div> \n</nav> \n\n<div class=\"container\"> \n    <% if(message){ %> \n    <div class=\"row\"> \n        <div class=\"col-md-4 col-md-offset-4\" role=\"alert\"> \n            <%= message %> \n        </div> \n    </div> \n    <% } %> \n\n    <div class=\"row\"> \n        <div class=\"col-md-6 col-md-offset-3\"> \n            <form method=\"post\" action=\"/login/register\"> \n                <div class=\"form-group\"> \n                    <label for=\"username\">Username</label> \n                    <input type=\"text\" class=\"form-control\" \n                     id=\"username\" name=\"username\" placeholder=\"username\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"passwordd\">Password</label> \n                    <input type=\"password\" class=\"form-control\" id=\"password\" \n                      name=\"password\" placeholder=\"Password\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"email\">Email address</label> \n                    <input type=\"email\" class=\"form-control\" id=\"email\" \n                     name=\"email\" placeholder=\"Email\"> \n                </div> \n                <div class=\"form-group\"> \n                    <label for=\"firstName\">First Name</label> \n                    <input type=\"text\" class=\"form-control\"  \n                     id=\"firstName\" name=\"firstName\" placeholder=\"First Name\"> \n                </div> \n\n                <div class=\"form-group\"> \n                    <label for=\"lastName\">Last Name</label> \n                    <input type=\"text\" class=\"form-control\" id=\"lastName\"\n                     name=\"lastName\" placeholder=\"Last Name\"> \n                </div> \n <input type=\"hidden\" name=\"_csrf\" value=\"<% csrfToken %>\"> \n<button type=\"submit\" class=\"btn btn-default\">Submit</button> \n\n            </form> \n        </div> \n    </div \n\n</div> \n\n</body> \n\n</html> \n\n```", "```js\n<input type=\"hidden\" name=\"_csrf\" value=\"UBDtLOuZ-emrxDagDmIjxxsomxFS2pSeXKb4\"> \n\n```"]