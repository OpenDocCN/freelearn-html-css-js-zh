["```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install\n\n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      app.get('/', (request, response, nextHandler) => { \n          response.status(200).send('Hello from ExpressJS') \n      }) \n```", "```js\n      app.listen( \n         1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node 1-basic-route.js \n```", "```js\n      http://localhost:1337/\n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      app.get('/one', (request, response, nextHandler) => { \n          response.type('text/plain') \n          response.write('Hello ') \n          nextHandler() \n      }) \n      app.get('/one', (request, response, nextHandler) => { \n         response.status(200).end('World!') \n      }) \n```", "```js\n      app.get('/two', \n          (request, response, nextHandler) => { \n             response.type('text/plain') \n             response.write('Hello ') \n             nextHandler() \n         }, \n          (request, response, nextHandler) => { \n             response.status(200).end('Moon!') \n         } \n      ) \n```", "```js\n      app.listen( \n         1337, \n         () => console.log('Web Server running on port 1337'), \n     ) \n```", "```js\n    node 2-route-handlers.js  \n```", "```js\n http://localhost:1337/one http://localhost:1337/two  \n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      app \n      .route('/home') \n      .get((request, response, nextHandler) => { \n          response.type('text/html') \n          response.write('<!DOCTYPE html>') \n          nextHandler() \n      }) \n      .get((request, response, nextHandler) => { \n          response.end(` \n          <html lang=\"en\"> \n              <head> \n              <meta charset=\"utf-8\"> \n              <title>WebApp powered by ExpressJS</title> \n              </head> \n              <body role=\"application\"> \n                  <form method=\"post\" action=\"/home\"> \n                      <input type=\"text\" /> \n                      <button type=\"submit\">Send</button> \n                  </form> \n              </body> \n          </html> \n          `) \n      }) \n      .post((request, response, nextHandler) => { \n          response.send('Got it!') \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node 3-chainable-routes.js\n```", "```js\n      http://localhost:1337/home\n```", "```js\napp.get(/([a-z]+)-([0-9]+)$/, (request, response, nextHandler) => { \n    response.send(request.params) \n}) \n// Output: {\"0\":\"abc\",\"1\":\"12345\"} for path /abc-12345 \n```", "```js\napp.get('/:0-:1', (request, response, nextHandler) => { \n    response.send(request.params) \n}) \n// Outputs: {\"0\":\"abc\",\"1\":\"12345\"} for /abc-12345 \n```", "```js\napp.get('/:id-:tag', (request, response, nextHandler) => { \n    response.send(request.params) \n}) \n// Outputs: {\"id\":\"abc\",\"tag\":\"12345\"} for /abc-12345 \n```", "```js\napp.get('/:userId/:action-:where', (request, response, nextHandler) => { \n    response.send(request.params) \n}) \n// Route path: /123/edit-profile \n// Outputs: {\"userId\":\"123\",\"action\":\"edit\",\"where\":\"profile\"} \n```", "```js\nconst router = express.Router() \nrouter.get('/', (request, response, next) => { \n  response.send('Hello there!') \n}) \nrouter.post('/', (request, response, next) => { \n  response.send('I got your data!') \n}) \n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install\n\n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      const miniapp = express.Router() \n      miniapp.get('/home', (request, response, next) => { \n          const url = request.originalUrl \n          response \n              .status(200) \n              .send(`You are visiting /home from ${url}`) \n      }) \n```", "```js\n      app.use('/first', miniapp) \n      app.use('/second', miniapp) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node modular-router.js\n```", "```js\n      http://localhost:1337/first/home\n      http://localhost:1337/second/home\n```", "```js\nYou are visting /home from /first/home \nYou are visting /home from /second/home \n```", "```js\napp.use((request, response, next) => { \n    next() \n}) \n```", "```js\napp.get('/', (request, response, next) => { \n    next() \n}) \n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install \n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      app.use((request, response, next) => { \n          request.allowed = Reflect.has(request.query, 'allowme') \n          next() \n      }) \n```", "```js\n      app.get('/', (request, response, next) => { \n          if (request.allowed) { \n              response.send('Hello secret world!') \n          } else { \n              response.send('You are not allowed to enter') \n          } \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node middleware-functions.js\n\n```", "```js\nhttp://localhost:1337/\n      http://localhost:1337/?allowme\n```", "```js\nconst fn = (options) => (response, request, next) => {  \n    next()  \n} \n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install\n\n```", "```js\n      const logger = (options) => (request, response, next) => { \n          if (typeof options === 'object' \n              && options !== null \n              && options.enable) { \n              console.log( \n                  'Status Code:', response.statusCode, \n                  'URL:', request.originalUrl, \n              ) \n          } \n          next() \n      } \n      module.exports = logger \n```", "```js\n       const express = require('express') \n       const loggerMiddleware = require('./middleware-logger') \n       const app = express() \n```", "```js\n      app.use(loggerMiddleware({ \n         enable: true, \n      })) \n```", "```js\n      app.listen( \n           1337, \n           () => console.log('Web Server running on port 1337'), \n         ) \n```", "```js\n node middleware-logger-test.js\n```", "```js\n      http://localhost:1337/hello?world\n```", "```js\n Status Code: 200 URL: /hello?world\n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const app = express() \n      const router = express.Router() \n```", "```js\n      router.use((request, response, next) => { \n          console.log('URL:', request.originalUrl) \n          next() \n      }) \n```", "```js\n      app.use('/router', router) \n```", "```js\n     app.listen( \n         1337, \n       () => console.log('Web Server running on port 1337'), \n    ) \n```", "```js\n node router-level.js\n```", "```js\n http://localhost:1337/router/example \n```", "```js\n URL: /router/example\n```", "```js\n      http://localhost:1337/example\n```", "```js\nrouter.use((request, response, next) => { \n  next('route') \n}) \n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      const router = express.Router() \n```", "```js\n      router.use((request, response, next) => { \n         if (!request.query.id) { \n             next('router') // Next, out of Router \n          } else { \n            next() // Next, in Router \n          } \n      }) \n```", "```js\n       router.get('/', (request, response, next) => { \n         const id = request.query.id \n         response.send(`You specified a user ID => ${id}`) \n      }) \n```", "```js\n      app.get('/', router, (request, response, next) => { \n          response \n            .status(400) \n            .send('A user ID needs to be specified') \n    }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node router-level-control.js\n```", "```js\n http://localhost:1337/\n      http://localhost:1337/?id=7331\n```", "```js\n A user ID needs to be specified \n```", "```js\nYou specified a user ID => 7331 \n```", "```js\napp.get('/', (request, response, next) => { \n    throw new Error('Oh no!, something went wrong!') \n}) \n```", "```js\napp.get('/', (request, response, next) => { \n    try { \n        throw new Error('Oh no!, something went wrong!') \n    } catch (error) { \n        next(error) \n    } \n}) \n```", "```js\napp.use((error, request, response, next) => { \n    next(error) \n}) \n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install\n```", "```js\n     const express = require('express') \n     const app = express() \n```", "```js\n      app.get('/', (request, response, next) => { \n          try { \n             throw new Error('Oh no!, something went wrong!') \n          } catch (err) { \n             next(err) \n           } \n      }) \n```", "```js\n      app.use((error, request, response, next) => { \n          response.end(error.message) \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node custom-error-handler.js\n```", "```js\n      http://localhost:1337/\n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      <!DOCTYPE html> \n      <html lang=\"en\"> \n      <head> \n          <meta charset=\"utf-8\"> \n          <title>Simple Web Application</title> \n      </head> \n      <body> \n          <section role=\"application\"> \n        <h1>Welcome Home!</h1> \n          </section> \n      </body> \n      </html> \n```", "```js\n      const express = require('express') \n      const path = require('path') \n      const app = express() \n```", "```js\n      const publicDir = path.join(__dirname, './public') \n      app.use('/', express.static(publicDir)) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node serve-static-assets.js\n```", "```js\n      http://localhost:1337/index.html\n```", "```js\n      <!DOCTYPE html> \n      <html lang=\"en\"> \n      <head> \n          <meta charset=\"utf-8\"> \n          <title>Simple Web Application</title> \n      </head> \n      <body> \n           <section role=\"application\"> \n           <h1>Welcome Home!</h1> \n           </section> \n      </body> \n      </html> \n```", "```js\n      <!DOCTYPE html> \n      <html lang=\"en\"> \n      <head> \n          <meta charset=\"utf-8\"> \n          <title>Simple Web Application</title> \n      </head> \n     <body> \n          <section role=\"application\"> \n           Welcome to Second Page! \n          </section> \n     </body> \n      </html> \n```", "```js\n      const express = require('express') \n      const path = require('path') \n      const app = express() \n```", "```js\n      const staticRouter = express.Router() \n```", "```js\n      const assets = { \n           first: path.join(__dirname, './public'), \n          second: path.join(__dirname, './another-public') \n      } \n       staticRouter \n          .use(express.static(assets.first)) \n          .use(express.static(assets.second)) \n```", "```js\n       app.use('/', staticRouter) \n```", "```js\n      app.listen( \n          1337, \n           () => console.log('Web Server running on port 1337'), \n       ) \n```", "```js\n node router-serve-static.js\n```", "```js\n http://localhost:1337/index.html\n      http://localhost:1337/second.html\n```", "```js\n{ \n    \"dependencies\": { \n        \"body-parser\": \"1.18.2\", \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const bodyParser = require('body-parser') \n      const app = express() \n```", "```js\n       app.use(bodyParser.urlencoded({ extended: true })) \n       app.use(bodyParser.text()) \n```", "```js\n      app.get('/', (request, response, next) => { \n            response.send(` \n            <!DOCTYPE html> \n            <html lang=\"en\"> \n            <head> \n              <meta charset=\"utf-8\"> \n              <title>WebApp powered by ExpressJS</title> \n           </head> \n         <body> \n            <div role=\"application\"> \n                <form method=\"post\" action=\"/setdata\"> \n                    <input name=\"urlencoded\" type=\"text\" /> \n                    <button type=\"submit\">Send</button> \n                </form> \n               <form method=\"post\" action=\"/setdata\" \n                 enctype=\"text/plain\"> \n                  <input name=\"txtencoded\" type=\"text\" /> \n                  <button type=\"submit\">Send</button> \n               </form> \n           </div> \n        </body> \n        </html> \n       `) \n     }) \n```", "```js\n      app.post('/setdata', (request, response, next) => { \n          console.log(request.body) \n          response.end() \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node parse-form.js\n```", "```js\n      http://localhost:1337/\n```", "```js\n      http://localhost:1337/\n```", "```js\n{ 'urlencoded': 'Example' } \ntxtencoded=Example \n```", "```js\n{ \n    \"dependencies\": { \n        \"compression\": \"1.7.2\", \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\n    npm install\n```", "```js\n      const express = require('express') \n      const compression = require('compression') \n      const app = express() \n```", "```js\n      app.use(compression({ level: 9, threshold: 0 })) \n```", "```js\n      app.get('/', (request, response, next) => { \n          response.send(` \n          <!DOCTYPE html> \n          <html lang=\"en\"> \n          <head> \n              <meta charset=\"utf-8\"> \n              <title>WebApp powered by ExpressJS</title> \n          </head> \n          <body> \n              <section role=\"application\"> \n                  <h1>Hello! this page is compressed!</h1> \n              </section> \n          </body> \n         </html> \n          `) \n          console.log(request.acceptsEncodings()) \n     }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n node compress-site.js \n```", "```js\n      http://localhost:1337/\n```", "```js\n [ 'gzip', 'deflate', 'sdch', 'br', 'identity' ]\n\n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\", \n        \"morgan\": \"1.9.0\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const morgan = require('morgan') \n      const app = express() \n```", "```js\n      app.use(morgan('dev')) \n```", "```js\n      app.get('*', (request, response, next) => { \n          response.send('Hello Morgan!') \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n     ) \n```", "```js\n node morgan-logger.js\n```", "```js\n        http://localhost:1337/\n        http://localhost:1337/example\n```", "```js\n{ \n    \"dependencies\": { \n        \"express\": \"4.16.3\", \n        \"vhost\": \"3.0.2\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const vhost = require('vhost') \n      const app = express() \n```", "```js\n      const app1 = express.Router() \n      const app2 = express.Router() \n```", "```js\n      app1.get('/', (request, response, next) => { \n        response.send('This is the main application.') \n      }) \n```", "```js\n      app2.get('/', (request, response, next) => { \n         response.send('This is a second application.') \n     }) \n```", "```js\n      app.use(vhost('localhost', app1)) \n      app.use(vhost('second.localhost', app2)) \n```", "```js\n      app.listen( \n         1337, \n         () => console.log('Web Server running on port 1337'), \n     ) \n```", "```js\n      node virtual-domains.js \n```", "```js\n        http://localhost:1337/\n        http://second.localhost:1337/\n```", "```js\n      const express = require('express') \n      const vhost = require('vhost') \n      const app = express() \n```", "```js\n       const users = express.Router() \n       users.get('/', (request, response, next) => { \n        const username = request \n            .vhost[0] \n            .split('-') \n            .map(name => ( \n                name[0].toUpperCase() + \n                name.slice(1) \n             )) \n            .join(' ') \n        response.send(`Hello, ${username}`) \n     }) \n```", "```js\n       app.use(vhost('*.localhost', users)) \n```", "```js\n      app.listen( \n           1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n      node user-subdomains.js \n```", "```js\n        http://john-smith.localhost:1337/\n        http://jx-huang.localhost:1337/\n        http://batman.localhost:1337/\n```", "```js\n{ \n    \"dependencies\": { \n        \"body-parser\": \"1.18.2\", \n        \"express\": \"4.16.3\", \n        \"helmet\": \"3.12.0\", \n        \"uuid\": \"3.2.1\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const helmet = require('helmet') \n      const bodyParser = require('body-parser') \n      const uuid = require('uuid/v1') \n      const app = express() \n```", "```js\n      const suid = uuid() \n```", "```js\n      app.use(bodyParser.json({ \n          type: ['json', 'application/csp-report'], \n      })) \n```", "```js\n      app.use(helmet.contentSecurityPolicy({ \n          directives: { \n              // By default do not allow unless whitelisted \n              defaultSrc: [`'none'`], \n               // Only allow scripts with this nonce \n              scriptSrc: [`'nonce-${suid}'`], \n              reportUri: '/csp-violation', \n          } \n      })) \n```", "```js\n      app.post('/csp-violation', (request, response, next) => { \n          const { body } = request \n          if (body) { \n             console.log('CSP Report Violation:') \n             console.dir(body, { colors: true, depth: 5 }) \n         } \n         response.status(204).send() \n      }) \n```", "```js\n      app.use(helmet.dnsPrefetchControl({ allow: false })) \n```", "```js\n      app.use(helmet.frameguard({ action: 'deny' })) \n```", "```js\n      app.use(helmet.hidePoweredBy({ \n          setTo: 'Django/1.2.1 SVN-13336', \n      })) \n```", "```js\n       app.use(helmet.ieNoOpen()) \n```", "```js\n      app.use(helmet.noSniff()) \n```", "```js\n       app.use(helmet.referrerPolicy({ policy: 'same-origin' })) \n```", "```js\n      app.use(helmet.xssFilter()) \n```", "```js\n      app.get('/', (request, response, next) => { \n         response.send(` \n         <!DOCTYPE html> \n         <html lang=\"en\"> \n         <head> \n             <meta charset=\"utf-8\"> \n             <title>Web App</title> \n         </head> \n          <body> \n             <span id=\"txtlog\"></span> \n              <img alt=\"Evil Picture\" src=\"img/pic.jpg\"> \n             <script> \n                  alert('This does not get executed!') \n              </script> \n              <script src=\"img/evilstuff.js\"></script> \n              <script nonce=\"${suid}\"> \n                  document.getElementById('txtlog') \n                    .innerText = 'Hello World!' \n              </script> \n           </body> \n         </html> \n       `) \n     }) \n```", "```js\n     app.listen( \n          1337, \n         () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n      node secure-helmet.js \n```", "```js\n        http://localhost:1337/\n```", "```js\n      CSP Report Violation: { \n          \"csp-report\": { \n               \"document-uri\": \"http://localhost:1337/\", \n              \"referrer\": \"\", \n              \"violated-directive\": \"img-src\", \n              \"effective-directive\": \"img-src\", \n              \"original-policy\": \"default-src 'none'; script-src              \n         '[nonce]'; report-uri /csp-violation\", \n              \"disposition\": \"enforce\", \n              \"blocked-uri\": \"http://evil.com/pic.jpg\", \n              \"line-number\": 9, \n              \"source-file\": \"http://localhost:1337/\", \n              \"status-code\": 200 \n          } \n      }  \n      CSP Report Violation: { \n          \"csp-report\": { \n              \"document-uri\": \"http://localhost:1337/\", \n              \"referrer\": \"\", \n              \"violated-directive\": \"script-src\", \n              \"effective-directive\": \"script-src\", \n              \"original-policy\": \"default-src 'none'; script-src        \n       '[nonce]'; report-uri /csp-violation\", \n              \"disposition\": \"enforce\", \n              \"blocked-uri\": \"inline\", \n              \"line-number\": 9, \n              \"status-code\": 200 \n          } \n      }  \n      CSP Report Violation: { \n          \"csp-report\": { \n              \"document-uri\": \"http://localhost:1337/\", \n              \"referrer\": \"\", \n              \"violated-directive\": \"script-src\", \n              \"effective-directive\": \"script-src\", \n              \"original-policy\": \"default-src 'none'; script-src \n      '[nonce]'; report-uri /csp-violation\", \n              \"disposition\": \"enforce\", \n              \"blocked-uri\": \"http://evil.com/evilstuff.js\", \n              \"status-code\": 200 \n          } \n      } \n```", "```js\n      app.engine('...', (path, options, callback) => { ... }); \n      app.set('views', './'); \n      app.set('view engine', '...'); \n```", "```js\n      { \n          \"dependencies\": { \n              \"express\": \"4.16.3\" \n          } \n      } \n```", "```js\n       npm install\n```", "```js\n      <!DOCTYPE html> \n       <html lang=\"en\"> \n      <head> \n          <meta charset=\"utf-8\"> \n          <title>Using Template Engines</title> \n      </head> \n      <body> \n          <section role=\"application\"> \n              <h1>%title%</h1> \n              <p>%description%</p> \n          </section> \n      </body> \n      </html> \n```", "```js\n      const express = require('express') \n      const fs = require('fs') \n      const app = express() \n```", "```js\n       app.engine('tpl', (filepath, options, callback) => { \n           fs.readFile(filepath, (err, data) => { \n              if (err) { \n                 return callback(err) \n             } \n             const content = data \n                 .toString() \n                 .replace(/%[a-z]+%/gi, (match) => { \n                     const variable = match.replace(/%/g, '') \n                    if (Reflect.has(options, variable)) { \n                        return options[variable] \n                     } \n                    return match \n                }) \n              return callback(null, content) \n          }) \n     }) \n```", "```js\n       app.set('views', './views') \n```", "```js\n      app.set('view engine', 'tpl') \n```", "```js\n     app.get('/', (request, response, next) => { \n          response.render('home', { \n              title: 'Hello', \n               description: 'World!', \n         }) \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n    node my-template-engine.js\n```", "```js\n      http://localhost:1337/\n```", "```js\n{ \n    \"dependencies\": { \n        \"debug\": \"3.1.0\", \n        \"express\": \"4.16.3\" \n    } \n} \n```", "```js\nnpm install\n```", "```js\n      const express = require('express') \n      const app = express() \n```", "```js\n      app.get('*', (request, response, next) => { \n          response.send('Hello there!') \n      }) \n```", "```js\n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n set DEBUG=express:* node debugging.js\n```", "```js\n DEBUG=express:* node debugging.js \n\n```", "```js\n      http://localhost:1337/\n```", "```js\n      const express = require('express') \n      const app = express() \n      const debug = require('debug')('myapp') \n      app.get('*', (request, response, next) => { \n          debug('Request:', request.originalUrl) \n          response.send('Hello there!') \n      }) \n      app.listen( \n          1337, \n          () => console.log('Web Server running on port 1337'), \n      ) \n```", "```js\n    set DEBUG=myapp node myapp.js\n```", "```js\n DEBUG=myapp node myapp.js\n```", "```js\n      Web Server running on port 1337 \n        myapp Request: / +0ms \n```", "```js\nset DEBUG=myapp,express:* node myapp.js \n```", "```js\nDEBUG=myapp,express:* node myapp.js\n```"]