["```js\n    const Light = Ember.Object.extend({\n      isOn: false\n    });\n    ```", "```js\n    constbulb = Light.create();\n    ```", "```js\n    console.log(bulb.get('isOn'));\n    ```", "```js\n    bulb.set('isOn', true)\n    ```", "```js\n    const Light = Ember.Object.extend({\n      init(){\n        alert('The isON property is defaulted to ' + this.get('isOn'));\n      },\n      isOn: false\n    });\n    ```", "```js\n        Light.reopen({\n          color: 'yellow'\n        });\n    ```", "```js\n    Light.reopenClass({\n      wattage: 80\n    });\n    ```", "```js\n    // app/myObject.js\n    import Ember from 'ember';\n    export default function() {\n        const Light = Ember.Object.extend({\n          init(){\n            alert('The isON property is defaulted to ' +this.get('isOn'));\n          },\n          isOn: false\n        });\n\n        Light.reopen({\n          color: 'yellow'\n        });\n\n        Light.reopenClass({\n          wattage: 80\n        });\n\n        const bulb = Light.create();\n\n        console.log(bulb.get('color'));\n        console.log(Light.wattage);\n    }\n    ```", "```js\n    // app/app.js\n    import myObject from './myObject';\n    ```", "```js\n    myObject();\n    ```", "```js\n    const Light = Ember.Object.extend({\n      isOn: false,\n      color: 'yellow',\n\n      description: Ember.computed('isOn','color',function() {\n        return 'The ' + this.get('color') + ' light is set to ' + this.get('isOn');\n      })\n\n    });\n    ```", "```js\n    const bulb = Light.create();\n    bulb.get('description'); //The yellow light is set to false\n    ```", "```js\n    bulb.set('isOn', true);\n    bulb.get('description') //The yellow light is set to true\n    ```", "```js\n    const Light = Ember.Object.extend({\n      isOn: false,\n      color: 'yellow',\n      age: null,\n\n      description: Ember.computed('isOn','color',function() {\n        return 'The ' + this.get('color') + ' light is set to ' + this.get('isOn');\n      }),\n\n      fullDescription: Ember.computed('description','age',function() {\n        return this.get('description') + ' and the age is ' + this.get('age')\n      }),\n\n    });\n    ```", "```js\n    const bulb = Light.create({age:22});\n    bulb.get('fullDescription'); //The yellow light is set to false and the age is 22\n    ```", "```js\n    const Light = Ember.Object.extend({\n      isOn: false,\n      color: 'yellow',\n      age: null,\n      description: Ember.computed('isOn','color',function() {\n        return 'The ' + this.get('color') + ' light is set to ' + this.get('isOn');\n      }),\n      fullDescription: Ember.computed('description','age',function() {\n        return this.get('description') + ' and the age is ' + this.get('age')\n      }),\n     aliasDescription: Ember.computed.alias('fullDescription')\n    });\n\n    const bulb = Light.create({age: 22});\n    bulb.get('aliasDescription');//The yellow light is set to false and the age is 22.\n    ```", "```js\n    const Light = Ember.Object.extend({\n      isOn: false,\n      color: 'yellow',\n      age: null,\n      description: Ember.computed('isOn','color',function() {\n        return 'The ' + this.get('color') + 'light is set to ' + this.get('isOn')\n      }),\n      fullDescription: Ember.computed ('description','age',function() {\n        return this.get('description') + ' and the age is ' + this.get('age')\n      }),\n      desc: Ember.computed.alias('description'),\n     isOnChanged: Ember.observer('isOn',function() {\n     console.log('isOn value changed')\n     })\n    });\n\n    const bulb = Light.create({age: 22});\n\n    bulb.set('isOn',true); //console logs isOn value changed\n    ```", "```js\n    Light.reopen({  \n    isAnythingChanged: Ember.observer('isOn','color',function() {\n        console.log('isOn or color value changed')\n      })\n    });\n\n    const bulb = Light.create({age: 22});\n    bulb.set('isOn',true); // console logs isOn or color value changed\n    bulb.set('color','blue'); // console logs isOn or color value changed\n    ```", "```js\n      Light.reopen({\n        checkIsOn: Ember.observer('isOn', function() {\n          console.log(this.get('fullDescription'));\n        })\n      });\n\n    const bulb = Light.create({age: 22});\n    bulb.set('isOn', true);\n    ```", "```js\n    Light.reopen({\n        checkIsOn: Ember.observer('isOn','color', function() {\n          Ember.run.once(this,'checkChanged');\n        }),\n        checkChanged: Ember.observer('description',function() {\n          console.log(this.get('description'));\n        })\n    });\n    const bulb = Light.create({age: 22});\n    bulb.set('isOn', true);\n    bulb.set('color', 'blue'); \n    ```", "```js\n    const Teacher = Ember.Object.extend({\n      homeroom: '',\n      age: '',\n      gradeTeaching: ''\n    });\n\n    const Student = Ember.Object.extend({\n      homeroom: Ember.computed.alias('teacher.homeroom'),\n      age: '',\n      grade: '',\n      teacher: null\n    });\n    ```", "```js\n    const avery = Teacher.create({\n      age: '27',\n      homeroom: '1075',\n      gradeTeaching: 'sophmore'\n    });\n\n    const joey = student.create({\n      age: '16',\n      grade: 'sophmore',\n      teacher: avery\n    });\n    ```", "```js\n    console.log(joey.get('age')); //16\n    console.log(avery.get('homeroom')); //1075\n    avery.set('homeroom','2423');\n    console.log(joey.get('homeroom')); //2423\n    ```", "```js\n    const myName = Ember.Object.extend({\n      name: 'Erik Hanchett',\n      otherName: Ember.computed.alias('name')\n    });\n\n    const erik = myName.create();\n\n    console.log(erik.get('name')); //Erik Hanchett\n    console.log(erik.get('otherName')); //Erik Hanchett\n    ```", "```js\nconst User = Ember.Object.extend({\n  firstName: null,\n  lastName: null,\n  nickName: Ember.computed.oneWay('firstName')\n});\n\nconst user = User.create({\n  firstName: 'Erik',\n  lastName:  'Hanchett'\n});\n\nconsole.log(user.get('nickName'));              // 'Erik'\nuser.set('nickName', 'Bravo'); // 'Bravo'\nconsole.log(user.get('firstName'));             // 'Erik'\n```", "```js\n    const common = Ember.Mixin.create({\n        property1: 'This is a mixin property',\n        edit: function() {\n          console.log('Starting to edit');\n          this.set('isEditing', true);\n        },\n        isEditing: false\n    });\n    ```", "```js\n    const obj = Ember.Object.extend(common,{\n      objprop: 'This is an Ember object property'\n    });\n\n    const object = obj.create();\n    ```", "```js\n    console.log(object.get('objprop'));  //This is an Ember object property\n    console.log(object.get('property1'));  //This is a mixin property\n    console.log(object.get('isEditing'));  //false\n    object.edit();  //Starting to edit\n    console.log(object.get('isEditing')); //true\n    ```", "```js\n    const secondMixin = Ember.Mixin.create({\n      secondProperty: 'This is the second mixin property'\n    });\n    ```", "```js\n    const obj = Ember.Object.extend(common,secondMixin,{\n      objprop: 'This is an Ember object Property'\n    });\n    ```", "```js\n    console.log(object.get('secondProperty'));//This is the   second mixin propety\n    ```", "```js\n    $ ember generate mixin common\n    installing mixin\n     create app/mixins/common.js\n    installing mixin-test\n     create tests/unit/mixins/common-test.js\n\n    ```", "```js\n    // app/mixins/common.js\n    import Ember from 'ember';\n\n    export default Ember.Mixin.create({\n        property1: 'This is a mixin property',\n        edit: function() {\n          console.log('Starting to edit');\n          this.set('isEditing', true);\n        },\n        isEditing: false\n    });\n    ```", "```js\n    import common from './mixins/common';\n    ```", "```js\n    // app/app.js\n\n    const obj = Ember.Object.extend(common,{\n      objprop: 'This is an Ember object property'\n    });\n\n    const object = obj.create();\n\n    console.log(object.get('objprop'));//This is an Ember object property\n    console.log(object.get('property1'));//This is a mixin property\n    console.log(object.get('isEditing'));//false\n    object.edit();  //Starting to edit\n    console.log(object.get('isEditing'));  //true\n    ```", "```js\n    // app/components/common-example.js\n    import Ember from 'ember';\n    import common from '../mixins/common';\n\n    export default Ember.Component.extend(common,{\n        compprop: 'This is a component property',\n        actions: {\n          pressed: function(){\n            this.edit();\n          }\n        }\n    });\n    ```", "```js\n    const students = ['Erik', 'Jim', 'Shelly', 'Kate'];\n    ```", "```js\n    students.forEach(function(item, index) {\n      console.log(`Student #${index+1}: ${item}`);\n    });\n    ```", "```js\n    Student #1: Erik\n    Student #2: Jim\n    Student #3: Shelly\n    Student #4: Kate\n\n    ```", "```js\n    const students = ['Erik', 'Jim', 'Shelly', 'Kate'];\n    ```", "```js\n    const upperCaseStudent= students.map(function(item) {\n      return item.toUpperCase();\n    });\n    ```", "```js\n    upperCaseStudent.forEach(function(item, index) {\n      console.log(`student #${index+1}: ${item}`);\n    });\n    ```", "```js\n    student #1: ERIK\n    student #2: JIM\n    student #3: SHELLY\n    student #4: KATE\n\n    ```", "```js\n    const student = Ember.Object.extend({\n      name: 'Erik Hanchett'\n    });\n\n    const teacher = Ember.Object.extend({\n      name: 'John P. Smith'\n\n    });\n    ```", "```js\n    const t= teacher.create();\n    const s = student.create();\n    const people = [s, t];\n    ```", "```js\n    console.log(people.mapBy('name'));//['Erik Hanchett', 'John P.   Smith']\n    ```", "```js\n    const students = ['Erik', 'Jim', 'Shelly', 'Kate', 'Jenny', 'Susan'];\n    ```", "```js\n    console.log(students.get('lastObject')); //Susan\n    ```", "```js\n    console.log(students.get('firstObject')); //Erik\n    ```", "```js\n    students.pushObject('Jeff');\n    ```", "```js\n    console.log(students.get('lastObject')); //Jeff\n    ```", "```js\n    const array = [1,2,5,10,25,23];\n    ```", "```js\n    const newArray =array.filter(function(item, index, self) {\n      return item > 10;\n    })\n    ```", "```js\n    console.log(newArray); //[25,23]\n    ```", "```js\n    const student = Ember.Object.extend({\n      grade: null,\n      name: null\n    });\n    ```", "```js\n    const listOfStudents = [\n      student.create({grade: 'senior', name: 'Jen Smith'}),\n      student.create({grade: 'sophmore', name: 'Ben Shine'}),\n      student.create({grade: 'senior', name: 'Ann Cyrus'})\n    ];\n    ```", "```js\n    const newStudent = listOfStudents.filterBy('grade','senior');\n    ```", "```js\n    newStudent.forEach(function(item,index){\n      console.log(item.get('name'));\n    });\n    Jen Smith\n    Ann Cyrus\n    ```", "```js\n    const array = [1,2,5,10,25,23];\n    ```", "```js\n    const newArray =array.find(function(item, index){\n      return item > 10;\n    }); \n    ```", "```js\n    console.log(newArray); //25\n    ```", "```js\n    const student = Ember.Object.extend({\n      grade: null,\n      name: null\n    });\n    ```", "```js\n    const listOfStudents = [\n      student.create({grade: 'senior', name: 'Jen Smith'}),\n      student.create({grade: 'sophmore', name: 'Ben Shine'}),\n      student.create({grade: 'senior', name: 'Ann Cyrus'})\n    ];\n    ```", "```js\n    const newStudent = listOfStudents.findBy('grade','senior');\n    ```", "```js\n    console.log(newStudent.get('name')); //Jen Smith\n    ```", "```js\n    const array = [11,25,23,30];\n    ```", "```js\n    console.log(array.every(function(item, index, self) {\n      return item > 10;\n    })); //returns true\n    ```", "```js\n    const array = [1,2,5,10,25,23];\n    ```", "```js\n    console.log(array.any(function(item, index, self) {\n      return item > 10;\n    })); //returns true\n    ```"]