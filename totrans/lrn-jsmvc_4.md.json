["```js\n<!doctype html>\n\n<html>\n<head>\n    <title>jQueryMX playground</title>\n    <meta charset=\"UTF-8\"/>\n</head>\n<body>\n\n<script src=\"img/jquerymx_playground_0.js\"></script>\n</body>\n</html>\n```", "```js\nsteal(\n    'jquery/class',\n    function ($) {\n        $.Class('Bank.Account', {\n                setup: function () {\n                    console.log('Bank.Account class: setup');\n                },\n\n                init: function () {\n                    console.log('Bank.Account class: init');\n                },\n\n                getType: function () {\n                    return 'Bank.Account class method';\n                }\n            },\n            {\n                setup: function () {\n                    console.log('Bank.Account instance: setup');\n                },\n\n                init:  function () {\n                    console.log('Bank.Account instance: init');\n                },\n\n                getType: function () {\n                    return 'Bank.Account instance method';\n                }\n            }\n        );\n\n        Bank.Account('Bank.Account.SavingsAccount', {\n                setup: function () {\n                    console.log('Bank.Account.SavingsAccountclass: setup');\n                },\n\n                init: function () {\n                    console.log('Bank.Account.SavingsAccountclass: init');\n                }\n            },\n            {\n                setup: function () {\n                    console.log('Bank.Account.SavingsAccountinstance: setup');\n                },\n\n                init: function () {\n                    console.log('Bank.Account.SavingsAccountinstance: init');\n                },\n\n//                getExtendedType: function () {\n//                    return 'Hello ' + this.getType();\n//                },\n\n                getType: function () {\n                    return 'Hello ' + this._super();\n                }\n            }\n        );\n\n//        console.log('instantiate: acc, savingAcc');\n//        window.acc = new Bank.Account();\n//        window.savingAcc = new Bank.Account.SavingsAccount();\n    }\n);\n```", "```js\nvar acc = new Bank.Account();\nvar savingAcc = new Bank.Account.SavingAccount();\n```", "```js\nacc.getType();\nsavingAcc.getType();\n```", "```js\nBank.Account.SavingsAccount.getType();\n```", "```js\nsavingAcc.getType();\n```", "```js\nthis._super();\n```", "```js\ngetExtendedType: function () {\n    return 'Hello ' + this.getType();\n}\n```", "```js\nsteal(\n    'jquery/model',\n    'jquery/dom/fixture',\n    function ($) {\n        $.Model('AccountModel', {\n                findAll: 'GET /accounts',\n                findOne: 'GET /accounts/{id}',\n                create:  'POST /accounts',\n                update:  'PUT /accounts/{id}',\n                destroy: 'DELETE /accounts/{id}'\n            },\n            {\n\n            }\n        );\n\n        // Fixtures\n        (function () {\n            var accounts = [\n                {\n                    id: 1,\n                    type: 'USD'\n                },\n                {\n                    id: 2,\n                    type: 'EUR'\n                }\n                ];\n\n            // findAll\n            $.fixture('GET /accounts', function () {\n                return [accounts];\n            });\n\n            // findOne\n            $.fixture('GET /accounts/{id}', function () {\n                return accounts;\n            });\n\n            // create\n            $.fixture('POST /accounts', function () {\n                return {};\n            });\n\n            // update\n            $.fixture('PUT /accounts/{id}', function (id, acc) {\n                return acc;\n            });\n\n            // destroy\n            $.fixture('DELETE /accounts/{id}', function () {\n                return {};\n            });\n        }());\n\n        AccountModel.findAll({}, function (accounts) {\n            $.each(accounts, function (i, acc) {\n                $('<p>').model(acc).text(acc.type).appendTo('body');\n            });\n        });\n\n        AccountModel.bind('updated', function (e, acc) {\nacc.elements($('body')).remove();\n        });\n\n        AccountModel.bind('created', function (e, acc) {\n            console.log('AccountModel.bind: event: ', e,'Account: ', acc);\n        });\n    }\n);\n```", "```js\n<script type='text/ejs' id=\"accounts\">\n    <p>JavaScriptMVC is <%= message %></p>\n</script>\n```", "```js\nsteal(\n    'jquery/view',\n    'jquery/view/ejs',\n    function ($) {\n\n    }\n);\n```", "```js\n$('body').html('accounts', {message: 'Awesome'});\n```", "```js\n<p>JavaScriptMVC is Awesome</p>\n```", "```js\n<p>JavaScriptMVC is <%= message %></p>\n```", "```js\n$('body').html('message.ejs', {message: 'Awesome'});\n```", "```js\n<%= $.View('sub-message.ejs', message); %>\n```", "```js\n$.Controller('Todos', {\n            // init method is called when new instance is created\n            'init': function (element, options) {\n                this.element.html('todos.ejs', Todo.findAll());\n            },\n\n            // add event listener to strong element on click\n            'li strong click': function (el, e) {\n                // trigger custom event\n                el.trigger('selected', el.closest('li').model());\n\n                // log current model to the console\n                console.log('li strong click', el.closest('.todo').model());\n            },\n\n            // add event listener to em element on click\n            'li .destroy click': function (el, e) {\n                // call destroy on the model to prevent memoryleaking\n                el.closest('.todo').model().destroy();\n            },\n\n            // add event listener to Todo model on destroyed\n            '{Todo} destroyed': function (Todo, e, destroyedTodo) {\n                // remove element from the DOM tree\n                destroyedTodo.elements(this.element).remove();\n\n                console.log('destroyed: ', destroyedTodo);\n            }\n        });\n```", "```js\nsteal(\n    'jquery/dom/cookie',\n    function ($) {\n\n    }\n);\n```", "```js\n$.cookie('CookieName', 'CookieValue');\n\n```", "```js\n$.cookie('CookieName');\n\n```", "```js\n$.cookie('CookieName', null);\n\n```", "```js\nsteal(\n    'jquery/dom/compare',\n    function ($) {\n        $('body').append('<p>paragraph</p><strong>strong</strong>');\n    }\n);\n```", "```js\n$('p').compare($('strong'));\n\n```", "```js\n$('strong').compare($('p'));\n\n```", "```js\nsteal(\n    'jquery/dom/selection',\n    function ($) {\n        $('body').append('<p>Hello from paragraph!</p>');\n    }\n);\n```", "```js\n$('p').selection();\n\n```", "```js\n{\n end: 15,\n start: 4\n}\n\n```", "```js\n$('p').selection(6, 10);\n\n```", "```js\nsteal(\n    'jquery/dom/within',\n    function ($) {\n        $('body').append('<p>Hello from paragraph!</p>');\n    }\n);\n```", "```js\n$('p').within(30, 20);\n\n```", "```js\nsteal(\n    'jquery/dom/range',\n    function ($) {\n        $('body').append('<p>Hello from paragraph!</p>');\n    }\n);\n```", "```js\n$.Range.current();\n\n```", "```js\n$.Range.current().toString();\n\n```", "```js\nsteal(\n    'jquery/dom/route',\n    function ($) {\n        $.route.bind('change', function (e, attr, how, newVal, oldVal) {\n            console.log('event: ', e, '| attribute changes: ',attr, '| how changes: ', how, '| new value: ',newVal, '| old value: ', oldVal);\n        });\n    }\n);\n```", "```js\n#!&type=UTC\n```", "```js\n#!&type=GTM\n```", "```js\nsteal(\n    'jquery/event/drag',\n    'jquery/event/drag/limit',\n    'jquery/event/drag/scroll',\n    'jquery/event/drag/step',\n    'jquery/event/drop',\n    function ($) {\n\n        $('body').append('<p>Drag me, but not too far...</p>');\n\n        $('p').bind('dragmove', function (e, drag) {\n            if (drag.location.top() > 150 || drag.location.left() > 450) {\n                console.log('limiter');\n                e.preventDefault();\n            }\n        });\n    }\n);\n```", "```js\nsteal(\n    'jquery/lang/object',\n    function ($) {\n        window.object_1 = {\n            property_1: 'foo',\n            property_2: {\n                property_1: 'bar',\n                property_2: {\n                    property_1: 'Hello JMVC!'\n                }\n            }\n        };\n\n        window.object_2 = {\n            property_1: 'foo',\n            property_2: {\n                property_1: 'bar',\n                property_2: {\n                    property_1: 'HELLO JMVC!'\n                }\n            }\n        };\n    }\n);\n```", "```js\n$.Object.same(object_1, object_2);\n\n```", "```js\n$.Object.same(object_1, object_2, {property_2: 'i'});\n\n```", "```js\n$.Object.same(object_1, object_2, {property_2: {property_2: { property_1: 'i'}}});\n\n```", "```js\nsteal(\n    'jquery/lang/observe',\n    'jquery/lang/observe/delegate',\n    function ($) {\n        window.data = {\n            accNumber: {\n                iban: 'SWISSQX',\n                number: 6987687\n            },\n            owner: {\n                fName: 'Nicolaus',\n                lName: 'Copernicus'\n            }\n        };\n\n        window.oData = new $.Observe(data);\n\n        oData.bind('change', function (e, attr, how, newVal, oldVal) {\n            console.log('event: ', e, '| attribute changes: ', attr, '| how changes: ', how, '| new value: ', newVal, '| old value: ', oldVal);\n        });\n    }\n);\n```", "```js\noData.attr('accNumber.number');\n\n```", "```js\ndata.accNumber.number;\n\n```", "```js\noData.attr('accNumber.number', 123456);\n\n```", "```js\noData.attr('accNumber.number');\n\n```", "```js\ndata.accNumber.number;\n\n```", "```js\nsteal(\n    'jquery/lang/string',\n    'jquery/lang/string/deparam',\n    'jquery/lang/string/rsplit',\n    function ($) {\n\n    }\n);\n```", "```js\n$.String.deparam('en=1&home=a3373dsf6wfd&page[main]=uy7887d');\n```", "```js\n{\n    en: '1',\n    home: 'a3373dsf6wfd',\n    page: {\n        main: 'uy7887d'\n    }\n}\n```", "```js\nsteal(\n    'jquery/lang/json',\n    function ($) {\n        window.object_1 = {\n            property_1: 'foo',\n            property_2: {\n                property_1: 'bar',\n                property_2: {\n                    property_1: 'Hello JMVC!'\n                }\n            }\n        };\n    }\n);\n```", "```js\n$.toJSON(object_1);\n\n```", "```js\nsteal(\n    'jquery/lang/vector',\n    function ($) {\n\n    }\n);\n```", "```js\nnew jQuery.Vector(1,2);\n\n```"]