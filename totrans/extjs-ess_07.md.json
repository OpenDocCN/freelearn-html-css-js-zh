["```js\nvar simpleComponent = Ext.create('Ext.Component', {\n  html    : 'Ext JS Essentials!',\n  renderTo: Ext.getBody()\n});\n```", "```js\nExt.create('Ext.Component', {\n  html     : 'Ext JS Essentials!',\n  renderTo : Ext.getBody(),\n  listeners: {\n    afterrender: function(comp) {\n      comp.el.setStyle('background-color', 'red');\n    }\n  }\n});\n```", "```js\nExt.create('Ext.Container', {\n  items: [\n    {\n      xtype: 'component',\n      html : 'My Component!'\n    }\n  ]\n});\n```", "```js\nvar panel = Ext.create('Ext.panel.Panel', {\n  height : 500,\n  width : 500,\n  renderTo: Ext.getBody(),\n  layout: {\n    type : 'vbox',\n    align: 'stretch'\n  },\n  items : [\n    {\n      xtype : 'tabpanel',\n      itemId: 'mainTabPanel',\n      flex : 1,\n      items : [\n        {\n          xtype : 'panel',\n          title : 'Users',\n          itemId: 'usersPanel',\n          layout: {\n            type : 'vbox',\n            align: 'stretch'\n            },\n            tbar : [\n              {\n                xtype : 'button',\n                text : 'Edit',\n                itemId: 'editButton'\n                }\n              ],\n              items : [\n                {\n                  xtype : 'form',\n                  border : 0,\n                  items : [\n                    {\n                      xtype : 'textfield',\n                      fieldLabel: 'Name',\n                      allowBlank: false\n                    },\n                    {\n                      xtype : 'textfield',\n                      fieldLabel: 'Email',\n                      allowBlank: false\n                    }\n                  ],\n                  buttons: [\n                    {\n                      xtype : 'button',\n                      text : 'Save',\n                      action: 'saveUser'\n                    }\n                  ]\n                },\n                {\n                  xtype : 'grid',\n                  flex : 1,\n                  border : 0,\n                  columns: [\n                    {\n                      header : 'Name',\n                      dataIndex: 'Name',\n                      flex : 1\n                    },\n                    {\n                      header : 'Email',\n                      dataIndex: 'Email'\n                    }\n                  ],\n                  store : Ext.create('Ext.data.Store', {\n                    fields: [\n                      'Name',\n                      'Email'\n                    ],\n                    data : [\n                      {\n                        Name : 'Joe Bloggs',\n                        Email: 'joe@example.com'\n                      },\n                      {\n                        Name : 'Jane Doe',\n                        Email: 'jane@example.com'\n                      }\n                    ]\n                  })\n                }\n              ]\n            }\n          ]\n        },\n        {\n          xtype : 'component',\n          itemId : 'footerComponent',\n          html : 'Footer Information',\n          extraOptions: {\n            option1: 'test',\n            option2: 'test'\n          }, \n          height : 40\n        }\n      ]\n    });\n```", "```js\nvar panels = Ext.ComponentQuery.query('panel');\n```", "```js\nvar buttons = Ext.ComponentQuery.query('panel buttons');\n```", "```js\nvar directDescendantButtons = Ext.ComponentQuery.query('panel > button');\n```", "```js\nvar saveButtons = Ext.ComponentQuery.query('button[action=\"saveUser\"]);\n```", "```js\nvar usersPanel = Ext.ComponentQuery.query('#usersPanel');\n```", "```js\nvar validFields = Ext.ComponentQuery.query('form > textfield{isValid()}');\n```", "```js\nvar grid = button.up('gridpanel');\n```", "```js\nvar firstButton = grid.down('button');\n```", "```js\nvar allButtons = grid.query('button');\n```", "```js\nExt.define('BizDash.view.navigation.NavigationTree', {\n  extend: 'Ext.tree.Panel',\n  alias: 'widget.navigation-NavigationTree',\n  store : 'Navigation',\n  columns: [\n    {\n      xtype : 'treecolumn',\n      text : 'Navigation',\n      dataIndex: 'Label',\n      flex : 1\n    }\n  ],\n  rootVisible: false,\n  useArrows : true\n});\n```", "```js\nExt.define('BizDash.store.Products', {\n  extend: 'Ext.data.Store',\n  model: 'BizDash.model.Product',\n  autoLoad: true,\n  proxy: {\n    type : 'ajax',\n    url : 'products.json',\n    reader: {\n      type : 'json',\n      rootProperty: 'rows'\n    }\n  }\n});\n```", "```js\n{\n  \"success\": true,\n  \"rows\": [\n    {\n      \"id\"         : 1,\n      \"Name\"       : \"Product 1\",\n      \"Description\": \"Product 1 Description\",\n      \"Quantity\"   : 1,\n      \"Price\"      : 9.99\n    },\n    {\n      \"id\"         : 2,\n      \"Name\"       : \"Product 2\",\n      \"Description\": \"Product 2 Description\",\n      \"Quantity\"   : 5,\n      \"Price\"      : 2.99\n    },\n    {\n      \"id\"         : 3,\n      \"Name\"       : \"Product 3\",\n      \"Description\": \"Product 3 Description\",\n      \"Quantity\"   : 1000,\n      \"Price\"      : 5.49\n    }\n  ]\n}\n```", "```js\nExt.define('BizDash.view.product.ProductGrid', {\n  extend: 'Ext.grid.Panel',\n  xtype: 'product-ProductGrid',\n  store: 'Products',\n  columns: [\n    {\n      text: 'Name',\n      dataIndex: 'Name'\n    },\n    {\n      text: 'Description',\n      dataIndex: 'Description',\n      flex: 1\n    },\n    {\n      text: 'Quantity',\n      dataIndex: 'Quantity'\n    },\n    {\n      text: 'Price ',\n      dataIndex: 'Price'\n    }\n  ]\n});\n```", "```js\n...\n  views: [\n    'product.ProductGrid'\n  ]\n...\n```", "```js\n...\n{\n  region: 'center',\n  xtype : 'product-ProductGrid'\n}\n...\n```", "```js\n{\n  text : 'Quantity',\n  dataIndex: 'Quantity',\n  renderer : function(value, metaData, record, rowIndex, colIndex, store, view) {\n    var colour = 'black';\n    if(value <= 3){\n      colour = 'red';\n    } else if(value > 3 && value <= 7){\n    colour = 'orange';\n    }\n    return '' + value + '';\n  }\n}\n```", "```js\n{\n  xtype: 'templatecolumn',\n  width: 200,\n  text: 'Price ',\n  dataIndex: 'Price',\n  tpl: '£{Price} (£{StockValue})'\n}\n```", "```js\n{\n  xtype : 'widgetcolumn',\n  width : 100,\n  text  : 'Action',\n  widget: {\n    xtype    : 'button',\n    text     : 'Details'\n  }\n}\n```", "```js\n{\n  xtype : 'widgetcolumn',\n  width : 100,\n  text : 'Action',\n  widget: {\n    xtype : 'button',\n    text : 'Details',\n    listeners: {\n      click: function(btn){\n        var rec = btn.getWidgetRecord();\n        console.log('Widget Button clicked! - ', rec.get('Name'));\n      }\n    }\n  }\n}\n```", "```js\nExt.define('BizDash.view.product.ProductForm', {\n  extend: 'Ext.form.Panel',\n  xtype: 'product-ProductForm'\n});\n```", "```js\nExt.define('BizDash.view.product.ProductForm', {\n  extend: 'Ext.form.Panel',\n  xtype: 'product-ProductForm',\n  items: [\n    {\n      xtype: 'textfield',\n      fieldLabel: 'Name'\n    },\n    {\n      xtype: 'textarea',\n      fieldLabel: 'Description',\n      height: 100\n    },\n    {\n      xtype: 'numberfield',\n      fieldLabel: 'Quantity'\n    },\n    {\n      xtype: 'numberfield',\n      fieldLabel: 'Price',\n      decimalPrecision: 2\n    }\n  ]\n});\n```", "```js\n...\n  items: [ ... ],\n  bbar : [\n    {\n      xtype: 'button',\n      text: 'Save'\n    },\n    {\n      xtype: 'button',\n      text: 'Cancel'\n    }\n  ]\n...\n```", "```js\nExt.define('BizDash.view.product.ProductGridController', {\n  extend: 'Ext.app.ViewController',\n  alias: 'controller.ProductGrid'\n});\n```", "```js\n// ProductGrid.js\n{\n  xtype : 'widgetcolumn',\n  width : 100,\n  text  : 'Action',\n  widget: {\n    xtype    : 'button',\n    text     : 'Details',\n    listeners: {\n      click: 'onDetailsClick'\n    }\n  }\n}\n```", "```js\nonDetailsClick: function(btn) {\n  var rec = btn.getWidgetRecord(),\n  productForm = Ext.create('BizDash.view.product.ProductForm', {\n    floating: true,\n    modal : true,\n    closable: true,\n    center : true,\n    width : 500,\n    height : 300\n  });\n  productForm.show();\n}\n```", "```js\nExt.define('BizDash.view.product.ProductFormModel', {\n  extend: 'Ext.app.ViewModel',\n  alias: 'viewmodel.ProductForm',\n  data: {\n    rec: null\n  }\n});\n```", "```js\n// ProductForm.js\nviewModel: {\n  type: 'ProductForm'\n}\n```", "```js\n...\n  bind: {\n    title: '{rec.Name}'\n  },\n  items: [\n    {\n      xtype     : 'textfield',\n      fieldLabel: 'Name',\n      bind      : '{rec.Name}'\n    },\n    {\n      xtype     : 'textarea',\n      fieldLabel: 'Description',\n      height    : 100,\n      bind      : '{rec.Description}'\n    },\n    {\n      xtype     : 'numberfield',\n      fieldLabel: 'Quantity',\n      bind      : '{rec.Quantity}'\n    },\n    {\n      xtype           : 'numberfield',\n      fieldLabel      : 'Price',\n      decimalPrecision: 2,\n      bind            : '{rec.Price}'\n    }\n  ]\n...\n```", "```js\n// ProductGridController.js\n...\nproductForm.getViewModel().setData({\n  rec: rec\n});\n...\n```", "```js\n// ProductForm.js\nbbar: [\n  {\n    xtype: 'button',\n    text: 'Save',\n    listeners: {\n      click: 'onSave'\n    }\n  },\n  {\n    xtype: 'button',\n    text: 'Cancel',\n    listeners: {\n      click: 'onCancel'\n    }\n  }\n]\n```", "```js\nrequires: [\n  'BizDash.view.product.ProductFormController',\n  'BizDash.view.product.ProductFormModel'\n],\n```", "```js\n//ProductFormController.js\nonSave: function(btn){\n  var productModel = this.getView().getViewModel().getData().rec;\n  productModel.commit();\n  this.closeForm();\n},\nonCancel: function(btn){\n  var productModel = this.getView().getViewModel().getData().rec;\n  productModel.reject();\n  this.closeForm();\n},\ncloseForm: function(){\n  var productForm = this.getView();\n  productForm.close();\n  productForm.destroy();\n}\n```", "```js\nExt.define('BizDash.view.user.UsersView', {\n  extend: 'Ext.view.View',\n  alias: 'widget.user-UsersView'\n});\n```", "```js\nExt.define('BizDash.view.user.UsersView', {\n  extend: 'Ext.view.View',\n  alias: 'widget.user-UsersView',\n  store: 'Users'\n});\n```", "```js\n    tpl: [\n        '<tpl for=\".\">',\n        '   <div class=\"user-item\">',\n        '       <img src=\"img/{Photo}\" />',\n        '       <div class=\"name\">{Name}</div>',\n        '       <div class=\"role\">{Role}</div>',\n        '   </div>',\n        '</tpl>'\n    ].join('')\n```", "```js\n...\n  itemSelector: 'user-item'\n...\n```", "```js\n.user-item\n{\n  float: left;\n  width: 120px;\n  text-align: center;\n  margin: 20px;\n  img {\n    width: 100%;\n  }\n  .name\n  {\n    font-size: 1.2em;\n    font-weight: bold;\n  }\n  .role\n  {\n    font-size: 0.8em;\n    color: #CCC;\n  }\n}\n```"]