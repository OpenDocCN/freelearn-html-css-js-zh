["```js\n[\n{\n  \"Season\": 5,\n  \"Episode\":  1,\n  \"SeriesNumber\": 52,\n  \"Title\": \"No Sanctuary\",\n  \"FirstAirDate\": \"10-12-2014\",\n  \"USViewers\": 17290000\n},\n{\n  \"Season\": 5,\n  \"Episode\":  2,\n  \"SeriesNumber\": 53,\n  \"Title\": \"Strangers\",\n  \"FirstAirDate\": \"10-19-2014\",\n  \"USViewers\": 15140000\n},\nâ€¦\n]\n```", "```js\nvar url = \"https://gist.githubusercontent.com/d3byex/e5ce6526ba2208014379/raw/8fefb14cc18f0440dc00248f23cbf6aec80dcc13/walking_dead_s5.json\";\nd3.json(url, function (error, data) {\n    console.log(data[0]);\n});\nconsole.log(\"Data in D3.js is loaded asynchronously\");\n```", "```js\n\"Data in D3.js is loaded asynchronously\"\n[object Object] {\n  Episode: 1,\n  FirstAirDate: \"10-12-2014\",\n  Season: 5,\n  SeriesNumber: 52,\n  Title: \"No Sanctuary\",\n  USViewers: 17290000\n}\n```", "```js\nSeason Episode SeriesNumber Title FirstAirDate USViewers\n5 1 52 No Sanctuary 10-12-2014 17290000\n5 2 53 Strangers 10-19-2014 15140000 \n5 3 54 Four Walls and a Roof 10-26-2014 13800000\n5 4 55 Slabtown 11-02-2014 14520000\n5 5 56 Self Help 11-09-2014 13530000\n5 6 57 Consumed 11-16-2014 14070000\n5 7 58 Crossed 11-23-2014 13330000\n5 8 59 Coda 11-30-2014 14810000\n5 9 60 What Happened and What's Going On 02-08-2015 15640000\n5 10 61 Them 02-15-2015 12270000\n5 11 62 The Distance 02-22-2015 13440000\n5 12 63 Remember 03-01-2015 14430000\n5 13 64 Forget 03-08-2015 14530000\n5 14 65 Spend 03-15-2015 13780000\n5 15 66 Try 03-22-2015 13760000\n5 16 67 Conquer 03-29-2015 15780000\n```", "```js\n[object Object] {\n  Episode: \"1\",\n  FirstAirDate: \"10-12-2014\",\n  Season: \"5\",\n  SeriesNumber: \"52\",\n  Title: \"No Sanctuary\",\n  USViewers: \"17290000\"\n}\n```", "```js\nSeason,Episode,SeriesNumber,Title,FirstAirDate,USViewers\n5,1,52,No Sanctuary,10-12-2014,17290000\n5,2,53,Strangers,10-19-2014,15140000 \n5,3,54,Four Walls and a Roof,10-26-2014,13800000\n5,4,55,Slabtown,11-02-2014,14520000\n5,5,56,Self Help,11-09-2014,13530000\n5,6,57,Consumed,11-16-2014,14070000\n5,7,58,Crossed,11-23-2014,13330000\n5,8,59,Coda,11-30-2014,14810000\n5,9,60,What Happened and What's Going On,02-08-2015,15640000\n5,10,61,Them,02-15-2015,12270000\n5,11,62,The Distance,02-22-2015,13440000\n5,12,63,Remember,03-01-2015,14430000\n5,13,64,Forget,03-08-2015,14530000\n5,14,65,Spend,03-15-2015,13780000\n5,15,66,Try,03-22-2015,13760000\n5,16,67,Conquer,03-29-2015,15780000\n```", "```js\nvar mappedAndConverted = data.map(function(d) {\n    return {\n        Episode: +d.Episode,\n        USViewers: +d.USViewers,\n        Title: d.Title\n    };\n});\nconsole.log(mappedAndConverted);\n```", "```js\n[[object Object] {\n  Episode: 1,\n  Title: \"No Sanctuary\",\n  USViewers: 17290000\n}, [object Object] {\n  Episode: 2,\n  Title: \"Strangers\",\n  USViewers: 15140000\n},\n```", "```js\nvar viewership = mappedAndConverted.map(function (d) { \n     return d.USViewers; \n});\nvar minViewership = d3.min(viewership);\nvar maxViewership = d3.max(viewership);\n```", "```js\nvar minBarHeight = 100, maxBarHeight = 400;\n```", "```js\nvar yScale = d3.scale\n    .linear()\n    .domain([minViewership, maxViewership])\n    .range([minBarHeight, maxBarHeight]);\n```", "```js\nconsole.log(minViewership + \" -> \" + yScale(minViewership));\nconsole.log(maxViewership + \" -> \" + yScale(maxViewership));\n```", "```js\n\"12270000 -> 100\"\n\"17290000 -> 400\"\n```", "```js\nvar colorScale = d3.scale.ordinal()\n    .domain(['red', 'green', 'blue'])\n    .range(['#ff0000', '#00ff00', '#0000ff']);\n```", "```js\nconsole.log(colorScale('red'),\n    colorsScale('green'),\n    colorScale('blue'));\n```", "```js\n\"#ff0000\"\n\"#00ff00\"\n\"#0000ff\"\n```", "```js\nvar data = d3.range(0, 9);\n```", "```js\nvar colorScale = d3.scale.category10();\n```", "```js\nvar svg = d3.select('body')\n    .append('svg')\n    .attr({width: 200, height: 20});\n\nsvg.selectAll('rect')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr({\n        fill: function(d) { return colorScale(d); },\n        x: function(d, i) { return i * 20 },\n        width: 20,\n        height: 20\n    });\n```", "```js\nvar bands = d3.scale.ordinal()\n    .domain([0, 1, 2])\n    .rangeBands([0, 100]);\nconsole.log(bands.range()); \nconsole.log(bands.rangeBand());\n```", "```js\n[0, 33.333333333333336, 66.66666666666667]\n```", "```js\n33.333333333333336\n```", "```js\nvar bands = d3.scale.ordinal()\n    .domain([0, 1, 2])\n    .rangeRoundBands([0, 100], 0.1);\n```", "```js\n[3.2258064516129035, 35.483870967741936, 67.74193548387096]\n29.032258064516128\n```", "```js\nvar viewership = data.map(function (d) {\n    return d.USViewers;\n});\n\nvar maxViewers = d3.max(viewership);\n```", "```js\nvar margin = { top: 10, right: 10, bottom: 260, left: 85 };\n\nvar graphWidth = 500, graphHeight = 300;\n\nvar totalWidth = graphWidth + margin.left + margin.right;\nvar totalHeight = graphHeight + margin.top + margin.bottom;\n\nvar axisPadding = 3;\n\nvar svg = d3.select('body')\n    .append('svg')\n    .attr({ width: totalWidth, height: totalHeight });\n```", "```js\nvar mainGroup = svg\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + \n                                      margin.top + \")\");\n```", "```js\nvar bands = d3.scale.ordinal()\n    .domain(viewership)\n    .rangeBands([0, graphWidth], 0.05);\n```", "```js\nvar yScale = d3.scale\n    .linear()\n    .domain([0, maxViewers])\n    .range([0, graphHeight]);\n```", "```js\nfunction translator(d, i) {\n    return \"translate(\" + bands.range()[i] + \",\" +\n                          (graphHeight - yScale(d)) + \")\";\n}\n```", "```js\nvar barGroup = mainGroup.selectAll('g')\n    .data(viewership)\n    .enter()\n    .append('g')\n    .attr('transform', translator);\n```", "```js\nbarGroup.append('rect')\n    .attr({\n        fill: 'steelblue',\n        width: bands.rangeBand(),\n        height: function(d) { return yScale(d); }\n    });\n```", "```js\nbarGroup.append('text')\n    .text(function(d) { return d; })\n    .style('text-anchor', 'start')\n    .attr({\n        dx: 10,\n        dy: -10,\n        transform: 'rotate(90)',\n        fill: 'white'\n    });\n```", "```js\nvar leftAxisGroup = svg.append('g');\nleftAxisGroup.attr({\n    transform: 'translate(' + (margin.left - axisPadding) + ',' +\n                               margin.top + ')'\n});\n\nvar yAxisScale = d3.scale\n    .linear()\n    .domain([maxViewers, 0])\n    .range([0, graphHeight]);\n\nvar leftAxis = d3.svg.axis()\n    .orient('left')\n    .scale(yAxisScale);\nvar leftAxisNodes = leftAxisGroup.call(leftAxis);\nstyleAxisNodes(leftAxisNodes);\n```", "```js\nvar titles = data.map(function(d) { return d.Title; });\nvar bottomAxisScale = d3.scale.ordinal()\n    .domain(titles)\n    .rangeBands([axisPadding, graphWidth + axisPadding]);\n\nvar bottomAxis = d3.svg\n    .axis()\n    .scale(bottomAxisScale)\n    .orient(\"bottom\");\n\nvar bottomAxisX = margin.left - axisPadding;\nvar bottomAxisY = totalHeight - margin.bottom + axisPadding;\n\nvar bottomAxisGroup = svg.append(\"g\")\n    .attr({ transform: 'translate(' + bottomAxisX + ',' + bottomAxisY + ')' });\n\nvar bottomAxisNodes = bottomAxisGroup.call(bottomAxis);\nstyleAxisNodes(bottomAxisNodes);\n\nbottomAxisNodes.selectAll(\"text\")\n    .style('text-anchor', 'start')\n    .attr({\n        dx: 10,\n        dy: -5,\n        transform: 'rotate(90)'\n});\n```", "```js\nfunction styleAxisNodes(axisNodes) {\n    axisNodes.selectAll('.domain')\n        .attr({\n            fill: 'none',\n            'stroke-width': 1,\n            stroke: 'black'\n        });\n    axisNodes.selectAll('.tick line')\n        .attr({\n            fill: 'none',\n            'stroke-width': 1,\n            stroke: 'black'\n        });\n}\n```"]