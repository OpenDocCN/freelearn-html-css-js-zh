["```js\n    EVENT_TYPES: [ \n        \"preaddlayer\", \"addlayer\",\"preremovelayer\", \"removelayer\", \n        \"changelayer\", \"movestart\",\n        \"move\", \"moveend\", \"zoomend\", \"popupopen\", \"popupclose\",\n        \"addmarker\", \"removemarker\", \"clearmarkers\", \"mouseover\",\n        \"mouseout\", \"mousemove\", \"dragstart\", \"drag\", \"dragend\",\n        \"changebaselayer\"]\n\n```", "```js\n    <table style=\"width: 100%; height: 95%;\">\n        <tr>\n            <td>\n                <div id=\"ch04_map_a\" style=\"width: 100%; height: 100%;\"></div>\n            </td>\n            <td>\n                <div id=\"ch04_map_b\" style=\"width: 100%; height: 100%;\"></div>\n            </td>\n        </tr>\n    </table>\n\n    ```", "```js\n    <script type=\"text/javascript\">\n        // Create left hand side map\n        var map_a = new OpenLayers.Map(\"ch04_map_a\");    \n        var layer_a = new OpenLayers.Layer.OSM(\"OpenStreetMap\");\n        map_a.addLayer(layer_a);\n        map_a.setCenter(new OpenLayers.LonLat(0,0), 2);\n\n        // Create right hand side map\n        var map_b = new OpenLayers.Map(\"ch04_map_b\");    \n        var bingApiKey = \"AvcVU_Eh1H2_xVcK0EeRO70MD7Zm6qwLhrVC12C3D997DylUewCWaKR9XTZgWwu6\";\n        var layer_b = new OpenLayers.Layer.Bing({\n            name: \"Road\",\n            type: \"Road\",\n            key: bingApiKey\n        });\n        map_b.addLayer(layer_b);\n        map_b.setCenter(new OpenLayers.LonLat(0,0), 2);\n\n    ```", "```js\n        // Register events on map_a using 'on':\n        map_a.events.on({\n            \"move\": moveListener,\n            \"zoomend\": zoomListener\n        });\n\n        // Register events on map_a using 'register':\n        map_b.events.register(\"move\", null, moveListener);\n        map_b.events.register(\"zoomend\", null, zoomListener);\n\n    ```", "```js\n        // Listener functions\n        function moveListener(event) {\n            if(event.object == map_a) {\n                map_b.setCenter(map_a.getCenter());\n            } else {\n                map_a.setCenter(map_b.getCenter());\n            }\n        }\n        function zoomListener(event) {\n            if(event.object == map_a) {\n                map_b.zoomTo(map_a.getZoom()-1);\n            } else {\n                map_a.zoomTo(map_b.getZoom()+1);\n            }\n        }\n    </script>\n\n    ```", "```js\n    map_a.events.on({\n        \"move\": moveListener,\n        \"zoomend\": zoomListener\n    });\n\n```", "```js\n    map_b.events.register(\"move\", null, moveListener);\n    map_b.events.register(\"zoomend\", null, zoomListener);\n\n```", "```js\n    function moveListener(event) {\n        if(event.object == map_a) {\n            map_b.setCenter(map_a.getCenter());\n        } else {\n            map_a.setCenter(map_b.getCenter());\n        }\n    }\n\n```", "```js\n    function zoomListener(event) {\n        if(event.object == map_a) {\n            map_b.zoomTo(map_a.getZoom()-1);\n        } else {\n            map_a.zoomTo(map_b.getZoom()+1);\n        }\n    }\n\n```", "```js\n    map_a.events.un({\n        \"move\": moveListener,\n        \"zoomend\": zoomListener\n    });\n    map_b.events.unregister(\"move\", null, moveListener);\n\n```", "```js\nmap = new OpenLayers.Map('map', { \n    eventListeners: { \n        \"move\": moveListener, \n        \"zoomend\": zoomListener \n    } \n});\n\n```", "```js\n    <span data-dojo-type=\"dijit.ProgressBar\" style=\"width: 100px;\" id=\"progress\"\n          data-dojo-props=\"'indeterminate': true, \n          label:''\"></span>\n\n    ```", "```js\n    <div id=\"ch04_work_progress\" style=\"width: 100%; height: 100%;\"></div>\n\n    ```", "```js\n    <!-- The magic comes here -->\n    <script type=\"text/javascript\">\n        OpenLayers.ProxyHost = \"./utils/proxy.php?url=\";\n\n    ```", "```js\n        // Create left map\n        var map = new OpenLayers.Map(\"ch04_work_progress\");   \n        var wms = new OpenLayers.Layer.WMS(\"Basic\", \n        \"http://labs.metacarta.com/wms/vmap0\",\n        {\n            layers: 'basic'\n        });        \n        var wfs = new OpenLayers.Layer.Vector(\"States\", {\n            protocol: new OpenLayers.Protocol.WFS({\n                url: \"http://demo.opengeo.org/geoserver/wfs\",\n                featureType: \"states\",\n                featureNS: \"http://www.openplans.org/topp\"\n            }),\n            strategies: [new OpenLayers.Strategy.BBOX()]\n        });\n        map.addLayers([wms, wfs]);\n\n    ```", "```js\n        map.addControl(new \n        OpenLayers.Control.LayerSwitcher());\n        map.setCenter(new OpenLayers.LonLat(-100, 41), 8);\n\n    ```", "```js\n        // Register events on layers using 'on':\n        wms.events.on({\n            \"loadstart\": updateLoader,\n            \"loadend\": updateLoader, \n            \"loadcancel\": updateLoader\n        });\n        wfs.events.on({\n            \"loadstart\": updateLoader,\n            \"loadend\": updateLoader, \n            \"loadcancel\": updateLoader\n        });\n\n    ```", "```js\n        // Listener functions\n        var wmsLoading = false;\n        var wfsLoading = false;\n        function updateLoader(event) {\n            var progress = dijit.byId('progress');\n            if(event.type == \"loadstart\") {\n                if(event.object == wms) {\n                    wmsLoading = true;\n                }\n                if(event.object == wfs) {\n                    wfsLoading = true;\n                }\n\n                var label = \"\";\n                if(wmsLoading) {\n                    label += \"WMS \";\n                }\n                if(wfsLoading) {\n                    label += \"+ WFS\";\n                }\n\n                progress.set('value', 'Infinity');\n                progress.set('label', label);\n                dojo.style(progress.domNode, \"visibility\", \"visible\");\n            } else {\n                if(event.object == wms) {\n                    wmsLoading = false;\n                }\n                if(event.object == wfs) {\n                    wfsLoading = false;\n                }\n                progress.set('value', '0');\n                dojo.style(progress.domNode, \"visibility\", \"hidden\");\n            }\n        }\n    </script>\n\n    ```", "```js\n    wms.events.on({\n        \"loadstart\": updateLoader,\n        \"loadend\": updateLoader, \n        \"loadcancel\": updateLoader\n    });\n    wfs.events.on({\n        \"loadstart\": updateLoader,\n        \"loadend\": updateLoader, \n        \"loadcancel\": updateLoader\n    });\n\n```", "```js\n    <div id=\"ch04_vector_layer_listener\" style=\"width: 100%; height: 100%;\"></div>\n\n    ```", "```js\n    <!-- The magic comes here -->\n    <script type=\"text/javascript\">\n        // Create map\n        var map = new \n        OpenLayers.Map(\"ch04_vector_layer_listener\");    \n        var layer = new \n        OpenLayers.Layer.OSM(\"OpenStreetMap\");\n        map.addLayer(layer);\n        map.setCenter(new OpenLayers.LonLat(0,0), 4);\n\n    ```", "```js\n        var vectorLayer = new \n        OpenLayers.Layer.Vector(\"States\", {\n            protocol: new OpenLayers.Protocol.HTTP({\n                url: \"http://localhost:8080/openlayers-\n                cookbook/recipes/data/world_cities.json\",\n                format: new OpenLayers.Format.GeoJSON()\n            }),\n            strategies: [new OpenLayers.Strategy.Fixed()],\n            eventListeners: {\n                \"beforefeatureadded\": featureAddedListener\n            }\n        });\n        map.addLayer(vectorLayer);\n\n    ```", "```js\n        // Define color palette\n        var colors = [\n            \"#CC0000\",\n            \"#FF0000\",\n            \"#FF3300\",\n            \"#FF6600\",\n            \"#FF9900\",\n            \"#FFCC00\",\n            \"#FFFF00\"\n        ];\n        function featureAddedListener(event){\n            // Set feature color depending on the rank attribute\n            var feature = event.feature;\n            var rank = feature.attributes.POP_RANK;\n            feature.style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);\n            feature.style.fillColor = colors[rank-1];\n        }\n    </script>\n\n    ```", "```js\n    var vectorLayer = new OpenLayers.Layer.Vector(\"States\", {\n        protocol: new OpenLayers.Protocol.HTTP({\n            url: \"http://localhost:8080/openlayers-cookbook/recipes/data/world_cities.json\",\n            format: new OpenLayers.Format.GeoJSON()\n        }),\n        strategies: [new OpenLayers.Strategy.Fixed()],\n        eventListeners: {\n            \"beforefeatureadded\": featureAddedListener\n        }\n    });\n\n```", "```js\n    function featureAddedListener(event){\n        var feature = event.feature;\n        var rank = feature.attributes.POP_RANK;\n        feature.style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);\n        feature.style.fillColor = colors[rank-1];\n    }\n\n```", "```js\nfeature.style = OpenLayers.Util.extend(\n    {},\n    OpenLayers.Feature.Vector.style['default']\n);\n\n```", "```js\n    <style>\n        .square {\n            border: 1px solid #888;\n            background-color: #0099FF;\n            color: #fff;\n            padding: 3px;\n        }\n        .square:hover {\n            background-color: #0086d2;\n        }\n    </style>\n\n    ```", "```js\n    <table>\n        <tr>\n            <td><span id=\"f0\" class=\"square\">Feature \n            1</span></td>\n            <td><span id=\"f1\" class=\"square\">Feature \n            2</span></td>\n            <td><span id=\"f2\" class=\"square\">Feature \n            3</span></td>\n            <td><span id=\"f3\" class=\"square\">Feature \n            4</span></td>\n            <td><span id=\"f4\" class=\"square\">Feature \n            5</span></td>\n            <td><span id=\"f5\" class=\"square\">Feature \n            6</span></td>\n        </tr>\n    </table>\n    <br/>\n\n    ```", "```js\n    <div id=\"ch04_dom_events\" style=\"width: 100%; height: 100%;\"></div>\n\n    ```", "```js\n    <!-- The magic comes here -->\n    <script type=\"text/javascript\">\n        // Create left map\n        var map = new OpenLayers.Map(\"ch04_dom_events\");    \n        var osm = new OpenLayers.Layer.OSM();        \n        // Create a vector layer with one feature for each \n        previous SPAN element\n        var vectorLayer = new \n        OpenLayers.Layer.Vector(\"Features\");\n\n    ```", "```js\n        var pointFeatures = [];\n        for(var i=0; i< 6; i++) {\n            // Create the ID\n            var id = \"f\"+i;\n            // Regiter listeners to handle when mouse enters \n            and leaves the DOM element\n            OpenLayers.Event.observe(OpenLayers.Util.\n            getElement(id), 'mouseover', mouseOverListener);\n            OpenLayers.Event.observe(OpenLayers.Util.\n            getElement(id), 'mouseout', mouseOutListener);\n\n            // Create a random point\n            var px = Math.random()*360-180;\n            var py = Math.random()*160-80;\n            var pointGeometry = new \n            OpenLayers.Geometry.Point(px, py);\n            OpenLayers.Projection.transform(pointGeometry, \n            new OpenLayers.Projection(\"EPSG:4326\"), new \n            OpenLayers.Projection(\"EPSG:900913\"));\n            var pointFeature = new \n            OpenLayers.Feature.Vector(pointGeometry, {\n                elem_id: id\n            });\n            pointFeatures.push(pointFeature);\n        }\n        vectorLayer.addFeatures(pointFeatures);\n\n        map.addLayers([osm, vectorLayer]);\n        map.setCenter(new OpenLayers.LonLat(0, 0), 1);\n\n    ```", "```js\n        // Listeners\n        function mouseOverListener(event) {\n            var id = event.target.id;\n            var feature = vectorLayer.\n            getFeaturesByAttribute('elem_id', id);\n            vectorLayer.drawFeature(feature[0], \"select\");\n        }\n        function mouseOutListener(event) {\n            var id = event.target.id;\n            var feature = vectorLayer.\n            getFeaturesByAttribute('elem_id', id);\n            vectorLayer.drawFeature(feature[0], \"default\");\n        }\n    </script>\n\n    ```", "```js\n        var id = \"f\"+i;\n\n```", "```js\n        OpenLayers.Event.observe(OpenLayers.Util.getElement(id), \n        'mouseover', mouseOverListener);\n        OpenLayers.Event.observe(OpenLayers.Util.getElement(id), \n        'mouseout', mouseOutListener);\n\n```", "```js\n        OpenLayers.Event.observe(id, 'mouseover', mouseOverListener);\n        OpenLayers.Event.observe(OpenLayers.Util.getElement(id), 'mouseover', mouseOverListener);\n\n```", "```js\n        var px = Math.random()*360-180;\n        var py = Math.random()*160-80;\n        var pointGeometry = new OpenLayers.Geometry.Point(px, py);\n\n```", "```js\n        OpenLayers.Projection.transform(pointGeometry, new \n        OpenLayers.Projection(\"EPSG:4326\"), new \n        OpenLayers.Projection(\"EPSG:900913\"));\n        var pointFeature = new \n        OpenLayers.Feature.Vector(pointGeometry, {\n            elem_id: id\n        });\n        pointFeatures.push(pointFeature);\n\n```", "```js\n    function mouseOverListener(event) {\n        var id = event.target.id;\n        var feature = \n        vectorLayer.getFeaturesByAttribute('elem_id', id);\n        vectorLayer.drawFeature(feature[0], \"select\");\n    }\n\n```", "```js\n        var id = event.target.id;\n\n```", "```js\n        var feature = \n        vectorLayer.getFeaturesByAttribute('elem_id', id);\n\n```", "```js\n        vectorLayer.drawFeature(feature[0], \"select\");\n\n```", "```js\n$(\"some_ID\")\nOpenLayers.Util.getElement(\"some_ID\")\n\n```", "```js\n$(\"some_ID\")\n\n```", "```js\n$(\"#some_ID\")\n\n```"]