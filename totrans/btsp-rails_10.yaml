- en: Chapter 10. Creating a Shopping Cart Using Bootstrap Modals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter is all about implementing what we have learned so far in Bootstrap.
    We won't be learning anything new here, but this chapter will definitely clear
    some of the core concepts such as using Bootstrap modal, typography, buttons,
    and responsive tables.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will create a JavaScript modal that will serve as a shopping
    cart in our Shopping application. This cart will have all the features needed
    for any shopping website. For demo purposes, we will be displaying only static
    data in our shopping cart.
  prefs: []
  type: TYPE_NORMAL
- en: 'In a nutshell, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a shopping cart symbol
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a shopping cart using modals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a shopping cart symbol
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before proceeding to create a shopping cart in our application, we need a handle
    which when clicked on, will display the shopping cart. For our application, I
    will add a Glyphicon font icon to display an icon in the current navigation bar
    of our application. So, let's proceed and make this tweak.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to **app** | **views** | **layouts** and edit the `application.html.erb`
    file. Just in front case of the `<li>` element of **Home** , add another `<li>`
    element with the Glyphicon icon of the shopping cart, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember, Glyphicons are font images provided by Bootstrap, by default, in its
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the browser and check for the shopping cart symbol in the navigation bar.
    It should look like the one shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding a shopping cart symbol](img/3167_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We will add a number beside the shopping cart icon to indicate the number of
    products added to the shopping cart. We will use Bootstrap''s badges for this.
    Adding a `<span>` element with the class `.badge` will create a beautiful number
    indicator:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You should have a number indicator in the navigation bar, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding a shopping cart symbol](img/3167_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s also add the custom data attributes needed to trigger a modal in this
    shopping cart link. As stated in the earlier chapter, we need two custom attributes
    to create a modal handle: `data-target` and `data-toggle`. So, let''s add these
    attributes to our shopping cart link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Here, the value provided to data-target is `#shoppingCart`. Hence, we will use
    `shoppingCart` as the ID of the modal that we will create in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we are ready with a shopping cart icon that will trigger our shopping cart
    modal when clicked. This icon also represents the number of items present inside
    the shopping cart. Impressive! Isn't it?
  prefs: []
  type: TYPE_NORMAL
- en: Creating a shopping cart using modals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As stated earlier in this book, to create a Bootstrap modal, we need a `<div>`
    element with the `.modal` class. We will also add the `.fade` class to apply the
    fading transition. It is the only transition animation provided by Bootstrap.
  prefs: []
  type: TYPE_NORMAL
- en: 'At end of the `application.html.erb` file, add the markup for the modal, as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'One of the most important things to note here, is that we have two modals in
    this page. To uniquely identify each one of them, we should give different IDs
    to them. In this case, we already have an ID with us, which is `shoppingCart`.
    So, let''s add it to our markup:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, we need to place a markup for a modal dialog and modal content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Compared to the modal created in the earlier chapter, we are using a larger
    modal here, with the help of the `.modal-lg` class.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, we will add a header to our modal. This header will contain the title
    **Your Cart** with another text that will indicate the number of items present
    in the shopping cart:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Place the preceding content inside the `.modal-content` element. The `<p>` element
    is floated towards the right using the class .pull-right and colored dark blue
    using the `.text-primary` utility class. It is used to represent the number of
    items present inside the shopping cart. The title **Your Cart** is written using
    the `<h4>` element with the `.modal-title` and `.text-primary` class (to add a
    blue color to the text). We also have an icon of a shopping cart present inside
    the title, created using the Glyphicon icon. If you trigger this modal by clicking
    on the shopping cart icon you will see something like the following:![Creating
    a shopping cart using modals](img/3167_10_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s proceed to create the body part of the modal. Perform the following
    steps to create the body of the modal:'
  prefs: []
  type: TYPE_NORMAL
- en: Add .modal-header;. to the following markup, as the sibling of the
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We will insert a Bootstrap table that will hold the actual item details:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let''s create multiple columns inside this table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We have columns for **Serial no**, **Item Name**, **Unit Price**, **Quantity
    Ordered**, and **Price of the item**. We also have an extra column without a heading
    that will contain a link to remove a particular item row from the table.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let''s fill up the first row:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For the quantity field, I have used an input field with the `.form-control`
    class to give a Bootstrap look and feel to it. I have also applied a CSS width
    of `50px` to it. In the last column, I have added a text link called **remove**
    with the `.btn`, `.btn-danger`, and `.btn-sm` class. The`.btn-danger` class makes
    the button red, while the `.btn-sm` class is used to reduce the size of the normal
    Bootstrap button. Try filling up some more items in the table. Finally, you will
    get a modal that looks like the one shown in the following screenshot:![Creating
    a shopping cart using modals](img/3167_10_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We are now left with the last row that will display the total sum of the items.
    Let''s proceed and add that too:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Instead of adding all the columns, I have merged the first four columns by
    using the `colspan` attribute here. In the last column, I have changed the text
    of the button to **clear all**. One of the most important changes here are the
    classes .active and .lead added to the row. The .active class highlights the row
    using a grey-colored background, whereas the .lead class increases the font size
    of the text. The modal should now look like the following:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating a shopping cart using modals](img/3167_10_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'We will now add two different buttons at the end of the modal: **Continue Shopping**
    and **Checkout**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The first button is pulled towards the right using the .`pull-right` utility
    class. The **Continue Shopping** button uses the `data-dismiss` attribute to close
    the modal and to let the user continue using the website.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, our Shopping cart design is complete. It should now look like the one
    shown in the following screenshot:![Creating a shopping cart using modals](img/3167_10_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope you enjoyed reading this chapter. Through this chapter, we tried to design
    a dummy shopping cart using Bootstrap and its components. We saw how to use Bootstrap
    tables inside Bootstrap modals, and how to make use of Bootstrap's utility classes.
    We have also seen how to use free font icons, Glyphicons, to create shopping cart
    icons inside a navigation bar.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to learn one of the most important topics,
    *Customizing Bootstrap*. Be prepared and join me soon.
  prefs: []
  type: TYPE_NORMAL
