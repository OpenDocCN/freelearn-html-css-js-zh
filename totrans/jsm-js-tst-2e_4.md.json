["```js\n$.ajax('http://localhost/data.json', {\n  success: function (data) {\n    // handle the result\n  }\n});\n```", "```js\ndescribe(\"Stock\", function() {\n  var stock;\n  var originalSharePrice = 0;\n\n  beforeEach(function() {\n    stock = new Stock({\n      symbol: 'AOUE',\n      sharePrice: originalSharePrice\n    });\n  });\n\n  it(\"should have a share price\", function() {\n    expect(stock.sharePrice).toEqual(originalSharePrice);\n  });\n\n  describe(\"when fetched\", function() {\n var fetched = false;\n beforeEach(function() {\n stock.fetch();\n });\n\n it(\"should update its share price\", function() {\n expect(stock.sharePrice).toEqual(20.18);\n });\n });\n});\n```", "```js\nStock.prototype.fetch = function() {\n  var that = this;\n  var url = 'http://localhost:8000/stocks/'+that.symbol;\n\n  $.getJSON(url, function (data) {\n    that.sharePrice = data.sharePrice;\n  });\n};\n```", "```js\n{\n  \"sharePrice\": 20.18\n}\n```", "```js\nvar express = require('express');\nvar app = express();\n\napp.get('/stocks/:symbol', function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  res.send({ sharePrice: 20.18 });\n});\n\napp.use(express.static(__dirname));\n\napp.listen(8000);\n```", "```js\n$ npm install express\n\n```", "```js\n$ node server.js\n\n```", "```js\n{\"sharePrice\": \"20.18\"}\n```", "```js\nit(\"should update its share price\", function() {\n  expect(stock.sharePrice).toEqual(20.18);\n});\n```", "```js\ndescribe(\"when fetched\", function() {\n  beforeEach(function(done) {\n\n  });\n\n  it(\"should update its share price\", function() {\n    expect(stock.sharePrice).toEqual(20.18);\n  });\n});\n```", "```js\nbeforeEach(function(done) {\n  stock.fetch({\n success: done\n });\n});\n```", "```js\nStock.prototype.fetch = function(params) {\n  params = params || {};\n  var that = this;\n  var success = params.success || function () {};\n var url = 'http://localhost:8000/stocks/'+that.symbol;\n\n  $.getJSON(url, function (data) {\n    that.sharePrice = data.sharePrice;\n success(that);\n  });\n};\n```", "```js\ndescribe(\"Stock\", function() {\n  var stock;\n  var originalSharePrice = 0;\n\n  beforeEach(function() {\n    stock = new Stock({\n      symbol: 'AOUE',\n      sharePrice: originalSharePrice\n    });\n  });\n\n  it(\"should be able to update its share price\", function(done) {\n    stock.fetch();\n    expect(stock.sharePrice).toEqual(20.18);\n  });\n});\n```", "```js\nit(\"should be able to update its share price\", function(done) {\n  stock.fetch({\n    success: function () {\n      expect(stock.sharePrice).toEqual(20.18);\n      done();\n    }\n  });\n});\n```", "```js\nbeforeEach(function() {\n  jasmine.DEFAULT_TIMEOUT_INTERVAL = 10000;\n\n  jasmine.addMatchers({\n    // matchers code\n  });\n});\n\njasmine.getFixtures().fixturesPath = 'spec/fixtures';\n```", "```js\ndescribe(\"Stock\", function() {\n var defaultTimeout;\n\n  beforeEach(function() {\n defaultTimeout = jasmine.DEFAULT_TIMEOUT_INTERVAL;\n jasmine.DEFAULT_TIMEOUT_INTERVAL = 10000;\n  });\n\n  afterEach(function() {\n jasmine.DEFAULT_TIMEOUT_INTERVAL = defaultTimeout;\n  });\n\n  it(\"should be able to update its share price\", function(done) {\n\n  });\n});\n```"]