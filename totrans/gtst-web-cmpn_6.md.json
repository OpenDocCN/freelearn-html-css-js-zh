["```js\ncd Chapter\\ 06/Starter\\ Project/\nnpm install\n```", "```js\nnpm start\n```", "```js\n> node webpack.dev.server\n\nHash: ecc08467bc66f8944b6b\nVersion: webpack 3.12.0\nTime: 1284ms\n Asset Size Chunks Chunk Names\nbundle.js 19.3 kB 0 [emitted] main\n [0] ./src/index.js 131 bytes {0} [built]\n [1] ./src/styles.scss 1.13 kB {0} [built]\n [2] ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/styles.scss 225 bytes {0} [built]\n [3] ./node_modules/css-loader/lib/css-base.js 2.26 kB {0} [built]\n [4] ./node_modules/style-loader/lib/addStyles.js 8.7 kB {0} [built]\n [5] ./node_modules/style-loader/lib/urls.js 3.01 kB {0} [built]\n [6] ./src/components/my-app/index.js 541 bytes {0} [built]\nwebpack: Compiled successfully.\n```", "```js\n<html>\n  <head>\n    <title>My App</title>\n  </head>\n  <body>\n    <my-app></my-app>\n    <script src=\"img/bundle.js\"></script>\n  </body>\n</html>\n```", "```js\nentry: './src/index.js',\n```", "```js\noutput: {\n  filename: 'bundle.js',\n  path: path.resolve(__dirname, 'dist')\n},\n```", "```js\nimport './styles.scss';\n\nimport MyApp from './components/my-app';\ncustomElements.define('my-app', MyApp);\n```", "```js\nconstructor() {\n\n  // We are not even going to touch this.\n  super();\n\n  // lets create our shadow root\n  this.shadowObj = this.attachShadow({mode: 'open'});\n  this.render();\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n```", "```js\ngetTemplate() {\n  return `\n    <div>\n      My App\n    </div>\n    ${this.getStyle()}\n  `;\n}\n\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n  `;\n}\n```", "```js\nexport default class GifCover extends HTMLElement {\n  constructor() {\n\n    // We are not even going to touch this.\n    super();\n\n    // lets get the url from attribute\n    this.url = this.getAttribute('url');\n\n    // lets create our shadow root\n    this.shadowObj = this.attachShadow({mode: 'open'});\n\n    this.render();\n  }\n\n  ...\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <div>\n      <img class=\"gif-cover__image\"\n        src=\"img/${this.url}\" />\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n      .gif-cover__image {\n        height: 150px;\n      }\n    </style>\n  `;\n}\n```", "```js\nexport default class SearchBar extends HTMLElement {\n\n  constructor() {\n\n    // We are not even going to touch this.\n    super();\n\n    this.key = 'YOUR-KEY';\n    this.searchUrl = 'https://api.giphy.com/v1/gifs/search';\n    this.showlimit = 20;\n\n    // lets create our shadow root\n    this.shadowObj = this.attachShadow({mode: 'open'});\n\n    this.render();\n  }\n\n  ...\n  ...\n\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <div class=\"search-bar__container\">\n      <input type=\"text\"\n        class=\"search-bar__search-field\"\n        placeholder=\"Enter Search Text Here\">\n      <button class=\"search-bar__button\">Search</button>\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n      .search-bar__container {\n        display: flex;\n      }\n      .search-bar__search-field {\n        flex: 1;\n        margin: 10px;\n        height: 50px;\n        font-size: 18px;\n        padding: 10px;\n        border-radius: 5px;\n        border: none;\n        color: #8e8e8e;\n      }\n      .search-bar__button {\n        margin: 10px;\n        width: 200px;\n        border: none;\n        font-size: 18px;\n        color: #5f5f5f;\n        cursor: pointer;\n      }\n      .search-bar__button:hover {\n        background: #68f583;\n      }\n    </style>\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.shadowObj.querySelector('button')\n    .addEventListener('click', (e) => {\n      this.handleSearch();\n    });\n}\n```", "```js\nhandleSearch() {\n  let value = this.shadowObj.querySelector('input').value;\n\n  fetch(`${this.searchUrl}?api_key=${this.key}&q=${value}&limit=${this.showlimit}`)\n  .then(response => response.json())\n  .then((jsonResponse) => {\n    this.dispatchDataInEvent(jsonResponse.data);\n  });\n\n}\n```", "```js\n`${this.searchUrl}?api_key=${this.key}&q=${value}&limit=${this.showlimit}`\n```", "```js\ndispatchDataInEvent(data) {\n  this.dispatchEvent(new CustomEvent('search-complete', {\n    detail: {\n      data: data,\n    },\n    bubbles: true,\n  }));\n}\n```", "```js\nimport SearchBar from '../search-bar';\nimport GifCover from '../gif-cover';\n\nexport default class SearchContainer extends HTMLElement {\n    ...\n    ...\n    ...\n}\n```", "```js\nconstructor() {\n\n  // We are not even going to touch this.\n  super();\n\n  // lets create our shadow root\n  this.shadowObj = this.attachShadow({mode: 'open'});\n\n  this.registerOtherComponents();\n  this.render();\n}\n```", "```js\nregisterOtherComponents() {\n  if (typeof customElements.get('search-bar') === 'undefined') {\n    customElements.define('search-bar', SearchBar);\n  }\n\n  if (typeof customElements.get('gif-cover') === 'undefined') {\n    customElements.define('gif-cover', GifCover);\n  }\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <div class=\"search-container__container\">\n      <search-bar></search-bar>\n      <div class=\"search-container__images\">\n        <p>Try Searching for a tag in the search bar</p>\n      </div>\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.shadowObj.querySelector('search-bar')\n    .addEventListener('search-complete', (e) => {\n      this.handleSearchData(e.detail.data);\n    });\n}\n```", "```js\nhandleSearchData(data) {\n  data = data.map((val, index) => {\n    return `\n      <gif-cover url=${val.images.downsized_medium.url}></gif-cover>\n    `;\n  }).join('');\n  this.shadowObj.querySelector('.search-container__images')\n    .innerHTML = data;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n      .search-container__container {\n        display: block;\n        padding: 10px;\n      }\n      .search-container__images {\n        display: flex;\n        padding: 10px;\n        flex-wrap: wrap;\n        box-sizing: border-box;\n        justify-content: space-evenly;\n      }\n      gif-cover {\n        flex-basis: 10%;\n        padding: 5px;\n      }\n    </style>\n  `;\n}\n```", "```js\ngetTemplate() {\n  return `\n    <search-container></search-container>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\nif (typeof customElements.get('search-container') === 'undefined') {\n  customElements.define('search-container', SearchContainer);\n}\n```", "```js\nexport default class ShowTrending extends HTMLElement {\n\n  constructor() {\n\n    // We are not even going to touch this.\n    super();\n\n    this.key = 'YOUR_KEY';\n    this.url = 'https://api.giphy.com/v1/gifs/trending';\n    this.showlimit = 20;\n\n    // lets create our shadow root\n    this.shadowObj = this.attachShadow({mode: 'open'});\n\n    this.registerOtherComponents();\n    this.render();\n\n  }\n\n  ...\n  ...\n\n}\n```", "```js\nregisterOtherComponents() {\n  if (typeof customElements.get('gif-cover') === 'undefined') {\n    customElements.define('gif-cover', GifCover);\n  }\n}\n```", "```js\nimport GifCover from '../gif-cover';\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <div class=\"show-trending__container\">\n      <h2 class=\"show-trending__heading\">Trending Gifs</h2>\n      <div class=\"show-trending__images\"></div>\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n      .show-trending__heading {\n        text-align: center;\n      }\n      .show-trending__images {\n        display: flex;\n        padding: 10px;\n        flex-wrap: wrap;\n        box-sizing: border-box;\n        justify-content: space-evenly;\n      }\n\n      gif-cover {\n        flex-basis: 10%;\n        padding: 5px;\n      }\n    </style>\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.makeApiCall();\n}\n\nmakeApiCall() {\n  fetch(`${this.url}?api_key=${this.key}&limit=${this.showlimit}`)\n  .then(response => response.json())\n  .then((jsonResponse) => {\n    this.handleTrendingData(jsonResponse.data);\n  });\n\n}\n```", "```js\nhandleTrendingData(data) {\n\n  data = data.map((val, index) => {\n    return `\n      <gif-cover url=${val.images.downsized_medium.url}></gif-cover>\n    `;\n  }).join('');\n\n  this.shadowObj.querySelector('.show-trending__images')\n    .innerHTML = data;\n}\n```", "```js\nimport GifCover from '../gif-cover';\n\nexport default class ShowRandom extends HTMLElement {\n    ...\n    ...\n    ...\n}\n```", "```js\nconstructor() {\n\n  // We are not even going to touch this.\n  super();\n\n  // the key required for api\n  this.key = 'YOUR_KEY';\n\n  // the url used to get the random gif\n  this.url = 'https://api.giphy.com/v1/gifs/random';\n\n  // lets create our shadow root\n  this.shadowObj = this.attachShadow({mode: 'open'});\n\n  this.registerOtherComponents();\n  this.render();\n}\n```", "```js\nregisterOtherComponents() {\n  // lets register other components used \n  if (typeof customElements.get('gif-cover') === 'undefined') {\n    customElements.define('gif-cover', GifCover);\n  }\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <div class=\"show-random__container\">\n      <div class=\"show-random__images\"></div>\n      <button class=\"show-random__button\">Get Another Random \n      Image</button>\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n      }\n      .show-random__container {\n        text-align: center;\n      }\n      .show-random__images {\n        display: flex;\n        padding: 10px;\n        flex-wrap: wrap;\n        box-sizing: border-box;\n        justify-content: space-evenly;\n      }\n\n      .show-random__button {\n        margin: 10px;\n        border: none;\n        font-size: 18px;\n        color: #5f5f5f;\n        cursor: pointer;\n        padding: 10px;\n      }\n\n      gif-cover {\n        flex-basis: 10%;\n        padding: 5px;\n      }\n    </style>\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.handleRandom();\n}\n\nhandleRandom() {\n  fetch(`${this.url}?api_key=${this.key}`)\n  .then(response => response.json())\n  .then((jsonResponse) => {\n    this.handleTrendingData(jsonResponse.data);\n  });\n\n}\n```", "```js\nhandleTrendingData(data) {\n\n  this.shadowObj.querySelector('.show-random__images')\n    .innerHTML = `\n      <gif-cover url=${data.image_url}></gif-cover>\n    `;\n}\n```", "```js\nconnectedCallback() {\n  this.handleRandom();\n\n  this.shadowObj.querySelector('button')\n    .addEventListener('click', (e) => {\n      this.handleRandom();\n    });\n}\n```", "```js\nimport SearchContainer from '../search-container';\nimport ShowTrending from '../show-trending';\nimport ShowRandom from '../show-random';\n\nexport default class MyApp extends HTMLElement {\n    ...\n    ...\n    ...   \n}\n```", "```js\nregisterOtherComponents() {\n  if (typeof customElements.get('search-container') === 'undefined') {\n    customElements.define('search-container', SearchContainer);\n  }\n\n  if (typeof customElements.get('show-trending') === 'undefined') {\n    customElements.define('show-trending', ShowTrending);\n  }\n\n  if (typeof customElements.get('show-random') === 'undefined') {\n    customElements.define('show-random', ShowRandom);\n  }\n}\n```", "```js\nconstructor() {\n  ...\n\n  // to show what section\n  this.shownSection = 1;\n\n  ...\n}\n```", "```js\ngetTemplate() {\n  return `\n    <div class=\"app-section\">\n      ${this.getSection(this.shownSection)}\n    </div>\n    ${this.getStyle()}\n  `;\n}\n\ngetSection(section) {\n  switch(section) {\n    case 1:\n      return `\n        <search-container></search-container>\n      `;\n    case 2:\n      return `\n        <show-trending></show-trending>\n      `;\n    case 3:\n      return `\n        <show-random></show-random>\n      `;\n  }\n}\n```", "```js\nconstructor() {\n\n  // We are not even going to touch this.\n  super();\n\n  // lets create our shadow root\n  this.shadowObj = this.attachShadow({mode: 'open'});\n\n  this.render();\n}\n```", "```js\nrender() {\n  this.shadowObj.innerHTML = this.getTemplate();\n}\n\ngetTemplate() {\n  return `\n    <ul class=\"custom-header__ul\">\n      <li class=\"custom-header__li\">\n        <a href=\"#search\">Search</a>\n      </li>\n      <li class=\"custom-header__li\">\n        <a href=\"#trending\">Trending</a>\n      </li>\n      <li class=\"custom-header__li\">\n        <a href=\"#random\">Random</a>\n      </li>\n    </ul>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\ngetStyle() {\n  return `\n    <style>\n      :host {\n        display: block;\n        top: 0;\n        background: #46cff3;\n        position: sticky;\n        height: 75px;\n      }\n      .custom-header__ul {\n        display: flex;\n        margin: 0;\n        justify-content: flex-end;\n        height: 100%;\n\n      }\n      .custom-header__li {\n        align-self: center;\n        list-style-type: none;\n        margin-right: 25px;\n      }\n\n      .custom-header__li a {\n        text-decoration: none;\n        color: white;\n        font-size: 25px;\n      }\n    </style>\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.shadowObj.querySelectorAll('.custom-header__li a')\n    .forEach((aTag, index) => {\n      aTag.addEventListener('click', (e) => {\n        this.handleClick(index);\n      });\n    });\n}\n```", "```js\nhandleClick(index) {\n  this.dispatchEvent(new CustomEvent('custom-header-clicked', {\n    detail: {\n      data: index + 1,\n    },\n    bubbles: true,\n  }));\n}\n```", "```js\nimport CustomHeader from '../custom-header';\n```", "```js\nif (typeof customElements.get('custom-header') === 'undefined') {\n  customElements.define('custom-header', CustomHeader);\n}\n```", "```js\ngetTemplate() {\n  return `\n    <custom-header></custom-header>\n    <div class=\"app-section\">\n      ${this.getSection(this.shownSection)}\n    </div>\n    ${this.getStyle()}\n  `;\n}\n```", "```js\nconnectedCallback() {\n  this.shadowObj.querySelector('custom-header')\n    .addEventListener('custom-header-clicked', (e) => {\n      let newShownSection = e.detail.data;\n      if(newShownSection !== this.shownSection) {\n        this.shownSection = newShownSection;\n        this.reRenderAppSection();\n      }\n    })\n}\n```", "```js\nreRenderAppSection() {\n  this.shadowObj.querySelector('.app-section').innerHTML = \n    this.getSection(this.shownSection);\n}\n```", "```js\nhandleURL() {\n  switch(window.location.hash) {\n    case '#search':\n      this.shownSection = 1;\n      break;\n    case '#trending':\n      this.shownSection = 2;\n      break;\n    case '#random':\n      this.shownSection = 3;\n      break;\n    default:\n      this.shownSection = 1;\n      break;\n  }\n\n  this.render();\n}\n```"]