["```js\n    //Firstly, we need to import the required library\n    ```", "```js\n    const Joi = require('joi');\n    ```", "```js\n    // We define the schema using Joi library with its parameters\n    ```", "```js\n    const schema = Joi.object({\n    ```", "```js\n      username: Joi.string().alphanum().min(3).max(30).required(),\n    ```", "```js\n      email: Joi.string().email().required(),\n    ```", "```js\n    });\n    ```", "```js\n    // Validate request data\n    ```", "```js\n    const { error, value } = schema.validate(req.body);\n    ```", "```js\n    if (error) {\n    ```", "```js\n      // Handle validation error\n    ```", "```js\n    }\n    ```", "```js\n    const DOMPurify = require('dompurify');\n    ```", "```js\n    const sanitizedHTML = DOMPurify.sanitize(req.body.htmlInput);\n    ```", "```js\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    ```", "```js\n    if (!emailRegex.test(req.body.email)) {\n    ```", "```js\n      // Handle invalid email address\n    ```", "```js\n    }\n    ```", "```js\n    app.use((err, req, res, next) => {\n    ```", "```js\n      console.error(err.stack);\n    ```", "```js\n      res.status(500).send('Something went wrong!');\n    ```", "```js\n    });\n    ```", "```js\n    class CustomError extends Error {\n    ```", "```js\n      constructor(message, statusCode) {\n    ```", "```js\n        super(message);\n    ```", "```js\n        this.statusCode = statusCode;\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    // Usage\n    ```", "```js\n    throw new CustomError('Custom error message', 400);\n    ```"]