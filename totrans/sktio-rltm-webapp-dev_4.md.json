["```js\n//EXISTING LAYOUT\n  section#nameform.modal\n    div.backdrop\n    div.popup\n      div.pophead Please enter a nickname\n      div.popbody\n        input#nickname(type='text')\n        input#setname(type='button', value='Set Name')\n```", "```js\n//EXISTING CSS\n.modal{\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  height: -moz-calc(100% - 102px);\n  height: -webkit-calc(100% - 102px);\n  height: calc(100% - 102px);\n  left: 0;\n  position: absolute;\n  top: 62px;\n  width: 100%;\n  z-index: 1000;\n}\n\n.backdrop{\n  width: 100%;\n  height:100%;\n  background-color: #777777;\n}\n\n.popup {\n  position: absolute;\n  height: 100px;\n  width: 300px;\n  left: -moz-calc(50% - 150px);\n  left: -webkit-calc(50% - 150px);\n  left: calc(50% - 150px);\n  top: -moz-calc(50% - 50px);\n  top: -webkit-calc(50% - 50px);\n  top: calc(50% - 50px);\n  background: #FFFFFF;\n}\n\n.pophead {\n  background-color: #4192C1;\n  color: #FFFFFF;\n  font-weight: bold;\n  padding: 8px 3px;\n  vertical-align: middle;\n}\n\n.popbody {\n  padding: 10px 5px;\n}\n```", "```js\n$(function(){\n  $('#setname').click(function(){\n socket.emit(\"set_name\", {name: $('#nickname').val()});\n  });\n});\n```", "```js\nsocket.emit(<event_name>, <event_data>);\n```", "```js\nvar io = require('socket.io');\n\nexports.initialize = function(server) {\n\n  io = io.listen(server);\n\n  io.sockets.on(\"connection\", function(socket){\n\n    socket.on('message', function(message){\n\n      message= JSON.parse(message);\n\n      if(message.type == \"userMessage\"){\n\n        socket.get('nickname', function(err, nickname){\n\n          message.username=nickname;\n\n          socket.broadcast.send(JSON.stringify(message));\n\n          message.type = \"myMessage\";\n\n          socket.send(JSON.stringify(message));\n\n        });        \n\n      }\n\n    });\n\n socket.on(\"set_name\", function(data){\n\n socket.set('nickname', data.name, function(){\n\n socket.emit('name_set', data);\n\n socket.send(JSON.stringify({type:'serverMessage', \n message: 'Welcome to the most interesting chat room on earth!'})); \n\n });\n\n });\n\n  });\n\n}\n```", "```js\nsocket.set(<name>, <value>, <optional_callback>);\n```", "```js\nvar socket = io.connect('/');\n\nsocket.on('name_set', function(data){\n $('#nameform').hide();\n $('#messages').append('<div class=\"systemMessage\">' + \n 'Hello '+data.name+'</div>');\n  $('#send').click(function(){\n    var data = {\n      message: $('#message').val(),\n      type:'userMessage'\n    };\n    socket.send(JSON.stringify(data));\n    $('#message').val('');\n  });\n  socket.on('message', function (data) {\n    data = JSON.parse(data);\n if(data.username){\n $('#messages').append('<div class=\"'+data.type+\n '\"><span class=\"name\">' + \n data.username + \":</span> \" + \n data.message + '</div>');\n    }else{\n      $('#messages').append('<div class=\"'+data.type+'\">' + \n                                                     data.message + '</div>');\n    }\n  });\n});\n\n$(function(){\n\n  $('#setname').click(function(){\n\n    socket.emit(\"set_name\", {name: $('#nickname').val()});\n\n  });\n\n});\n```", "```js\n    socket.on(\"set_name\", function(data){\n      socket.set('nickname', data.name, function(){\n         socket.emit('name_set', data);\n     socket.send(JSON.stringify({type:'serverMessage', \n                  message: 'Welcome to the most interesting\" +  \n                                              \"chat room on earth!'}));\n socket.broadcast.emit('user_entered', data);\n      });\n    });\n```", "```js\nsocket.on('name_set', function(data){\n\n  // EXISTING CODE\n\n socket.on(\"user_entered\", function(user){\n $('#messages').append('<div class=\"systemMessage\">' + \n user.name + ' has joined the room.' + '</div>');\n });\n});\n```", "```js\nvar io = require('socket.io');\n\nexports.initialize = function (server) {\n  io = io.listen(server);\n\n var chatInfra = io.of(\"/chat_infra\")\n .on(\"connection\", function(socket){\n        socket.on(\"set_name\", function (data) {\n          socket.set('nickname', data.name, function () {\n            socket.emit('name_set', data);\n            socket.send(JSON.stringify({type:'serverMessage',\n              message:'Welcome to the most interesting ' +\n              'chat room on earth!'}));\n            socket.broadcast.emit('user_entered', data);\n          });\n        });\n      });\n\n var chatCom = io.of(\"/chat_com\")\n .on(\"connection\", function (\nsocket) {\n        socket.on('message', function (message) {\n          message = JSON.parse(message);\n          if (message.type == \"userMessage\") {\n            socket.get('nickname', function (err, nickname) {\n              message.username = nickname;\n              socket.broadcast.send(JSON.stringify(message));\n              message.type = \"myMessage\";\n              socket.send(JSON.stringify(message));\n            });\n          }\n        });\n      });\n}\n```", "```js\n var chatInfra = io.of(\"/chat_infra\")\n      .on(\"connection\", function(socket){\n```", "```js\n var chatCom = io.of(\"/chat_com\")\n      .on(\"connection\", function (socket) {\n```", "```js\n socket.on(\"set_name\", function (data) {\n          socket.set('nickname', data.name, function () {\n socket.emit('name_set', data);\n socket.send(JSON.stringify({type:'serverMessage',\n              message:'Welcome to the most interesting ' +\n              'chat room on earth!'}));\n socket.broadcast.emit('user_entered', data);\n          });\n        });\n```", "```js\n socket.on('message', function (message) {\n          message = JSON.parse(message);\n          if (message.type == \"userMessage\") {\n            socket.get('nickname', function (err, nickname) {\n              message.username = nickname;\n socket.broadcast.send(JSON.stringify(message));\n              message.type = \"myMessage\";\n socket.send(JSON.stringify(message));\n            });\n          }\n        });\n```", "```js\nvar chatInfra = io.connect('/chat_infra'),\n chatCom = io.connect('/chat_com');\n\nchatInfra.on('name_set', function (data) {\n chatInfra.on(\"user_entered\", function (user) {\n    $('#messages').append('<div class=\"systemMessage\">' + user.name\n        + ' has joined the room.' + '</div>');\n  });\n\n chatInfra.on('message', function (message) {\n    var message = JSON.parse(message);\n    $('#messages').append('<div class=\"' + message.type + '\">'\n        + message.message + '</div>');\n  });\n\n chatCom.on('message', function (message) {\n    var message = JSON.parse(message);\n      $('#messages').append('<div class=\"' + \n    message.type + '\"><span class=\"name\">' +\n     message.username + ':</span> ' +\n           message.message + '</div>');\n  });\n\n  $('#nameform').hide();\n  $('#messages').append('<div class=\"systemMessage\">Hello ' +\n     data.name + '</div>');\n\n  $('#send').click(function () {\n    var data = {\n      message:$('#message').val(),\n      type:'userMessage'\n    };\n chatCom.send(JSON.stringify(data));\n    $('#message').val('');\n  });\n});\n\n$(function () {\n  $('#setname').click(function () {\n chatInfra.emit(\"set_name\", {name:$('#nickname').val()});\n  });\n});\n```", "```js\nvar chatInfra = io.connect('/chat_infra'),\n    chatCom = io.connect('/chat_com');\n```", "```js\nchatInfra.on('name_set', function (data) {\n```", "```js\n chatInfra.on(\"user_entered\", function (user) {\n    $('#messages').append('<div class=\"systemMessage\">' + user.name\n        + ' has joined the room.' + '</div>');\n  });\n```", "```js\n chatInfra.on('message', function (message) {\n    var message = JSON.parse(message);\n    $('#messages').append('<div class=\"' + message.type + '\">'\n        + message.message + '</div>');\n  });\n```", "```js\n    chatInfra.emit(\"set_name\", {name:$('#nickname').val()});\n```", "```js\n$('#send').click(function () {\n    var data = {\n      message:$('#message').val(),\n      type:'userMessage'\n    };\n    chatCom.send(JSON.stringify(data));\n```", "```js\n chatCom.on('message', function (message) {\n    var message = JSON.parse(message);\n      $('#messages').append('<div class=\"' + \n     message.type + '\"><span class=\"name\">' +\n     message.username + ':</span> ' +\n           message.message + '</div>');\n  });\n```", "```js\nextends layout\n\nblock content\n  section#welcome\n    div Welcome\n    a#startchat(type=\"button\", class=\"btn\", href=\"/chatroom\") Start now\n```", "```js\n#welcome div{\n  font-family: fantasy;\n  font-size: 100px;\n  margin-left: 20px;\n  margin-top: 100px;\n}\n\n.btn {\n    background-color: #5BB75B;\n    background-image: linear-gradient(to bottom, #62C462, #51A351);\n    background-repeat: repeat-x;\n    border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);\n    color: #FFFFFF;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n    border-image: none;\n    border-radius: 4px 4px 4px 4px;\n    border-style: solid;\n    border-width: 1px;\n    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, \n          0 1px 2px rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 0;\n    padding: 4px 12px;\n    text-align: center;\n    vertical-align: middle;\n    position: absolute;\n    right: 40px;\n    bottom: 80px;\n    text-decoration: none;\n}\n```", "```js\nexports.chatroom = function(req, res){\n  res.render('chatroom', { title: 'Express Chat' });\n}\n```", "```js\napp.get('/chatroom', routes.chatroom);\n```", "```js\nhttp://localhost:3000/chatroom?room=jsconf \n```", "```js\nvar chatInfra = io.connect('/chat_infra'),\n    chatCom = io.connect('/chat_com');\n\nvar roomName = decodeURI(\n (RegExp(\"room\" + '=' + '(.+?)(&|$)').exec(location.search) \n || [, null])[1]);\n\nif (roomName) {\n  chatInfra.on('name_set', function (data) {\n chatInfra.emit('join_room', {'name':roomName});\n\n    //EXISTING CODE\n  });\n}\n\n$(function () {\n  $('#setname').click(function () {\n    chatInfra.emit(\"set_name\", {name:$('#nickname').val()});\n  });\n});\n```", "```js\nvar roomName = decodeURI(\n (RegExp(\"room\" + '=' + '(.+?)(&|$)').exec(location.search) \n    || [, null])[1]);\n```", "```js\nif (roomName) {\n  chatInfra.on('name_set', function (data) {\n    chatInfra.emit('join_room', {'name':roomName});\n```", "```js\nvar io = require('socket.io');\n\nexports.initialize = function (server) {\n  io = io.listen(server);\n var self = this;\n\n this.chatInfra = io.of(\"/chat_infra\");\n this.chatInfra.on(\"connection\", function (socket) {\n    //EXISTING CODE\n    });\n socket.on(\"join_room\", function (room) {\n socket.get('nickname', function (err, nickname) {\n socket.join(room.name);\n var comSocket = self.chatCom.sockets[socket.id];\n comSocket.join(room.name);\n comSocket.room = room.name;\n socket.in(room.name).broadcast\n .emit('user_entered', {'name':nickname});\n });\n });\n  });\n\n this.chatCom = io.of(\"/chat_com\");\n this.chatCom.on(\"connection\", function (socket) {\n    socket.on('message', function (message) {\n      message = JSON.parse(message);\n      if (message.type == \"userMessage\") {\n        socket.get('nickname', function (err, nickname) {\n          message.username = nickname;\n socket.in(socket.room).broadcast.send(JSON.stringify(message));\n          message.type = \"myMessage\";\n          socket.send(JSON.stringify(message));\n        });\n      }\n    });\n  });\n}\n```", "```js\n socket.on(\"join_room\", function (room) {\n socket.get('nickname', function (err, nickname) {\n socket.join(room.name);\n var comSocket = self.chatCom.sockets[socket.id];\n comSocket.join(room.name);\n comSocket.room = room.name;\n socket.in(room.name).broadcast\n .emit('user_entered', {'name':nickname});\n });\n });\n\n```", "```js\n        socket.join(room.name);\n```", "```js\n var comSocket = self.chatCom.sockets[socket.id];\n        comSocket.join(room.name);\n```", "```js\n    comSocket.room = room.name;\n```", "```js\n socket.in(room.name).broadcast\n .emit('user_entered', {'name':nickname});\n      });\n```", "```js\n  socket.in(socket.room).broadcast.send(JSON.stringify(message));\n```", "```js\nhttp://localhost:3000/chatroom?room=test001 \n```", "```js\nhttp://localhost:3000/chatroom?room=test002\n```", "```js\nextends layout\n\nblock append head\n  script(type='text/javascript', src='/socket.io/socket.io.js')\n  script(type='text/javascript', src='/javascripts/rooms.js')\n\nblock content\n  section#chatrooms\n    div#new_room\n      span Start a new Room\n      input#new_room_name(type=\"text\")\n      input#new_room_btn(type=\"button\", value=\"Start\")\n    div#allrooms\n      div#header Or join a room\n      div#rooms_list\n```", "```js\nvar chatInfra = io.connect('/chat_infra');\n\nchatInfra.on(\"connect\", function(){\n chatInfra.emit(\"get_rooms\", {});\n chatInfra.on(\"rooms_list\", function(rooms){\n    for(var room in rooms){\n      var roomDiv = '<div class=\"room_div\"><span class=\"room_name\">'     + room + '</span><span class=\"room_users\">[ ' \n           + rooms[room] + ' Users ] </span>'\n           + '<a class=\"room\" href=\"/chatroom?room=' + room \n           + '\">Join</a></div>';\n\n      $('#rooms_list').append(roomDiv);\n    }\n  });\n});\n\n$(function(){\n  $('#new_room_btn').click(function(){\n window.location = '/chatroom?room=' + \n $('#new_room_name').val();\n  });\n});\n```", "```js\n  chatInfra.emit(\"get_rooms\", {});\n```", "```js\n   chatInfra.on(\"rooms_list\", function(rooms){\n```", "```js\nfor(var room in rooms){\n      var roomDiv = '<div class=\"room_div\"><span class=\"room_name\">'     + room + '</span><span class=\"room_users\">[ ' \n           + rooms[room] + ' Users ] </span>'\n           + '<a class=\"room\" href=\"/chatroom?room=' + room \n           + '\">Join</a></div>';\n\n      $('#rooms_list').append(roomDiv);\n    }\n```", "```js\n  $('#new_room_btn').click(function(){\n window.location = '/chatroom?room=' + \n $('#new_room_name').val();\n  });\n```", "```js\nthis.chatInfra.on(\"connection\", function (socket) {\n    //EXISTING CODE\n\n    socket.on(\"get_rooms\", function(){\n      var rooms = {};\n for(var room in io.sockets.manager.rooms){\n        if(room.indexOf(\"/chat_infra/\") == 0){\n          var roomName = room.replace(\"/chat_infra/\", \"\");\n rooms[roomName] = io.sockets.manager\n rooms[room].length;\n        }\n      }\n socket.emit(\"rooms_list\", rooms);\n    });\n  });\n```", "```js\nexports.rooms = function(req, res){\n  res.render('rooms', { title: 'Express Chat' });\n}\n```", "```js\napp.get('/rooms', routes.rooms);\n```", "```js\n#chatrooms{\n    margin: 20px;\n}\n\n#new_room {\n    font-size: 17px;\n}\n\n#new_room span{\n    padding-right: 15px;\n}\n\n#allrooms #header{\n    border-bottom: 1px solid;\n    border-top: 1px solid;\n    font-size: 17px;\n    margin-bottom: 10px;\n    margin-top: 16px;\n    padding: 5px 0;\n}\n\n.room_div {\n    border-bottom: 1px solid #CCCCCC;\n    padding-bottom: 5px;\n    padding-top: 12px;\n}\n\n.room_name {\n    display: inline-block;\n    font-weight: bold;\n    width: 165px;\n}\n\n.room_div a{\n    position: absolute;\n    right: 40px;\n}\n```", "```js\nextends layout\n\nblock append head\n script(type='text/javascript', src='/javascripts/landing.js')\n\nblock content\n  section#welcome\n    div Welcome\n span\n input#nickname(type=\"text\", \n placeholder=\"Enter a nickname\")\n      a#startchat(class=\"btn\") Login\n```", "```js\n$(function(){\n   $('#startchat').click(function(){\n document.cookie = \"nickname=\" + $('#nickname').val() \n + \";; path=/\";\n     window.location = \"/rooms\";\n   });\n});\n```", "```js\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path')\n , connect = require('connect');\n\nvar app = express();\n\nvar sessionStore = new connect.session.MemoryStore();\n\napp.configure(function(){\n  //EXISTING CODE\n  app.use(express.bodyParser());\n app.use(express.cookieParser('somesuperspecialsecrethere'));\n app.use(express.session({ key: 'express.sid', \n store: sessionStore}));\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\n//EXISTING CODE\n```", "```js\nvar sessionStore = new connect.session.MemoryStore();\n```", "```js\n  app.use(express.bodyParser());\n app.use(express.cookieParser('somesuperspecialsecrethere'));\n app.use(express.session({ key: 'express.sid', \n store: sessionStore}));\n  app.use(express.methodOverride());\n  app.use(app.router);\n```", "```js\nvar io = require('socket.io');\n\nexports.initialize = function (server) {\n  io = io.listen(server);\n\n io.set('authorization', function (data, accept) {\n if (data.headers.cookie) {\n data.cookie = require('cookie').parse(data.headers.cookie);\n data.sessionID = data.cookie['express.sid'].split('.')[0];\n data.nickname = data.cookie['nickname'];\n } else {\n return accept('No cookie transmitted.', false);\n }\n accept(null, true);\n });\n\n  var self = this;\n\n  this.chatInfra = io.of(\"/chat_infra\");\n  this.chatInfra.on(\"connection\", function (socket) {\n socket.on(\"join_room\", function (room) {\n var nickname = socket.handshake.nickname;\n socket.set('nickname', nickname, function () {\n socket.emit('name_set', {'name':\n socket.handshake.nickname});\n socket.send(JSON.stringify({type:'serverMessage',\n message:'Welcome to the most interesting ' +\n 'chat room on earth!'}));\n         socket.join(room.name);\n         var comSocket = self.chatCom.sockets[socket.id];\n         comSocket.join(room.name);\n         comSocket.room = room.name;\n         socket.in(room.name).broadcast.emit('user_entered', \n                      {'name':nickname});\n      });\n    });\n\n    //EXISTING CODE\n}\n```", "```js\n io.set('authorization', function (data, accept) {\n if (data.headers.cookie) {\n data.cookie = require('cookie').parse(data.headers.cookie);\n data.sessionID = data.cookie['express.sid'].split('.')[0];\n data.nickname = data.cookie['nickname'];\n } else {\n return accept('No cookie transmitted.', false);\n }\n accept(null, true);\n  });\n```", "```js\n socket.on(\"join_room\", function (room) {\n var nickname = socket.handshake.nickname;\n socket.set('nickname', nickname, function () {\n socket.emit('name_set', {'name': nickname});\n socket.send(JSON.stringify({type:'serverMessage',\n message:'Welcome to the most interesting ' +\n 'chat room on earth!'}));\n         socket.join(room.name);\n         var comSocket = self.chatCom.sockets[socket.id];\n         comSocket.join(room.name);\n         comSocket.room = room.name;\n         socket.in(room.name).broadcast.emit('user_entered', \n                      {'name':nickname});\n      });\n    });\n```", "```js\nvar chatInfra = io.connect('/chat_infra'),\n    chatCom = io.connect('/chat_com');\n\nvar roomName = decodeURI((RegExp(\"room\" + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]);\n\nif (roomName) {\n chatInfra.emit('join_room', {'name':roomName});\n\n  chatInfra.on('name_set', function (data) {\n  //EXISTING CODE\n  });\n}\n```"]