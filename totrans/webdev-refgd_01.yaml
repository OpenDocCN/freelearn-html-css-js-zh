- en: Chapter 1. HTML Elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**HyperText Markup Language** (**HTML**) is a language that annotates text.
    Annotation of text is done using elements. Using the following `p` element, as
    an example, we will see how to use HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'HTML elements also have attributes that will modify how they are rendered or
    interpreted. Attributes are added inside of the starting tag. Here is the `class`
    attribute in a `div` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: There have been multiple specifications of HTML so far, but we will just look
    at the most commonly used and important elements of HTML5\. HTML5 is the latest
    official specification, so we will be as future-proof as possible at the time
    of writing this book. You will want to follow the specifications of HTML as closely
    as possible. Most browsers are very forgiving and will render your HTML, but when
    you go beyond the specifications, you can and will run into strange rendering
    issues.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All HTML elements will have global attributes. The attributes listed for each
    element in the sections that follow are the attributes beyond the global attributes.
  prefs: []
  type: TYPE_NORMAL
- en: DOCTYPE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The DOCTYPE element defines the document type of the file, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `documentType` attribute that you can see in the preceding code lets the
    browser know the type of document you will use.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: HTML5 has a simple document type declaration, `<!DOCTYPE html>`. This lets the
    browser know that the document is HTML5\. The previous versions of HTML needed
    a formal definition of the version being used, but HTML5 has removed this for
    simplicity.
  prefs: []
  type: TYPE_NORMAL
- en: Most browsers will enforce strict adherence to the document type declared and
    try and figure out what it is based on looking at the document. This can lead
    to rendering issues, so it is recommended that you do follow the standards.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an HTML5 declaration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: html
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `html` element is the root element of the HTML document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `manifest` attribute links to a resource manifest that lists which files
    should be cached.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `html` element must directly follow the `DOCTYPE` element. This is the root
    element that all other elements must be descendants of.
  prefs: []
  type: TYPE_NORMAL
- en: The `html` element must have one `head` element and one `body` element as its
    children. All other elements will be inside these tags.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is what a simple HTML page looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Document metadata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The next elements will give metadata about the document. In addition to this,
    you can also include links to resources, such as CSS and JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: head
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `head` element is the metadata parent element. All other metadata elements
    will be children of this element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `head` element usually must have a `title` element inside it. The elements
    that can go in `head` are `title`, `link`, `meta`, `style`, `script`, `noscript`,
    and `base`. These elements are explained next.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `head` element that defines a `title` and `stylesheet`
    element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: title
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `title` element displays the title of the document. This is what is displayed
    in the browser''s tab or the browser window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The `title` element is an aptly named element. This is a required element in
    `head`, and there should only be one `title` element for a document. Here is a
    simple example of `title` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: link
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `link` element links a resource to the current document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `link` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`crossorigin`: This tells the browser whether to make the **Cross-Origin Resource
    Sharing** (**CORS**) request or not'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`href`: This indicates the URL of the resource'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`media`: This selects the media that this resource applies to'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rel`: This indicates the relationship of this resource to the document'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sizes`: This is used with `rel` when it is set to `icons`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This indicates the type of content of the resource'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `link` element has a lot of attributes, but most of the time, it is used
    for loading the CSS resources. This means that you will want to use the attributes
    `href`, `rel`, `type`, and `media` at least.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can have multiple `link` elements in a `head` element. Here is a simple
    example of how to load CSS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can also refer to the `crossorigin`, `href`, `media`, `rel`, `sizes`, and
    `type` attributes to find out more details about the `title` element.
  prefs: []
  type: TYPE_NORMAL
- en: meta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `meta` element contains metadata about the document. The syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `meta` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`content`: This states the value of either the `name` or `http-equiv` attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`http-equiv`: This attribute, in the case of HTML5, can be set to `default-style`,
    which sets the default style. Alternatively, it can be set to `refresh`, which
    can specify the number of seconds taken to refresh the page and a different URL
    for the new page if needed, for example, `http-equiv="1;url=http://www.google.com"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This states the name of the metadata.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `meta` tag has many nonstandard applications. The standardized applications
    can be viewed in [Chapter 2](ch02.html "Chapter 2. HTML Attributes"), *HTML Attributes*.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apple has many `meta` tags that will pass information to an iOS device. You
    can set a reference to an App Store application, set an icon, or display the page
    in the full screen mode, as just a few examples. All of these tags are nonstandard,
    but useful when targeting iOS devices. This is true for many other sites and companies.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use multiple `meta` tags in a `head` element. Here are two examples.
    The first example will refresh the page every 5 seconds and the other will define
    the `author` metadata:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can also refer to the `name` attribute to find out more details about the
    `meta` element.
  prefs: []
  type: TYPE_NORMAL
- en: style
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `style` element contains the style information.
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `style` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`media`: This is a media query'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scoped`: The styles contained in this element only apply to the parent element'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This sets the type of document; the default value is `text`/`css`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `style` element is usually in the `head` element. This allows you to define
    CSS styles for the current document.
  prefs: []
  type: TYPE_NORMAL
- en: The preferred method of using CSS is to create a separate resource and use the
    `link` element. This allows styles to be defined once and used everywhere on a
    website instead of defining them on every page. This is a best practice as it
    allows us to define the styles in one spot. We can then easily find and change
    styles.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple inline stylesheet that sets the font color to blue:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can also refer to the global attributes and Chapters 3-7 to know more details
    about the style element.
  prefs: []
  type: TYPE_NORMAL
- en: base
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `base` element is the base URL for the document. The syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `base` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`href`: This indicates the URL to be used as the base URL'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`target`: This indicates the default target to be used with the URL'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The base URL is used whenever a relative path or URL is used on a page. If this
    is not set, the browser will use the current URL as the base URL.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of how to set the base URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can also refer to the `target` attribute to find out more details about
    the `base` element.
  prefs: []
  type: TYPE_NORMAL
- en: script
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `script` element allows you to reference or create a script for the document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `script` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`async`: This is a Boolean attribute that tells the browser to process this
    script asynchronously. This only applies to the referenced scripts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`crossorigin`: This tells the browser whether to make a CORS request or not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`defer`: This is a Boolean attribute that tells the browser to execute the
    script after the document has been parsed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This distinguishes the URL of the script.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This defines the type of the script that defaults to JavaScript if
    the attribute is omitted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `script` element is the way to get JavaScript into your document and add
    enhanced interactivity. This can be done using a bare `script` tag and adding
    JavaScript into the element. Also, you can use the `src` attribute to reference
    an external script. It is considered a best practice to reference a script file
    as it can be reused here.
  prefs: []
  type: TYPE_NORMAL
- en: This element can be a child of `head` or can be placed anywhere in the body
    of the document. Depending on where the `script` element is located, you may or
    may not have access to the DOM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are two examples of using a `script` element. The first example will reference
    an external script, the second will be an inline `script` element, and the last
    will show how to use the `crossorigin` attribute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: noscript
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `noscript` element will be parsed if scripting is turned off in the browser.
    The syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If scripting is enabled, the content inside of this element will not appear
    on the page and the code inside it will run. If scripting is disabled, it will
    be parsed.
  prefs: []
  type: TYPE_NORMAL
- en: This element is mainly used to let the user know that the site may not work
    with JavaScript. Almost every website today not only uses JavaScript, but requires
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `noscript` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Semantic content sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The next elements are the main elements to use when adding content to the document.
    For example, using the `article` element instead of an arbitrary `div` element
    allows the browser to infer that this is the main content of the page. These elements
    should be used to give structure to a document and not be used for styling purposes.
    Semantic elements make our HTML document more accessible using an ever-increasing
    amount of different devices.
  prefs: []
  type: TYPE_NORMAL
- en: body
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `body` element is the main content section of the document. There must
    be only one main element, its syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The attributes of the `body` element include the `inline` event attributes.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `body` element is the main content section of most documents. It must be
    the second child element of `html`, and there should only be one `body` element
    in a document.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `body` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: section
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `section` element describes the content section of a document. For example,
    this can be a chapter of a book:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `section` element is a new element that was introduced in HTML5\. A `section`
    element should group the content together. While not a requirement, using a `heading`
    element as the first element in the code is a best practice. The section should
    be viewed as another part of the outline of the document. It groups related items
    into an easily targeted area. You can use this element multiple times in a document.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `section` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: nav
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `nav` element is the navigation element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `nav` element is another semantic element introduced with HTML5\. This lets
    the browser know that the content of this element is the parent and is for navigation.
    The `nav` element enhances accessibility by giving screen readers a landmark for
    navigation. This element should wrap any site navigation or other links that are
    grouped together for ease of navigation. You can use this multiple times.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of using the `nav` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: article
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `article` element is designed to wrap content that can stand on its own:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `article` element is a new element introduced in HTML5\. The `article` element
    is similar to the `section` element; in that, it denotes that the content in the
    element is the core part of the page. The `article` element should be a complete
    composition that can stand on its own. For example, in a blog, the actual blog
    post should be wrapped with an `article` element.
  prefs: []
  type: TYPE_NORMAL
- en: Content can then be further broken down using either an `article` element or
    a `section` element. There is no standard rule for when to use either. However,
    both should be related to the content in the outer `article` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `article` element being used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Headings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `heading` elements are the elements that specify different levels of headings
    according to their importance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: These should be used to give relative importance to different headings. For
    example, `h1` should be used for the title of the document. The importance of
    a heading goes down as the heading value goes up, that is, `h6` is the least important
    level of heading in the example that follows.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example using all the headings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the global attributes to learn the `heading` element in
    more detail.
  prefs: []
  type: TYPE_NORMAL
- en: header
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `header` element groups the content that is considered to be the header
    for a particular group of content, its syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `header` element is usually one of the first content elements on the page.
    It will most likely contain navigation options, a logo, and/or a search box. The
    header is usually repeated on multiple pages of a website. Each section or article
    can also contain a header. This is a new element introduced in HTML5.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `header` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the global attributes to find out about the `header` element
    in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: footer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `footer` element provides a footer of a particular group of content, its
    syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `footer` element wraps all the content that is considered to be the footer
    of the document. Usually, this will include copyright, author, and/or social media
    links. Of course, what you decide to put into a footer is arbitrary. Each section
    or article can also contain a footer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `footer` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: address
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `address` element is used for the contact address of the author or organization,
    its syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the `address` element when you have the contact information of the user.
    The `address` element will add semantic value to the content, contrary to a regular
    `div` element.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, this will be placed in the footer, but it can be used in an article
    or body section. It will apply to the nearest `article` element or to the entire
    document. Do not use any of the content section elements in an `address` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the `address` element in use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: aside
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `aside` element is for supplemental content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the `aside` element to highlight the content that is tied to the main article.
    Some examples in the context of the blog would be the author's profile, other
    posts by this author, or even related advertisements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of `aside`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: p
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `p` element is known as the paragraph element. This is a block element,
    its syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `p` element should be used to distinguish between separate paragraphs in
    a document. This element is associated with the `text` and `inline` elements.
    You will not want to use a `div` element, for example. If you find yourself wanting
    to do this, you may want to build your document differently.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a couple of paragraphs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Content sections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `content` sections are quite similar to the semantic content sections. The
    main difference is that the use of all the given elements are not driven by the
    outline or purpose of the document like the semantic sections are.
  prefs: []
  type: TYPE_NORMAL
- en: hr
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `hr` element is the horizontal rule element, its syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, the `hr` element will draw a horizontal line in the content. You
    can change the look of this element through CSS.
  prefs: []
  type: TYPE_NORMAL
- en: 'This element should never have any content inside of it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: pre
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `pre` element is the preformatted text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The text in an HTML document is usually not shown in the browser with the same
    whitespace or line breaks as it is in a text document. The `pre` element allows
    you to display text in the same way as it is in the document. Whitespace and line
    breaks will be preserved.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of using line breaks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: blockquote
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of a `blockquote` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `cite` attribute is used in the `blockquote` element to point to the URL
    of the cited document.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `blockquote` element is used when pulling a quotation out of a document
    or text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: ol
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `ol` element is the ordered list element, which has the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `ol` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`reversed`: This is a Boolean value. It denotes that the list is in a reverse
    order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`start`: This accepts a value as a number to start with.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This will change the type of the numbered elements. By default, we
    can have a numbered list (`1`), but we can change to other types, such as lowercase
    letters (`a`), uppercase letters (`A`), lowercase Roman numerals (`i`), and uppercase
    Roman numerals (`I`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `ol` element can be used in the same situations as a `ul` element, except
    that an `ol` element is numbered instead of bulleted. For example, you would use
    a `ul` element for a grocery list and an `ol` element for a numbered set of instructions.
    You can have multiple `ul` or `ol` elements nested within each other.
  prefs: []
  type: TYPE_NORMAL
- en: The items in the list will be the `li` elements.
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of a list that uses Roman numerals and starts at `10`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `ul` and `li` elements to find out more about the
    `ol` element.
  prefs: []
  type: TYPE_NORMAL
- en: ul
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `ul` element is an unordered list element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `ul` element can be used in the same situations as an `ol` element, but
    a `ul` element will be bulleted and an `ol` element will be numbered.
  prefs: []
  type: TYPE_NORMAL
- en: When you style this list, you should use CSS and not the older HTML 4 attributes.
  prefs: []
  type: TYPE_NORMAL
- en: You can nest the `ul` and `ol` elements multiple times.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `ul` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `ol` and `li` elements to learn more about the `ul`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: li
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `li` element is the list item element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `value` attribute is used in the `li` element with the `ol` element and
    it is the value of the item in the ordered list.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will use the `li` element for each item in a list.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `ol` and `ul` elements to know more details about
    the `li` element.
  prefs: []
  type: TYPE_NORMAL
- en: dl
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `dl` element is the definition list element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `dl` element is a list where the items have a term and definition; however,
    the `dl` element can be used for more than just terms and definitions.
  prefs: []
  type: TYPE_NORMAL
- en: You must use the `dt` element followed by the `dd` element when building the
    list for the `dl` element. Each `dt` element can have multiple `dd` elements after
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `dt` and `dd` elements to find out more about the
    `dl` element.
  prefs: []
  type: TYPE_NORMAL
- en: dt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `dt` element is the definition term element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `dt` element is the first item in a definition list, the `dd` element being
    the other item.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `dl` and `dd` elements to find out more about the
    `dt` element.
  prefs: []
  type: TYPE_NORMAL
- en: dd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `dd` element is the definition description element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `dd` element is the second item in a definition list, the other one being
    the `dt` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `dl` and `dd` elements to find out more about the
    `dd` element.
  prefs: []
  type: TYPE_NORMAL
- en: figure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `figure` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `figure` element is a new element introduced with HTML5\. In much the same
    way as an article adds some meaning where there was none, a figure adds meaning
    too. A figure is an image or any other item of information that is related to
    the document. This has more meaning than just using an `img` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `figcaption` element to find out more about the `figure`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: figcaption
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `figcaption` element is the figure caption element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `figcaption` element was introduced in HTML5 along with the figure. This
    element provides the caption for a figure. This element must be inside a `figure`
    element and it must be either the first or last child of the `figure` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple example of the `figcaption` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `figure` element to find out more about the `figcaption`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: div
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `div` element is the division element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `div` element is one of the most used elements in HTML today. It is the
    element used to split up your document into arbitrary divisions. The `div` element
    has no default styling. These divisions could be for placement, styling, or any
    other reason. A `div` element does not affect the semantic meaning of the document.
    It should only be used when no other element suits your requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: main
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The syntax of the `main` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `main` element should have the main content of the document inside it. You
    cannot have this element as a descendant of the `article`, `aside`, `footer`,
    `header`, or `nav` elements. This differs from an article, in that, an article
    should be a self-contained element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `main` element in use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: Inline elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following elements can all wrap text- and block-level elements to give them
    functionality, style, and meaning.
  prefs: []
  type: TYPE_NORMAL
- en: a
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `a` element is the anchor element. This is where HTML gets the **HyperText**
    (**HT**), the syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the attributes that are used in the `a` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '`download`: This attribute lets the browser know that the item should be downloaded.
    The dialog will default to the filename in this attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`href`: This is the link target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`media`: This states the media that the stylesheet should apply to based on
    a media query.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ping`: This makes a URL to ping and notify if the link is followed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rel`: This states the relationship of the document being linked to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`target`: This states where the target link is to be displayed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This states the MIME type of the linked resource.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `a` element is one of the most important and useful elements. It allows
    you to link documents together and you can easily jump between elements. We can
    say that the Web would not be as popular as it is now without this very easy-to-use
    element.
  prefs: []
  type: TYPE_NORMAL
- en: The link can be that of an `anchor` tag in the document, a relative URL, or
    any external resource. When linking to an `anchor` tag in the current document,
    use the `a` tag and the `id` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: The content you put inside the `a` element will become part of what the user
    can click on to follow the link. This includes the `text`, `img`, and `div` elements,
    to name a few.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of an `img` element with an image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is an example of a PDF document that will be downloaded; this will track
    each click:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: abbr
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `abbr` element is the abbreviation element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `abbr` element is used to show what an abbreviation stands for. You should
    put the full word in the `title` attribute. Most browsers will display this as
    a tooltip when you hover over this element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: bdo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `bdo` element is the bi-direction override element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `dir` attribute is used in the `bdo` element, which gives the direction
    of the text. Its values can be `ltr`, `rtl`, and `auto`.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `bdo` element will override the current direction of the text for the direction
    defined in the element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: br
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `br` element is the line break element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `br` element adds a line break. This is needed as line breaks in text are
    ignored when rendered in the browser. This should not be used to help place elements,
    as that is the job of CSS.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: cite
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `cite` element is the citation element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `cite` element is used to cite another source. Most browsers will render
    this in italics.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `code` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `code` element is used to display the programming code in a document. The
    browser will use a monospace font for it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: dfn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `dfn` element is the defining instance element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `dfn` element is used to create a defining instance or the first time a
    specific word is introduced and explained.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `dfn` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: em
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `em` element is the emphasis element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `em` element is used to add more emphasis to a specific word or phrase.
    By default, browsers will render this in italic font, but it should not just be
    used for italics.
  prefs: []
  type: TYPE_NORMAL
- en: kbd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `kbd` element is the keyboard input element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `kbd` element is used for text that the user should input. This does not
    mean that the user inputs data into the element, rather they will enter it into
    a window, console, or some application on their computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: mark
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `mark` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `mark` element is used to highlight text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: q
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `q` element is the quote element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `cite` attribute used in the `q` element states the URL of the source of
    the quote.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `q` element is used for short quotes. For longer quotes, use `blockquote`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `blockquote` attribute to learn more about the `q`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: s
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `s` element is the strikethrough element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `s` element should be used when a piece of information in the document is
    no longer accurate. This is different than a revision made to the document.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: samp
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `samp` element is the sample output element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `samp` element is used to show the sample output from a command or program.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: small
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `small` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `small` element is used to make the text smaller. This is usually done with
    text such as the copyright or legal text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: span
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `span` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `span` element is much like the `div` element; in that, it is just an arbitrary
    container. The `div` element is a block-level element, and the `span` element
    is an inline element. The element does not add any semantic meaning to the text
    or document. Often, it is used to add a CSS style to the text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: strong
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `strong` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `strong` element should be used when certain text needs more importance.
    This carries some semantic meaning. The `strong` element's default style in most
    browsers is bold. This should not then be interchangeable with the `b` element,
    as that does not carry any semantic meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: sub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `sub` element is the subscript element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `sub` element will render the text as a subscript.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: sup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `sup` element is the superscript element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `sup` element will render the text as a superscript.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: time
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `time` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `datetime` attribute used in the `time` element gives a string that is the
    date and time value.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `datetime` element allows browsers to easily parse dates out of a document.
    You can wrap a date or the description of a date (tomorrow or July 4, for example)
    and still have an exact date for the browser to read.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: var
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `var` element is the variable element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `var` element is used for variables in a mathematical expression or for
    programming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: wbr
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `wbr` element is the word break opportunity element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `wbr` element is a new element that was introduced with HTML5\. We use this
    element to let the browser know of a good spot to break between words. This does
    not force a break, but if a break is needed, then the browser will respect the
    element.
  prefs: []
  type: TYPE_NORMAL
- en: It is an empty tag, meaning that it should not have an ending tag.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: Embedded content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following elements are used to embed media or other objects into the document.
  prefs: []
  type: TYPE_NORMAL
- en: img
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `img` element is the image element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `img` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`alt`: This is the alternate text for the image. Use this to describe the image.
    This is used to enhance accessibility.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`crossorigin`: This lets the browser know whether this image should be fetched
    with a CORS request. If the image will be modified in a canvas element and not
    from the same domain name, then a CORS request must be used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`height`: This is an attribute to set the height of the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ismap`: This lets the browser know whether the image is used in a server-side
    map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sizes`: This is a list of media conditions that will map to a size. This is
    used to help the browser determine which image to use. By default, this will be
    100 VW, which is 100% of the view width.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the most important attribute, it is the image URL.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`srcset`: This is a list of multiple images that can be used for display on
    our web page. This is used to target different screen sizes or pixel densities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is an attribute to set the width of the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `img` element is used if you want an image in the document. This element
    has many attributes, but the `src` and `alt` attributes are the only required
    attributes. The `alt` attribute should be used to describe the image in almost
    100% of the cases. The main exception is when the image is only used as a decorative
    image, for example, when an image is used instead of a horizontal rule. The width
    and height can be used if the image is of a different size than what is needed
    on the page; otherwise, it defaults to the size of the image.
  prefs: []
  type: TYPE_NORMAL
- en: The `crossorigin` element can be confusing. It is used to ensure that you have
    ownership of an image before you modify the image in a canvas element. The image
    needs to either be from the same fully qualified domain name or the server's response
    must let the browser know whether the current domain can use the image.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, `srcset` is used to give the browser a list of images that it can use.
    This is done with a comma-separated list of URLs and a descriptor. A descriptor
    can either be a width descriptor, which would be a number followed by `w`, or
    a pixel descriptor, which is a number followed by `x`. The width descriptor tells
    the browser the width of the image. The pixel descriptor tells the browser the
    pixel density it should use for the image.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The width descriptor can also be used by the browser when the pixel density
    changes. For example, if you have an image that is double the resolution and the
    pixel density doubles as well, the browser will choose the larger resolution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `sizes` element is used along with `srcset` to help the browser identify
    a break point. This is done using a media condition, for example, `"(min-width:
    1600px) 25vw, 100vw"`. This states that if the width of the page is at least `1600`
    pixels, the images will be 25% of the view width, otherwise the view width is
    100%. This helps the browser know where you want a break point and how large you
    want the image to be.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The best way to think about `srcset` is that you are letting the browser know
    about all the images that can be used in a specific `img` element. You include
    the information that the browser is most concerned about—width and pixel density—and
    let the browser choose.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples. The first example is a simple `img` tag and the next
    one uses `crossorigin`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is a `srcset` example that lets the browser choose the image based on
    pixel density:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is an example using `srcset` and widths:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: iframe
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `iframe` element is the inline frame element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `iframe` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`height`: This is the attribute to set the height.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This states a name that can be used in the target attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`seamless`: This makes `iframe` appear as part of the content of the document.
    This will apply the outer context CSS and enables us to open links in the outer
    context.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the URL of the embedded document.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is the attribute to set the width.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `iframe` element is used to embed another full HTML document inside the
    current document.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example that loads the Google homepage and another that loads Packt
    Publishing''s page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: embed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `embed` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `embed` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`height`: This is the attribute to set the height'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the URL of the object to be embedded'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This is the MIME type of the object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is an attribute to set the width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `embed` element is used to embed other objects in the document. There are
    other elements for embedding objects as well, depending on their type. For example,
    you can embed a video using the video element, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `audio`, `video`, and `object` elements to learn more
    about the `embed` element.
  prefs: []
  type: TYPE_NORMAL
- en: object
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `object` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the attributes that are used in the `object` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '`data`: This is the URL of the object to be embedded'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`height`: This is the attribute to set the height'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This is the MIME type of the object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is the attribute to set the width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `object` element can be used very much like the `embed` element. This has
    historically been used for the `Flash` objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `audio`, `video`, `embed`, and `param` attributes
    to find out more about the `object` element.
  prefs: []
  type: TYPE_NORMAL
- en: param
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `param` element is the parameter element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `param` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`name`: This is the name of the parameter'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value`: This is the value of the parameter'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `param` element defines a parameter for the object element. The parent of
    this element should be an `object` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example. This example is useful when using objects on older browsers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: video
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `video` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `video` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`autoplay`: This is a Boolean attribute that tells the browser to start playing
    the video as soon as it can play after the loading has stopped'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`buffered`: This is a `read` object that tells how much of the video has buffered'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`controls`: This is a Boolean attribute to decide whether to display the controls'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`crossorigin`: This attribute is used make a CORS request if you plan on modifying
    the video in a canvas and the video is not hosted at the same fully qualified
    domain name'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`height`: This is the attribute to set the height'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loop`: This states whether or not to loop the video'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`muted`: This states whether or not to mute the audio'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`played`: This is a `read` object, which reads how much of the video has been
    played'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`poster`: This is a URL of an image that will be displayed until the video
    can played'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the URL of the video'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is the attribute to set the width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `video` element is a new element introduced in HTML5\. You can use this
    to play a video directly in the browser. This is very useful as the user does
    not need a plugin or special player to view the video. In addition to this, you
    can use the `video` element as a source for the `canvas` element.
  prefs: []
  type: TYPE_NORMAL
- en: You can also use the `source` element to include multiple sources in case the
    browser can only play a certain type of file. If the browser does not support
    the `video` element or the file type, you can put the fallback content into the
    element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example using the `video` element and another that demonstrates
    possible values for all of the attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `source` and `track` attributes to find out more about
    the `video` element.
  prefs: []
  type: TYPE_NORMAL
- en: audio
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `audio` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `audio` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`autoplay`: This is the attribute in which the browser will start playing the
    audio as soon as it can without loading'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`buffered`: This is the attribute that has the buffered time ranges'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`controls`: This is the attribute that has the browser display controls'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loop`: This is the attribute that decides whether or not to loop the audio'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`muted`: This is the attribute that decides whether or not to mute the audio'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`played`: This is the attribute that has the time ranges of the audio played'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the attribute that gives the URL of the audio'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`volume`: This is the attribute that ranges the volume from 0.0 to 1.0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `audio` element was introduced in HTML5\. You can add an audio to your page
    and make the browser play it.
  prefs: []
  type: TYPE_NORMAL
- en: You can also use the `source` element to include multiple sources in case the
    browser can play a certain type of file. If the browser does not support the audio
    element or the file type, you can put fallback content into the element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example using the `audio` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `source` and `track` attributes to find out more about
    the `audio` element.
  prefs: []
  type: TYPE_NORMAL
- en: source
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `source` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `source` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`src`: This is the URL of the resource'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This is the MIME type of the resource'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `source` element is used to add multiple sources to the `audio`, `picture`,
    and `video` elements. It must be a child of one of these elements. You can use
    this to specify multiple formats of the same resource. For example, you can have
    two different video encodings for a video. If the browser cannot play the first,
    it will fall back to the other.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example with an `audio` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `audio` and `video` attributes to find out more about
    the `audio` element.
  prefs: []
  type: TYPE_NORMAL
- en: track
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `track` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the attributes that are used in the `track` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '`default`: This states whether the chosen track is the default track or not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kind`: This states the different kinds of tracks that can be loaded. Here
    are the values: `subtitles`, `captions`, `descriptions`, `chapters`, or `metadata`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`label`: This is the title of the track.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This is the URL of the resource.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will mainly use the `track` element to add captions or subtitles to videos.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example video with captions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: Tables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tables are useful for showing data. They make defining rows and columns very
    easy. In the past, tables were used to create layouts, but today, that is done
    with CSS. They should be used to only display the tabular data.
  prefs: []
  type: TYPE_NORMAL
- en: table
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `table` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `table` element is the root element for creating a table. All the other
    elements in this section must be children of this element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple example of the `table` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: caption
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `caption` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `caption` element will be the title of the table. This element must be the
    first child of the `table` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: colgroup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `colgroup` element is the column group element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `span` attribute states the number of columns the group spans.
  prefs: []
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `colgroup` element is used to define styles that are common to all columns
    or groups of columns. This element is not as useful as it once was as the new
    CSS selectors can target all the columns and even some specific columns.
  prefs: []
  type: TYPE_NORMAL
- en: tbody
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `tbody` attribute is the table body element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `tbody` attribute is the main part of a table. All of the data rows and
    columns should go in this element. This element should have one or more `tr` elements
    as its children.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: thead
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `thead` element is the table head element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `thead` element is the row that has all of the column headings. It must
    appear before the `tbody` or `tfoot` elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: tfoot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `tfoot` element is the table footer element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `tfoot` element is the footer for the table. It must be used after any `thead`
    elements, but can be either before or after `tbody`. The placement of the `tfoot`
    element does not affect where it is rendered, which is always at the bottom.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: tr
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `tr` element is the table row element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `tr` element is the row element. Every time you need another row in a table,
    use this element. This element can be the child of a `table`, `tbody`, `thead`,
    or `tfoot` element. You must use either a `td` or `th` as its child.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: td
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `td` element is the table cell element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `td` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`colspan`: This tells how many columns it will span as an integer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rowspan`: This tells how many rows the `rowspan` attribute will span as an
    integer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`headers`: This is a space-separated list of strings that match the ID of any
    `th` element'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `td` element is the basic table column element. The `colspan` and `rowspan`
    attributes allow you to make the column wider and taller, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: th
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `th` element is the table header cell element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `th` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`colspan`: This states the number of columns the `colspan` attribute will span
    as an integer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rowspan`: This states the number of rows the `rowspan` attribute will span
    as an integer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `th` element is used when we add a column to the `thead` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: Forms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Forms are great for getting information from the user. They usually have multiple
    elements inside them that accept input from the user. The data acquired from the
    input of the user is then sent to the server to process.
  prefs: []
  type: TYPE_NORMAL
- en: Form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `form` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `form` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`accept-charset`: This is a list of character encodings that the server accepts.
    This can be a space- or comma-delimited list.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`action`: This is the URL that will process the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`autocomplete`: This lets the browser know whether it can autocomplete this
    form with previous values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`enctype`: This sets the MIME type for the content being sent to the server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`method`: This is the HTTP method that will be used to submit the form. It
    can be `Post` or `Get`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This is the name of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`novalidate`: This tells the browser not to validate the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`target`: This states where the response will be displayed. This can be: `_self`,
    `_blank`, `_parent`, or `_top`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `form` element is the root element of a form in a document. When submitted,
    the form will contain all the data that is entered into the different elements
    inside of the form.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple form of the syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: fieldset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `fieldset` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `fieldset` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`disabled`: This disables all the elements in the fieldset'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This is the ID of the form the `form` attribute belongs to'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This is the name of fieldset'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `fieldset` element allows us to group related inputs together. The default
    style of most browsers is to put a border around the fieldset.
  prefs: []
  type: TYPE_NORMAL
- en: If the first element is a `legend` element, then the fieldset will use that
    as its label.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of using the `fieldset` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `legend` attribute to find out more about the `fieldset`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: legend
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `legend` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `legend` element will become the label of the `fieldset` element that it
    is a child of.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `fieldset` element to find out more about the `legend`
    element.
  prefs: []
  type: TYPE_NORMAL
- en: label
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `label` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `label` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`accesskey`: This is a shortcut for the `accesskey` element'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`for`: This is the ID of a form element that this is the label for'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This is the ID of the form the `form` attribute is associated with'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `label` element is for labeling inputs. You can either put the element in
    the label or use the `for` attribute. When the label is correctly linked to an
    input, you can click the label and the cursor will be in the input.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example that covers each different way of labeling an element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: input
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `input` element is as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `input` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`accept`: This is used to specify which file types are accepted for the web
    page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`autocomplete`: This says whether the browser can autocomplete this input based
    on previous values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`autofocus`: This lets the browser automatically focus on the element. This
    should only be used on one element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`checked`: This is used with the radio or checkbox. This will select the value
    on page load.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled`: This says whether or not to disable the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This states the ID of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`formaction`, `formenctype`, `formmethod`, `formnovalidate`, and `formtarget`:
    These will override the form''s value if these attributes are associated with
    a button or image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`height`: This is used to set the height of the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`inputmode`: This gives a hint to the browser of what keyboard to display.
    For example, you can use numeric to specify only the keypad.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max`: This is the maximum number or date-time of the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`maxlength`: This is the maximum number of characters that can be accepted
    in the web page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`min`: This is the minimum number or date-time of the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`minlength`: This is the minimum number of characters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multiple`: This says whether there can be multiple values or not. This is
    used with `email` or `file`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`placeholder`: This is the text that is displayed in the element when there
    is no value assigned to this attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`readonly`: This makes the element of the read-only format.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`required`: This is the element that is required to be assigned a value and
    cannot be blank.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size`: This is the size of the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src`: This will be the URL of the image if it is of the `img` type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`step`: This is used with the `min` and `max` attributes to determine the incremental
    steps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tabindex`: This is the order of the elements when using tab.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: Refer to the next section for the description.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value`: This is the initial value of the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is the attribute to set the width.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `input` element is the main way to get data from the user. This element
    can vary quite a bit based on the type that is used. HTML5 has added a few inputs
    that also give you validation. For example, the `email` type will also validate
    that the e-mail is a valid `email`. In addition to this, the type can give hints
    to the browser about what keyboard to display. This is important for mobiles,
    which have many different virtual keyboards. For example, the `tel` type will
    show a number pad instead of the regular keyboard. Here is a rundown of the different
    types of keyboards and their description:'
  prefs: []
  type: TYPE_NORMAL
- en: '`button`: This is a button.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`checkbox`: This is a checkbox.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`color`: For most browsers, this will create a color picker; however, it is
    not required by HTML5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`date`: This creates a date picker.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datetime`: This creates a date and time picker using a time zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datetime-local`: This creates a date and time picker without a time zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`email`: This is a text input for e-mail addresses. This type validates e-mails.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`file`: This selects a file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hidden`: This attribute will not be displayed, but the value will still be
    part of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`image`: This essentially creates an image button.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`month`: This can enter the month and year.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`number`: This is used for a floating point number.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`password`: This is a text input where the text is not shown.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`radio`: This is a control to group multiple elements using the same name attribute.
    Only one from the provided list can be selected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`range`: This a way to select a range of numbers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`reset`: This resets the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`search`: This is a text input.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`submit`: This is a button that will submit the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tel`: This is an input to enter a phone number.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text`: This is your basic text input.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time`: This is the time without a time zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`url`: This an input to enter a URL. This will do validation as well.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`week`: This is to enter the week number.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an example of the `text`, `e-mail`, and `tel` inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: button
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `button` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `button` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`autofocus`: This lets the browser automatically focus on the element that
    this is an attribute of. This should only be used on one element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled`: This states whether or not to disable the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This is the ID of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`formaction`, `formenctype`, `formmethod`, `formnovalidate`, and `formtarget`:
    These will override the form''s value if this is a button or image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This is the name of the button for the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: This changes what the button does. The values are `submit`—which submits
    the form, `reset`— which resets the form, `button`—which is the default that does
    nothing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value`: This is the initial value of the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `button` element creates a button that can be clicked on. Changing the `type`
    attribute will change its behavior.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `reset` and `submit` buttons:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: select
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `select` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `button` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`autofocus`: This lets the browser automatically focus on this element. This
    should only be used on one element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled`: This states whether or not to disable the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This is the ID of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multiple`: This states whether or not multiple items can be selected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This is the name of the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`required`: This checks whether the option needs a value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size`: This determines the number of rows for the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `button` element is used with the `option` element. Multiple `option` elements
    can be added to the list to select or choose from. The value of the selected option
    is used when the form is submitted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `optgroup` and `option` attributes to find out more
    about the `button` element.
  prefs: []
  type: TYPE_NORMAL
- en: optgroup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `optgroup` element is the option group element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `optgroup` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`disabled`: This disables the group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`label`: This is the heading in the drop-down menu'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `optgroup` element allows you to group options together. The children of
    this element need to be the `option` elements. They are not selectable and do
    not have a value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the `outgroup` element with car makes and models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `option` and `select` elements to learn more about
    the `optgroup` element.
  prefs: []
  type: TYPE_NORMAL
- en: option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `option` element is as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `option` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`disabled`: This states whether or not the element is disabled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`selected`: This states whether or not the option is selected. We can set only
    one option per selected element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value`: This states the value of the `option`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `option` elements are the actual items in the `select` element. They can
    either be the child of a `select` or `optgroup` element.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also refer to the `select` and `optgroup` elements to find out more
    about the `option` element.
  prefs: []
  type: TYPE_NORMAL
- en: textarea
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `textarea` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `textarea` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`autocomplete`: This states whether the browser can autocomplete this input
    based on previous values or not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`autofocus`: This lets the browser automatically focus on this element. This
    should only be used on one element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cols`: This states the width of the `textarea` element in characters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled`: This states whether or not to disable the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`form`: This is the ID of the form.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`maxlength`: This is the maximum number of characters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`minlength`: This is the minimum number of characters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name`: This is the name of the element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`placeholder`: This is the text that is displayed in the element when there
    is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`readonly`: This makes the element read-only.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`required`: This states that the element is required and cannot be blank.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rows`: This states the number of rows for `textarea`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`spellcheck`: This states whether or not the element should have the spelling
    checked.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wrap`: This states how the lines are wrapped.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will use this when you need more text than just a single line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: Drawing elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In previous versions of HTML, if you wanted a graphic or image, you had to create
    it in another application and use the `img` element to pull it into your document.
    HTML5 has brought some new elements and features to replace the old elements that
    allow you to draw your own images in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: canvas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The syntax of the `canvas` element is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `canvas` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`height`: This is an attribute to set the height'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is an attribute to set the width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `canvas` element is used for drawing. You can use JavaScript to draw lines,
    shapes, and images; pull frames from videos; and use WebGL, to name just a few
    features. The HTML element is just the canvas (aptly named!) that you use to make
    a drawing. All of the interaction happens in JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a small `canvas` element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: svg
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `svg` element is the **Scalable Vector Graphics** (**SVG**) element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The attributes that are used in the `svg` element are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`height`: This is the attribute that sets the height.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`viewbox`: This sets the bounds for the element. It takes four numbers that
    map to `min-x`, `min-y`, `width`, and `height`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: This is the attribute that sets the width.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: SVG is not a true HTML element. It is its own specification with many elements
    and attributes. There are books written entirely about SVG. This element is here
    because you can now create inline SVG in an HTML document. This gives you a lot
    of flexibility with two-dimensional drawings that images do not give you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example that demonstrates the difference between height, width,
    and viewport. The viewport takes up the bounds of the element, and height and
    width give the element its size:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
