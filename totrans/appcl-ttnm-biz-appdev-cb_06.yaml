- en: Chapter 6. Using Location Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 使用位置服务
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Native geolocation using basicGeo
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用basicGeo进行原生地理位置
- en: Using the Ti.GeoProviders framework for geolocation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ti.GeoProviders框架进行地理位置
- en: Multitenant geolocation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多租户地理位置
- en: Calculating distance between addresses
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算地址之间的距离
- en: Background geolocation management
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景地理位置管理
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Until the proliferation of mobiles, it was often challenging to tell the location
    of your users, making it difficult to provide location-based services. Now, almost
    every app developer has access to real-time geolocation information directly from
    the user's device.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备普及之前，往往很难确定用户的位置，这使得提供基于位置的服务变得困难。现在，几乎每个应用开发者都可以直接从用户的设备中获取实时地理位置信息。
- en: With the globally mobile nature of today's employees, providing location-aware
    apps to your enterprise is just as important, if not more so as in the consumer
    market. Geolocation is playing a large role in enterprise organizations across
    a variety of domains including, fleet management, shipment tracking, sales routing,
    or simply providing real-time relevant information on resources available to mobile
    employees.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于当今员工的全局移动性，为您的企业提供具有位置感知的应用程序与消费市场一样重要，甚至更为重要。地理位置在包括车队管理、货物运输跟踪、销售路线规划或为移动员工提供实时相关资源信息在内的多个领域的企业组织中发挥着重要作用。
- en: Through a series of location service examples, this chapter outlines a variety
    of different approaches you can leverage in your Enterprise Titanium app.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一系列位置服务示例，本章概述了您可以在您的企业钛金应用中利用的各种不同方法。
- en: Native geolocation using basicGeo
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用basicGeo进行原生地理位置
- en: Android and iOS both provide powerful geolocation platform APIs to find the
    geographical latitude and longitude of a given address. You can use the `basicGeo`
    module to access these platform APIs in your Titanium module.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓和iOS都提供了强大的地理位置平台API，用于查找给定地址的地理纬度和经度。您可以使用`basicGeo`模块在您的钛金模块中访问这些平台API。
- en: 'This recipe discusses how to leverage this module in your Titanium app to perform
    forward and reverse geolocation operations. The following screenshots illustrate
    this recipe running on both an iPhone and an Android device:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱讨论了如何在您的钛金应用中利用此模块执行正向和反向地理位置操作。以下截图展示了此食谱在iPhone和安卓设备上的运行情况：
- en: '![Native geolocation using basicGeo](img/5343OT_06_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![使用basicGeo进行原生地理位置](img/5343OT_06_01.jpg)'
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This recipe uses the `benCode.basicGeo` native module. This module can be downloaded
    from the source code provided by the book, or individually through the links provided
    in the *See also* section at the end of this recipe. Installing these in your
    project is straightforward. Simply copy the `modules` folder into your project
    as highlighted in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱使用`benCode.basicGeo`原生模块。此模块可以从本书提供的源代码中下载，或者通过本食谱末尾的“另请参阅”部分提供的链接单独下载。将这些模块安装到您的项目中很简单。只需将`modules`文件夹复制到您的项目中，如以下截图所示：
- en: '![Getting ready](img/5343OT_06_02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/5343OT_06_02.jpg)'
- en: 'After copying the `modules` folder, you will need to click on your **tiapp.xml**
    file in Titanium Studio and add a reference to the `bencoding.basicgeo` module
    as shown in the following screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制`modules`文件夹后，您需要在Titanium Studio中单击您的**tiapp.xml**文件，并添加对`bencoding.basicgeo`模块的引用，如下截图所示：
- en: '![Getting ready](img/5343OT_06_03.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/5343OT_06_03.jpg)'
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you have added the `bencoding.basicgeo` module to your project, you next
    need to create your application namespaces in the `app.js` file and use `require`
    to import the module into your code as the following code snippet demonstrates:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将`bencoding.basicgeo`模块添加到您的项目中，接下来您需要在`app.js`文件中创建您的应用程序命名空间，并使用`require`将模块导入到您的代码中，以下代码片段展示了如何进行：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Adding availability helpers
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加可用性助手
- en: 'With an ever-increasing number of devices each having different capabilities,
    it is a common requirement to provide progressive enhancements based on the ability
    of sensors. The availability feature in the `basicGeo` module provides a series
    of properties that can be used to determine the capabilities of the devices. The
    following snippet shows how to create the `Availability` proxy, for later use
    in this recipe:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 随着设备数量的不断增加，每个设备都有不同的功能，根据传感器的能力提供渐进式增强是一个常见需求。`basicGeo`模块中的可用性功能提供了一系列属性，可以用来确定设备的功能。以下代码片段展示了如何创建`Availability`代理，以便在后面的食谱中使用：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Adding the location services purpose
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加位置服务目的
- en: To use location services on iOS, Apple requires a purpose or reason for the
    app to access the GPS. On first request, this message will be used in the message
    presented to the user for approval to use their device's location services. The
    following snippet demonstrates how to add this purpose to the `basicGeo` module.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 iOS 上，Apple 要求应用程序访问 GPS 有一个目的或原因。在首次请求时，此消息将用于向用户展示的消息中，以获得使用其设备位置服务的批准。以下代码片段演示了如何将此目的添加到
    `basicGeo` 模块。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Building the recipe UI
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建菜谱 UI
- en: 'This following code snippet describes how to create the UI shown in this recipe''s
    earlier screenshots:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段描述了如何创建本菜谱早期截图所示的 UI：
- en: The first step is to create the `Ti.UI.Window` to which all visual elements
    will be attached.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建一个 `Ti.UI.Window`，所有视觉元素都将附加到该窗口。
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next a `Ti.UI.TextField` is added to the recipe's `Ti.UI.Window`. The contents
    of this `Ti.UI.TextField` will be used during the forward geolocation lookup detailed
    later in this recipe.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将一个 `Ti.UI.TextField` 添加到菜谱的 `Ti.UI.Window` 中。这个 `Ti.UI.TextField` 的内容将在稍后本菜谱中详细描述的前向地理定位查找过程中使用。
- en: '[PRE4]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The next step in this recipe is to add a `Ti.Map.View` to the recipe's `Ti.UI.Window`.
    This UI component will be used to display the address entered in the `txtAddress
    Ti.UI.TextField`.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本菜谱的下一步是向菜谱的 `Ti.UI.Window` 添加一个 `Ti.Map.View`。这个 UI 组件将用于显示在 `txtAddress Ti.UI.TextField`
    中输入的地址。
- en: '[PRE5]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Working with place objects
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理地点对象
- en: When performing geolocation lookups, the `basicGeo` module returns a collection
    of places that match the address provided. The `placeHelpers` object provides
    convenient functions for working with the results returned from the `basicGeo`
    module.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行地理定位查找时，`basicGeo` 模块返回一个与提供的地址匹配的地点集合。`placeHelpers` 对象提供了方便的函数来处理从 `basicGeo`
    模块返回的结果。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `address` function provides a formatted address from a `basicGeo` place
    object. This is used by the "find current location" feature in this recipe.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`address` 函数提供了一个从 `basicGeo` 地点对象中格式化的地址。这在本菜谱的“查找当前位置”功能中使用。'
- en: '[PRE7]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The Android reverse geolocation API provides an `address` field already formatted.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Android 反向地理定位 API 已经提供了一个格式化的 `address` 字段。
- en: '[PRE8]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In iOS, the address information is provided as an array of lines. The following
    method converts these address lines into a formatted string:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 iOS 上，地址信息以行数组的形式提供。以下方法将这些地址行转换为格式化字符串：
- en: '[PRE9]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `addToMap` methods add the place information provided by the `basicGeo`
    reverse geolocation to the `Ti.Map.View` created earlier in this recipe.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`addToMap` 方法将 `basicGeo` 反向地理定位提供的地点信息添加到本菜谱中之前创建的 `Ti.Map.View`。'
- en: '[PRE10]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: A region is created using the latitude and longitude information from the `basicGeo`
    module. The `setLocation` method is then called to zoom the `Ti.Map.View` to the
    pin's coordinates.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `basicGeo` 模块的纬度和经度信息创建一个区域。然后调用 `setLocation` 方法将 `Ti.Map.View` 缩放到图钉的坐标。
- en: '[PRE11]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Finding current location
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找当前位置
- en: 'Perform the following steps to find the current location:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以查找当前位置：
- en: The `findButton` demonstrates how to perform a reverse geolocation lookup using
    the device's current coordinates. These coordinates are then used to find the
    current address of the user.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`findButton` 展示了如何使用设备的当前坐标执行反向地理定位查找。然后使用这些坐标找到用户的当前地址。'
- en: '[PRE12]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: On the click event of the `findButton`, the `getCurrentPlace` method is called
    on the `basicGeo` module's `currentGeoLocation` proxy.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `findButton` 的点击事件中，在 `basicGeo` 模块的 `currentGeoLocation` 代理上调用 `getCurrentPlace`
    方法。
- en: '[PRE13]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `resultsCallback` method is created to handle the results returned by the
    `getCurrentPlace` method. The result from the `getCurrentPlace` method is provided
    to the `e` argument.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建了 `resultsCallback` 方法来处理 `getCurrentPlace` 方法返回的结果。`getCurrentPlace` 方法的结果提供给
    `e` 参数。
- en: '[PRE14]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `e.success` property provides a flag to determine if the geolocation operation
    has encountered an error.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`e.success` 属性提供了一个标志，用于确定地理定位操作是否遇到错误。'
- en: '[PRE15]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `e.placeCount` property provides the number of place objects returned. Generally,
    this is a number between `0` and `12` depending on the accuracy. If no places
    are returned, alert the user that the address was not found.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`e.placeCount` 属性提供了返回的地点对象的数量。通常，这取决于准确性，是一个介于 `0` 和 `12` 之间的数字。如果没有返回地点，则向用户提醒地址未找到。'
- en: '[PRE16]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The first place in the places collection is provided to the `placeHelpers`.address
    method. This method provides a formatted address string that is then presented
    to the user in the `Ti.UI.TextField txtAddress`.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将地点集合中的第一个地点提供给`placeHelpers.address`方法。此方法提供了一个格式化的地址字符串，然后将其呈现给用户在`Ti.UI.TextField
    txtAddress`中。
- en: '[PRE17]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: A new instance of the `CurrentGeoLocation` proxy is created. This proxy contains
    methods to perform geolocation operations using the device's current coordinates.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建了一个新的`CurrentGeoLocation`代理实例。此代理包含使用设备当前坐标执行地理定位操作的方法。
- en: '[PRE18]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If the recipe is running on an Android device, the `setCache` method can be
    called. This enables the `basicGeo` module to use the last best location cached
    by the device. This provides faster lookup speeds, but can result in less accurate
    location information.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果菜谱在Android设备上运行，可以调用`setCache`方法。这使`basicGeo`模块能够使用设备缓存的最后最佳位置。这提供了更快的查找速度，但可能导致位置信息不够准确。
- en: '[PRE19]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The final step in returning the device's current address is to call the `getCurrentPlace`
    method. This method performs a reverse geolocation lookup using the device's coordinates
    and provides a collection of places to the `provide` callback method. The following
    snippet demonstrates how to call this method using the `resultsCallback` as the
    callback argument.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回设备当前地址的最终步骤是调用`getCurrentPlace`方法。此方法使用设备的坐标执行反向地理定位查找，并将地点集合提供给`provide`回调方法。以下代码片段演示了如何使用`resultsCallback`作为回调参数调用此方法。
- en: '[PRE20]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Forward location lookup
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前向位置查找
- en: The `searchTextAddressButton Ti.UI.Button` performs a forward geolocation lookup
    using the native device API.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`searchTextAddressButton Ti.UI.Button`使用原生设备API执行前向地理定位查找。'
- en: '[PRE21]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The `searchTextAddressButton Ti.UI.Button` on click event performs a forward
    geolocation lookup using the address entered in the `txtAddress Ti.UI.TextField`.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当点击`searchTextAddressButton Ti.UI.Button`时，会使用在`txtAddress Ti.UI.TextField`中输入的地址执行前向地理定位查找。
- en: '[PRE22]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The first step in the forward geolocation lookup is to verify that the user
    entered an address in the `txtAddress Ti.UI.TextField`.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前向地理定位查找的第一步是验证用户是否在`txtAddress Ti.UI.TextField`中输入了地址。
- en: '[PRE23]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `forwardGeoCallback` method is created to handle the results returned by
    the `forwardGeocoder` method. The result from the `forwardGeocoder` method is
    provided to the `e` argument.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`forwardGeoCallback`方法来处理`forwardGeocoder`方法返回的结果。`forwardGeocoder`方法的结果提供给`e`参数。
- en: '[PRE24]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `addToMap` method is creating a call using the first place in the places
    collection. This method will create a pin on the `Ti.Map.View` with the place
    object details.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`addToMap`方法正在使用地点集合中的第一个地点创建一个调用。此方法将在`Ti.Map.View`上创建一个带有地点对象详细信息的标记。'
- en: '[PRE25]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The next step in performing a forward geolocation lookup, is to call the `forwardGeocoder`
    method and provide a callback method as shown in the following line:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行前向地理定位查找的下一步是调用`forwardGeocoder`方法并提供一个回调方法，如下所示：
- en: '[PRE26]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In the sample, the `txtAddress.value` and `forwardGeoCallback` are provided
    to the `forwardGeocoder` method. The results of the forward geolocation lookup
    will be provided to the `forwardGeoCallback` function as discussed earlier in
    this recipe.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在示例中，将`txtAddress.value`和`forwardGeoCallback`提供给`forwardGeocoder`方法。前向地理定位查找的结果将如在此菜谱中之前所述提供给`forwardGeoCallback`函数。
- en: '[PRE27]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Device capability check
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设备能力检查
- en: 'Follow these steps to perform a device capability check:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤执行设备能力检查：
- en: This recipe requires that the device supports reverse and forward geolocation
    operations. On load of the main recipe's `Ti.UI.Window`, the `Availability` object
    created earlier in this recipe is used to alert the user if his/her device can
    support running this recipe.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此菜谱要求设备支持反向和前向地理定位操作。在加载主菜谱的`Ti.UI.Window`时，会使用在此菜谱中之前创建的`Availability`对象来提醒用户其设备是否支持运行此菜谱。
- en: '[PRE28]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `reverseGeoSupported` property is checked to determine if the device running
    the recipe can support running the recipe.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`reverseGeoSupported`属性以确定运行菜谱的设备是否可以支持运行该菜谱。
- en: '[PRE29]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: If the device does not support reverse geolocation, the user is alerted of the
    possible issues.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果设备不支持反向地理定位，会提醒用户可能存在的问题。
- en: '[PRE30]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Tip
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This recipe requires Android 4.0 or greater when running in the emulator due
    to an Android emulator defect.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于Android模拟器缺陷，此菜谱在模拟器中运行时需要Android 4.0或更高版本。
- en: See also
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: This recipe uses the `basicGeo` module to perform native geolocation. For licensing,
    source code, and to learn more about this project, please visit [https://github.com/benbahrenburg/benCoding.BasicGeo](https://github.com/benbahrenburg/benCoding.BasicGeo).
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此食谱使用 `basicGeo` 模块执行本地地理定位。有关许可、源代码以及了解更多关于此项目的信息，请访问 [https://github.com/benbahrenburg/benCoding.BasicGeo](https://github.com/benbahrenburg/benCoding.BasicGeo)。
- en: Using the Ti.GeoProviders framework for geolocation
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ti.GeoProviders框架进行地理定位
- en: The `Ti.GeoProviders` framework provides a multiprovider approach to reverse
    geolocation. With a variety of providers, the `Ti.GeoProviders` framework provides
    a common API for handling GeoNames.org, Google, and basicGeo geolocation operations.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ti.GeoProviders` 框架提供了一种多提供程序方法来进行反向地理定位。通过多种提供商，`Ti.GeoProviders` 框架提供了一个通用的API来处理GeoNames.org、Google和basicGeo的地理定位操作。'
- en: 'The following recipe demonstrates how to use the `Ti.GeoProviders` framework
    and its associated providers. The following screenshots illustrate this recipe
    running on both an iPhone and an Android device:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下食谱演示了如何使用 `Ti.GeoProviders` 框架及其相关提供商。以下截图展示了此食谱在iPhone和Android设备上的运行情况：
- en: '![Using the Ti.GeoProviders framework for geolocation](img/5343OT_06_04.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ti.GeoProviders框架进行地理定位](img/5343OT_06_04.jpg)'
- en: Getting ready
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'This recipe uses both CommonJS and native modules. These can be downloaded
    from the source code provided by the book, or individually through the links provided
    in the *See also* section at the end of this recipe. Simply copy the `Ti.GeoProviders`
    folder into the `Resources` folder of your project and then copy the `modules`
    folder into your project as shown in the following screenshot. Finally, copy the
    `provider_picker.js` file into the `Resources` folder of your Titanium project
    as also highlighted in the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱同时使用了CommonJS和本地模块。这些可以从本书提供的源代码中下载，或者通过此食谱末尾的 *也见* 部分提供的链接单独下载。只需将 `Ti.GeoProviders`
    文件夹复制到你的项目 `Resources` 文件夹中，然后将 `modules` 文件夹复制到你的项目中，如图所示。最后，将 `provider_picker.js`
    文件复制到Titanium项目的 `Resources` 文件夹中，如图所示：
- en: '![Getting ready](img/5343OT_06_05.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/5343OT_06_05.jpg)'
- en: 'After copying the file and folder mentioned here, you will need to click on
    your **tiapp.xml** file in Titanium Studio and add a reference to the `bencoding.basicgeo`
    module as shown in the following screenshot:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制此处提到的文件和文件夹后，你需要在Titanium Studio中点击你的 **tiapp.xml** 文件，并添加对 `bencoding.basicgeo`
    模块的引用，如图所示：
- en: '![Getting ready](img/5343OT_06_06.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/5343OT_06_06.jpg)'
- en: How to do it...
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you have added native and CommonJS modules to your project, you need to
    create your application namespaces in the `app.js` file and use `require` to import
    the module into your code as the following code snippet demonstrates:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将本地和CommonJS模块添加到你的项目中，你需要在 `app.js` 文件中创建你的应用程序命名空间，并使用 `require` 将模块导入到你的代码中，如下代码片段所示：
- en: '[PRE31]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Adding your API key
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加你的API密钥
- en: Many of the Geo Providers require an API key. The `Ti.GeoProvider` includes
    the `addKey` method to allow you to associate your API key before making a service
    call. The following snippet demonstrates how to add the API key `demo` to your
    service calls.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 许多地理信息提供商需要API密钥。`Ti.GeoProvider` 包含 `addKey` 方法，允许你在进行服务调用之前关联你的API密钥。以下代码片段演示了如何将API密钥
    `demo` 添加到你的服务调用中。
- en: '[PRE32]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Adding your purpose
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加你的目的
- en: 'To use location services in iOS requires a purpose or reason for the app to
    access the GPS. On the first request, this message will be presented to the user.
    The following code demonstrates how to add this purpose to the `Ti.GeoProviders`
    using the `addPurpose` method:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要在iOS中使用位置服务，需要提供应用访问GPS的目的或原因。在第一次请求时，此消息将显示给用户。以下代码演示了如何使用 `addPurpose` 方法将此目的添加到
    `Ti.GeoProviders`：
- en: '[PRE33]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Android does not require the purpose be provided; in this case the purpose defined
    is not used when accessing the GPS.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Android不需要提供目的；在这种情况下，定义的目的在访问GPS时不会被使用。
- en: Building the recipe UI
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建食谱UI
- en: 'The following code snippet describes how to create the UI shown in this recipe''s
    earlier screenshots:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段描述了如何创建此食谱早期截图所示的UI：
- en: The first step is to create the `Ti.UI.Window` to which all visual elements
    will be attached.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建一个 `Ti.UI.Window`，所有视觉元素都将附加到这个窗口上。
- en: '[PRE34]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Next a `Ti.Map.View` is added to the `Ti.UI.Window`. This is used to plot the
    location information provided by the GeoProvider.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将一个 `Ti.Map.View` 添加到 `Ti.UI.Window` 中。这用于绘制GeoProvider提供的位置信息。
- en: '[PRE35]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: A `picker` control is then added to the `Ti.UI.Window`. This control contains
    a list of providers and a callback method to switch between them. When the user
    updates the selected picker, the `lookup.updateProvider` method is called to switch
    the active `Ti.GeoProvider`. See the *Lookup functions* section in this recipe
    for more details.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在 `Ti.UI.Window` 中添加了一个 `picker` 控件。此控件包含一个提供者列表和一个回调方法，用于在它们之间切换。当用户更新所选的
    `picker` 时，会调用 `lookup.updateProvider` 方法来切换活动的 `Ti.GeoProvider`。有关更多详细信息，请参阅本食谱中的
    *查找函数* 部分。
- en: '[PRE36]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `findButton` button is the final UI component added to the recipe's `Ti.UI.Window`.
    This `Ti.UI.Button` is used to run the recipe's reverse geolocation lookup.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`findButton` 按钮是最后添加到食谱的 `Ti.UI.Window` 中的 UI 组件。此 `Ti.UI.Button` 用于运行食谱的反向地理定位查找。'
- en: '[PRE37]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Running the reverse geolocation
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行反向地理定位
- en: 'For running the reverse geolocation, perform the following steps:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行反向地理定位，请执行以下步骤：
- en: 'When the user presses the `findButton`, the click event is fired and the following
    snippet is run:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户按下 `findButton` 时，会触发点击事件并运行以下代码片段：
- en: '[PRE38]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The first step in this section of the recipe is to check that a network connection
    is available. A network connection is needed to contact the `Ti.GeoProvider` web
    service to perform the reverse geolocation lookup.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本食谱本部分的第一个步骤是检查网络连接是否可用。需要网络连接来联系 `Ti.GeoProvider` 网络服务以执行反向地理定位查找。
- en: '[PRE39]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: If no network connection is available, the user is alerted to this requirement
    and the lookup process is stopped.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有网络连接可用，用户会收到此要求的提醒，并且查找过程会停止。
- en: '[PRE40]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The final step in this section of the recipe is to call the `getCurrentAddress`
    method of `Ti.GeoProviders`. The method will use the `Ti.Geolocation` API to obtain
    the device''s coordinates, and then use the specific logic of `Ti.GeoProviders`
    to return an address object to the `onSuccess` callback method provided. If an
    error occurs during the geolocation process the `onError` callback method will
    be called and provide the error details. The following snippet demonstrates how
    to call the `getCurrentAddress` method:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本食谱本部分的最后一步是调用 `Ti.GeoProviders` 的 `getCurrentAddress` 方法。该方法将使用 `Ti.Geolocation`
    API 获取设备的坐标，然后使用 `Ti.GeoProviders` 的特定逻辑将地址对象返回给提供的 `onSuccess` 回调方法。如果在地理定位过程中发生错误，将调用
    `onError` 回调方法并提供错误详情。以下代码片段演示了如何调用 `getCurrentAddress` 方法：
- en: '[PRE41]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Lookup functions
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找函数
- en: 'Now perform the following steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行以下步骤：
- en: The `lookup` object is used in this recipe to display the results returned by
    the GeoProvider.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本食谱中，使用 `lookup` 对象来显示 GeoProvider 返回的结果。
- en: '[PRE42]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Using the `picker` control discussed earlier, the user can change the recipe's
    `Ti.GeoProvider`. When the provider is changed, the `updateProvider` method is
    called with the new provider details to be loaded.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用前面讨论的 `picker` 控件，用户可以更改食谱的 `Ti.GeoProvider`。当提供者更改时，会使用要加载的新提供者详细信息调用 `updateProvider`
    方法。
- en: '[PRE43]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Based on the `providerKey` given, the `updateProvider` method will switch the
    `my.currentProvider` object reference. Provider-specific details such as API key
    details will also be handled as part of this method. The geo names provider snippet
    demonstrates how provider switching is performed in this recipe.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据提供的 `providerKey`，`updateProvider` 方法将切换 `my.currentProvider` 对象引用。作为此方法的一部分，还将处理特定于提供者的详细信息，例如API密钥详情。GeoNames提供者代码片段演示了在本食谱中如何执行提供者切换。
- en: '[PRE44]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Cross-provider methods such as `addPurpose` are performed at the end of the
    `updateProvider` method as they are leveraged by all `Ti.GeoProviders`.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`addPurpose` 等跨提供者方法在 `updateProvider` 方法的末尾执行，因为它们被所有 `Ti.GeoProviders` 利用。'
- en: '[PRE45]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The `addToMap` method is used to create a map pin using the latitude, longitude,
    and address information provided by the `GeoNames Ti.GeoProvider`.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `GeoNames Ti.GeoProvider` 提供的纬度、经度和地址信息，使用 `addToMap` 方法创建一个地图图钉。
- en: '[PRE46]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: A region is created using the latitude and longitude information from the `Ti.GeoProvider`.
    The `setLocation` method is then called to zoom the `Ti.Map.View` to the pin's
    coordinates.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `Ti.GeoProvider` 的纬度和经度信息创建一个区域。然后调用 `setLocation` 方法将 `Ti.Map.View` 缩放到图钉的坐标。
- en: '[PRE47]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The `onSuccess` method is used to handle the successful return from the `Ti.GeoProviders`.
    This method is used to orchestrate all user interactions after the successful
    return from the `Ti.GeoProviders`.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `onSuccess` 方法来处理来自 `Ti.GeoProviders` 的成功返回。此方法用于在 `Ti.GeoProviders` 成功返回后协调所有用户交互。
- en: '[PRE48]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The `generateAddress` method is used to create a value for the `title` variable.
    The `title` variable is then used in the creation of the map pin. As `Ti.GeoProviders`
    can contain different formats, the `generateAddress` function is used to create
    a formatted address to be used for display purposes.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`generateAddress`方法为`title`变量创建一个值。然后，`title`变量用于创建地图针。由于`Ti.GeoProviders`可以包含不同的格式，因此使用`generateAddress`函数创建用于显示的格式化地址。
- en: '[PRE49]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The `onError` method is used by the `Ti.GeoProviders` to return error information
    if an issue occurred during the reverse geolocation process. All error details
    are accessible in the `e` argument.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在反向地理编码过程中出现问题时，`Ti.GeoProviders`会使用`onError`方法返回错误信息。所有错误详情都可以在`e`参数中访问。
- en: '[PRE50]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: See also
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'To learn more about the `basicGeo` Titanium module used in this recipe, you
    can review the following links:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于此配方中使用的`basicGeo` Titanium模块的信息，您可以查看以下链接：
- en: '**Ti.GeoProvider Framework**: For licensing, source code, and to learn more
    about this project please visit [https://github.com/benbahrenburg/Ti.GeoProviders](https://github.com/benbahrenburg/Ti.GeoProviders).'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ti.GeoProvider 框架**：有关许可、源代码以及了解更多关于此项目的信息，请访问[https://github.com/benbahrenburg/Ti.GeoProviders](https://github.com/benbahrenburg/Ti.GeoProviders)。'
- en: '**basicGeo Module**: For licensing, source code, and to learn more about this
    project please visit [https://github.com/benbahrenburg/benCoding.BasicGeo](https://github.com/benbahrenburg/benCoding.BasicGeo).'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本地理模块**：有关许可、源代码以及了解更多关于此项目的信息，请访问[https://github.com/benbahrenburg/benCoding.BasicGeo](https://github.com/benbahrenburg/benCoding.BasicGeo)。'
- en: '**GeoNames GeoProvider**: The GeoNames provider uses the `GeoNames.org` web
    service. For licensing, usage, rates, and documentation please visit [http://www.geonames.org/](http://www.geonames.org/).'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GeoNames GeoProvider**：GeoNames提供者使用`GeoNames.org`网络服务。有关许可、使用、费率和文档，请访问[http://www.geonames.org/](http://www.geonames.org/)。'
- en: '**Google GeoProvider**: The Google provider uses the Google Geocoding API.
    For licensing, usage, rates, and documentation please visit [https://developers.google.com/maps/documentation/geocoding/](https://developers.google.com/maps/documentation/geocoding/).'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google GeoProvider**：Google提供者使用Google Geocoding API。有关许可、使用、费率和文档，请访问[https://developers.google.com/maps/documentation/geocoding/](https://developers.google.com/maps/documentation/geocoding/)。'
- en: Multitenant geolocation
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多租户地理定位
- en: As discussed earlier in this chapter, the `Ti.GeoProviders` framework provides
    a multiprovider approach to reverse geolocation. The multitenant component includes
    the ability for the `Ti.GeoProviders` framework to fail over, if a provider is
    unable to find a suitable location. This multitenant approach helps to ensure
    your geolocation functionality works for your globally mobile employees.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章前面所述，`Ti.GeoProviders`框架提供了一种多提供者方法来处理反向地理编码。多租户组件包括`Ti.GeoProviders`框架在提供者无法找到合适位置时进行故障转移的能力。这种多租户方法有助于确保您的地理定位功能适用于您的全球移动员工。
- en: 'The following recipe demonstrates how to use the multitenant `Ti.GeoProviders`
    framework to perform reverse location lookups using a failover approach. The following
    screenshots illustrate this recipe running on both an iPhone and an Android device:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下配方演示了如何使用多租户`Ti.GeoProviders`框架通过故障转移方法执行反向位置查找。以下截图展示了此配方在iPhone和Android设备上的运行情况：
- en: '![Multitenant geolocation](img/5343OT_06_07.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![多租户地理定位](img/5343OT_06_07.jpg)'
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'This recipe uses both CommonJS and native modules. These can be downloaded
    from the source code provided by the book, or individually through the links provided
    in the *See also* section at the end of this recipe. Simply copy the `GeoProviders`
    folder into the `Resources` folder of your project and then copy the `modules`
    folder into your project as highlighted in the following screenshot:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方同时使用CommonJS和本地模块。这些模块可以从本书提供的源代码中下载，或者通过此配方末尾的“参见”部分提供的链接单独下载。只需将`GeoProviders`文件夹复制到您的项目中的`Resources`文件夹，然后将`modules`文件夹复制到您的项目中，如下面的截图所示：
- en: '![Getting ready](img/5343OT_06_08.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/5343OT_06_08.jpg)'
- en: 'After copying the mentioned folders, you will need to click on your `tiapp.xml`
    file in Titanium Studio and add a reference to the `bencoding.basicgeo` module
    as shown in the following screenshot:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 复制提到的文件夹后，您需要在Titanium Studio中点击您的`tiapp.xml`文件，并添加对`bencoding.basicgeo`模块的引用，如下面的截图所示：
- en: '![Getting ready](img/5343OT_06_09.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/5343OT_06_09.jpg)'
- en: How to do it...
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you have added native and CommonJS modules to your project, you next need
    to create your application namespaces in the `app.js` file and use `require` to
    import the module into your code as the following code snippet demonstrates:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您已将原生和 CommonJS 模块添加到您的项目中，接下来您需要在 `app.js` 文件中创建您的应用程序命名空间，并使用 `require`
    将模块导入到您的代码中，如下代码片段所示：
- en: '[PRE51]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Adding providers
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加提供者
- en: The following code snippet demonstrates how to add different GeoProviders to
    the `multiProvider` module by calling the `addProvider` method. It is advised
    to add the GeoProviders that you feel will best meet your requirements first since
    the `multiProvider` will execute them in the order they are added.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段演示了如何通过调用 `addProvider` 方法将不同的 GeoProviders 添加到 `multiProvider` 模块中。建议首先添加您认为最能满足您需求的
    GeoProviders，因为 `multiProvider` 将按添加的顺序执行它们。
- en: '[PRE52]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Adding your purpose
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加目的
- en: 'Using location services on iOS requires a purpose or reason for the app to
    access the GPS. On the first request, this message will be presented to the user.
    The following code demonstrates how to add this purpose to the multitenant provider
    using the `addPurpose` method:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在 iOS 上使用位置服务需要提供目的或原因，以便应用程序访问 GPS。在第一次请求时，此消息将展示给用户。以下代码演示了如何使用 `addPurpose`
    方法将此目的添加到多租户提供者：
- en: '[PRE53]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Note
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Android does not require the purpose be provided; in this case the purpose defined
    is not used when accessing the GPS.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Android 不需要提供目的；在这种情况下，当访问 GPS 时，定义的目的不会被使用。
- en: Building the recipe UI
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建食谱 UI
- en: The following code snippet describes how to create the UI shown in this recipe's
    earlier screenshots. The first step is to create the `Ti.UI.Window` to which all
    visual elements will be attached.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段描述了如何创建在此食谱早期屏幕截图中所显示的 UI。第一步是创建 `Ti.UI.Window`，所有视觉元素都将附加到该窗口。
- en: '[PRE54]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Next, a `Ti.Map.View` is added to the `Ti.UI.Window`; this will be used to display
    a map pin with the device's current location and address details.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将 `Ti.Map.View` 添加到 `Ti.UI.Window` 中；这将用于显示带有设备当前位置和地址详情的地图标记。
- en: '[PRE55]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Lookup helper methods
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找辅助方法
- en: 'Now perform the following steps:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行以下步骤：
- en: The `lookup` object is designed to help format the results of the multitenant
    reverse geolocation component and present the address information in a graphical
    way to the recipe user.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`lookup` 对象旨在帮助格式化多租户反向地理编码组件的结果，并以图形方式向食谱用户展示地址信息。'
- en: '[PRE56]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The `addToMap` method creates a map pin and adds the information to `Ti.Map.View`.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`addToMap` 方法创建一个地图标记并添加信息到 `Ti.Map.View`。'
- en: '[PRE57]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: A region is created using the map pin coordinates and the `setLocation` function
    of `Ti.Map.View` is then called. This will zoom the map to the coordinates of
    the recently added pin.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用地图标记坐标创建一个区域，然后调用 `Ti.Map.View` 的 `setLocation` 函数。这将使地图缩放到最近添加的标记的坐标。
- en: '[PRE58]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The `onSuccess` method is provided as the success callback when the `getCurrentAddress`
    method is called. The result of the `getCurrentAddress` method is provided to
    the `e` parameter.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当调用 `getCurrentAddress` 方法时，提供 `onSuccess` 方法作为成功回调。`getCurrentAddress` 方法的结果提供给了
    `e` 参数。
- en: '[PRE59]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: The `getProvider` method is called to create a reference to the provider used
    to return the location results. This allows for the provider-specific `generateAddress`
    method to be used.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `getProvider` 方法以创建一个引用，用于返回位置结果的提供者。这允许使用特定于提供者的 `generateAddress` 方法。
- en: '[PRE60]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The `onError` method is provided as the error callback when the `getCurrentAddress`
    method is called. Error details are provided to the `e` parameter.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当调用 `getCurrentAddress` 方法时，提供 `onError` 方法作为错误回调。错误详情提供给了 `e` 参数。
- en: '[PRE61]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Performing a multitenant reverse geolocation lookup
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 执行多租户反向地理编码查找
- en: 'Now perform the following steps:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行以下步骤：
- en: The final section of this recipe is to perform the multitenant lookup using
    the `getCurrentAddress` method of the `multiProvider` module.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本食谱的最后一部分是使用 `multiProvider` 模块的 `getCurrentAddress` 方法执行多租户查找。
- en: '[PRE62]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: The `multiProvider` lookup is performed on the click event of `findButton`.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `findButton` 的点击事件上执行 `multiProvider` 查找。
- en: '[PRE63]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: As a network connection is required for the reverse geolocation, the first step
    in the reverse geolocation process is to validate the network connection.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于反向地理编码需要网络连接，因此反向地理编码过程的第一步是验证网络连接。
- en: '[PRE64]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Next, the `getCurrentAddress` method is called, and a success and error callback
    method is provided. The following code snippet demonstrates calling this method
    with the `lookup.onSuccess` and `lookup.OnError` callback methods discussed earlier
    in this recipe.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着调用`getCurrentAddress`方法，并提供了成功和错误回调方法。以下代码片段展示了如何使用前面在本食谱中讨论过的`lookup.onSuccess`和`lookup.OnError`回调方法调用此方法。
- en: '[PRE65]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Calculating distance between addresses
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算地址之间的距离
- en: The use of geolocation services in enterprise apps is common. One of the most
    common geolocation requirements is to calculate the distance between two points.
    This is helpful in planning routes, determining mileage, forecasting delivery
    schedules, and more.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业应用程序中，使用地理定位服务是很常见的。最常见的地理定位需求之一是计算两点之间的距离。这在规划路线、确定里程、预测配送时间表等方面非常有用。
- en: The following recipe demonstrates how to calculate the distance between two
    addresses. This distance measurement is done using a direct distance, not a routing
    calculation such as those used for walking or driving. The following screenshots
    illustrate this recipe running on both an iPhone and an Android device.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 以下食谱演示了如何计算两个地址之间的距离。这种距离测量使用的是直接距离，而不是像步行或驾驶那样使用的路线计算。以下截图展示了此食谱在iPhone和Android设备上的运行情况。
- en: '![Calculating distance between addresses](img/5343OT_06_10.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![计算地址之间的距离](img/5343OT_06_10.jpg)'
- en: Getting ready
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This recipe uses both CommonJS and native modules. These can be downloaded
    from the source code provided by the book, or individually through the links provided
    in the *See also* section at the end of this recipe. Simply copy the `forwardGeo.js`
    file into the `Resources` folder of your project and then copy the `modules` folder
    into your project as shown in the following screenshot:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱同时使用CommonJS和本地模块。这些可以从本书提供的源代码中下载，或者通过本食谱末尾的“也见”部分提供的链接单独下载。只需将`forwardGeo.js`文件复制到项目的`Resources`文件夹中，然后将`modules`文件夹复制到项目中，如图所示：
- en: '![Getting ready](img/5343OT_06_11.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/5343OT_06_11.jpg)'
- en: 'After copying the file and folder mentioned here, you will need to click on
    your **tiapp.xml** file in Titanium Studio and add a reference to the `bencoding.basicgeo`
    module as shown in the following screenshot:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制此处提到的文件和文件夹后，您需要在Titanium Studio中点击您的**tiapp.xml**文件，并添加对`bencoding.basicgeo`模块的引用，如图所示：
- en: '![Getting ready](img/5343OT_06_12.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/5343OT_06_12.jpg)'
- en: How to do it...
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you have added native and CommonJS modules to your project, you next need
    to create your application namespaces in the `app.js` file and use `require` to
    import the module into your code as the following code snippet demonstrates:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的项目中添加了本地和CommonJS模块之后，接下来需要在`app.js`文件中创建您的应用程序命名空间，并使用`require`将模块导入到代码中，如下面的代码片段所示：
- en: '[PRE66]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Adding address information
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加地址信息
- en: The following `startAddress` and `endAddress` objects are added to the app namespace.
    These objects will be used to create the address information and coordinate state
    for this recipe.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序命名空间中添加了以下`startAddress`和`endAddress`对象。这些对象将用于创建本食谱的地址信息和坐标状态。
- en: '[PRE67]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Building the recipe UI
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建食谱UI
- en: 'The following code snippet describes how to create the UI shown in this recipe''s
    earlier screenshots:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段描述了如何创建本食谱早期截图所示的UI：
- en: The first step is to create the `Ti.UI.Window` to which all visual elements
    will be attached.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建`Ti.UI.Window`，所有视觉元素都将附加到该窗口。
- en: '[PRE68]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Next the `txtStartAddress Ti.UI.TextField` is created to allow the user to enter
    a starting address.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来创建`txtStartAddress Ti.UI.TextField`，允许用户输入起始地址。
- en: '[PRE69]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Next the `txtEndAddress Ti.UI.TextField` is created to allow the user to enter
    a destination address.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来创建`txtEndAddress Ti.UI.TextField`，允许用户输入目的地地址。
- en: '[PRE70]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: The `findButton Ti.UI.Button` is then added to the `Ti.UI.Window` later in this
    recipe. This button will be used to perform the distance calculation.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本食谱的后续步骤中，将`findButton Ti.UI.Button`添加到`Ti.UI.Window`。此按钮将用于执行距离计算。
- en: '[PRE71]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Distance and address methods
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 距离和地址方法
- en: This recipe uses the `geo` object to perform distance and address lookup operations.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱使用`geo`对象执行距离和地址查找操作。
- en: '[PRE72]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The `distanceInUnits` uses the Haversine formula and computes the direct distance
    in kilometers or meters between two sets of coordinates.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`distanceInUnits`使用哈夫曼公式，并计算两组坐标之间直接距离的千米或米。'
- en: '[PRE73]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: If the distance is less than 1 kilometer, the unit returned is converted to
    meters.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果距离小于1公里，则返回的单位将转换为米。
- en: '[PRE74]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: The `findLocations` method is used to obtain the coordinates for the addresses
    provided.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `findLocations` 方法来获取提供的地址的坐标。
- en: '[PRE75]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The `onFinish` function is the callback method provided to the `forwardGeo`
    function. The `e` parameter provides the starting and ending address coordinates.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`onFinish` 函数是提供给 `forwardGeo` 函数的回调方法。`e` 参数提供了起始和结束地址的坐标。'
- en: '[PRE76]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The `forwardGeo e.start` and `e.end` results are assigned to the `my.startAddress`
    and `my.endAddress` properties. The callback method is then executed, so the distance
    calculation can be performed.
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 `forwardGeo e.start` 和 `e.end` 结果分配给 `my.startAddress` 和 `my.endAddress` 属性。然后执行回调方法，以便执行距离计算。
- en: '[PRE77]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The `forwardGeo` method is called to obtain the coordinates for the my.`startAddress`
    and my.`endAddress` objects. As discussed earlier, the geolocation results are
    provided to the `onFinish` callback method as the following code snippet demonstrates:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `forwardGeo` 方法来获取 `my.startAddress` 和 `my.endAddress` 对象的坐标。如前所述，地理位置结果作为以下代码片段所示提供给了
    `onFinish` 回调方法：
- en: '[PRE78]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Finding the distance between the two addresses
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找两个地址之间的距离
- en: When the user presses the `findButton` and the click event is fired, the recipe
    will perform a distance calculation between the two addresses entered.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户按下 `findButton` 并触发点击事件时，食谱将执行两个输入地址之间的距离计算。
- en: '[PRE79]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: The first step in this process is to determine if forward geolocation is supported.
    The coordinates for each address is required for the distance calculation. A forward
    geolocation lookup is performed to obtain this information.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此过程的第一个步骤是确定是否支持正向地理位置。距离计算需要每个地址的坐标。执行正向地理位置查找以获取此信息。
- en: '[PRE80]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The `findDistance` method is used to make the distance calculation method call
    and format the provided results.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `findDistance` 方法来调用距离计算方法并格式化提供的结果。
- en: '[PRE81]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: The first step in this section of the recipe is to call the `distanceInUnits`
    method using the latitude and longitude information for each address.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本食谱本部分的第一个步骤是使用每个地址的经纬度信息调用 `distanceInUnits` 方法。
- en: '[PRE82]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Next the distance calculation results need to be formatted. If the results are
    in kilometres, the `distance` variable is rounded to the first three decimal places.
    If it is in meters, the full value will be displayed.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来需要格式化距离计算结果。如果结果是以公里为单位，则 `distance` 变量将被四舍五入到小数点后三位。如果是米，则将显示完整值。
- en: '[PRE83]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: If either of the address information objects needs to be refreshed, the `geo.findLocation`
    method is called. The `findDistance` method is provided as the callback method
    to the `findLocations` function so that the distance calculation can be performed
    after the coordinates are obtained.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果任一地址信息对象需要刷新，则调用 `geo.findLocation` 方法。`findDistance` 方法作为回调方法提供给 `findLocations`
    函数，以便在获取坐标后执行距离计算。
- en: '[PRE84]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: If the address information objects do not need to be refreshed, the `findDistance`
    method is called directly to perform the distance calculation.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果地址信息对象不需要刷新，则直接调用 `findDistance` 方法来执行距离计算。
- en: '[PRE85]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Background geolocation management
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后台地理位置管理
- en: Background geolocation is an important feature of many enterprise applications.
    The ability to monitor the device's whereabouts while in the background is a powerful
    feature that can be used for a wide range of activities from personal security
    to mileage tracking.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 后台地理位置是许多企业应用的重要功能。在后台监控设备位置的能力是一个强大的功能，可用于从个人安全到里程追踪的广泛活动。
- en: The following recipe demonstrates how to use the `Ti.Geo.Background` framework
    to enable background geolocation monitoring. The following screenshots illustrate
    this recipe running on both an iPhone and an Android device.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 以下食谱演示了如何使用 `Ti.Geo.Background` 框架来启用后台地理位置监控。以下截图展示了该食谱在 iPhone 和 Android 设备上运行的情况。
- en: '![Background geolocation management](img/5343OT_06_13.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![后台地理位置管理](img/5343OT_06_13.jpg)'
- en: Getting ready
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'This recipe uses a series of CommonJS modules. These modules can be downloaded
    from the source code provided by the book, or individually through the links provided
    in the *See also* section at the end of this recipe. Simply copy the `bGeo` folder
    into the `Resources` folder of your project as shown in the following screenshot:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 该食谱使用了一系列 CommonJS 模块。这些模块可以从本书提供的源代码中下载，或者通过本食谱末尾的 *另请参阅* 部分提供的链接单独下载。只需将 `bGeo`
    文件夹复制到项目中的 `Resources` 文件夹，如图所示：
- en: '![Getting ready](img/5343OT_06_14.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/5343OT_06_14.jpg)'
- en: Updating your tiapp.xml file
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新你的 tiapp.xml 文件
- en: 'This recipe requires a few updates to your project''s `tiapp.xml` file. The
    first update is to provide background geolocation support for iOS devices. The
    following highlighted `UIBackgroundModes` section illustrates the entry required
    by this recipe:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 此 recipe 需要更新你的项目 `tiapp.xml` 文件。第一次更新是为 iOS 设备提供背景地理定位支持。以下突出显示的 `UIBackgroundModes`
    部分说明了此 recipe 所需的条目：
- en: '[PRE86]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'This recipe uses an Android service as a keep alive. The following highlighted
    section is required for the recipe to create an internal service:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 此 recipe 使用 Android 服务作为保持活跃。以下突出显示的部分是 recipe 创建内部服务所必需的：
- en: '[PRE87]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: How to do it...
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The `Ti.Geo.Background` CommonJS module utilizes both location manager distance
    filtering and a keep-alive geo timer. This ensures that a location is recorded
    both when the device travels a specific distance, or a specified period of time
    elapses. The `Ti.Geo.Background` module manages all geolocation operations and
    maintains a distance filter so that coordinates are recorded when the device moves
    pass a specific threshold distance.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: The `Ti.Geo.Background` CommonJS 模块同时利用了位置管理器距离过滤和保持活跃的地理定时器。这确保了当设备移动特定距离或经过指定时间段时，都会记录位置。`Ti.Geo.Background`
    模块管理所有地理定位操作，并维护一个距离过滤器，以便在设备移动超过特定阈值距离时记录坐标。
- en: The `Ti.Geo.Timer` performs two activities. First provides a keep-alive loop
    required to keep an iOS application active, and second, on a scheduled interval
    the service records the device's current coordinates. This ensures that coordinates
    are recorded even if the individual hasn't moved.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ti.Geo.Timer` 执行两项活动。首先提供保持 iOS 应用程序活跃所需的保持活跃循环，其次，在预定的时间间隔内，服务记录设备的当前坐标。这确保了即使个人没有移动，也会记录坐标。'
- en: 'The following diagram illustrates the interaction between the different `Ti.Geo.Background`
    components:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表说明了不同 `Ti.Geo.Background` 组件之间的交互：
- en: '![How to do it...](img/5343OT_06_15.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/5343OT_06_15.jpg)'
- en: Namespace and app setup
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名空间和应用程序设置
- en: 'Once you have added native and CommonJS modules to your project, you need to
    create your application namespaces in the `app.js` file and use `require` to import
    the modules into your code as the following code snippet demonstrates:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将原生和 CommonJS 模块添加到你的项目中，你需要在 `app.js` 文件中创建你的应用程序命名空间，并使用 `require` 将模块导入到你的代码中，如下代码片段所示：
- en: '[PRE88]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Background location options
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 背景位置选项
- en: The `Ti.Geo.Background` module provides a series of optional configuration parameters
    that allow you to tailor the module to your needs. The first configuration parameter
    is `purpose`. This is used by iOS when presenting the location services access
    prompt to your users.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ti.Geo.Background` 模块提供了一系列可选的配置参数，允许你根据需要调整模块。第一个配置参数是 `purpose`。当 iOS 向用户展示位置服务访问提示时，会使用此参数。'
- en: '[PRE89]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: The `distanceFilter` is a value in meters on how often you wish to have the
    location manager fire an alert that the location has changed. The following sample
    is set to `100` and will fire a location-changed event every time the user travels
    more than 100 meters.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`distanceFilter` 是一个以米为单位的值，表示你希望位置管理器多久触发一次位置变更的警报。以下示例设置为 `100`，将在用户移动超过
    100 米时触发位置变更事件。'
- en: '[PRE90]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: The `trackSignificantLocationChange` setting indicates that the significant
    location-change tracking should be used on iOS. This method of geolocation reduces
    battery impact by only firing events when a network change such as a cell tower
    switch is performed.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`trackSignificantLocationChange` 设置表示在 iOS 上应使用显著位置变更跟踪。这种地理定位方法通过仅在执行网络更改（如切换蜂窝塔）时触发事件来减少电池影响。'
- en: '[PRE91]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: The `minAge` configuration is a threshold of the minimum frequency, in minutes;
    you wish to receive location updates. In the following example, you will not receive
    updates any more frequently than every 3 minutes, no matter the distance the individual
    is moving.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`minAge` 配置是你希望接收位置更新的最小频率阈值，以分钟为单位。在以下示例中，无论个人移动的距离如何，你将不会以每 3 分钟一次的频率接收更新。'
- en: '[PRE92]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: The `maxAge` configuration is a threshold of the maximum amount of time in minutes
    you wish to go without receiving an update. This is also the threshold used by
    the `Ti.Geo.Timer` to perform a coordinate lookup.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`maxAge` 配置是你希望在没有收到更新时，你希望达到的最大时间阈值（以分钟为单位）。这也是 `Ti.Geo.Timer` 执行坐标查找时使用的阈值。'
- en: '[PRE93]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Building the recipe's UI
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建 recipe 的 UI
- en: 'The following code snippet describes how to create the UI shown in this recipe''s
    earlier screenshots:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段描述了如何创建此 recipe 早期截图所示的 UI：
- en: The first step is to create the `Ti.UI.Window` upon which all visual elements
    will be attached.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建 `Ti.UI.Window`，所有视觉元素都将附加到该窗口上。
- en: '[PRE94]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: The next step is to add a `Ti.Map.View` to the recipe's `Ti.UI.Window`. This
    will be used to display the coordinates collected while `Ti.Geo.Background` is
    running.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是向配方的 `Ti.UI.Window` 添加 `Ti.Map.View`。这将用于显示 `Ti.Geo.Background` 运行期间收集的坐标。
- en: '[PRE95]'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: The `startStopButton` is then added to the `Ti.UI.Window`. This button will
    be used to start and stop the `Ti.Geo.Background` process.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`startStopButton` 被添加到 `Ti.UI.Window` 中。此按钮将用于启动和停止 `Ti.Geo.Background` 进程。'
- en: '[PRE96]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: The `clearButton` is then added to the `Ti.UI.Window`. This button will be used
    to remove all coordinate information recorded by the `Ti.Geo.Background` process.
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`clearButton` 被添加到 `Ti.UI.Window` 中。此按钮将用于删除 `Ti.Geo.Background` 进程记录的所有坐标信息。'
- en: '[PRE97]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: The `refreshButton` is then added to the `Ti.UI.Window`. This button will be
    used to refresh the `Ti.Map.View` with the coordinates recorded by the `Ti.Geo.Background`
    process.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`refreshButton` 被添加到 `Ti.UI.Window` 中。此按钮将用于使用 `Ti.Geo.Background` 进程记录的坐标刷新
    `Ti.Map.View`。'
- en: '[PRE98]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: The recipe's assistant methods
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配方的 `assistant` 方法
- en: This recipe implements an `assistant` object, which contains helper functions
    to work with and display coordinates collected by the `Ti.Geo.Background` module.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方实现了一个 `assistant` 对象，其中包含用于处理和显示 `Ti.Geo.Background` 模块收集的坐标的辅助函数。
- en: '[PRE99]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: The `addToMap` is the first method in the `assistant` object. This method adds
    a map pin for each of the coordinate points collected by the `Ti.Geo.Background`
    module.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`addToMap` 是 `assistant` 对象中的第一个方法。此方法为 `Ti.Geo.Background` 模块收集的每个坐标点添加一个地图标记。'
- en: '[PRE100]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: The next method in the `assistant` object is the `locationChangeCallback` method.
    This method is provided as the callback method for the `Ti.Geo.Background` module's
    `change` event. The change coordinates are provided to the method's `e` parameter.
    The `locationChangeCallback` method then calls the `addToMap` method to display
    the newly gathered coordinate information.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assistant` 对象中的下一个方法是 `locationChangeCallback` 方法。此方法作为 `Ti.Geo.Background`
    模块 `change` 事件的回调方法。变化坐标被提供给方法的 `e` 参数。然后 `locationChangeCallback` 方法调用 `addToMap`
    方法以显示新收集的坐标信息。'
- en: '[PRE101]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: The final method in the `assistant` object is the `locationErrorCallback` method.
    This method is provided as the callback method for the `Ti.Geo.Background` module's
    `error` event. Error information is provided to the method's `e` parameter.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`assistant` 对象中的最后一个方法是 `locationErrorCallback` 方法。此方法作为 `Ti.Geo.Background`
    模块 `error` 事件的回调方法。错误信息被提供给方法的 `e` 参数。'
- en: '[PRE102]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Geolocation events
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地理位置事件
- en: 'The `Ti.Geo.Background` module has several events. The events used in this
    recipe are detailed in this section. The `change` event is the primary method
    used in this recipe. This event is fired whenever a location change is generated.
    The following example demonstrates how to subscribe to this `change` event providing
    the callback method `assistant.locationChangeCallback`:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ti.Geo.Background` 模块有多个事件。在此配方中使用的事件在本节中详细说明。`change` 事件是本配方中使用的首选方法。每当生成位置变化时，都会触发此事件。以下示例演示了如何订阅此
    `change` 事件，提供回调方法 `assistant.locationChangeCallback`：'
- en: '[PRE103]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'The `error` event is also used in this recipe to provide an alert to the user
    when an error has occurred in the module. The following example demonstrates how
    to subscribe to the `error` event providing the callback method `assistant.locationErrorCallback`:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，`error` 事件也被用于在模块发生错误时向用户提供警报。以下示例演示了如何订阅 `error` 事件，提供回调方法 `assistant.locationErrorCallback`：
- en: '[PRE104]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Background button events
  id: totrans-324
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 背景按钮事件
- en: This recipe uses a series of buttons to demonstrate how to call the `Ti.Geo.Background`
    module's methods. The `startStopButton` click event demonstrates how to start
    and stop the `Ti.Geo.Background` process.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方使用一系列按钮来演示如何调用 `Ti.Geo.Background` 模块的方法。`startStopButton` 的点击事件演示了如何启动和停止
    `Ti.Geo.Background` 进程。
- en: '[PRE105]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: If the module is already active, the recipe will toggle the status to `off`
    and stop the module for recording coordinates.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果模块已经处于活动状态，则配方将切换状态为 `off` 并停止模块以记录坐标。
- en: '[PRE106]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: If the module is off, the recipe will toggle the status to `on` and start the
    module for recording coordinates.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果模块处于关闭状态，则配方将切换状态为 `on` 并启动模块以记录坐标。
- en: '[PRE107]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: The `startStopButton` title is updated to refresh the current status of the
    module.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`startStopButton` 的标题被更新以刷新模块的当前状态。'
- en: '[PRE108]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: The `click` event of `refreshButton` is used to reload the recorded coordinates
    to display in the `Ti.Map.View`.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`refreshButton`的`click`事件来重新加载记录的坐标以在`Ti.Map.View`中显示。
- en: '[PRE109]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: First all map annotations are removed.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先移除所有地图标注。
- en: '[PRE110]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: The `readCache` method is then called to return an array containing all of the
    recorded coordinates.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后调用`readCache`方法来返回包含所有记录坐标的数组。
- en: '[PRE111]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: The snippet then loops through the coordinate array using the `assistant.addToMap`
    method to create map pins on the recipe's `Ti.Map.View`.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后使用`assistant.addToMap`方法遍历坐标数组，在食谱的`Ti.Map.View`上创建地图标记。
- en: '[PRE112]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'The `click` event of `clearButton` is used to remove all recorded coordinate
    information and clear the `Ti.Map.View` of all annotations as the following code
    snippet demonstrates:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`clearButton`的`click`事件来移除所有记录的坐标信息，并如以下代码片段所示清除`Ti.Map.View`上的所有标注：
- en: '[PRE113]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: iOS app-level events
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: iOS应用级别事件
- en: 'The iOS platform does not allow for background services to run while the app
    is in the foreground. The following block of code demonstrates how to handle this
    iOS specific scenario:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: iOS平台不允许在应用处于前台时运行后台服务。以下代码块演示了如何处理这个iOS特定场景：
- en: First check to ensure the recipe is running on an iOS device.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先检查确保食谱在iOS设备上运行。
- en: '[PRE114]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Next an application-level listener is created on the resumed event. This will
    be fired when the app is placed in the foreground.
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来在`resumed`事件上创建一个应用级别的监听器。这将当应用被置于前台时触发。
- en: '[PRE115]'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: When the app is moved into the foreground, the recipe checks if the `Ti.Geo.Background`
    module is active. If active, the module's `paused` method must be called to disable
    the `Ti.App.iOS.BackgroundService`, while leaving the location manager active.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当应用被移入前台时，食谱会检查`Ti.Geo.Background`模块是否活跃。如果活跃，必须调用模块的`paused`方法来禁用`Ti.App.iOS.BackgroundService`，同时保持位置管理器活跃。
- en: '[PRE116]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: The next step in managing background services on iOS is to add an application-level
    event listener to the `paused` event. The `paused` event will be fired when the
    app is placed in the background.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iOS上管理后台服务的下一步是向`paused`事件添加一个应用级别的监听器。当应用被置于后台时，将触发`paused`事件。
- en: '[PRE117]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: The next snippet demonstrates how to restart the background service, if the
    `Ti.Geo.Background` module is active.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码片段演示了如果`Ti.Geo.Background`模块活跃，如何重启后台服务。
- en: '[PRE118]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Tip
  id: totrans-355
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The restart method must be called when the app is paused, if you wish to continue
    collecting coordinates in the background.
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想在应用暂停时继续收集坐标，必须在应用暂停时调用重启方法。
- en: The following code snippet demonstrates how to stop the `Ti.Geo.Background`
    module when the application is closed. This also provides a clean shutdown to
    the background processes and avoids iOS terminating them after approximately 10
    minutes.
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码片段演示了如何在应用关闭时停止`Ti.Geo.Background`模块。这也会为后台进程提供一个干净的关闭，避免iOS在约10分钟后终止它们。
- en: '[PRE119]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: See also
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The `Ti.Geo.Background` module was used in this recipe to provide cross-platform
    background location services. For licensing, source code, and to learn more about
    this project please visit [https://github.com/benbahrenburg/Ti.Geo.Background](https://github.com/benbahrenburg/Ti.Geo.Background).
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个食谱中使用了`Ti.Geo.Background`模块来提供跨平台的背景位置服务。有关许可、源代码以及了解更多关于这个项目的信息，请访问[https://github.com/benbahrenburg/Ti.Geo.Background](https://github.com/benbahrenburg/Ti.Geo.Background)。
