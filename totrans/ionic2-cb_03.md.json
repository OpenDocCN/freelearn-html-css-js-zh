["```js\n    $ ionic start MyComponent blank --v2\n    $ cd MyComponent\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Pizza App\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n      <ion-card>\n        <ion-card-header>\n          App Homepage\n        </ion-card-header>\n        <ion-card-content>\n          Please start to order your pizza now!\n        </ion-card-content>\n      </ion-card>\n\n      <my-component></my-component>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { MyComponent } from '../../components/foo';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n\n      constructor(public navCtrl: NavController) {\n\n      }\n\n    }\n    ```", "```js\n    $ mkdir ./src/components\n\n    ```", "```js\n    import { Component } from '@angular/core';\n\n    @Component({\n      selector: 'my-component',\n      templateUrl: 'foo.html'\n    })\n    export class MyComponent {\n      public data: any = {myToggle: true};\n\n      constructor() {\n      }\n\n      isClicked(val) {\n        console.log('Vegetarian: ' + val);\n      }\n\n    }\n    ```", "```js\n    <ion-list>\n      <ion-item>\n        <ion-label>Vegetarian</ion-label>\n        <ion-toggle (click)=\"isClicked(data.myToggle)\" [(ngModel)]=\"data.myToggle\"></ion-toggle>\n      </ion-item>\n\n      <ion-card *ngIf=\"data.myToggle\">\n        <ion-card-header>\n          I only eat vegetarian foods\n        </ion-card-header>\n\n        <ion-list>\n          <button ion-item>\n            Mushroom\n          </button>\n          <button ion-item>\n            Spinach\n          </button>\n          <button ion-item>\n            Red Peppers\n          </button>\n        </ion-list>\n      </ion-card>\n\n      <ion-card *ngIf=\"!data.myToggle\">\n        <ion-card-header>\n          I love meat\n        </ion-card-header>\n\n        <ion-list>\n          <button ion-item>\n            Beef\n          </button>\n          <button ion-item>\n            Chicken\n          </button>\n          <button ion-item>\n            Sausage\n          </button>\n        </ion-list>\n      </ion-card>\n\n    </ion-list>\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { MyComponent } from '../components/foo';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        MyComponent\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage,\n        MyComponent\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-component',\n  templateUrl: 'foo.html'\n})\n```", "```js\n  <ion-item>\n    <ion-label>Vegetarian</ion-label>\n    <ion-toggle (click)=\"isClicked(data.myToggle)\" [(ngModel)]=\"data.myToggle\"></ion-toggle>\n  </ion-item>\n```", "```js\n  <ion-card *ngIf=\"data.myToggle\">\n    <ion-card-header>\n      I only eat vegetarian foods\n    </ion-card-header>\n\n    <ion-list>\n      <button ion-item>\n        Mushroom\n      </button>\n      <button ion-item>\n        Spinach\n      </button>\n      <button ion-item>\n        Red Peppers\n      </button>\n    </ion-list>\n  </ion-card>\n```", "```js\n  <ion-card *ngIf=\"!data.myToggle\">\n    <ion-card-header>\n      I love meat\n    </ion-card-header>\n\n    <ion-list>\n      <button ion-item>\n        Beef\n      </button>\n      <button ion-item>\n        Chicken\n      </button>\n      <button ion-item>\n        Sausage\n      </button>\n    </ion-list>\n  </ion-card>\n```", "```js\n    $ ionic start MyIonicInputDirective blank --v2\n    $ cd MyIonicInputDirective\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar color=\"danger\">\n        <ion-title>\n          Login\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n      <ion-list>\n\n        <ion-item >\n          <ion-input type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\"[myIonicInput]=\"myStyles\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-input type=\"password\" placeholder=\"Password\"></ion-input>\n        </ion-item>\n\n      </ion-list>\n      <p *ngIf=\"myStyles.showUsername\" class=\"hint\">\n        You are typing username\n      </p>\n\n      <ion-fab bottom center>\n        <button ion-fab>GO</button>\n      </ion-fab>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      private myStyles: Object = {showUsername: false};\n\n      constructor(public navCtrl: NavController) {\n      }\n\n    }\n    ```", "```js\n    $ mkdir ./src/directives\n\n    ```", "```js\n    import {Directive, ElementRef, Input} from '@angular/core';\n\n    @Directive({\n      selector: '[myIonicInput]',\n      host: {\n        '(mouseenter)': 'onMouseEnter()',\n        '(mouseleave)': 'onMouseLeave()'\n        // '(keypress)': 'onKeyPress'\n      }\n    })\n    export class MyIonicInputDirective {\n      @Input('myIonicInput') myStyles: any;\n\n      constructor(private el: ElementRef) { \n        el.nativeElement.onkeypress = function(e) {\n          console.log(e);\n\n          if ('~!@#$%^&*()-='.includes(String.fromCharCode(e.keyCode))) {\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n      onMouseEnter() { \n        this.myStyles.showUsername = true;\n      }\n\n      onMouseLeave(e) { \n        this.myStyles.showUsername = false; \n      }\n\n      // onKeyPress will not work with ion-input directly because the actual input element is a child of ion-input  \n      // onKeyPress() { \n      //   console.log(\"onKeyPress\");\n      // }\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { MyIonicInputDirective } from '../directives/my-ionic-input';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        MyIonicInputDirective\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\n<ion-item >\n  <ion-input type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" [myIonicInput]=\"myStyles\"></ion-input>\n</ion-item>\n```", "```js\n<p *ngIf=\"myStyles.showUsername\" class=\"hint\">\n  You are typing username\n</p>\n```", "```js\nexport class HomePage {\n  private myStyles: Object = {showUsername: false};\n}\n```", "```js\nimport {Directive, ElementRef, Input} from '@angular/core';\n```", "```js\n@Directive({\n  selector: '[myIonicInput]',\n  host: {\n    '(mouseenter)': 'onMouseEnter()',\n    '(mouseleave)': 'onMouseLeave()'\n    // '(keypress)': 'onKeyPress'\n  }\n})\n```", "```js\nexport class MyIonicInputDirective {\n  @Input('myIonicInput') myStyles: any;\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.onkeypress = function(e) {\n      console.log(e);\n\n      if ('~!@#$%^&*()-='.includes(String.fromCharCode(e.keyCode))) {\n        e.preventDefault();\n        return;\n      }\n    }\n  }\n  onMouseEnter() { \n    this.myStyles.showUsername = true;\n  }\n\n  onMouseLeave(e) { \n    this.myStyles.showUsername = false; \n  }\n\n  // onKeyPress will not work with ion-input directly because the actual input element is a child of ion-input  \n  // onKeyPress() { \n  //   console.log(\"onKeyPress\");\n  // }\n}\n```", "```js\n    $ ionic start CustomPipe blank --v2\n    $ cd CustomPipe\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          User\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content padding>\n\n      <h4>Unformatted Value</h4>\n      <ion-card>\n\n        <ion-card-header>\n          <code>user</code>\n        </ion-card-header>\n\n        <ion-card-content>\n          {{ user | json }}\n        </ion-card-content>\n\n      </ion-card>\n\n      <h4>Formatted Value</h4>\n      <ion-list>\n\n        <ion-item>\n          <ion-label fixed>First Name</ion-label>\n          <ion-note item-right>{{ user | userExtract : \"firstname\" }}</ion-note>\n        </ion-item>\n\n        <ion-item>\n          <ion-label fixed>Last Name</ion-label>\n          <ion-note item-right>{{ user | userExtract : \"lastname\" }}</ion-note>\n        </ion-item>\n\n        <ion-item>\n          <ion-label fixed>Age</ion-label>\n          <ion-note item-right>{{ user | userExtract : \"age\" }}</ion-note>\n        </ion-item>\n\n      </ion-list>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n\n    @Component({\n      selector: 'page-home',\n      templateUrl: 'home.html'\n    })\n    export class HomePage {\n      private user: any;\n\n      constructor(public navCtrl: NavController) {\n        this.user = {\n          name: 'John Connor',\n          birthyear: 1985\n        }\n      }\n\n    }\n    ```", "```js\n    $ mkdir ./utils/utils\n\n    ```", "```js\n    import { Pipe, PipeTransform } from '@angular/core';\n\n    @Pipe({name: 'userExtract'})\n    export class UserExtractPipe implements PipeTransform {\n      transform(value: any, arg) : any {\n        let newVal: any;\n        if (arg == \"firstname\") {\n\n          newVal = value.name ? value.name.split(' ')[0] : '';\n\n        } else if (arg == \"lastname\") {\n\n          newVal = value.name ? value.name.split(' ').splice(-1) : '';\n\n        } else if (arg == \"age\") {\n          var currentTime = new Date();\n\n          newVal = value.birthyear ? currentTime.getFullYear() - value.birthyear : 0;\n        }\n\n        return newVal;\n      }\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { HomePage } from '../pages/home/home';\n    import { UserExtractPipe } from '../utils/custom-pipe'\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        HomePage,\n        UserExtractPipe\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        HomePage\n      ],\n      providers: []\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'userExtract'})\n```", "```js\ntransform(value: any, arg) : any {\n```", "```js\nreturn newVal;\n```", "```js\n    if (arg == \"firstname\") {\n\n      newVal = value.name ? value.name.split(' ')[0] : '';\n\n    } else if (arg == \"lastname\") {\n\n      newVal = value.name ? value.name.split(' ').splice(-1) : '';\n\n    } else if (arg == \"age\") {\n      var currentTime = new Date();\n\n      newVal = value.birthyear ? currentTime.getFullYear() - value.birthyear : 0;\n    }\n```", "```js\n    <ion-item>\n      <ion-label fixed>First Name</ion-label>\n      <ion-note item-right>{{ user | userExtract : \"firstname\" }}</ion-note>\n    </ion-item>\n```", "```js\n    $ ionic start SharedService blank --v2\n    $ cd SharedService\n\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { Platform } from 'ionic-angular';\n    import { StatusBar, Splashscreen } from 'ionic-native';\n    import { Page1 } from '../pages/page1/page1';\n\n    @Component({\n      template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\n    })\n    export class MyApp {\n      rootPage = Page1;\n\n      constructor(platform: Platform) {\n        platform.ready().then(() => {\n          // Okay, so the platform is ready and our plugins are available.\n          // Here you can do any higher level native things you might need.\n          StatusBar.styleDefault();\n          Splashscreen.hide();\n        });\n      }\n    }\n    ```", "```js\n    $ mkdir ./src/pages/page1\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Profile\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-card>\n        <ion-card-header>\n          What you are entering\n        </ion-card-header>\n        <ion-card-content>\n          <ion-badge item-right>Name</ion-badge> {{ user.name }}\n          <br><br>\n          <ion-badge item-right>Age</ion-badge> {{ user.age }}\n        </ion-card-content>\n      </ion-card>\n      <ion-list>\n\n        <ion-item>\n          <ion-label fixed>Name</ion-label>\n          <ion-input type=\"text\" [(ngModel)]=\"user.name\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label fixed>Password</ion-label>\n          <ion-input type=\"number\" [(ngModel)]=\"user.age\"></ion-input>\n        </ion-item>\n\n      </ion-list>\n\n      <button ion-button full block (click)=\"goToPage2()\">Go to Page 2</button>\n\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { UserService } from '../../services/user';\n    import { Page2 } from '../page2/page2';\n\n    @Component({\n      selector: 'page-one',\n      templateUrl: 'page1.html'\n    })\n    export class Page1 {\n      private user: any;\n      private nav: any;\n\n      constructor(public navCtrl: NavController, user: UserService, nav: NavController) {\n        console.log(user.name);\n        this.user = user;\n        this.nav = nav;\n      }\n\n      goToPage2(){\n        this.nav.push(Page2);\n      }\n    }\n    ```", "```js\n    $ mkdir ./src/pages/page1\n\n    ```", "```js\n    <ion-header>\n      <ion-navbar>\n        <ion-title>\n          Confirmation\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n\n    <ion-content class=\"home\">\n      <ion-card>\n        <ion-card-header>\n          Please confirm your profile\n        </ion-card-header>\n        <ion-card-content>\n          {{ user.name }} is {{ user.age }} years old\n        </ion-card-content>\n      </ion-card>\n\n      <button ion-button full block (click)=\"goToPage1()\">Back to Page 1</button>\n    </ion-content>\n    ```", "```js\n    import { Component } from '@angular/core';\n    import { NavController } from 'ionic-angular';\n    import { UserService } from '../../services/user';\n    import { Page1 } from '../page1/page1';\n\n    @Component({\n      selector: 'page-two',\n      templateUrl: 'page2.html'\n    })\n    export class Page2 {\n      private user: any;\n      private nav: any;\n\n      constructor(public navCtrl: NavController, user: UserService, nav: NavController) {\n        console.log(user.name);\n        this.user = user;\n        this.nav = nav;\n      }\n\n      goToPage1(){\n        this.nav.push(Page1);\n      }\n    }\n    ```", "```js\n    $ mkdir ./src/services\n\n    ```", "```js\n    import {Injectable} from '@angular/core';\n\n    @Injectable()\n    export class UserService {\n      private _name: string;\n      private _age: number;\n\n      constructor() {\n        this._name = 'John Connor';\n        this._age = 31;\n      }\n\n      get name() {\n        return this._name;\n      }\n\n      set name(newVal) {\n        console.log('Set name = ' + newVal);\n        this._name = newVal;\n      }\n\n      get age() {\n        return this._age;\n      }\n\n      set age(newVal) {\n        console.log('Set age = ' + newVal);\n        this._age = newVal;\n      }\n    }\n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { IonicApp, IonicModule } from 'ionic-angular';\n    import { MyApp } from './app.component';\n    import { Page1 } from '../pages/page1/page1';\n    import { Page2 } from '../pages/page2/page2';\n    import { UserService } from '../services/user';\n\n    @NgModule({\n      declarations: [\n        MyApp,\n        Page1,\n        Page2\n      ],\n      imports: [\n        IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n        MyApp,\n        Page1,\n        Page2\n      ],\n      providers: [UserService]\n    })\n    export class AppModule {}\n    ```", "```js\n    $ ionic serve\n\n    ```", "```js\nproviders: [UserService]\n```", "```js\nimport { UserService } from '../../services/user';\n```", "```js\n  constructor(user: UserService, nav: NavController) {\n    console.log(user.name);\n    this.user = user;\n    this.nav = nav;\n  }\n```", "```js\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class UserService {\n  private _name: string;\n  private _age: number;\n\n  constructor() {\n    this._name = 'John Connor';\n    this._age = 31;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(newVal) {\n    console.log('Set name = ' + newVal);\n    this._name = newVal;\n  }\n\n  get age() {\n    return this._age;\n  }\n\n  set age(newVal) {\n    console.log('Set age = ' + newVal);\n    this._age = newVal;\n  }\n}\n```"]