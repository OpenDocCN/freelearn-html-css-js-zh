["```js\nnpm install webpack -g\n\n```", "```js\nnpm install flux babel-core babel-loader babel-preset-es2015 --save-dev\n\n```", "```js\nnpm install\n\n```", "```js\n<!doctype html>\n<html>\n  <head>\n    <title>Hello Flux</title>\n    <script src=\"img/main-bundle.js\" defer></script>\n  </head>\n  <body></body>\n</html>\n```", "```js\n// Imports the \"flux\" module.\nimport * as flux from 'flux';\n\n// Creates a new dispatcher instance. \"Dispatcher\" is\n// the only useful construct found in the \"flux\" module.\nconst dispatcher = new flux.Dispatcher();\n\n// Registers a callback function, invoked every time\n// an action is dispatched.\ndispatcher.register((e) => {\n  var p;\n\n  // Determines how to respond to the action. In this case,\n  // we're simply creating new content using the \"payload\"\n  // property. The \"type\" property determines how we create\n  // the content.\n  switch (e.type) {\n    case 'hello':\n      p = document.createElement('p');\n      p.textContent = e.payload;\n      document.body.appendChild(p);\n      break;\n    case 'world':\n      p = document.createElement('p');\n      p.textContent = `${e.payload}!`;\n      p.style.fontWeight = 'bold';\n      document.body.appendChild(p);\n      break;\n    default:\n      break;\n  }\n});\n\n// Dispatches a \"hello\" action.\ndispatcher.dispatch({\n  type: 'hello',\n  payload: 'Hello'\n});\n\n// Dispatches a \"world\" action.\ndispatcher.dispatch({\n  type: 'world',\n  payload: 'World'\n});\n```"]