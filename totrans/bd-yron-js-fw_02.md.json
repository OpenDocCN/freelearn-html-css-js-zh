["```js\npages/index.vue\n<template>\n  <NuxtLink to=\"/\">Index page</NuxtLink>\n  <NuxtLink href=\"https://www.packtpub.com/\" target=\"_blank\"\">Packt</NuxtLink>\n</template>\n```", "```js\n> npm run dev\n  > Local:    http://localhost:3000/\n  > Network:  http://192.168.1.206:3000/\n```", "```js\nexport type NuxtLinkProps = {\n to?: string | RouteLocationRaw\n href?: string | RouteLocationRaw\n target?: '_blank' | '_parent' | '_self' | '_top' | (\n  string & {}) | null\n // ...\n}\nexport function defineNuxtLink (options: NuxtLinkOptions) {\n const componentName = options.componentName || 'NuxtLink'\n return defineComponent({...})\n}\n```", "```js\nreturn h('a', { ref: el, href, rel, target})\n```", "```js\nmain.ts\nconst port = 5300;\nconst app = await NestFactory.create(AppModule);\nawait app.listen(port);\n```", "```js\nimport * as express from 'express';\nimport * as http from 'http';\nimport * as https from 'https';\n// ...\nexport class ExpressAdapter extends AbstractHttpAdapter {\n  // ...\n  public listen(port: string | number, callback?: () =>\n    void): Server;\n  public listen(\n    port: string | number,\n    hostname: string,\n    callback?: () => void,\n  ): Server;\n  public listen(port: any, ...args: any[]): Server {\n    return this.httpServer.listen(port, ...args);\n  }\n  // ...\n}\n```", "```js\ninitHttpServer(options) {\n  const isHttpsEnabled = options && options.httpsOptions;\n  if (isHttpsEnabled) {\n  this.httpServer = https.createServer\n    (options.httpsOptions, this.getInstance());\n  } else {\n  this.httpServer = http.createServer(this.getInstance());\n  }\n   // ...\n}\n```", "```js\n// Vanilla JavaScript\nsomeInput.addEventListener('keyup', keyDownHandler)\n// Vanilla HTML\n<input type=\"text\" onkeyup=\"keyDownHandler()\" />\n// React\n<input type=\"text\" value={answer} onKeyPress=\n  {keyDownHandler}/>\n// Angular key down combination of SHIFT + ESC keys\n<input (keyup.shift.esc)=\"keyDownHandler($event)\" />\n// Vue key down\n<input @keyup.shift.esc=\"keyDownHandler\" />\n```", "```js\nboard.on(\"ready\", function() {\n  const gps = new five.GPS({\n    pins: {rx: 11, tx: 10}\n  });\n  gps.on(\"change\", function() {\n    console.log(this.altitude);\n  });\n  gps.on(\"navigation\", function() {\n    console.log(this.speed);\n  });\n});\n```", "```js\n@Injectable()\nclass SomeService implements OnApplicationShutdown {\n  onApplicationShutdown(processSignal: string) {\n    // ...\n  }\n}\n```", "```js\n<Routes>\n  <Route path=\"/\" element={<Layout />}>\n    <Route index element={<Login />} />\n    <Route path=\"register\" element={<Register />} />\n  </Route>\n</Routes>\n```", "```js\napp.get('/framework-organization', (req, res) => {\n  res.send('Learn about framework organization!')\n})\n```", "```js\nlet myModule = (function () {\n  // ...\n  return {\n    someProperty: function ()  {\n    // ...\n    }\n  }\n})();\n```", "```js\nmodule.exports = class MyModule {\n  constructor(someProperty) {\n    this.someProperty = someProperty;\n  }\n  myMethod() {\n    return this.someProperty;\n  }\n};\n```", "```js\nconst Zlib = require('zlib');\nconst Accept = require('@hapi/accept');\nexports = module.exports = internals.Compression = class {\n   // ...\n   accept(request) {\n        const header = request.headers['accept-encoding'];\n        // ...\n   }\n};\n```"]