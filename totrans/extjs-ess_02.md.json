["```js\nExt.define('BizDash.config.Config', {\n},\nfunction(){\n  console.log('Config class created');\n});\n```", "```js\nExt.create('BizDash.config.Config', {});\n```", "```js\nExt.define('BizDash.config.Constants', {\n},\nfunction(){\n  console.log('BizDash.config.Constants defined.');\n});\n```", "```js\nExt.define('BizDash.config.Config', {\n  requires: ['BizDash.config.Constants']\n},\nfunction(){\n  console.log('BizDash.config.Config defined');\n});\n```", "```js\nExt.create('BizDash.config.Config', {});\n```", "```js\nExt.Loader.setConfig({\n  paths: {\n    Ext     : '../ext/src',\n    BizDash : 'app'\n  }\n});\n```", "```js\nExt.Loader.setConfig({\n  paths: {\n    Ext             : '../ext/src',\n    BizDash         : 'app',\n    'Custom.path'   : '..CustomClasses/path'\n  }\n});\n```", "```js\nExt.define('BizDash.Application', {\n  extend: 'Ext.app.Application',\n  name: 'BizDash',\n  requires: [ 'BizDash.config.Config' ],\n  ...\n});\n```", "```js\nExt.define('BizDash.config.Config', {\n  requires: ['BizDash.config.Constants'],\n  version: '0.0.1-0'\n},\n  function(){\n  console.log('BizDash.config.Config defined');\n});\n```", "```js\nvar config = Ext.create('BizDash.config.Config', {});\n// logs 0.0.1-0 console.log(config.version);\n```", "```js\nExt.define('BizDash.config.Config', {\n  requires: ['BizDash.config.Constants'],\n  version: '0.0.1-0',\n  getBuildNumber: function(){\n    var versionSplit = this.version.split('-');\n    return versionSplit[1];\n  }\n},\nfunction() {\n  console.log('BizDash.config.Config defined');\n});\n```", "```js\n// logs \"0\"\n  console.log(config.getBuildNumber());\n```", "```js\nExt.define('BizDash.config.Constants', {\n  statics: {\n    ENVIRONMENT: 'DEV'\n  }\n},\nfunction(){\n  console.log('BizDash.config.Constants defined.');\n});\n```", "```js\n// logs \"DEV\"\nconsole.log(BizDash.config.Constants.ENVIRONMENT);\n```", "```js\nExt.define('BizDash.config.Config', {\n singleton: true, \n  ...\n},\nfunction() {\n  console.log('BizDash.config.Config defined');\n  // logs \"true\"\n  console.log(BizDash.config.Config.isInstance);\n});\n```", "```js\nExt.define('BizDash.config.Config', {\n  extend: 'Ext.util.Observable',\n  ...\n}, function() {\n  // logs \"function(){..}\"\n  console.log(BizDash.config.Config.on);\n});\n```", "```js\nExt.define('Overrides.config.Config', {\n    override: 'BizDash.config.Config',\n});\n```", "```js\nExt.define('Overrides.config.Config', {\n  override: 'BizDash.config.Config',\n  getBuildNumber: function() {\n    return 'Build Number: ' + this.callParent(arguments);\n  }\n});\n```", "```js\napp.overrides=${app.dir}/overrides\n```", "```js\n/* matches Ext JS 5.0.0 compatibility: '5.0.0'\nmatches Ext JS 5.0.0 OR Ext JS 4.2.1 compatibility: ['5.0.0', '4.2.1']\nmatches the 'Ext JS' package with 5.0.0 and 'Sencha Core' with 5.0.0 */\ncompatibility: {\n  and: [\n    'extjs@5.0.0',\n    'sencha-core@5.0.0'\n  ]\n}\n```", "```js\nExt.define('BizDash.config.Config', {\n  extend: 'Ext.util.Observable',\n  singleton: true,\n  requires: ['BizDash.config.Constants'],\n  config: { version: '0.0.1-0' },\n  constructor: function(config){\n    this.initConfig(config);\n    this.callParent([config]);\n  },\n  getBuildNumber: function() {\n    var versionSplit = this.getVersion().split('-');\n    return versionSplit[1];\n  }\n}, function() {\n  ...\n});\n```", "```js\nExt.define('BizDash.config.Config', {\n  extend: 'Ext.util.Observable',\n  singleton: true,\n  requires: ['BizDash.config.Constants'],\n  config: {\n    version: '0.0.1-0',\n    ...\n  },\n  ...\n  applyVersion: function(newVersion, oldVersion){\n  return newVersion;\n  },\n  updateVersion: function(newVersion, oldVersion){\n    this.fireEvent('versionchanged', newVersion, oldVersion);\n  }\n}, function() { ... });\n```", "```js\nvar config = Ext.create('BizDash.config.Config', {\n  version: '0.2.0-0'\n});\n// logs \"0.2.0-0\"\nconsole.log(config.getVersion());\n```", "```js\nExt.define('BizDash.config.Config', {\n  extend: 'Ext.util.Observable',\n  singleton: true,\n  requires: ['BizDash.config.Constants'],\n  config: {\n    version: '0.0.1-0',\n    isPhone : false,\n    isTablet : false,\n    isDesktop: false\n  },\n  platformConfig: [ {\n    platform: ['phone'],\n    isPhone : true\n  },\n  {\n    platform: ['tablet'],\n    isTablet: true\n  },\n  {\n    platform : ['desktop'],\n    isDesktop: true\n  }]\n  ...\n});\n```", "```js\n// logs \"true\", \"false\", \"false\" \nconsole.log(BizDash.config.Config.getIsDesktop()); \nconsole.log(BizDash.config.Config.getIsPhone()); \nconsole.log(BizDash.config.Config.getIsTablet());\n```"]