["```js\n$ npm init -y\n```", "```js\n$ npm i react react-dom react-router-dom video.js --save\n```", "```js\n$ npm i typescript sass @types/react @types/react-dom --save-dev\n```", "```js\nimport * as React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './style.scss';\nimport App from './App';\nconst root = createRoot(document.querySelector('#app')!);\nroot.render(<App />);\n```", "```js\nimport * as React from \"react\";\nimport { BrowserRouter, Route, Routes } from\n  \"react-router-dom\";\nimport Layout from \"./Layout\";\nconst Home = React.lazy(() => import(\"./Home\"));\nconst Video = React.lazy(() => import(\"./Video\"));\nconst Audio = React.lazy(() => import(\"./Audio\"));\nconst App = () => (\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<Home />} />\n        <Route path=\"video\" element={<Video />} />\n        <Route path=\"audio\" element={<Audio />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>\n);\nexport default App;\n```", "```js\n$ npm install webpack webpack-cli --save-dev\n```", "```js\n$ npx webpack\n```", "```js\nassets by status 0 bytes [cached] 1 asset\n\nWARNING in configuration\n\nThe 'mode' option has not been set, webpack will fallback to 'production' for this value.\n\nSet 'mode' option to 'development' or 'production' to enable defaults for each environment.\n\nYou can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/\n\nERROR in main\n\nModule not found: Error: Can't resolve './src' in '/home/node/examples/Chapter06/example01'\n\n[...]\n\nwebpack 5.74.0 compiled with 1 error and 1 warning in 116 ms\n```", "```js\nmodule.exports = {\n  entry: {\n    app: \"./src/script.tsx\",\n  },\n};\n```", "```js\n$ npx webpack --mode production\n\nassets by status 360 bytes [cached] 1 asset\n\n./src/script.tsx 185 bytes [built] [code generated] [1 error]\n\nERROR in ./src/script.tsx 5:54\n\nModule parse failed: Unexpected token (5:54)\n\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n\n| import App from './App';\n\n|\n\n> const root = createRoot(document.querySelector('#app')!);\n\n| root.render(<App />);\n\n|\n\nwebpack 5.74.0 compiled with 1 error in 145 ms\n```", "```js\n$ npm i ts-loader sass-loader css-loader style-loader babel-loader @babel/core @babel/preset-env @babel/preset-react html-webpack-plugin --save-dev\n```", "```js\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react\",\n    \"module\": \"ESNext\"\n  },\n  \"include\": [\"./src\"],\n  \"exclude\": [\"./node_modules\"]\n}\n```", "```js\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst babelLoader = { // make the config reusable\n  loader: \"babel-loader\", // name of the loader\n  options: { // the specific Babel options\n    presets: [\"@babel/preset-env\", \"@babel/preset-react\"],\n  },\n};\nconst tsLoader = {\n  loader: \"ts-loader\", // name of the loader\n  options: { // the specific TypeScript loader options\n    transpileOnly: true,\n  },\n};\nmodule.exports = {\n  entry: { // defines the entry points\n    app: \"./src/script.tsx\", // named (\"app\") entry point\n  },\n  resolve: {\n    // defines what extensions to try out for resolving\n    extensions: [\".ts\", \".tsx\", \".js\", \".jsx\", \".json\"],\n  },\n  module: {\n    // defines the rules for transforming modules\n    rules: [\n      { // applied for all *.scss files\n        test: /\\.scss$/i,\n        use: [\"style-loader\", \"css-loader\", \"sass-loader\"],\n      },\n      { // applied for all *.css files\n        test: /\\.css$/i,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n      { // applied for all *.js and *.jsx files\n        test: /\\.jsx?$/i,\n        use: [babelLoader],\n        exclude: /node_modules/,\n      },\n      { // applied for all *.ts and *.tsx files\n        test: /\\.tsx?$/i,\n        use: [babelLoader, tsLoader],\n      },\n      { // applied for anything other than *.js, *.jsx, ...\n        exclude: [/^$/, /\\.(js|jsx|ts|tsx)$/i, /\\.s?css$/i,\n          /\\.html$/i, /\\.json$/i],\n        type: \"asset/resource\",\n      },\n    ],\n  },\n  // defines plugins to use for extending Webpack\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: \"./src/index.html\",\n    }),\n  ],\n};\n```", "```js\n$ npm install webpack-dev-server --save-dev\n```", "```js\n$ npx webpack serve --mode development\n\n<i> [webpack-dev-server] Project is running at:\n\n<i> [webpack-dev-server] Loopback: http://localhost:8081/\n\n<i> [webpack-dev-server] On Your Network (IPv4): http://172.25.98.248:8081/\n\n<i> [webpack-dev-server] Content not from webpack is served from '/home/node/examples/Chapter06/example01/public' directory\n\n[...]\n\nwebpack 5.74.0 compiled successfully in 1911 ms\n```", "```js\n// ... like beforehand\nmodule.exports = {\n  // ... like beforehand\n  devServer: {\n    historyApiFallback: true,\n  },\n};\n```", "```js\n$ npm install esbuild --save-dev\n```", "```js\n$ npx esbuild\n```", "```js\n$ npx esbuild --bundle src/script.tsx --outdir=dist --minify\n\n [ERROR] No loader is configured for \".scss\" files: src/style.scss\n\n    src/script.tsx:3:7:\n\n      3 │ import './style.scss';\n\n                ~~~~~~~~~~~~~~\n\n [ERROR] No loader is configured for \".mp3\" files: src/sound.mp3\n\n    src/Audio.tsx:4:22:\n\n      4 │ import audioPath from \"./sound.mp3\";\n\n                               ~~~~~~~~~~~~~\n\n[...]\n\n5 errors\n```", "```js\nconst { build } = require(\"esbuild\");\nbuild({ // provide options to trigger esbuild's build\n  entryPoints: [\"./src/script.tsx\"], // where to start from\n  outdir: \"./dist\", // where to write the output to\n  bundle: true, // bundle the resulting files\n  minify: true, // turn on minification\n});\n```", "```js\n$ npm i esbuild-sass-plugin @craftamap/esbuild-plugin-html ––save-dev\n```", "```js\nconst { build } = require(\"esbuild\");\nconst { sassPlugin } = require(\"esbuild-sass-plugin\");\nconst { htmlPlugin } = require(\"@craftamap/esbuild-plugin-\n  html\");\nbuild({\n  entryPoints: [\"./src/script.tsx\"],\n  outdir: \"./dist\",\n  format: \"esm\", // use modern esm format for output\n  bundle: true,\n  minify: true,\n  metafile: true, // required for htmlPlugin\n  splitting: true, // allow lazy loading\n  loader: {\n    \".jpg\": \"file\",\n    \".webp\": \"file\",\n    \".mp3\": \"file\",\n    \".mp4\": \"file\",\n  },\n  plugins: [\n    sassPlugin(),\n    htmlPlugin({\n      files: [\n        {\n          entryPoints: [\"./src/script.tsx\"],\n          filename: \"index.html\",\n          scriptLoading: \"module\", // because of esm\n          htmlTemplate: \"./src/index.html\",\n        },\n      ],\n    }),\n  ],\n});\n```", "```js\nconst { serve } = require(\"esbuild\");\nconst { sassPlugin } = require(\"esbuild-sass-plugin\");\nconst { htmlPlugin } = require(\"@craftamap/esbuild-plugin-\n  html\");\n// use helper from esbuild to open a dev server\nserve(\n  {\n    // will be reachable at http://localhost:1234\n    port: 1234,\n  },\n  {\n    // same options as beforehand (supplied to build())\n    // ...\n  }\n);\n```", "```js\n$ npm install parcel ––save-dev\n```", "```js\n$ npx parcel src/index.html\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width,\n      initial-scale=1.0\">\n    <title>Bundler Example</title>\n    <link rel=\"stylesheet\" href=\"./style.scss\">\n</head>\n<body>\n<div id=\"app\"></div>\n<script type=\"module\" src=\"img/script.tsx\"></script>\n</body>\n</html>\n```", "```js\n{\n  \"extends\": \"@parcel/config-default\",\n  \"transformers\": {\n    \"*.{mp3,mp4}\": [\"@parcel/transformer-raw\"]\n  }\n}\n```", "```js\n$ npx parcel src/index.html\n\nServer running at http://localhost:1234\n\n Built in 12ms\n```", "```js\n$ npx parcel build src/index.html\n\n Built in 6.11s\n\ndist/index.html                  402 B    4.73s\n\ndist/index.3429125f.css       39.02 KB    149ms\n\ndist/index.cb13c36e.js       156.34 KB    1.90s\n\ndist/Home.bf847a6b.js          1.05 KB    148ms\n\ndist/river.813c1909.webp      29.61 KB    150ms\n\ndist/snow.390b5a72.jpg        13.28 KB    138ms\n\ndist/Video.987eca2d.js           908 B    1.90s\n\ndist/earth.4475c69d.mp4       1.5 MB     61ms\n\ndist/Video.61df35c5.js       611.76 KB    4.62s\n\ndist/Audio.677f10c0.js           908 B    149ms\n\ndist/sound.6bdd55a4.mp3      746.27 KB     92ms\n```", "```js\n$ npm install vite --save-dev\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width,\n      initial-scale=1.0\">\n    <title>Bundler Example</title>\n    <link rel=\"stylesheet\" href=\"./src/style.scss\">\n</head>\n<body>\n<div id=\"app\"></div>\n<script type=\"module\" src=\"img/script.tsx\"></script>\n</body>\n</html>\n```", "```js\n$ npx vite\n\n  VITE v3.0.5  ready in 104 ms\n\n    Local:   http://localhost:5173/\n\n    Network: use --host to expose\n```", "```js\n$ npx vite build\n\nvite v3.0.5 building for production...\n\n 110 modules transformed.\n\ndist/assets/river.4a5afeaf.webp   29.61 KiB\n\ndist/assets/snow.cbc8141d.jpg     13.96 KiB\n\ndist/assets/sound.fa282025.mp3    746.27 KiB\n\ndist/assets/earth.71944d74.mp4    1533.23 KiB\n\ndist/index.html                   0.42 KiB\n\ndist/assets/Home.82897af9.js      0.45 KiB / gzip: 0.23 KiB\n\ndist/assets/Video.ce9d6500.js     0.36 KiB / gzip: 0.26 KiB\n\n[...]\n\ndist/assets/index.404f5c02.js     151.37 KiB / gzip: 49.28 KiB\n\ndist/assets/Player.c1f283e6.js    585.26 KiB / gzip: 166.45 KiB\n```"]