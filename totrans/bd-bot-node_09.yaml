- en: Chapter 9.  A Kik Salesforce CRM Bot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kik Messenger, or simply Kik, is a free mobile messenger app. This is available
    on iOS, Android, and Windows Phone. Using this instant messenger app, users can
    send or receive messages, photos, videos, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Kik is mainly famous because it does not verify user information upon registration.
    This helps users to maintain their anonymity.
  prefs: []
  type: TYPE_NORMAL
- en: Kik users have their own code. Using these codes, users can connect with their
    friends quickly and easily. Users can scan the code of a user and start chatting
    right away. This is also applicable to Kik groups. Users can scan Kik codes for
    groups and join them easily.
  prefs: []
  type: TYPE_NORMAL
- en: The simplicity and ease of establishing a chat communication and, mainly, the
    anonymity, have made Kik a very popular chat platform among young people.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will learn about how to create a basic Kik bot and how to
    enhance the same by integrating it with Salesforce CRM.
  prefs: []
  type: TYPE_NORMAL
- en: But before going into the details, let's understand more about Salesforce CRM.
  prefs: []
  type: TYPE_NORMAL
- en: What is Salesforce?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Salesforce is a cloud-based **customer relationship management** (**CRM**) software
    solution for sales, service, marketing, analytics, and collaboration. All these
    software solutions are prebuilt and run on a cloud platform. Salesforce does not
    need any IT person to set it up or manage. CRM users just need to log in to start
    using this platform.
  prefs: []
  type: TYPE_NORMAL
- en: Details of Salesforce can be found at [https://www.salesforce.com](https://www.salesforce.com)
    .
  prefs: []
  type: TYPE_NORMAL
- en: What is Force.com?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Force.com is a **platform as a service** (**PaaS**). This platform consists
    of underlying components such as database, code, and user interface, on which
    developers can create and deliver powerful enterprise apps. With this platform,
    developers can deliver powerful apps just by using a few clicks or code. Even
    business users can develop and deliver app workflows just by dragging and dropping.
  prefs: []
  type: TYPE_NORMAL
- en: In short, Salesforce, with its products and solutions, is a customer success
    platform which changes the way people connect with their customers.
  prefs: []
  type: TYPE_NORMAL
- en: Kik mobile app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned in the introduction, Kik is a free mobile messenger app. This can
    be downloaded from the App Store ( [https://itunes.apple.com/ca/app/kik/id357218860?mt=8](https://itunes.apple.com/ca/app/kik/id357218860?mt=8)
    ) or Google Play Store ( [https://play.google.com/store/apps/details?id=kik.android&hl=en](https://play.google.com/store/apps/details?id=kik.android&hl=en)
    ).
  prefs: []
  type: TYPE_NORMAL
- en: For this chapter, I am assuming the Kik mobile app has already been downloaded
    and installed from the App Store or Google Play Store.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have already installed the Kik app from the Google Play Store and also created
    my account on the Kik app. The following screenshot shows what the Kik mobile
    app looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Kik mobile app](img/image00407.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Kik does not have a web or desktop version for messaging so we will be using
    the Kik app from a mobile.
  prefs: []
  type: TYPE_NORMAL
- en: Kik bots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kik bots are just programs that provide users with an automated conversational
    experience with the help of Kik APIs. Users can chat to these bots for fun, for
    any help, or for seeking information for entertainment. Kik has recently released
    a Bot Shop. Users can discover bots and connect them easily.
  prefs: []
  type: TYPE_NORMAL
- en: Our Kik bot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our Kik bot will be based on the Salesforce and Force.com platforms, which
    I explained previously. At a high level, we will be following the following steps
    for our bot:'
  prefs: []
  type: TYPE_NORMAL
- en: Developing a basic Kik bot
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enhancing our basic bot program for a more conversational experience as per
    Kik guidelines
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Establishing a connection between CRM and our basic bot
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on the user's requirements, getting CRM data from Salesforce and presenting
    the user data in the Kik app
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating our first Kik bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just like Slack, Kik also helps us to create our bot using an automated agent,
    **Botsworth**. Let's follow the steps to create our first Kik bot.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Kik dev platform on a browser
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Visit [https://dev.kik.com/#/home](https://dev.kik.com/#/home), as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Kik dev platform on a browser](img/image00408.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The URL opens the Kik developer platform, which helps us to create and configure
    our Kik bot. This screen shows a Kik code for creating a bot. This code needs
    to be scanned using the Kik app, which we have already installed and configured
    with our Kik account as well.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Kik app from a mobile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Open the Kik app on a device and pull down from the top of your main chat list
    to open the scanner, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Kik app from a mobile](img/image00409.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Using the scanner, scan the Kik code from [https://dev.kik.com/#/home](https://dev.kik.com/#/home).
  prefs: []
  type: TYPE_NORMAL
- en: This scanner can also be located from the Kik app's settings menu (a small gear
    icon on the top right) by selecting your **Kik Code** page from the menu items.
  prefs: []
  type: TYPE_NORMAL
- en: 'After scanning, Kik''s trusty bot, **Botsworth**,**** will send a message,
    as shown in the following screenshot, on our app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Kik app from a mobile](img/image00410.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Now provide a unique bot name to **Botsworth** in the chat window itself.
  prefs: []
  type: TYPE_NORMAL
- en: '**Botsworth** will create our bot and will also notify us of the same, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Kik app from a mobile](img/image00411.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s go back to our browser, where the [https://dev.kik.com/#/home](https://dev.kik.com/#/home)
    page is open. You will notice that the newly configured bot account has logged
    in to the platform and is showing bot properties such as **Display Name**, **Admins**,
    and **API Key**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Kik app from a mobile](img/image00412.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The bot name, **sforcebot,** and **API Key** will be used to wire up Kik APIs
    while building a conversational experience later.
  prefs: []
  type: TYPE_NORMAL
- en: To receive messages from users, our bot needs **Webhooks** integration. Before
    we set up Webhooks, let's create a Node.js server app for our bot on Azure in
    the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up our bot server in Azure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s log in to the Azure portal and locate App Services to create a Node.js-based
    bot server as `thesfbotsite`. This server app is based on the **Node JS Empty
    Web App** template. Refer to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up our bot server in Azure](img/image00413.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This will provision our `thesfbotsite.azurewebsites.net` server app in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: To modify the basic bot program, first we will clone the template on our local
    filesystem using git commands. Then we will modify it and then deploy it to Microsoft
    Azure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by creating a folder in our local drive in order to store our
    bot program from the Command Prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now clone the template to the local filesystem and change the remote git repository
    as well for this bot.
  prefs: []
  type: TYPE_NORMAL
- en: Detailed steps of how to clone the template to the local filesystem and how
    to change the remote git repository can be found in the *Setting up our bot server
    in Azure* section in [Chapter 7](part0042.xhtml#aid-181NK2 "Chapter 7. Facebook
    Messenger Bot, Who's Off – A Scheduler Bot for Teams") , *Facebook Messenger Bot
    Who's Off - A Scheduler Bot for Teams*.
  prefs: []
  type: TYPE_NORMAL
- en: Kik bot configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before our bot can start interacting with users, it needs configuration. To
    configure our bot, we will be making a POST request with a Webhook URL to which
    messages will be delivered. Also, any additional features for read receipts and
    receive typing can also be configured here.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be done by firing a URL command or by writing a JavaScript with the
    following code in a simple Node.js program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This code sets the `webhook` for our bot to the newly created site in Azure
    at the path `/incoming`.
  prefs: []
  type: TYPE_NORMAL
- en: Details of these configurations can be found at [https://dev.kik.com/#/docs/messaging#configuration](http://bit.do/dev-kik-docs-messaging-configuration)
    .
  prefs: []
  type: TYPE_NORMAL
- en: Wiring up our bot server with the Kik platform
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order for our bot to interact with the Kik platform, we will be using the
    Kik Node API library. This can be found at [https://www.npmjs.com/package/@kikinteractive/kik](https://www.npmjs.com/package/@kikinteractive/kik).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s install the Kik API library and other libraries using the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s update our `server.js` file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Understanding the code of our basic Kik bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's look at basic code implementation from `server.js`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We used the `@kikinteractive/kik` library with the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Using this library, we instantiated our bot by providing `username` and `apikey`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'When our bot is wired up successfully, this will show up in the Kik app. Also,
    our bot will notify the user `mbhintade` with the help of the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'When we say hi or hello to our bot, the bot will reply to us using the following
    code lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding code snippet, we are using the regular expression `/^hi|hello|how|hey$/i`
    to find out what user is messaging. The regular expression used precedingly can
    be described as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Character | Description |'
  prefs: []
  type: TYPE_TB
- en: '| / | Regular expression |'
  prefs: []
  type: TYPE_TB
- en: '| ^ | Matches character `hi` and not from any character group |'
  prefs: []
  type: TYPE_TB
- en: '| &#124; | Matches any single word between two characters |'
  prefs: []
  type: TYPE_TB
- en: '| $ | Matches the end of the input |'
  prefs: []
  type: TYPE_TB
- en: I hope this has given some basic understanding of our Kik bot and its code implementation.
    Now let's run our bot and see how it looks in the Kik mobile app.
  prefs: []
  type: TYPE_NORMAL
- en: Running our basic Kik bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s deploy our modified `server.js` and installed Node packages using the
    following `git` commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Once the code is deployed to Azure, hit the URL [https://thesfbotsite.azurewebsites.net](https://thesfbotsite.azurewebsites.net)
    and see if there are any errors in the Azure log stream. If the code is successful,
    then the bot server will start and our bot will be shown in Kik chats with active
    status.
  prefs: []
  type: TYPE_NORMAL
- en: When the bot started, it showed us the message, **The SForceBot Started...**
  prefs: []
  type: TYPE_NORMAL
- en: When I greeted it by saying **Hi**, the bot replied with the message **Hello,
    I am the SForce Bot. I provide your CRM information just by chatting.**
  prefs: []
  type: TYPE_NORMAL
- en: 'Refer to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running our basic Kik bot](img/image00414.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the next section, we will enhance our bot for an interesting use case.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancing our Kik bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having built a very basic Kik bot, *sforcebot*, let's enhance our Kik bot.
  prefs: []
  type: TYPE_NORMAL
- en: Typically, sales and marketing business users always need to keep track of their
    sales and marketing activities. They need to track their own leads and opportunities,
    and maintain campaigns. Now, to track these activities, they rely on CRM systems.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will actually look at how a bot can be effective in such
    business use cases. Our bot will be now integrated with a CRM system and will
    provide all the required information to the business users at their fingertips.
  prefs: []
  type: TYPE_NORMAL
- en: Let's assume you are one of the business users who work in sales and marketing.
    Now, you would like to see upcoming business opportunities quickly and easily.
    It is assumed that your organization is already on a cloud-based CRM. So you will
    be interacting with the Kik bot named sforcebot. During the interaction, you will
    request upcoming opportunities for the current month. The bot knows who you are
    and will look for opportunities owned by you for the current month. sforcebot
    will gather the information and will present opportunities in a nice readable
    format within a chat window.
  prefs: []
  type: TYPE_NORMAL
- en: Awesome!!
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce and our bot
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let's assume we have our business opportunities data in Salesforce and we have
    already logged in to the Saleforce platform. Now, from our bot perspective, we
    are interested in showing opportunity data for the current month and the next
    month. In Salesforce, we get these views preconfigured for us.
  prefs: []
  type: TYPE_NORMAL
- en: 'Opportunities closing this month can be seen as in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Salesforce and our bot](img/image00415.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Opportunities closing next month can be seen as in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Salesforce and our bot](img/image00416.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In our bot, we will be pulling the same data based on users' requests for information.
    So it's time to prepare for Saleforce and our bot integration.
  prefs: []
  type: TYPE_NORMAL
- en: Security token to access the Salesforce API
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To access information from Salesforce, we need a security token. This token
    is a case-sensitive alphanumeric code which is associated with your password.
    Whenever we change our password, this security token is also reset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s get our security token for our Salesforce API access, using the **Reset
    Security Token** menu option from Salesforce as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Security token to access the Salesforce API](img/image00417.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To quickly locate the **Reset Security Token** option, you can use the Quick
    Find/Search option from the left corner of menu options from Salesforce. In the
    preceding screenshot, I entered the words `Security Token` and searched for the
    option, **Reset Security Token**.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Reset Security Token** button to get the fresh token for accessing
    Salesforce APIs. The new token will be sent to your registered e-mail ID.
  prefs: []
  type: TYPE_NORMAL
- en: Wiring it up all together
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To wire up Salesforce and Node.js, we will be using the Salesforce API library
    JSforce. This can be located at [https://www.npmjs.com/package/jsforce](https://www.npmjs.com/package/jsforce)
    .
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s install the `JSforce` library using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'To wire up all the things together, let''s modify our earlier `server.js` as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Understanding the code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We already have a code understanding for the basic bot. Let''s look at the
    code step by step from a Salesforce integration perspective:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: We have declared variables for the Salesforce username and password. We have
    also declared a variable, `accesstoken`. This is needed while accessing Salesforce
    APIs. The `fromUserNam` variable is declared for storing the username. This is
    used while replying to messages from the user who has started the conversation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s look at how we are wiring up Salesforce for our bot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: These code lines use the npm package, `jsforce`, for connecting Salesforce.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s see how we are enhancing the conversation experience for our bot.
    The following code lines help to guide the end user with possible input options:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding code, whenever the end user says `hi` or `hello` or `how` or
    `hey`, the `bot.onTextMessage()` function is called and bot gets the username
    from an `incoming` message with the help of the `bot.getUserProfile()`function.
  prefs: []
  type: TYPE_NORMAL
- en: Once the name of user who is chatting is retrieved, the bot replies with an
    introduction to the user using the `incoming.reply()` function.
  prefs: []
  type: TYPE_NORMAL
- en: Along with this reply, sforcebot also shows a keyboard with suggested responses.
    This type of keyboard response is generated using the `addResponseKeyboard()`
    method with an array of suggestions such as `(['Closing This Month', 'Closing
    Next Month'])`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To understand this in a better way, let me show you how the suggested responses
    can be seen in the Kik app in our case:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the code](img/image00418.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Closing This Month** and **Closing Next Month** are appearing as possible
    suggested responses which the user can consider. This is really intuitive and
    helps the user to easily select options rather than entering keywords for further
    communication. The user can still enter these keywords and continue, but showing
    such a keyboard saves a lot of time for users. This also guides the user during
    the conversations.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will see code implementations for querying data from
    Salesforce.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s assume now the user has selected one of the options, **Closing This
    Month**. Our bot quickly captures with the help of the `bot.onTextMessage(/^Closing
    This Month/i, (incoming, next)` function and starts responding. There is a regex
    pattern matching done to understand what the user is selecting. Refer to the following
    code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Since the user has selected the option to see opportunities closing this month,
    the bot will log in to Salesforce and query the data with the help of the `conn.login()`and
    `conn.query()` functions.
  prefs: []
  type: TYPE_NORMAL
- en: While logging in to Salesforce, JSforce uses the SOAP login API, so we are using
    `username` and `accesstoken`. Once login is established, we execute the query
    on Salesforce and get the data. We iterate the results and formulate the message
    to be sent to the user identified by the `fromUserName` variable.
  prefs: []
  type: TYPE_NORMAL
- en: If you notice, the `qry` variable is the Salesforce Object Query Language (SOQL).
    You can find further details of SOQL at [https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_sosl_intro.htm](https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_sosl_intro.htm).
  prefs: []
  type: TYPE_NORMAL
- en: In our query, SOQL has made it simpler for date operations. For getting opportunities
    for the current month from Salesforce, we just need to apply a filter using `THIS_MONTH`
    and `NEXT_MONTH`. This really made my life simpler while building these two use
    cases. SOQL is great!
  prefs: []
  type: TYPE_NORMAL
- en: Once this response is set to the user, the user might be interested in opportunities
    for the next month as well, so we are again sending suggested responses at the
    end.
  prefs: []
  type: TYPE_NORMAL
- en: The code implementation for **Closing Next Month** is on similar lines to **Closing
    This Month**. I have kept both the implementations in separate functions. This
    can be further optimized. I will leave this task to the readers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's run our bot now and see how it interacts and provides us with a great
    conversational experience.
  prefs: []
  type: TYPE_NORMAL
- en: Running our enhanced Kik Salesforce bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Deploy the updated code to Azure and start our sforcebot server. After successfully
    starting a bot, it will be shown in Kik. Or you can search by name and then add
    it for chatting. Once added, just say `Hi` and see how the bot is responding to
    us, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running our enhanced Kik Salesforce bot](img/image00419.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'On selecting the option, **Closing This Month**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running our enhanced Kik Salesforce bot](img/image00420.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Hopefully, you have now enough insight on how we can leverage the Kik platform
    and Kik bots for better connection with your employees, users, and partners.
  prefs: []
  type: TYPE_NORMAL
- en: sforcebot for campaign management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we have been retrieving opportunities data in messaging platforms; we
    can also retrieve Salesforce campaigns data. Assume that one of the universities
    is using Salesforce for their campaign management. This university would like
    to spread its campaigns across its students and to ensure there is a better connection
    and engagement between students and the university while running various campaigns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing students'' presence on the Kik platform, this becomes a very effective
    way for connecting to students. Using the same sforcebot, this can be easily achieved.
    Instead of opportunities, now the data will be coming from campaigns. I am just
    illustrating this use case using the following screenshots:'
  prefs: []
  type: TYPE_NORMAL
- en: '![sforcebot for campaign management](img/image00421.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshots, just by passing the `Campaign` keyword, sforcebot
    is displaying active campaigns from Salesforce. Since these are campaigns, we
    are not only showing text messages, but we are also showing pictures about these
    campaigns and their start date and end date.
  prefs: []
  type: TYPE_NORMAL
- en: This way, universities can establish a connection with students and improve
    their engagement and participation for such events.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every enterprise would like to connect to their customers, employees, and partners.
    Knowing users' increasing engagement with chat platforms, these enterprises can
    leverage Kik-like messaging platforms for better connection.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we implemented the Kik bot sforcebot, assuming users' engagement
    with the Kik messaging platform. Sales and marketing users can collaborate as
    well as seeking the right information at the right time and tracking their sales
    and marketing activities easily and effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, we created a basic sforcebot by scanning a code and implemented it
    in Node.js. Then we extended our sforcebot and wired it up with Salesforce. Now,
    based on the user's request, sforcebot provided information on the user's opportunities
    in the chatting interface itself.
  prefs: []
  type: TYPE_NORMAL
- en: We also saw a small example of how universities can use the Kik platform and
    Salesforce to connect to their graduating students. This way, universities can
    connect to their graduates and spread the word about campaigns they are running,
    during their academics.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you had a nice Kik around with this chapter.
  prefs: []
  type: TYPE_NORMAL
