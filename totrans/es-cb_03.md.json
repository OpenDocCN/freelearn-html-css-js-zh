["```js\n// main.js \nexport function main () { \n\n  console.log('Before promise created'); \n\n  new Promise(function (resolve) { \n    console.log('Executing promise'); \n    resolve(); \n  }).then(function () { \n    console.log('Finished promise'); \n  }); \n\n  console.log('After promise created'); \n} \n```", "```js\n// main.js \nexport function main () { \n\n  console.log('Before promise created'); \n\n  new Promise(function (resolve) { \n  }); \n\n  console.log('After promise created'); \n} \n```", "```js\n    new Promise(function (resolve) { \nsetTimeout(function () {\n resolve(Math.random()); }, 5000); \n    }) \n```", "```js\n   new Promise(function (resolve) { \n      setTimeout(function () { \n        resolve(Math.random()); \n      }, 5000); \n }).then(function (result) { console.log('Long running job returned: %s', result); });\n```", "```js\n   new Promise(function (resolve) { \n     resolve(); \n      }).then(function (result) { \n     console.log('Promise Completed'); \n   }); \n```", "```js\n    new Promise(function (resolve, reject) { \n reject(new Error('Something went wrong'); \n    }).then(function (result) { \n    console.log('Promise Completed'); \n   }); \n```", "```js\n    new Promise(function (resolve, reject) { \n reject(new Error('Something went wrong'); \n     }).then(function (result) { \n     console.log('Promise Completed'); \n }).catch(function (error) { console.error(error); });\n```", "```js\n   new Promise(function (resolve) { \n     resolve(Math.random()); \n   }); \n);  \n```", "```js\n    new Promise(function (resolve, reject) { \n         resolve(Math.random()); \n }).then(function(value) {\n return value >= 0.5; });\n```", "```js\n  new Promise(function (resolve, reject) { \n    resolve(Math.random()); \n  }).then(function (value) { \n    return value >= 0.5; \n }).then(function (isReadyForLaunch) { if (isReadyForLaunch) { console.log('Start the countdown! ![](img/f7032fb1-8d2d-4e6e-a0ab-03ac5a186a06.png)'); } else { console.log('Abort the mission. ![](img/4fac89e8-1ce7-4abd-936a-8346d71ba864.png)'); } });\n```", "```js\nexport function main () { \n Promise.resolve({}) \n} \n```", "```js\nexport function main () { \n  Promise.resolve({}).then(function (rocket) {\n console.log('attaching boosters'); rocket.boosters = [{ count: 2, fuelType: 'solid' }, { count: 1, fuelType: 'liquid' }]; return rocket; })\n} \n```", "```js\nexport function main () { \n  Promise.resolve({}) \n    .then(function (rocket) { \n      console.log('attaching boosters'); \n      rocket.boosters = [{ \n        count: 2, \n        fuelType: 'solid' \n      }, { \n        count: 1, \n        fuelType: 'liquid' \n      }]; \n      return rocket; \n    }) \n .then(function (rocket) { console.log('boosters attached'); console.log(rocket); })\n} \n```", "```js\nexport function main() { \n  console.log('Before promise created'); \n\n  const rocket = {}; \n  Promise.all([]) \n\n  console.log('After promise created'); \n}  \n```", "```js\nfunction addBoosters (rocket) { \n  console.log('attaching boosters'); \n  rocket.boosters = [{ \n    count: 2, \n    fuelType: 'solid' \n  }, { \n    count: 1, \n    fuelType: 'liquid' \n  }]; \n  return rocket;  \n}   \n```", "```js\nfunction performGuidanceDiagnostic (rocket) { \n  console.log('performing guidance diagnostic'); \n\n  return new Promise(function (resolve) { \n    setTimeout(function () { \n      console.log('guidance diagnostic complete'); \n      rocket.guidanceDiagnostic = 'Completed'; \n      resolve(rocket); \n    }, 2000); \n  }); \n}    \n```", "```js\nfunction loadCargo (rocket) { \n  console.log('loading satellite'); \n  rocket.cargoBay = [{ name: 'Communication Satellite' }] \n  return rocket; \n}  \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n\n  const rocket = {}; \n Promise.all([ Promise.resolve(rocket).then(addBoosters), Promise.resolve(rocket).then(performGuidanceDiagnostic), Promise.resolve(rocket).then(loadCargo) ]); \n\n  console.log('After promise created'); \n} \n```", "```js\n  const rocket = {}; \n  Promise.all([ \n    Promise.resolve(rocket).then(addBoosters), \n    Promise.resolve(rocket).then(performGuidanceDiagnostic), \n    Promise.resolve(rocket).then(loadCargo) \n ]).then(function (results) { console.log('Rocket ready for launch'); console.log(results); });\n```", "```js\n Promise.all([ \n  findAstronomers, \n  findAvailableTechnicians, \n  findAvailableEquipment \n]).then(function ([astronomers, technicians, equipment]) { \n  // use results for astronomers, technicians, and equipment \n}); \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n\n  const rocket = {}; \n\n  console.log('After promise created'); \n} \n```", "```js\nfunction addBoosters (rocket) { \n  throw new Error('Unable to add Boosters'); \n} \n```", "```js\nfunction performGuidanceDiagnostic (rocket) { \n  return new Promise(function (resolve, reject) { \n    reject(new Error('Unable to finish guidance diagnostic')); \n  }); \n} \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n\n  const rocket = {}; \n Promise.resolve(rocket).then(addBoosters) .catch(console.error); Promise.resolve(rocket).then(performGuidanceDiagnostic)\n .catch(console.error);\n\n  console.log('After promise created'); \n}  \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n\n  console.log('After promise created'); \n} \n```", "```js\nfunction addBoosters(shouldFail) { \n  if (shouldFail) { \n    throw new Error('Unable to add Boosters'); \n  } \n\n  return { \n    boosters: [{ \n      count: 2, \n      fuelType: 'solid' \n    }, { \n      count: 1, \n      fuelType: 'liquid' \n    }] \n  }; \n} \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n\n Promise.resolve(Math.random() > 0.5) .then(addBoosters) \n\n  console.log('After promise created'); \n} \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n  Promise.resolve(Math.random() > 0.5) \n    .then(addBoosters) \n .then(() => console.log('Ready for launch: ![](img/4a46c1bc-b445-489e-8cfc-b55eda1f0b5b.png)')) \n\n  console.log('After promise created'); \n} \n```", "```js\nexport function main() { \n  console.log('Before promise created'); \n  Promise.resolve(Math.random() > 0.5) \n    .then(addBoosters) \n    .then(() => console.log('Ready for launch: ')) \n .catch(console.error) \n  console.log('After promise created'); \n} \n```", "```js\nexport function main() { \n\n  console.log('Before promise created'); \n  Promise.resolve(Math.random() > 0.5) \n    .then(addBoosters) \n    .then(() => console.log('Ready for launch: ')) \n    .catch(console.error)\n    .then(() => console.log('Time to inform the press.')); \n  console.log('After promise created'); \n} \n```"]