["```js\n<html ng-app>\n    <head>\n        <script src=\"img/angular.min.js\"></script>\n    </head>\n    <body>\n        ...\n    </body>\n</html>\n```", "```js\n<html ng-app>\n    <head>\n        <script src=\"img/angular.min.js\"></script>\n        <script src=\"img/HeaderController.js\"></script>\n    </head>\n    <body>\n        <header ng-controller=\"HeaderController\">\n            <h1>{{title}}</h1>\n        </header>\n    </body>\n</html>\n```", "```js\nfunction HeaderController($scope) {\n  $scope.title = \"Hello world\";\n}\n```", "```js\n<header ng-controller=\"HeaderController\">\n  <h1>{{title}}</h1>\n  <a href=\"#\" ng-click=\"updateTitle()\">change title</a>\n</header>\n```", "```js\nfunction HeaderController($scope) {\n  $scope.title = \"Hello world\";\n  $scope.updateTitle = function() {\n    $scope.title = \"That's a new title.\";\n  }\n}\n```", "```js\n<header ng-controller=\"HeaderController\">\n  <h1>{{title}}</h1>\n  <a href=\"#\" ng-click=\"updateTitle()\">change title</a>\n  <input type=\"text\" ng-model=\"title\" />\n</header>\n```", "```js\nangular.module('HeaderModule', []);\n```", "```js\nangular.module('HeaderModule', [])\n.controller('HeaderController', function($scope) {\n  $scope.title = \"Hello world\";\n  $scope.updateTitle = function() {\n    $scope.title = \"That's a new title.\";\n  }\n});\n```", "```js\nangular.module('HeaderModule', [])\n.filter('customuppercase', function() {\n  return function(input) {\n    if(input.length > 20) {\n      return input.toUpperCase();\n    } else {\n      return input;\n    }\n  };\n})\n.controller('HeaderController', function($scope) {\n  $scope.title = \"Hello world\";\n  $scope.updateTitle = function() {\n    $scope.title = \"That's a new title.\";\n  }\n});\n```", "```js\n<h1>{{title | customuppercase}}</h1>\n```", "```js\nangular.module('HeaderModule', [])\n.factory(\"Data\", function() {\n  return {\n    getTitle: function() {\n      return \"A better title.\";\n    }\n  }\n})\n.controller('HeaderController', function($scope, Data) {\n  $scope.title = Data.getTitle();\n  $scope.updateTitle = function() {\n    $scope.title = \"That's a new title.\";\n  }\n});\n```", "```js\n\"dependencies\": {\n  \"mongodb\": \"1.3.20\"\n}\n```", "```js\nvar crypto = require(\"crypto\"),\n    type = \"mongodb\",\n    client = require('mongodb').MongoClient,\n    mongodb_host = \"127.0.0.1\",\n    mongodb_port = \"27017\",\n    collection;\n\nmodule.exports = function() {\n    if(type == \"mongodb\") {\n        return {\n            add: function(data, callback) { ... },\n            update: function(data, callback) { ... },\n            get: function(callback) { ... },\n            remove: function(id, callback) { ... }\n        }\n    } else {\n        return {\n            add: function(data, callback) { ... },\n            update: function(data, callback) { ... },\n            get: function(callback) { ... },\n            remove: function(id, callback) { ... }\n        }\n    }\n}\n```", "```js\nconnection = 'mongodb://';\nconnection += mongodb_host + ':' + mongodb_port;\nconnection += '/blog-application';\nclient.connect(connection, function(err, database) {\n  if(err) {\n    throw new Error(\"Can't connect\");\n  } else {\n    console.log(\"Connection to MongoDB server successful.\");\n      collection = database.collection('articles');\n    }\n}); \n```", "```js\nreturn {\n  add: function(data, callback) {\n    var date = new Date();\n    data.id = crypto.randomBytes(20).toString('hex');\n    data.date = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\n    collection.insert(data, {}, callback || function() {});\n  },\n  update: function(data, callback) {\n    collection.update(\n            {ID: data.id}, \n            data, \n            {}, \n            callback || function(){ }\n        ); \n    },\n    get: function(callback) {\n        collection.find({}).toArray(callback);\n    },\n    remove: function(id, callback) {\n        collection.findAndModify(\n            {ID: id}, \n            [], \n            {}, \n            {remove: true}, \n            callback\n        );\n    }\n}\n```", "```js\n{\n  title: \"Blog post title\",\n  text: \"Article's text here ...\"\n}\n```", "```js\n\"dependencies\": {\n  \"mongodb\": \"1.3.20\",\n  \"mysql\": \"2.0.0\"\n}\n```", "```js\nvar mysql = require('mysql'),\n    mysql_host = \"127.0.0.1\",\n    mysql_user = \"root\",\n    mysql_password = \"\",\n    mysql_database = \"blog_application\",\n    connection;\n```", "```js\nCREATE TABLE IF NOT EXISTS `articles` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` longtext NOT NULL,\n  `text` longtext NOT NULL,\n  `date` varchar(100) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;\n```", "```js\nconnection = mysql.createConnection({\n    host: mysql_host,\n    user: mysql_user,\n    password: mysql_password\n});\nconnection.connect(function(err) {\n    if(err) {\n        throw new Error(\"Can't connect to MySQL.\");\n    } else {\n        connection.query(\"USE \" + mysql_database, function(err, rows, fields) {\n            if(err) {\n                throw new Error(\"Missing database.\");\n            } else {\n                console.log(\"Successfully selected database.\");\n            }\n        })\n    }\n});\n```", "```js\nreturn {\n    add: function(data, callback) {\n        var date = new Date();\n        var query = \"\";\n        query += \"INSERT INTO articles (title, text, date) VALUES (\";\n        query += connection.escape(data.title) + \", \";\n        query += connection.escape(data.text) + \", \";\n        query += \"'\" + date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate() + \"'\";\n        query += \")\";\n        connection.query(query, callback);\n    },\n    update: function(data, callback) {\n        var query = \"UPDATE articles SET \";\n        query += \"title=\" + connection.escape(data.title) + \", \";\n        query += \"text=\" + connection.escape(data.text) + \" \";\n        query += \"WHERE id='\" + data.id + \"'\";\n        connection.query(query, callback);\n    },\n    get: function(callback) {\n        var query = \"SELECT * FROM articles ORDER BY id DESC\";\n        connection.query(query, function(err, rows, fields) {\n            if(err) {\n                throw new Error(\"Error getting.\");\n            } else {\n                callback(rows);\n            }\n        });\n    },\n    remove: function(id, callback) {\n        var query = \"DELETE FROM articles WHERE id='\" + id + \"'\";\n        connection.query(query, callback);\n    }\n}\n```", "```js\n\"dependencies\": {\n  \"express\": \"3.4.6\",\n  \"jade\": \"0.35.0\",\n  \"mongodb\": \"1.3.20\",\n  \"mysql\": \"2.0.0\"\n}\n```", "```js\nbody\n  p(class=\"paragraph\", data-id=\"12\").\n    Sample text here\n  footer\n    a(href=\"#\").\n      my site\n```", "```js\n<body>\n  <p data-id=\"12\" class=\"paragraph\">Sample text here</p>\n  <footer><a href=\"#\">my site</a></footer>\n</body>\n```", "```js\nvar express = require('express');\nvar app = express();\nvar articles = require(\"./models/Articles\")();\n\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\napp.use(express.static(__dirname + '/public'));\n\napp.use(function(req, res, next) {\n    req.articles = articles;\n    next();\n});\n\napp.get('/api/get', require(\"./controllers/api/get\"));\napp.get('/', require(\"./controllers/index\"));\n\napp.listen(3000);\nconsole.log('Listening on port 3000');\n```", "```js\nmodule.exports = function(req, res, next) {\n  req.articles.get(function(rows) {\n    res.send(rows);\n  });\n}\n```", "```js\nmodule.exports = function(req, res, next) {  \n  res.render(\"list\", { app: \"\" });\n}\n```", "```js\ndoctype html\nhtml(ng-app=\"#{app}\")\n  head\n    title Blog\n    link(rel='stylesheet', href='/style.css')    \n    script(src='/angular.min.js')\n    script(src='/angular-route.min.js')\n  body\n    block content\n```", "```js\nextends layout\nblock content\n  .container(ng-controller=\"BlogCtrl\")\n    section.articles\n      article(ng-repeat=\"article in articles\")\n       h2 \n         {{article.title}}\n         br\n          small published on {{article.date}}\n        p {{article.text}}\n  script(src='/blog.js')\n```", "```js\nfunction BlogCtrl($scope, $http) {\n  $scope.articles = [\n    { title: \"\", text: \"Loading ...\"}\n  ];\n  $http({method: 'GET', url: '/api/get'})\n  .success(function(data, status, headers, config) {\n    $scope.articles = data;\n    })\n    .error(function(data, status, headers, config) {\n      console.error(\"Error getting articles.\");\n  });\n}\n```", "```js\n// views/list.jade\nheader\n  .search\n    input(type=\"text\", placeholder=\"type a filter here\", ng-model=\"filterText\")\n  h1 Blog\n  hr\n```", "```js\narticle(ng-repeat=\"article in articles | filter:filterText\")\n```", "```js\napp.set(\"username\", \"admin\");\napp.set(\"password\", \"pass\");\napp.use(express.cookieParser('blog-application'));\napp.use(express.session());\n```", "```js\napp.use(function(req, res, next) {\n    if((\n        req.session && \n        req.session.admin === true\n    ) || (\n        req.body &&\n        req.body.username === app.get(\"username\") &&\n        req.body.password === app.get(\"password\")\n    )) {\n        req.logged = true;\n        req.session.admin = true;\n    };\n    next();\n});\n```", "```js\nvar protect = function(req, res, next) {\n    if(req.logged) {\n        next();\n    } else {\n        res.send(401, 'No Access.');\n    }\n}\napp.post('/api/add', protect, require(\"./controllers/api/add\"));\napp.post('/api/edit', protect, require(\"./controllers/api/edit\"));\napp.post('/api/delete', protect , require(\"./controllers/api/delete\"));\napp.all('/admin', require(\"./controllers/admin\"));\n```", "```js\nmodule.exports = function(req, res, next) {\n  req.articles.add(req.body, function() {\n    res.send({success: true});\n  });\n}\n```", "```js\nadd: function(data, callback) {\n  data.ID = crypto.randomBytes(20).toString('hex');\n  collection.insert(data, {}, callback || function() {});\n}\n```", "```js\nadd: function(data, callback) {\n    var date = new Date();\n    var query = \"\";\n    query += \"INSERT INTO articles (title, text, date) VALUES (\";\n    query += connection.escape(data.title) + \", \";\n    query += connection.escape(data.text) + \", \";\n    query += \"'\" + date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate() + \"'\";\n    query += \")\";\n    connection.query(query, callback);\n}\n```", "```js\n// api/edit.js\nmodule.exports = function(req, res, next) {\n  req.articles.update(req.body, function() {\n    res.send({success: true});\n  });\n}\n```", "```js\n// api/delete.js\nmodule.exports = function(req, res, next) {\n  req.articles.remove(req.body.id, function() {\n    res.send({success: true});\n  });\n}\n```", "```js\nmodule.exports = function(req, res, next) {\n  if(req.logged) {\n    res.render(\"admin\", { app: \"admin\" });\n  } else {\n    res.render(\"login\", { app: \"\" });\n  }\n}\n```", "```js\nextends layout\nblock content\n  .container\n    header\n      h1 Administration\n     hr\n    section.articles\n      article\n        form(method=\"post\", action=\"/admin\")\n        span Username:\n        br\n        input(type=\"text\", name=\"username\")\n        br\n        span Password:\n        br\n        input(type=\"password\", name=\"password\")\n        br\n        br\n        input(type=\"submit\", value=\"login\")\n```", "```js\nextends layout\nblock content\n  .container\n    header\n      h1 Administration\n      hr\n      a(href=\"/\") Public\n      span  | \n      a(href=\"#/\") List\n      span  | \n      a(href=\"#/add\") Add\n    section(ng-view)\n  script(src='/admin.js')\n```", "```js\nvar admin = angular.module('admin', ['ngRoute']);\nadmin.config(['$routeProvider', \n  function($routeProvider) {\n    $routeProvider\n    .when('/', {})\n    .when('/add', {})\n    .when('/edit/:id', {})\n    .when('/delete/:id', {})\n    .otherwise({\n          redirectTo: '/'\n      });\n  }\n]);\n```", "```js\nadmin.factory('API', function($http) {\n  var request = function(method, url) {\n    return function(callback, data) {\n      $http({method: method, url: url, data: data})\n      .success(callback)\n        .error(function(data, status, headers, config) {\n          console.error(\"Error requesting '\" + url + \"'.\");\n      });\n    }\n  }\n  return {\n    get: request('GET', '/api/get'),\n    add: request('POST', '/api/add'),\n    edit: request('POST', '/api/edit'),\n    remove: request('POST', '/api/delete')\n  }\n});\n```", "```js\n.when('/', {\n  controller: 'ListCtrl',\n  template: '\\\n    <article ng-repeat=\"article in articles\">\\\n      <hr />\\\n      <strong>{{article.title}}</strong><br />\\\n       (<a href=\"#/edit/{{article.id}}\">edit</a>)\\\n       (<a href=\"#/delete/{{article.id}}\">remove</a>)\\\n      </article>\\\n  '\n})\n```", "```js\nadmin.controller('ListCtrl', function($scope, API) {\n  API.get(function(articles) {\n    $scope.articles = articles;\n  });\n});\n```", "```js\nvar AddEditRoute = {\n  controller: 'AddEditCtrl',\n    template: '\\\n      <hr />\\\n      <article>\\\n        <form>\\\n       <span>Title</spna><br />\\\n       <input type=\"text\" ng-model=\"article.title\"/><br />\\\n        <span>Text</spna><br />\\\n        <textarea rows=\"7\" ng-model=\"article.text\"></textarea>\\\n        <br /><br />\\\n        <button ng-click=\"save()\">save</button>\\\n        </form>\\\n      </article>\\\n  '\n};\n```", "```js\n.when('/add', AddEditRoute)\n.when('/edit/:id', AddEditRoute)\n```", "```js\nadmin.controller(\n  'AddEditCtrl', \n  function($scope, API, $location, $routeParams) {\n    var editMode = $routeParams.id ? true : false;\n    if(editMode) {\n      API.get(function(articles) {\n        articles.forEach(function(article) {\n          if(article.id == $routeParams.id) {\n            $scope.article = article;\n          }\n        });\n      });\n    }\n    $scope.save = function() {\n      API[editMode ? 'edit' : 'add'](function() {\n        $location.path('/');\n      }, $scope.article);\t\n    }\n})\n```", "```js\n.when('/delete/:id', {\n  controller: 'RemoveCtrl',\n  template: ' '\n})\n```", "```js\nadmin.controller(\n  'RemoveCtrl', \n  function($scope, $location, $routeParams, API) {\n    API.remove(function() {\n      $location.path('/');\n    }, $routeParams);\n  }\n);\n```"]