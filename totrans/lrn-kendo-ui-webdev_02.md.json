["```js\npublic ActionResult AutoCompletePage()\n{\n  return View();\n}\n```", "```js\n<style>\n    #stateOrTerritory {\n      width:200px;\n    }\n</style>\n\n<h2>AutoCompletePage</h2>\n<input type=\"text\" name=\"stateOrTerritory\" id=\"stateOrTerritory\" />\n\n<script type=\"text/javascript\">\nvarstatesAndTerritories = [\"Alabama\",\n            \"Alaska\",\n            \"American Samoa\",\n            \"Arizona\",\n            \"Arkansas\",\n            ...\n            \"Washington\",\n            \"West Virginia\",\n            \"Wisconsin\",\n            \"Wyoming\"];\n\n    $(\"#stateOrTerritory\").kendoAutoComplete({\n      dataSource: statesAndTerritories,\n      filter: \"startswith\",\n      placeholder: \"Choose state or territory...\",\n      separator: \", \"\n    });\n\n</script>\n```", "```js\nnamespace LearningKendoUIWeb.Models\n{\n  public class StateTerritory\n  {\n    public string Name { get; set; }\n    public bool IsState { get; set; }\n    public bool IsTerritory { get; set; }\n    public bool IsContiguous { get; set; }\n  }\n}\n```", "```js\npublic List<StateTerritory>GetStatesAndTerritories()\n{\nvar stateTerritories = new List<StateTerritory>{\nnew StateTerritory{ Name = \"Alabama\", IsContiguous = true, \nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"Alaska\", IsContiguous = false, \nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"American Samoa\", IsContiguous = false,\nIsState = false, IsTerritory = false },\nnew StateTerritory{ Name = \"Arizona\", IsContiguous = true, \nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"Arkansas\", IsContiguous = true,\nIsState = true, IsTerritory = false },\n...\nnew StateTerritory{ Name = \"Washington\", IsContiguous = true,\nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"West Virginia\", IsContiguous = true,\nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"Wisconsin\", IsContiguous = true,\nIsState = true, IsTerritory = false },\nnew StateTerritory{ Name = \"Wyoming\", IsContiguous = true, \nIsState = true, IsTerritory = false }\n    };\nreturn stateTerritories;\n}\n```", "```js\npublic JsonResult AutoCompleteData()\n{\n  var repository = new SampleRepository();\n  var data = repository.GetStatesAndTerritories();\n  returnJson(data, JsonRequestBehavior.AllowGet);\n}\n```", "```js\n$(\"#stateOrTerritory\").kendoAutoComplete({\n  dataSource: {\n    transport: {\n    read: {\n      url: \"/Kendo/AutoCompleteData/\"\n          }\n    }\n  },\n  dataTextField: \"Name\",\n  filter: \"startswith\",\n  placeholder: \"Choose state or territory...\",\n});\n```", "```js\npublic ActionResult AutoCompletePage()\n{\n  var repository = new SampleRepository();\n  var data = repository.GetStatesAndTerritories();\n  return View(data);\n}\n```", "```js\n@model IEnumerable<LearningKendoUIWeb.Models.StateTerritory>\n\n```", "```js\n<h2>AutoCompletePage</h2>\n@(Html.Kendo().AutoComplete()\n    .Name(\"statesAndTerritories\")\n    .DataTextField(\"Name\")\n    .BindTo(Model)\n    .Filter(\"startswith\")\n    .Placeholder(\"Choose state or territory...\")\n)\n```", "```js\n<h2>AutoCompletePage</h2>\n@(Html.Kendo().AutoComplete()\n    .Name(\"statesAndTerritories\")\n    .Placeholder(\"Choose state or territory...\")\n    .DataTextField(\"Name\")\n    .Filter(\"startswith\")\n    .DataSource(source =>\n        {\nsource.Read(read =>\n            {\nread.Action(\"AutoCompleteData\", \"Kendo\");\n            })\n            .ServerFiltering(false);\n        })\n)\n```", "```js\n<h2>AutoCompletePage</h2>\n<label for=\"stateType\">Choose whether to see States:</label>\n<select id=\"stateType\" name=\"stateType\">\n<option value=\"true\">Show States</option>\n<option value=\"false\">Show Only Territories</option>\n</select>\n<br />\n@(Html.Kendo().AutoComplete()\n    .Name(\"statesAndTerritories\")\n    .Placeholder(\"Choose state or territory...\")\n    .DataTextField(\"Name\")\n    .Filter(\"startswith\")\n    .DataSource(source =>\n        {\n          source.Read(read =>\n          {\n              read.Action(\"AutoCompleteData\", \"Kendo\")\n                    .Data(\"onAdditionalData\");\n            })\n            .ServerFiltering(false);\n        })\n)\n<script type=\"text/javascript\">\nvar autocomplete = $(\"#statesAndTerritories\").data(\"kendoAutoComplete\");\n\nfunctiononAdditionalData() {\n  return {\n    showStates: $(\"#stateType\").val()\n        }\n    }\n</script>\n```", "```js\npublic JsonResult AutoCompleteData(bool showStates = true)\n{\n  // setting showStates = true means that it is an optional parameter\n  // with the default value of true.\n  var repository = new SampleRepository();\n  var data = repository.GetStatesAndTerritories();\n  if (!showStates)\n  {\n    data = data.Where(s =>s.IsState == false).ToList();\n  }\n  return Json(data, JsonRequestBehavior.AllowGet);\n}\n```", "```js\n@{\nvar template = \"#= Name # - #= IsState #\";\n}\n@(Html.Kendo().AutoComplete()\n    .Name(\"statesAndTerritories\")\n    .Placeholder(\"Choose state or territory...\")\n    .DataTextField(\"Name\")\n    .Filter(\"startswith\")\n    .DataSource(source =>\n    {\n      source.Read(read =>\n      {\n        read.Action(\"AutoCompleteData\", \"Kendo\")\n                    .Data(\"onAdditionalData\");\n      })\n    .ServerFiltering(false);\n    })\n    .Template(template)\n)\n```", "```js\n$(\"autocomplete\").kendoAutoComplete({\ndataSource: dataSource, // see chapter 1\n  animation: {\n  close: {\n    effects: \"fadeOut\",\n      duration: 300,\n      hide: true,\n      show: false\n    },\n    open: {\n    effects: \"fadeIn\",\n      duration: 300,\n      show: true\n    }\n  },\n  dataTextField: \"Name\", // name of field in data source to display\n  delay: 500, // milliseconds before auto complete activates\n  enable: true, // set \"false\" to disable\n  filter: \"contains\", // type of filtration, passed to remote source\n  height: 200, // height of drop-down list\n  highlightFirst: true, // highlight first item in list?\n  ignoreCase: true,\n  minLength: 1, // minimum characters before activating drop-down list\n  placeHolder: \"Enter value...\", // placeholder text\n  separator: \", \", // separator for completion of search terms.\n  //allows for multiple search terms by using comma or\n                    //   other delimiter\n  suggest: false, // auto-type rest of search term?\n  template: template // see chapter 1\n}\n```", "```js\nvarautoComplete = $(\"#autoComplete\").data(\"kendoAutoComplete\");\n$(\"#autoComplete\").data(\"kendoAutoComplete\").bind(\"change\", function(e) {\n    // handle event\n});\n```", "```js\n$(\"#autoComplete\").kendoAutoComplete({\nclose: function(e) {\n        // handle event\n    }\n});\n```", "```js\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n```", "```js\n// get a reference to the autocomplete widget\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n\nautocomplete.close();\n```", "```js\nvar autocomplete = $(\"#autocomplete\").data(\"kendoAutoComplete\");\n\n// get the dataItem corresponding to the passed index.\nvar dataItem = autocomplete.dataItem(1);\n```", "```js\nvar autocomplete = $(\"#autocomplete\").data(\"kendoAutoComplete\");\n\n// detach events\nautocomplete.destroy();\n```", "```js\n// get a reference to the autocomplete widget\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n\n// disables the autocomplete\nautocomplete.enable(false);\n\n// enables the autocomplete\nautocomplete.enable(true);\n```", "```js\n// get a reference to the Kendo UI AutoComplete\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n// re-render the items in drop-down list.\nautocomplete.refresh();\n```", "```js\n// get a reference to the autocomplete widget\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n\n// Searches for item which has \"Inception\" in the name.\nautocomplete.search(\"Inception\");\n```", "```js\n// get a reference to the autocomplete widget\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n\n// selects by jQuery object\nautocomplete.select(autocomplete.ul.children().eq(0));\n```", "```js\n// note that this suggest is not the same as the configuration method\n// suggest which enables/disables auto suggesting for the AutoComplete\n//\n// get a reference to the Kendo UI AutoComplete\nvarautoComplete = $(\"#autoComplete\").data(\"kendoAutoComplete\");\n\n// force a suggestion to the item with the name \"Inception\"\nautoComplete.suggest(\"Inception\");\n```", "```js\n// get a reference to the autocomplete widget\nvar autocomplete = $(\"autocomplete\").data(\"kendoAutoComplete\");\n\n// get the text of the autocomplete.\nvar value = autocomplete.value();\n```"]