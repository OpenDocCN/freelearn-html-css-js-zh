- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I love Backbone.js. It's an amazing little library that does so much with so
    little. It's also unopinionated—there are endless ways to do the same thing. This
    last point gives many Backbone.js programmers a headache. The freedom to implement
    things the way we see fit is great, until we start making those unavoidable consistency
    errors.
  prefs: []
  type: TYPE_NORMAL
- en: When I first started with Flux, I couldn't really see how such an architecture
    could help out a mere Backbone.js programmer. Eventually, I figured out two things.
    First, Flux is unopinionated where it matters—the implementation specifics. Two,
    Flux is very much like Backbone in the spirit of minimal moving parts that do
    one thing well.
  prefs: []
  type: TYPE_NORMAL
- en: As I started experimenting with Flux, I realized that Flux provides the missing
    architectural perspective that enables scalability. Where Backbone.js and other
    related technologies fall apart is when something goes wrong. In fact, these bugs
    can be so difficult that they're never actually fixed—the whole system is scarred
    with workarounds.
  prefs: []
  type: TYPE_NORMAL
- en: I decided to write this book in the hope that other programmers, from all walks
    of JavaScript, can experience the same level of enlightenment as I have working
    with this wonderful technology from Facebook.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. What is Flux?"), *What is Flux?*, gives an
    overview of what Flux is and why it was created.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Principles of Flux"), *Principles of Flux*,
    talks about the core concepts of Flux and the essential knowledge for building
    a Flux architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Building a Skeleton Architecture"), *Building
    a Skeleton Architecture*, walks through the steps involved in building a skeleton
    architecture before implementing application features.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Creating Actions"), *Creating Actions*, shows
    how action creator functions are used to feed new data into the system while describing
    something that just happened.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Asynchronous Actions"), *Asynchronous Actions*,
    goes through examples of asynchronous action creator functions and how they fit
    within a Flux architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Changing Flux Store State"), *Changing Flux
    Store State*, gives many detailed explanations and examples that illustrate how
    Flux stores work.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Viewing Information"), *Viewing Information*,
    gives many detailed explanations and examples that illustrate how Flux views work.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Information Lifecycle"), *Information Lifecycle*,
    talks about how information in a Flux architecture enters the system and how it
    ultimately exits the system.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Immutable Stores"), *Immutable Stores*, shows
    how immutability is a key architectural property of software architectures, such
    as Flux, where data flows in one direction.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Implementing a Dispatcher"), *Implementing
    a Dispatcher*, walks through the implementation of a dispatcher component, instead
    of using the Facebook reference implementation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Alternative View Components"), *Alternative
    View Components*, shows how view technologies other than React can be used within
    a Flux architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html "Chapter 12. Leveraging Flux Libraries"), *Leveraging
    Flux Libraries*, gives an overview of two popular Flux libraries—Alt.js and Redux.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](ch13.html "Chapter 13. Testing and Performance"), *Testing and
    Performance*, talks about testing components from within the context of a Flux
    architecture and discusses performance testing your architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](ch14.html "Chapter 14. Flux and the Software Development Lifecycle"),
    *Flux and the Software Development Life Cycle*, discusses the impact Flux has
    on the rest of the software stack and how to package Flux features.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Any web browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NodeJS >= 4.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A code editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Are you trying to use React, but are struggling to get your head around Flux?
    Maybe, you're tired of MV* spaghetti code at scale? Do you find yourself asking
    what the Flux?!
  prefs: []
  type: TYPE_NORMAL
- en: Flux Architecture will guide you through everything you need to understand the
    Flux pattern and design, and build powerful web applications that rely on Flux
    architecture.
  prefs: []
  type: TYPE_NORMAL
- en: You don't need to know what Flux is or how it works to read the book. No knowledge
    of Flux's partner technology, ReactJS, is necessary to follow along, but it is
    recommended that you have a good working knowledge of JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "When
    the `HOME_LOAD` action is dispatched, we change the state of the store."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also download the code files by clicking on the **Code Files** button
    on the book's webpage at the Packt Publishing website. This page can be accessed
    by entering the book's name in the **Search** box. Please note that you need to
    be logged in to your Packt account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
