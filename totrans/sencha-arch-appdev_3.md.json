["```js\nExt.define('Packt.proxy.ContactsProxy', { // #1\n    extend: 'Ext.data.proxy.Proxy', // #2\n    alias : 'proxy.contactstorage', // #3\n    constructor: function(config) { // #4\n        var me = this;\n        config = config || {};\n        me.callParent([config]);\n    },\n    create: function(operation, callback, scope) { }, // #5\n   update: function(operation, callback, scope) { }, // #6\n   destroy: function(operation, callback, scope) { } // #7\n});\n```", "```js\nread: function(operation, callback, scope) {\n    var thisProxy = this;\n    var fields = ['id', 'name', 'phoneNumbers']; // #8\n    navigator.contacts.find(fields,\n        function(deviceContacts) { // #9\n            //loop over contacts and create Contact model instance\n            var contacts = [];\n            for (var i = 0; i < deviceContacts.length; i++){// #10\n                var deviceContact = deviceContacts[ i ];\n\n                var phone = \"\";\n                if (deviceContact.phoneNumbers){ // #11\n                    phone = deviceContact.phoneNumbers[0];\n                    if (phone){\n                        phone = phone.value;\n                    } else{\n                        phone = \"\";\n                    }\n                }\n                // #12\n                contacts.push(Ext.create('Packt.model.Contact',{ \n                        id: deviceContact.id,\n                        givenName: deviceContact.name.givenName,\n                        familyName: deviceContact.name.familyName,\n                        phoneNumber: phone\n                    }));\n                }\n            //return model instances in a result set\n            operation.setResultSet( // #13\n                Ext.create('Ext.data.ResultSet', {\n                    records: contacts,\n                    total  : contacts.length\n                })\n            );\n            //announce success\n            operation.setSuccessful(); // #14\n            operation.setCompleted();\n            //finish with callback\n            if (typeof callback == \"function\") { // #15\n                callback.call(scope || thisProxy, operation);\n            }\n        },\n        function (e) { // error handling from PhoneGap\n            console.log('Error fetching contacts'); // #16\n        },\n        {multiple: true} // #17\n    );\n}\n```"]