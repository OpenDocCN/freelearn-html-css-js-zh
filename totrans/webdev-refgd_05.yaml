- en: Chapter 5. CSS Properties – Part 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。CSS属性 – Part 2
- en: Ok, we're through Part 1 of the CSS properties. Indeed, there are many, many
    more properties to talk about.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们已经完成了CSS属性的Part 1部分。确实，还有很多很多属性需要讨论。
- en: Let's now move on to Part 2.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们继续到Part 2。
- en: Fonts
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字体
- en: In the world of design, fonts are one of the most powerful assets we have, and
    at the same time, they are one of the most underappreciated ones.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计的世界里，字体是我们拥有的最有力的资产之一，同时，它们也是被低估最多的资产之一。
- en: Typography is so powerful that when we use it correctly, we may even get away
    with not using a single image in our project.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 排版功能如此强大，当我们正确使用它时，我们甚至可能在我们的项目中不用使用任何一张图片。
- en: Let's take a look at the CSS font properties, shall we?
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看CSS字体属性，怎么样？
- en: font-family
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-family
- en: 'The `font-family` CSS property defines the font we want an element to use,
    and looks like this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-family` CSS属性定义了元素想要使用的字体，其格式如下：'
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Description
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property can hold one or multiple font names in its declaration. There
    is no limit as to how many font names it can hold; however, it is not only very
    unlikely to list more than four or five fonts, but it's also unnecessary.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性可以在其声明中包含一个或多个字体名称。它没有限制可以包含多少个字体名称；然而，实际上列出超过四到五个字体是非常不可能的，而且也是不必要的。
- en: The font family names are separated by commas. We call this the *font stack*.
    The browser will read the font stack and use the first one in the stack, if it
    can't find it or download it, it will move on to the next font family name and
    so on until it's able to use one from the stack.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 字体家族名称由逗号分隔。我们称之为*字体堆栈*。浏览器将读取字体堆栈，并使用堆栈中的第一个字体，如果找不到或下载不了，它将移动到下一个字体家族名称，依此类推，直到它能够使用堆栈中的一个字体。
- en: 'There are two types of font family names: family name and generic family name.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 字体家族名称有两种类型：字体名称和通用字体名称。
- en: Family name
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 字体名称
- en: Family names are actually names that represent real fonts, such as `Times`,
    `Arial`, `Verdana`, `Monaco`, and so on. They should always be listed before generic
    family names in the font stack.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 姓氏实际上是代表真实字体的名称，例如`Times`、`Arial`、`Verdana`、`Monaco`等等。它们应该始终在字体堆栈中列在通用字体名称之前。
- en: Generic family names
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 通用字体名称
- en: These are the only keywords that represent a system font. They are called **fallback**
    fonts. They should always be listed after the family names in the font stack.
    Generic family names can be `monospace`, `san-serif`, `serif`, `cursive`, and
    `fantasy`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是唯一代表系统字体的关键词。它们被称为**后备**字体。它们应该始终在字体堆栈中列在字体名称之后。通用字体名称可以是`monospace`、`san-serif`、`serif`、`cursive`和`fantasy`。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'It is not mandatory to use quotes (single or double) when a font family name
    has multiple words. For example, writing `font-family: "Times New Roman", serif;`
    is the same as writing `font-family: Times New Roman, serif;`. Note that `Times
    New Roman` is not quoted in the second example.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '当字体家族名称包含多个单词时，使用引号（单引号或双引号）不是强制的。例如，写作`font-family: "Times New Roman", serif;`与写作`font-family:
    Times New Roman, serif;`是相同的。注意在第二个例子中`Times New Roman`没有使用引号。'
- en: '**CSS**:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: font-feature-settings
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-feature-settings
- en: 'The `font-feature-settings` CSS property provides control over typographic
    properties in OpenType fonts, and looks like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-feature-settings` CSS属性提供了对OpenType字体中排版属性的控制的权限，其格式如下：'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Description
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The font-feature-settings CSS property allows us to control and use other alternative
    glyphs that come included in some font files.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-feature-settings` CSS属性允许我们控制和使用某些字体文件中包含的其他交替符号。'
- en: An example of an alternate glyph is for example when we type the fractions 1/2
    or 1/4 the font actually includes the "small superscript" version like ½ and ¼.
    Or if we type H[2]O it turns into H[2]O.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一个交替符号的例子是当我们输入分数1/2或1/4时，字体实际上包含了“小上标”版本，如½和¼。或者如果我们输入H[2]O，它就会变成H[2]O。
- en: Remember, not all fonts contain special glyphs (font features).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，并非所有字体都包含特殊符号（字体特征）。
- en: 'To find out what font features a font file has, you can use any of these two
    tools:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出字体文件具有哪些字体特征，你可以使用以下两种工具中的任何一种：
- en: Fontdeck.com (text has link [http://fontdeck.com/](http://fontdeck.com/)) -
    Find the font you want and on the About this typeface, look for the OPENTYPE line,
    there all the font features will be listed for that specific font.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fontdeck.com ([http://fontdeck.com/](http://fontdeck.com/)) - 找到你想要的字体，在“关于这个字体”部分，查找OPENTYPE行，那里将列出该特定字体的所有字体特征。
- en: Test OpenType features (text has link [http://www.impallari.com/testing/index.php](http://www.impallari.com/testing/index.php))
    - Just drag and drop your font file(s) and click on the OpenType Features link
    on the top left, a large panel will slide where you can select which features
    to see.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试OpenType功能（文本有链接 [http://www.impallari.com/testing/index.php](http://www.impallari.com/testing/index.php)）-
    只需拖放您的字体文件并点击左上角的OpenType Features链接，一个大型面板将滑动出来，您可以选择查看哪些功能。
- en: 'Here are some of the most common feature tags:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些最常见的特征标签：
- en: '`dlig`: Discretionary ligatures'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dlig`: 可选连字符'
- en: '`kern`: Kerning'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kern`: 字距调整'
- en: '`liga`: Standard ligatures'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`liga`: 标准连字符'
- en: '`lnum`: Lining figures'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lnum`: 基线数字'
- en: '`onum`: Old style figures'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onum`: 旧式数字'
- en: '`tnum`: Tabular figures'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tnum`: 表格数字'
- en: '`smcp`: Small capitals'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`smcp`: 小写字母大写'
- en: '`ss01, ss02, ss03, ss04… ss20`: Stylistic sets (font-dependent)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ss01, ss02, ss03, ss04… ss20`: 风格集（字体相关）'
- en: '`swsh`: Swash'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`swsh`: 波浪形'
- en: 'For more information, check out the MDN website: [http://tiny.cc/mdn-font-feature-settings](http://tiny.cc/mdn-font-feature-settings)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请查看MDN网站：[http://tiny.cc/mdn-font-feature-settings](http://tiny.cc/mdn-font-feature-settings)
- en: For a complete list of all font features, check the Microsoft site at [http://tiny.cc/msn-font-features-list](http://tiny.cc/msn-font-features-list)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有字体特征的完整列表，请访问微软网站 [http://tiny.cc/msn-font-features-list](http://tiny.cc/msn-font-features-list)
- en: '**CSS**:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: font-size
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-size
- en: 'The `font-size` CSS property defines the size of the text of an element, and
    it looks like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-size` CSS属性定义了元素的文本大小，其看起来如下：'
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Description
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property can also be used to change the size of other elements since we
    can compute the value of `em`, `rem`, and `ex` length units as well.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性也可以用来改变其他元素的大小，因为我们还可以计算`em`、`rem`和`ex`长度单位的价值。
- en: 'There are a few different value types that we can use with the `font-size`
    CSS property: absolute keywords/size, relative size, length, and percentage.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用几种不同的值类型与`font-size` CSS属性一起使用：绝对关键词/大小、相对大小、长度和百分比。
- en: Absolute keywords/size
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 绝对关键词/大小
- en: 'The sizes defined relate directly to specific font sizes. They can also be
    used to set a font size of an element based on the parent element''s font size.
    Values are as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 定义的大小直接关联到特定的字体大小。它们也可以用来根据父元素的字体大小设置元素的字体大小。值如下：
- en: '`xx-small`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xx-small`'
- en: '`x-small`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x-small`'
- en: '`small`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`small`'
- en: '`medium` (default value)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`medium`（默认值）'
- en: '`large`'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`large`'
- en: '`x-large`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x-large`'
- en: '`xx-large`'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xx-large`'
- en: Relative size keywords
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 相对大小关键词
- en: 'These sizes increase or reduce the font size of an element based on the font
    size of its parent container. The values are:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些大小根据其父容器字体大小增加或减少元素的字体大小。值如下：
- en: '`smaller`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`smaller`'
- en: '`larger`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`larger`'
- en: Length
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 长度
- en: Negative values are invalid. When using `px`, the font size is absolute; it's
    not relative to the font size of the parent container. When using `em`, `ex`,
    and `ch`, the font size is relative to the font size of the element's parent container.
    When using `rem`, the font size is relative to the root element, that is, the
    `<html>` element. When using `vw`, `vh`, `vmax`, and `vmin` the font size is relative
    to the viewport.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 负值无效。当使用`px`时，字体大小是绝对的；它不相对于父容器字体大小。当使用`em`、`ex`和`ch`时，字体大小相对于元素的父容器字体大小。当使用`rem`时，字体大小相对于根元素，即`<html>`元素。当使用`vw`、`vh`、`vmax`和`vmin`时，字体大小相对于视口。
- en: To see all the available values of this attribute, refer to the *Absolute Length
    Units* section.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此属性的可用值，请参阅*绝对长度单位*部分。
- en: 'The most popular units are:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 最流行的单位有：
- en: '`px`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`px`'
- en: '`em`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`em`'
- en: '`rem`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rem`'
- en: Percentage
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 百分比
- en: The `percentage` attribute refers to the percentage of the parent element's
    font size. Its unit is `%`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`percentage`属性指的是父元素字体大小的百分比。其单位是`%`。'
- en: '**CSS**:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: font-size-adjust
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-size-adjust
- en: 'The `font-size-adjust` CSS property helps us define the aspect ratio of the
    fonts based on the size difference of the lowercase letter *x* and upper case
    letter *X*, and it looks like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-size-adjust` CSS属性帮助我们根据小写字母*x*和上标字母*X*的大小差异来定义字体宽高比，其看起来如下：'
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Description
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: In the font stack, the font sizes can be different from one font to the other,
    thus the styling of the text can considerably vary from the intended design. With
    the `font-size-adjust` CSS property, we can solidly predict that the font sizes
    are consistent when the browser uses any font from the font stack.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在字体堆栈中，字体大小可以不同，因此文本的样式可能会与预期设计有相当大的差异。使用`font-size-adjust` CSS属性，我们可以确保当浏览器使用字体堆栈中的任何字体时，字体大小是一致的。
- en: This property accepts a *numeric* value without a unit. It can also accept decimal
    values.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性接受一个不带单位的*数字*值。它也可以接受十进制值。
- en: 'A great online tool that can do this for us is Fontdeck''s font-size-adjust
    web app: [http://fontdeck.com/support/fontsizeadjust](http://fontdeck.com/support/fontsizeadjust).'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可以为我们完成这项工作的优秀在线工具是Fontdeck的字体大小调整web应用：[http://fontdeck.com/support/fontsizeadjust](http://fontdeck.com/support/fontsizeadjust)。
- en: Tip
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Although Firefox is the only one that supports the `font-size-adjust` property
    at the time of writing this section, I decided to still include it because it
    will be of great value once other browsers start supporting it.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在撰写本节时Firefox是唯一支持`font-size-adjust`属性的浏览器，但我决定仍然包括它，因为一旦其他浏览器开始支持它，它将非常有价值。
- en: '**CSS**:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: font-stretch
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-stretch
- en: 'The `font-stretch` CSS property allows us to select a `condensed`, `normal`,
    or `expanded` face from the font family in question, and it looks like this:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-stretch` CSS属性允许我们从相关的字体族中选择`condensed`、`normal`或`expanded`面，其外观如下：'
- en: '[PRE8]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Description
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `font-stretch` property doesn't just *stretch* the font to whatever we tell
    it to. It looks for an actual face inside the font file that matches the declared
    style; or at that is as close as possible.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-stretch`属性不仅将字体拉伸到我们告诉它的任何地方。它会在字体文件中寻找与声明的样式相匹配的实际面；或者尽可能接近。'
- en: 'This property supports the following values:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持以下值：
- en: '`ultra-condensed`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ultra-condensed`'
- en: '`extra-condensed`'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`extra-condensed`'
- en: '`condensed`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`condensed`'
- en: '`semi-condensed`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semi-condensed`'
- en: '`normal`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`normal`'
- en: '`semi-expanded`'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semi-expanded`'
- en: '`expanded`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expanded`'
- en: '`extra-expanded`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`extra-expanded`'
- en: '`ultra-expanded`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ultra-expanded`'
- en: '**CSS**:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE9]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: font-style
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-style
- en: 'The `font-style` CSS property specifies the font style of an element, and it
    looks like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-style` CSS属性指定了元素的字体样式，其外观如下：'
- en: '[PRE10]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Description
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `font-style` property accepts the following values: `normal`, `italic`,
    and `oblique`.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-style`属性接受以下值：`normal`、`italic`和`oblique`。'
- en: Let's clear up the difference between `italic` and `oblique`.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们澄清`italic`和`oblique`之间的区别。
- en: 'According to the spec:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 根据规范：
- en: '*"Italic forms are generally cursive in nature, while oblique faces are typically
    sloped versions of the regular face."*'
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"斜体形式通常是草书的，而斜体面通常是常规面的倾斜版本。"*'
- en: This means that when we declare the font style `italic`, the browser will look
    for the italic face of the font and use that face. A good example of this is the
    typeface *Georgia*; when we use the `italic` property, we can clearly see that
    it's an actual italicized face rather than making the normal face oblique.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着当我们声明字体样式为`italic`时，浏览器将寻找字体的斜体面并使用该面。一个很好的例子是字体族*Georgia*；当我们使用`italic`属性时，我们可以清楚地看到它是一个真正的斜体面，而不是使正常面倾斜。
- en: Oblique makes the Normal face slanted or inclined in order to *simulate* italics.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 斜体使正常面倾斜或倾斜，以*模拟*斜体。
- en: '**CSS**:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: font-variant
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-variant
- en: 'The `font-variant` CSS property turns the targeted text into small caps and
    it looks like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-variant` CSS属性将目标文本转换为小写字母，其外观如下：'
- en: '[PRE12]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Description
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `font-variant` property is considered a shorthand in CSS3 and has been extended
    with new values, which developers rarely use.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-variant`属性在CSS3中被视为缩写，并已通过新值进行了扩展，但开发者很少使用。'
- en: One thing to note is that if the text is already in all caps and we apply the
    `small-caps` property to it, the text will not change; it will continue to be
    in all caps.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，如果文本已经是全大写，并且我们对其应用了`small-caps`属性，文本将不会改变；它将继续保持全大写。
- en: 'The most used values are: `normal` and `small-caps`. Some of the additional
    values in CSS3 are `small-caps`, `all-small-caps`, `petite-caps`, `all-petite-caps`,
    `unicase`, and `titling-caps`.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的值是：`normal`和`small-caps`。CSS3中的一些附加值包括`small-caps`、`all-small-caps`、`petite-caps`、`all-petite-caps`、`unicase`和`titling-caps`。
- en: 'For more information, check out the MDN website: [http://tiny.cc/mdn-font-variant](http://tiny.cc/mdn-font-variant)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多信息，请访问MDN网站：[http://tiny.cc/mdn-font-variant](http://tiny.cc/mdn-font-variant)
- en: '**CSS**:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE13]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: font-variant-ligatures
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-variant-ligatures
- en: 'The `font-variant-ligatures` CSS property defines ligatures in text, which
    specify how glyphs are combined in order to produce a more harmonic text, and
    it looks like this:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-variant-ligatures` CSS属性在文本中定义连字符，指定了如何组合符号以产生更和谐的文本，其外观如下：'
- en: '[PRE14]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Description
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `font-variant-ligatures` are common in OpenType fonts.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-variant-ligatures`在OpenType字体中很常见。'
- en: 'The `font-variant-ligatures` property uses the following values: `common-ligatures`,
    `no-common-ligatures`, `discretionary-ligatures`, `no-discretionary-ligatures`,
    `historical-ligatures`, `no-historical-ligatures`, `contextual`, `no-contextual`,
    and `contextual`.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-variant-ligatures`属性使用以下值：`common-ligatures`、`no-common-ligatures`、`discretionary-ligatures`、`no-discretionary-ligatures`、`historical-ligatures`、`no-historical-ligatures`、`contextual`、`no-contextual`和`contextual`。'
- en: 'For more information, check out the MDN website: [http://tiny.cc/mdnfont-variant-ligatures](http://tiny.cc/mdnfont-variant-ligatures)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请查看MDN网站：[http://tiny.cc/mdnfont-variant-ligatures](http://tiny.cc/mdnfont-variant-ligatures)
- en: '**CSS**:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE15]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: font-weight
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font-weight
- en: 'The `font-weight` CSS property defines the thickness (weight) of the font,
    and it looks like this:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-weight` CSS属性定义了字体的厚度（重量），其语法如下：'
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Description
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property accepts two types of values: a *numeric* value and a *keyword*
    value.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性接受两种类型的值：一个*数字*值和一个*关键字*值。
- en: Numeric values
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数字值
- en: This property accepts numeric values such as `100`, `200`, `300`, `400`, `500`,
    `600`, `700`, `800` and `900`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性接受`100`、`200`、`300`、`400`、`500`、`600`、`700`、`800`和`900`这样的数字值。
- en: Keyword values
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 关键字值
- en: This property also accepts keyword values such as `normal`, `bold`, `bolder`,
    and `lighter`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性也接受关键字值，如`normal`、`bold`、`bolder`和`lighter`。
- en: Tip
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `normal` keyword is the same as `400` numeric value and the `bold` keyword
    is the same as `700`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`normal`关键字等同于`400`数字值，而`bold`关键字等同于`700`。'
- en: One thing to note is that the keywords `bolder` and `lighter` are dependent
    on the parent element's font weight.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 有一点需要注意，关键字`bolder`和`lighter`取决于父元素的字体粗细。
- en: '**CSS**:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE17]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: font
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: font
- en: 'The `font` CSS property is the shorthand for the `font-style`, `font-variant`,
    `font-weight`, `font-size`, `line-height`, and `font-family` properties, and it
    looks like this:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`font` CSS属性是`font-style`、`font-variant`、`font-weight`、`font-size`、`line-height`和`font-family`属性的简写，其语法如下：'
- en: '[PRE18]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Description
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'There are a few things to consider when using the `font` shorthand in order
    for it to work:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`font`简写属性时，有一些事情需要考虑，以确保其正常工作：
- en: At least the `font-size` and `font-family` properties need to be declared
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少需要声明`font-size`和`font-family`属性
- en: If any of the preceding two properties are omitted, the declaration will be
    ignored
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果省略了上述两个属性中的任何一个，则声明将被忽略
- en: 'If any more than these two properties are going to be declared, it''s mandatory
    to adhere to the following order:'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要声明这两个属性之外的更多属性，则必须遵守以下顺序：
- en: '`font-style`'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font-style`'
- en: '`font-variant`'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font-variant`'
- en: '`font-weight`'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font-weight`'
- en: '`font-size`'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font-size`'
- en: '`line-height`'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`line-height`'
- en: '`font-family`'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font-family`'
- en: Tip
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'When declaring the `line-height` value in the shorthand, it always has to go
    after the `font-size` property separated with a slash "`/`" character, for example,
    `.element { font: 12px/1.6 Arial; }`.'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在简写中声明`line-height`值时，它必须始终跟在`font-size`属性之后，并用斜杠"`/`"字符分隔，例如，`.element { font:
    12px/1.6 Arial; }`。'
- en: '**CSS**:'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE19]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Transform
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Transform
- en: CSS transforms have gained such popularity that it's rare not to see some sort
    of transformation in a website nowadays—from button shapes and animations to layouts.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: CSS转换已经变得如此流行，以至于现在很少看到网站上没有某种转换——从按钮形状和动画到布局。
- en: Let's dig in.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨。
- en: transform
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: transform
- en: 'The `transform` CSS property allows us to scale, rotate, skew, and translate
    elements in 2D and 3D spaces, and it looks like this:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`transform` CSS属性允许我们在2D和3D空间中对元素进行缩放、旋转、倾斜和转换，其语法如下：'
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Description
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports the following values: `scale()`, `skewX()` and `skewY()`,
    `translate()`, `rotate()`, `matrix()`, and `perspective()`.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持以下值：`scale()`、`skewX()`和`skewY()`、`translate()`、`rotate()`、`matrix()`和`perspective()`。
- en: Note that X-axis equals *horizontal* and Y-axis equals *vertical*.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，X轴等于*水平*，Y轴等于*垂直*。
- en: Tip
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'An easy way to remember which axis is which is by saying this: "*x is a cross
    so the x-axis is across*". [http://tiny.cc/xy-axis](http://tiny.cc/xy-axis)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 记住哪个轴是哪个的一个简单方法是说：“*x是一个十字，所以x轴是横跨的*”。[http://tiny.cc/xy-axis](http://tiny.cc/xy-axis)
- en: scale()
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: scale()
- en: The `scale()` function scales an element. It's also the shorthand for `scaleX()`
    and `scaleY()` functions. It accepts a *numeric* value without a unit. The *numeric*
    value represents the proportion in which the element will be scaled. For example,
    `2` means that the element will be scaled to twice its size. Negative values are
    valid.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`scale()`函数用于缩放元素。它也是`scaleX()`和`scaleY()`函数的简写。它接受一个不带单位的*数字*值。*数字*值表示元素缩放的比例。例如，`2`表示元素将被缩放至其大小的两倍。负值也是有效的。'
- en: skew()
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: skew()
- en: The `skew()` function tilts the element. If a single value is declared, then
    it will only tilt the element on the *x* axis. If two values are declared, then
    the element is tilted on both the *x* and *y* axes. The `skew()` function accepts
    a *numeric* value followed by the `deg`, `grad`, `rad`, or `turn` units. However,
    the `deg` unit is the most commonly used unit. Negative values are valid.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`skew()`函数使元素倾斜。如果声明了一个单个值，那么它只会使元素在*x*轴上倾斜。如果声明了两个值，那么元素将在*x*轴和*y*轴上倾斜。`skew()`函数接受一个*数值*后跟`deg`、`grad`、`rad`或`turn`单位。然而，`deg`单位是最常用的单位。负值是有效的。'
- en: skewX() and skewY()
  id: totrans-182
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: skewX()和skewY()
- en: The `skewX()` and `skewY()` functions tilts the element only horizontally or
    vertically.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`skewX()`和`skewY()`函数仅使元素水平或垂直倾斜。'
- en: translate()
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: translate()
- en: The `translate()` function alters the location of an element. If a single value
    is declared, then it will only translate the element on the X-axis. If two values
    are declared, then the element is translated in both the X and Y-axis. Negative
    values are valid.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`translate()`函数改变元素的位置。如果声明了一个单个值，那么它只会沿X轴平移元素。如果声明了两个值，那么元素将在X轴和Y轴上平移。负值是有效的。'
- en: translateX() and translateY()
  id: totrans-186
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: translateX()和translateY()
- en: The `translateX()` and `translateY()` functions alters the location either horizontally
    or vertically.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`translateX()`和`translateY()`函数改变元素的水平或垂直位置。'
- en: rotate()
  id: totrans-188
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: rotate()
- en: The `rotate()` function rotates an element around a fixed point in a 2D space.
    It accepts a *numeric* value followed by the `deg`, `grad`, `rad`, or `turn` units.
    The `deg` unit is the most common though. Negative values are valid.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`rotate()`函数在2D空间中围绕一个固定点旋转一个元素。它接受一个*数值*后跟`deg`、`grad`、`rad`或`turn`单位。尽管如此，`deg`单位是最常用的。负值是有效的。'
- en: matrix()
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: matrix()
- en: The `matrix()` function is shorthand for all transformation values since they
    can be combined here. Granted the complexity of the `matrix()` function, this
    requires a solid understanding of math.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`matrix()`函数是所有变换值的简写，因为它们可以在这里组合。鉴于`matrix()`函数的复杂性，这需要扎实的数学基础。'
- en: perspective()
  id: totrans-192
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: perspective()
- en: This value gives a 3D perspective to the element; once the perspective is set,
    we can then use any of the other values. The element in question will react in
    a 3D plane. It accepts a *numeric* value with a *length* unit.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 此值给元素一个3D视角；一旦设置了视角，我们就可以使用其他任何值。相关元素将在3D平面上反应。它接受一个带有*长度单位*的*数值*。
- en: 'The explanation of the advanced mathematics of the `matrix()` function are
    out of scope of this book. However, for very detailed explanations, you can refer
    to either of these two articles:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不涉及`matrix()`函数的高级数学解释。然而，对于非常详细的解释，你可以参考这两篇文章中的任意一篇：
- en: '*Understanding the CSS Transforms Matrix* by Tiffany Brown at [http://tiny.cc/css-matrix-1](http://tiny.cc/css-matrix-1)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《理解CSS变换矩阵》*，作者：Tiffany Brown，链接：[http://tiny.cc/css-matrix-1](http://tiny.cc/css-matrix-1)'
- en: '*The CSS3 matrix() Transform for the Mathematically Challenged* by Zoltan Hawryluk
    at [http://tiny.cc/css-matrix-2](http://tiny.cc/css-matrix-2)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《CSS3矩阵变换，让数学挑战者也能理解》*，作者：Zoltan Hawryluk，链接：[http://tiny.cc/css-matrix-2](http://tiny.cc/css-matrix-2)'
- en: '**CSS**:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE21]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: transform-origin
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: transform-origin
- en: 'The `transform-origin` CSS property allows us to change the point of origin
    of the transformed element, and it looks like this:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`transform-origin` CSS属性允许我们改变变换元素的基点，它看起来像这样：'
- en: '[PRE22]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Description
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `transform-origin` property only works if the `transform` property is declared.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当声明了`transform`属性时，`transform-origin`属性才起作用。
- en: 2D transformations can affect the *x* and *y* axes. 3D transformations can change
    these two as well as the *z* axis.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 2D变换可以影响*x*和*y*轴。3D变换可以改变这两个轴，以及*z*轴。
- en: For a 2D transformation, up to two values can be declared; the first one is
    the X axis (horizontal) and the second the Y axis (vertical).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对于2D变换，最多可以声明两个值；第一个是X轴（水平），第二个是Y轴（垂直）。
- en: 3D transformations can take up to three values that represent the X, Y, and
    Z axes.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 3D变换可以接受最多三个值，代表X、Y和Z轴。
- en: 'The keywords that are accepted in this property are: `top`, `right`, `bottom`,
    `left`, and `center`.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性接受的键值有：`top`、`right`、`bottom`、`left`和`center`。
- en: '**CSS**:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE23]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: transform-style
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: transform-style
- en: 'The `transform-style` CSS property defines whether an element is positioned
    in a 3D space or 2D space (flat), and it looks like this:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`transform-style` CSS属性定义了元素是在3D空间中定位还是在2D空间（平坦）中，它看起来像这样：'
- en: '[PRE24]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Description
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property takes only two values: `flat` and `preserve-3d`.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性只接受两个值：`flat`和`preserve-3d`。
- en: When the `preserve-3d` property is applied, the elements' stack on the *z* axis
    can be altered via the `translate()` function, thus the elements can appear in
    different planes regardless of the order in which they appear in the source HTML.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: When the `flat` property is applied, the elements obey the order in which they
    appear in the source HTML.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that this property is applied to the parent element, not the child elements.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Transition
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CSS transitions allow us to have very granular control over our animations.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at these properties.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: transition
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `transition` CSS property is the shorthand for all transition properties:
    `transition-delay`, `transition-duration`, `transition-property`, and `transition-timing-function`.
    It looks like this:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Description
  id: totrans-227
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This property lets us define the transition between two states of an element
    via the `:hover` or `:active` pseudo-classes.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: One thing to consider is that the order in which these properties appear doesn't
    matter. However, since `transition-delay` and `transition-duration` use the same
    value unit, `transition-delay` will always be considered first, followed by `transition-duration`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: transition-delay
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `transition-delay` CSS property allows us to set a *timer*. When the timer
    reaches zero, the transition begins. It looks like this:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Description
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This property accepts a *numeric* value followed by either `s` or `ms`, which
    stand for *seconds* and *milliseconds*, respectively.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: transition-duration
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `transition-duration` CSS property allows us to define how long a transition
    should take from start to end. This is also called a **cycle,** and it looks like
    this:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Description
  id: totrans-242
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `transition-duration` property accepts a *numeric* value followed by either
    `s` or `ms`, which stand for seconds and milliseconds, respectively.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: transition-property
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `transition-property` CSS property specifies which CSS property or properties
    will be transitioned.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: Not all properties are animatable though. The W3C has a nice list of animatable
    CSS properties, which can be found at [http://tiny.cc/w3c-animatable-css-props](http://tiny.cc/w3c-animatable-css-props)
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-249
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The `transition-property` CSS property accepts the following values:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '`none`: This means that no transitions will take place'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`all`: This means that all properties will be transitioned'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Property name`: This means that the specified property or properties will
    be transitioned'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: transition-timing-function
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `transition-timing-function` CSS property defines how an animation's speed
    should progress throughout its cycles.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: 'Both the `transition-timing-function` and `animation-timing-function` properties
    accept the same five predefined values, which are also known as easing functions
    for the **Bézier** curve: `ease`, `ease-in`, `ease-out`, `ease-in-out`, and `linear`.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Refer to the *animation-timing-function* section for a detailed explanation
    of all the values.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Positioning
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Positioning elements is something we spend a lot of our time on when building
    sites and applications, so having a good understanding of how to place an element
    on a layout is crucial, especially when an element can have different positions
    depending on the available space.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: Let's see what positioning is all about.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: position
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `position` CSS property defines the location of an element.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are five keyword values for the `position` property: `static`, `absolute`,
    `relative`, `fixed`, and `sticky`.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: static
  id: totrans-269
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This is the default value of the `position` property. The element stays in the
    flow of the document and appears in the actual location where it's located in
    the markup.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: absolute
  id: totrans-271
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The element is removed from the document flow and it's positioned in relation
    to its closest relative positioned ancestor element.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: relative
  id: totrans-273
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The element does not change positions unless one or several properties of `top`,
    `right`, `bottom`, or `left` are declared. It also creates a *reference position*
    for `absolute` positioned child elements.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: fixed
  id: totrans-275
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The element is removed from the document flow just like the `absolute` positioned
    elements. However, unlike the `absolute` positioned elements, which are relative
    to an ancestor element, the `fixed` elements are always relative to the document.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: sticky
  id: totrans-277
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This value is a mix between the `relative` and `fixed` positions. The element
    is treated as `relative` until a specific point or threshold is met, at which
    point the element is then treated as `fixed`. At the time of writing this, only
    Firefox supports this property.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: top
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `top` CSS property is closely tied to the `position` property.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: 'This property specifies the distance of an element from the top of its current
    location if the element has `position: relative;` declared or from the top of
    its nearest ancestor when the ancestor has `position: relative;` and the element
    has `position: absolute;` declared.'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: 'If none of the ancestors have `position: relative;` declared, the absolute
    positioned element will traverse the DOM until it reaches the `<body>` tag, at
    which point it will position itself at the top of the page regardless of its location
    in the source HTML.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: Negative values are valid.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It supports the following values:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '`auto`: The `auto` keyword is the default value. The browser calculates the
    top position.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Length value`: For the length value, we use one of the following units: `px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CSS**:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: bottom
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `bottom` CSS property is closely tied to the `position` property.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: 'This property specifies the distance of an element from the bottom of its current
    location if the element itself has `position: relative;` declared or from the
    bottom of its nearest ancestor when the ancestor has `position: relative;` and
    the element has `position: absolute;` declared.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: 'If none of the ancestors have `position: relative;` declared, the absolute
    positioned element will traverse the DOM until it reaches the `<body>` tag, at
    which point it will position itself at the bottom of the page regardless of its
    location in the source HTML.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '如果没有祖先元素声明了 `position: relative;`，则绝对定位的元素将遍历 DOM，直到它到达 `<body>` 标签，此时它将将自己定位在页面的底部，而不管它在源
    HTML 中的位置如何。'
- en: Negative values are valid.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 负值是有效的。
- en: Description
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports the following values:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持以下值：
- en: '`auto`: The auto keyword is the default value for the `bottom` property. The
    browser calculates the top position.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`: `auto` 关键字是 `bottom` 属性的默认值。浏览器计算顶部位置。'
- en: '`Length value`: For the length value, we use one of the following units: `px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`: 对于长度值，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw`等等。'
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`: 对于百分比值，我们使用类似 `50%`、`85%` 等的百分比。'
- en: '**CSS**:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE36]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: left
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: left
- en: The `left` CSS property is closely tied to the `position` property.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`left` CSS 属性与 `position` 属性紧密相关。'
- en: 'This property specifies the distance of an element from the left of its current
    location if the element has `position: relative;` declared or from the left of
    its nearest ancestor when the ancestor has `position: relative;` and the element
    has `position: absolute;` declared.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '该属性指定了元素从其当前位置左侧的距离，如果元素声明了 `position: relative;` 或者在祖先元素有 `position: relative;`
    且元素有 `position: absolute;` 声明时，从最近的祖先元素的右侧开始计算。'
- en: 'If none of the ancestors have `position: relative;` declared, the absolute
    positioned element will traverse the DOM until it reaches the `<body>` tag, at
    which point it will position itself at the left of the page regardless of its
    location in the source HTML.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '如果没有祖先元素声明了 `position: relative;`，则绝对定位的元素将遍历 DOM，直到它到达 `<body>` 标签，此时它将将自己定位在页面的左侧，而不管它在源
    HTML 中的位置如何。'
- en: Negative values are valid.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 负值是有效的。
- en: Description
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `left` property supports the following values:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`left` 属性支持以下值：'
- en: '`auto`: The `auto` keyword is the default value for the `left` property. The
    browser calculates the top position.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`: `auto` 关键字是 `left` 属性的默认值。浏览器计算顶部位置。'
- en: '`Length value`: For the length value, we use one of the following units: `px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`: 对于长度值，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw`等等。'
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`: 对于百分比值，我们使用类似 `50%`、`85%` 等的百分比。'
- en: '**CSS**:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE37]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: right
  id: totrans-317
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: right
- en: The `right` CSS property is closely tied to the `position` property.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '`right` CSS 属性与 `position` 属性紧密相关。'
- en: 'This property specifies the distance of an element from the right of its current
    location if the element has `position: relative;` declared or from the right of
    its nearest ancestor when the ancestor has `position: relative;` and the element
    has `position: absolute;` declared.'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '该属性指定了元素从其当前位置右侧的距离，如果元素声明了 `position: relative;` 或者在祖先元素有 `position: relative;`
    且元素有 `position: absolute;` 声明时，从最近的祖先元素的右侧开始计算。'
- en: 'If none of the ancestors have `position: relative;` declared, the absolute
    positioned element will traverse the DOM until it reaches the `<body>` tag, at
    which point it will position itself at the right of the page regardless of its
    location in the source HTML.'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '如果没有祖先元素声明了 `position: relative;`，则绝对定位的元素将遍历 DOM，直到它到达 `<body>` 标签，此时它将将自己定位在页面的右侧，而不管它在源
    HTML 中的位置如何。'
- en: Negative values are valid.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 负值是有效的。
- en: Description
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports the following values:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持以下值：
- en: '`auto`: The `auto` keyword is the default value for the `right` property. The
    browser calculates the top position.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`: `auto` 关键字是 `right` 属性的默认值。浏览器计算顶部位置。'
- en: '`Length value`: For the length value, we use one of the following units: `px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`: 对于长度值，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw`等等。'
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`: 对于百分比值，我们使用类似 `50%`、`85%` 等的百分比。'
- en: '**CSS**:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE38]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: vertical-align
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: vertical-align
- en: The `vertical-align` CSS property controls the vertical positioning of an element
    in order to align it to another element(s) next to it.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`vertical-align` CSS 属性控制元素在垂直方向上的定位，以便将其与旁边的另一个（或多个）元素对齐。'
- en: Description
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It accepts the following values:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 它接受以下值：
- en: '`baseline`: This is the default value. It aligns the elements to the bottom,
    exactly at the last line of text regardless of the elements'' line height. In
    other words, it aligns the last line of text to baselines of the elements.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`baseline`：这是默认值。它将元素与底部对齐，正好在文本的最后一行，无论元素的行高如何。换句话说，它将文本的最后一行与元素的基线对齐。'
- en: '`bottom`: This aligns the elements'' containers to the bottom. The text and
    line height of the elements are not considered, only the elements'' containers
    to the bottom.'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bottom`：此属性将元素的容器与底部对齐。不考虑元素的文本和行高，只考虑元素的容器与底部对齐。'
- en: '`Length value`: For the length value, we use one of the following units: `px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on. Negative values are valid.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`：对于长度值，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等。负值是有效的。'
- en: '`middle`: This aligns the elements to their horizontal center based on their
    vertical midpoint.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`middle`：此属性根据元素的垂直中点将元素水平居中对齐。'
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on. Negative values are valid.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`：对于百分比值，我们使用类似 `50%`、`85%` 等的百分比。负值是有效的。'
- en: '`sub`: This aligns the element to the subscript baseline of the parent container.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sub`：此属性将元素与父容器的下标基线对齐。'
- en: '`super`: This aligns the element to the superscript baseline of the parent
    container.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`super`：此属性将元素与父容器的上标基线对齐。'
- en: '`top`: This aligns the elements'' containers to the top. The text and line
    height of the elements are not considered.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top`：此属性将元素的容器与顶部对齐。不考虑元素的文本和行高。'
- en: '`text-bottom`: This aligns the elements to the bottom based on the parent''s
    text baseline. The line height of the elements is not considered, only the bottom
    of their containers is considered.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-bottom`：此属性根据父元素的文本基线将元素对齐到底部。不考虑元素的行高，只考虑其容器的底部。'
- en: '`text-top`: This aligns the elements to the top based on the parent''s text
    baseline. The line height of the elements is not considered, but the top of their
    containers is.'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text-top`：此属性根据父元素的文本基线将元素对齐到顶部。不考虑元素的行高，但考虑其容器的顶部。'
- en: Text
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本
- en: Typography is an incredibly powerful design feature and, in reality, styling
    text with CSS is actually simple.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 字体排印是一个极其强大的设计功能，实际上，使用 CSS 样式化文本实际上非常简单。
- en: Let's see how.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看怎么做。
- en: color
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色
- en: 'The `color` CSS property defines the color of the text and looks like this:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`color` CSS 属性定义文本的颜色，其外观如下：'
- en: '[PRE39]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Alternatively, it can look like this:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，它也可以是这样的：
- en: '[PRE40]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Description
  id: totrans-351
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `color` property supports all color modes, `HEX`, `RGB`, `RGBa`, `HSL`,
    `HSLs`, and *color name*.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '`color` 属性支持所有颜色模式，包括 `HEX`、`RGB`、`RGBa`、`HSL`、`HSLs` 和 *颜色名称*。'
- en: '**CSS**:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE41]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: text-align
  id: totrans-355
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-align
- en: 'The `text-align` CSS property defines the alignment of the text, and it looks
    like this:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-align` CSS 属性定义了文本的对齐方式，其外观如下：'
- en: '[PRE42]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Description
  id: totrans-358
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The text can be centered, left-aligned, right-aligned, and fully-justified.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 文本可以居中、左对齐、右对齐和完全对齐。
- en: The `text-align` property only works on inline elements. If this property is
    applied to a block-level element, it will not work on the element itself, but
    it will work on its content.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-align` 属性仅适用于内联元素。如果将此属性应用于块级元素，则它不会应用于该元素本身，但会应用于其内容。'
- en: '**CSS**:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE43]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: text-decoration
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-decoration
- en: 'The `text-decoration` CSS property defines several formatting features for
    the text, and it looks like this:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration` CSS 属性定义了文本的几个格式化功能，其外观如下：'
- en: '[PRE44]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Description
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `text-decoration` property accepts the following keyword values: `underline`,
    `overline`, `line-through`, `none`, and `blink`.'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration` 属性接受以下关键字值：`underline`、`overline`、`line-through`、`none` 和
    `blink`。'
- en: This property is also the shorthand for the `text-decoration-line`, `text-decoration-color`,
    and `text-decoration-style` properties.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性也是 `text-decoration-line`、`text-decoration-color` 和 `text-decoration-style`
    属性的缩写。
- en: It can accept one, two, or three values in the same declaration if used as a
    shorthand.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用作缩写，则可以在同一声明中接受一个、两个或三个值。
- en: '**CSS**:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE45]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: text-decoration-line
  id: totrans-372
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-decoration-line
- en: 'The `text-decoration-line` CSS property defines the type of decoration line
    that a text can have, and it looks like this:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration-line` CSS 属性定义文本可以具有的装饰线类型，其外观如下：'
- en: '[PRE46]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Description
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `text-decoration-line` property accepts one, two, or three values in a
    single declaration. The keyword values are the same as in the `text-decoration`
    property: `underline`, `overline`, `line-through`, `none,` and `blink`.'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration-line` 属性可以在单个声明中接受一个、两个或三个值。关键字值与 `text-decoration` 属性中的相同：`underline`、`overline`、`line-through`、`none`
    和 `blink`。'
- en: '**CSS**:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE47]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: text-decoration-color
  id: totrans-379
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-decoration-color
- en: 'The `text-decoration-color` CSS property defines the type of color the `text-decoration`
    property can have, and it looks like this:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration-color` CSS 属性定义了 `text-decoration` 属性可以具有的颜色类型，其外观如下：'
- en: '[PRE48]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Description
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports all color modes: `HEX`, `RGB`, `RGBa`, `HSL`, `HSLs`, and *color
    name*.'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持所有颜色模式：`HEX`、`RGB`、`RGBa`、`HSL`、`HSLs` 和 *颜色名称*。
- en: '**CSS**:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE49]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: text-decoration-style
  id: totrans-386
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-decoration-style
- en: 'The `text-decoration-style` CSS property defines the type of line the `text-decoration`
    property can have, and it looks like this:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration-style` CSS 属性定义了 `text-decoration` 属性可以具有的线类型，其外观如下：'
- en: '[PRE50]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Description
  id: totrans-389
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `text-decoration-style` property supports the following keyword values:
    `dashed`, `dotted`, `double`, `solid`, and `wavy`.'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-decoration-style` 属性支持以下关键字值：`dashed`、`dotted`、`double`、`solid` 和 `wavy`。'
- en: '**CSS**:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE51]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: text-indent
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-indent
- en: 'The `text-indent` CSS property defines the space to the left (indentation)
    of the first line of text in an element, and it looks like this:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-indent` CSS 属性定义了元素中第一行文本的左侧空间（缩进），其外观如下：'
- en: '[PRE52]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Description
  id: totrans-396
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: It accepts `length` and `percentage` values. Negative values are valid.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 它接受 `length` 和 `percentage` 值。负值是有效的。
- en: '**CSS**:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE53]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: text-overflow
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-overflow
- en: 'The `text-overflow` CSS property defines how text that is *bleeding* outside
    of a container should be clipped, and it looks like this:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-overflow` CSS 属性定义了超出容器外部的文本应该如何被裁剪，其外观如下：'
- en: '[PRE54]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Description
  id: totrans-403
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'For this property to work, two other properties should have to be declared:
    `overflow: hidden;` and `white-space: nowrap;`.'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '为了使此属性生效，应该声明另外两个属性：`overflow: hidden;` 和 `white-space: nowrap;`。'
- en: 'There are two keyword values: `clip` and `ellipsis`.'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个关键字值：`clip` 和 `ellipsis`。
- en: clip
  id: totrans-406
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: clip
- en: This cuts the text exactly at the edge of its parent container. This may cause
    the last character to be clipped at any point showing only a portion of it.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 这会在父容器的边缘处精确切断文本。这可能会导致最后一个字符在任何时刻被切断，只显示其一部分。
- en: ellipsis
  id: totrans-408
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: ellipsis
- en: This adds an ellipsis character "…" at the end of the line of text.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 这在文本行的末尾添加一个省略号字符 "…"。
- en: 'CSS:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 'CSS:'
- en: '[PRE55]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: text-rendering
  id: totrans-412
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-rendering
- en: 'The `text-rendering` CSS property allows us to define the quality of the text
    over speed/performance and it looks like this:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-rendering` CSS 属性允许我们定义文本的质量相对于速度/性能，其外观如下：'
- en: '[PRE56]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Description
  id: totrans-415
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Depending on the font, when this property is applied, we can see benefits like
    better kerning and better ligatures.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 根据字体，当应用此属性时，我们可以看到诸如更好的字距调整和更好的连字符等好处。
- en: However, since this CSS property is actually an SVG property and is not part
    of any CSS standard, browsers and operating systems apply this property at their
    own discretion, which in turn may not yield the desired improvements from one
    browser and/or platform to another.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于这个 CSS 属性实际上是一个 SVG 属性，并且不属于任何 CSS 标准，因此浏览器和操作系统会根据自己的判断来应用这个属性，这可能会导致在不同的浏览器和/或平台之间无法达到预期的改进。
- en: In addition to this, some small screen devices have serious performance issues
    when they encounter the `text-rendering` CSS property, especially older iOS and
    Android devices.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些小屏幕设备在遇到 `text-rendering` CSS 属性时存在严重的性能问题，尤其是较旧的 iOS 和 Android 设备。
- en: Tip
  id: totrans-419
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Use the `text-rendering` CSS property with extreme caution and make sure you
    run all pertinent tests.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `text-rendering` CSS 属性时要格外小心，并确保运行所有相关测试。
- en: 'This property supports four values: `auto`, `optimizeSpeed`, `optimizeLegibility`,
    and `geometricPrecision`.'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持四个值：`auto`、`optimizeSpeed`、`optimizeLegibility` 和 `geometricPrecision`。
- en: auto
  id: totrans-422
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: auto
- en: This is the default value. The browser tries to make the best educated guess
    as to how to render the text in order to optimize for speed, legibility, and geometric
    precision.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。浏览器会尽力做出最佳猜测，以优化文本的渲染，以实现速度、可读性和几何精度。
- en: Remember, each browser interprets this property differently.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，每个浏览器对此属性的解析都不同。
- en: optimizeSpeed
  id: totrans-425
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: optimizeSpeed
- en: The browser favors rendering speed over legibility and geometric detail. It
    disables kerning and ligatures.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器更倾向于渲染速度而不是可读性和几何细节。它禁用了字距调整和连字符。
- en: optimizeLegibility
  id: totrans-427
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: optimizeLegibility
- en: The browser favors legibility over rendering speed and geometric detail. It
    enables kerning and some optional ligatures. Keep in mind that if the browser
    tries to use any kerning and ligatures, this information needs to be contained
    in the font file, otherwise we won't see the effects of such features.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器更倾向于可读性而非渲染速度和几何细节。它启用了字距调整和一些可选的连字符。请注意，如果浏览器尝试使用任何字距调整和连字符，这些信息需要包含在字体文件中，否则我们不会看到这些功能的效果。
- en: geometricPrecision
  id: totrans-429
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: geometricPrecision
- en: The browser favors geometric detail over legibility and rendering speed. This
    property helps when scaling fonts.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器更倾向于几何细节而非可读性和渲染速度。此属性在缩放字体时很有帮助。
- en: For example, the kerning in some fonts does not scale correctly, so when we
    apply this value, the browser is capable of keeping the text looking nice.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，某些字体中的字距调整可能无法正确缩放，因此当我们应用此值时，浏览器能够保持文本看起来很漂亮。
- en: '**CSS**:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE57]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: text-shadow
  id: totrans-434
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-shadow
- en: 'The `text-shadow` CSS property applies a drop shadow to the text, and it looks
    like this:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-shadow` CSS属性将阴影应用到文本上，它看起来像这样：'
- en: '[PRE58]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Description
  id: totrans-437
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property can accept two, three, or four values in the same declaration.
    The first length value in the declaration will always be for the `x-offset` value
    and the second length value for the `y-offset` value.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性可以在同一声明中接受两个、三个或四个值。声明中的第一个长度值始终用于`x-offset`值，第二个长度值用于`y-offset`值。
- en: 'These are the four values it supports: `x-offset`, `y-offset`, `color`, and
    `blur`.'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持以下四个值：`x-offset`、`y-offset`、`color`和`blur`。
- en: '`x-offset`: This sets the horizontal distance of the shadow from the text.
    It''s declared as a length value (`px`, `em`, `in`, `mm`, `cm`, `vw`, and so on).
    Negative values are valid. This value is mandatory.'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x-offset`: 这设置了阴影与文本的水平距离。它声明为一个长度值（`px`、`em`、`in`、`mm`、`cm`、`vw`等）。负值是有效的。此值是必需的。'
- en: '`y-offset`: This sets the vertical distance of the shadow from the text. It''s
    declared as a length value (`px`, `em`, `in`, `mm`, `cm`, `vw`, and so on). Negative
    values are valid. This value is mandatory.'
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`y-offset`: 这设置了阴影与文本的垂直距离。它声明为一个长度值（`px`、`em`、`in`、`mm`、`cm`、`vw`等）。负值是有效的。此值是必需的。'
- en: '`color`: This is the color of the text shadow. It supports all color modes:
    `HEX`, `RGB`, `RGBa`, `HSL`, `HSLs`, and *color name*. This value is optional.
    If it is not specified, the default color will be the same color as the text itself.'
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color`: 这是文本阴影的颜色。它支持所有颜色模式：`HEX`、`RGB`、`RGBa`、`HSL`、`HSLs`和*颜色名称*。此值是可选的。如果没有指定，默认颜色将与文本本身的颜色相同。'
- en: '`blur`: This is the **smudge** effect. It''s declared as a length value (`px`,
    `em`, `in`, `mm`, `cm`, `vw`, and so on). It supports all color modes: `HEX`,
    `RGB`, `RGBa`, `HSL`, `HSLs`, and *color name*. This value is optional. If it
    is not specified, the default value is zero (`0`).'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blur`: 这是**模糊**效果。它声明为一个长度值（`px`、`em`、`in`、`mm`、`cm`、`vw`等）。它支持所有颜色模式：`HEX`、`RGB`、`RGBa`、`HSL`、`HSLs`和*颜色名称*。此值是可选的。如果没有指定，默认值是零（`0`）。'
- en: '**CSS**:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE59]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: text-transform
  id: totrans-446
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-transform
- en: 'The `text-transform` CSS property controls the capitalization of text, and
    it looks like this:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-transform` CSS属性控制文本的大小写，它看起来像这样：'
- en: '[PRE60]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Description
  id: totrans-449
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `text-transform` property supports the following four keyword values: `none`,
    `capitalize`, `uppercase`, and `lowercase`.'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-transform`属性支持以下四个关键字值：`none`、`capitalize`、`uppercase`和`lowercase`。'
- en: '`none`: This is the default value. No capitalization should be applied to the
    element.'
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`: 这是默认值。不应将任何大小写应用于元素。'
- en: '`capitalize`: This capitalizes the first letter of each word. This property
    is smart enough to ignore any special characters or symbols at the beginning of
    the line and capitalize the first letter of the first word.'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`capitalize`: 这会将每个单词的首字母大写。此属性足够智能，可以忽略行首的任何特殊字符或符号，并将第一个单词的首字母大写。'
- en: '`uppercase`: This changes all the text to upper case/capitals. This property
    can also ignore special characters or symbols at the beginning of the line.'
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uppercase`: 这会将所有文本转换为大写/首字母大写。此属性还可以忽略行首的特殊字符或符号。'
- en: '`lowercase`: This makes all the text lowercase. This property can also ignore
    special characters or symbols at the beginning of the line.'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lowercase`: 这会将所有文本转换为小写。此属性还可以忽略行首的特殊字符或符号。'
- en: text-underline-position
  id: totrans-455
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: text-underline-position
- en: 'The `text-underline-position` CSS property defines the location of the underline
    on elements that have the `text-decoration` property declared, and it looks like
    this:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-underline-position` CSS属性定义了具有声明`text-decoration`属性的元素的下划线位置，它看起来像这样：'
- en: '[PRE61]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Description
  id: totrans-458
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `text-underline-position` property supports four keyword values: `auto`,
    `left`, `right`, and `under`.'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-underline-position` 属性支持四个关键字值：`auto`、`left`、`right` 和 `under`。'
- en: auto
  id: totrans-460
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: auto
- en: This is the default value. This property allows the browser to decide where
    to place the underline, whether at the base line of the text or below it.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。此属性允许浏览器决定下划线的位置，是位于文本的基线还是其下方。
- en: left
  id: totrans-462
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: left
- en: This is only for vertical writing modes. It places the underline to the left
    of the text.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅适用于垂直书写模式。它将下划线放置在文本的左侧。
- en: right
  id: totrans-464
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: right
- en: This is only for vertical writing modes. It places the underline to the right
    of the text.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅适用于垂直书写模式。它将下划线放置在文本的右侧。
- en: under
  id: totrans-466
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: under
- en: This value places the underline below the base line of the text, so it won't
    cross any descender (it supports values like `q`, `p`, `y`, and so on). This is
    helpful in text that has mathematical and chemical formulas that use a lot of
    subscripts, so the underline doesn't interfere with certain characters and make
    such formulas confusing or difficult to read.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 此值将下划线放置在文本的基线之下，因此它不会跨越任何下降线（它支持如 `q`、`p`、`y` 等值）。这对于包含大量下标的数学和化学公式的文本很有帮助，这样下划线就不会干扰某些字符，使这些公式变得混乱或难以阅读。
- en: '**CSS**:'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE62]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: direction
  id: totrans-470
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: direction
- en: 'The `direction` CSS property sets the direction of the text. Left to right
    for western languages and other similar languages and right to left for languages
    like Arabic or Hebrew. It looks like this:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '`direction` CSS 属性设置文本的方向。对于西方语言和其他类似语言，是从左到右，对于阿拉伯语或希伯来语等语言，是从右到左。其外观如下：'
- en: '[PRE63]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Description
  id: totrans-473
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The text direction is typically defined in the HTML via the `dir` attribute
    rather than via CSS.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 文本方向通常通过 HTML 中的 `dir` 属性而不是通过 CSS 定义。
- en: The `direction` CSS property is not inherited by table cells. So, in addition
    to this, it's recommended to set the direction of the text via the `dir` attribute
    in the HTML document to maintain complete cascading support if the CSS files do
    not load.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '`direction` CSS 属性不会由表格单元格继承。因此，除了这个之外，如果 CSS 文件没有加载，建议通过 HTML 文档中的 `dir` 属性设置文本方向，以保持完整的级联支持。'
- en: This property accepts two keyword values, `ltr` and `rtl`, which mean *left
    to right* and *right to left*.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性接受两个关键字值，`ltr` 和 `rtl`，分别表示 *从左到右* 和 *从右到左*。
- en: '**CSS**:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE64]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Tables
  id: totrans-479
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格
- en: Tables, tables, tables! Together with images, HTML tables are the black sheep
    of web design.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 表格，表格，表格！与图像一起，HTML 表格是网页设计的黑羊。
- en: Regardless of being the black sheep, the power of tables is amazing. And if
    there's an HTML element that does its job well, very well, it's tables.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 不论是黑羊还是白羊，表格的力量都是惊人的。而且，如果有一个 HTML 元素能很好地完成其工作，那么它就是表格。
- en: Let's dig in.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨。
- en: table-layout
  id: totrans-483
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: table-layout
- en: 'The `table-layout` CSS property allows us to define the how HTML tables are
    laid out on the document, and it looks like this:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: '`table-layout` CSS 属性允许我们定义 HTML 表格在文档中的布局方式，其外观如下：'
- en: '[PRE65]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Description
  id: totrans-486
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'There are two keyword values: `auto` and `fixed`.'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个关键字值：`auto` 和 `fixed`。
- en: '`auto`: This is the default value. Tables are automatically laid out by the
    browser this way without declaring anything in the CSS. The table cells adapt
    to the content inside of them; the behavior of table can sometimes be unpredictable.'
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：这是默认值。浏览器会以这种方式自动布局表格，而不需要在 CSS 中声明任何内容。表格单元格会适应其内部的内容；表格的行为有时可能是不可预测的。'
- en: '`fixed`: By declaring the width of the table cells from the first row, the
    rendering of the entire table can be actually faster; anything we do to improve
    performance is big win for everyone.'
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fixed`：通过从第一行声明表格单元格的宽度，整个表格的渲染实际上可以更快；我们为提高性能所做的任何努力都是对每个人来说都是一大胜利。'
- en: 'Since the table cells have a fixed width, depending on the data in the cells,
    some information can overflow the cells. Using a combination of the `overflow`
    properties and `text-overflow: ellipsis;` we can fix the issue.'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '由于表格单元格具有固定宽度，根据单元格中的数据，一些信息可能会溢出单元格。通过组合使用 `overflow` 属性和 `text-overflow:
    ellipsis;`，我们可以解决这个问题。'
- en: '**CSS**:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE66]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: border-collapse
  id: totrans-493
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: border-collapse
- en: 'The `border-collapse` CSS property tells the table cells to stay separated
    or get close together (collapse), and it looks like this:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '`border-collapse` CSS 属性告诉表格单元格保持分离或靠近（合并），其外观如下：'
- en: '[PRE67]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Description
  id: totrans-496
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports two keyword values: `separate` and `collapse`.'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持两个关键字值：`separate` 和 `collapse`。
- en: '`separate`: This is the default value. There is a space between the table cells,
    and each cell has its own border.'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`separate`：这是默认值。表格单元格之间有空隙，并且每个单元格都有自己的边框。'
- en: '`collapse`: This value brings the cells together, thus the space is lost and
    the cells share borders.'
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collapse`：此值将单元格聚集在一起，因此空间丢失，单元格共享边框。'
- en: '**CSS**:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE68]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: border-spacing
  id: totrans-502
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: border-spacing
- en: 'The `border-spacing` CSS property creates a space between the table cells,
    and it looks like this:'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '`border-spacing` CSS 属性在表格单元格之间创建空间，它看起来像这样：'
- en: '[PRE69]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Description
  id: totrans-505
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `border-spacing` property only works when the `border-collapse: separate;`
    declaration is present.'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '`border-spacing` 属性仅在存在 `border-collapse: separate;` 声明时才起作用。'
- en: '**CSS**:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE70]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: empty-cells
  id: totrans-509
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: empty-cells
- en: 'The `empty-cells` CSS property allows us to define how browsers should render
    borders and backgrounds on cells that have no content in them, and it looks like
    this:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '`empty-cells` CSS 属性允许我们定义浏览器应该如何渲染没有内容的单元格的边框和背景，它看起来像这样：'
- en: '[PRE71]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Description
  id: totrans-512
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `empty-cells` property supports two keyword values: `show` and `hide`,
    which determine whether the borders and background should, or should not, be rendered.'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '`empty-cells` 属性支持两个关键字值：`show` 和 `hide`，它们确定是否渲染边框和背景。'
- en: '**CSS**:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE72]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: caption-side
  id: totrans-516
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: caption-side
- en: 'The `caption-side` CSS property defines the location of the table caption,
    and it looks like this:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '`caption-side` CSS 属性定义了表格标题的位置，它看起来像这样：'
- en: '[PRE73]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Description
  id: totrans-519
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports two keyword values: `top` and `bottom`.'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持两个关键字值：`top` 和 `bottom`。
- en: In CSS 2, other keyword values, such as `left` and `right`, were supported,
    but they were dropped in CSS 2.1.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSS 2 中，支持了其他关键字值，如 `left` 和 `right`，但在 CSS 2.1 中被删除。
- en: '**CSS**:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE74]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Words and paragraphs
  id: totrans-524
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单词和段落
- en: Continuing with typography features, we now enter the `word` and `paragraph`
    properties.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 继续介绍排版功能，我们现在进入 `word` 和 `paragraph` 属性。
- en: Let's get going.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: hyphens
  id: totrans-527
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: hyphens
- en: 'The `hyphens` CSS property tells the browser how to handle hyphenation when
    text lines wrap, and it looks like this:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '`hyphens` CSS 属性告诉浏览器在文本行换行时如何处理连字符，它看起来像这样：'
- en: '[PRE75]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Description
  id: totrans-530
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: We can control when to hyphenate and whether to allow it or let it happen under
    certain conditions.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以控制何时连字符化以及是否允许它或在某些条件下发生。
- en: Hyphenation is language dependent. The language in a document is defined by
    the `lang` attribute; browsers will hyphenate if they support the language and
    a proper hyphenation dictionary is available. Each browser supports hyphenation
    differently.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 连字符是语言相关的。文档中的语言由 `lang` 属性定义；如果浏览器支持该语言并且有适当的连字符词典，则会进行连字符化。每个浏览器对连字符化的支持方式不同。
- en: Tip
  id: totrans-533
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Ensure that the `lang` attribute is declared either globally on the `<html>`
    tag or on the specific element whose content should be hyphenated.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在 `<html>` 标签上全局声明或在每个应进行连字符化的特定元素上声明 `lang` 属性。
- en: 'This property supports three keyword values: `none`, `manual`, and `auto`.'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持三个关键字值：`none`、`manual` 和 `auto`。
- en: '`none`: Text lines are not broken at line breaks even if there are characters
    suggesting where a line break should be introduced. Lines will only break on whitespace.'
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`：即使有字符建议在哪里引入行中断，文本行也不会在行中断处中断。行仅在空白处中断。'
- en: '`manual`: Text lines are broken at line breaks where there are characters that
    suggest a line break.'
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manual`：文本行在存在字符建议行中断的地方中断。'
- en: '`auto`: The browser makes the decision to introduce line breaks as it seem
    necessary. It bases its decisions on either the presence of hyphenation characters
    or by language-specific information.'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：浏览器根据需要决定引入行中断。它的决定基于连字符字符的存在或语言特定的信息。'
- en: Unicode characters to suggest line break opportunities
  id: totrans-539
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Unicode 字符用于建议行中断机会
- en: 'There are two Unicode characters that we can use to manually set a potential
    line break in the text:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用两个 Unicode 字符来手动在文本中设置潜在的行中断：
- en: '[PRE76]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: This character is called a **hard** hyphen. It's an actual hyphen "-" and it's
    visible in the text. The browser may or may not break the line on that specific
    character.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 这个字符被称为**硬连字符**。它是一个实际的连字符 "-"，并且在文本中是可见的。浏览器可能会也可能不会在该特定字符处断行。
- en: '[PRE77]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: This character is called a **soft** hyphen. Although it is present in the markup,
    it is not rendered in the text. However, the browser *sees* this character and,
    if it can use it to create a line break, it will. To insert a soft hyphen, we
    use `&shy;`.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 这个字符被称为**软连字符**。尽管它在标记中存在，但在文本中不会渲染。然而，浏览器会看到这个字符，如果它可以利用它来创建行中断，它将会这样做。要插入软连字符，我们使用
    `&shy;`。
- en: '**CSS**:'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE78]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: word-break
  id: totrans-547
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: word-break
- en: 'The `word-break` CSS property is used to specify whether line breaks should
    happen within words instead of breaking the lines on a hyphen or a space between
    words, and it looks like this:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '`word-break` CSS 属性用于指定是否应在单词内发生换行而不是在连字符或单词之间的空格处断行，其外观如下：'
- en: '[PRE79]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Description
  id: totrans-550
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `word-break` property is very helpful in situations where a long string,
    such as a URL, is wider than its parent container, thus disrupting the layout
    or bleeding off the side. Applying the `word-break` property makes the URL break
    somewhere along the string.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '`word-break` 属性在长字符串（如 URL）比其父容器宽时非常有用，这会破坏布局或溢出到边缘。应用 `word-break` 属性会使 URL
    在字符串的某个位置断开。'
- en: 'This property supports three keyword values: `normal`, `break-all`, and `keep-all`.'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持三个关键字值：`normal`、`break-all` 和 `keep-all`。
- en: normal
  id: totrans-553
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: normal
- en: This is the default value. Line breaks will happen based on default line breaking
    rules.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。换行将根据默认的换行规则发生。
- en: break-all
  id: totrans-555
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: break-all
- en: This allows line breaks to happen anywhere, including between two letters.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许在任何地方发生换行，包括两个字母之间。
- en: keep-all
  id: totrans-557
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: keep-all
- en: This affects CJK (Chinese, Japanese, and Korean) text only. Here, text words
    are not broken.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅影响 CJK（中文、日文和韩文）文本。在这里，文本单词不会断开。
- en: '**CSS**:'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE80]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: word-spacing
  id: totrans-561
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: word-spacing
- en: 'The `word-spacing` CSS property controls the space between words, and it looks
    like this:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '`word-spacing` CSS 属性控制单词之间的空间，其外观如下：'
- en: '[PRE81]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Description
  id: totrans-564
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports the following values: a `normal` value, a `length` value and a
    `percentage` value.'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持以下值：一个 `normal` 值、一个 `length` 值和一个 `percentage` 值。
- en: normal
  id: totrans-566
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: normal
- en: This is the default value. It's defined by the current font or the browser itself,
    and it resets to the default spacing.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。它由当前字体或浏览器本身定义，并重置为默认间距。
- en: Length value
  id: totrans-568
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 长度值
- en: 'We use one of the following units when we use a length value: `px`, `em`, `in`,
    `mm`, `cm`, `vw`, and so on'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用长度值时，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等
- en: Percentage value
  id: totrans-570
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 百分比值
- en: For a percentage value, we use percentages like `50%`, `85%`, and so on.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 对于百分比值，我们使用像 `50%`、`85%` 这样的百分比。
- en: '**CSS**:'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE82]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: word-wrap
  id: totrans-574
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: word-wrap
- en: 'The `word-wrap` CSS property allows long words to break at an arbitrary point
    if there are no suggested break points in the long word in question, and it looks
    like this:'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '`word-wrap` CSS 属性允许在长单词中没有建议的断点时在任意位置断开，其外观如下：'
- en: '[PRE83]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Description
  id: totrans-577
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports two keyword values: `normal` and `break-word`.'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性支持两个关键字值：`normal` 和 `break-word`。
- en: '`normal`: It makes long words break at normal break points'
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`normal`：它使长单词在正常断点处断开'
- en: '`break-word`: It indicates that otherwise unbreakable words can now break at
    an arbitrary point'
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`break-word`：它表示原本不可断开单词现在可以在任意位置断开'
- en: '**CSS**:'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE84]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: line-height
  id: totrans-583
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: line-height
- en: The `line-height` CSS property defines the distance between lines of text. In
    typography, the line height is called **leading**.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '`line-height` CSS 属性定义了文本行之间的距离。在排版中，行高被称为 **leading**。'
- en: Description
  id: totrans-585
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'It supports the following values: a `normal` value, a `number` value, a `length`
    value, and a `percentage` value.'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持以下值：一个 `normal` 值、一个 `number` 值、一个 `length` 值和一个 `percentage` 值。
- en: '`normal`: This is the default value. The line height is defined by the browser.'
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`normal`：这是默认值。行高由浏览器定义。'
- en: '`Number value`: This is a number without any unit. This is the recommended
    method. The reason a unitless value is recommended is because this value can cascade
    into child elements. Child elements can then scale their line height based on
    their font size.'
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数字值`：这是一个没有单位的数字。这是推荐的方法。推荐无单位值的原因是这个值可以级联到子元素。子元素可以根据它们的字体大小调整行高。'
- en: '`Length value`: We use one of the following units when we use the length value:
    `px`, `em`, `in`, `mm`, `cm`, `vw`, and so on. We can use decimals as well.'
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度值`：当我们使用长度值时，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等。我们也可以使用小数。'
- en: '`Percentage value`: For the percentage value, we use percentages like `50%`,
    `85%`, and so on.'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`百分比值`：对于百分比值，我们使用像 `50%`、`85%` 这样的百分比。'
- en: '**CSS**:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE85]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: orphans
  id: totrans-593
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: orphans
- en: Let's understand the term **orphans** first. Orphans are the lines of a paragraph
    left in the previous page when a block of text is split over two pages. In the
    Web world, this is seen in text that spans several columns, where the first line
    of a paragraph is left on the previous column.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先了解术语 **孤行**。孤行是指当文本块跨越两页时，留在上一页的段落行。在 Web 世界中，这体现在跨越多个列的文本中，其中段落的第一个行留在前一列。
- en: From an editorial standpoint, this is very bad. The recommended treatment of
    orphans is to leave at least three lines on the previous page or column. The more
    lines, the better.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 从编辑的角度来看，这非常不好。推荐的孤儿处理方法是至少在上一页或列上留下三行。行数越多越好。
- en: 'The `orphans` CSS property controls the number of lines left on the previous
    page, and it looks like this:'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '`orphans` CSS 属性控制上一页上剩余的行数，其格式如下：'
- en: '[PRE86]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Description
  id: totrans-598
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: This property is very useful in print stylesheets, but it can also work when
    using CSS columns.
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性在打印样式表中非常有用，但在使用 CSS 列时也可以工作。
- en: It supports a *numeric* value without a unit. This numeric value defines the
    number of lines left on the previous page or column.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持不带单位的数值。这个数值定义了上一页或列上剩余的行数。
- en: '**CSS**:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE87]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: quotes
  id: totrans-603
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引号
- en: 'The `quotes` CSS property controls the types of quotation marks to use, and
    it looks like this:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '`quotes` CSS 属性控制要使用的引号类型，其格式如下：'
- en: '[PRE88]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Description
  id: totrans-606
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Quotation marks are added via the `:before` and `:after` pseudo-elements.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 引号通过 `:before` 和 `:after` 伪元素添加。
- en: 'The simplest way to add quotation marks is to let the browser do it using the
    `content` property and the `open-quote` and `close-quote` values: `content: open-quote;`
    and `content: close-quote;`.'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: '添加引号最简单的方法是让浏览器使用 `content` 属性和 `open-quote` 以及 `close-quote` 值来完成：`content:
    open-quote;` 和 `content: close-quote;`。'
- en: We can also declare the types of quotes we want to use and not let the browser
    decide. We'll see this in the following CSS example.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以声明我们想要使用的引号类型，而不是让浏览器决定。我们将在下面的 CSS 示例中看到这一点。
- en: Quotes always start and end with a double-character symbol, either `" "` or,
    for example, `« »` in French. But, if there's a nested quote, this nested quote
    uses a single-character symbol, either `' '` or, for example, `‹ ›` in French.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 引号始终以双字符符号开始和结束，例如 `" "` 或例如法语中的 `« »`。但是，如果有嵌套引号，这个嵌套引号使用单字符符号，例如 `' '` 或例如法语中的
    `‹ ›`。
- en: 'This property supports two values: `none` and a `[string string]` value.'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持两个值：`none` 和 `[string string]` 值。
- en: none
  id: totrans-612
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: none
- en: No quotation marks are generated when using the `content` property.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `content` 属性时不会生成引号。
- en: '[string string +] value'
  id: totrans-614
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[string string +] 值'
- en: Each `string` represents a pair of quotes. The first `string` represents the
    outer level quotation marks and the second `string` represents the nested level
    quotation marks.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 `string` 代表一对引号。第一个 `string` 代表外层引号，第二个 `string` 代表嵌套层引号。
- en: The `+` sign means that we can add deeper levels of nested quotation marks,
    but it's not really necessary, two levels should work for most cases.
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '`+` 符号表示我们可以添加更深层次的嵌套引号，但实际上并不必要，两层通常适用于大多数情况。'
- en: 'Taking into account these considerations, we can then create the following
    quotation marks with the `quotes` property:'
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些考虑因素，我们可以使用 `quotes` 属性创建以下引号：
- en: '[PRE89]'
  id: totrans-618
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: widows
  id: totrans-619
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: widows
- en: Let's clarify the term **widows** first. Widows are the lines of a paragraph
    that appear on the next page when a block of text is split over two pages. In
    the Web world, this is seen in text that spans several columns, where the last
    line of a paragraph appears on the next column.
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先澄清一下术语 **widows**。孤儿是指当文本块跨越两页时，出现在下一页的段落行。在 Web 世界中，这体现在跨越几个列的文本中，其中段落的最后一行出现在下一列。
- en: From an editorial standpoint, this is very bad. The recommended treatment of
    widows is to leave at least three lines on the next page or column. The more lines,
    the better.
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 从编辑的角度来看，这非常不好。推荐的孤儿处理方法是至少在下一页或列上留下三行。行数越多越好。
- en: 'The `widows` CSS property controls the number of lines that will appear on
    the next page, and it looks like this:'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 的 `widows` 属性控制下一页将出现的行数，其格式如下：
- en: '[PRE90]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Description
  id: totrans-624
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `widows` property is very useful in print stylesheets, but it can also work
    when using CSS columns.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '`widows` 属性在打印样式表中非常有用，但在使用 CSS 列时也可以工作。'
- en: It supports a *numeric* value without a unit. This numeric value defines the
    amount of lines that will appear on the next page or column.
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持不带单位的数值。这个数值定义了下一页或列将出现的行数。
- en: '**CSS**:'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE91]'
  id: totrans-628
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: writing-mode
  id: totrans-629
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: writing-mode
- en: 'The `writing-mode` CSS property defines the direction in which lines of text
    or even block-level elements are laid out, either vertically or horizontally,
    and it looks like this:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: '`writing-mode` CSS 属性定义文本行或甚至块级元素布局的方向，无论是垂直还是水平，其格式如下：'
- en: '[PRE92]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Description
  id: totrans-632
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports three keyword values: `horizontal-tb`, `vertical-rl`,
    and `vertical-lr`.'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持三个关键字值：`horizontal-tb`、`vertical-rl` 和 `vertical-lr`。
- en: horizontal-tb
  id: totrans-634
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: horizontal-tb
- en: This means *horizontal*, *from top to bottom*. The content flows from left to
    right, top to bottom.
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着*水平*，*从上到下*。内容从左到右，从上到下流动。
- en: vertical-rl
  id: totrans-636
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: vertical-rl
- en: This means *vertical*, *from right to left*. The content is turned 90 degrees
    and flows vertically.
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着*垂直*，*从右到左*。内容被旋转90度并垂直流动。
- en: 'To understand this better, think of this: tilt your head to the right shoulder,
    at this point, you will be able to read the text flow from top (which was to the
    right before tilting your head) to bottom (which was to the left before tilting
    your head).'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解，可以这样想：将你的头向右肩倾斜，在这个时候，你将能够从顶部（在你倾斜头部之前在右边）读到文本流动到底部（在你倾斜头部之前在左边）。
- en: vertical-lr
  id: totrans-639
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: vertical-lr
- en: This means *vertical*, *from left to right*. The content is turned 90 degrees
    and flows vertically.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着*垂直*，*从左到右*。内容被旋转90度并垂直流动。
- en: However, unlike `vertical-rl`, when you tilt your head over your right shoulder,
    the content flows from bottom (which was to the left before tilting your head)
    to top (which was to the right before tilting your head), and the text lines are
    inverted.
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与 `vertical-rl` 不同，当你将头靠在右肩上时，内容从底部（在你倾斜头部之前在左边）流向顶部（在你倾斜头部之前在右边），并且文本行是颠倒的。
- en: '**CSS**:'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE93]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: letter-spacing
  id: totrans-644
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: letter-spacing
- en: 'The `letter-spacing` CSS property defines the space between the characters
    in a line of text, and it looks like this:'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: '`letter-spacing` CSS 属性定义了文本行中字符之间的空间，它看起来像这样：'
- en: '[PRE94]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Description
  id: totrans-647
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `letter-spacing` property supports the keyword values: `normal` and `length`.'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '`letter-spacing` 属性支持以下关键字值：`normal` 和 `length`。'
- en: Negative values are valid.
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 负值是有效的。
- en: Tip
  id: totrans-650
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Unless you understand the legibility and design implications, the default letter
    spacing in most fonts is ideal and should rarely be changed.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你理解可读性和设计影响，否则大多数字体中的默认字母间距是理想的，很少需要更改。
- en: '**CSS**:'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**:'
- en: '[PRE95]'
  id: totrans-653
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: white-space
  id: totrans-654
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: white-space
- en: 'The `white-space` CSS property defines how the whitespace inside an element
    is going to be treated, and it looks like this:'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: '`white-space` CSS 属性定义了元素内部空白将被如何处理，它看起来像这样：'
- en: '[PRE96]'
  id: totrans-656
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Description
  id: totrans-657
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This property supports five keyword values: `normal`, `nowrap`, `pre`, `pre-wrap`,
    and `pre-line`.'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性支持五个关键字值：`normal`、`nowrap`、`pre`、`pre-wrap` 和 `pre-line`。
- en: normal
  id: totrans-659
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: normal
- en: This is the default value. If we have two or more spaces together, they will
    collapse into a single space. This is the normal behavior of HTML documents. It
    will wrap the text where necessary.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认值。如果有两个或更多空格连在一起，它们将合并为一个空格。这是 HTML 文档的正常行为。它会在必要时换行文本。
- en: nowrap
  id: totrans-661
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: nowrap
- en: Multiple spaces will collapse into a single space, and the line will never wrap
    except if there's a `<br>` tag in the markup.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 多个空格将合并为一个空格，除非在标记中有 `<br>` 标签，否则行永远不会自动换行。
- en: pre
  id: totrans-663
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: pre
- en: It's the same as the HTML element `<pre>`, which means **preformatted**. This
    value will honor all spaces in the text, but will not wrap it unless there's a
    `<br>` tag in the markup, just like `nowrap` does. This value is great to display
    short chunks of code.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 它与 HTML 元素 `<pre>` 相同，意味着**预格式化**。这个值将尊重文本中的所有空格，但除非在标记中有 `<br>` 标签，否则不会换行，就像
    `nowrap` 一样。这个值非常适合显示短段代码。
- en: pre-wrap
  id: totrans-665
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: pre-wrap
- en: This value honors all the spaces and will wrap the text where necessary. This
    value is great to display long chunks of code.
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 这个值尊重所有空格，并在必要时换行。这个值非常适合显示长段代码。
- en: pre-line
  id: totrans-667
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: pre-line
- en: This value collapses multiple spaces into a single space and will wrap the text
    where necessary.
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 这个值将多个空格合并为一个空格，并在必要时换行。
- en: tab-size
  id: totrans-669
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: tab-size
- en: The `tab-size` CSS property allows us to define the number of spaces the tab
    character can have.
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: '`tab-size` CSS 属性允许我们定义制表符可以有多少个空格。'
- en: As we saw in the prior `white-space` property description, multiple spaces are
    collapsed into a single space by default. Therefore, this property will only work
    on elements that are inside a `<pre>` tag or, have one of the `white-space` properties
    that honor multiple spaces, `pre` and `pre-wrap`.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在之前的 `white-space` 属性描述中看到的，默认情况下多个空格会被合并为一个空格。因此，这个属性只会在 `<pre>` 标签内的元素或具有尊重多个空格的
    `white-space` 属性（`pre` 和 `pre-wrap`）的元素上起作用。
- en: This property is great for displaying code.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性非常适合显示代码。
- en: The default number of spaces the tab character has is 8\. But we, web designers
    and developers, are picky and like either four spaces or sometimes two. With the
    `tab-size` property, we can modify that default value to anything we want.
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 制表符字符的默认空格数是 8。但我们，作为网页设计师和开发者，很挑剔，喜欢四格或有时是两格。使用 `tab-size` 属性，我们可以将其默认值修改为我们想要的任何值。
- en: Description
  id: totrans-674
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `tab-size` property supports two values: A `numeric` value and a `length`
    value.'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: '`tab-size` 属性支持两个值：一个数值和一个长度值。'
- en: '**Numeric value**: It''s just a number without a unit. Negative values are
    not valid.'
  id: totrans-676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数值**：它只是一个没有单位的数字。负值无效。'
- en: '**Length value**: We use one of the following units when we use the length
    value: `px`, `em`, `in`, `mm`, `cm`, `vw`, and so on.'
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**长度值**：当我们使用长度值时，我们使用以下单位之一：`px`、`em`、`in`、`mm`、`cm`、`vw` 等。'
- en: '**CSS**:'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE97]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Paging
  id: totrans-680
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分页
- en: Although we build sites and applications for the Web, sometimes what we make
    is also printed.
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们为网络构建网站和应用，但有时我们制作的内容也会被打印出来。
- en: The following properties will help us make our content more presentable and
    better handled across pages when printed.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 以下属性将帮助我们使我们的内容在打印时更具可读性和跨页处理得更好。
- en: Let's check out these paging properties.
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来检查这些分页属性。
- en: page-break-after
  id: totrans-684
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: page-break-after
- en: 'The `page-break-after` CSS property defines where the page breaks after a specific
    element, and it looks like this:'
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: '`page-break-after` CSS 属性定义了在特定元素之后分页的位置，看起来是这样的：'
- en: '[PRE98]'
  id: totrans-686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Description
  id: totrans-687
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: What this means is that when a new page break is created, a new page will be
    printed.
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着当创建新的分页符时，将打印新的一页。
- en: It works only on block-level elements. Also, since this property is used for
    printing, it's common to see it inside an `@print` media query.
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: 它仅适用于块级元素。此外，由于此属性用于打印，通常在 `@print` 媒体查询内看到它。
- en: 'This property supports five keyword values: `always`, `auto`, `avoid`, `left`,
    and `right`.'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持五个关键字值：`always`、`auto`、`avoid`、`left` 和 `right`。
- en: '`always`: This value will force a page break after the element.'
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`always`：此值将在元素后强制分页。'
- en: '`auto`: This is the default value. It creates automatic page breaks.'
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：这是默认值。它创建自动分页符。'
- en: '`avoid`: This will not allow any page breaks after the element, if possible.'
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`avoid`：如果可能，这将不允许在元素后有任何分页。'
- en: '`left`: This will force one or two page breaks after the element in order to
    make the following page a left-side page.'
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`left`：这将强制在元素后进行一个或两个分页，以便使下一页成为左侧页面。'
- en: '`right`: This will force one or two page breaks after the element in order
    to make the following page a right-side page.'
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`right`：这将强制在元素后进行一个或两个分页，以便使下一页成为右侧页面。'
- en: '**CSS**:'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE99]'
  id: totrans-697
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: page-break-before
  id: totrans-698
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: page-break-before
- en: 'The `page-break-before` CSS property works similar to the `page-break-after`
    CSS property. However, it defines where the page breaks before a specific element,
    and it looks like this:'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '`page-break-before` CSS 属性与 `page-break-after` CSS 属性类似。然而，它定义了在特定元素之前分页的位置，看起来是这样的：'
- en: '[PRE100]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Description
  id: totrans-701
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: When a new page break is created, a new page will be printed.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建新的分页符时，将打印新的一页。
- en: It works only on block-level elements. Also, since this property is used for
    printing, it's common to see it inside an `@print` media query.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 它仅适用于块级元素。此外，由于此属性用于打印，通常在 `@print` 媒体查询内看到它。
- en: 'This property supports the same five keyword values as the `page-break-before`
    property: `always`, `auto`, `avoid`, `left`, and `right`.'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性支持与 `page-break-before` 属性相同的五个关键字值：`always`、`auto`、`avoid`、`left` 和 `right`。
- en: Refer to the `page-break-before` CSS property section for the description of
    each keyword value.
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅 `page-break-before` CSS 属性部分，了解每个关键字值的描述。
- en: '**CSS**:'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE101]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: page-break-inside
  id: totrans-708
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: page-break-inside
- en: 'The `page-break-inside` CSS property also works similar to the `page-break-before`
    and `page-break-after` properties. However, it defines where the page breaks inside
    a specific element, and it looks like this:'
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: '`page-break-inside` CSS 属性与 `page-break-before` 和 `page-break-after` 属性类似。然而，它定义了在特定元素内部分页的位置，看起来是这样的：'
- en: '[PRE102]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Description
  id: totrans-711
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: What this means is that when a new page break is created, a new page will be
    printed.
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着当创建新的分页符时，将打印新的一页。
- en: 'This property supports only two keyword values, though: `auto` and `avoid`.'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个属性只支持两个关键字值，即 `auto` 和 `avoid`。
- en: '`auto`: This is the default value. It creates automatic page breaks.'
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto`：这是默认值。它创建自动分页符。'
- en: '`avoid`: This will not allow any page breaks inside the element, if possible.'
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`avoid`：如果可能，这将不允许在元素内部有任何分页。'
- en: '**CSS**:'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: '**CSS**：'
- en: '[PRE103]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
