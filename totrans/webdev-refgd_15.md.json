["```js\nangular.module(moduleName, [dependencies], [configFunction])\nangular.module(moduleName)\n```", "```js\nmodule.config(configFunction)\n```", "```js\n    firstModule.config(function ($provide) {\n      $provide.provider('firstProvider', function () {\n        this.$get = function () {\n          return function () { alert('First!'); }\n        }\n      });\n    });\n    ```", "```js\n    firstModule.provider('first', function () {\n      this.$get = function () {\n        return function () { alert('First!'); }\n      }\n    });\n    firstModule.config(function (firstProvider) {\n      console.log(firstProvider);\n    });\n    ```", "```js\nmodule.run(runFunction)\n```", "```js\nfirstModule.run(function ($rootScope) {\n  $rootScope.test = 'test';\n});\n```", "```js\n<ng-view [onload=''] [autoscroll='']/>\n<element ng-view [onload=''] [autoscroll='']/>\n```", "```js\n$routeProvider.when(path, route)\n$routeProvider.otherwise(route)\n```", "```js\n<body ng-app=\"firstModule\">\n  <div ng-view></div>\n  <a href=\"#/main/1\">Main</a>\n\n  <script type=\"text/ng-template\" id=\"main.html\">\n    <pre>$routeParams = {{$routeParams}}</pre>\n    <pre>$route = {{$route}}</pre>\n  </script>\n\n</body>\n```", "```js\nvar firstModule = angular.module('firstModule', ['ngRoute']);\n\nfirstModule.config(function ($routeProvider) {\n  $routeProvider.when('/main/:id', {\n    controller: 'MainController',\n    templateUrl: 'main.html'\n  });\n});\n\nfirstModule.controller('MainController', function ($scope, $route, $routeParams) {\n  $scope.$route = $route;\n  $scope.$routeParams = $routeParams;\n});\n```", "```js\n    firstModule.controller('DIController', function ($scope, customService) {\n      //$scope and customService are available here\n      console.log($scope);\n      console.log(customService);\n    });\n    ```", "```js\n    firstModule.controller('DIController', ['$scope', 'customService', function (newScope, custom) {\n      // newScope and custom are available here\n      console.log(newScope);\n      console.log(custom);\n    }]);\n    ```", "```js\nangular.injector(modules)\n```", "```js\nvar injector = angular.injector(['ng']);\nvar injectTest = function ($http) { console.log($http); };\ninjector.invoke(injectTest);\n```", "```js\n    var injector = angular.element(document.body).injector();\n    ```", "```js\n    firstModule.config(function ($routeProvider, $injector) {\n      console.log($injector);\n    });\n    ```", "```js\nfirstModule.controller('SimpleController', ['$scope', function ($scope) {\n  $scope.hey = \"HEY!\";\n  console.log($scope);\n}]);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  {{ hey }}\n</div>\n```", "```js\n<element ng-controller />\n```", "```js\n<div ng-controller=\"SimpleController as simple\">\n  {{ simple.hey }}\n</div>\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', function ($scope) {\n  $scope.hey = \"HEY!\";\n  $scope.changeHey = function () {\n    $scope.hey = $scope.hey === 'HEY!' ? 'OK!' : 'HEY!';\n  };\n}]);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  {{ hey }}\n  <input type=\"text\" ng-model=\"hey\"/>\n  <button ng-click=\"changeHey()\">{{hey}}</button>\n</div>\n```", "```js\nscope.$digest()\n```", "```js\nscope.$watch(watch, listener)\n```", "```js\n$scope.$watch('hey', function (newVal, oldVal, scope) {\n  alert('Hey was changed from ' + oldVal + ' to ' + newVal);\n});\n\n$scope.$watch(function (scope) {\n  return scope.hey.length >= 3;\n}, function (newVal, oldVal, scope) {\n  console.log('Hey listener');\n});\n```", "```js\nscope.$apply(func)\n```", "```js\nsetTimeout(function () {\n  $scope.$apply(function () { $scope.hey = 'Updated from setTimeout'; });\n}, 2000);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  {{ service }}\n</div>\n```", "```js\nmodule.factory(name, getFunction)\n```", "```js\nfirstModule.factory('firstFactory', ['$http', function ($http) {\n  var serviceName = 'firstFactory';\n  return {\n    getName: function(){return serviceName;}\n  };\n}]);\n```", "```js\nmodule.service(name, constructor)\n```", "```js\nfirstModule.service('firstService', ['$http', function ($http) {\n  return function (name) {\n    var serviceName = name;\n\n    this.getName = function () {\n      return serviceName;\n    };\n  };\n}]);\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', 'firstService', function ($scope, firstService) {\n  var first = new firstService('First Service Name');\n  var second = new firstService('Second Service Name');\n  $scope.service = second.getName();\n}]);\n```", "```js\nmodule.provider(name, provider)\n```", "```js\nfirstModule.provider('first', function () {\n  var serviceName;\n\n  return {\n    configSet: function (name) {\n      serviceName = name;\n    },\n    $get: function () {\n      return {\n        getName: function () { return serviceName; }\n      };\n    }\n  }\n});\n```", "```js\nfirstModule.config(['firstProvider', function (firstProvider) {\n  firstProvider.configSet('firstProvider123');\n}]);\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', 'first', function ($scope, firstProvider) { \n  $scope.test = firstProvider.getName();\n}]);\n```", "```js\nmodule.value(name, value)\n```", "```js\nfirstModule.value('appTitle', 'First App');\n```", "```js\nmodule.constant(name, value)\n```", "```js\nfirstModule.constant('appTitle', 'First App');\n```", "```js\n$http(config)\n```", "```js\n$http.get(url, config)\n```", "```js\nfirstModule.factory('httpService', ['$http', function ($http) {\n  return {\n    test: function () { return $http.get('test', {params: 'test'}); }\n  }\n}]);\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', 'httpService', function ($scope, httpService) {\n  httpService.test().success(function (data, status) {\n    console.log(data);\n  })\n  .error(function (data, status) { console.log('An error occured');});\n}]);\n```", "```js\n$http.post(url, config)\n```", "```js\nfirstModule.factory('httpService', ['$http', function ($http) {\n  return {\n    test: function () { return $http.post('http://localhost/post', { data: 'HEY' }); }\n  }\n}]);\n```", "```js\n$q.defer()\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', '$q', function ($scope, $q) {\n  function qTest(number) {\n    console.log($q);\n    var defer = $q.defer();\n\n    if (number % 2 === 0) {\n      defer.resolve(number);\n    } else {\n      defer.reject(number);\n    }\n    return defer.promise;\n  };\n\n  qTest(2)\n    .then(function (n) { console.log('succeeded!'); }, function (n) { console.log('failed!'); });\n\n  qTest(3)\n    .then(function (n) { console.log('succeeded!'); }, function (n) { console.log('failed!'); });\n\n}]);\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    template: 'This is the test directive. Test: {{test}}'\n  };\n});\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      test: '@scopeTest'\n    },\n    template: 'This is the test directive. Test: {{test}}'\n  };\n});\n```", "```js\n<div first-test scope-test=\"Scope Test Value\"></div>\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      test: '='\n    },\n    template: 'This is the test directive. Test: {{test}}'\n  };\n});\n```", "```js\n<div first-test test=\"fromControllerScope\"></div>\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      testAction: '&'\n    },\n    template: '<button ng-click=\"testAction()\">Action!</button>'\n  };\n});\n```", "```js\n<div first-test test-action=\"functionFromController()\"></div>\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      testAction: '&'\n    },\n    template: '<button>Action!</button>',\n    link: function ($scope, element) {\n      element.on('click', function (e) {\n        $scope.$apply(function () {\n          $scope.testAction({ $e: e, $fromDirective: 'From Directive' });\n        });\n      });\n    }\n  };\n});\n```", "```js\n<div first-test test-action=\"functionFromController($e, $fromDirective)\"></div>\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      testAction: '&'\n    },\n    template: '<button>Add a DIV!</button>',\n    link: function ($scope, element) {\n      element.on('click', function (e) {\n        element.append('<div>I was added!</div>');\n      });\n    }\n  };\n});\n```", "```js\nfirstModule.directive('firstTest', function () {\n  return {\n    restrict: 'AE',\n    scope: {\n      testAction: '&'\n    },\n    template: '<button>Add a DIV!</button>',\n    link: function ($scope, element) {\n      element.on('click', function (e) {\n        console.log(e);\n      });\n    }\n  };\n});\n```", "```js\n<element ng-app></element>\n```", "```js\n<input ng-model [ng-required ng-minlength ng-maxlength ng-pattern ng-change ng-trim]></input>\n```", "```js\n<input ng-model=\"test\" type=\"text\"/>\n  {{test}}\n```", "```js\n<input ng-disabled></input>\n```", "```js\n<input ng-disabled=\"true\" type=\"text\"/>\n```", "```js\n<input ng-checked></input>\n```", "```js\n<input ng-checked=\"true\" type=\"checkbox\"/>\n```", "```js\n<element ng-class></element>\n```", "```js\n.double { font-size: 2em; }\n```", "```js\n<div ng-class=\"classString\">Text</div>\n<input type=\"text\" ng-model=\"classString\" />\n```", "```js\n<div ng-class=\"{double: classString}\">Text</div>\n<input type=\"text\" ng-model=\"classString\" />\n```", "```js\n<element ng-class-odd></element>\n<element ng-class-even></element>\n```", "```js\n.odd { font-size: 2em; }\n.even { font-size: .5em; }\n```", "```js\n<ul ng-init=\"numbers=[1,2,3,4]\">\n  <li ng-repeat=\"number in numbers\">\n  <span ng-class-even=\"'even'\" ng-class-odd=\"'odd'\">{{number}}</span>\n  </li>\n</ul>\n```", "```js\n<element ng-repeat></element>\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', function ($scope) { \n  $scope.items = [{id: 1, name: 'First' }, {id: 2, name: 'Second'}];\n}]);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  <ul>\n    <li ng-repeat=\"item in items track by item.id\">\n      ID: {{item.id}}\n      Name: {{item.name}}\n    </li>\n  </ul>\n</div>\n```", "```js\n<element ng-show></element>\n<element ng-hide></element>\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', function ($scope) {\n  $scope.count = 0;\n  $scope.increase = function () { $scope.count++; };\n}]);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  <div ng-show=\"count == 0\">Count is zero: {{count}}</div>\n  <div ng-show=\"count > 0\">Count is greater than zero: {{count}}</div>\n  <button ng-click=\"increase()\">Increase Count</button>\n</div>\n```", "```js\n<element ng-switch>\n<element ng-switch-when></element>\n<element ng-switch-default></element>\n</element>\n```", "```js\nfirstModule.controller('SimpleController', ['$scope', function ($scope) {\n  $scope.count = 0;\n  $scope.increase = function () { $scope.count++; };\n}]);\n```", "```js\n<div ng-controller=\"SimpleController\">\n  <div ng-switch=\"count % 2\">\n    <div ng-switch-when=\"0\">Count is Even: {{count}}</div>\n    <div ng-switch-when=\"1\">Count is Odd: {{count}}</div>\n  </div>\n  <button ng-click=\"increase()\">Increase Count</button>\n</div>\n```", "```js\n<element ng-click></element>\n```", "```js\n$scope.counter = 0;\n$scope.functionFromController = function (e) { $scope.counter++; };\n```", "```js\n<button ng-click=\"functionFromController($event)\">Click Me!</button>\n{{counter}}\n```", "```js\n<element ng-dblclick></element>\n```", "```js\n$scope.counter = 0;\n$scope.functionFromController = function (e) { $scope.counter++; };\n```", "```js\n<div ng-dblclick=\"functionFromController($event)\">Double Click Me!</div>\n{{counter}}\n```", "```js\n<element ng-mousedown></element>\n<element ng-mouseup></element>\n<element ng-mouseover></element>\n<element ng-mouseenter></element>\n<element ng-mouseleave></element>\n```", "```js\n$scope.counter = 0;\n$scope.functionFromController = function (e) { $scope.counter++; };\n```", "```js\n<div ng-mousedown=\"functionFromController($event)\" ng-mouseup=\"functionFromController($event)\"\n  ng-mouseenter=\"functionFromController($event)\" ng-mouseleave=\"functionFromController($event)\"\n  ng-mouseover=\"functionFromController($event)\">Mouse Over Me!</div>\n{{counter}}\n```", "```js\n<element ng-mousemove</element>\n```", "```js\n$scope.x = 0;\n$scope.y = 0;\n$scope.functionFromController = function (e) {\n  $scope.x = e.pageX;\n  $scope.y = e.pageY;\n};\n```", "```js\n<div ng-mousemove=\"functionFromController($event)\">Move the mouse to see the x and y coordinates!</div>\n{{x}}\n{{y}}\n```", "```js\n<element ng-keydown></element>\n<element ng-keyup></element>\n<element ng-keypress></element>\n```", "```js\n$scope.keyCode = 0;\n$scope.functionFromController = function (e) {\n  $scope.keyCode = e.keyCode;\n};\n```", "```js\n<input type=\"text\" ng-keydown=\"functionFromController($event)\"/>\nWhich key: {{keyCode}}\n```", "```js\n<form ng-submit></form>\n```", "```js\n<form ng-submit=\"functionFromController($event)\"><input type=\"submit\" id=\"submit\" value=\"Submit\" /></form>\n```", "```js\n$scope.functionFromController = function (e) {\n  console.log(e);\n};\n```", "```js\n<input, select, textarea, a, window ng-focus></input>\n<input, select, textarea, a, window ng-blurs></input>\n```", "```js\n<input type=\"text\" ng-focus=\"functionFromController($event)\"/>\n```", "```js\n$scope.functionFromController = function (e) {\n  console.log(e);\n};\n```", "```js\n<element ng-copy></element>\n<element ng-cut></element>\n<element ng-paste></element>\n```", "```js\n<input type=\"text\" ng-cut=\"functionFromController($event)\" ng-copy=\"functionFromController($event)\" ng-paste=\"functionFromController($event)\" />\n```", "```js\n$scope.functionFromController = function (e) {\n  console.log(e);\n};\n```", "```js\nangular.extend(srcObject, destObject)\n```", "```js\nvar first = { first: '1' };\nvar second = { second: '2' };\nvar extended = angular.extend(first, second);\n//extended will be {first:'1', second:'2'}\n```", "```js\nangular.noop()\n```", "```js\nfunction test(doSomething) {\n  var callback = cb || angular.noop;\n  callback('output');\n}\n```", "```js\nangular.isUndefined(object)\n```", "```js\nangular.copy(srcObject, [destObject])\n```", "```js\nangular.bind(self, function, [args..])\n```", "```js\nfunction addAndMultiply(toAdd, toMultiply) {\n  return (this + toAdd) * toMultiply;\n}\n```", "```js\nvar newFunc = angular.bind(4, addAndMultiply, 1);\n```", "```js\nnewFunc(2);\n```", "```js\n<form name=\"form\">\n  First Name: <input type=\"text\" name=\"firstname\" ng-model=\"data.firstName\" />\n  Last Name: <input type=\"text\" name=\"lastName\" ng-model=\"data.lastName\" />\n</form>\n{{data.firstName}} {{data.lastName}}\n```", "```js\n <form name=\"form\">\n  First Name: <input type=\"text\" name=\"firstname\" ng-minlength=\"10\" ng-model=\"data.firstName\" />\n  Last Name: <input type=\"text\" name=\"lastName\" ng-model=\"data.lastName\" />\n</form>\n{{data.firstName}} {{data.lastName}}\n```", "```js\n<form name=\"form\">\n  First Name: <input type=\"text\" name=\"firstname\" ng-minlength=\"10\" ng-model=\"data.firstName\" />\n  <div ng-show=\"form.firstname.$invalid\">First name must be 10 characters!</div>\n  Last Name: <input type=\"text\" name=\"lastName\" ng-model=\"data.lastName\" />\n</form>\n{{data.firstName}} {{data.lastName}}\n```", "```js\nfirstModule.directive('notJosh', function () {\n  return {\n    require: 'ngModel',\n    link: function (scope, element, attrs, ctrl) {\n      ctrl.$parsers.unshift(function (viewValue) {\n        if (viewValue.toUpperCase() === 'JOSH') {\n          ctrl.$setValidity('notJosh', false);\n          return undefined\n        }\n        else {\n          ctrl.$setValidity('notJosh', true);\n          return viewValue;\n        }\n      });\n    }\n  }\n});\n```", "```js\n install karma-jasmine\n```", "```js\nmodule(moduleName)\n```", "```js\ninject(toBeInjected)\n```", "```js\n$httpBackend.when(requestType, url, [requestParameters], [headers])\n$httpBackend.expect(requestType, url, [requestParameters], [headers])\n$httpBackend.respond(response)\n```", "```js\nvar firstModule = angular.module('firstModule', ['ngMock']);\nfirstModule.controller('SimpleController', ['$scope', function ($scope) {\n  $scope.test = 'HEY!';\n}]);\n```", "```js\ndescribe('SimpleController', function () {\n  var scope = {};\n  var simpleCtrl;\n  beforeEach(module('firstModule'));\n\n  it(\"should have a scope variable of test\", inject(function ($controller) {\n    expect(scope.test).toBe(undefined);\n    simpleCtrl = $controller('SimpleController', { $scope: scope });\n    expect(scope.test).toBe('HEY!');\n  }));\n});\n```", "```js\nfirstModule.directive('simpleDirective', function () {\n  return {\n    restrict: 'E',\n    scope:{\n      test: '@'\n    },\n    replace: true,\n    template: '<div>This is an example {{test}}.</div>'\n  };\n});\n```", "```js\ndescribe('simpleDirective', function () {\n  var $compile, $rootScope;\n  beforeEach(module('firstModule'));\n  beforeEach(inject(function (_$compile_, _$rootScope_) {\n    $compile = _$compile_;\n    $rootScope = _$rootScope_;\n  }));\n\n  it('should have our compiled text', function () {\n    var element = $compile('<simple-directive test=\"directive\"></simple-directive>')($rootScope);\n    $rootScope.$digest();\n    expect(element.html()).toContain('This is an example directive.');\n  });\n\n});\n```", "```js\nfirstModule.factory('firstFactory', ['$http', function ($http) {\n  return {\n    addOne: function () {\n      return $http.get('/test', {})\n      .then(function (res) {\n        return res.data.value + 1;\n      });\n    }\n  }\n}]);\n```", "```js\ndescribe('firstFactory', function () {\n  var $httpBackend, testingFactory, handler;\n\n  beforeEach(module('firstModule'));\n  beforeEach(inject(function (_$httpBackend_, firstFactory) {\n    $httpBackend = _$httpBackend_;\n    handler = $httpBackend.expect('GET', '/test')\n    .respond({ value: 1 });\n    testingFactory = firstFactory;\n  }));\n\n  it('should run the GET request and add one', function () {\n    testingFactory.addOne()\n    .then(function (data) {\n      expect(data).toBe(2);\n    });\n    $httpBackend.flush();\n\n  });\n});\n```"]