["```js\nvar url = \"https://ajax.googleapis.com/ajax/services/search /web?v=1.0&q=PACKT\";\ntry{\n    var resp = UrlFetchApp.fetch(url);\n    if(resp.getResponseCode() == 200){\n      var text = resp.getContentText();\n      var json = JSON.parse(text);\n      Logger.log(json);\n    }\n  } catch(e){\n    Logger.log(e);\n  };\n```", "```js\n{\n  responseDetails=null,\n  responseData={\n    cursor={\n      moreResultsUrl=http://www.google.com/search?oe=utf8&ie=utf8\n        &source=uds&start=0&hl=en&q=PACKT,\n      resultCount=800,000,\n      pages=[{start=0, label=1}, {start=4, label=2}, {start=8, \n        label=3}, {start=12, label=4}, {start=16, label=5}, \n        {start=20, label=6}, {start=24, label=7}, {start=28, \n        label=8}],\n      searchResultTime=0.29,\n      currentPageIndex=0,\n      estimatedResultCount=800000\n    },\n    results=[\n      {\n        visibleUrl=www.packtpub.com,\n        cacheUrl=http://www.google.com/search?q=cache:rbL6l6pFt8…,\n        GsearchResultClass=GwebSearch,\n        title=<b>Packt</b> Publishing | Technology Books, eBook…,\n        titleNoFormatting=Packt Publishing | Technology Books…,\n        url=https://www.packtpub.com/,\n        content=<b>Packt</b> Publishing is the leading UK provid…,\n        unescapedUrl=https://www.packtpub.com/\n      }, {\n        visibleUrl=www.packtpub.com,\n        cacheUrl=http://www.google.com/search?q=cache:wo2TeIpsCG…,\n        GsearchResultClass=GwebSearch,\n        title=Free Learning | <b>PACKT</b> Books - <b>Packt</b> …,\n        titleNoFormatting=Free Learning | PACKT Books - Packt Pu…,\n        url=https://www.packtpub.com/packt/offers/free-learning,\n        content=A new free programming tutorial book every day...,\n      }, {\n        visibleUrl=www.packtpub.com,\n        cacheUrl=http://www.google.com/search?q=cache:D7qMTpx1Nu…,\n        GsearchResultClass=GwebSearch,\n        title=All Books and eBooks | <b>PACKT</b> Books - <b>Pac…,\n        titleNoFormatting=All Books and eBooks | PACKT Books – P…,\n        url=https://www.packtpub.com/all,\n        content=Packt Publishing provides technology eBooks, boo…,\n        unescapedUrl=https://www.packtpub.com/all\n      }\n    ]\n  },\n  responseStatus=200\n }\n```", "```js\nfunction searchGoogle(){\n\n  var ss = SpreadsheetApp.getActiveSpreadsheet();\n  var SheetGoogle = ss.getSheetByName(\"Google\");\n  var kwd = SheetGoogle.getRange(\"B2\").getValue();\n\n  // Encode URI components if any in kwd\n  kwd = encodeURIComponent(kwd);\n\n  // Replace space with '+'\n  kwd = kwd.replace(/%20/gi, \"+\");\n\n  // Remove '?' marks\n  kwd = kwd.replace(/%3F/gi, \"\");\n\n  var url = \"https://ajax.googleapis.com/ajax/services/ search/web?v=3.0&q=\" + kwd;\n\n  try{\n    var resp = UrlFetchApp.fetch(url).getContentText();\n    var json = JSON.parse(resp);\n    var result = json.responseData.results;\n  } catch(e){\n    Logger.log(e);\n  };\n\n  // We require a 2-dimensional array to store data in sheet\n  var output = [];\n  var visibleUrl,title,url,content;\n\n  for(var i=0; i<result.length; i++){\n    visibleUrl = result[i].visibleUrl;\n    title = result[i].title;\n    url = result[i].url;\n    content = result[i].content;\n\n    output.push([visibleUrl,title,url,content]);\n  };\n\n  /*\n   * output.length for number of rows and output[0].length for\n   * number of columns\n   *\n   */\n  SheetGoogle.getRange(5, 1, output.length, output[0].length)\n    .setValues(output);\n}\n```", "```js\nfunction getStockQuote1(){\n  var url = \"http://finance.google.com/finance/info?q=NASDAQ:GOOG\";\n\n  var resp = UrlFetchApp.fetch(url).getContentText();\n  Logger.log(resp);\n}\n```", "```js\n // [\n{\n\"id\": \"304466804484872\"\n,\"t\" : \"GOOG\"\n,\"e\" : \"NASDAQ\"\n,\"l\" : \"717.00\"\n,\"l_fix\" : \"717.00\"\n,\"l_cur\" : \"717.00\"\n,\"s\": \"0\"\n,\"ltt\":\"4:00PM EST\"\n,\"lt\" : \"Nov 13, 4:00PM EST\"\n,\"lt_dts\" : \"2015-11-13T16:00:01Z\"\n,\"c\" : \"-14.23\"\n,\"c_fix\" : \"-14.23\"\n,\"cp\" : \"-1.95\"\n,\"cp_fix\" : \"-1.95\"\n,\"ccol\" : \"chr\"\n,\"pcls_fix\" : \"731.23\"\n}\n]\n```", "```js\nfunction getStockQuote2(){\n  var url = \"http://finance.google.com/finance/info?q=NASDAQ:GOOG\";\n\n  var resp = UrlFetchApp.fetch(url).getContentText().substr(4);\n  var json = JSON.parse(resp);\n  Logger.log(json[0].l);\n}\n```", "```js\nfunction getStockQuotes(){\n  var SheetQuotes = SpreadsheetApp.getActiveSpreadsheet()\n                    .getSheetByName(\"Quotes\");\n\n  var data = SheetQuotes.getDataRange().getValues();\n\n  // Remove the header from data.\n  var header = data.shift();\n\n  // Extracts all symbols from sheet data.\n  var aScrips = [];\n  for(var i in data) aScrips.push(data[i][0]);\n\n  // Join all scrip names with comma.\n  var sScrips = aScrips.join(\",\");\n\n  // Fetch data with scrip names as query.\n  var url = \"http://finance.google.com/finance/info?q=NASDAQ:\"+sScrips;\n\n  // Send the request to the url\n  try{\n    var resp = UrlFetchApp.fetch(url).getContentText().substr(4);\n    var json = JSON.parse(resp);\n  } catch (e) {\n    Logger.log(e.message);\n    return;\n  }\n\n  // We require a 2-dimensional array to store data in sheet.\n  var output = [];\n\n  // Traverse through all JSON objects.\n  for(var i in json){\n    var q = json[i];\n\n    // Symbol, price and traded time.\n    output.push([q.t,q.l,q.ltt]);\n  };\n\n  // Restore the header again.\n  output.unshift(header);\n\n  // Save the output in sheet.\n  SheetQuotes.getDataRange().setValues(output);\n}\n```", "```js\nfunction getBitCoinPrice(){\n  // BitStamp api url\n  var url = \"https://www.bitstamp.net/api/ticker/\";\n\n  var resp = UrlFetchApp.fetch(url);\n\n  if(resp.getResponseCode() == 200){\n    var json = JSON.parse(resp);\n    Logger.log(json);\n  }\n}\n```", "```js\n{volume=6209.19457553, high=422.00, last=420.39, low=414.00, vwap=419.15, ask=421.48, bid=420.23, open=421.15, timestamp=1455894447}\n```", "```js\n/**\n *  Log bitcoin price ticks in sheet\n *\n */\nfunction getBitCoinData(){\n  var ss = SpreadsheetApp.getActiveSpreadsheet();\n  var SheetBitCoin = ss.getSheetByName(\"Bitcoin\");\n\n  // Header labels at the top row of the sheet.\n  var header = [\n      \"Timestamp\",\n      \"High\",\n      \"Low\",\n      \"Volume\",\n      \"Bid\",\n      \"Ask\"\n    ];\n\n  // Insert headers at the top row of the Bitcoin sheet.\n  SheetBitCoin.getRange(1,1,1,6).setValues([header]);\n  // setValues accept 2-dim array\n\n  // BitStamp api url\n  var url = \"https://www.bitstamp.net/api/ticker/\";\n\n  try{\n    var resp = UrlFetchApp.fetch(url);\n\n    // Proceed if no errors returned.\n    if(resp.getResponseCode() == 200){\n\n      var json = JSON.parse(resp);\n\n      var output = [];\n\n      /*\n       * Bitstamp returns timestamp in seconds\n       * (elapsed since epoch), but JavaScript Date accepts in\n       * milliseconds, so multiply by 1000.\n       *\n       */\n      output.push( new Date(json.timestamp *= 1000) );\n\n      // last 24 hours high.\n      output.push(json.high);\n\n      // last 24 hours low.\n      output.push(json.low);\n\n      // last 24 hours volume.\n      output.push(json.volume);\n\n      // highest buy order.\n      output.push(json.bid);\n\n      // lowest sell order.\n      output.push(json.ask);\n\n      // Append output to Bitcoin sheet.\n      SheetBitCoin.appendRow(output);\n    }\n\n  } catch(e){\n    // Log errors to examine and debug it later.\n    Logger.log(e);\n\n    throw e;\n  }\n};\n```", "```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\">\n  <channel>\n    <title>Title of the channel</title>\n    <description>A brief description of the channel</description>\n    <language>en-US</language>\n    <item>\n      <title>Item title</title>\n      <link>Link to the item</link>\n      <pubDate>Fri, 30 Oct 2015 19:41:00 +0000</pubDate>\n      <creator><![CDATA[Author Name]]></creator>\n      <category><![CDATA[NEWS]]></category>\n      <description><![CDATA[encoded description…]]></description>\n    </item>\n    <item> … </item>\n    <item> … </item>\n    <item> … </item>\n  </channel>\n</rss>\n```", "```js\nfunction readRssFeedContents(){\n  var SheetData = SpreadsheetApp.getActiveSpreadsheet()\n                    .getSheets()[0];\n\n  var title, posturl, author, row, output = [];\n\n  // Prefix namespace.\n  var dc = XmlService.getNamespace('http://purl.org/dc/elements/1.1/');\n\n  // Fetch feed document.\n  var xml = UrlFetchApp.fetch(\"http://siliconangle.com/feed/\")\n            .getContentText();\n\n  // Parse the response text from the URL.\n  var doc = XmlService.parse(xml);\n\n  // Get child elements from the root element.\n  var items = doc.getRootElement().getChild('channel')\n              .getChildren('item');\n\n  // Process the required data.\n  for(var i=0; i<items.length; i++){\n    title = items[i].getChild('title').getText();\n    posturl = items[i].getChild('link').getText();\n    author = items[i].getChild('creator', dc).getText();\n    row = [title].concat(posturl, author);\n\n    output.push(row);\n  };\n\n  // Write new data to sheet\n  SheetData.getRange(2, 1, output.length, output[0].length)\n    .setValues(output);\n}\n```", "```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed >\n  <title>Atom Feed</title>\n  <subtitle>Subtitle of the feed</subtitle>\n  <link href=\"http://example.com/\" />\n  <updated>2015-11-13T06:30:02Z</updated>\n  <entry>\n    <title>Title of the item</title>\n    <link href=\"http://example.com\" />\n    <updated>2015-11-13T06:30:22Z</updated>\n    <summary>Summary text of the item</summary>\n    <author>\n      <name>Author name</name>\n      <email>example@example.com</email>\n    </author>\n  </entry>\n  <entry>...</entry>\n  <entry>...</entry>\n  <entry>...</entry>\n</feed>\n```", "```js\nfunction readAtomFeedContents(){\n  // SheetData refers left most sheet.\n  var SheetData = SpreadsheetApp.getActiveSpreadsheet()\n                  .getSheets()[0];\n\n  // Set column titles.\n  var title, description, output = [[\"Trends\", \"Related Searches\"]];\n\n  // Fetch data from the feed url.\n  var xml = UrlFetchApp.fetch(\"http://www.google.com/trends/ hottrends/atom/feed\").getContentText();\n\n  // Parse the result as xml content.\n  var doc = XmlService.parse(xml);\n\n  // Get item elements from the root element.\n  var items = doc.getRootElement().getChild('channel')\n              .getChildren('item');\n\n  // Clear existing sheet data and sets new values.\n  SheetData.clearContents();\n\n  // Store new data.\n  SheetData.getRange(1, 1, 1,output[0].length).setValues(output);\n\n  /*\n   * Dig into 'item' element and parse all the required data.\n   * Get other related search terms.\n   *\n   */\n  for(var i=0; i<items.length; i++){\n    title = items[i].getChild('title').getText();\n    description = items[i].getChild('description').getText();\n    output = [title].concat(description.split(','));\n\n    // Sets output data in sheet.\n    SheetData.getRange(i+2, 1, 1, output.length)\n      .setValues([output]);\n  }\n};\n```", "```js\nvar params = {\n  method: \"GET\",\n  headers: headers\n}\n```", "```js\nvar headers = {\n  // Basic authentication\n  Authorization: \"Basic \"\n    + Utilities.base64Encode(\"username:password\");\n}\n```", "```js\nfunction translateToFrench(){\n  var text = \"Google apps script for beginners\";\n  var sourceLanguage = \"en\";\n  var targetLanguage = \"fr\";\n  var french = LanguageApp\n    .translate(text, sourceLanguage, targetLanguage);\n\n  Logger.log(french);\n}\n```", "```js\n/*\n * Replace with the id/key of the target document in which the\n * translated text to be saved.\n *\n */\nvar targetDocumentId = \"Replace with target document id\";\n```", "```js\n/**\n * Creates a menu entry in the Google Docs UI when the document\n * is opened.\n *\n */\nfunction onOpen(e) {\n  DocumentApp.getUi().createAddonMenu()\n      .addItem('Start', 'showSidebar')\n      .addToUi();\n}\n```", "```js\n/**\n * Opens a sidebar in the document containing the add-on's user\n * interface.\n *\n */\nfunction showSidebar() {\n  var ui = HtmlService.createTemplateFromFile('Sidebar')\n           .evaluate()\n           .setTitle('Translate');\n\n  DocumentApp.getUi().showSidebar(ui);\n}\n```", "```js\n/**\n * Gets the stored user preferences for the destination language,\n * if exist.\n *\n */\nfunction getPreferences() {\n  var userProperties = PropertiesService.getUserProperties();\n\n  var languagePrefs = {\n    destLang: userProperties.getProperty('destLang')\n  };\n\n  return languagePrefs;\n};\n```", "```js\nfunction runTranslation(dest, savePrefs) {\n  if (savePrefs == true) {\n    var userProperties = PropertiesService.getUserProperties();\n    userProperties.setProperty('originLang', 'en');\n    userProperties.setProperty('destLang', dest);\n  }\n\n  var srcFile = DocumentApp.getActiveDocument();\n  var tgtFile = DocumentApp.openById(targetDocumentId);\n\n  var srcBody = srcFile.getBody();\n  var tgtBody = tgtFile.getBody();\n\n  tgtBody.appendParagraph(\"\");\n  tgtBody.clear();\n\n  var item = srcBody.getChild(0);\n\n  while(item){\n    var type = item.getType();\n\n    if(type == \"LIST_ITEM\"){\n      var attrib = item.getAttributes();  \nvar srcText = item.getText(); \nvar transText = LanguageApp.translate(srcText, \"en\", dest); \ntgtBody.appendParagraph(transText).setAttributes(attrib);\n\n    item = item.getNextSibling();\n  };\n\n  tgtBody.getChild(0).removeFromParent();\n};\n```", "```js\nfunction include(filename) {\n  return HtmlService.createHtmlOutputFromFile(filename)\n    .getContent();\n}\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <base target=\"_top\">\n    <script src=\"img/webcomponents.js\"></script>\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/bower_components /polymer/polymer.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/font-roboto/roboto.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-input/paper-input.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-button/paper-button.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-checkbox/paper-checkbox.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-radio-group/paper-radio-group.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-radio-button/paper-radio-button.html\">\n\n    <link rel=\"import\" href=\"//polymerstaticfiles.appspot.com/ bower_components/paper-input/paper-input-decorator.html\">\n\n    <!-- Insert CSS code -->\n    <?!= include('Sidebar.css.html'); ?>\n  </head>\n\n  <body>\n    <div class=\"sidebar\">\n      <h4>Translate into</h4>\n      <paper-radio-group id=\"dest\">\n        <paper-radio-button name=\"en\" id=\"radio-dest-en\" label=\"English\"></paper-radio-button>\n\n        <paper-radio-button name=\"fr\" id=\"radio-dest-fr\" label=\"French\"></paper-radio-button>\n\n        <paper-radio-button name=\"de\" id=\"radio-dest-de\" label=\"German\"></paper-radio-button>\n\n        <paper-radio-button name=\"ja\" id=\"radio-dest-ja\" label=\"Japanese\"></paper-radio-button>\n\n        <paper-radio-button name=\"es\" id=\"radio-dest-es\" label=\"Spanish\"></paper-radio-button>\n      </paper-radio-group>\n\n      <br /><br />\n      <hr />\n\n      <paper-checkbox id=\"save-prefs\" label=\"Use this language by default\"></paper-checkbox>\n\n      <div id=\"button-bar\">\n        <paper-button raised class=\"colored\" id=\"run- translation\">Translate</paper-button>\n      </div>\n    </div>\n\n    <!--  Insert JS code -->\n    <?!= include('Sidebar.js.html'); ?>\n  </body>\n</html>\n```", "```js\n<style>\n  body {\n    font-family: 'RobotoDraft', sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n\n  h4 {\n    text-align: center;\n    margin: 0;\n  }\n\n  paper-button {\n    margin: 0;\n    margin-top: 10px;\n  }\n\n  .sidebar {\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    overflow-y: auto;\n    padding: 12px;\n    position: absolute;\n    width: 100%;\n  }\n\n  #dest {\n    margin-top: 5px;\n  }\n\n  .error {\n    color: #dd4b39;\n    font-size: small;\n    margin-top: 8px;\n  }\n\n  .colored {\n    background: #4285f4;\n    color: #ffffff;\n  }\n</style>\n```", "```js\n<script src=\"img/jquery.min.js\"></script>\n\n<script>\n  /**\n   * On document load, assign click handlers to each button and\n   * try to load the user's origin and destination language\n   * preferences, if previously set.\n   *\n   */\n  $(function() {\n    $('#run-translation').click(runTranslation);\n\n    google.script.run\n      .withSuccessHandler(loadPreferences)\n      .withFailureHandler(showError).getPreferences();\n  });\n\n  /**\n   * Callback function that populates the origin and destination\n   * selection boxes with user preferences from the server.\n   *\n   */\n  function loadPreferences(languagePrefs) {\n    if (languagePrefs.destLang){ \n      $('#dest').prop('selected', languagePrefs.destLang);\n    }\n  }\n\n  /**\n   * Runs a server-side function to translate the text.\n   *\n   */\n  function runTranslation() {\n    this.disabled = true;\n    $('#error').remove();\n\n    var dest = $('#dest').prop('selected');\n    var savePrefs = $('#save-prefs').prop('checked');\n\n    google.script.run\n      .withSuccessHandler(\n        function(msg, element) {\n          element.disabled = false;\n        })\n      .withFailureHandler(\n        function(msg, element) {\n          showError(msg, $('#button-bar'));\n          element.disabled = false;\n        })\n      .withUserObject(this)\n      .runTranslation(dest, savePrefs);\n  }\n\n  /**\n   * Inserts a div that contains an error message after a given\n   * element.\n   *\n   */\n  function showError(msg, element) {\n    var div = $('<div id=\"error\" class=\"error\">' + msg + '</div>');\n\n    $(element).after(div);\n  }\n</script>\n```", "```js\nfunction onOpen() {\n  var ui = HtmlService.createHtmlOutputFromFile('Sidebar')\n    .setTitle('Review and Comment');\n\n  DocumentApp.getUi().showSidebar(ui);\n}\n```", "```js\nfunction insertComment(comment, selectedText){\n  // You should enable this advanced service (Drive API).\n  Drive.Comments.insert(\n    {\n      \"content\": comment,\n      \"context\": {\"type\":\"text/html\", \"value\":selectedText},\n    },\n    DocumentApp.getActiveDocument().getId()\n  );\n}\n```", "```js\n/**\n * Replaces the text of the current selection with the provided\n * text, or inserts text at the current cursor location.\n * (There will always be either a selection or a cursor.)\n * If multiple elements are selected, only inserts the text in the\n * first element that can contain text.\n *\n * @param {string} newText The text with which to replace the\n *                 current selection.\n *\n */\nfunction insertText(newText) {\n  var selection = DocumentApp.getActiveDocument().getSelection();\n\n  // If any text selected then get selected text else cursor.\n  if (selection) {\n    var elements = selection.getRangeElements();\n    for (var i = 0; i < elements.length; i++) {\n      var startIndex = elements[i].getStartOffset();\n      var endIndex = elements[i].getEndOffsetInclusive();\n\n      // If picture/image element selected.\n      if(startIndex == endIndex) throw \"Error: Select text only.\";\n\n      // Highlight the selected text.\n      var element = elements[i].getElement()\n         .setBackgroundColor(startIndex, endIndex, '#f6d2ab');\n\n      // Insert selected comment next to the selected text.\n      element.insertText(endIndex+1, '[' + newText +']')\n         .setBackgroundColor(\n            endIndex+1, endIndex+newText.length+2, '#bbffbb'\n          );\n\n      var text = element.getText()\n         .substring(\n            startIndex,endIndex+1\n          );\n\n      // Call insertComment function      \n      insertComment(newText,text);\n    }\n\n  } else {\n\n    var curr = DocumentApp.getActiveDocument().getCursor();\n\n    // Exit if document not active or cursor not in document.\n    if(!curr) return;\n\n    // Insert comment and call insertComment function.\n    curr.insertText('[' + newText +']')\n      .setBackgroundColor('#bbffbb');\n\n    insertComment(newText);\n  }\n}\n```", "```js\nfunction insertScore(newText){\n  var doc = DocumentApp.getActiveDocument();\n  var body = doc.getBody();\n\n  body.appendHorizontalRule();\n  body.appendParagraph(newText)\n    .setAttributes({FONT_SIZE:24,FOREGROUND_COLOR:'#6aa84f'});\n}\n```", "```js\n<!-- Sidebar.html -->\n<!DOCTYPE html>\n<html>\n  <head>\n    <base target=\"_top\">\n\n    <!-- Google's add-on stylesheet -->\n    <link rel=\"stylesheet\" href=\"https://ssl.gstatic.com/docs/script/css/add-ons1.css\" />\n\n    <!-- jQuery UI stylesheet -->\n    <link rel=\"stylesheet\" href=\"//ajax.googleapis.com/ajax/libs/jqueryui/ 1.10.4/themes/smoothness/jquery-ui.css\" />\n\n    <!-- jQuery base library -->\n    <script src=\"img/jquery.min.js\"></script>\n\n    <!-- jQuery UI library -->\n    <script src=\"img/jquery-ui.min.js\"></script>\n\n    <!-- Add additional styles -->\n    <style>\n      select{ height:35px; }\n\n      textarea{\n        width:100%;\n        margin-top: 3px;\n        margin-bottom: 3px;\n      }\n\n      .blue{\n        -moz-border-radius: 3px;\n        -webkit-border-radius: 3px;\n        border-radius: 3px;\n      }\n\n      .blue + .blue{\n        margin: .5px -.5px;\n      }\n\n      .ui-accordion .ui-accordion-header {\n        display: block;\n        cursor: pointer;\n        position: relative;\n        margin-top: 1px;\n        padding: .4em .25em .4em .25em;\n        min-height: 0; /* support: IE7 */\n      }\n\n      .ui-accordion .ui-accordion-icons {\n        padding-left: 2em;\n      }\n\n      .ui-accordion .ui-accordion-content {\n        padding: .5em .5em;\n        overflow: auto;\n      }\n    </style>\n  </head>\n```", "```js\n  <body>\n    <!-- To comply with the jQuery UI library,\n        The accordion should be in the form:\n      <div id=\"accordion\">\n        <h3>Section 1</h3>\n        <div>\n          ...\n        </div>\n\n        <h3>Section 2</h3>\n        <div>\n          ...\n        </div>\n      </div>\n    -->\n\n    <div id=\"accordion\">\n\n      <h3>Comments</h3>\n      <div>\n        <b>Highlight text and click the appropriate comment</b>\n        <div id=\"button-bar\">\n          <button class=\"blue comment-button\"\n            value = \"Awkward\">Awkward</button>\n\n          <button class=\"blue comment-button\"\n            value = \"Citation Needed\">Citation Needed</button>\n\n          <button class=\"blue comment-button\"\n            value=\"Improper Citation\">Improper Citation</button>\n\n          <button class=\"blue comment-button\"\n            value=\"Commonly Confused\">Commonly Confused</button>\n\n          <button class=\"blue comment-button\"\n            value=\"Delete\">Delete</button>\n\n          <button class=\"blue comment-button\"\n            value=\"Run-on\">Run-on</button>\n\n          <button class=\"blue comment-button\"\n            value=\"Vague\">Vague</button>\n        </div>\n\n        <div>\n          <textarea rows=\"3\" id=\"insert-text\"\n            placeholder=\"Type your comment here\"></textarea>\n        </div>\n\n        <div>\n          <button class=\"blue\" id=\"insert-button\">Comment</button>\n        </div>\n      </div>\n\n      <h3>Scores</h3>\n      <div>\n        <div id=\"score-bar\">\n          Does the document meet the expectation?\n          <br />\n          <button class=\"green insert-score\" value=\"Meets\"\n            >Yes</button>\n\n          <button class=\"green insert-score\" value=\"Not Yet\"\n            >No</button>\n        </div>\n      </div>\n    </div>\n\n    <script>\n      // On document load assign the events.\n      $(function(){\n\n        /**\n         * Which accordion block should be active/expanded by\n         * default, here the first one.\n         *\n         */\n        $(\"#accordion\").accordion({ active: 0 });\n\n        // Assign a click event to buttons.\n        $(\".comment-button\").click(insertButtonComment);\n        $(\"#insert-button\").click(insertCustomComment);\n        $(\".insert-score\").click(insertScore);\n\n      });\n\n      /**\n       *  Runs a server-side function to insert pre-defined\n       *  comment into the document at the cursor *  or after the selection.\n       *\n       */\n      function insertButtonComment() {\n        this.disabled = true;\n        $('#error').remove();\n\n        google.script.run\n          .withSuccessHandler(\n            function(returnSuccess, element) {\n              element.disabled = false;\n            }\n           )\n          .withFailureHandler(\n             function(msg, element) {\n               showError(msg, $('#button-bar'));\n               element.disabled = false;\n             }\n           )\n          .withUserObject(this)\n          .insertText($(this).val());\n      }\n\n      /**\n       *  Runs a server-side function to insert custom comment\n       *  into the document on pointing the cursor or \n       *  after the selection.\n       *\n       */\n      function insertCustomComment() {\n        this.disabled = true;\n        $('#error').remove();\n\n        google.script.run\n          .withSuccessHandler(\n             function(returnSuccess, element) {\n               element.disabled = false;\n             }\n           )\n          .withFailureHandler(\n             function(msg, element) {\n               showError(msg, $('#button-bar'));\n               element.disabled = false;\n             }\n           )\n          .withUserObject(this)\n          .insertText($('#insert-text').val());\n      }\n\n      /**\n       *  Runs a server-side function to insert the score\n       *\n       */\n      function insertScore() {\n      this.disabled = true;\n      $('#error').remove();\n\n      google.script.run\n        .withSuccessHandler(\n           function(returnSuccess, element) {\n             element.disabled = false;\n           }\n         )\n        .withFailureHandler(\n           function(msg, element) {\n             showError(msg, $('#score-bar'));\n             element.disabled = false;\n           }\n         )\n        .withUserObject(this)\n        .insertScore($(this).val());\n      }\n\n      /**\n       *  Inserts a div that contains an error message after a\n       *  given element.\n       *\n       *  @param msg-The error message to display.\n       *  @param element-The element after which to display the\n       *                 error.\n       *\n       */\n      function showError(msg, element) {\n        var div = $('<div id=\"error\" class=\"error\">'\n            + msg + '</div>');\n\n        $(element).after(div);\n      }\n    </script>\n  </body>\n</html>\n```"]