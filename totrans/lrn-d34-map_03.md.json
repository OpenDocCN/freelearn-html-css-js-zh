["```js\nvar svg = d3.select(\"body\") \n    .append(\"svg\") \n    .attr(\"width\", 200) \n    .attr(\"height\", 200) \n```", "```js\nsvg.append('rect') \n    .attr('x', 10) \n    .attr('y', 10) \n    .attr(\"width\",50) \n    .attr(\"height\",100); \n```", "```js\n<svg width=\"200\" height=\"200\">...</svg> \n```", "```js\nvar svg = d3.select(\"body\") \n    .append(\"svg\") \n    .attr(\"width\", 200) \n    .attr(\"height\", 200); \n```", "```js\nsvg.selectAll('rect').data([1,2]).enter() \n```", "```js\n.append('rect') \n.attr('x', function(d){ return d*20; }) \n.attr('y', function(d){ return d*50; }) \n```", "```js\n.attr(\"width\",50) \n.attr(\"height\",100); \n```", "```js\n<svg width=\"200\" height=\"200\"> \n  <rect x=\"20\" y=\"50\" width=\"50\" height=\"100\"></rect> \n  <rect x=\"40\" y=\"100\" width=\"50\" height=\"100\"></rect> \n</svg> \n```", "```js\nvar data = [ \n  { \n    x:10, \n    y:10, \n    width:5, \n    height:40 \n  },{ \n    x:40, \n    y:10, \n    width:100, \n    height:40 \n  } \n]; \n\n  var svg = d3.select(\"body\") \n    .append(\"svg\") \n    .attr(\"width\", 200) \n    .attr(\"height\", 200); \n\n  svg.selectAll('rect').data(data).enter() \n    .append('rect') \n    .attr('x', function(d){ return d.x}) \n    .attr('y', function(d){ return d.y}) \n    .attr(\"width\", function(d){ return d.width}) \n    .attr(\"height\", function(d){ return d.height}); \n```", "```js\nfunction makeData(n){ \n  var arr = []; \n\n  for (var i=0; i<n; i++){ \n    arr.push({ \n      x:Math.floor((Math.random() * 100) + 1), \n      y:Math.floor((Math.random() * 100) + 1), \n      width:Math.floor((Math.random() * 100) + 1), \n      height:Math.floor((Math.random() * 100) + 1) \n    }) \n  }; \n\n  return arr; \n} \n```", "```js\nvar rectangles = function(svg) { \n```", "```js\nvar data = makeData(2); \n```", "```js\nvar rect = svg.selectAll('rect').data(data); \n```", "```js\n  // Enter \n  rect.enter().append('rect') \n    .attr('test', function(d,i) { \n      // Enter called 2 times only \n      console.log('enter placing initial rectangle: ', i) \n    }); \n```", "```js\n  // Update \n  rect.transition().duration(500).attr('x', function(d){ \n     return d.x; }) \n      .attr('y', function(d){ return d.y; }) \n      .attr('width', function(d){ return d.width; }) \n      .attr('height', function(d){ return d.height; }) \n      .attr('test', function(d, i) { \n        // update every data change \n        console.log('updating x position to: ', d.x) \n      }); \n```", "```js\nvar svg = d3.select(\"body\") \n    .append(\"svg\") \n    .attr(\"width\", 200) \n    .attr(\"height\", 200); \n```", "```js\nrectangles(svg); \n```", "```js\nsetInterval(function(){ \n  rectangles(svg); \n},1000); \n```", "```js\nvar rectangles = function(svg) { \nvar data = makeData((Math.random() * 5) + 1); \n```", "```js\n  var rect = svg.selectAll('rect').data(data); \n\n  // Enter \n  rect.enter().append('rect') \n    .attr('test', function(d,i) { \n      // Enter called 2 times only \n      console.log('enter placing inital rectangle: ', i) \n  }); \n\n  // Update \n  rect.transition().duration(500).attr('x', function(d){ return d.x; }) \n      .attr('y', function(d){ return d.y; }) \n      .attr('width', function(d){ return d.width; }) \n      .attr('height', function(d){ return d.height; }) \n      .attr('test', function(d, i) { \n        // update every data change \n        console.log('updating x position to: ', d.x) \n      }); \n```", "```js\n  // Exit \n  rect.exit().attr('test', function(d) { \n    console.log('no data...') \n  }).remove(); \n} \n```", "```js\nd3.json(\"data/dataFile.json\", function(error, json) { \n```", "```js\nif (error) return console.log(error); \nvar data = json; \n```", "```js\n  var svg = d3.select(\"body\") \n    .append(\"svg\") \n    .attr(\"width\", 200) \n    .attr(\"height\", 200); \n\n  svg.selectAll('rect') \n    .data(data).enter() \n    .append('rect') \n    .attr('x', function(d){ return d.x; }) \n    .attr('y', function(d){ return d.y; }) \n    .attr(\"width\", function(d){ return d.width; }) \n    .attr(\"height\", function(d){ return d.height; }); \n}); \n```"]