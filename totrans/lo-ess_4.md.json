["```js\nvar collection = [ \n    { name: 'Virginia', age: 45 },\n    { name: 'Debra', age: 34 },\n    { name: 'Jerry', age: 55 },\n    { name: 'Earl', age: 29 }\n];  \n\n_.pluck(collection, 'age');\n// → [ 45, 34, 55, 29 ]\n```", "```js\nvar collection = [ \n    { name: 'Michele', age: 58 },\n    { name: 'Lynda', age: 23 },\n    { name: 'William', age: 35 },\n    { name: 'Thomas', age: 41 }\n];\n\n_.map(collection, 'name');\n// → \n// [\n//   \"Michele\",\n//   \"Lynda\",\n//   \"William\",\n//   \"Thomas\"\n// ] \n```", "```js\nvar collection = [ \n    { first: 'Ryan', last: 'Coleman', age: 23 },\n    { first: 'Ann', last: 'Sutton', age: 31 },\n    { first: 'Van', last: 'Holloway', age: 44 },\n    { first: 'Francis', last: 'Higgins', age: 38 }\n];  \n\n_.map(collection, function(item) {\n    return _.pick(item, [ 'first', 'last' ]); \n});\n// → \n// [\n//   { first: \"Ryan\", last: \"Coleman\" },\n//   { first: \"Ann\", last: \"Sutton\" },\n//   { first: \"Van\", last: \"Holloway\" },\n//   { first: \"Francis\", last: \"Higgins\" }\n// ]\n```", "```js\nvar collection = [ \n    { first: 'Clinton', last: 'Park', age: 19 },\n    { first: 'Dana', last: 'Hines', age: 36 },\n    { first: 'Pete', last: 'Ross', age: 31 },\n    { first: 'Annie', last: 'Cross', age: 48 }\n];  \n\n_.map(collection, function(item) {\n    return _.omit(item, 'first');\n});\n// → \n// [\n//   { last: \"Park\", age: 19 },\n//   { last: \"Hines\", age: 36 },\n//   { last: \"Ross\", age: 31 },\n//   { last: \"Cross\", age: 48 }\n// ]\n```", "```js\nfunction invalidAge(value, key) {\n    return key === 'age' && value < 40; \n}   \n\nvar collection = [ \n    { first: 'Kim', last: 'Lawson', age: 40 },\n    { first: 'Marcia', last: 'Butler', age: 31 },\n    { first: 'Shawna', last: 'Hamilton', age: 39 },\n    { first: 'Leon', last: 'Johnston', age: 67 }\n];\n\n_.map(collection, function(item) {\n    return _.omit(item, invalidAge);\n});\n// → \n// [\n//   { first: \"Kim\", last: \"Lawson\", age: 40 },\n//   { first: \"Marcia\", last: \"Butler\" },\n//   { first: \"Shawna\", last: \"Hamilton\" },\n//   { first: \"Leon\", last: \"Johnston\", age: 67 }\n// ]\n```", "```js\nvar collection = [ \n    { name: 'Valerie', jqueryYears: 4, cssYears: 3 },\n    { name: 'Alonzo', jqueryYears: 1, cssYears: 5 },\n    { name: 'Claire', jqueryYears: 3, cssYears: 1 },\n    { name: 'Duane', jqueryYears: 2, cssYears: 0 } \n];  \n\n_.map(collection, function(item) {\n    return _.extend({\n        experience: item.jqueryYears + item.cssYears,\n        specialty: item.jqueryYears >= item.cssYears ?\n            'jQuery' : 'CSS'\n    }, item);\n});\n// → \n// [\n//   {\n//     experience\": 7,\n//     specialty\": \"jQuery\",\n//     name\": \"Valerie\",\n//     jqueryYears\": 4,\n//     cssYears: 3\n//   },\n//   {\n//     experience: 6,\n//     specialty: \"CSS\",\n//     name: \"Alonzo\",\n//     jqueryYears: 1,\n//     cssYears: 5\n//   },\n//   {\n//     experience: 4,\n//     specialty: \"jQuery\",\n//     name: \"Claire\",\n//     jqueryYears: 3,\n//     cssYears: 1\n//   },\n//   {\n//     experience: 2,\n//     specialty: \"jQuery\",\n//     name: \"Duane\",\n//     jqueryYears: 2,\n//     cssYears: 0\n//   }\n// ]\n```", "```js\nvar app = {}, \n    collection = [ \n        { name: 'Cameron', supervisor: false },\n        { name: 'Lindsey', supervisor: true },\n        { name: 'Kenneth', supervisor: false },\n        { name: 'Caroline', supervisor: true }\n    ];  \n\napp.supervisor = _.find(collection, { supervisor: true }); \n\n_.map(collection, function(item) {\n    return _.extend(item, { supervisor: false }); \n}); \n\nconsole.log(app.supervisor);\n// → { name: \"Lindsey\", supervisor: false }\n```", "```js\nfunction bytes(b) {\n    var units = [ 'B', 'K', 'M', 'G', 'T', 'P' ],\n        target = 0;\n    while (b >= 1024) { \n        b = b / 1024;\n        target++;\n    }   \n    return (b % 1 === 0 ? b : b.toFixed(1)) +\n        units[target] + (target === 0 ? '' : 'B');\n}   \n\nvar collection = [ \n    1024,\n    1048576,\n    345198,\n    120120120\n];  \n\n_.map(collection, bytes);\n// → [ \"1KB\", \"1MB\", \"337.1KB\", \"114.6MB\" ]\n```", "```js\nvar collection = [ \n    [ 1, 2 ],\n    [ 1, 2, 3 ],\n    { first: 1, second: 2 },\n    { first: 1, second: 2, third: 3 } \n];  \n\n_.map(collection, _.size);\n// → [ 2, 3, 2, 3 ]\n```", "```js\nvar source = _.range(1000),\n    collection = [ \n        _.sample(source, 50),\n        _.sample(source, 100),\n        _.sample(source, 150)\n    ];  \n\n_.map(collection, _.min);\n// → [ 20, 21, 1 ]\n\n_.map(collection, _.max);\n// → [ 931, 985, 991 ]\n```", "```js\nvar collection = [ \n    [ 'Evan', 'Veronica', 'Dana' ],\n    [ 'Lila', 'Ronald', 'Dwayne' ],\n    [ 'Ivan', 'Alfred', 'Doug' ],\n    [ 'Penny', 'Lynne', 'Andy' ]\n];  \n\n_.map(collection, _.compose(_.first, function(item) {\n    return _.sortBy(item);\n}));\n\n// → [ \"Dana\", \"Dwayne\", \"Alfred\", \"Andy\" ]\n```", "```js\nvar collection = [ \n    { name: 'Karl', enabled: true },\n    { name: 'Sophie', enabled: true },\n    { name: 'Jerald', enabled: false },\n    { name: 'Angie', enabled: false }\n];  \n\n_.compose(\n    _.partialRight(_.map, 'name'),\n    _.partialRight(_.filter, 'enabled')\n)(collection);\n// → [ \"Karl\", \"Sophie\" ]\n```", "```js\nvar object = { \n    first: 'Ronald',\n    last: 'Walters',\n    employer: 'Packt'\n};  \n\n_.map(_.sortBy(_.keys(object)), function(item) {\n    return object[item];\n});\n// → [ \"Packt\", \"Ronald\", \"Walters\" ]\n```", "```js\nvar users = {}, \n    preferences = {}; \n\n_.each(_.range(100), function() {\n    var id = _.uniqueId('user-');\n    users[id] = { type: 'user' };\n    preferences[id] = { emailme: !!(_.random()) };\n}); \n\n_.map(users, function(value, key) {\n    return _.extend({ id: key }, preferences[key]);\n});\n// →\n// [\n//   { id: \"user-1\", emailme: true },\n//   { id: \"user-2\", emailme: false },\n//   ...\n// ]\n```", "```js\nvar object = { \n    first: 'Roxanne',\n    last: 'Elliot',\n    name: function() {\n        return this.first + ' ' + this.last;\n    },  \n    age: 38, \n    retirement: 65, \n    working: function() {\n        return this.retirement - this.age;\n    }   \n};  \n\n_.map(object, function(value, key) {\n    var item = {}; \n    item[key] = _.isFunction(value) ? object[key]() : value\n    return item;\n});\n// →\n// [\n//   { first: \"Roxanne\" },\n//   { last: \"Elliot\" },\n//   { name: \"Roxanne Elliot\" },\n//   { age: 38 },\n//   { retirement: 65 },\n//   { working: 27 }\n// ]\n\n_.map(object, function(value, key) {\n    var item = {}; \n    item[key] = _.result(object, key);\n    return item;\n});\n// →\n// [\n//   { first: \"Roxanne\" },\n//   { last: \"Elliot\" },\n//   { name: \"Roxanne Elliot\" },\n//   { age: 38 },\n//   { retirement: 65 },\n//   { working: 27 }\n// ]\n```", "```js\nvar object = { \n    firstName: 'Fredrick',\n    lastName: 'Townsend',\n    first: function() {\n        return this.firstName;\n    },  \n    last: function() {\n        return this.lastName;\n    }   \n};  \n\nvar methods = _.map(_.functions(object), function(item) {\n    return [ _.bindKey(object, item) ];\n}); \n\n_.invoke(methods, 0);\n// → [ \"Fredrick\", \"Townsend\" ]\n```", "```js\nvar object = { \n    first: 'Lindsay',\n    last: 'Castillo',\n    age: 51\n};  \n\n_.map(_.filter(_.values(object), _.isString), function(item) {\n    return '<strong>' + item + '</strong>';\n});\n// → [ \"<strong>Lindsay</strong>\", \"<strong>Castillo</strong>\" ]\n```", "```js\nfunction capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}   \n\nfunction format(label, value) {\n    return '<label>' + capitalize(label) + ':</label>' +\n        '<strong>' + value + '</strong>';\n}   \n\nvar object = { \n    first: 'Julian',\n    last: 'Ramos',\n    age: 43\n};  \n\n_.map(_.pairs(object), function(pair) {\n    return format.apply(undefined, pair);\n});\n// →\n// [\n//   \"<label>First:</label><strong>Julian</strong>\",\n//   \"<label>Last:</label><strong>Ramos</strong>\",\n//   \"<label>Age:</label><strong>43</strong>\"\n// ]\n```", "```js\nvar collection = [ \n    { ram: 1024, storage: 2048 },\n    { ram: 2048, storage: 4096 },\n    { ram: 1024, storage: 2048 },\n    { ram: 2048, storage: 4096 }\n];  \n\n_.reduce(collection, function(result, item) {\n    return result + item.ram;\n}, 0);\n// → 6144\n\n_.reduce(collection, function(result, item) {\n    return result + item.storage;\n}, 0);\n// → 12288\n```", "```js\nvar collection = [ \n    { hits: 2, misses: 4 },\n    { hits: 5, misses: 1 },\n    { hits: 3, misses: 8 },\n    { hits: 7, misses: 3 } \n];  \n\n_.reduce(collection, function(result, item) {\n    return {\n        hits: result.hits + item.hits,\n        misses: result.misses + item.misses\n    }; \n}, { hits: 0, misses: 0 });\n// → { hits: 17, misses: 16 }\n```", "```js\nfunction add(a, b) {\n    return a + b;\n}   \n\nvar collection = [ \n    { wins: 34, loses: 21 },\n    { wins: 58, loses: 12 },\n    { wins: 34, loses: 23 },\n    { wins: 40, loses: 15 }\n];  \n\n_.reduce(_.range(1, 6), add);\n// → 15\n\n_.reduce(_.pluck(collection, 'wins'), add);\n// → 166\n\n_.reduce(_.pluck(collection, 'loses'), add);\n// → 71\n```", "```js\nvar collection = [ \n    { name: 'Gina', age: 34, enabled: true },\n    { name: 'Trevor', age: 45, enabled: false },\n    { name: 'Judy', age: 71, enabled: true },\n    { name: 'Preston', age: 19, enabled: false }\n];  \n\n_.reduce(_.filter(collection, 'enabled'), function(result, item) {\n    result.names.push(item.name);\n    result.years += item.age;\n    return result;\n}, { names: [], years: 0 });\n// →\n// {\n//   names: [\n//     \"Gina\",\n//     \"Judy\"\n//   ],\n//   years: 105\n// }\n```", "```js\nvar collection = [ \n    { name: 'Melissa', age: 28, enabled: true },\n    { name: 'Kristy', age: 22, enabled: true },\n    { name: 'Kerry', age: 31, enabled: false },\n    { name: 'Damon', age: 36, enabled: false }\n];  \n\n_.reduce(collection, function(result, item) {\n    if (item.enabled) {\n        result.names.push(item.name);\n        result.years += item.age;\n    }   \n    return result;\n}, { names: [], years: 0 });\n// →\n// {\n//   names: [\n//     \"Melissa\",\n//     \"Kristy\"\n//   ],\n//   years: 50\n// }\n```", "```js\nfunction score(item) {\n    return _.reduce(item.scores, function(result, score) {\n        return result + score;\n    }); \n}   \n\nvar collection = [ \n    { name: 'Madeline', scores: [ 88, 45, 83 ] },\n    { name: 'Susan', scores: [ 79, 82, 78 ] },\n    { name: 'Hugo', scores: [ 90, 84, 85 ] },\n    { name: 'Thomas', scores: [ 74, 69, 78 ] } \n];  \n\n_.min(collection, score);\n// →\n// {\n//   name: \"Madeline\",\n//   scores: [\n//     88,\n//     45,\n//     83\n//   ]\n// }\n\n_.max(collection, score);\n// →\n// {\n//   name: \"Hugo\",\n//   scores: [\n//     90,\n//     84,\n//     85\n//   ]\n// }\n```", "```js\nfunction average(items) {\n    return _.reduce(items, function(result, item) {\n        return result + item;\n    }) / items.length;\n}   \n\nvar collection = [ \n    { name: 'Anthony', scores: [ 89, 59, 78 ] },\n    { name: 'Wendy', scores: [ 84, 80, 81 ] },\n    { name: 'Marie', scores: [ 58, 67, 63 ] },\n    { name: 'Joshua', scores: [ 76, 68, 74 ] } \n];  \n\n_.reduce(collection, function(result, item, index, coll) {\n    var ave = average(item.scores);\n    result.push(ave);\n    if (index === (coll.length - 1)) {\n        return average(result);\n    }   \n    return result;\n}, []).toFixed(2);\n// → \"73.08\"\n```", "```js\nvar object = { \n        first: 'Kerry',\n        last: 'Singleton',\n        age: 41\n    },  \n    allowed = [ 'first', 'last' ];\n\n_.reduce(object, function(result, value, key) {\n    if (_.contains(allowed, key)) {\n        result[key] = value;\n    }   \n    return result;\n}, {});\n// → { first: \"Kerry\", last: \"Singleton\" }\n\n_.pick(object, allowed);\n// → { first: \"Kerry\", last: \"Singleton\" }\n```", "```js\nvar object = { \n    first: '&lt;strong&gt;Nicole&lt;/strong&gt;',\n    last: '&lt;strong&gt;Russel&lt;/strong&gt;',\n    age: 26\n};   \n\n_.transform(object, function(result, value, key) {\n    if (_.isString(value)) {\n        result[key] = _.unescape(value);\n    }   \n});\n// →\n// {\n//   first: \"<strong>Nicole</strong>\",\n//   last: \"<strong>Russel</strong>\"\n// }\n```", "```js\nfunction Person(first, last) {\n    this.first = first;\n    this.last = last;\n}   \n\nPerson.prototype.name = function name() {\n    return this.first + ' ' + this.last;\n};  \n\nvar object = new Person('Alex', 'Rivera');\n\n_.transform(object, function(result, value, key) {\n    if (_.isString(value)) {\n        result[key] = value.toUpperCase();\n    }   \n}).name();\n// → \"ALEX RIVERA\"\n```", "```js\nvar collection = [ \n    { id: _.uniqueId('id-'), position: 'absolute', top: 12 },\n    { id: _.uniqueId('id-'), position: 'relative', top: 20 },\n    { id: _.uniqueId('id-'), position: 'absolute', top: 12 },\n    { id: _.uniqueId('id-'), position: 'relative', top: 20 }\n];  \n\n_.groupBy(collection, 'position');\n// →\n// {\n//   absolute: [\n//     { id: \"id-1\", position: \"absolute\", top: 12 },\n//     { id: \"id-3\", position: \"absolute\", top: 12 }\n//   ],\n//   relative: [\n//     { id: \"id-2\", position: \"relative\", top: 20 },\n//     { id: \"id-4\", position: \"relative\", top: 20 }\n//   ]\n// }\n\n_.indexBy(collection, 'id');\n// →\n// {\n//   \"id-1\": {\n//     id: \"id-1\",\n//     position: \"absolute\",\n//     top: 12\n//   },\n//   \"id-2\": {\n//     id: \"id-2\",\n//     position: \"relative\",\n//     top: 20\n//   },\n//   \"id-3\": {\n//     id: \"id-3\",\n//     position: \"absolute\",\n//     top: 12\n//   },\n//   \"id-4\": {\n//     id: \"id-4\",\n//     position: \"relative\",\n//     top: 20\n//   }\n// }\n```", "```js\nvar app = { \n    states: [\n        'running',\n        'off',\n        'paused'\n    ],  \n    machines: [\n        { id: _.uniqueId(), state: 1 },\n        { id: _.uniqueId(), state: 0 },\n        { id: _.uniqueId(), state: 0 },\n        { id: _.uniqueId(), state: 2 } \n    ]   \n};  \n\nvar mapStates = _.partialRight(_.map, function(item) {\n    return _.extend({\n        state: this.states[item.state]\n    }, _.pick(item, 'id'));\n}, app);\n\nmapStates(app.machines);\n// →\n// [\n//   { state: \"off\", id: \"1\" },\n//   { state: \"running\", id: \" \" },\n//   { state: \"running\", id: \" \" },\n//   { state: \"paused\", id: \" \" }\n// ]\n```", "```js\nvar collection = [ 12, 34, 53, 43 ],\n    settings = { tax: 1.15 },\n    applyTax = _.partialRight(_.reduce, function(result, item) {\n        return result + item * this.tax;\n    }, 0, settings);\n\napplyTax(collection).toFixed(2);\n// → \"163.30\"\n```", "```js\nfunction add(item) {\n    var result = _.clone(item);\n    result[this.prop] += this.value;\n    return result;\n}   \n\nfunction upper(item) {\n    var result = _.clone(item);\n    result[this.prop] = result[this.prop].toUpperCase();\n    return result;\n}   \n\nvar collection = [ \n    { name: 'Gerard', balance: 100 },\n    { name: 'Jean', balance: 150 },\n    { name: 'Suzanne', balance: 200 },\n    { name: 'Darrell', balance: 250 }\n];  \n\nvar mapAdd = _.partial(_.map, collection, add),\n    mapUpper = _.partial(_.map, collection, upper);\n\nmapAdd({ prop: 'balance', value: 50 }); \n// →\n// [\n//   { name: \"Gerard\", balance: 150 },\n//   { name: \"Jean\", balance: 200 },\n//   { name: \"Suzanne\", balance: 250 },\n//   { name: \"Darrell\", balance: 300 }\n// ]\n\nmapAdd({ prop: 'balance', value: 100 });\n// →\n// [\n//   { name: \"Gerard\", balance: 200 },\n//   { name: \"Jean\", balance: 250 },\n//   { name: \"Suzanne\", balance: 300 },\n//   { name: \"Darrell\", balance: 350 }\n// ]\n\nmapUpper({ prop: 'name'});\n// →\n// [\n//   { name: \"GERARD\", balance: 100 },\n//   { name: \"JEAN\", balance: 150 },\n//   { name: \"SUZANNE\", balance: 200 },\n//   { name: \"DARRELL\", balance: 250 }\n// ]\n```", "```js\nfunction sum(a, b) {\n    return a + b[this.prop];\n}   \n\nvar collection = [ \n    { low: 40, high: 70 },\n    { low: 43, high: 83 },\n    { low: 39, high: 79 },\n    { low: 45, high: 74 }\n];  \n\nvar reduceSum = _.partial(_.reduce, collection, sum, 0); \n\nreduceSum({ prop: 'low' });\n// → 167\n\nreduceSum({ prop: 'high' });\n// → 306\n```", "```js\nvar collection = [ \n    { name: 'Wade', balance: 100 },\n    { name: 'Donna', balance: 125 },\n    { name: 'Glenn', balance: 90 },\n    { name: 'Floyd', balance: 110 }\n], bonus = 25; \n\nvar mapped = _.map(collection, function(item) {\n    return _.extend({\n        bonus: item.balance + bonus\n    }, item);\n}); \n\n_.reduce(mapped, function(result, item, index, coll) {\n    result += (item.bonus - item.balance) / item.bonus;\n    if (index === (coll.length - 1)) {\n        result = result / coll.length * 100;\n    }   \n    return result;\n}, 0).toFixed(2) + '%';\n// → \"19.23%\"\n```"]