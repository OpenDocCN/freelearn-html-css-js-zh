["```js\nimport { expect, test } from '@playwright/test';\ntest('lists all birthdays', async ({ page }) => {\n  await page.goto('/birthdays');\n  await expect(\n    page.getByText('Hercules')\n  ).toBeVisible();\n  await expect(\n    page.getByText('Athena')\n  ).toBeVisible();\n});\n```", "```js\n     1 birthdays.test.js:3:1 › lists all birthdays\n  ✓  2 test.js:3:1 › index page has expected h1 (618ms)\n[WebServer] Error: Not found: /birthdays\n```", "```js\n    import { describe, it, expect } from 'vitest';\n    import { load } from './+page.server.js';\n    describe('/birthdays - load', () => {\n      it('returns a fixture of two items', () => {\n        const result = load();\n      });\n    });\n    ```", "```js\n    it('returns a fixture of two items', () => {\n      const result = load();\n      expect(result.birthdays).toEqual([\n        { name: 'Hercules', dob: '1994-02-02' },\n        { name: 'Athena', dob: '1989-01-01' }\n      ]);\n    });\n    ```", "```js\n     FAILsrc/routes/birthdays/page.server.test.js [ src/routes/birthdays/page.server.test.js ]\n    Error: Failed to load url ./+page.server.js (resolved id: ./+page.server.js). Does the file exist?\n    ```", "```js\n     FAIL  src/routes/birthdays/page.server.test.js > /birthdays - load > returns a fixture of two items\n    TypeError: load is not a function\n    ❯ src/routes/birthdays/page.server.test.js:6:18\n          4| describe('/birthdays - load', () => {\n          5|  it('returns a fixture of two items', () => {\n          6|   const result = load();\n           |                  ^\n          7|   expect(result.birthdays).toEqual([\n          8|    expect.objectContaining({\n    ```", "```js\n    export const load = () => ({});\n    ```", "```js\n     FAIL  src/routes/birthdays/page.server.test.js > /birthdays - load > returns a fixture of two items\n     AssertionError: expected [ { name: 'Hercules', …(2) }, …(1) ] to deeply equal [ { name: 'Hercules', …(1) }, …(1) ]\n    ❯ src/routes/birthdays/page.server.test.js:14:28\n         12|  it('returns a fixture of two items', () => {\n         13|   const result = load();\n         14|   expect(result.birthdays).toEqual([\n           |                            ^\n         15|    { name: 'Hercules', dob: '1994-02-02' },\n         16|    { name: 'Athena', dob: '1989-01-01' }\n      - Expected  - 10\n      + Received  + 1\n      - Array [\n      -   Object {\n      -     \"dob\": \"1994-02-02\",\n      -     \"name\": \"Hercules\",\n    -   },\n      -   Object {\n      -     \"dob\": \"1989-01-01\",\n      -     \"name\": \"Athena\",\n      -   },\n    - ]\"\n      + \"undefined\"\n    ```", "```js\n    export const load = () => ({\n      birthdays: [\n        { name: 'Hercules', dob: '1994-02-02' },\n        { name: 'Athena', dob: '1989-01-01' }\n      ]\n    });\n    ```", "```js\n    ✓ src/routes/birthdays/page.server.test.js (1)\n    ✓ /birthdays - load (1)\n    ✓ returns a fixture of two items\n    ```", "```js\n    import { describe, it, expect } from 'vitest';\n    import {\n      render,\n      screen\n    } from '@testing-library/svelte';\n    import Page from './+page.svelte';\n    ```", "```js\n    describe('/birthdays', () => {\n      const birthdays = [\n        { name: 'Hercules', dob: '1994-02-02' },\n        { name: 'Athena', dob: '1989-01-01' }\n      ];\n      it('displays all the birthdays passed to it', () =>\n      {\n        render(Page, { data: { birthdays } });\n        expect(\n          screen.queryByText('Hercules')\n        ).toBeVisible();\n        expect(\n          screen.queryByText('Athena')\n        ).toBeVisible();\n      });\n    });\n    ```", "```js\n     FAIL  src/routes/birthdays/page.test.js [ src/routes/birthdays/page.test.js ]\n    Error: Failed to load url ./+page.svelte (resolved id: ./+page.svelte). Does the file exist?\n    ```", "```js\n     FAIL  src/routes/birthdays/page.test.js > /birthdays > displays all the birthdays passed to it\n    Error: expect(received).toBeVisible()\n    received value must be an HTMLElement or an SVGElement.\n    ```", "```js\n    <script>\n      import Birthday from './Birthday.svelte';\n      export let data;\n    </script>\n    <h1>Birthday list</h1>\n    <ol>\n      {#each data.birthdays as birthday}\n        <li>\n          <Birthday {...birthday} />\n        </li>\n      {/each}\n    </ol>\n    ```", "```js\nexpect(\n  screen.queryByText('Hercules')\n).toBeVisible();\n```", "```js\n    ✓ src/routes/birthdays/page.test.js (1)\n    ✓ /birthdays (1)\n    ✓ displays all the birthdays passed to it\n    ```", "```js\n    ✓  1 test.js:3:1 › index page has expected h1 (402ms)\n    ✓  2 birthdays.test.js:3:1 › lists all birthdays (430ms)\n      2 passed (4s)\n    ```", "```js\n    <style>\n      ol {\n        list-style-type: none;\n        padding-left: 0;\n      }\n      li {\n        padding: 10px;\n        margin: 5px;\n        border: 1px solid #ccc;\n        border-radius: 2px;\n      }\n    </style>\n    ```"]