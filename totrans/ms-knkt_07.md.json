["```js\n<div data-bind='template: { foreach: planetsToShow,\n                            beforeRemove: hidePlanetElement,\n                            afterAdd: showPlanetElement }'>\n    <div data-bind='attr: { \"class\": \"planet \" + type }, text: name'></div>\n</div>\n\nvar PlanetsModel = function() {\n    //Viewmodel properties\n    this.planets = ko.observableArray();\n\n    // Animation callbacks for the planets list\n    this.showPlanetElement = function(elem) {\n        if (elem.nodeType === 1) {\n$(elem).hide().slideDown() ;\n}\n    }\n    this.hidePlanetElement = function(elem) {\n    \tif (elem.nodeType === 1) {\n$(elem).slideUp(function() { $(elem).remove(); });\n}\n    }\n};\n```", "```js\n<div data-bind='template: { foreach: planetsToShow,\n                            beforeRemove: ko.animations.slideHide,\n                            afterAdd: ko.animations.slideShow }'>\n    <div data-bind='attr: { \"class\": \"planet \" + type }, text: name'></div>\n</div>\n\nko.animations = {};\nko.animations.slideShow = function(elem) {\n    if (elem.nodeType === 1) {\n$(elem).hide().slideDown();\n}\n};\nko.animations.slideHide =  function(elem) {\n    if (elem.nodeType === 1) {\n$(elem).slideUp(function() { $(elem).remove(); });\n   }\n};\n\nvar PlanetsModel = function() {\n    //Viewmodel properties\n    this.planets = ko.observableArray();\n};\n```", "```js\n<button data-bind=\"disable: items().length > 3, click: submitOrder\">Submit</button>\n```", "```js\n<form data-bind=\"submit: submitOrder, css: { 'invalid-form': items().length > maxItems }\">\n    //Irrelevant form codeâ€¦\n</form>\n```", "```js\nvar contacts = ko.observableArray();\nfor (var i = 0, j = newContacts.length; i < j; i++) {\n    contacts.push(new Contact(newContacts[i]);\n}\n```", "```js\nvar contacts = ko.observableArray();\nfor (var i = 0, j = newContacts.length, newItems = []; i < j; i++) {\n    newItems.push(new Contact(newContacts[i]);\n}\ncontacts.push.apply(contacts, newItems);\n```", "```js\nko.observableArray.fn.pushAll = function (items) {\n    this.push.apply(this, items);\n};\n```", "```js\nvar contacts = ko.observableArray();\nfor (var i = 0, j = newContacts.length, newItems = []; i < j; i++) {\n    newItems.push(new Contact(newContacts[i]);\n}\n\ncontacts.pushAll(newitems);\n```", "```js\nko.bindingHandlers.on = {\n   init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n      var options = valueAccessor();\n      var handler = function() {\n         options.method.call(bindingContext.$rawData, ko.dataFor(this));\n      };\n\n      $(element).on(options.event, options.selector, handler);\n\n      ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n         $(element).off(options.event, options.selector, handler);\n      });\n   }\n};\n\n<ul class=\"list-unstyled\" data-bind=\"foreach: displayContacts, on: { event: 'click', selector: '.remove-btn', method: deleteContact }\">\n  <li data-bind=\"compose: { model: $data, mode: 'templated' }\">\n  <div data-part=\"btn-container\" class=\"inline\">\n    <button class=\"btn btn-sm btn-default\"  data-bind=\"click: edit\">Edit</button>\n    <button class=\"btn btn-sm btn-danger remove-btn\">Delete</button>\n  </div>\n  </li>\n</ul>\n```"]