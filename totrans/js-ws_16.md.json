["```js\n    var greeting = 'Hello from JavaScript!';\n    alert(greeting);\n    ```", "```js\n    <ol id=\"todo-list\">\n    ```", "```js\n    var parentContainer = document.getElementById('todo-list');\n    ```", "```js\n    var newItem = document.createElement('li');\n    ```", "```js\n    newItem.innerText = \"Research Wines\";\n    ```", "```js\n    parentContainer.appendChild(newItem);\n    ```", "```js\n    parentContainer.lastChild.style.color = \"crimson\";\n    ```", "```js\n    console.log('Beginning List Count: ' + parentContainer.children.length);\n    ```", "```js\n    console.log('End List Count: ' + parentContainer.children.length);\n    ```", "```js\nactivity-complete.html\n30    <ol id=\"todo-list\">\n31        <li>Wash Laundry</li>\n32        <li>Clean Silver</li>\n33        <li>Write Letters</li>\n34        <li>Purchase Groceries</li>\n35        <li>Retrieve Mail</li>\n36        <li>Prepare Dinner</li>\n37    </ol>\n38    <script>\n39        var parentContainer = document.getElementById('todo-list');\nThe full code is available at: https://packt.live/2q8CGY1\n```", "```js\n    // Declare and initialize the todo list array\n    let todoList = [\n     \"Wash Laundry\",\n     \"Clean Silver\",\n     \"Write Letters\",\n     \"Purchase Groceries\",\n     \"Retrieve Mail\",\n     \"Prepare Dinner\"\n    ];\n    ```", "```js\n     <ol id=\"todo-list\">\n     </ol>\n    ```", "```js\n    // The todo list element\n    let todoEle = document.getElementById('todo-list');\n    ```", "```js\n    // Function to replace an HTML DOM list li elements with array items.\n    function replaceListElements(listEle, listItems){\n     listEle.innerHTML = \"\";\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = document.createElement(\"li\");\n      liEle.appendChild(document.createTextNode(listItems[i]));\n      listEle.appendChild(liEle);\n     }\n    }\n    ```", "```js\n    // Update the todo list view with initial list of items\n    replaceListElements(todoEle, todoList);\n    ```", "```js\n     <button id=\"shuffle-button\">Shuffle</button>\n    ```", "```js\n    // The shuffle button element.\n    let shuffleButtonEle = document.getElementById('shuffle-button');\n    ```", "```js\n    // Add event listener function for the shuffle button element.\n    shuffleButtonEle.addEventListener('click', shuffleButtonClicked);\n    ```", "```js\n    // Function to handle click events for the Shuffle button\n    function shuffleButtonClicked(e){\n     replaceListElements(todoEle, getNewShuffledArray(todoList));\n    }\n    ```", "```js\n     function getNewShuffledArray(sourceArray){\n    ```", "```js\n     var newArray = [].concat(sourceArray);\n     let swapIndex = newArray.length;\n    ```", "```js\n     let swapWithIndex;\n     let swapIndexValue;\n    ```", "```js\n     while (0 !== swapIndex) {\n      swapWithIndex = Math.floor(Math.random() * swapIndex);\n    ```", "```js\n      swapIndex -= 1;\n      swapIndexValue = newArray[swapIndex];\n      newArray[swapIndex] = newArray[swapWithIndex];\n      newArray[swapWithIndex] = swapIndexValue;\n     }\n     return newArray;\n    ```", "```js\n    <head>\n        // ... links and meta tags from the previous activity\n    <script src=\"img/jquery.min.js\"></script>\n    </head>\n    ```", "```js\n    // The todo list element\n    // let todoEle = document.getElementById('todo-list'); // old\n    let todoEle = $('#todo-list'); // new\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     // listEle.innerHTML = „\"; // old\n     listEle.hide();\n     listEle.empty();\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = document.createElement(\"li\");\n      liEle.appendChild(document.createTextNode(listItems[i]));\n      listEle.appendChild(liEle);\n     }\n    }\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     listEle.hide();\n     listEle.empty();\n     for (let i= 0; i<= listItems.length - 1; i++){\n      // let liEle = document.createElement(\"li\");\n      // liEle.appendChild(document.createTextNode(listItems[i]));\n      // listEle.appendChild(liEle);\n      let liEle = $(document.createElement(\"li\"));\n      liEle.append(document.createTextNode(listItems[i]));\n      liEle.appendTo(listEle);\n     }\n    }\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     listEle.hide();\n     listEle.empty();\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = $(document.createElement(\"li\"));\n      liEle.append(document.createTextNode(listItems[i]));\n      liEle.appendTo(listEle)\n     }\n     listEle.fadeIn('slow');\n    }\n    ```", "```js\n    <head>\n        // ... previous links and meta tags\n    <script src=\"img/velocity.min.js\"></script>\n    </head>\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     Velocity(listEle, { opacity: 0 }, { duration: 0 })\n     listEle.innerHTML = \"\";\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = document.createElement(\"li\");\n      liEle.appendChild(document.createTextNode(listItems[i]));\n      listEle.appendChild(liEle)\n     }\n    }\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     Velocity(listEle, { opacity: 0 }, { duration: 0 })\n     listEle.innerHTML = \"\";\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = document.createElement(\"li\");\n      liEle.appendChild(document.createTextNode(listItems[i]));\n      listEle.appendChild(liEle)\n     }\n     Velocity(listEle, { opacity: 1 }, { duration: 500 })\n    }\n    ```", "```js\n    <head>\n        // ... previous links and meta tags\n    <script src=\"img/anime.min.js\"></script>\n    </head>\n    ```", "```js\n    function replaceListElements(listEle, listItems){\n     anime({\n      targets: listEle,\n      translateX: -1000\n     });\n     listEle.innerHTML = \"\";\n     for (let i= 0; i<= listItems.length - 1; i++){\n      let liEle = document.createElement(\"li\");\n      liEle.appendChild(document.createTextNode(listItems[i]));\n      listEle.appendChild(liEle)\n     }\n    }\n    ```", "```js\n    activity.anime.js\n    21 function replaceListElements(listEle, listItems){\n    22  anime({\n    23   // ANIME SOLUTION\n    24   targets: listEle,\n    25   translateX: -1000\n    26  });\n    27  listEle.innerHTML = \"\";\n    28 \n    29 \n    30  for (let i= 0; i<= listItems.length - 1; i++){\n    31   let liEle = document.createElement(\"li\");\n    32   liEle.appendChild(document.createTextNode(listItems[i]));\n    33   listEle.appendChild(liEle)\n    34  }\n    The full code is available at: https://packt.live/2Kd08dx\n    ```", "```js\n    function average_grade() {\n    ```", "```js\n        var args = Array.prototype.slice.call(arguments);\n    ```", "```js\n        var sum = 0;    for (let i=0; i<args.length; i++) {\n            sum += Number(args[i]);\n        }\n    ```", "```js\n        var average = sum / args.length;\n    ```", "```js\n        if (average < 35) {\n          return \"F\";\n        }\n        if (average >= 35 && average < 45) {\n          return \"D\";\n        }\n        if (average >= 45 && average < 60) {\n          return \"C\";\n        }\n        if (average >= 60 && average < 75) {\n          return \"B\";\n        }\n        return \"A\";\n    }\n    ```", "```js\n    let todos = [];\n    ```", "```js\n    function modelFindIndex(state, id) {\n      for (let i=0; i<state.length; i++) {\n        if (state[i].id == id) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    ```", "```js\n    function modelStateChange(state, action, data) {\n    ```", "```js\n      if (action == \"CREATE\") {\n        console.log(\"created:\", data);\n        return state.concat(data);\n      }\n    ```", "```js\n      if (action == \"REMOVE\") {\n       let data = modelFindIndex(todos, ev.detail);\n        if (i > -1) {\n          state = state.splice(i, 1);\n          console.log(\"removed\", data);\n          return state\n        }\n      }\n    ```", "```js\n      if (action == \"MODIFY\") {\n        let data = modelFindIndex(todos, ev.detail);\n        if (i > -1) {\n          state = state.splice(i, 1);\n          console.log(\"removed\", data);\n          return state\n        }\n      }\n    }\n    ```", "```js\n    function modelInit() {\n      document.addEventListener(\"CREATE\", modelCreateHandler);\n    }\n    function modelCreateHandler(ev) {\n      todos = modelStateChange(todos, \"CREATE\", ev.detail);\n      document.dispatchEvent(new Event(\"CHANGED\", {detail: {type: \"added\", value: ev.detail}}));\n    }\n    ```", "```js\n    function loadHandler() {\n      model_init();\n      let form = document.getElementById(\"todo_form\");\n      form.addEventListener(\"submit\", createHandler);\n      document.addEventListener(\"CHANGED\", changedHandler);\n    }\n    ```", "```js\n    function changedHandler() {\n      let msg = document.getElementById(\"notifications\");\n      msg.innerHTML = \"The TODO model has been updated\";\n      setTimeout(() => {\n        msg.innerHTML = \"\";\n      }, 3000);\n    }\n    ```", "```js\n    create_todos.js\n    16 function createHandler(ev) {\n    17   ev.preventDefault();\n    18   let title = document.getElementById(\"title\").value,\n    19       description = document.getElementById(\"description\").value,\n    20       msg = document.getElementById(\"notifications\");\n    21   let errors = [];\n    22   if (title.trim() == \"\") {\n    23     errors = errors.concat([\"Title is not valid\"]);\n    24   }\n    25   if (description.trim() == \"\") {\n    26     errors = errors.concat([\"Description is not valid\"]);\n    27   }\n    28   if (errors.length > 0) {\n    29     msg.innerHTML = errors.join(\"/n\");\n    30     setTimeout(() => {\n    The full code is available at: https://packt.live/2Xbd34R\n    ```", "```js\n    todos;\n    ```", "```js\n    function stackOverflow() {\n      frameCount++;\n      stackOverflow();\n    }\n    ```", "```js\n    setTimeout(() => console.log(frameCount), 500);\n    stackOverflow();\n    ```", "```js\n    let canvas = document.getElementById('canvas');\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    canvas.width = width;\n    canvas.height = height;\n    let context = canvas.getContext('2d');\n    // Set the starting point to the center of the canvas\n    let point = [width / 2, height / 2];\n    ```", "```js\n    context.beginPath();\n    context.moveTo(point[0], point[1]);\n    ```", "```js\n    let i = 1;\n    const OFFSET = 10;\n    const MARGIN = 5;\n    while (\n      point[0] > MARGIN &&\n      point[0] < width - MARGIN &&\n      point[1] > MARGIN &&\n      point[1] < height - MARGIN\n    ) {\n    ```", "```js\n    point[1] = point[1] - OFFSET * i;\n    ```", "```js\n    context.lineTo(point[0], point[1]);\n      point[0] = point[0] + OFFSET * i;\n      i++;\n      context.lineTo(point[0], point[1]);\n      point[1] = point[1] + OFFSET * i;\n      context.lineTo(point[0], point[1]);\n      point[0] = point[0] - OFFSET * i;\n      i++;\n      context.lineTo(point[0], point[1]);\n    }\n    ```", "```js\n    context.stroke();\n    ```", "```js\n    let context = new AudioContext();\n    let volume = context.createGain();\n    ```", "```js\n    volume.connect(context.destination);\n    ```", "```js\n    let osciA = context.createOscillator();\n    let osciB = context.createOscillator();\n    ```", "```js\n    osciA.type = 'sawtooth';\n    osciB.type = 'square';\n    osciA.connect(volume);\n    osciB.connect(volume);\n    osciA.start();\n    osciB.start();\n    ```", "```js\n    document.addEventListener('mousemove', event => {\n      osciA.frequency.value = event.clientY;\n      osciB.frequency.value = event.clientX;\n    });\n    ```", "```js\n    <!-- index.html -->\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <script src='scripts.js'></script>\n      </head>\n      <body>\n        <canvas id='canvas'></canvas>\n      </body>\n    </html>\n    ```", "```js\n    // scripts.js\n    document.addEventListener('click', () => {\n    ```", "```js\n      // initialise canvas and related variables\n      let canvas = document.getElementById('canvas');\n      let canvasContext = canvas.getContext('2d');\n      let width = window.innerWidth;\n      let height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n      let centerX = width / 2;\n      let centerY = height / 2;\n      let mouseY; // this will be set in the 'mousemove' event handler\n    ```", "```js\n      // initialise Audio context, nodes and related variables\n      let audioContect = new AudioContext();\n      let volume = audioContect.createGain();\n      let osciA = audioContect.createOscillator();\n      let analyser = audioContect.createAnalyser();\n      let waveform = new Float32Array(analyser.frequencyBinCount);\n      osciA.type = 'sine';\n      osciA.connect(volume);\n      osciA.connect(analyser);\n      volume.connect(audioContect.destination);\n      volume.gain.value = 1;\n      osciA.start();\n    ```", "```js\n      // set oscillator frequency from mouse's x-position\n      document.addEventListener('mousemove', event => {\n        osciA.frequency.value = event.clientX;\n        mouseY = event.clientY;\n      });\n    ```", "```js\n    // start drawing\n      draw();\n    ```", "```js\n      // the draw function\n      function draw() {\n        let drawing = window.requestAnimationFrame(draw); // Repeat the drawing function on every animation frame\n        analyser.getFloatTimeDomainData(waveform);\n        canvasContext.clearRect(0,0,canvas.width,canvas.height); // empty the canvas, so we don't get arcs drawn on top of each other\n        canvasContext.beginPath();\n    ```", "```js\n        // plot a section of the circle for each part of the waveform\n        for(let i = 0; i<waveform.length; i++) {\n          let radius = Math.abs(((width / 2) - mouseY) + (waveform[i] * 15));\n    ```", "```js\n          let startAngle = ((2 / waveform.length) * i) * Math.PI;\n    ```", "```js\n          canvasContext.arc(centerX, centerY, radius, startAngle, endAngle);\n        }\n    ```", "```js\n        canvasContext.stroke();\n      };\n    })\n    ```", "```js\n    const express   = require('express');\n    const multer            = require('multer');\n    const MySQL             = require('MySQL');\n    const morgan    = require('morgan')\n    const app               = express();\n    const port              = 3000;\n    ```", "```js\n    // Middleware for logging requests\n    app.use(morgan(':method :status :url - :response-time ms'));\n    ```", "```js\n    /*\n    * Database\n    */\n    // Creating MySQL Connection\n    let connection = MySQL.createConnection({\n       host         : 'localhost',\n       user         : 'root',\n       password     : '12345678',\n       database     : 'packt_JavaScript'\n    });\n\n    // Connection to db\n    connection.connect();\n    ```", "```js\n    npm i multer --save\n    ```", "```js\n    /*\n    * File Upload Settings\n    */\n    let storage = multer.diskStorage({\n            destination: (req, file, cb) => {\n                      cb(null, 'public/images')\n            },\n            filename: (req, file, cb) => {\n                    let ext = file.originalname.split('.').pop();\n                      cb(null, 'img_' + Date.now() + '.' + ext);\n            }\n    });\n    let upload = multer({storage: storage});    \n    ```", "```js\n    app.js\n    39 /*\n    40 * Routing\n    41 */\n    42 // Landing route\n    43 app.get('/', (req, res) => res.send('Hello World!'))\n    44 \n    45 // Upload image route\n    46 app.post('/upload/image', upload.single('image'), function (req, re s) {\n    47        // Column name: values\n    48        let payload = {\n    49                filename: req.file.filename,\n    50                type: req.file.mimetype,\n    51                original_name: req.file.originalname,\n    52                path: req.file.path,\n    53                size: req.file.size\n    54 }\n    The full code is available at: https://packt.live/2NIE6RR\n    ```", "```js\n    // Start listening to requests\n    app.listen(port, () => console.log(`App listening on port http://localhost:${port}!`))\n    ```", "```js\n    solution_using_jquery_ajax.html\n        $.ajax({\n            method: 'post',\n            dataType: 'json',\n            url: 'https://reqres.in/api/users',\n    ```", "```js\n            data: {\n                \"name\": \"Beyonce Knowles\",\n                \"occupation\": \"artist\"\n            },\n    ```", "```js\n            success: function (data) {\n                console.log(\"Returned id \" + data.id + \n                            \", createdAt \" + data.createdAt);\n                console.log(data);\n                }\n            });\n    ```", "```js\n    $.post('https://reqres.in/api/users',\n    ```", "```js\n    {\n                \"name\": \"Beyonce Knowles\",\n                \"occupation\": \"artist\"\n            },\n    ```", "```js\n    function (data) {\n                console.log(\"Returned id \" + data.id + \n                            \", createdAt \" + data.createdAt);\n                console.log(data);\n            },\n    ```", "```js\n    'json'\n        );\n    ```", "```js\n    const url = \"https://reqres.in/api/users\";\n    var xhttp = new XMLHttpRequest();\n    ```", "```js\n    xhttp.open('POST', url);\n    ```", "```js\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader('Accept', 'application/json');\n    ```", "```js\n    xhttp.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 201) {\n            const data = JSON.parse(this.response);\n            console.log(\"Returned id \" + data.id + \n                        \", createdAt \" + data.createdAt);\n            console.log(data);\n        }\n    }\n    ```", "```js\n    var data = JSON.stringify({\n        \"name\": \"Beyonce Knowles\",\n        \"occupation\": \"artist\"\n    });\n    ```", "```js\n    xhttp.send(data);\n    ```", "```js\n        ([2-9]\\d{2}-|\\([2-9]\\d{2}\\) )\n    where Regex for XXX-\\Regex for (XXX)\n    ```", "```js\n        ^([2-9]\\d{2}-|\\([2-9]\\d{2}\\) )\\d{3}-\\d{4}$\n    ```", "```js\n        (\\+\\d{1,3} )?\n    ```", "```js\n        ^(\\+\\d{1,3} )?([2-9]\\d{2}-|\\([2-9]\\d{2}\\) )\\d{3}-\\d{4}$\n    ```", "```js\n        ^(\\+\\d{1,3} )?([2-9]\\d{2}|\\([2-9]\\d{2}\\))[-. ] set allows a dash, dot, or space character to be used as the separator.This modification now allows all the formats shown in the following screenshot to match:NoteOne flaw with this regex is that it allows you to mix and match what characters are used as separators. For example, you can use a dash and dot, like so: 234-567.8910\\. It is possible to make the regex stronger, but the result will end up being very long and convoluted.\n    ```", "```js\n    document.getElementById(\"calc_button\").addEventListener(\"click \", processForm);\n    function processForm() {\n        resetErrorsAndResults();\n        const formFields = getFormFields();\n        const validationError = formFields.validate();\n        if (validationError) {\n            displayError(validationError);\n            return;\n        }\n        const result = doCalculation(formFields);\n        displayResult(result);\n    }\n    ```", "```js\n    function resetErrorsAndResults() {\n        document.getElementById(\"error\").innerHTML = \"\";\n        document.getElementById(\"result\").innerHTML = \"\";\n    }\n    ```", "```js\n    activity_solution.html\n    63 class FormFields {\n    64     constructor(numHours, payRate, workerType) {\n    65         this.numHours = numHours;\n    66         this.payRate = payRate;\n    67         this.workerType = workerType;\n    68     }\n    69\n    70     validate() {\n    71         let validationError = this.validateNumHours();\n    72         if (validationError) {\n    73             return validationError;\n    74         }\n    The full code is available at: https://packt.live/372KXxp\n    ```", "```js\n    function getFormFields() {\n        const numHours = document.getElementById(\"numHours\").value;\n        const payRate = document.getElementById(\"payRate\").value;\n        const workerType =\n            document.querySelector('input[name=\"workerType\"]:checked').value;\n        return new FormFields(numHours, payRate, workerType);\n    }\n    ```", "```js\n    function displayError(error) {\n        document.getElementById(\"error\").innerHTML = error;\n    }\n    function displayResult(result) {\n        document.getElementById(\"result\").innerHTML =\n            `Total pay check: ${result.toFixed(2)}`;\n    }\n    ```", "```js\nactivity_solution.html\n108 const calculateFunctions = {\n109     \"standard\": calculateStandardWorkerPay,\n110     \"no_overtime\": calculateNoOvertimeWorkerPay,\n111     \"double_overtime\": calculateDoubleOvertimeWorkerPay\n112 };\n113 \n114 function doCalculation(formFields) {\n115     // determine function to use for calculation based on worker type\n116     const calculateFunction = calculateFunctions[formFields.workerType];\n117     return calculateFunction(formFields.numHours, formFields.payRate);\n118 }\n119 \n120 function calculateStandardWorkerPay(numHours, payRate) {\n121     if (numHours < 40) {\n122         return numHours * payRate;\n123     }\nThe full code is available at: https://packt.live/373ThN5\n```", "```js\n    mkdir my_app\n    cd my_app\n    npm init\n    ```", "```js\n    npm install -g parcel\n    ```", "```js\n    npm install -g typescript\n    ```", "```js\n    tsc --init\n    ```", "```js\n    message TS6071: Successfully created a tsconfig.json file.\n    ```", "```js\n    const message:string = \"Hello, World!\";\n    console.log(message);\n    ```", "```js\n    \"build\": \"parcel build src/index.ts\"\n    ```", "```js\n    npm run build\n    ```", "```js\n    lethistoryList = [];\n    ```", "```js\n    procedural.js\n    3 function add(m, n){\n    4 historyList.push(['ADD', m, n]);\n    5 return m+n;\n    6 }\n    7 \n    8 function subtract(m, n){\n    9 historyList.push(['SUB', m, n]);\n    10 return m-n;\n    11 }\n    12 \n    13 function multiply(m, n){\n    14 historyList.push(['MUL', m, n]);\n    15 return m*n;\n    16 }\n    The full code is available at: https://packt.live/2Xf6kHk\n    ```", "```js\n    function history(){\n     historyList.map((command, index)=>{\n      console.log(index+1+'.', command.join(' '));\n     })\n    }Call all the functions one by one with some random numbers as parameters:\n    console.log('ADD 2 3 :', add(2, 3));\n    console.log('SUB 2 3 :', subtract(2, 3));\n    console.log('MUL 2 3 :', multiply(2, 3));\n    console.log('DIV 2 3 :', divide(2, 3));\n    console.log('POW 2 3 :', pow(2, 3));\n    ```", "```js\n    console.log('----------------HISTORY---------------');\n    history();\n    ```", "```js\n    class Calculator {}\n    ```", "```js\n     constructor() {\n      this.historyList = []\n     }\n    ```", "```js\n    oop.js\n    6  add(m, n) {\n    7   this.historyList.push(['ADD', m, n]);\n    8   return m+n;\n    9  }\n    10 \n    11  subtract(m, n) {\n    12   this.historyList.push(['SUB', m, n]);\n    13   return m-n;\n    14  }\n    15 \n    16  multiply(m, n) {\n    17   this.historyList.push(['MUL', m, n]);\n    18   return m*n;\n    19  }\n    The full code is available at: https://packt.live/2O70oMi\n    ```", "```js\n     history() {\n      this.historyList.map((command, index)=>{\n       console.log(index+1+'.', command.join(' '));\n      })\n     }\n    ```", "```js\n    let calc = new Calculator();\n    console.log('ADD 2 3 :', calc.add(2, 3));\n    console.log('SUB 2 3 :', calc.subtract(2, 3));\n    console.log('MUL 2 3 :', calc.multiply(2, 3));\n    console.log('DIV 2 3 :', calc.divide(2, 3));\n    console.log('POW 2 3 :', calc.pow(2, 3));\n    ```", "```js\n    calc.history();\n    ```", "```js\n    solution.html\n    88 const suits =\n    89     () => [\n    90        { suit: \"hearts\", symbol: '&#9829;' },    // symbol: '♥'\n    91        { suit: 'diamonds', symbol: '&#9830;' },  // symbol: '♦'\n    92        { suit: 'spades', symbol: '&#9824;' },    // symbol: '♠'\n    93        { suit: 'clubs', symbol: '&#9827;' }      // symbol: '♣'\n    94     ];\n    95 const rankNames =\n    96     () => ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    97 \n    98 const ranks =\n    99     rankNames => rankNames.map(\n    100         (rank, index) => ({ rank, value: Math.min(10, index + 1) 101 }));\n    The full code is available at: https://packt.live/2QgJ0Y2\n    ```", "```js\n    const compose =\n        (...fns) => input => fns.reduceRight((prev, fn) => fn(prev), input);\n    const pipe = (...fns) => input => fns.reduce((prev, fn) => fn(prev), input);\n    const map = fx => arr => arr.map(fx);\n    ```", "```js\n    solution.html\n    117 const addRandom =\n    118     randomizer => deck => deck.map(card => ({\n    119         random: randomizer(),\n    120         card\n    121     }));\n    122 \n    123 const sortByRandom =\n    124     deck => [...deck].sort((a, b) => a.random - b.random);\n    125 \n    126 const shuffle =\n    127     (deck, randomizer) => {\n    128         const doShuffle = pipe(\n    129             addRandom(randomizer),\n    130             sortByRandom,\n    131             map(card => card.card)\n    132         );\n    The full code is available at: https://packt.live/2QlDGCZ\n    ```", "```js\n    const draw =\n        (deck, n = 1) => [deck.slice(0, n), deck.slice(n)];\n    const sumCards =\n        cards => cards.reduce((total, card) => total + card.value, 0);\n    const isBust =\n        total => total > 21;\n    const isGameOver =\n        (bust, stay) => bust || stay;\n    ```", "```js\n    const updateCardDisplay =\n        ({ updateHTML }, hand) => {\n            const cardHtml = hand.map((card, index) => \n                `<div class=\"card ${card.suit}\"\n                    style=\"top: -${index * 120}px; \n                           left: ${index * 100}px;\">\n                    <div class=\"top rank\">${card.rank}</div>\n                    <div class=\"bigsuit\">${card.symbol}</div>\n                    <div class=\"bottom rank\">${card.rank}</div>\n                 </div>`);\n            updateHTML(\"cards\", cardHtml.join(\"\"));\n        };\n    ```", "```js\n    const showOrHide =\n        (updateStyle, element, hide) =>\n            updateStyle(element, \"display\", hide ? \"none\" : \"\");\n    const updateStatusDisplay =\n        ({ updateStyle, updateHTML }, hand, stay) => {\n            const total = sumCards(hand);\n            updateHTML(\"totalSpan\", total);\n            const bust = isBust(total);\n            const gameover = isGameOver(bust, stay);\n            showOrHide(updateStyle, \"playBtn\", !gameover);\n            showOrHide(updateStyle, \"hitBtn\", gameover);\n            showOrHide(updateStyle, \"stayBtn\", gameover);\n            let statusMsg = gameover ?\n                \"Game over.  Press New Game button to start again.\" :\n                \"Select Hit or Stay\";\n            statusMsg = bust ? \"You went bust!!! \" + statusMsg : statusMsg;\n            updateHTML(\"statusMsg\", statusMsg);\n        };\n    ```", "```js\n    const playHandler = (randomizer, { getState, setState }) => () => {\n         const orderedDeck = createOrderedDeck(suits(), ranks(rankNames()));\n         let gameDeck = shuffle(orderedDeck, randomizer);\n         [hand, gameDeck] = draw(gameDeck, 2);\n         setState(hand, gameDeck);\n     };\n\n    const hitHandler = ({ getState, setState }) => () => {\n         [hand, gameDeck] = getState();\n         [card, gameDeck] = draw(gameDeck, 1);\n         setState(hand.concat(card), gameDeck);\n     };\n\n    const stayHandler = ({ getState, setState }) => () => {\n         [hand, gameDeck] = getState();\n    setState(hand, gameDeck, true);\n    };\n    ```", "```js\n    Solution.html\n    206 // impure functions\n    207 \n    208 const byId =\n    209     elementId => document.getElementById(elementId);\n    210 \n    211 const updateHTML =\n    212     (elementId, html) => byId(elementId).innerHTML = html;\n    213 \n    214 const updateStyle =\n    215     (elementId, style, value) => byId(elementId).style[style] = value;\n    216 \n    217 const randomizer =\n    218     Math.random;\n    The full code is available at: https://packt.live/2FnuFCH\n    ```", "```js\n    const createState = (dom) => {\n        let _state;\n        const getState = () => [..._state];\n        const setState =\n            (hand, gameDeck, stay = false) => {\n                _state = [hand, gameDeck];\n                updateCardDisplay(dom, hand);\n                updateStatusDisplay(dom, hand, stay);\n            };\n        return { getState, setState };\n    }\n    startGame(createState(dom));\n    ```", "```js\n    (async () => {  \n        let p1 = use1(); \n        let p2 = use2(); \n        let p3 = use3(); \n    ```", "```js\n        let p1 = await use1();\n        let p2 = await use2();\n        let p3 = await use3();\n    ```", "```js\n        await p1;\n        await p2;\n        await p3;\n    ```", "```js\nactivity1_solution.js\n31     console.log(\"All done!\");\n32 })();\n33 \n34 async function use1() {\n35     let response = await addDelay(3000, fetch(nextEventUrl));\n36     let nextEvents = await response.json();\n37     console.log(\"Use case 1: \" + nextEvents.events[0].strEvent);\n38 }\n39 \n40 async function use2() {\n41     let response = await fetch(nextEventUrl);\n42     await addDelay(1000);\n43     let nextEvents = await response.json();\n44     console.log(\"Use case 2: \" + nextEvents.events[1].strEvent);\nThe full code is available at: https://packt.live/32JulHw\n```", "```js\n    function getTeamsInLeague(leagueName) {\n    ```", "```js\n    return leagueData => {\n        const leagueId = findLeagueId(leagueData, leagueName);\n            return myFetch(ALL_TEAMS_URL, {id: leagueId});\n        }\n    }\n    ```", "```js\n    // technique #2 – use a function variable and multiple arrow functions\n    const getPlayersOnTeam = teamName => teamData => {\n        const teamId = findTeamId(teamData, teamName);\n        return myFetch(ALL_PLAYERS_URL, {id: teamId});\n    }\n    ```", "```js\n    myFetch(ALL_LEAGUES_URL)\n      .then(getTeamsInLeague(LEAGUE_NAME))\n      .then(getPlayersOnTeam(TEAM_NAME))\n      .then(getPlayerHonors)\n      .catch(console.log)\n    ```", "```js\n    const allLeagueData = await myFetch(ALL_LEAGUES_URL);\n    const partiallyAppliedFunction = getTeamsInLeague(LEAGUE_NAME);\n    const league = await partiallyAppliedFunction(allLeagueData);\n    ```"]