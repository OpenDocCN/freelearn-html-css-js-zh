- en: Chapter 3. Going Command Line
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章. 命令行操作
- en: For our third project, we are going to change it up a bit from our reliance
    on Sencha Designer. In this chapter, we will explore the uses of Sencha's free
    command-line tool called **Sencha Cmd**. Using this new toolset, we can quickly
    generate the basic skeleton of a new application, create controllers and models,
    and compile our application into a native application for iOS and Android.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第三个项目，我们将从对 Sencha Designer 的依赖中做出一些改变。在本章中，我们将探讨 Sencha 的免费命令行工具 **Sencha
    Cmd** 的用法。使用这个新的工具集，我们可以快速生成新应用程序的基本框架，创建控制器和模型，并将我们的应用程序编译成适用于 iOS 和 Android
    的原生应用程序。
- en: The application for this chapter is a simple time tracker for scheduling break
    times. We call it **TimeCop**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的应用程序是一个简单的用于安排休息时间的计时器应用程序。我们称之为 **TimeCop**。
- en: The TimeCop application lets the user set an alert for a certain amount of time
    in the future (say 15 minutes for break time). Once the time is set, the start
    button is pressed, and an alert will appear after the appropriate delay. The simplicity
    of this application will allow us to focus on some of the details and issues involved
    in using Sencha Cmd and creating a compiled application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: TimeCop 应用程序允许用户为未来的某个时间设置提醒（例如，为休息时间设置15分钟）。一旦设置时间，按下开始按钮，在适当的延迟后会出现提醒。这个应用程序的简单性将使我们能够关注使用
    Sencha Cmd 和创建编译应用程序涉及的某些细节和问题。
- en: 'In this chapter we will cover:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Creating a basic application using Sencha Cmd
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sencha Cmd 创建基本应用程序
- en: Features of Sencha Cmd
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sencha Cmd 的功能
- en: Creating a developer account for iOS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 iOS 创建开发者账户
- en: Provisioning an application for iOS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 iOS 配置应用程序
- en: Creating the correct file configurations
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建正确的文件配置
- en: Adding native notifications
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加原生通知
- en: Compiling the application
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译应用程序
- en: The basic application
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本应用程序
- en: The TimeCop application is designed as a simple way to track when your break
    or lunch time is over. The application consists of four main buttons labeled **5**,
    **10**, **30**, and **60**. Clicking on any of these buttons will cause a fifth
    button to appear in the center. This button will display the amount of time the
    user selected and serves as a start button. The user can add differing amounts
    of allotted time by clicking the four outer buttons multiple times.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: TimeCop 应用程序被设计为一个简单的跟踪你的休息或午餐时间结束的方式。该应用程序由四个主要按钮组成，分别标记为**5**、**10**、**30**和**60**。点击这些按钮中的任何一个都会在中心出现一个第五个按钮。此按钮将显示用户选择的时间量，并作为开始按钮。用户可以通过多次点击四个外围按钮来添加不同的分配时间。
- en: '![The basic application](img/8901OS_1.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![基本应用程序](img/8901OS_1.jpg)'
- en: For example, clicking on the **5** button twice will place 10 minutes on our
    allotted time in the center button. Clicking the **5** button once and then clicking
    the **10** button once will place **15** minutes on our allotted time. Once the
    desired amount of time is reached, the user clicks the center button and the countdown
    begins. When the countdown ends, the user is alerted via a device notification.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，点击**5**按钮两次将在中心按钮的分配时间内放置10分钟。点击**5**按钮一次然后点击**10**按钮一次将在分配时间内放置**15**分钟。一旦达到所需的时间量，用户点击中心按钮，倒计时开始。当倒计时结束时，用户将通过设备通知被提醒。
- en: Installing Sencha Cmd
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Sencha Cmd
- en: 'Sencha Cmd is a separate download from our Sencha Touch code and can be found
    at: [http://www.sencha.com/products/sencha-cmd/download](http://www.sencha.com/products/sencha-cmd/download).
    The download is available for Windows, OSX, and Linux (32 and 64 bit). When you
    unzip the downloaded file, you can double-click on it to install Sencha Cmd.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Sencha Cmd 是从我们的 Sencha Touch 代码中单独下载的，可以在[http://www.sencha.com/products/sencha-cmd/download](http://www.sencha.com/products/sencha-cmd/download)找到。下载适用于
    Windows、OSX 和 Linux（32位和64位）。当你解压下载的文件时，你可以双击它来安装 Sencha Cmd。
- en: Note
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For this book we are using Sencha Cmd Version 3 (at least 3.0.0.250 is required).
    Detailed installation instructions can be found at: [http://docs.sencha.com/ext-js/4-1/#!/guide/command](http://docs.sencha.com/ext-js/4-1/#!/guide/command).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这本书，我们使用 Sencha Cmd 版本 3（至少需要 3.0.0.250）。详细的安装说明可以在[http://docs.sencha.com/ext-js/4-1/#!/guide/command](http://docs.sencha.com/ext-js/4-1/#!/guide/command)找到。
- en: 'Once you have installed Sencha Cmd, you can open up the command line on your
    computer as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了 Sencha Cmd，你可以在计算机上按照以下方式打开命令行：
- en: On Mac OSX, go to **Applications** and launch **Terminal**
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Mac OSX 上，转到**应用程序**并启动**终端**
- en: On Windows, go to **Start** | **Run** and type `cmd`
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，转到**开始** | **运行**并输入`cmd`
- en: 'From here you will need to change to the directory where your Sencha Touch
    files are installed (not the Sencha Cmd files we just downloaded, but your original
    Sencha Touch 2.1 files):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，你需要切换到你的Sencha Touch文件安装的目录（不是我们刚刚下载的Sencha Cmd文件，而是你的原始Sencha Touch 2.1文件）：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you have changed directories, type:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你切换到目录，请输入：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should see something like the following screenshot in your terminal:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在终端看到以下截图类似的内容：
- en: '![Installing Sencha Cmd](img/8901OS_03_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![安装Sencha Cmd](img/8901OS_03_02.jpg)'
- en: This text gives you a quick overview of the commands available and the version
    of Sencha Cmd you are currently running (this should be Version 3.0.0.250 or higher).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这段文本为你提供了可用的命令的快速概述以及你当前运行的Sencha Cmd版本（这应该是版本3.0.0.250或更高）。
- en: Advantages of Sencha Cmd
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sencha Cmd的优势
- en: 'One of the big advantages of Sencha Cmd is that, unlike Designer, it is provided
    free of charge. Sencha Cmd can also handle a lot of our repetitive coding for
    us. For example, you can generate a complete application skeleton by executing
    the following command from your Sencha Touch 2.1 directory:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Sencha Cmd的一个主要优势是，与Designer不同，它是免费提供的。Sencha Cmd还可以为我们处理很多重复的编码工作。例如，你可以通过从你的Sencha
    Touch 2.1目录执行以下命令来生成一个完整的应用程序骨架：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will create a new application called `MyApp` in the directory specified.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在指定的目录中创建一个名为`MyApp`的新应用程序。
- en: 'You can also create models from the command line using something like this
    in your new application directory:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在新的应用程序目录中使用类似以下命令从命令行创建模型：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This will create a complete model for a user with the five specified fields,
    and will make sure that the `id` field is an integer.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为具有五个指定字段的用户创建一个完整的模型，并确保`id`字段是一个整数。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**A note about Sencha Cmd and directories**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于Sencha Cmd和目录的注意事项**'
- en: When generating the skeleton for an application, you will need to be in the
    Sencha Touch 2.1 directory. Once the application is generated, you will need to
    change to the new application directory to execute commands for generating models
    and controllers, or for building and compiling the application.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当生成应用程序骨架时，你需要位于Sencha Touch 2.1目录中。一旦应用程序生成，你需要切换到新的应用程序目录以执行生成模型和控制器、构建和编译应用程序的命令。
- en: You can also use the `build` command to automatically optimize your application
    for production. This includes resolving dependencies so that your application
    only includes the code it actually needs. Additionally, the `build` command sets
    up HTML5 application caching, minimizes all the JavaScript and CSS, as well as
    other speed and caching enhancements.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`build`命令来自动优化你的应用程序以用于生产。这包括解决依赖关系，以便你的应用程序只包含它实际需要的代码。此外，`build`命令设置了HTML5应用程序缓存，最小化了所有的JavaScript和CSS，以及其他速度和缓存增强。
- en: Let's take a look at how this works by generating our TimeCop application.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过生成我们的TimeCop应用程序来看看它是如何工作的。
- en: Generating the application skeleton
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成应用程序骨架
- en: 'We start with the `create` command in our previous example:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的例子中，我们从`create`命令开始：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You will also need to make sure that you adjust the output path to suit your
    development environment.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要确保调整输出路径以适应你的开发环境。
- en: Note
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'As we noted previously, this command should be executed from your Sencha Touch
    2.1 directory in order to work correctly. You can also specify the Sencha Touch
    directory by using the `-sdk` option like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所述，此命令应从你的Sencha Touch 2.1目录中执行以正确工作。你还可以通过使用`-sdk`选项来指定Sencha Touch目录，如下所示：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This will create the following files and directory structure in the `timecop`
    folder:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在`timecop`文件夹中创建以下文件和目录结构：
- en: '![Generating the application skeleton](img/8901OS_4.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![生成应用程序骨架](img/8901OS_4.jpg)'
- en: 'If you look at the `index.html` file, you will see that it already sets up
    the basic application and includes the following JavaScript:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看`index.html`文件，你会看到它已经设置了基本的应用程序，并包含了以下JavaScript：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is the autoloader, which will automatically include the rest of the JavaScript
    we need. It also includes a loading indication in CSS. This will fire off while
    the application loads, to alert the user that things are happening behind the
    scenes. You shouldn't need to touch the `index.html` file.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是自动加载器，它将自动包含我们需要的其余JavaScript代码。它还在CSS中包含一个加载指示。当应用程序加载时，这将触发，以提醒用户后台正在发生事情。你不应该需要触摸`index.html`文件。
- en: 'The `app.js` file has a few more interesting pieces included:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.js`文件包含了一些更有趣的部分：'
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `Ext.Loader.setPath` function at the top will point to our `touch` directory
    where all of our base Sencha Touch 2 library files are located.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部的 `Ext.Loader.setPath` 函数将指向我们的 `touch` 目录，其中包含所有我们的基础 Sencha Touch 2 库文件。
- en: The next section sets up the name of our application, our required components,
    our views, our icons, and the startup screens.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分设置应用程序的名称、所需组件、视图、图标和启动屏幕。
- en: The `launch` section removes our loading indicator and then adds our `TimeCop.view.Main`
    to the viewport.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`launch` 部分将移除我们的加载指示器，并将 `TimeCop.view.Main` 添加到视图中。'
- en: 'If you navigate to the folder in Safari and look at the application, you will
    see something like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Safari 导航到文件夹并查看应用程序，你会看到如下内容：
- en: '![Generating the application skeleton](img/8901OS_5.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![生成应用程序骨架](img/8901OS_5.jpg)'
- en: Most of the actual display code for this application is contained in the `TimeCop.view.Main`
    file. This is the file we will modify to create our actual application.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序的实际显示代码的大部分都包含在 `TimeCop.view.Main` 文件中。这是我们稍后将要修改以创建实际应用程序的文件。
- en: Creating the TimeCop layout
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 TimeCop 布局
- en: 'The layout for this application consists of a vbox layout on our main container.
    Inside the main container is a set of three containers, each with an hbox layout
    and containing three additional containers. This gives us a flexible 3 x 3 grid
    where we can place our components:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序的布局由主容器上的 vbox 布局组成。在主容器内部是一组三个容器，每个容器都有一个 hbox 布局，并包含三个额外的容器。这为我们提供了一个灵活的
    3 x 3 网格，我们可以在此网格中放置我们的组件：
- en: '![Creating the TimeCop layout](img/8901OS_03_06.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![创建 TimeCop 布局](img/8901OS_03_06.jpg)'
- en: Inside of containers **1**, **3**, **7**, and **8** we need buttons with our
    four time increments. In container **5** we will place our start button. By using
    the `vbox` and `hbox` layouts as described later in this section we can keep our
    components centered regardless of the screen size.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在容器 **1**、**3**、**7** 和 **8** 内，我们需要带有四个时间增加按钮。在容器 **5** 中我们将放置启动按钮。通过使用本节稍后描述的
    `vbox` 和 `hbox` 布局，我们可以使组件在屏幕大小变化时保持居中。
- en: The containers for our buttons can be given a fixed width (in this case we choose
    `120`). The empty containers in the row are then given a `flex` value of `1`.
    This will cause them to take up the rest of the available space and maintain an
    even spacing between our buttons regardless of screen size.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的按钮容器可以设置一个固定宽度（在这种情况下我们选择 `120`）。该行中的空容器将被赋予一个 `flex` 值为 `1`。这将导致它们占据剩余的可用空间，并在屏幕大小变化时保持按钮之间的均匀间距。
- en: 'For example, our first row is laid out like so:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们的第一行布局如下：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You will notice that each of our buttons has an `xtype` type of `incrementButton`,
    but different values for text (`5` and `10`). We will come back to that in just
    a moment, but we need to take a look at our second row first.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们的每个按钮都有一个 `xtype` 类型为 `incrementButton`，但文本值（`5` 和 `10`）不同。我们稍后会回到这一点，但首先我们需要看看我们的第二行。
- en: 'The second `hbox` container row is a variation on the first row; a single fixed-width
    container in the center and a variable-width (`flex:1`) container on either side:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个 `hbox` 容器行是第一行的变体；中间有一个固定宽度的容器，两侧是可变宽度的（`flex:1`）容器：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Our `startButton` in the center starts out hidden by default and it will only
    appear when the `incrementButtons` are tapped. We set `ui` to `roundStart`, which
    we will use later on to style the button, and we set the `text` value of the button
    to `0` (we will use this value later in our `incrementButton` functions). We also
    add a listener for our `startButton` instance's tap event.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 居中的 `startButton` 默认情况下是隐藏的，并且只有在点击 `incrementButtons` 时才会出现。我们将 `ui` 设置为 `roundStart`，稍后我们将使用它来设置按钮样式，并将按钮的
    `text` 值设置为 `0`（我们将在 `incrementButton` 函数中稍后使用此值）。我们还为 `startButton` 实例添加了一个点击事件监听器。
- en: Our third row is simply a copy of our first row, with the button values set
    to `30` and `60` respectively. Both of these buttons will have `xtype:incrementButton`
    as in the first row.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第三行只是第一行的复制，按钮值分别设置为 `30` 和 `60`。这两个按钮都将具有 `xtype:incrementButton`，就像第一行一样。
- en: Creating the theme
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建主题
- en: The base layout we currently have will give us a bunch of large, ugly, square
    buttons. We want something a bit cooler than that, so we are going to set a new
    theme for the application. Sencha Touch Themes use SASS and Compass to customize
    the user interface in a number of interesting ways.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前的基础布局将给我们一大堆大而丑陋的正方形按钮。我们想要比这更酷的东西，因此我们将为应用程序设置一个新的主题。Sencha Touch 主题使用
    SASS 和 Compass 以多种有趣的方式自定义用户界面。
- en: Note
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more information on creating Sencha Touch themes, review the documentation
    and tutorial videos at: [http://docs.sencha.com/touch/2-0/#!/guide/theming](http://docs.sencha.com/touch/2-0/#!/guide/theming).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 关于创建Sencha Touch主题的更多信息，请参阅文档和教程视频：[http://docs.sencha.com/touch/2-0/#!/guide/theming](http://docs.sencha.com/touch/2-0/#!/guide/theming)。
- en: 'The first step in our theme is adding a `ui` configuration for our buttons.
    The four time increment buttons will have `ui: ''round''` added to their configuration
    options. This will give us a more pleasing circular button.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '我们主题的第一步是为我们的按钮添加一个`ui`配置。四个时间增量按钮将在其配置选项中添加`ui: ''round''`。这将给我们一个更令人愉悦的圆形按钮。'
- en: 'The center button will have `ui: ''roundStart''` added to its configuration
    options. We will make `ui` inherit all of our qualities from our original round
    ui and add some color changes to give us a green start button.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '中心按钮将在其配置选项中添加`ui: ''roundStart''`。我们将使`ui`继承我们原始圆形ui的所有特性，并添加一些颜色变化，以给我们一个绿色的开始按钮。'
- en: 'We can then add the following code to `app.scss`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以将以下代码添加到`app.scss`中：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The key pieces of this are `-webkit-border-radius: 60px` (half of our button
    width/height), which makes the buttons circular, and `background: -webkit-gradient`,
    which creates the gradient background of the buttons.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '这其中的关键部分是`-webkit-border-radius: 60px`（按钮宽度/高度的一半），这使得按钮呈圆形，以及`background:
    -webkit-gradient`，它创建了按钮的渐变背景。'
- en: 'We do something similar with our start button, but we make the text white and
    the background green:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对开始按钮做类似的事情，但我们将文本设置为白色，背景设置为绿色：
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Running `compass compile` will regenerate the `app.css` file with our new styles
    in it. Now that we have the basic look and feel of our application, we need to
    talk about using the native APIs in a Sencha Touch application.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`compass compile`将重新生成包含我们新样式的`app.css`文件。现在我们已经有了应用程序的基本外观和感觉，我们需要讨论在Sencha
    Touch应用程序中使用原生API。
- en: Creating the increment button
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建增量按钮
- en: Since each of our increment buttons will do much the same thing, this becomes
    an excellent opportunity to create a button class.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的每个增量按钮都将执行类似的功能，这成为创建按钮类的一个绝佳机会。
- en: 'To do this we will make a separate file on our view folder called `incrementButton.js`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，我们将在视图文件夹中创建一个名为`incrementButton.js`的单独文件：
- en: '[PRE12]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This code extends the standard `Ext.Button` class and sets defaults for `itemID`,
    `text`, and `ui` (we will use `ui` later on to style the buttons). We also add
    a tap listener for when the user presses the button.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码扩展了标准的`Ext.Button`类，并为`itemID`、`text`和`ui`（我们将在后面使用`ui`来设置按钮样式）设置了默认值。我们还添加了一个监听器，用于用户按下按钮时。
- en: 'When our time increment button is tapped, we need to add the appropriate time
    to our start button in the center and display it (if it is hidden). We will do
    this by adding the following to our tap handler function after the `Config` section
    in our previous code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们的时间增量按钮被点击时，我们需要将适当的时间添加到中心开始按钮中，并显示它（如果它是隐藏的）。我们将通过在之前代码的`Config`部分之后添加以下内容来实现这一点：
- en: '[PRE13]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This code grabs the text from our current button, which is `5`, and then grabs
    the start button. We then add the values from the two buttons together and set
    this as the text on our start button. Since this function is now a part of the
    base `incrementButton`, each of our four buttons with an `xtype` of `incrementButton`
    will be able to use this same function. The only thing that will change is the
    text value of the button. This allows you to easily choose other time increments
    if you desire.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码从我们的当前按钮中获取文本，该按钮是`5`，然后获取开始按钮。然后我们将两个按钮的值相加，并将此值设置为开始按钮上的文本。由于此函数现在是基本`incrementButton`的一部分，我们具有`xtype`为`incrementButton`的四个按钮都将能够使用此相同的功能。唯一会改变的是按钮的文本值。这允许你轻松选择其他时间增量，如果你需要的话。
- en: 'Using the buttons works like this: when the user first starts the application,
    the start button is hidden and has a text value of **0**. The user taps the **5**
    button and the start button appears, 5 is added to 0 and the start button''s text
    is set to **5**. The user then taps the **10** button, causing the start button
    text to be increased to **15** and so on.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 使用按钮的方式如下：当用户首次启动应用程序时，开始按钮是隐藏的，其文本值为**0**。用户点击**5**按钮，开始按钮出现，5加到0上，开始按钮的文本设置为**5**。然后用户点击**10**按钮，导致开始按钮文本增加到**15**，依此类推。
- en: Creating the start button
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建开始按钮
- en: 'Our start button uses a separate function to begin the timer countdown. In
    this case, we will add a listener to our main view:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的开始按钮使用一个单独的函数来开始计时器的倒计时。在这种情况下，我们将监听器添加到我们的主视图中：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This will fire a function called `onStartButtonTap`. We add this new function
    after the `Config` section of our `Main.js` file. This is the function that starts
    the countdown for the timer:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这将触发一个名为`onStartButtonTap`的函数。我们在`Main.js`文件的`Config`部分之后添加这个新函数。这是启动计时器倒计时的函数：
- en: '[PRE15]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This function grabs the text of the buttons, which is now set for the total
    amount of time we want to set on our timer. We then create a `setTimeout` function
    that will display a message box after the timer finishes. For the purposes of
    testing, we have set the delay for delay *1000, which will actually give us our
    delay time in seconds instead of minutes. When we want to set the delay to minutes,
    the last line can be changed to:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数获取按钮的文本，现在设置为我们要在计时器上设置的总时间。然后我们创建一个`setTimeout`函数，在计时器完成后显示消息框。为了测试目的，我们已将延迟设置为*1000，这将实际上给我们提供秒而不是分钟的延迟时间。当我们想要将延迟设置为分钟时，最后一行可以更改为：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: For testing purposes let's leave the code as is for now and test the functions.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试目的，我们现在暂时保留代码不变，并测试这些函数。
- en: '![Creating the start button](img/8901OS_7.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![创建开始按钮](img/8901OS_7.jpg)'
- en: As we can see from our example, the alert appears once the delay time expires.
    However this doesn't currently use any of the native alerts available on the device.
    In order to do this, we need to take a look at `Ext.device`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从示例中看到的那样，警报在延迟时间到期时出现。然而，目前这并没有使用设备上可用的任何原生警报。为了做到这一点，我们需要查看`Ext.device`。
- en: Using native APIs with Ext.device
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ext.device与原生API
- en: By default, a Sencha Touch application is web-based. This means that a user
    on Android or iOS will use a web browser to access your application. You can add
    the web page to the desktop and it will look and behave very much like a compiled
    application. However, there are a number of features available on a mobile device
    that cannot be accessed through a web-based application; these include things
    like the camera, the device orientation, connection monitoring, native alerts,
    and some native geolocation features.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Sencha Touch应用程序是基于Web的。这意味着Android或iOS上的用户将使用网络浏览器来访问你的应用程序。你可以将网页添加到桌面，它将非常类似于编译应用程序的外观和行为。然而，移动设备上存在许多通过基于Web的应用程序无法访问的功能；这些包括相机、设备方向、连接监控、原生警报以及一些原生地理位置功能。
- en: Sencha Touch offers a way around this issue by using `Ext.device`. This component
    accepts JavaScript commands, which will then be translated into native functions
    when the application is compiled.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Sencha Touch通过使用`Ext.device`提供了一种绕过此问题的方法。该组件接受JavaScript命令，当应用程序编译时，这些命令将被转换为原生函数。
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It should be noted that one essential consideration when using `Ext.device`
    is that the application has to be compiled each time in order to actually test
    the native application features. If you make changes, or need to do debugging,
    you will have to recompile the application and reinstall it on your mobile device.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 应该注意的是，在使用`Ext.device`时，必须每次编译应用程序才能实际测试原生应用程序功能。如果你进行更改或需要调试，你必须重新编译应用程序并在你的移动设备上重新安装它。
- en: '`Ext.device` offers the following options:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ext.device`提供了以下选项：'
- en: '**Connection**: This allows you to check if the user is online using `Ext.device.Connection.isOnline()`.
    You can also check the type of connection using `Ext.device.Connection.getType()`.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接**：这允许你使用`Ext.device.Connection.isOnline()`检查用户是否在线。你也可以使用`Ext.device.Connection.getType()`检查连接类型。'
- en: '**Notification**: This allows you to access native notification windows and
    the vibrate device option.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通知**：这允许你访问原生通知窗口和振动设备选项。'
- en: '**Orientation**: This provides the current orientation of the device tracked
    in three dimensions (alpha, beta, and gamma). These dimensions return values between
    0 and 360 and can be used to calculate various device movements.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方向**：这提供了在三维空间（alpha、beta和gamma）中跟踪的设备的当前方向。这些维度返回的值在0到360之间，可以用来计算各种设备运动。'
- en: '**Camera**: This lets your application take pictures or select existing images
    from the camera library (with your user''s permission).'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相机**：这允许你的应用程序拍照或从相机库中选择现有图像（需要用户许可）。'
- en: For TimeCop, we will use a simple notification/vibrate alert. In later chapters,
    we will cover the other `Ext.Device` components. First, though, we will need to
    take a bit of a detour and explore some of the additional steps we need to take
    to test and run compiled applications under iOS.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于TimeCop，我们将使用简单的通知/振动警报。在后面的章节中，我们将介绍其他`Ext.Device`组件。不过，首先，我们需要稍微偏离一下，探索一些额外的步骤，以便在iOS下测试和运行编译的应用程序。
- en: Testing and running native applications
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试和运行原生应用程序
- en: 'In order to run a native (compiled) application on iOS, you will need to take
    the following steps:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在iOS上运行原生（编译）应用程序，你需要采取以下步骤：
- en: Register as an Apple iOS developer (cost is $99 annually as of this writing).
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册为苹果iOS开发者（截至本文写作时，费用为每年99美元）。
- en: Enable your device for development.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用你的设备进行开发。
- en: Provision the application with Apple and create a P12 certificate.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用苹果为应用程序提供配置并创建P12证书。
- en: Install the application on your device.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的设备上安装应用程序。
- en: This process is not always intuitive, and can often seem more laborious than
    coding the actual application. If you would prefer to create an Android application,
    we will discuss building native Android applications later in this chapter.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程并不总是直观的，有时甚至感觉比编写实际应用程序还要繁琐。如果你更愿意创建Android应用程序，我们将在本章后面讨论如何构建原生Android应用程序。
- en: Registering as a developer
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册为开发者
- en: In order to publish your application to the Apple Store, or even to simply test
    compiled iOS applications, you are going to have to sign up for a developer account.
    There is a fee to become a developer (the cost is $99 annually as of this writing),
    and Apple will require quite a bit of information about you. They require this
    information for several reasons. First, they have to know who you are so that
    you can get paid for apps that you sell in their store. Second, they need to know
    how to contact you if there's a problem with your application. And last, they
    need to be able to track you down if you try to do something evil with your app.
    Not that you would, of course.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将你的应用程序发布到苹果商店，或者仅仅为了测试编译的iOS应用程序，你必须注册一个开发者账户。成为开发者需要付费（截至本文写作时，费用为每年99美元），苹果将需要你提供大量的个人信息。他们需要这些信息有几个原因。首先，他们需要知道你是谁，这样你才能从他们商店销售的应用程序中获得报酬。其次，如果您的应用程序出现问题，他们需要知道如何联系你。最后，如果他们发现你试图用你的应用程序做坏事，他们需要能够找到你。当然，你不会这么做。
- en: Even if you are not yet ready to distribute your application, you will still
    need to register as a developer in order to install a compiled application on
    your iOS device.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你还没有准备好分发你的应用程序，你仍然需要注册为开发者，以便在你的iOS设备上安装编译应用程序。
- en: Your iOS device will also need to be registered for development with Apple.
    This will allow you to install and test your own personal compiled applications
    directly from your development computer instead of going through the Apple store.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你的iOS设备也需要在苹果处注册以进行开发。这将允许你直接从你的开发计算机上安装和测试你自己的个人编译应用程序，而不是通过苹果商店。
- en: Becoming an Apple developer
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成为苹果开发者
- en: 'To become an Apple developer, first you must go to: [http://developer.apple.com/programs/register/](http://developer.apple.com/programs/register/).'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要成为苹果开发者，首先你必须去：[http://developer.apple.com/programs/register/](http://developer.apple.com/programs/register/)。
- en: You will either need to supply your existing Apple ID or sign up for a new one,
    fill out some lengthy profile information, agree to some legal documents, and
    then perform an e-mail verification. From there you will have access to the Apple
    Developer center. The two points of most interest to us as mobile developers are
    the iOS Dev Center and the iOS Provisioning Portal.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要提供现有的苹果ID或注册一个新的ID，填写一些冗长的个人资料信息，同意一些法律文件，然后进行电子邮件验证。从那里你将能够访问苹果开发者中心。对我们这些移动开发者来说，最感兴趣的两个点是iOS
    Dev Center和iOS Provisioning Portal。
- en: The **iOS Dev Center** is where you can download the iOS SDK (known as Xcode),
    as well as read documentation, see sample code and tutorials, and view some videos
    on iOS development.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**iOS Dev Center** 是你可以下载iOS SDK（称为Xcode），阅读文档，查看示例代码和教程，以及观看一些iOS开发视频的地方。'
- en: The **iOS Provisioning Portal** is where you add your application to the Apple
    store or publish test versions of your application.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**iOS Provisioning Portal** 是你可以将你的应用程序添加到苹果商店或发布应用程序测试版本的地方。'
- en: Tip
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that in order to use Xcode, install a development certificate, or publish
    your application to the Apple store, you must have a computer running OSX. Windows
    and Linux computers cannot run Xcode or publish to the Apple store.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，为了使用Xcode、安装开发证书或将您的应用程序发布到苹果商店，您必须在运行OSX的计算机上。Windows和Linux计算机无法运行Xcode或发布到苹果商店。
- en: The provisioning portal is the main area we are concerned with.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件门户是我们关注的重点区域。
- en: Provisioning an application
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置应用程序
- en: In order to run a compiled Sencha Touch application that you're developing for
    iPhone, iPad, or iPod touch, you must have a provisioning profile and a development
    certificate installed on your device and your Mac. (This is only true for compiled
    applications and not standard Sencha web applications.)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行您为iPhone、iPad或iPod touch开发的编译后的Sencha Touch应用程序，您必须在您的设备和Mac上安装配置文件和开发证书。（这仅适用于编译应用程序，不适用于标准的Sencha
    Web应用程序。）
- en: While the provisioning process can seem a bit complex, Apple has a very nice
    set of "How To…" videos listed on the right side of the provisioning portal, as
    well as a handy **Provisioning Assistant** setup wizard. The **Provisioning Assistant**
    wizard will guide you through the steps to create and install your development
    provisioning profile and iOS development certificate.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然配置过程可能看起来有些复杂，但苹果在配置文件门户的右侧列出了非常不错的“如何操作”视频，以及一个方便的**配置助手**设置向导。**配置助手**向导将引导您完成创建和安装开发配置文件和iOS开发证书的步骤。
- en: The first step in the process is to obtain a development certificate. The **development
    certificate** is an electronic document that links you as an Apple developer with
    your compiled applications. For testing purposes, the certificate gets loaded
    onto your iOS device and it lets the device know that it's okay to run your application.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 处理流程的第一步是获取一个开发证书。**开发证书**是一个电子文档，它将您作为苹果开发者与您的编译应用程序联系起来。出于测试目的，证书会被加载到您的iOS设备上，并让设备知道运行您的应用程序是安全的。
- en: The provisioning profile is used when your application is compiled. It contains
    a separate set of development certificates, a device ID, and an app ID. This is
    checked against the original development certificate to authorize the application
    to run on your device.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的应用程序编译时，会使用配置文件。它包含一组单独的开发证书、设备ID和应用程序ID。这些信息会与原始开发证书进行核对，以授权应用程序在您的设备上运行。
- en: Meanwhile back in the code
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同时，回到代码中
- en: Now that we have our certificates properly set up, we can get back to the business
    of writing code.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经正确设置了证书，我们可以回到编写代码的业务中。
- en: Using the native notifications
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用原生通知
- en: 'To use the native notifications we need to replace our original `onStartButtonTap`
    function with a new function that uses `Ext.device`. Aside from that, the code
    for native notifications looks almost the same as our previous code:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用原生通知，我们需要将原来的`onStartButtonTap`函数替换为一个使用`Ext.device`的新函数。除此之外，原生通知的代码几乎与我们的之前代码相同：
- en: '[PRE17]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We still wrap the function in a `setTimeout` statement. We then call `Ext.device.Notification.vibrate`
    and `Ext.device.Notification.show`. This will cause the device to vibrate (if
    the device supports it) and then show our original message as before.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍然将函数包裹在`setTimeout`语句中。然后调用`Ext.device.Notification.vibrate`和`Ext.device.Notification.show`。这将导致设备振动（如果设备支持的话），然后显示我们原来的消息，就像之前一样。
- en: 'Also, `Ext.device` is not loaded by default, so we need to add it to our `app.js`
    file, in the `requires` configuration:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`Ext.device`默认不会加载，因此我们需要将其添加到`app.js`文件中的`requires`配置：
- en: '[PRE18]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Debugging problems with `Ext.device` is a difficult proposition. The `Ext.device`
    functionality is not available in desktop browsers, or when your app hasn''t been
    compiled. However, if you need to debug an app running on your mobile device,
    there are some third-party solutions out there, one of the best being **weinre**,
    which stands for **WEb INspector REmote**. You can learn more about weinre at:
    [http://people.apache.org/~pmuellr/weinre/docs/latest/](http://people.apache.org/~pmuellr/weinre/docs/latest/).'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 调试`Ext.device`的问题是一个棘手的问题。`Ext.device`功能在桌面浏览器中不可用，或者当您的应用程序未编译时。然而，如果您需要调试在您的移动设备上运行的应用程序，有一些第三方解决方案，其中之一是**weinre**，代表**WEb
    INspector REmote**。您可以在[http://people.apache.org/~pmuellr/weinre/docs/latest/](http://people.apache.org/~pmuellr/weinre/docs/latest/)了解更多关于weinre的信息。
- en: For now, though, we need to compile the application for a native iPhone using
    Sencha Cmd.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，目前我们需要使用Sencha Cmd为原生iPhone编译应用程序。
- en: Compiling the application
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编译应用程序
- en: 'In order to compile an application you will need a few things from Apple first:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 为了编译应用程序，您首先需要从苹果公司获取一些东西：
- en: A developer certificate in P12 format (for a walkthrough on this process go
    to [http://docs.sencha.com/touch/2-0/#!/guide/native_provisioning](http://docs.sencha.com/touch/2-0/#!/guide/native_provisioning))
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P12格式的开发者证书（有关此过程的说明，请访问[http://docs.sencha.com/touch/2-0/#!/guide/native_provisioning](http://docs.sencha.com/touch/2-0/#!/guide/native_provisioning)）
- en: 'A provisioning profile (from Apple Provisioning Profile, launch the Development
    Provisioning Assistant: [https://developer.apple.com/ios/manage/overview/index.action](http://%20https://developer.apple.com/ios/manage/overview/index.action))'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个配置文件（从苹果配置文件，启动开发配置助手：[https://developer.apple.com/ios/manage/overview/index.action](http://developer.apple.com/ios/manage/overview/index.action)）
- en: 'You will also need to know the application name, application ID, and bundle
    seed ID for your application. This information can be found by clicking on **configure**
    next to the application name in the **App ID** section of the portal. The format
    looks like this mockup:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要知道您应用程序的应用程序名称、应用程序ID和包种子ID。您可以通过点击门户中**App ID**部分旁边应用程序名称旁边的**配置**来找到这些信息。格式看起来像这样：
- en: '![Compiling the application](img/8901OS_8.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![编译应用程序](img/8901OS_8.jpg)'
- en: Once we have this information and the files, we need to set up our `packager.json`
    file.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了这些信息和文件，我们需要设置我们的`packager.json`文件。
- en: Setting up packager.json
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置packager.json
- en: The `packager.json` file is in the root directory of our application folder
    and it is a template originally generated for us by Sencha Cmd. We need to change
    some of the default information in order to compile the application.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`packager.json`文件位于我们的应用程序文件夹的根目录中，它是由Sencha Cmd为我们最初生成的模板。我们需要更改一些默认信息以便编译应用程序。'
- en: 'The `packager.json` file has extensive comments, so we will just take a look
    at some of the more critical settings in the file:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`packager.json`文件有大量的注释，所以我们只需查看文件中的一些更关键的设置：'
- en: '`"applicationName":"TimeCop"`'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"applicationName":"TimeCop"`'
- en: '`"applicationId":"com.example.TimeCop"`'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"applicationId":"com.example.TimeCop"`'
- en: '`"bundleSeedId":"D3THNXJT69"`'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bundleSeedId":"D3THNXJT69"`'
- en: This is where we use the values from our previous example mockup. You will need
    to change these to reflect your own application information.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们使用之前示例中的值的地方。您需要更改这些值以反映您自己的应用程序信息。
- en: Note
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that we are using example information for our `applicationID` and
    `bundleSeedId` values. You will need to change these values to the ones you get
    from Apple.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们正在使用示例信息作为我们的`applicationID`和`bundleSeedId`值。您需要将这些值更改为从苹果公司获得的值。
- en: 'The next important section is:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个重要部分是：
- en: '[PRE19]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We can leave these as is for right now, but they control how the application
    is outputted and what devices it works on. The `Configuration` type should always
    be `Debug` until you are ready to distribute the application through the app store.
    This will help you track down any code errors that you might have.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以保持这些设置不变，但它们控制着应用程序的输出方式和它能在哪些设备上运行。在您准备好通过应用商店分发应用程序之前，`配置`类型应始终为`Debug`。这将帮助您追踪可能存在的任何代码错误。
- en: 'The platform options are:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 平台选项包括：
- en: iOSSimulator
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOSSimulator
- en: iOS
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS
- en: Android
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android
- en: AndroidEmulator
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AndroidEmulator
- en: Using the `iOSSimmulator` or `AndroidEmulator` options allows you to test locally
    on your machine without an iOS or Android device. You will need to have Xcode
    and/or the Android SDK kit installed on your machine to use this option.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`iOSSimmulator`或`AndroidEmulator`选项允许您在没有iOS或Android设备的情况下在您的机器上本地测试。您需要将Xcode和/或Android
    SDK套件安装到您的机器上才能使用此选项。
- en: '`deviceType` is an iOS-only option that declares the application as `iPhone`,
    `iPad`, or `Universal` (meaning both).'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`deviceType`是一个仅适用于iOS的选项，它将应用程序声明为`iPhone`、`iPad`或`Universal`（意味着两者都适用）。'
- en: 'The last critical pieces of information are:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 最后几个关键信息是：
- en: '[PRE20]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Both `certificatePath` and `provisionProfile` should correspond to the correct
    paths to the converted P12 certificate mentioned earlier and the provisioning
    profile you downloaded from Apple.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`certificatePath`和`provisionProfile`都应该对应于之前提到的转换后的P12证书的正确路径以及您从苹果公司下载的配置文件。'
- en: Once you have the information in place, we are ready to compile the application.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了所需的信息，我们就可以编译应用程序了。
- en: 'In the command line, change to your application directory:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中，切换到您的应用程序目录：
- en: '[PRE21]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'And then type:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入：
- en: '[PRE22]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This should compile your application into an executable file and launch the
    iOS simulator.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该将您的应用程序编译成可执行文件并启动iOS模拟器。
- en: Note
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `-run` option is new in Sencha Cmd Version 3\. Previous versions would launch
    the simulator by default. You can drop the `-run` option if you only want to build
    the application.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`-run` 选项是 Sencha Cmd 版本 3 中的新功能。之前的版本会默认启动模拟器。如果你只想构建应用程序，可以省略 `-run` 选项。'
- en: '![Setting up packager.json](img/8901OS_9.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![设置 packager.json](img/8901OS_9.jpg)'
- en: This looks more like a native iPhone app should, and if the application is run
    on an iPhone, the phone will also vibrate when the notification occurs.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来更像是原生 iPhone 应用程序应有的样子，如果应用程序在 iPhone 上运行，当通知发生时，手机也会振动。
- en: The compiled application should now be in the `build/native` folder in your
    application directory. You can drag it onto iTunes to install it on your device.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的应用程序现在应该位于你的应用程序目录中的 `build/native` 文件夹中。你可以将其拖放到 iTunes 中以在设备上安装。
- en: Tip
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Installing a native application**'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装原生应用程序**'
- en: If your application fails to install, it is often helpful to try installing
    under Xcode. Connect your device and drop the application file on top of the Xcode
    application. This will launch Xcode and attempt to install the application on
    your mobile device. Xcode often gives back better error information than iTunes
    does.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用程序安装失败，尝试在 Xcode 下安装通常很有帮助。连接你的设备，并将应用程序文件拖放到 Xcode 应用程序顶部。这将启动 Xcode
    并尝试在你的移动设备上安装应用程序。Xcode 通常提供的错误信息比 iTunes 更好。
- en: Building native Android applications
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Android 原生应用程序
- en: 'Building compiled applications in Android follows a similar pattern as the
    one we used for iOS:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Android 中构建编译的应用程序遵循与我们在 iOS 中使用的类似模式：
- en: We create an Android signing certificate.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们创建一个 Android 签名证书。
- en: We create a package configuration file for Sencha Cmd to use.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为 Sencha Cmd 创建一个包配置文件。
- en: We run the Sencha Cmd packager to create an `application.apk` file, which will
    run on Android devices or the Android emulator for testing.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们运行 Sencha Cmd 打包器来创建一个 `application.apk` 文件，该文件将在 Android 设备或 Android 模拟器上运行以进行测试。
- en: The nice part is that we can still use the exact same code, all we need is a
    new certificate and some configuration changes.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 好的一点是，我们仍然可以使用完全相同的代码，我们需要的只是一个新的证书和一些配置更改。
- en: Creating the Android signing certificate
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Android 签名证书
- en: Generating the Android signing certificate is significantly less complex than
    its iOS counterpart. All of our keys can be generated on our local machine and
    there is no provisioning process for Android applications.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 生成 Android 签名证书的过程比其 iOS 对应版本简单得多。我们可以在本地机器上生成所有密钥，并且没有为 Android 应用程序设置预配过程。
- en: The first thing we need to do is download the Android SDK from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
    Once the ZIP file is downloaded, we need to extract it and save it in an appropriate
    location. For this example, we have chosen our home directory in a folder called
    `development`. When we create our configuration files, your file path information
    may vary depending on where you place the SDK.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是从 [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    下载 Android SDK。一旦 ZIP 文件下载完成，我们需要将其提取并保存在适当的位置。在这个例子中，我们选择将 SDK 保存在主目录下的一个名为 `development`
    的文件夹中。当我们创建配置文件时，你的文件路径信息可能会根据你放置 SDK 的位置而有所不同。
- en: 'The Android certificate is generated from the command line using the following
    command (all on one line):'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Android 证书是通过以下命令在命令行中生成的（所有内容都在一行中）：
- en: '[PRE23]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The important parts of this command are the `keystore` name, `time-cop.keystore`,
    and the `alias`, which is `timecop`. We will need to have these values in order
    to correctly set up our configuration file.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的重要部分是 `keystore` 名称，`time-cop.keystore`，以及 `alias`，即 `timecop`。我们需要这些值来正确设置我们的配置文件。
- en: When you execute this command, you will be prompted to create a password for
    the keystore. You will then be walked through a series of questions about your
    organization and location (these are optional, but probably a good idea).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 当你执行这个命令时，系统会提示你为 keystore 创建一个密码。然后，系统会引导你回答一系列关于你的组织位置的问题（这些是可选的，但可能是个好主意）。
- en: Once you have answered all of the questions, a file will be generated called
    `time-cop.keystore` (or whatever you named your keystore).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你回答了所有问题，将会生成一个名为 `time-cop.keystore` 的文件（或者你给 keystore 命名的任何名称）。
- en: Creating the Android configuration file
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Android 配置文件
- en: 'As with our previous iOS configuration file, we create a JSON file called `packager_android.json`.
    The format for this file will follow the same format as our previous iOS file:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们之前的 iOS 配置文件一样，我们创建一个名为 `packager_android.json` 的 JSON 文件。此文件的格式将与之前的 iOS
    文件格式相同：
- en: '[PRE24]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '`applicationName` will be the name of the `.apk` file that is created when
    we compile, which in this case, is `TimeCop.apk`.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`applicationName` 将是我们编译时创建的 `.apk` 文件名，在这个例子中，是 `TimeCop.apk`。'
- en: '`applicationId` is a unique identifier for your application, we recommend using
    something like `com.your_name.your_application_name`.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`applicationId` 是您应用程序的唯一标识符，我们建议使用类似 `com.your_name.your_application_name`
    的格式。'
- en: '`outputPath` is where the `.apk` file will be saved and `iconName` is the file
    that will be used as the icon for your application. `versionCode` and `versionString`
    are up to you and should be used to differentiate which version of the software
    is being used.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`outputPath` 是 `.apk` 文件将被保存的位置，而 `iconName` 是用作您应用程序图标的文件。`versionCode` 和
    `versionString` 由您决定，并且应该用于区分正在使用的软件版本。'
- en: '`inputPath` is the full path to your TimeCop files (or a path relative to this
    configuration file).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`inputPath` 是您的 TimeCop 文件（或相对于此配置文件的路径）的完整路径。'
- en: '`configuration` can be set to `Release` or `Debug` and `platform` can be set
    to `Android` or `AndroidEmulator`. These settings will typically be `Debug` +
    `AndroidEmulator` for testing and `Release` + `Android` for a finished application.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`configuration` 可以设置为 `Release` 或 `Debug`，而 `platform` 可以设置为 `Android` 或 `AndroidEmulator`。这些设置通常为测试时为
    `Debug` + `AndroidEmulator`，而对于完成的应用程序则为 `Release` + `Android`。'
- en: '`certificatePath` is the location of the `keystore` file that we generated
    in the previous section and `certificateAlias` is the alias we supplied as part
    of our command-line arguments when we created `keystore`.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`certificatePath` 是我们之前章节中生成的 `keystore` 文件的位置，而 `certificateAlias` 是我们在创建
    `keystore` 时作为命令行参数提供的别名。'
- en: The orientations are the viewing positions available to your application. They
    will typically stay as the defaults listed before. The device type is ignored
    by Android, but the configuration manager will return errors if the configuration
    or value is left off. You can keep this value set as `<Not applicable for Android>`
    and it will be safely ignored.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 方向是应用程序可用的查看位置。它们通常会保持为之前列出的默认值。Android 会忽略设备类型，但如果配置或值被省略，配置管理器将返回错误。您可以保持此值设置为
    `<Not applicable for Android>`，并且它将被安全地忽略。
- en: Compiling and launching the Android application
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译和启动 Android 应用程序
- en: Just like the previous iOS application, we will use the Sencha package command
    to compile the application. However, if you are testing in the Android emulator,
    you will need to start the emulator before issuing the command.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 就像之前的 iOS 应用程序一样，我们将使用 Sencha 包命令来编译应用程序。但是，如果您在 Android 模拟器中进行测试，您需要在发出命令之前启动模拟器。
- en: 'Once the emulator is running, enter the following command on the command line:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模拟器正在运行，请在命令行中输入以下命令：
- en: '[PRE25]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This will execute our `packagerAndroid.json` file we created in the previous
    section.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这将执行我们在上一节中创建的 `packagerAndroid.json` 文件。
- en: 'If you are creating a release version of the application, set `configuration`
    to `Release` and `platform` to `Android` in your `packager_android.json` configuration
    file. You can then execute the `package` command, but leave off the `run` command
    like so:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在创建应用程序的发布版本，请在您的 `packager_android.json` 配置文件中将 `configuration` 设置为 `Release`，将
    `platform` 设置为 `Android`。然后，您可以执行 `package` 命令，但省略 `run` 命令，如下所示：
- en: '[PRE26]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This will compile the application without running it in the emulator.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这将编译应用程序，但不会在模拟器中运行。
- en: Note
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Android emulator is capable of emulating a wide variety of hardware. For
    more information on the Android emulator, go to [http://developer.android.com/tools/devices/emulator.html](http://developer.android.com/tools/devices/emulator.html).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Android 模拟器能够模拟各种硬件。有关 Android 模拟器的更多信息，请访问[http://developer.android.com/tools/devices/emulator.html](http://developer.android.com/tools/devices/emulator.html)。
- en: For information on setting up different hardware profiles (sometimes called
    **Android Virtual Devices** (**ADVs**) with the Android emulator, take a look
    at the documentation available at [http://developer.android.com/tools/devices/managing-avds.html](http://developer.android.com/tools/devices/managing-avds.html).
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 关于设置不同的硬件配置文件（有时称为 Android 模拟器的 **Android 虚拟设备**（AVDs）的信息，请参阅[http://developer.android.com/tools/devices/managing-avds.html](http://developer.android.com/tools/devices/managing-avds.html)提供的文档。
- en: Once the application is running, you can begin testing the different features
    and fixing any issues.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用程序开始运行，你就可以开始测试不同的功能并修复任何问题。
- en: Summary
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter we learned about:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了以下内容：
- en: Generating an application skeleton with the Sencha SDK command-line tools
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sencha SDK 命令行工具生成应用程序骨架
- en: Using Sencha's native `Ext.device` APIs
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sencha 的原生 `Ext.device` API
- en: Provisioning iOS applications through the Apple developer portal
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过苹果开发者门户配置 iOS 应用程序
- en: Compiling a Sencha Touch web application into a native iOS app
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Sencha Touch 网络应用程序编译成原生 iOS 应用
- en: Compiling a Sencha Touch web application into a native Android app
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Sencha Touch 网络应用程序编译成原生 Android 应用
- en: In the next chapter, we will take a look at the Sencha Touch Charts package.
    The Charts package is an add-on to Sencha Touch that will let us use charts and
    graphs in our applications. We will show you how to take a standard `datastore`
    instance and use it to feed data to your charts and graphs.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 Sencha Touch Charts 包。Charts 包是 Sencha Touch 的一个附加组件，它将允许我们在应用程序中使用图表和图形。我们将向您展示如何使用标准的
    `datastore` 实例并将其用于向您的图表和图形提供数据。
