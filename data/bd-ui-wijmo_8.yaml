- en: Chapter 8. Extending Wijmo
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章。扩展 Wijmo
- en: In this chapter, I show you how to modify Wijmo's widgets and CSS styles for
    themes. You will learn how to add a button to the dialog widget without overriding
    existing buttons. Then, I introduce an easy way to modify existing Wijmo themes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我向您展示如何修改 Wijmo 的小部件和 CSS 样式以适应主题。您将学习如何在不覆盖现有按钮的情况下向对话框小部件添加按钮。然后，我介绍了一种修改现有
    Wijmo 主题的简单方法。
- en: Extending Wijmo Open
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展 Wijmo Open
- en: Wijmo Open is a set of open source jQuery UI widgets. Wijmo widgets such as
    the slider, dialog, or accordion are extensions to jQuery UI's widgets. Others,
    such as Wijmo's menu or dropdown, are new widgets.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Wijmo Open 是一套开源的 jQuery UI 小部件。Wijmo 小部件，如滑块、对话框或手风琴，是 jQuery UI 小部件的扩展。其他，如
    Wijmo 的菜单或下拉菜单，是新的小部件。
- en: Modifying the Dialog widget
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改对话框小部件
- en: In [Chapter 2](ch02.html "Chapter 2. The Dialog Widget"), *The Dialog Widget*,
    I showed you how to add custom buttons to the dialog widget without changing the
    internals. The API is unwieldy, in that you must override the icons and behavior
    for a default button. Now, I will show you how to add a custom button by extending
    the API. First, open `jquery.wijmo-open.all.js` and rename it as `jquery.wijmo-open.all.extended.js`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 2 章](ch02.html "第 2 章。对话框小部件") *对话框小部件* 中，我向您展示了如何在不更改内部结构的情况下向对话框小部件添加自定义按钮。API
    很难使用，因为您必须覆盖默认按钮的图标和行为。现在，我将向您展示如何通过扩展 API 添加一个自定义按钮。首先，打开 `jquery.wijmo-open.all.js`
    并将其重命名为 `jquery.wijmo-open.all.extended.js`。
- en: 'When you open `jquery.wijmo-open.all.extended.js` in an editor, use code folding
    to collapse all the code and search for `wijdialog`. You will get a view that
    looks like the following screenshot after expanding on the line with `varWijDialog`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在编辑器中打开 `jquery.wijmo-open.all.extended.js` 时，使用代码折叠来折叠所有代码并搜索 `wijdialog`。在展开
    `varWijDialog` 这一行后，您将得到如下截图所示的视图：
- en: '![Modifying the Dialog widget](img/6067OT_8_02.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![修改对话框小部件](img/6067OT_8_02.jpg)'
- en: 'All of the Wijmo Open widgets start with `"use strict"`. This turns on strict
    semantics for ECMAScript 5 and allows code to run faster on browsers that support
    it. Let''s take a look at those lines that start with `WijDialog.prototype`. All
    the methods that start with an underscore are private, while the other ones are
    accessible through the API and documented. Under the `_createCaptionButtons` function,
    there is a `button` object with all the buttons on the title bar. To add a `hint`
    button to the dialog title bar, we use the same format as the other buttons:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的 Wijmo Open 小部件都以 `"use strict"` 开头。这启用了 ECMAScript 5 的严格语义，并允许在支持它的浏览器上更快地运行代码。让我们看看以
    `WijDialog.prototype` 开头的那些行。所有以下划线开头的函数都是私有的，而其他的则可以通过 API 访问并已文档化。在 `_createCaptionButtons`
    函数下，有一个包含标题栏上所有按钮的 `button` 对象。要向对话框标题栏添加一个 `hint` 按钮，我们使用与其他按钮相同的格式：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '`"use strict"` may cause unexpected behavior in your code. You may want to
    check with a utility such as JSHint ([http://www.jshint.com/](http://www.jshint.com/))
    or remove strict mode altogether.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`"use strict"` 可能会导致您的代码出现意外行为。您可能想使用 JSHint ([http://www.jshint.com/](http://www.jshint.com/))
    这样的工具进行检查，或者完全移除严格模式。'
- en: 'The click event for the button is specified with the `click` option. For the
    hint button, use `self.hint`. So, we write the `hint` function as a `WijDialog`
    method:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮的点击事件使用 `click` 选项指定。对于提示按钮，使用 `self.hint`。因此，我们将 `hint` 函数作为 `WijDialog`
    方法编写：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In this function, the options are read from `self.options`, and the message
    string set in the option is used in an alert box. To use the new API for the hint
    button, we just need to set the message option:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在此函数中，选项从 `self.options` 中读取，并在选项中设置的字符串消息用于警告框中。要使用新的提示按钮 API，我们只需设置消息选项：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Be sure to change the reference to the `jquery.wijmo-open.all.js` script to
    `jquery.wijmo-open.all.extended.js`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要将 `jquery.wijmo-open.all.js` 脚本的引用更改为 `jquery.wijmo-open.all.extended.js`。
- en: Modifying a Wijmo theme with ThemeRoller
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ThemeRoller 修改 Wijmo 主题
- en: 'To modify an existing Wijmo theme, open the `jquery-wijmo.css` file in the
    `lib` folder in our project structure. You can find more themes in your Wijmo
    download under the `Themes` folder. Once you''ve opened up the CSS file, search
    for `jQuery UI CSS Framework`. There should be a comment section like the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改现有的 Wijmo 主题，请打开我们项目结构中 `lib` 文件夹下的 `jquery-wijmo.css` 文件。您可以在您的 Wijmo 下载中的
    `Themes` 文件夹下找到更多主题。一旦打开 CSS 文件，搜索 `jQuery UI CSS Framework`。应该有一个如下所示的注释部分：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When you visit the link in the browser, ThemeRoller loads the Wijmo theme.
    The theme settings can be caned under the **Roll Your Own** tab on the left side.
    You can see the Rocket theme loaded in ThemeRoller in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在浏览器中访问链接时，ThemeRoller 会加载 Wijmo 主题。主题设置可以在左侧的 **Roll Your Own** 选项卡下进行修改。以下截图显示了
    ThemeRoller 中加载的 Rocket 主题：
- en: '![Modifying a Wijmo theme with ThemeRoller](img/6067OT_8_03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ThemeRoller 修改 Wijmo 主题](img/6067OT_8_03.jpg)'
- en: For details on how to modify a theme, see [http://wijmo.com/wiki/index.php/Wijmo_Loves_ThemeRoller:_An_Overview](http://wijmo.com/wiki/index.php/Wijmo_Loves_ThemeRoller:_An_Overview).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何修改主题的详细信息，请参阅 [http://wijmo.com/wiki/index.php/Wijmo_Loves_ThemeRoller:_An_Overview](http://wijmo.com/wiki/index.php/Wijmo_Loves_ThemeRoller:_An_Overview)。
- en: Summary
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Now that you have a sense of how to change things in Wijmo, you're in a better
    position to use Wijmo in your projects. Often, the situation requires changes
    to the theme or the behavior of widgets. Wijmo makes it easy to make those changes.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经对如何在 Wijmo 中更改事物有了概念，你将更有能力在你的项目中使用 Wijmo。通常，情况需要更改主题或小部件的行为。Wijmo 使得这些更改变得简单易行。
