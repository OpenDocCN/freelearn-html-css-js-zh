- en: Chapter 5. The JavaScript Add-ons in Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章. Bootstrap中的JavaScript插件
- en: One of the most powerful features in the Bootstrap framework is JavaScript add-ons.
    In this library, we have almost all the required frontend components, such as
    modal window, carousel, dropdown, tooltip, alert, navigation tab, accordion, and
    many more. Along with the previously discussed CSS classes and components, these
    JavaScript add-ons make Bootstrap a complete suite and framework to develop your
    HTML pages—both for desktops and mobile devices.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap框架中最强大的功能之一是JavaScript插件。在这个库中，我们几乎拥有所有必需的前端组件，例如模态窗口、轮播图、下拉菜单、工具提示、警告、导航标签、手风琴等。与之前讨论的CSS类和组件一起，这些JavaScript插件使Bootstrap成为一个完整的套件和框架，用于开发你的HTML页面——无论是桌面设备还是移动设备。
- en: In this chapter, we will go through these add-ons in depth and will enhance
    our example application quite a bit using these components.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨这些插件，并使用这些组件极大地增强我们的示例应用程序。
- en: As we have briefly discussed earlier, Bootstrap JavaScript components are built
    using, and on top of, jQuery ([https://jquery.com/](https://jquery.com/)). Thus,
    all the syntaxes and behaviors of these add-ons are similar to jQuery.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前简要讨论过的，Bootstrap JavaScript组件是使用jQuery（[https://jquery.com/](https://jquery.com/)）构建的，并且基于jQuery。因此，这些插件的语法和行为与jQuery相似。
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We assume that you have a basic working knowledge on jQuery as we will be using
    jQuery-based scripts in all our further implementation and explanations.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '我们假设你对jQuery有基本的了解，因为我们将使用基于jQuery的脚本在我们的进一步实现和解释中。 '
- en: Those who are unfamiliar with jQuery can refer to online documentation at [https://api.jquery.com/](https://api.jquery.com/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉jQuery的人来说，可以参考[https://api.jquery.com/](https://api.jquery.com/)上的在线文档。
- en: A basic concepts
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本概念
- en: Before diving deep into the implementation of JavaScript add-ons, let's clarify
    a few basic concepts first.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入实现JavaScript插件之前，让我们首先澄清一些基本概念。
- en: Custom data attributes
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义数据属性
- en: 'As per W3C specification, custom data attributes can be defined as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 根据W3C规范，自定义数据属性可以定义为以下内容：
- en: '*"Custom data attributes are intended to store custom data private to the page
    or application, for which there are no more appropriate attributes or elements."*'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"自定义数据属性旨在存储页面或应用程序专有的自定义数据，对于这些数据没有更合适的属性或元素。"*'
- en: ([http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes](http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)).
    Thus, in HTML5, you can add custom attributes in any HTML element. The name of
    the attribute should start with `data-*`; here, `*` stands for the actual name
    of your attribute. The value of the attribute like any other HTML attribute is
    string. This feature has been introduced in HTML5 to enable site developers to
    store custom values corresponding to HTML elements, that is, values that cannot
    be adjusted in any of the standard attributes.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ([http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes](http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)).
    因此，在HTML5中，你可以在任何HTML元素中添加自定义属性。属性名应该以`data-*`开头；在这里，`*`代表你属性的真正名称。属性值，就像任何其他HTML属性一样，是字符串。这一特性是在HTML5中引入的，以使网站开发者能够存储与HTML元素对应的自定义值，即那些不能在任何标准属性中调整的值。
- en: 'In Bootstrap JavaScript add-ons, some of such custom data attributes are heavily
    used:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap JavaScript插件中，一些这样的自定义数据属性被大量使用：
- en: '`data-target`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-target`'
- en: '`data-toggle`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-toggle`'
- en: '`data-dismiss`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-dismiss`'
- en: '`data-spy`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-spy`'
- en: '`data-placement`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-placement`'
- en: '`data-content`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-content`'
- en: '`data-container`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-container`'
- en: '`data-animation`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-animation`'
- en: '`data-loading-text`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-loading-text`'
- en: '`data-complete-text`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-complete-text`'
- en: '`data-parent`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-parent`'
- en: '`data-slide`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-slide`'
- en: '`data-ride`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-ride`'
- en: All these `data-*` attributes are purely custom and are used by the Bootstrap
    framework. We will later see how these data attributes have been used in various
    JavaScript components. In a nutshell, without even writing a single JavaScript
    line in your page, you can develop the functionalities around these add-ons.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些`data-*`属性完全是自定义的，并由Bootstrap框架使用。我们将在后面看到这些数据属性如何在各种JavaScript组件中使用。简而言之，即使在不编写任何JavaScript代码的情况下，你也能围绕这些插件开发功能。
- en: JavaScript APIs
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript API
- en: Even though we can develop many of the functionalities using the powerful data
    attributes used in Bootstrap, we still need the standard way of doing stuff—calling
    methods, handling events, setting properties dynamically, and much more.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们可以使用Bootstrap中使用的强大数据属性开发许多功能，但我们仍然需要标准的操作方式——调用方法、处理事件、动态设置属性等等。
- en: JavaScript events
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript事件
- en: Like any other standard JavaScript component library, Bootstrap add-ons also
    support typical way of triggering and handling events. Handling those events could
    be very useful whenever you want to perform some actions whenever any particular
    event occurs. For example, you want to invoke an AJAX call whenever a modal window
    is closed.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 像任何其他标准的JavaScript组件库一样，Bootstrap附加组件也支持典型的触发和处理事件的方式。当您想要在特定事件发生时执行某些操作时，处理这些事件可能非常有用。例如，您希望在模态窗口关闭时调用AJAX调用。
- en: Packaging add-ons
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打包附加组件
- en: As you might have noted in the source code we have written in previous chapters,
    we have included the `bootstrap.min.js` file in our HTML page. This file includes
    all the JavaScript add-ons Bootstrap offers. Thus, when you include this file
    in an HTML page, you would be able to use any and all of the add-ons.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的章节中注意到的源代码中，我们已经将`bootstrap.min.js`文件包含到了我们的HTML页面中。这个文件包含了Bootstrap提供的所有JavaScript附加组件。因此，当您将此文件包含到HTML页面中时，您将能够使用任何和所有这些附加组件。
- en: Should you want to include and use only a few of the available components, then
    you can create and use a subset of this file as well. We will see how to do this
    in later chapters.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想包含和使用可用的组件中的一部分，那么您也可以创建并使用这个文件的子集。我们将在后面的章节中看到如何做到这一点。
- en: Modal windows
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模态窗口
- en: Modal windows is perhaps one of the most widely used custom component. The days
    of standard JavaScript alert and prompts are gone; you should implement custom
    modal windows in order to interact with the user.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 模态窗口可能是最广泛使用的自定义组件之一。标准JavaScript的alert和prompt时代已经过去了；您应该实现自定义模态窗口以与用户交互。
- en: Bootstrap offers a rich set of functionality and features that would suit almost
    all requirement variations around modal windows.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap提供了一套丰富的功能和特性，几乎可以满足所有关于模态窗口的需求变化。
- en: Basic modal window
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本模态窗口
- en: 'Here is the most basic version of a modal window:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是最基本的模态窗口版本：
- en: '![Basic modal window](img/B03987_05_01.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![基本模态窗口](img/B03987_05_01.jpg)'
- en: 'Here is the code to create it:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是创建它的代码：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Of course, you need a button or link to open this window. Here is the code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您需要一个按钮或链接来打开这个窗口。下面是相应的代码：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: By putting just these two code blocks, you should be able to create a modal
    window and a button to open it. As you can see, we haven't written any JavaScript
    code yet, but still could generate a modal window and a control to open it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仅仅放置这两个代码块，您应该能够创建一个模态窗口和一个打开它的按钮。如您所见，我们还没有编写任何JavaScript代码，但仍然可以生成一个模态窗口和一个控制打开它的控件。
- en: The most important things to note here are the `data-toggle` and `data-target`
    attributes of the `button` element. By putting modal as the `data-toggle` value,
    we are informing Bootstrap that this button will invoke some modal window, and
    which modal window it should invoke is determined by the `data-target` attribute.
    Hence, you can see that the value of the `data-target` attribute is the modal—this
    is actually the ID of the `div` element, which works as the modal window. Now,
    let's note the button we have in the `modal-footer` section. This button has a
    `data-dismiss` attribute that says that it will close the current modal window.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的最重要的事情是`button`元素的`data-toggle`和`data-target`属性。通过将模态窗口作为`data-toggle`的值，我们通知Bootstrap这个按钮将调用某个模态窗口，而应该调用哪个模态窗口则由`data-target`属性决定。因此，您可以看到`data-target`属性的值是模态窗口——这实际上是作为模态窗口工作的`div`元素的ID。现在，让我们注意一下`modal-footer`部分中的按钮。这个按钮有一个`data-dismiss`属性，表示它将关闭当前的模态窗口。
- en: This is the common way of working of most of the JavaScript add-ons Bootstrap
    has distributed. Of course, there are several other data attributes being used
    in the other components, but the development and usage method is the same.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最常见的Bootstrap分发的JavaScript附加组件的工作方式。当然，其他组件中也在使用几个其他数据属性，但开发和用法是相同的。
- en: 'Finally, we can have the modal dialog box opened by normal JavaScript as well,
    in case you do not want to use the data attributes for some reason—for example,
    if you want to open the modal window when any particular event occurs, such as
    an AJAX callback being invoked. Here is our traditional way of scripting:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们也可以通过常规 JavaScript 打开模态对话框，如果你出于某种原因不想使用数据属性——例如，如果你想在发生特定事件时打开模态窗口，例如
    AJAX 回调被调用。以下是我们的传统脚本方式：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The script is as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本如下：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This method is essentially a short form of following other overloaded variants:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法本质上是一个简化的重载变体的形式：
- en: '`modal(''show'')`: This opens up the modal dialog box.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modal(''show'')`: 这会打开模态对话框。'
- en: '`modal(''hide'')`: This closed the dialog box.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modal(''hide'')`: 这会关闭对话框。'
- en: '`modal(''toggle'')`: This toggles the state—closes if the dialog is open and
    opens if it is closed.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modal(''toggle'')`: 这会切换状态——如果对话框是打开的，则关闭；如果关闭，则打开。'
- en: '`modal(options)`: Some of the commonly used options are keyboard (true/false),
    show (true/false), and backdrop (static/true/false). By putting the `keyboard`
    value as `false`, you can ensure that the dialog box won''t close if *Esc* key
    is pressed. Putting `static` as `backdrop` value would restrict the dialog box
    from closing when mouse is clicked.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modal(options)`: 一些常用的选项包括 `keyboard`（true/false）、`show`（true/false）和 `backdrop`（static/true/false）。将
    `keyboard` 的值设置为 `false` 可以确保在按下 *Esc* 键时对话框不会关闭。将 `static` 设置为 `backdrop` 的值将限制在鼠标点击时对话框不会关闭。'
- en: Note
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One important thing to be noted here is if you want to use any of the preceding
    options (such as `keyboard`, `show`, `backdrop`), you might need to use the JavaScript
    API, rather than invoking the dialog box by data attributes.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里需要注意的一个重要事项是，如果你想要使用前面的任何选项（例如 `keyboard`、`show`、`backdrop`），你可能需要使用 JavaScript
    API，而不是通过数据属性来调用对话框。
- en: Example – enhancing our application using the modal dialog box
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 - 使用模态对话框增强我们的应用程序
- en: 'Now, let''s enhance our application using the modal dialog box. You might recollect
    that we had added a link in the top navigation bar for **Sign In** in the previous
    chapter. Let''s have a popup for users to log in to our site. Here is our code
    of the modal box:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过模态对话框来增强我们的应用程序。你可能还记得，在前一章中我们在顶部导航栏中添加了一个用于 **登录** 的链接。让我们为用户提供一个登录我们网站的弹出窗口。以下是我们的模态框代码：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is the code for the **Sign In** link in the navigation bar:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是导航栏中 **登录** 链接的代码：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, this is our JavaScript:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这是我们的 JavaScript：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can have the full-page source code from the downloaded source code bundle.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从下载的源代码包中获取完整的页面源代码。
- en: 'This is how our **Sign In** dialog box appears:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们的 **登录** 对话框的外观：
- en: '![Example – enhancing our application using the modal dialog box](img/B03987_05_02.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![示例 - 使用模态对话框增强我们的应用程序](img/B03987_05_02.jpg)'
- en: In the script, of course, you would add your code for actually signing the user
    in, which may be a submit call or an AJAX call to the server.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本中，当然，你需要添加你的代码来实际登录用户，这可能是一个提交调用或对服务器的 AJAX 调用。
- en: In addition, Bootstrap modal windows also support a few events to enable you
    to fire any action in case any of these events occur.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Bootstrap 模态窗口还支持一些事件，以便在发生这些事件之一时执行任何操作。
- en: 'For example, have a look at the following code:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，看看以下代码：
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will show this browser alert whenever the modal window has been fully closed.
    The other exposed events are—`show.bs.modal`, `shown.bs.modal`, `hide.bs.modal`,
    `hidden.bs.modal`, and `loaded.bs.modal`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在模态窗口完全关闭时显示此浏览器警告。其他公开的事件包括—`show.bs.modal`、`shown.bs.modal`、`hide.bs.modal`、`hidden.bs.modal`
    和 `loaded.bs.modal`。
- en: Tabs
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标签
- en: 'Tabs are another popular and pretty standard way of navigation in today''s
    websites. In Bootstrap, it is very easy to design a tab-based navigation model;
    all you have to do is to create a UL element with `.nav-tabs` CSS class. Here
    is a sample code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是当今网站中另一种流行且相当标准的导航方式。在 Bootstrap 中，设计基于标签的导航模型非常简单；你只需要创建一个具有 `.nav-tabs`
    CSS 类的 UL 元素。以下是一个示例代码：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is the simple tab display:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是简单的标签显示：
- en: '![Tabs](img/B03987_05_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![选项卡](img/B03987_05_03.jpg)'
- en: 'There is another way of displaying tabs, which is termed as **pills**. Just
    replace the class `.nav-tabs` with `.nav-pills`. Here is the rendition:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 显示标签的另一种方式被称为 **药丸**。只需将类 `.nav-tabs` 替换为 `.nav-pills`。以下是实现方式：
- en: '![Tabs](img/B03987_05_04.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![选项卡](img/B03987_05_04.jpg)'
- en: 'Now, let''s use this tabbed display in our application. We want to have a **Sign
    Up** form as well (until now, we have only **Sign In**). We will add this **Sign
    Up** form in the same modal dialog box where the login form is displayed. Here
    are the screenshots of the same:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在我们的应用程序中使用这个标签显示。我们想要有一个 **注册** 表单（到目前为止，我们只有 **登录**）。我们将把这个 **注册** 表单添加到显示登录表单的同一个模态对话框中。以下是相同截图的截图：
- en: '![Tabs](img/B03987_05_05.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![标签](img/B03987_05_05.jpg)'
- en: 'The following is a screenshot of the **Sign Up** tab:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 **注册** 标签的截图：
- en: '![Tabs](img/B03987_05_06.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![标签](img/B03987_05_06.jpg)'
- en: 'Now, let''s look at the code for the previous screenshots:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看前述截图的代码：
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is the JavaScript code:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是相应的 JavaScript 代码：
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The HTML markup is quite self-explanatory; however, the small JS code is interesting.
    What this piece of code does is, whenever the user navigates from one tab to another
    (from **Sign In** to **Sign Up**, and vice versa), the caption (title) of the
    dialog box gets changed correspondingly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 标记相当直观；然而，这段小的 JS 代码很有趣。这段代码的作用是，当用户从一个标签导航到另一个标签（从 **登录** 到 **注册**，反之亦然）时，对话框的标题（标题）会相应地更改。
- en: 'The few points worth noting here are:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个值得注意的点：
- en: The function will get invoked in the event of a new tab being selected (the
    `shown.bs.tab` event). This function is essentially the event handler.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当选择新标签时（`shown.bs.tab` 事件），将调用此函数。这个函数本质上是一个事件处理器。
- en: The `e.target` object represents the newly opened tab.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`e.target` 对象代表新打开的标签。'
- en: In the HTML markup, you can see that we have added a custom data attribute `data-caption`;
    this attribute is used to set the title of the modal window.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 HTML 标记中，你可以看到我们添加了一个自定义数据属性 `data-caption`；此属性用于设置模态窗口的标题。
- en: Similar to this `shown.bs.tab` event, other exposed events are—`show.bs.tab`,
    `hide.bs.tab`, and `hidden.bs.tab`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 与此 `shown.bs.tab` 事件类似，其他公开的事件还包括—`show.bs.tab`、`hide.bs.tab` 和 `hidden.bs.tab`。
- en: Collapse and accordions
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 折叠和手风琴
- en: 'Bootstrap collapse component is used to simply show and hide different sections
    and subsections of your web page. This is useful when you don''t want the sections
    to be visible initially, but will toggle when clicked on a button or hyperlink.
    Here is a simple example:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 折叠组件用于简单地显示和隐藏网页的不同部分和子部分。当你不想在最初显示这些部分，但点击按钮或超链接时可以切换时，这很有用。以下是一个简单的示例：
- en: '![Collapse and accordions](img/B03987_05_07.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![折叠和手风琴](img/B03987_05_07.jpg)'
- en: 'Here is the HTML code for the preceding screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是前述截图的 HTML 代码：
- en: '[PRE11]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The JavaScript code for the preceding screenshot is:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 前述截图的 JavaScript 代码是：
- en: '[PRE12]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Again, using the `data-target` and `data-toggle` attributes, the collapse behavior
    has been achieved. Also, we have used the `show.bs.collapse` and `hide.bs.collapse`
    event handlers to change the text of the button correspondingly.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，通过使用 `data-target` 和 `data-toggle` 属性，我们已经实现了折叠行为。此外，我们还使用了 `show.bs.collapse`
    和 `hide.bs.collapse` 事件处理器来相应地更改按钮的文本。
- en: Example – showing the product categories of our store
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 - 显示我们商店的产品类别
- en: 'You might remember that we had added a link in our navigation bar in the last
    chapter. Let''s create a page for it and use this collapse component as an accordion
    in that page to show the product categories of our store. Here is the markup for
    the categories using accordion pattern:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能记得我们在上一章中在我们的导航栏中添加了一个链接。让我们为它创建一个页面，并在这个页面中使用这个折叠组件作为手风琴来显示我们商店的产品类别。以下是使用手风琴模式对类别进行标记的代码：
- en: '[PRE13]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following JavaScript code can use some additional Bootstrap classes to
    our markup for esthetic purposes:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 JavaScript 代码可以使用一些额外的 Bootstrap 类来美化我们的标记：
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This is how our category browser looks like. We have created three separate
    section for three main categories. The following is the screenshot of all three
    categories merged into one:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们分类浏览器的样子。我们为三个主要类别创建了三个独立的区域。以下是所有三个类别合并在一起的截图：
- en: '![Example – showing the product categories of our store](img/B03987_05_08.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![示例 - 显示我们商店的产品类别](img/B03987_05_08.jpg)'
- en: 'Finally, this is the way our browse page looks:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这是我们的浏览页面的样子：
- en: '![Example – showing the product categories of our store](img/B03987_05_09.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![示例 - 显示我们商店的产品类别](img/B03987_05_09.jpg)'
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Full source code for this page is available for download.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该页面的完整源代码可供下载。
- en: Tooltips and popovers
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具提示和弹出框
- en: 'You would of course need tooltips for every user-friendly site you develop.
    Tooltips are more advanced versions of the `title` attributes you normally use
    in case of images. Here is a simple tooltip:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您需要为每个用户友好的网站开发添加工具提示。工具提示是您通常在图像中使用的`title`属性的更高级版本。以下是一个简单的工具提示：
- en: '![Tooltips and popovers](img/B03987_05_10.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![工具提示和弹出提示](img/B03987_05_10.jpg)'
- en: 'The HTML markup for this is shown as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个HTML标记的示例如下所示：
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Of course, the `data-toggle`, `data-placement,` and `title attributes` options
    are only relevant in this context. You have four options (four directions essentially)
    for data-placement—top, right, bottom, and left. The tooltip will be displayed
    as per this attribute value.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，`data-toggle`、`data-placement`和`title`属性选项仅在当前上下文中相关。您有四个选项（实际上是四个方向）的数据放置选项——顶部、右侧、底部和左侧。提示将根据此属性值显示。
- en: 'However, you need to initialize the tooltip functionality in the page where
    you want to use it. This is because, unlike any other component, Bootstrap does
    not initialize this component by default. Here is the code for this—this you can
    include in the HTML page JS section itself:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您需要在您想要使用提示功能的页面上初始化提示功能。这是因为，与任何其他组件不同，Bootstrap默认不会初始化此组件。以下是相应的代码——您可以直接将其包含在HTML页面的JS部分中：
- en: '[PRE16]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This script will enable all the tooltips and popovers you have in the current
    page. The next advanced option of tooltip is popover. In tooltips, you cannot
    have complex and lengthy data. Also, you can not show HTML content in a tooltip.
    Popovers are more flexible and advanced. Suppose, in the list of the products,
    that we want to show the brief details on mouse click. The following example contains
    two types of popover creation—one by data attribute and another by JavaScript.
    Here is our HTML code:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将启用当前页面中所有的工具提示和弹出提示。工具提示的下一个高级选项是弹出提示。在工具提示中，您不能有复杂和冗长的数据。您也不能在工具提示中显示HTML内容。弹出提示更灵活和高级。假设，在产品列表中，我们想在鼠标点击时显示简要详情。以下示例包含两种类型的弹出提示创建——一种通过数据属性，另一种通过JavaScript。以下是我们的HTML代码：
- en: '[PRE17]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For product 2, HTML markup and JavaScript are as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于产品2，HTML标记和JavaScript如下所示：
- en: '[PRE18]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This is the way the popovers render (two popover screenshots merged into one):'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是弹出提示的渲染方式（两个弹出提示截图合并为一个）：
- en: '![Tooltips and popovers](img/B03987_05_11.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![工具提示和弹出提示](img/B03987_05_11.jpg)'
- en: You can see that in case of the JavaScript initialization of the popover, you
    can pass a variety of other parameters that gives you more control and flexibility.
    As for the `content` value, you can always call another function, which, in turn,
    invokes an AJAX call and fetches data from your database.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，在JavaScript初始化弹出提示时，您可以传递各种其他参数，这为您提供了更多的控制和灵活性。至于`content`值，您始终可以调用另一个函数，该函数反过来会调用AJAX调用并从您的数据库中获取数据。
- en: Dropdown
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下拉菜单
- en: The Bootstrap drop-down components can be used in a number of cases, for example,
    in a menu, button, link, navigation bar, and so on.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap下拉组件可以在许多情况下使用，例如在菜单、按钮、链接、导航栏等。
- en: 'Suppose that we need to have a few options in dropdown in the **See all** link
    we had created in the product list panel. Here is what we want:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们需要在产品列表面板中创建的“查看所有”链接中的下拉菜单中添加一些选项。这是我们想要的：
- en: '![Dropdown](img/B03987_05_12.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![下拉菜单](img/B03987_05_12.jpg)'
- en: 'This is the markup to implement this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实现此功能的标记：
- en: '[PRE19]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In a similar way, we can add a dropdown in the navigation menu also. Let''s
    say that we need to have a drop-down menu in the navigation bar for user''s account,
    profile, shopping cart, and so on. This is the expected result:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似的方式，我们还可以在导航菜单中添加下拉菜单。假设我们需要在导航栏中为用户的账户、个人资料、购物车等添加下拉菜单。这是预期的结果：
- en: '![Dropdown](img/B03987_05_13.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![下拉菜单](img/B03987_05_13.jpg)'
- en: 'To achieve this, we change the line:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，我们需要更改以下行：
- en: '[PRE20]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'to the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 变为以下内容：
- en: '[PRE21]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Thus, you can see that Bootstrap dropdowns are very generic in nature, and they
    can be used in a number of places and for number of purposes.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您可以看到Bootstrap下拉菜单在本质上非常通用，可以在许多地方和多种用途中使用。
- en: Alerts
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 警告
- en: 'We had visited this component briefly in the previous chapter. To extend on
    that functionality, let''s add a simple close button to dismiss the alert box:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一章中简要介绍了这个组件。为了扩展其功能，让我们添加一个简单的关闭按钮来关闭警告框：
- en: '[PRE22]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'So, we have got close button here:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们在这里有了一个关闭按钮：
- en: '![Alerts](img/B03987_05_14.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![警告](img/B03987_05_14.jpg)'
- en: The alert component does offer JavaScript interface as well, because most of
    the time you would want the alert messages to be displayed dynamically as per
    the user's operation.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 警告组件还提供了JavaScript接口，因为大多数时候你希望警告信息根据用户的操作动态显示。
- en: 'If you remember, in the popover components, we had added a popover on a product
    click in order to display the product details. There we had an **Add to cart**
    button as well. Let''s say, whenever the user clicks on this button an alert box
    should appear confirming to the user that the product has been added to the shopping
    cart. We change the popover a little bit for this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得，在弹出组件中，我们在产品点击时添加了一个弹出窗口，以显示产品详情。那里我们也有一个**添加到购物车**按钮。假设，当用户点击此按钮时，应出现一个警告框，确认产品已添加到购物车中。我们为此稍微改变了弹出窗口：
- en: '[PRE23]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The only change we have done here is that we have added an `onclick` event handler
    for the **Add to cart** button.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里所做的唯一改变是，为**添加到购物车**按钮添加了一个`onclick`事件处理器。
- en: 'We have also added a blank placeholder in the page (just after the page header)
    for the alert messages to appear:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在页面中添加了一个空白占位符（在页面标题之后），以便显示警告信息：
- en: '[PRE24]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Finally, the JavaScript function for the `onclick` event handler:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为`onclick`事件处理器编写的JavaScript函数：
- en: '[PRE25]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Thus, whenever the **Add to cart** button will be pressed, this alert message
    will appear:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，每当按下**添加到购物车**按钮时，此警告信息将显示：
- en: '![Alerts](img/B03987_05_15.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![警告](img/B03987_05_15.jpg)'
- en: 'Of course, in this function, you will add your AJAX calls in order to actually
    add the product in the shopping cart. Depending on this execution result, the
    user will be notified. Here is another sample in case the product could not be
    added in the cart for some reason:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在这个函数中，你需要添加你的AJAX调用，以便实际上将产品添加到购物车中。根据这个执行结果，用户将得到通知。以下是一个示例，如果由于某种原因产品无法添加到购物车中：
- en: '![Alerts](img/B03987_05_16.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![警告](img/B03987_05_16.jpg)'
- en: 'The updated code is of course in the `addToCart` JavaScript function:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的代码当然位于`addToCart` JavaScript函数中：
- en: '[PRE26]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Thus you can see, the alert component is quite flexible and generic enough in
    order to be used in a number of circumstances.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如此可见，警告组件非常灵活且通用，足以在各种情况下使用。
- en: Carousels
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轮播图
- en: 'Carousels are popular slideshow components and are also available for use in
    Bootstrap. In our home page, let''s display the most popular products as a carousel.
    Here is the HTML markup:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 轮播图是流行的幻灯片组件，Bootstrap也提供了使用它。在我们的主页上，让我们以轮播图的形式显示最受欢迎的产品。以下是HTML标记：
- en: '[PRE27]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s place the preceding piece of code in the **Most Popular Products** section
    in our home page. The carousel renders like the following screenshot:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把前面的代码块放置在我们主页的**最受欢迎的产品**部分。轮播图渲染如下截图所示：
- en: '![Carousels](img/B03987_05_17.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![轮播图](img/B03987_05_17.jpg)'
- en: 'Like other components, the carousel component is also available via JavaScript
    APIs. For example, in the following code if we had to invoke carousel component
    via scripts:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他组件一样，轮播图组件也通过JavaScript API提供。例如，在以下代码中，如果我们必须通过脚本调用轮播图组件：
- en: '[PRE28]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The `interval` value defines the amount of time in milliseconds for each slide
    to stay and then move ahead. Mentioning the pause as hover instructs Bootstrap
    to stay on the current slide until the mouse is moved out of the container. The
    important parts of the carousel component are as follows:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`interval`值定义了每张幻灯片停留的时间和然后前进的时间（以毫秒为单位）。提及悬停暂停指示Bootstrap停留在当前幻灯片上，直到鼠标移出容器。轮播图组件的重要部分如下：'
- en: '`carousel-indicator`: These controls are used to open a particular slide in
    the set of slides in the carousel'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`carousel-indicator`：这些控件用于在轮播图的一组幻灯片中打开特定的幻灯片'
- en: '`carousel-inner`: These sections are actual contents of the each of the slides
    in the carousel'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`carousel-inner`：这些部分是轮播图中每张幻灯片的实际内容'
- en: '`carousel-control`: These are essentially left and right arrows to navigate
    to previous or next slides in the carousel'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`carousel-control`：这些实际上是用于在轮播图中导航到上一张或下一张幻灯片的左右箭头'
- en: The final preview
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终预览
- en: 'The complete code for the two pages can be found in the downloadable code available
    with this book. The screenshots of the final version of the two main pages—the
    **Home** page and **Browse Products** page are as shown:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 两个页面的完整代码可以在本书提供的可下载代码中找到。两个主要页面——**主页**和**浏览产品**页面的最终版本截图如下所示：
- en: '![The final preview](img/B03987_05_18.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![最终预览](img/B03987_05_18.jpg)'
- en: 'In a small mobile device, it will look like the following screenshot:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在小型移动设备上，它看起来如下截图所示：
- en: '![The final preview](img/B03987_05_19.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![最终预览](img/B03987_05_19.jpg)'
- en: 'Here is the desktop view of the **Browse Products** page:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“浏览产品”页面的桌面视图：
- en: '![The final preview](img/B03987_05_20.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![最终预览](img/B03987_05_20.jpg)'
- en: 'Finally, the mobile version of the page is as shown:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，页面的移动版本如下所示：
- en: '![The final preview](img/B03987_05_21.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![最终预览](img/B03987_05_21.jpg)'
- en: Summary
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we completed exploring almost all of the features and functionalities
    of Bootstrap. We saw the CSS classes, the available components, and finally the
    JavaScript add-ons. To reiterate the same, some important CSS classes are the
    grid system, responsive classes, data entry forms tables, and images. Similarly,
    some important components are panels and wells, toolbars and button groups, breadcrumbs
    and navigation controls, and Glyphicons. Finally, in this chapter, we explored
    the JS add-ons: modal windows, tooltips and popovers, carousels, accordions, and
    alerts'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们几乎完成了对 Bootstrap 所有功能和特性的探索。我们看到了 CSS 类，可用的组件，以及最后的 JavaScript 扩展。再次强调，一些重要的
    CSS 类包括网格系统、响应式类、数据输入表单、表格和图片。同样，一些重要的组件包括面板和井、工具栏和按钮组、面包屑和导航控件，以及图标字体。最后，在本章中，我们探索了
    JS 扩展：模态窗口、工具提示和弹出窗口、轮播图、手风琴和警告。
- en: In the next chapter, we will start creating our development environment of Bootstrap
    and will customize default Bootstrap options.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始创建我们的 Bootstrap 开发环境，并将自定义默认的 Bootstrap 选项。
