- en: Chapter 5. Code Documentation and Content Assist
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 章：代码文档和内容辅助
- en: '*Documenting your code is very important. Everyone knows that when they get
    the task of extending or changing the script of another developer, before they
    can start with their work, they have to understand the process of the script and
    must understand the thinking of the developer. When the source code from other
    developers is well documented, it will be much easier to do this.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*编写代码文档非常重要。众所周知，当接手扩展或修改其他开发者的脚本任务时，在开始工作之前，他们必须理解脚本的流程并了解开发者的思路。当其他开发者的源代码有良好的文档时，这将变得容易得多。*'
- en: '*But sometimes it also happens that you have to work on a script that you had
    developed yourself, but this was quite some time ago so you don''t remember the
    functionality in detail anymore.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*但有时也会发生这样的情况，您必须处理的是自己开发的脚本，但这已经是很久以前的事情了，所以您已经不再详细记得功能了。*'
- en: '*Therefore, it is recommended that you always document your scripts (files,
    classes, properties, methods, and functions), ideally during the development stage.
    At this stage, you have the most knowledge about the functionality. For this reason,
    Aptana Studio understands ScriptDoc and uses it with the Content Assist feature.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*因此，建议您始终在开发阶段对脚本（文件、类、属性、方法、函数）进行文档记录。在这个阶段，您对功能有最深入的了解。因此，Aptana Studio 理解
    ScriptDoc 并使用它与内容辅助功能结合使用。*'
- en: 'In this chapter we will take a look at the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下内容：
- en: What is ScriptDoc and which tags it provides
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ScriptDoc 是什么以及它提供的标签
- en: Creating general documentation comments
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建通用文档注释
- en: Using the Content mentation comment snippets and using it with the Content Assist
    feature
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用内容注释片段并使用内容辅助功能结合使用
- en: ScriptDoc
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ScriptDoc
- en: ScriptDoc is a tool that extracts all documentation from JavaScript files and
    provides this information to Aptana Studio so that it can generate the content
    for the Content Assist feature. ScriptDoc automatically scans your projects for
    ScriptDoc documentation blocks and uses the Content Assist feature to display
    information tooltips. For example, as soon as you create a ScriptDoc comment for
    a function, the Content Assist feature knows your new function and displays the
    information to you if you're using the function somewhere within your project.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ScriptDoc 是一个工具，它从 JavaScript 文件中提取所有文档，并将这些信息提供给 Aptana Studio，以便它可以生成内容辅助功能的内容。ScriptDoc
    自动扫描您的项目以查找 ScriptDoc 文档块，并使用内容辅助功能显示信息提示。例如，一旦为函数创建了一个 ScriptDoc 注释，内容辅助功能就会知道您的新函数，并在您在项目中的某个地方使用该函数时向您显示信息。
- en: But what should such a comment really look like?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但这样的注释究竟应该是什么样子呢？
- en: A ScriptDoc comment starts with `/**` and ends as a normal multiline comment,
    with `*/`. Between this start and end, you can insert some tags that describe
    your documentation comment.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ScriptDoc 注释以 `/**` 开始，并以正常的多行注释 `*/` 结束。在这两个标记之间，您可以插入一些标签来描述您的文档注释。
- en: 'The following table gives you a small overview of the available tags that you
    can use in order to document your code:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格为您提供了一个可用标签的小概览，您可以使用这些标签来记录您的代码：
- en: '| Tag | Definition and examples | Applies to |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 标签 | 定义和示例 | 适用范围 |'
- en: '| --- | --- | --- |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `@alias` | Defines an ID for a class or function.Example: `* @alias aliasName`
    | Any |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `@alias` | 定义类或函数的 ID。示例：`* @alias aliasName` | 任何 |'
- en: '| `@author` | Defines the description of a class.Example: `* @author Thomas
    Deuling tdeuling@domain.com` | Any |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `@author` | 定义类的描述。示例：`* @author Thomas Deuling tdeuling@domain.com` | 任何
    |'
- en: '| `@classDescription` | Defines the description of a class.Example: `* @classDescription
    Description ...` | Function |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `@classDescription` | 定义类的描述。示例：`* @classDescription Description ...` | 函数
    |'
- en: '| `@constructor` | Defines that a function is the constructor of a class.Example:
    `* @constructor` | Function |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `@constructor` | 定义一个函数是一个类的构造函数。示例：`* @constructor` | 函数 |'
- en: '| `@deprecated` | Defines that a function or property is deprecated.Example:
    `* @deprecated` | Function and property |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `@deprecated` | 定义一个函数或属性已弃用。示例：`* @deprecated` | 函数和属性 |'
- en: '| `@example` | Defines an example.Example: `* @example Example code` | Any
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `@example` | 定义一个示例。示例：`* @example Example code` | 任何 |'
- en: '| `@exception` | Defines an exception thrown by a function.Example: `* @exception
    {TestException} ThrowDescription` | Function |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `@exception` | 定义一个函数抛出的异常。示例：`* @exception {TestException} ThrowDescription`
    | 函数 |'
- en: '| `@id` | Allows you to link functions or properties documentation to an external
    ScriptDoc file.Example: `/** @id */` | Any |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `@id` | 允许您将函数或属性的文档链接到外部 ScriptDoc 文件。例如：`/** @id */` | 任何 |'
- en: '| `@inherits` | Defines that a function inherits from another function.Example:
    `* @inherits functionNameA, functionNameB` | Function |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `@inherits` | 定义一个函数继承自另一个函数。例如：`* @inherits functionNameA, functionNameB`
    | 函数 |'
- en: '| `@internal` | Defines that a function or property should not be visible for
    the Content Assist feature.Example: `* @internal` | Function and property |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `@internal` | 定义一个函数或属性不应在内容辅助功能中可见。例如：`* @internal` | 函数和属性 |'
- en: '| `@memberOf` | Defines that a function is a member of a class.Example: `*
    @memberOf classNa` `me` | Function and property |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `@memberOf` | 定义一个函数是某个类的成员。例如：`* @memberOf className` | 函数和属性 |'
- en: '| `@method` | Defines that a function is a method of a class.Example: `* @method`
    | Function |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `@method` | 定义一个函数是一个类的成员方法。例如：`* @method` | 函数 |'
- en: '| `@namespace` | Defines a namespace for a file.Example: `* @namespace coding.ms`
    | File |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `@namespace` | 为文件定义一个命名空间。例如：`* @namespace coding.ms` | 文件 |'
- en: '| `@param` | Defines a parameter of a function.Example: `* @param {String}
    paramName Description` | Function |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `@param` | 定义函数的参数。例如：`* @param {String} paramName 描述` | 函数 |'
- en: '| `@private` | Defines that a function or property is private.Example: `* @private`
    | Function and property |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `@private` | 定义一个函数或属性是私有的。例如：`* @private` | 函数和属性 |'
- en: '| `@projectDescription` | Defines a description for a file. It must be the
    first tag in the first documentation block.Example: `* @projectDescription Description-text
    ...` | File |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `@projectDescription` | 定义文件描述。它必须是第一个文档块中的第一个标签。例如：`* @projectDescription
    描述文本 ...` | 文件 |'
- en: '| `@property` | Defines a property of a class.Example: `* @poperty {Array}
    Array for ...` | File |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `@property` | 定义类的属性。例如：`* @poperty {Array} 数组用于 ...` | 文件 |'
- en: '| `@return` | Defines the type and description of the return value.Example:
    `* @return {Object} Return description` | Function |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `@return` | 定义返回值的类型和描述。例如：`* @return {Object} 返回描述` | 函数 |'
- en: '| `@see` | Links to a related class or function.Example link to a function:
    `* @see #functionName`Example link to a class: `* @see className`Example link
    to a method: `* @see className#methodName` | Any |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `@see` | 链接到相关的类或函数。示例链接到函数：`* @see #functionName`示例链接到类：`* @see className`示例链接到方法：`*
    @see className#methodName` | 任何 |'
- en: '| `@since` | Defines in which version the subject was created.Example: `* @since
    1.0` | File, Function, and Property |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `@since` | 定义主题是在哪个版本中创建的。例如：`* @since 1.0` | 文件、函数和属性 |'
- en: '| `@type` | Defines the data type of a property.Example: `* @type {Object}
    Object description` | Property |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `@type` | 定义属性的 数据类型。例如：`* @type {Object} 对象描述` | 属性 |'
- en: '| `@version` | Defines the version of a file or class.Example: `* @version
    1.1` | Any |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `@version` | 定义文件或类的版本。例如：`* @version 1.1` | 任何 |'
- en: These ScriptDoc tags give you a good base to document your code, in such a way
    that nearly all other developers will understand what your script is good for.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这些 ScriptDoc 标签为您提供了良好的代码文档基础，这样几乎所有的其他开发者都能理解您的脚本有什么用途。
- en: In the following section we will take a look at what comments for files, functions,
    and properties look like.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下部分，我们将查看文件、函数和属性的注释看起来是什么样子的。
- en: JavaScript file comment
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript 文件注释
- en: At first, we will take a look at the comment for a file. The comment for a file
    should contain the `@projectDescription` and `@author` tags, which describe what
    kind of source is in the file and who has written it. Further, there could be
    a `@namespace`, `@since`, and `@version` tag so that everybody knows in which
    namespace the code is reachable and since which version the file exists and what's
    the current version of the file.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将查看文件注释。文件注释应包含 `@projectDescription` 和 `@author` 标签，这些标签描述了文件中的源代码类型以及谁编写了它。此外，还可以有
    `@namespace`、`@since` 和 `@version` 标签，这样每个人都知道代码在哪个命名空间中可访问，以及文件自哪个版本以来存在，以及当前版本是什么。
- en: The `@property` tags are also helpful, which should be added for each notable
    property.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`@property` 标签也很有用，应该为每个显著的属性添加。'
- en: 'Following is a common file comment:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个常见的文件注释：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Don't forget, the file comment with the `@projectDescription` tag must be the
    first documentation block within the first line in your JavaScript file.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，带有 `@projectDescription` 标签的文件注释必须是 JavaScript 文件中第一行内的第一个文档块。
- en: JavaScript property comment
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript 属性注释
- en: Next is the property comment, which describes a property of a class. So, if
    you're writing a class that contains some properties, you should document them
    with a description that describes the destination of it. If the property is a
    private property of the class, you should use the `@private` tag. But the `@since`
    and `@type` tags are also useful and help everyone know how long the class had
    this property and what type it has.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是属性注释，它描述了一个类的属性。因此，如果您正在编写包含一些属性的类，您应该用描述其目的的描述来记录它们。如果属性是类的私有属性，您应该使用`@private`标签。但`@since`和`@type`标签也很有用，并帮助每个人了解类有多少时间有这个属性以及它的类型。
- en: 'Here''s a common property comment:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个常见的属性注释：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: JavaScript function comment
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript函数注释
- en: Now, at last, the function comment.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，最后，是函数注释。
- en: It can be used for a function or a method. If the function is a method, the
    comment contains the `@method` tag. Additionally, there could be a `@constructor`
    tag, which defines that the method is the constructor of the class. But in every
    case the comment should contain the `@autho` `r` and `@since` tags so that it's
    clear who has written that function and for which version of your application.
    Further, you should create a `@param` tag for each function parameter. These `@param`
    tags contain the type of the parameter, the variable name, and a description of
    the use case. And finally the `@return` tag (if any are available) that describes
    what kind of data is returned by the function.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以用于函数或方法。如果函数是方法，则注释包含`@method`标签。此外，还可能有`@constructor`标签，它定义了该方法是该类的构造函数。但在任何情况下，注释都应该包含`@author`和`@since`标签，以便清楚地知道谁编写了该函数以及为您的应用程序的哪个版本。此外，您应该为每个函数参数创建一个`@param`标签。这些`@param`标签包含参数的类型、变量名以及用例描述。最后，如果有，`@return`标签（如果有的话）描述了函数返回的数据类型。
- en: 'And, at last, an example of a common function comment:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，一个常见的函数注释示例：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Time for action – displaying a function comment
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 - 显示函数注释
- en: Now let's take a look at how to display these function comments.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何显示这些函数注释。
- en: 'Create a JavaScript file with the following content:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含以下内容的JavaScript文件：
- en: '[PRE3]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Save the file.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Hover the mouse on the function call.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在函数调用上。
- en: '*What just happened?*'
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: 'We have just created a function with a ScriptDoc conform comment. By hovering
    over a function call of this function, as in line 16 of the following screenshot,
    Aptana Studio displays a tooltip with information about the ScriptDoc comment:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚创建了一个带有ScriptDoc注释的函数。通过将鼠标悬停在以下截图中的该函数的函数调用上，如第16行，Aptana Studio会显示一个包含ScriptDoc注释信息的工具提示：
- en: '![What just happened?](img/8246_05_1.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_05_1.jpg)'
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Where is the information tooltip?**'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**信息工具提示在哪里？**'
- en: If the information tooltip doesn't appear on hovering over the function call,
    just navigate to **Window** | **Preferences** and go to **Aptana Studio** | **Content
    Assist**. In this area, you have to select the **Show information on hover** option.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在将鼠标悬停在函数调用上时没有出现信息工具提示，请转到**窗口** | **首选项**，然后转到**Aptana Studio** | **内容辅助**。在这个区域，您必须选择**悬停时显示信息**选项。
- en: The Content Assist feature
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内容辅助功能
- en: The Content Assist feature provides you with information about properties, methods,
    and functions. The related information is displayed, as we have seen in the *Time
    for action – displaying a function comment* section, in the form of a tooltip.
    When the information within the tooltip is larger than the available tooltip space,
    just press *F2* while the cursor is on the function or object, and the tooltip
    will be sticky so you're able to scroll within.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 内容辅助功能为您提供有关属性、方法和函数的信息。相关信息以工具提示的形式显示，正如我们在“操作时间 - 显示函数注释”部分中看到的那样。当工具提示中的信息大于可用的工具提示空间时，只需在光标位于函数或对象上时按*F2*键，工具提示就会变得粘性，这样您就可以在工具提示内滚动。
- en: Time for action – using the Content Assist feature
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 - 使用内容辅助功能
- en: The Content Assist feature will automatically pop up and provide you a context
    menu, where you get an overview of objects, functions, and so on that are available
    in the current scope.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 内容辅助功能会自动弹出，并提供一个上下文菜单，其中您可以查看当前作用域中可用的对象、函数等。
- en: Open the JavaScript file following the steps mentioned in the *Time for action
    – displaying a function comment* section.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照在“操作时间 - 显示函数注释”部分中提到的步骤打开JavaScript文件。
- en: Place the cursor on any location within the file.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在文件中的任何位置。
- en: Begin to type a function or object name. For example, we want to use the **document**
    object and therefore we press the letter *D*.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始输入一个函数或对象名称。例如，我们想使用**文档**对象，因此我们按下字母*D*。
- en: Now the Content Assist feature provides you a context menu, which lists all
    available objects and functions that are starting with the letter "d".
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，内容辅助功能为你提供了一个上下文菜单，列出了所有以字母“d”开头的可用对象和函数。
- en: Tip
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Trigger the Content Assist feature manually**'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**手动触发内容辅助功能**'
- en: In case you need the Content Assist feature and it doesn't appear automatically,
    you can trigger it manually by using the shortcut *Ctrl* + Space bar.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你需要内容辅助功能但它没有自动出现，你可以通过使用快捷键*Ctrl* + 空格键手动触发它。
- en: Use the up and down arrow keys in order to select the required entry, or type
    more letters to get a more precise result list. We selected the **document** object.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用上箭头和下箭头键选择所需的条目，或者输入更多字母以获得更精确的结果列表。我们选择了**文档**对象。
- en: If you selected the required entry or there's only one entry left to be selected,
    just insert the required code by pressing the *Tab* key.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你已选择了所需的条目或只剩下一个条目待选，只需按下*Tab*键插入所需的代码。
- en: After the **document** object is inserted and you type the dot in order to call
    a method from the **document** object, the Content Assist feature reappears and
    this time it provides you with all the available methods of the object.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将**文档**对象插入并输入点以从**文档**对象调用方法之后，内容辅助功能重新出现，这次它为你提供了对象的所有可用方法。
- en: '*What just happened?*'
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have used the Content Assist feature to complete our required statement,
    even if we don't know in detail which properties are available on the related
    object. The following screenshot shows you the Content Assist feature related
    to the *Time for action – using the Content Assist* section.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使用内容辅助功能完成了所需的语句，即使我们不知道相关对象上可用的属性细节。下面的截图显示了与*Time for action – using the
    Content Assist*部分相关的内容辅助功能。
- en: '![What just happened?](img/8246_05_2.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_05_2.jpg)'
- en: Browser capabilities
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器功能
- en: But the Content Assist feature can do much more. If you have to develop your
    code for different browser, which you know has very different functionalities,
    you need to know which feature is provided by which browser. If you do not, it
    initiates many developing mistakes just because you didn't know that a particular
    browser doesn't understand a feature.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 但内容辅助功能可以做更多。如果你必须为不同的浏览器编写代码，而这些浏览器你知道它们的功能非常不同，你需要知道哪个浏览器提供了哪些功能。如果你不知道，它会导致许多开发错误，仅仅因为你不知道特定的浏览器不支持某个功能。
- en: For this problem, Aptana Studio provides an additional useful feature. If you
    start to write a statement of a browser-provided object, such as the **document**
    object, the Code Assist provides you a list of available features. But if you
    take a closer look, you will see a lot of browser icons on the right-hand side
    of each entry. Each icon indicates whether the related browser understands the
    feature or not. When the icon is full-colored, it indicates that the browser supports
    the feature; otherwise the icon is grayed-out and the browser doesn't support
    the feature. If there is no information available, the Content Assist feature
    assumes the property to be available.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个问题，Aptana Studio提供了一个额外的有用功能。如果你开始编写浏览器提供的对象（如**文档**对象）的语句，代码辅助会为你提供一个可用功能的列表。但如果你仔细观察，你会在每个条目的右侧看到很多浏览器图标。每个图标表示相关的浏览器是否理解该功能。当图标是全色的，表示该浏览器支持该功能；否则图标是灰色的，表示浏览器不支持该功能。如果没有可用的信息，内容辅助功能假定该属性是可用的。
- en: Time for action – changing the user agents used by the Content Assist feature
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践 – 更改内容辅助功能使用的用户代理
- en: Navigate to **Window** | **Preferences**.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**窗口** | **首选项**。
- en: Select the **Content Assist** entry under the **Aptana Studio** tab in the left-hand
    side tree.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧树形结构中的**Aptana Studio**选项卡下选择**内容辅助**条目。
- en: Select at the top-right the type of the project in which you will set the provided
    user agents.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右上角选择你将设置提供用户代理的项目类型。
- en: Select, in our case, the **Web** entry.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的例子中，选择**Web**条目。
- en: Check your required browser and accept the selection by clicking on **OK**.
    We select the Chrome, Firefox, and Internet Explorer.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查所需的浏览器并点击**确定**接受选择。我们选择了Chrome、Firefox和Internet Explorer。
- en: '*What just happened?*'
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We selected the browser that our project has to support. In order to test the
    current selection of browser, just open a JavaScript file and type `document`.
    Take a look at the Content Assist feature; now it should display only the icons
    of selected browsers in the list.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了项目必须支持的网络浏览器。为了测试当前选择的浏览器，只需打开一个 JavaScript 文件并输入 `document`。查看内容辅助功能；现在它应该只显示列表中选定浏览器的图标。
- en: '![What just happened?](img/8246_05_3.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/8246_05_3.jpg)'
- en: Another nice feature is that you can use the Content Assist feature with your
    own code. If you want to use the Content Assist feature with your own code, you
    have to document your objects, methods, and functions.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不错的功能是，你可以使用自己的代码使用内容辅助功能。如果你想使用自己的代码使用内容辅助功能，你必须文档化你的对象、方法和函数。
- en: You can also optimize the process of documenting your code by creating snippets
    for each comment. These snippets are easy to insert by using the Content Assist
    feature.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过为每个注释创建代码片段来优化编写代码文档的过程。这些代码片段很容易通过使用内容辅助功能插入。
- en: Have a go hero – documenting a project that contains JavaScript code
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄——为包含 JavaScript 代码的项目编写文档
- en: Now, by yourself, select a small JavaScript project that is currently under
    construction, and add documentation for all objects, methods, functions, and properties.
    When you're done, check out how well the Content Assist feature delivers you information
    about your own code.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，自己选择一个目前正在构建的小型 JavaScript 项目，并为所有对象、方法、函数和属性添加文档。完成后，检查内容辅助功能如何为你提供有关自己代码的信息。
- en: Pop quiz
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速问答
- en: Q1\. How must a documentation comment block start so that the ScriptDoc parser
    is able to parse it?
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 如何编写文档注释块，以便 ScriptDoc 解析器能够解析它？
- en: '`/**`'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/**`'
- en: '`/*`'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/*`'
- en: '`//`'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`//`'
- en: Q2\. Where must the file comment with the `@projectDescription` tag be located
    in a JavaScript file?
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 带有 `@projectDescription` 标签的文件注释在 JavaScript 文件中必须位于何处？
- en: The file comment with the `@projectDescription` tag must be the last documentation
    block in your JavaScript file.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 带有 `@projectDescription` 标签的文件注释必须是你的 JavaScript 文件中的最后一个文档块。
- en: The file comment with the `@projectDescription` tag must be the first documentation
    block in the first line of your JavaScript file.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 带有 `@projectDescription` 标签的文件注释必须是你的 JavaScript 文件第一行的第一个文档块。
- en: It does not matter where it is.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 位置无关紧要。
- en: Q3\. What action is necessary to display a function comment?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. 显示函数注释需要采取什么行动？
- en: Hovering the mouse above a function call.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在函数调用上方。
- en: Clicking on a function call.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击函数调用。
- en: Right-clicking on a function call.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击函数调用。
- en: Q4\. Which shortcut makes the information tooltip sticky so that you're able
    to read the complete information, in case it does not fit within the tooltip?
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Q4. 哪个快捷键使信息工具提示保持粘性，以便在工具提示内容不适合时，你可以阅读完整信息？
- en: '*F2*'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*F2*'
- en: '*Ctrl* + *S*'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *S*'
- en: '*F1*'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*F1*'
- en: Q5\. Which shortcut triggers the Content Assist feature?
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Q5. 哪个快捷键触发内容辅助功能？
- en: '*Ctrl* + *Alt* + *Delete*'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *Alt* + *Delete*'
- en: '*Ctrl* + *F2*'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *F2*'
- en: '*Ctrl* + Space bar'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Ctrl* + 空格键'
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: By the end of this chapter, you should be able to document your JavaScript code
    so that it's conformed to ScriptDoc. In addition, you should know in detail how
    to document your JavaScript code so that every developer is able to understand
    your scripts and their functionality.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该能够编写你的 JavaScript 代码的文档，使其符合 ScriptDoc。此外，你应该详细了解如何编写 JavaScript 代码的文档，以便每个开发者都能理解你的脚本及其功能。
- en: Now we go forward and take a look at how we can work with HTML and CSS, and
    inspect them.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们向前迈进，看看我们如何与 HTML 和 CSS 一起工作，并检查它们。
