- en: Chapter 9. Working with Less in a CMS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。在CMS中使用Less
- en: Working in a CMS…Ah, choices, choices…!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在CMS中工作……啊，选择，选择……！
- en: 'Question: what do the following have in common—Facebook, Beyoncé, Sony, Dallas
    Mavericks NBA basketball team, and Time?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 问题：以下哪些有共同之处——Facebook、Beyoncé、Sony、达拉斯小牛NBA篮球队和《时代》？
- en: Worked it out? Well, it's the subject of our next chapter in our journey of
    learning Less. They all have blogs or sites created using WordPress! Created back
    in 2003, WordPress has become one of the world's most well-known content management
    system platforms, used in dozens of scenarios, from simple blogs to full-blown
    e-commerce systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 解决了这个问题吗？嗯，这是我们学习Less旅程中下一章的主题。他们都有使用WordPress创建的博客或网站！WordPress创建于2003年，已成为世界上知名的内容管理系统平台之一，用于数十种场景，从简单的博客到完整的电子商务系统。
- en: Throughout the next few pages, we're going to learn how to incorporate our favorite
    CSS preprocessor into WordPress and some of the tricks we can use to help simplify
    the creation of style sheets. The best bit—most are tricks we've already covered
    throughout the book so far; we're just going to adapt where we use them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几页中，我们将学习如何将我们最喜欢的CSS预处理器集成到WordPress中，以及我们可以使用的技巧来帮助简化样式表的创建。最好的部分——大多数都是我们在本书中已经介绍过的技巧；我们只是将它们应用到我们使用的地方。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: An overview of the WP theme structure
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WP主题结构的概述
- en: Incorporating Less into pages
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Less集成到页面中
- en: Some examples of converting code to use Less
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码转换为使用Less的一些示例
- en: Prebuilt themes for WP, using Less
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Less为WP预构建的主题
- en: Plugins available to use Less with WordPress
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用于与WordPress一起使用Less的插件
- en: Using Grunt to help Less development in WP
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Grunt帮助在WP中开发Less
- en: Curious? Let's get started...!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 好奇吗？让我们开始吧...！
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This chapter will assume a certain level of familiarity with the WordPress theme
    design; if you're new to WordPress, you might like to peruse one of the several
    books by Packt Publishing on WordPress theme design.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将假设您对WordPress主题设计有一定程度的熟悉；如果您是WordPress的新手，您可能想浏览一下Packt Publishing出版的关于WordPress主题设计的几本书。
- en: Introducing the WP theme structure
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍WP主题结构
- en: If you've spent any time working with CMS systems, then you will likely have
    come across the concept of using themes to customize your site and add or remove
    features as you see fit.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您花过时间与CMS系统一起工作，那么您可能已经遇到了使用主题来定制您的网站和根据需要添加或删除功能的概念。
- en: WordPress is no different; it uses a system of themes to customize its appearance;
    throughout this chapter, we're going to follow this principle and see how we can
    use Less to help simplify the process. Before we start writing code, it's worth
    taking a moment to examine the anatomy of a WordPress theme.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress也不例外；它使用一套主题来定制其外观；在本章中，我们将遵循这一原则，看看我们如何使用Less来帮助简化这个过程。在我们开始编写代码之前，花一点时间来检查WordPress主题的结构是值得的。
- en: 'First, we need to download the WordPress source files, which are available
    at [http://wordpress.org/latest.zip](http://wordpress.org/latest.zip); at the
    time of writing this, the latest version is 3.9.1\. When we open the WordPress
    archive, navigate to **wp-content** | **themes** | **twentyfourteen**. We''ll
    see something akin to this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要下载WordPress源文件，这些文件可在[http://wordpress.org/latest.zip](http://wordpress.org/latest.zip)找到；在撰写本文时，最新版本是3.9.1。当我们打开WordPress存档时，导航到**wp-content**
    | **themes** | **twentyfourteen**。我们会看到类似以下的内容：
- en: '![Introducing the WP theme structure](img/00091.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![介绍WP主题结构](img/00091.jpeg)'
- en: All of these files are required to operate the Twenty Fourteen theme that comes
    with this version of WordPress; we will be using this theme as a basis for our
    exercises throughout this chapter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些文件都是操作随本版WordPress提供的Twenty Fourteen主题所必需的；我们将以此主题为基础，在本章的练习中使用。
- en: We are most interested in the `style.css` file—this is the main style sheet
    for any theme. This file contains the theme information that is displayed within
    the theme selection area of WordPress, where we can see details such as the name
    of the theme, author, support URL, and so on. We will also make use of the `functions.php`
    file to add support for Less, but this will be a one-off process that happens
    before we really get to work on customizing our theme.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最感兴趣的是`style.css`文件——这是任何主题的主要样式表。此文件包含在WordPress主题选择区域显示的主题信息，我们可以看到诸如主题名称、作者、支持URL等详细信息。我们还将使用`functions.php`文件来添加对Less的支持，但这将是一个一次性过程，在我们真正开始定制主题之前发生。
- en: Preparing our environment
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备我们的环境
- en: Now that we've downloaded WordPress, we need to ensure we have a working environment
    available in order to work with Less.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经下载了 WordPress，我们需要确保有一个可用的环境来使用 Less。
- en: 'Each person''s environment might differ, but to get the most benefit out of
    the exercises that follow, you will need to ensure that you at least have the
    following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人的环境可能都不同，但要最大限度地利用接下来的练习，您至少需要确保以下内容：
- en: A working copy of WordPress that can be customized—ideally, this will be locally
    hosted using a web server such as WAMP (for Windows, available at [http://www.wampserver.com](http://www.wampserver.com)),
    or MAMP (for Mac, available at [http://www.mamp.info](http://www.mamp.info)).
    Alternatively, you might have some online webspace available for use—this will
    work as well, although you might find the automation exercises at the end of this
    chapter hard to do.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个可以定制的 WordPress 工作副本——理想情况下，这将是在使用类似 WAMP（适用于 Windows，可在 [http://www.wampserver.com](http://www.wampserver.com)
    获取）或 MAMP（适用于 Mac，可在 [http://www.mamp.info](http://www.mamp.info) 获取）的 Web 服务器本地托管。或者，您可能有一些在线
    Web 空间可供使用——这同样有效，尽管您可能会发现本章末尾的自动化练习难以完成。
- en: For the purposes of the book, I will assume WampServer is installed; change
    accordingly, if your server is different.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了本书的目的，我将假设 WampServer 已安装；如果您的服务器不同，请相应地进行更改。
- en: A copy of Node.js installed along with Grunt; we covered how to install both
    earlier in [Chapter 2](part0025_split_000.html#page "Chapter 2. Building a Less
    Development Toolkit"), *Building a Less Development Toolkit*.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Node.js 和 Grunt 的副本；我们已经在 [第 2 章](part0025_split_000.html#page "第 2 章。构建
    Less 开发工具包") *构建 Less 开发工具包* 中介绍了如何安装它们。
- en: A text editor of your choice—there are hundreds available; my personal preference
    is Sublime Text 2, which I will assume you have installed.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择您喜欢的文本编辑器——有数百种可供选择；我个人的偏好是 Sublime Text 2，我将假设您已经安装了它。
- en: If you do not have WordPress already installed, then you can find full instructions
    at [http://codex.wordpress.org/Installing_WordPress](http://codex.wordpress.org/Installing_WordPress)
    on how to install it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装 WordPress，您可以在 [http://codex.wordpress.org/Installing_WordPress](http://codex.wordpress.org/Installing_WordPress)
    找到完整的安装说明。
- en: Okay, assuming we have the requisite pieces of software installed, let's move
    on and take a look at preparing our theme for working with Less.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，假设我们已经安装了所需的软件组件，让我们继续并查看如何为使用 Less 准备我们的主题。
- en: Creating a basic child theme
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建基本子主题
- en: Hold on, preparing our theme?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 等一下，准备我们的主题？
- en: Yes, you read correctly—preparing our theme. While WordPress does come with
    three themes available for use out of the box, it is not good practice to modify
    the source files directly.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，您读得正确——准备我们的主题。虽然 WordPress 默认附带三个主题可供使用，但直接修改源文件并不是一个好习惯。
- en: Modifying the source files means that your theme will break if an update is
    released for it (and yes, WordPress does release updates to its themes). We can
    get around this by creating a child theme, which sits in the same theme folder,
    but is set to inherit the base files of its parent theme.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 修改源文件意味着如果为该主题发布更新，则您的主题将会损坏（是的，WordPress 确实会对其主题发布更新）。我们可以通过创建一个子主题来解决这个问题，该子主题位于同一主题文件夹中，但设置为继承其父主题的基本文件。
- en: What this means is that we can retain the original system files for the parent
    theme, but use new styles created in the child theme to override existing styles.
    We will make good use of this principle later in this chapter, when we start to
    write new Less code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以保留父主题的原始系统文件，但使用在子主题中创建的新样式来覆盖现有样式。我们将在本章后面开始编写新的 Less 代码时充分利用这一原则。
- en: 'For now, let''s quickly run through creating our new child theme:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速浏览创建我们的新子主题：
- en: Navigate to **wp-content** | **themes**; here, you will see a folder called
    `twentyfourteen`:![Creating a basic child theme](img/00092.jpeg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **wp-content** | **themes**；在这里，您将看到一个名为 `twentyfourteen` 的文件夹：![创建基本子主题](img/00092.jpeg)
- en: Create a copy of this folder, but rename it `twentyfourteen-child`. It is good
    practice to append `child` at the end of such a theme, to identify it in the theme
    folder list.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建此文件夹的副本，并将其重命名为 `twentyfourteen-child`。在主题文件夹列表中识别此类主题时，在主题名称末尾附加 `child`
    是一个好习惯。
- en: 'Within the `twentyfourteen-child` folder, crack open a copy of `style.css`,
    then remove everything below the closing `*/`, and replace as shown:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `twentyfourteen-child` 文件夹内，打开 `style.css` 的副本，然后删除关闭 `*/` 下的所有内容，并按照以下所示进行替换：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That's all we need to do. If we browse to the **Central Administration** area
    of our WordPress installation, we will see the child theme present in the **Appearance**
    | **Themes** area. All that remains to do is to activate it in the usual manner.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们需要做的全部。如果我们浏览到 WordPress 安装中的 **中央管理** 区域，我们将在 **外观** | **主题** 区域看到子主题。剩下的只是以通常的方式激活它。
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that going forward, it is assumed all changes will be made in the child
    theme, unless directed otherwise.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，从现在开始，假设所有更改都将直接在子主题中进行，除非另有说明。
- en: Adding support for Less in WordPress
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 WordPress 中添加 Less 支持
- en: With WordPress installed and working, it's time to turn our attention to adding
    support for Less.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 WordPress 安装并运行后，是时候将我们的注意力转向添加 Less 支持。
- en: 'In older versions of WordPress, it was customary to add this directly to the
    `header.php` file. While it worked fine, it meant we couldn''t maintain a clear
    separation between HTML content and presentational markup. Thankfully, in more
    recent versions, the WordPress team moved to adding the style sheet by using a
    function stored in the `functions.php` file. Let''s take a look at how to achieve
    this now:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 WordPress 的旧版本中，通常直接将其添加到 `header.php` 文件中。虽然它工作得很好，但这意味着我们无法在 HTML 内容和表现性标记之间保持清晰的分离。幸运的是，在更近的版本中，WordPress
    团队转向使用存储在 `functions.php` 文件中的函数来添加样式表。让我们看看现在如何实现这一点：
- en: 'Open a text editor of your choice, then browse to the `twentyfourteen` theme
    folder, and look for `functions.php`. Add the following code at the bottom of
    the file:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您选择的文本编辑器，然后浏览到 `twentyfourteen` 主题文件夹，并查找 `functions.php`。在文件底部添加以下代码：
- en: '[PRE1]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save the changes. If we refresh the screen and then preview the results in a
    browser, we won't see any visual changes. However, if we preview the compiled
    source code in a DOM Inspector such as Firebug, we can clearly see the addition
    of Less:![Adding support for Less in WordPress](img/00093.jpeg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存更改。如果我们刷新屏幕并在浏览器中预览结果，我们不会看到任何视觉上的变化。然而，如果我们使用 Firebug 等DOM检查器预览编译的源代码，我们可以清楚地看到
    Less 的添加：![在 WordPress 中添加 Less 支持](img/00093.jpeg)
- en: At this point, we have a version of WordPress working perfectly well with Less
    support—we can go ahead and create a Less file, called `style.less`, and drop
    this in as a replacement for `style.css`, right…?
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经有一个版本的工作良好的 WordPress，它支持 Less——我们可以继续创建一个名为 `style.less` 的 Less 文件，并将其作为
    `style.css` 的替代品放入，对吧…？
- en: Showing Less style sheets to specific users
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向特定用户显示更少的样式表
- en: 'Not so fast. We told WordPress how to call in Less, but not how to retrieve
    the right set of Less styles yet! To do this, we need to add another function
    into the `functions.php` file; this one will not only incorporate a replacement
    Less-based style sheet, but also show it only to the administrator and display
    a compiled version for normal use. Bear with me on this; all will become clear
    shortly:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 别急。我们告诉了 WordPress 如何调用 Less，但还没有告诉它如何检索正确的 Less 样式集！为了做到这一点，我们需要在 `functions.php`
    文件中添加另一个函数；这个函数不仅将包含一个基于 Less 的替换样式表，而且只向管理员显示，并为常规使用显示编译版本。请耐心等待，一切很快就会变得清晰：
- en: 'Open a copy of the `functions.php` file that we worked on in the previous exercise.
    This time, add the following at the bottom of the file:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开我们在上一项练习中工作过的 `functions.php` 文件副本。这次，在文件底部添加以下内容：
- en: '[PRE2]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save a copy of the file, then refresh the browser window that currently displays
    WordPress. If we open up our DOM Inspector as we did before, we can now see the
    replacement style sheet in use:![Showing Less style sheets to specific users](img/00094.jpeg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件副本，然后刷新当前显示 WordPress 的浏览器窗口。如果我们像之前一样打开我们的 DOM 检查器，我们现在可以看到正在使用的替换样式表：![向特定用户显示更少的样式表](img/00094.jpeg)
- en: If we log out of WordPress and log in as another user, the compiled CSS version
    of the style sheet will be displayed instead.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们退出 WordPress 并以其他用户身份登录，将显示样式表的编译 CSS 版本。
- en: Adding Less support using a plugin
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用插件添加 Less 支持
- en: Adding in code manually works perfectly well, but after a while it gets tedious.
    Surely we can make things easier using a plugin, right?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 手动添加代码工作得很好，但过了一段时间就会变得乏味。我们当然可以使用插件使事情变得更简单，对吧？
- en: 'Absolutely, we can add support for Less using a plugin; there are several ways
    to achieve this, but my favorite has to be the plugin created by Justin Kopepasah
    and available for download from WordPress Plugin Directory at [https://wordpress.org/plugins/less-theme-support/](https://wordpress.org/plugins/less-theme-support/).
    Let''s take a peek at how to use it; it''s really easy to install:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对可以，我们可以使用插件添加对Less的支持；有几种方法可以实现这一点，但我的最爱必须是Justin Kopepasah创建的插件，可在WordPress插件目录[https://wordpress.org/plugins/less-theme-support/](https://wordpress.org/plugins/less-theme-support/)下载。让我们看看如何使用它；安装它真的很简单：
- en: Start by navigating to [https://wordpress.org/plugins/less-theme-support/](https://wordpress.org/plugins/less-theme-support/)
    and then clicking on **Download Version 1.0.2**. When prompted to do so, save
    it into the `plugins` folder within our installation of WordPress.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先导航到[https://wordpress.org/plugins/less-theme-support/](https://wordpress.org/plugins/less-theme-support/)，然后点击**下载版本1.0.2**。当被提示时，将其保存到WordPress安装的`plugins`文件夹中。
- en: Browse to the **Plugins** area in WordPress' admin, then click on **Upload**
    and select **less-theme-support.1.0.2.zip**.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在WordPress的admin中浏览到**插件**区域，然后点击**上传**并选择**less-theme-support.1.0.2.zip**。
- en: Click on **Install Now**, then when prompted, click on **Activate Plugin**.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**立即安装**，然后当被提示时，点击**激活插件**。
- en: 'At this point, the plugin is now active and we need to tell our WordPress theme
    how to use it:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，插件现在是激活的，我们需要告诉我们的WordPress主题如何使用它：
- en: If you have not already done so from a previous exercise, rename the `style.css`
    file at the root of our theme to `style.less`.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们还没有在之前的练习中这样做，将主题根目录下的`style.css`文件重命名为`style.less`。
- en: Fire up your favorite text editor and open a copy of the `functions.php` file
    that is located at the root of our `theme` folder.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动您最喜欢的文本编辑器并打开位于我们`theme`文件夹根目录的`functions.php`文件的副本。
- en: 'Look for the `twentyfourteen_setup()`function (on or around line 58) and add
    the following at the end of the function, as shown:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找`twentyfourteen_setup()`函数（在第58行或附近）并在函数末尾添加以下内容，如图所示：
- en: '[PRE3]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Save the file. If we revert to our WordPress site and refresh the screen, we
    should see no visual change. The real change will show if we look at the code
    within DOM Inspector:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件。如果我们回到我们的WordPress网站并刷新屏幕，我们应该看不到任何视觉上的变化。真正的变化会在我们查看DOM检查器中的代码时显示：
- en: '![Adding Less support using a plugin](img/00095.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![使用插件添加更少的支持](img/00095.jpeg)'
- en: 'It is worth noting that Less Theme Support comes with a number of configuration
    options, which we can use to change how it works. This is perfect if we''re switching
    from using it in a development site, to a production one. The values that can
    be set are Boolean and the default is false:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Less主题支持附带了一些配置选项，我们可以使用它们来更改其工作方式。如果我们从开发网站切换到生产环境，这非常完美。可以设置的值是布尔值，默认为false：
- en: '`Enable`: This enables Less and enqueues `less.min.js` on the frontend'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Enable`：这启用了Less并在前端排队`less.min.js`'
- en: '`Develop`: This enables a development environment for Less and enqueues `less-develop.js`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Develop`：这启用了Less的开发环境并在前端排队`less-develop.js`'
- en: '`Watch`: This enables the watch mode for Less and enqueues `less-watch.js`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Watch`：这启用了Less的监视模式并排队`less-watch.js`'
- en: '`Minify`: This enables usage of a minified style sheet (`style.min.css`) on
    the frontend for all other visitors (best generated using `lessc -x style.less
    > style.min.css`)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Minify`：这启用了在前端对所有其他访客使用压缩样式表（`style.min.css`）（最好使用`lessc -x style.less >
    style.min.css`生成）'
- en: 'If used with care, they can be very flexible; for instance, you might want
    to configure your theme to use Less dynamically when working in development, but
    not in production:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用得当，它们可以非常灵活；例如，我们可能希望配置我们的主题在开发时动态使用Less，但在生产时不使用：
- en: '[PRE4]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If we switch to production use, then we are likely to use the `minify` option
    instead:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们切换到生产使用，那么我们可能会使用`minify`选项：
- en: '[PRE5]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As we've seen, it's an easy plugin to configure. If you're working with Less
    on a number of sites, it's often better to use a plugin to install Less so that
    we don't have to delve into source files and edit them. The key part of this exercise
    is the use of the `add_theme_support` keyword for WordPress, which allows a theme
    or plugin to register support for a certain feature within our theme.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，这是一个易于配置的插件。如果你在多个网站上使用Less，通常使用插件来安装Less会更好，这样我们就不必深入研究源文件并对其进行编辑。这个练习的关键部分是使用WordPress的`add_theme_support`关键字，它允许主题或插件在我们的主题内注册对某些功能的支持。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are interested in learning more about `add_theme_support`, it is worth
    browsing the WordPress Codex page at [http://codex.wordpress.org/Function_Reference/add_theme_support](http://codex.wordpress.org/Function_Reference/add_theme_support).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于 `add_theme_support` 的信息，值得浏览 WordPress Codex 页面 [http://codex.wordpress.org/Function_Reference/add_theme_support](http://codex.wordpress.org/Function_Reference/add_theme_support)。
- en: This allows us to tell the theme to use Less. We can always do this manually
    (as we have seen), but it is preferable where possible to use plugins, unless
    circumstances dictate an alternative method is needed.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许我们告诉主题使用 Less。我们总是可以手动这样做（正如我们所看到的），但在可能的情况下，使用插件会更好，除非情况要求需要另一种方法。
- en: Working with Less themes in WordPress
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 WordPress 中使用 Less 主题
- en: Now that we have support for Less in place, let's move on and take a look at
    the options available to use Less styles in our themes, either within our own
    creations, or as part of prebuilt themes available for sale or download via the
    Internet.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了 Less 的支持，让我们继续看看在主题中使用 Less 样式可用的选项，无论是在我们自己的创作中，还是作为可在网上销售或下载的预构建主题的一部分。
- en: Converting themes to use Less
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将主题转换为使用 Less
- en: We now have the basis for a Less style sheet, to which we can start to add our
    converted styles. Hold on, I hear you ask, "If we're converting a theme such as
    `TwentyFourteen`, where on earth do we start?"
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了 Less 样式表的基线，我们可以开始添加我们转换的样式。等等，我听到你问，“如果我们正在转换一个像 `TwentyFourteen` 这样的主题，我们应该从哪里开始？”
- en: 'It''s a very good question. Within excess of 4200 lines in the current style
    sheet for this theme, it''s easy to feel bewildered! However, all will begin to
    come clear if we follow two simple principles:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常好的问题。在这个主题当前样式表的4200多行中，很容易感到困惑！然而，如果我们遵循两个简单的原则，所有的问题都将开始变得清晰：
- en: Less allows us to break down our style sheet into multiple files, which are
    compiled into one by Less. Make use of this; it will be a big help, as smaller
    files make for easier conversion!
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Less 允许我们将样式表分解成多个文件，这些文件由 Less 编译成一个。利用这一点；这将非常有帮助，因为较小的文件更容易转换！
- en: Don't try to convert all of it in one go; do it bit by bit. Less is a superset
    of CSS, which means that it is effectively all CSS; Less will happily compile
    unchanged CSS styles, even in a `.less` file.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要试图一次性转换所有内容；一点一点地做。Less 是 CSS 的超集，这意味着它实际上包含了所有的 CSS；Less 会愉快地将未更改的 CSS 样式编译为
    `.less` 文件。
- en: 'With these principles in mind, let''s make a start on converting our theme:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些原则的指导下，让我们开始转换我们的主题：
- en: Start by opening a copy of the `style.css` file from the `TwentyFourteen` parent
    theme and look for section 4, which starts on or around line 831 to 926.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先打开 `TwentyFourteen` 父主题中的 `style.css` 文件副本，并查找第4部分，它从第831行或第926行开始。
- en: 'Copy this section to the `style.less` file in our child theme; paste it in
    below this line:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此部分复制到子主题中的 `style.less` 文件；在此行下方粘贴：
- en: '[PRE6]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We''ll start by converting the normal green color for the search box to use
    a variable, then use it to work out the light green color used when hovering over
    it. Add the following immediately below the `@import` statement in `style.less`,
    as shown:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从将搜索框的正常绿色颜色转换为变量开始，然后使用它来计算悬停时使用的浅绿色颜色。在 `style.less` 中的 `@import` 语句下方立即添加以下内容，如图所示：
- en: '[PRE7]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The next change we''ll make will be to the `.site-title` style. We''ll convert
    it to Less'' nesting format, so remove these two styles:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们接下来要做的更改将是 `.site-title` 样式。我们将将其转换为 Less 的嵌套格式，因此请删除这两个样式：
- en: '[PRE8]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Replace the previous two styles with the following:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用以下内容替换之前的两个样式：
- en: '[PRE9]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We also have an opportunity to incorporate a mixin. This time, it will be in
    the form of a replacement for the `box-sizing` style used in the `.search-box-wrapper`
    class. Look for this class in the `style.less` file and modify as shown:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还有机会整合一个 mixin。这次，它将是一个用于 `.search-box-wrapper` 类中使用的 `box-sizing` 样式的替代品。在
    `style.less` 文件中查找此类，并按所示修改：
- en: '[PRE10]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In a separate file, add the following code and save it as `mixins.less` in
    the `less` folder:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个单独的文件中，添加以下代码并将其保存为 `mixins.less` 在 `less` 文件夹中：
- en: '[PRE11]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We need to import this into our Less file, so go ahead and add the following
    line, as indicated:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要将此导入我们的 Less 文件中，所以请继续添加以下行，如指示：
- en: '[PRE12]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The final step is to rename the `style.css` file in our child theme to `style.less`;
    although this is not yet fully converted, Less will still compile this as valid
    CSS.![Converting themes to use Less](img/00096.jpeg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是将子主题中的 `style.css` 文件重命名为 `style.less`；尽管这还不是完全转换，但 Less 仍然会将其编译为有效的 CSS。![将主题转换为使用
    Less](img/00096.jpeg)
- en: 'At this point, we can now save our work, then refresh the browser window, which
    displays our WordPress site. If all is well, you will not see any visual difference.
    The only difference you will see is when looking at the compiled code through
    a DOM Inspector, such as Firebug:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们现在可以保存我们的工作，然后刷新浏览器窗口，它将显示我们的WordPress网站。如果一切顺利，你将看不到任何视觉上的差异。你唯一会看到的不同之处在于通过DOM检查器查看编译后的代码，例如Firebug：
- en: The keen-eyed among you might have spotted something—why are we duplicating
    code, I hear you ask? There's a good reason for duplicating the code, at least
    temporarily—while this is something we wouldn't normally want do to do, the irony
    here is that we can use the unintended duplication to good effect, to help confirm
    if our new styles are correct.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 中间那些敏锐的人可能已经注意到了——为什么我们要重复代码，你可能会问？重复代码有一个很好的理由，至少暂时是这样——虽然我们通常不想这样做，但这里的讽刺之处在于我们可以利用这种意外的重复来产生良好的效果，以帮助确认我们的新样式是否正确。
- en: 'We took a copy of `section 4` from the original parent theme''s CSS file and
    copied it into our child theme. By default, styles in a child theme are appended
    to the parent''s style sheet. In this instance, our theme has appended the duplicated
    style, as we would expect. Here comes the rub: we need to then rework the duplicated
    style to its Less equivalent (as was done here). We can then check against the
    original theme, indicated by the `style.css` at line 917, to see if our Less version
    is correct.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从原始父主题的CSS文件中复制了`第4节`并将其复制到我们的子主题中。默认情况下，子主题中的样式会附加到父主题的样式表中。在这种情况下，我们的主题已经附加了重复的样式，正如我们所期望的那样。现在的问题是：我们需要将重复的样式重新工作成Less等价物（就像这里所做的那样）。然后我们可以与原始主题进行对比，原始主题由第917行的`style.css`指示，以查看我们的Less版本是否正确。
- en: If it is correct, we can then either remove it from the original theme, or we
    can remove the `@import` statement; this breaks the dependency on the parent theme
    and turns the child theme into a theme in its own right.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它是正确的，我们就可以从原始主题中删除它，或者我们可以删除`@import`语句；这打破了与父主题的依赖关系，并将子主题转变为一个独立的主题。
- en: Now that we've covered the basics of converting a theme, let's take a moment
    to consider some useful tips that will help us with creating your own theme.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了转换主题的基础知识，让我们花点时间考虑一些有用的提示，这将帮助我们创建自己的主题。
- en: Creating our own theme
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建我们自己的主题
- en: So far, we've spent time converting existing CSS styles in our WordPress theme
    to use Less. While this works well, it will take time to complete, as WordPress
    core themes, such as `TwentyTwelve` or `TwentyFourteen`, run into several thousand
    lines!
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经花费时间将WordPress主题中现有的CSS样式转换为使用Less。虽然这样做效果不错，但完成它需要时间，因为WordPress核心主题，例如`TwentyTwelve`或`TwentyFourteen`，有数千行代码！
- en: A more sensible route is to create your own theme. Rather than writing one from
    scratch, it is preferable to create it as a child theme, so it overrides existing
    styles within the parent theme.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 更合理的方法是创建自己的主题。与其从头开始编写，不如将其创建为子主题，这样就可以覆盖父主题中现有的样式。
- en: Tip
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Although, we've used an example here, the principles detailed can be used in
    any instance where you need to create a new theme.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们在这里使用了一个例子，但详细说明的原则可以用于任何需要创建新主题的实例。
- en: '"Why use a child theme", I hear you ask? There are several good reasons to
    do so:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: “为什么使用子主题？”你可能会问？这样做有几个很好的理由：
- en: Any changes you make to a parent theme will likely break if the WordPress team
    issues an update.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你对父主题所做的任何更改，如果WordPress团队发布更新，很可能会被破坏。
- en: It saves you having to redefine a whole bunch of styles; you can concentrate
    instead on making the critical changes. When ready, you can incorporate the parent
    theme's styles into your own and convert your child theme into one that can be
    used in its own right.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这可以节省你重新定义大量样式的麻烦；你可以集中精力进行关键更改。准备好后，你可以将父主题的样式合并到自己的主题中，并将子主题转换为可以独立使用的主题。
- en: 'Let''s now take a look at creating a theme using Less. To get the full benefit
    from this exercise, we''ll need to ensure that a few things are in place:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何使用Less创建一个主题。为了充分利用这个练习，我们需要确保以下几点已经到位：
- en: Your WordPress installation has a copy of `TwentyTwelve` installed and activated.
    `TwentyTwelve` has a simpler CSS style sheet than the current `TwentyFourteen`
    incarnation; it will make the process easier to grasp and hopefully encourage
    you to move onto working with the newer theme!
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的WordPress安装中安装并激活了`TwentyTwelve`。`TwentyTwelve`的CSS样式表比当前的`TwentyFourteen`版本简单；这将使理解过程更容易，并可能鼓励你开始使用较新的主题！
- en: A copy of the `TwentyTwelve` theme has been saved and reconfigured as a child
    theme; if you're unsure on how, then refer to the *Creating a basic child theme*
    section of this chapter.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TwentyTwelve`主题的副本已被保存并重新配置为子主题；如果您不确定如何操作，请参阅本章的**创建基本子主题**部分。'
- en: A copy of Crunch! has been installed and configured for use on your system.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Crunch!的副本已安装并配置好，可在您的系统上使用。
- en: A copy of Firefox is installed. This theme was developed using Firefox to keep
    things simple for the purposes of this exercise.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firefox的副本已安装。这个主题是使用Firefox开发的，以便在本练习中保持简单。
- en: 'We''ll begin with creating the basic style sheet that is key to the whole compilation
    process:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从创建整个编译过程关键的基本样式表开始：
- en: Start by renaming the existing `style.css` file within your child theme folder.
    We'll replace it with a compiled version at the end of the exercise.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将子主题文件夹中现有的`style.css`文件重命名。我们将在练习结束时用编译版本替换它。
- en: From the accompanying download, extract and save a copy of the **less** folder
    within the `learningless` folder, to the root of your child theme folder.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从附带下载中提取并保存`learningless`文件夹中的**less**文件夹的副本到子主题文件夹的根目录。
- en: 'Open your text editor and then add the following to it, saving it as `style.less`
    in the root of your child theme folder:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的文本编辑器，然后将其添加到其中，将其保存为子主题文件夹根目录下的`style.less`：
- en: '[PRE13]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, we need to compile `style.less` in order to produce our WordPress style
    sheet. For now, we'll use Crunch! to compile the file, so go ahead and open `style.less`
    within your installation of Crunch!.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要编译`style.less`以生成我们的WordPress样式表。目前，我们将使用Crunch!来编译文件，所以请继续在Crunch!安装中打开`style.less`。
- en: Click on **Crunch File**, then when prompted, enter `style.css` as the filename
    to save the compiled results. It will look similar to the following screenshot:![Creating
    our own theme](img/00097.jpeg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Crunch File**，然后在提示时，输入`style.css`作为保存编译结果的文件名。它看起来类似于以下截图：![创建我们自己的主题](img/00097.jpeg)
- en: Copy the compiled `style.css` file into the root of your child theme folder.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将编译好的`style.css`文件复制到子主题文件夹的根目录。
- en: Fire up your copy of Firefox and browse to your WordPress installation. If all
    is well, you should see something akin to this screenshot:![Creating our own theme](img/00098.jpeg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动您的Firefox副本并浏览到您的WordPress安装。如果一切顺利，您应该会看到类似于以下截图的内容：![创建我们自己的主题](img/00098.jpeg)
- en: Okay, it won't win any style awards! Nevertheless, it helps to illustrate some
    key points; let's take a breather and look at these in more detail.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，它不会赢得任何风格奖项！然而，它有助于说明一些关键点；让我们休息一下，更详细地看看这些。
- en: Note
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are completed version of the `style.less` and `style.css` files within
    the `learningless` folder; navigate to the less folder, then rename `style-finished.css`
    to style and copy to the root of your child folder. If you are struggling with
    the less code, then `style-finished.less` contains a completed copy of the code
    for this theme.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在`learningless`文件夹中有`style.less`和`style.css`文件的完成版本；导航到less文件夹，然后将`style-finished.css`重命名为style并复制到子文件夹的根目录。如果您在less代码上遇到困难，那么`style-finished.less`包含了这个主题的代码的完成副本。
- en: The crux of this whole process is the `style.less` file. Notice how we created
    a number of `@import` statements within? This is an essential part of developing
    themes for WordPress when working with Less; Less allows us to split what could
    be a lengthy style sheet into smaller, more manageable files.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 整个过程的精髓是`style.less`文件。注意我们如何在其中创建了许多`@import`语句？这是使用Less为WordPress开发主题时的一个重要部分；Less允许我们将可能很长的样式表拆分成更小、更易于管理的文件。
- en: 'At this point, you''re probably asking, "How do I know how many files to split
    my code into?" It''s a good question and the short answer is: there is no single
    right answer! Let me explain.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能想知道，“我如何知道将代码拆分成多少个文件？”这是一个好问题，简短的答案是：没有唯一的正确答案！让我来解释。
- en: It all depends on how large your style sheet is. A good pointer is to consider
    what elements you have within your style sheet and group them accordingly. You
    can then use one or more Less file; Less will happily compile them into one single
    style sheet at the end. In our example, we have a number of suitable groups such
    as posts, sidebar, navigation and the like; we've set our main style sheet to
    import a single Less file for each of these groups.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都取决于您的样式表有多大。一个好的提示是考虑您的样式表中有哪些元素，并相应地分组。然后，您可以使用一个或多个Less文件；Less会愉快地将它们编译成一个单一的样式表。在我们的例子中，我们有多个合适的组，如帖子、侧边栏、导航等；我们已将主样式表设置为为每个这些组导入单个Less文件。
- en: Throughout all of the Less files, we've made full use of Less' nesting capability;
    this is one key skill to master when working with WordPress themes built using
    Less. Nesting is very much your friend when developing WordPress themes; we can
    group together all of the relevant styles, which makes it easier to read and manage.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有的 Less 文件中，我们已经充分利用了 Less 的嵌套功能；这是在用 Less 构建WordPress 主题时需要掌握的关键技能之一。嵌套在开发
    WordPress 主题时是非常有用的；我们可以将所有相关的样式组合在一起，这使得阅读和管理变得更加容易。
- en: Moving on; anyone notice the presence of two key files, namely `mixins.less`
    and `variables.less`? These are perfect examples of Less files to be created as
    part of developing themes for WordPress.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来；有人注意到两个关键文件的存在，即 `mixins.less` 和 `variables.less`？这些是作为开发 WordPress 主题的一部分创建的
    Less 文件的完美示例。
- en: 'We can store all of our variables within one file and reference them as required.
    A perfect example is to first create variables for each of our colors:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将所有变量存储在一个文件中，并在需要时引用它们。一个完美的例子是首先为我们的每种颜色创建变量：
- en: '[PRE14]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can then reference the colors within secondary variables. If there''s any
    need to change, then this is the only file that needs to be updated:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以在二级变量中引用颜色。如果需要更改，那么只需要更新这个文件：
- en: '[PRE15]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If we open a copy of `posts.less`, we can see the variables in use as shown
    in the following code:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们打开 `posts.less` 的一个副本，我们可以看到正在使用的变量，如下面的代码所示：
- en: '[PRE16]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the same way, we can store all of our mixins in one file, namely `mixins.less`;
    should any of these change, there is only one file that needs updating, not many!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以将所有我们的混入（mixins）存储在一个文件中，即 `mixins.less`；如果这些混入有任何更改，只需要更新一个文件，而不是多个！
- en: Taking construction further
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步构建
- en: At this stage, you're probably thinking, "Great, I've got a theme I can use…"
    Right? Well, yes, and not quite. (Bet you weren't expecting that…)
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能正在想，“太好了，我有一个可以使用的主题…” 对吗？嗯，是的，但也不完全是这样。（你肯定没料到这个…）
- en: Hands up, if you read through each Less file from our new theme? Good. Now,
    hands up if you really read through the files carefully…ah! not so many of you…
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你阅读了我们新主题中的每个 Less 文件，请举手。很好。现在，如果你们真的仔细阅读了这些文件，请举手…啊！没有多少人…
- en: 'This was done with good reason—the code works perfectly well; as a start point,
    it will serve the purpose. However, there are some instances where it can be improved;
    after all, it was never intended to be a Picasso! I thought I should leave you
    with this little challenge: can you find where it can be improved? *One clue…there
    are not enough variables, me thinks…up for the challenge?*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这是有充分理由的——代码工作得非常完美；作为一个起点，它将满足需求。然而，有些地方可以改进；毕竟，它从未打算成为毕加索的作品！我想我应该给你留下这个小挑战：你能找到可以改进的地方吗？*一个提示…变量似乎不够多…你接受挑战吗？*
- en: 'Okay, here''s a more involved challenge: remember how I said we''ll use Crunch!
    to compile our code? Well, we can do better than this. We''ve used Grunt elsewhere
    in this book, so here''s another use: we can use it to automate our compilation.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这里有一个更复杂的挑战：记得我提到我们会使用 Crunch! 来编译我们的代码吗？嗯，我们可以做得更好。我们在本书的其他地方使用了 Grunt，所以这里又有一个用途：我们可以用它来自动化我们的编译。
- en: The key to this is compiling only the `style.less` file. While you can try compiling
    the others, they will no doubt throw errors, as most will not see the variables'
    file that is a dependency.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 关键在于只编译 `style.less` 文件。虽然你可以尝试编译其他文件，但它们无疑会抛出错误，因为大多数文件都不会看到作为依赖的变量文件。
- en: The next part is to configure `gruntfile.js`, which will tell Grunt to only
    compile this file. We can then run Grunt watch in the background to allow it to
    compile automatically. We will cover this whole process in more detail, later
    in this chapter.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是配置 `gruntfile.js`，这将告诉 Grunt 只编译这个文件。然后我们可以在后台运行 Grunt watch 以允许它自动编译。我们将在本章的后面更详细地介绍整个过程。
- en: Tip
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you get stuck, have a look on Google, as there are several examples available;
    [http://jonathanmh.com/make-grunt-watch-for-lesscss-changes/](http://jonathanmh.com/make-grunt-watch-for-lesscss-changes/)
    contains a useful example by one is the useful blog post by Jonathan Hethey. It
    contains a number of additional steps, but should be enough to give you an idea
    of how to use Grunt and watch when compiling Less theme files.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到困难，可以在谷歌上查找，因为那里有多个示例；[http://jonathanmh.com/make-grunt-watch-for-lesscss-changes/](http://jonathanmh.com/make-grunt-watch-for-lesscss-changes/)
    包含了 Jonathan Hethey 的一篇有用的示例博客文章。它包含了一些额外的步骤，但应该足以让你了解如何使用 Grunt 和 watch 来编译 Less
    主题文件。
- en: Enough of developing; it's time to change tack and have a breather. Let's delve
    into using prebuilt Less themes with WordPress.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 足够的开发了；是时候改变方向，休息一下了。让我们深入了解如何使用预构建的Less主题与WordPress一起使用。
- en: Using a prebuilt Less theme
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用预构建的Less主题
- en: 'If you''re not quite up to building a theme from scratch, then you can always
    use a prebuilt one. There are dozens available online, either for free or at a
    low cost. It''s worth having a look on Google for some examples and then trying
    them out and deciding whether they match your requirements. Here are some examples
    to get you started:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有准备好从头开始构建主题，那么你可以始终使用预构建的主题。网上有数十种可供选择，要么免费，要么价格低廉。在Google上查找一些示例，然后尝试它们并决定它们是否符合你的要求是值得的。以下是一些帮助你开始的示例：
- en: '**Less**: This is a minimalistic theme from Jared Erickson, available at [http://jarederickson.com/less-a-free-super-minimal-wordpress-theme/](http://jarederickson.com/less-a-free-super-minimal-wordpress-theme/)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Less**：这是一个来自Jared Erickson的简约主题，可在[http://jarederickson.com/less-a-free-super-minimal-wordpress-theme/](http://jarederickson.com/less-a-free-super-minimal-wordpress-theme/)找到。'
- en: '**Starter**: This theme by Roots contains support for Less and is available
    at http://roots.io/starter-theme/'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**入门者**：这个由Roots开发的主题支持Less，可在http://roots.io/starter-theme/找到。'
- en: '**Whiteboard**: This is a theme that uses Less 4 Framework, which can be downloaded
    from [http://whiteboardframework.com/whiteboard-documentation/](http://whiteboardframework.com/whiteboard-documentation/)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**白板**：这是一个使用Less 4 Framework的主题，可从[http://whiteboardframework.com/whiteboard-documentation/](http://whiteboardframework.com/whiteboard-documentation/)下载。'
- en: '**Spare**: This is a paid-for theme, available from Theme Forest, at [http://themeforest.net/item/spare-ultimate-multipurpose-less-theme/7520253](http://themeforest.net/item/spare-ultimate-multipurpose-less-theme/7520253)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备用**：这是一个付费主题，可在Theme Forest上找到，地址为[http://themeforest.net/item/spare-ultimate-multipurpose-less-theme/7520253](http://themeforest.net/item/spare-ultimate-multipurpose-less-theme/7520253)。'
- en: There are lots of themes available for use and it is worth spending some time
    on Google to see what is available and trying them out. Hopefully, you will find
    something that comes close to, or matches your requirements. With luck, you might
    be able to tweak it a little with skills you've hopefully picked up from reading
    this book!
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多主题可供使用，花些时间在Google上查看可用的选项并尝试它们是值得的。希望你能找到接近或符合你要求的东西。如果有幸，你可能能够通过阅读这本书获得的一些技能稍作调整！
- en: Automating WordPress development
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化WordPress开发
- en: If you spend any time developing themes, you will no doubt know that it is a
    manual process, which takes time. Themes often require careful tweaking and retesting;
    it can get particularly tedious when recompiling Less files!
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你花时间开发主题，你无疑会知道这是一个手动过程，需要时间。主题通常需要仔细调整和重新测试；重新编译Less文件时尤其令人厌烦！
- en: Fortunately, there are a number of solutions available to relieve some of the
    tedium experienced when developing WordPress themes; the most popular option is
    to use a package we first met back in [Chapter 2](part0025_split_000.html#page
    "Chapter 2. Building a Less Development Toolkit"), *Building a Less Development
    Toolkit*. It's time to revisit using Grunt!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，在开发WordPress主题时，有一些解决方案可以缓解一些单调乏味的体验；最受欢迎的选项是使用我们在[第二章](part0025_split_000.html#page
    "第二章. 构建Less开发工具包")中首次遇到的包，即*构建Less开发工具包*。现在是时候重新审视使用Grunt了！
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the more experienced, it is worth looking online for `lessphp`, which is
    a port of Less to PHP. There is code available that allows direct compilation
    within WordPress, in much the same way as we will cover in this exercise.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 对于经验更丰富的人来说，在网上寻找`lessphp`是值得的，这是Less到PHP的移植。有代码可以直接在WordPress中编译，这与我们将在这项练习中涵盖的方式非常相似。
- en: Using Grunt in WordPress development
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在WordPress开发中使用Grunt
- en: Remember back in [Chapter 2](part0025_split_000.html#page "Chapter 2. Building
    a Less Development Toolkit"), *Building a Less Development Toolkit*, when we met
    Grunt for the first time?
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在[第二章](part0025_split_000.html#page "第二章. 构建Less开发工具包")中，我们第一次遇到Grunt吗？
- en: Well, we're going to meet it again, as it is a perfect tool to help with compiling
    Less files as part of WordPress development. It makes perfect sense to use it
    here, as we are compiling style sheets after all! Let's take a look at how we
    can set up Grunt for use with compiling WordPress style sheets automatically.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我们将再次遇到它，因为它是帮助编译Less文件作为WordPress开发一部分的完美工具。在这里使用它是完全合理的，因为毕竟我们是在编译样式表！让我们看看如何设置Grunt以自动编译WordPress样式表。
- en: Note
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the purposes of this exercise, I will assume you are using Grunt as installed
    in the *Watching for changes to Less files* section of [Chapter 2](part0025_split_000.html#page
    "Chapter 2. Building a Less Development Toolkit"), *Building a Less Development
    Toolkit*. If you've not yet installed it, now's a good time to revert to that
    chapter and do it.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行这个练习，我将假设你正在使用[第2章](part0025_split_000.html#page "第2章. 构建Less开发工具包")中“监视Less文件的变化”部分安装的
    Grunt。如果你还没有安装它，现在是回到那章并完成它的好时机。
- en: We'll work with the standard `TwentyFourteen` theme that comes with WordPress
    3.8.x and upwards; the process will work perfectly well with other themes too.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用随 WordPress 3.8.x 及以上版本一起提供的标准`TwentyFourteen`主题；这个过程对其他主题也同样适用。
- en: 'Start by opening your favorite text editor, then add the following, and save
    it as `package.json` within the root folder of the `TwentyFourteen` theme:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，打开你喜欢的文本编辑器，然后添加以下内容，并将其保存为`package.json`，位于`TwentyFourteen`主题的根目录中：
- en: '[PRE17]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, we need to create a Grunt watch file, which will perform a number of
    actions, when Grunt''s watch facility determines a change has been made. Add the
    following skeleton to a new file, saving it as `gruntfile.js`, within the root
    of your theme folder:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一个 Grunt watch 文件，当 Grunt 的 watch 功能确定有变化时，它将执行一系列操作。将以下框架添加到一个新文件中，并将其保存为`gruntfile.js`，位于你的主题文件夹的根目录中：
- en: '[PRE18]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The basic Grunt file contains references to the Node plugins we''re going to
    use—we now need to add the configuration options for each plugin. Let''s begin
    by adding them for `grunt-contrib-concat` to concatenate any JavaScript files
    into one, as shown:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基本的 Grunt 文件包含了我们将要使用的 Node 插件的引用——我们现在需要为每个插件添加配置选项。让我们首先为`grunt-contrib-concat`添加配置选项，以便将任何
    JavaScript 文件合并成一个，如下所示：
- en: '[PRE19]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next comes the options for `UglifyJS`. Go ahead and add the following code
    immediately below the concat block from the previous step:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来是`UglifyJS`的选项。在上一步骤的concat块下方立即添加以下代码：
- en: '[PRE20]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Our next plugin we need to add in is the one of most interest—Less. Add this
    code immediately below the closing `}` of the previous section:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们接下来需要添加的插件是最有趣的一个——Less。在上一部分的`}`关闭后立即添加以下代码：
- en: '[PRE21]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Last, but by no means least, is `watch`. This part watches out for any changes
    to the code and invokes the relevant command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，但同样重要的是，是`watch`。这部分监视代码的任何变化并调用相关命令：
- en: '[PRE22]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Save the file, and then in a command prompt, change to the location of your
    theme.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，然后在命令提示符中切换到你的主题位置。
- en: 'We now need to configure Grunt. Although we already have the basic application
    installed from [Chapter 2](part0025_split_000.html#page "Chapter 2. Building a
    Less Development Toolkit"), *Building a Less Development Toolkit*, we still need
    to tell it what to do when changes to Less files are made. In the command prompt,
    run this command:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在需要配置 Grunt。尽管我们已经从[第2章](part0025_split_000.html#page "第2章. 构建Less开发工具包")中安装了基本的应用程序，但我们仍然需要告诉它在
    Less 文件发生变化时应该做什么。在命令提示符中运行以下命令：
- en: '[PRE23]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The last step is to activate the `watch` facility. Once Grunt has completed
    its changes from the previous step, go ahead and run this command at the prompt:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是激活`watch`功能。一旦 Grunt 完成了上一步骤的变化，请在提示符中运行以下命令：
- en: '[PRE24]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Remember the child theme we created earlier in this chapter? Go back to your
    child theme folder, then open up `style.less`, and make a single change to a character
    within the style sheet.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记得我们在这个章节早期创建的子主题吗？回到你的子主题文件夹，然后打开`style.less`，并在样式表中更改一个字符。
- en: Save your work as you normally do. If all is well, Grunt watch will have picked
    up on the change and recompiled the style sheet file:![Using Grunt in WordPress
    development](img/00099.jpeg)
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照常规方式保存你的工作。如果一切顺利，Grunt watch 将会检测到变化并重新编译样式表文件：![在 WordPress 开发中使用 Grunt](img/00099.jpeg)
- en: 'We can confirm this by checking back in our `theme` folder, where the `style.less`
    and `style.css` files have the same date and time stamps:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过检查我们的`theme`文件夹来确认这一点，其中`style.less`和`style.css`文件的日期和时间戳相同：
- en: '![Using Grunt in WordPress development](img/00100.jpeg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![在 WordPress 开发中使用 Grunt](img/00100.jpeg)'
- en: Phew! That was a fair bit of code; let's take a moment to recap what we've achieved
    in this exercise.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 呼吸一下！这有一大堆代码；让我们花点时间回顾一下在这个练习中我们取得了什么成果。
- en: If you've spent any time using Grunt as a task manager, then using the `package.json`
    and `gruntfile` files will be familiar to you; if not, where have you been? Grunt
    is fast becoming a de facto standard for automating thankless tasks such as compiling
    Less files; it is well worth getting to know Grunt!
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你花过时间使用Grunt作为任务管理器，那么使用`package.json`和`gruntfile`文件对你来说应该是熟悉的；如果没有，你去了哪里？Grunt正迅速成为自动化诸如编译Less文件等无趣任务的既定标准；了解Grunt是非常值得的！
- en: In our exercise, we've configured Grunt to use a number of Node packages such
    as Less, watch, UglifyJS, and concat. In a nutshell, the Grunt and JSON package
    files tell Grunt how to compress and concatenate JavaScript or Less files (as
    set in the configuration); watch is set to run the tasks as soon as any changes
    are made to our source files.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的练习中，我们已配置Grunt使用多个Node包，如Less、watch、UglifyJS和concat。简而言之，Grunt和JSON包文件告诉Grunt如何压缩和连接JavaScript或Less文件（如配置中设置的那样）；watch设置为在源文件有任何更改时立即运行任务。
- en: Provided Grunt watch has kicked in and correctly recompiled our file, we're
    then free to continue making more changes. We can either use the Less file to
    dynamically compile our style sheet, as we saw earlier in the *Adding support
    for Less in WordPress* section, or we can simply use the compiled file as a normal
    style sheet in our theme.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 只要Grunt watch启动并正确重新编译了我们的文件，我们就可以自由地继续进行更多更改。我们可以使用Less文件动态编译我们的样式表，就像我们在*在WordPress中添加Less支持*部分中看到的那样，或者我们可以简单地使用编译后的文件作为主题中的正常样式表。
- en: Tip
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: There is a completed version of the `gruntfile.js` file on GitHub, at [https://gist.github.com/alibby251/579e3c0308e3cd732b39](https://gist.github.com/alibby251/579e3c0308e3cd732b39).
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub上有一个`gruntfile.js`文件的完整版本，地址为[https://gist.github.com/alibby251/579e3c0308e3cd732b39](https://gist.github.com/alibby251/579e3c0308e3cd732b39)。
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Phew! We've covered a lot in this chapter! Let's take a moment to consider what
    we learned.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 呼呼！我们在本章中涵盖了很多内容！让我们花点时间考虑一下我们学到了什么。
- en: We kicked off our foray into using Less with WordPress with a quick recap of
    the structure of each WordPress theme, where we examined the basic files you will
    see within the TwentyFourteen core theme and covered the basics of what you need
    for each exercise in this chapter.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用Less与WordPress的探索之旅以快速回顾每个WordPress主题的结构开始，我们检查了在TwentyFourteen核心主题中你会看到的基本文件，并涵盖了本章每个练习所需的基本知识。
- en: We then started our development work with a look at creating a child theme and
    the reasons for doing so; we then learned how to add Less support to your function
    file within the theme.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始我们的开发工作，首先查看创建子主题及其原因；然后我们学习了如何在主题中添加对Less的支持到你的函数文件中。
- en: We took a quick sidestep to see how we can tailor the import for specific users;
    this will be useful if you are developing as an admin locally, while leaving others
    to use the compiled CSS style sheet file.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快速地偏离了一下，看看我们如何为特定用户定制导入；如果你作为本地管理员开发，而其他人使用编译后的CSS样式表文件，这将非常有用。
- en: We then moved on and took a look at how to import Less using a plugin. We saw
    how in most cases, this would be preferred, but that in a plugin-heavy site, it
    might be wiser to simply import it using the `functions.php` file.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们继续前进，探讨了如何使用插件导入Less；我们看到了在大多数情况下，这会被优先考虑，但在一个插件众多的网站上，可能更明智的做法是简单地使用`functions.php`文件导入它。
- en: We followed this with a detailed look at some tips on converting existing style
    sheets to use their Less equivalents. We covered the need to keep the process
    iterative due to the sheer size of some style sheets. We then took a brief look
    at creating your own theme using Less; we saw how you can use any prebuilt theme
    within Less if you are not feeling quite ready for developing your own!
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后详细探讨了将现有样式表转换为使用Less等价物的技巧。由于某些样式表的大小实在太大，我们强调了保持这个过程迭代的重要性。然后，我们简要地看了看如何使用Less创建自己的主题；我们看到了如果你还没有准备好开发自己的主题，你可以在Less中使用任何预构建的主题！
- en: We then finally rounded off our journey through Less and WordPress by taking
    a detailed look at how to automate the whole compilation process using Node.js
    and Grunt. While this initially might seem daunting, it will reward your efforts
    in spades with the time it saves in compiling Less files!
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们通过详细探讨如何使用Node.js和Grunt自动化整个编译过程来结束我们对Less和WordPress的旅程。虽然这最初可能看起来令人畏惧，但它将极大地回报你的努力，节省编译Less文件的时间！
- en: 'It''s at this point we say goodbye to using WordPress. In our next chapter,
    we''ll introduce another well-known product that uses Less: Twitter Bootstrap.
    Now who hasn''t heard of Twitter, I wonder?'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 就在这个时候，我们告别了WordPress的使用。在我们接下来的章节中，我们将介绍另一个使用Less的知名产品：Twitter Bootstrap。现在，我想问问，谁还没有听说过Twitter呢？
