- en: Creating Our First App with Ionic
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ionic创建我们的第一个应用
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Setting up a development environment
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Creating a HelloWorld app via the CLI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过CLI创建HelloWorld应用
- en: Creating a HelloWorld app via Ionic Creator
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Ionic Creator创建HelloWorld应用
- en: Viewing the app using your web browser
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用你的网络浏览器查看应用
- en: Viewing the app using the Ionic CLI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic CLI查看应用
- en: Viewing the app using Xcode for iOS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Xcode查看iOS应用
- en: Viewing the app using Genymotion for Android
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Genymotion查看Android应用
- en: Viewing the app using Ionic View
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic View查看应用
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: There are many options for developing mobile applications today. Native applications
    require a unique implementation for each platform, such as iOS, Android, and Windows
    phone. It's required in some cases, such as high-performance CPU and GPU processing
    with lots of memory consumption. Any application that does not need over-the-top
    graphics and intensive CPU processing could benefit greatly from a cost-effective,
    write once and run anywhere HTML5 mobile implementation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开发移动应用有很多选择。原生应用需要对每个平台（如iOS、Android和Windows phone）进行独特的实现。在某些情况下，如需要高性能CPU和GPU处理以及大量内存消耗时，这是必需的。任何不需要过度图形和密集CPU处理的程序，都可以从成本效益高、一次编写到处运行的HTML5移动实现中受益。
- en: For those who choose the HTML5 route, there are many great choices on the market.
    Some options may be very easy to start, but they could be very hard to scale or
    could face performance problems. Commercial options are generally expensive for
    small developers to find product/market fit. The best practice is to think of
    the users first. There are instances where a simple, responsive website design
    is the best choice; for example, when a business mainly has fixed content with
    minimal updating required or the content is better off on the web for SEO purposes.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于选择HTML5路线的人来说，市场上有很多不错的选择。一些选项可能很容易开始，但它们可能很难扩展或可能遇到性能问题。商业选项通常对小开发者来说成本很高，难以找到产品/市场契合点。最佳实践是首先考虑用户。有些情况下，简单的响应式网站设计是最好的选择；例如，当业务主要包含固定内容且更新需求最小或内容更适合在网络上进行SEO优化时。
- en: 'The Ionic Framework has several advantages over its competitors, as shown:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic框架相对于其竞争对手有多个优势，如下所示：
- en: Ionic is based on Angular, which is a robust framework for application development.
    You have all the components to structure and create an application built into
    it.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic基于Angular，这是一个强大的应用开发框架。你可以在其中找到所有构建和结构化应用的组件。
- en: UI performance is strong because of its usage of the `requestAnimationFrame()`
    technique.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI性能强大，因为它使用了`requestAnimationFrame()`技术。
- en: It offers a beautiful and comprehensive set of default styles, similar to a
    mobile-focused twitter Bootstrap.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一套美丽且全面的默认样式，类似于以移动为中心的twitter Bootstrap。
- en: '**Sass** is available for quick, easy, and effective theme customization.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sass**可用于快速、简单和有效的主题定制。'
- en: 'There have been many significant changes between the launch of AngularJS 1.x
    and Angular. All of these changes are applicable to Ionic as well. Consider the
    following examples:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在AngularJS 1.x的发布和Angular之间发生了许多重大变化。所有这些变化也适用于Ionic。以下是一些示例：
- en: Angular utilizes **TypeScript**, which is a superset of the **ECMAScript 6**
    (**ES6**) standard, to build your code into JavaScript. This allows developers
    to leverage TypeScript features such as type checking during the compilation step.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular使用**TypeScript**，它是**ECMAScript 6**（**ES6**）标准的超集，将你的代码编译成JavaScript。这允许开发者在编译步骤中利用TypeScript的特性，如类型检查。
- en: There are no more controllers and directives in AngularJS. Previously, a controller
    was assigned to a DOM node, while a directive converted a template into a component-like
    architecture. However, it is very hard to scale and debug large AngularJS 1.x
    applications due to the misuse of controllers and/or issues with conflicting directives.
    In Angular, there is only a single concept—that of a component, which eventually
    has a selector corresponding to an HTML template and a class containing functions.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AngularJS中不再有控制器和指令。以前，控制器被分配给一个DOM节点，而指令将模板转换成类似组件的架构。然而，由于控制器和/或冲突指令的使用不当，大型AngularJS
    1.x应用很难进行扩展和调试。在Angular中，只有一个概念——组件，它最终有一个与HTML模板对应的选择器和一个包含函数的类。
- en: The `$scope` object no longer exists in Angular because all properties are now
    defined inside a component. This is actually good news because debugging errors
    in `$scope` (especially with nested scenarios) is very difficult in AngularJS
    1.x.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Angular中，`$scope`对象不再存在，因为所有属性现在都在组件内部定义。这实际上是个好消息，因为在AngularJS 1.x中调试`$scope`中的错误（尤其是嵌套场景）非常困难。
- en: Finally, Angular offers better performance and supports both ES5 and ES6 standards.
    You could write Angular in TypeScript, Dart, or just pure JavaScript.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，Angular提供了更好的性能，并支持ES5和ES6标准。您可以用TypeScript、Dart或纯JavaScript编写Angular。
- en: In this chapter, you will work through several HelloWorld examples to Bootstrap
    your Ionic app. This process will give you a basic skeleton with which you can
    start building more comprehensive apps. The majority of apps have similar user
    experiences flow, such as tabs and side menus.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将通过几个HelloWorld示例来引导您的Ionic应用程序。这个过程将为您提供基本框架，您可以用它来开始构建更全面的应用程序。大多数应用程序都有类似的用户体验流程，例如标签和侧边菜单。
- en: Setting up a development environment
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Before you create your first app, your environment must have the required components
    ready. These components ensure a smooth development, build, and test process.
    The default Ionic project folder is based on Cordova's. Therefore, you need the
    Ionic CLI to automatically add the correct platform (that is, iOS, Android, or
    Windows phone) and build the project. This will ensure all Cordova plugins are
    included properly. The tool has many options to run your app in the browser or
    simulator with live reload.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建您的第一个应用程序之前，您的环境必须准备好所需的组件。这些组件确保开发、构建和测试过程顺利。默认的Ionic项目文件夹基于Cordova。因此，您需要Ionic
    CLI来自动添加正确的平台（即iOS、Android或Windows手机）并构建项目。这将确保所有Cordova插件都正确包含。该工具有许多选项，可以在浏览器或模拟器中运行您的应用程序，并实现实时刷新。
- en: Getting ready
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You need to install Ionic and its dependencies to get started. Ionic itself
    is just a collection of CSS styles, Angular components, and standard Cordova plugins.
    It's also a command-line tool to help manage all technologies, such as Cordova.
    The installation process will give you a command line to generate the initial
    code and build the app.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装Ionic及其依赖项以开始。Ionic本身只是一个CSS样式、Angular组件和标准Cordova插件的集合。它也是一个命令行工具，用于帮助管理所有技术，如Cordova。安装过程将为您提供命令行以生成初始代码并构建应用程序。
- en: Ionic uses `npm` as the installer, which is included when installing Node.js.
    Please install the latest version of Node.js from [https://nodejs.org/en/download/](https://nodejs.org/en/download/).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic使用`npm`作为安装程序，它包含在安装Node.js时。请从[https://nodejs.org/en/download/](https://nodejs.org/en/download/)安装最新版本的Node.js。
- en: 'You will need to install `cordova`, `ios-sim` (an iOS Simulator) and `ionic`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装`cordova`、`ios-sim`（一个iOS模拟器）和`ionic`：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can install all three components with this single command line instead of
    issuing three command lines separately. The `-g` parameter is to install the package
    globally (not just in the current directory).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用单个命令行安装所有三个组件，而不是分别发出三个命令行。`-g`参数用于全局安装包（而不仅仅是当前目录）。
- en: 'For Linux and Mac, you may need to use the `sudo` command to allow system access,
    as shown:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux和Mac，您可能需要使用`sudo`命令来允许系统访问，如下所示：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following are a few common options for an **integrated development environment**
    (**IDE**):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常见的**集成开发环境**（**IDE**）选项：
- en: Xcode for iOS
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xcode for iOS
- en: Android Studio for Android
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android Studio for Android
- en: Microsoft Visual Studio Code (VS Code)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Visual Studio Code (VS Code)
- en: JetBrains' WebStorm
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JetBrains的WebStorm
- en: Sublime Text ([http://www.sublimetext.com/](http://www.sublimetext.com/)) for
    web development
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sublime Text ([http://www.sublimetext.com/](http://www.sublimetext.com/))用于Web开发
- en: All of these have a free license. You could code directly in Xcode or Android
    Studio, but those are somewhat heavy-duty for web apps, especially when you have
    a lot of windows open and just need something simple to code. Sublime Text is
    free for non-commercial developers, but you have to purchase a license if you
    are a commercial developer. Most frontend developers would prefer to use Sublime
    Text for coding HTML and JavaScript, because it's very lightweight and comes with
    a well-supported developer community. Sublime Text has been around for a long
    time and is very user-friendly. However, there are many features in Ionic that
    make Visual Studio Code very compelling. For example, it has the look and feel
    of a full IDE without being bulky. You could debug JavaScript directly inside
    VS Code, as well as getting autocomplete (for example, IntelliSense). The following
    instructions cover both Sublime Text and VS Code, although the rest of this book
    will use VS Code.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都有免费许可。你可以在 Xcode 或 Android Studio 中直接编码，但它们对于网络应用来说有些重量级，尤其是当你有很多窗口打开，只需要简单编码时。Sublime
    Text 对非商业开发者免费，但如果你是商业开发者，你必须购买许可证。大多数前端开发者更喜欢使用 Sublime Text 进行 HTML 和 JavaScript
    编码，因为它非常轻量级，并且拥有一个支持良好的开发者社区。Sublime Text 已经存在很长时间，并且非常用户友好。然而，Ionic 中有许多功能使 Visual
    Studio Code 非常吸引人。例如，它具有完整 IDE 的外观和感觉，但又不笨重。你可以在 VS Code 中直接调试 JavaScript，以及获得自动完成（例如，IntelliSense）。以下说明涵盖了
    Sublime Text 和 VS Code，尽管本书的其余部分将使用 VS Code。
- en: How to do it...
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'VS Code works on Mac, Windows, and Linux. Here are the instructions:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 在 Mac、Windows 和 Linux 上运行。以下是说明：
- en: Visit [https://code.visualstudio.com.](https://code.visualstudio.com)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://code.visualstudio.com.](https://code.visualstudio.com)
- en: Download and install for your specific OS
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装适用于你的特定操作系统
- en: Unzip the downloaded file
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压下载的文件
- en: Drag the `.app` file into the `Applications` folder and drag it to Mac's Dock
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `.app` 文件拖入 `Applications` 文件夹，并将其拖到 Mac 的 Dock 上
- en: Open Microsoft Visual Studio Code
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Microsoft Visual Studio Code
- en: Press *Ctrl* + *Shift* + *p* to open the command palette
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl* + *Shift* + *p* 打开命令面板
- en: Type the shell command in the command palette
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令面板中输入 shell 命令
- en: 'Click on the shell command: Install code command in PATH command to install
    the script to add Visual Studio Code in your terminal $PATH'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 shell 命令：在 PATH 命令中安装代码命令以将脚本添加到你的终端 $PATH
- en: Restart Visual Studio Code for this to take effect
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动 Visual Studio Code 以使更改生效
- en: Later on, you can just write code (including the dot) directly from the Ionic
    project folder and VS Code will automatically open that folder as a project.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你只需直接从 Ionic 项目文件夹和 VS Code 中编写代码（包括点号），VS Code 将自动将该文件夹作为项目打开。
- en: 'Note that the following screenshots were taken from a Mac:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意以下截图是从 Mac 上拍摄的：
- en: '![](img/c5b571fb-adf8-4e21-bf74-3a840948255e.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5b571fb-adf8-4e21-bf74-3a840948255e.png)'
- en: If you decide to use Sublime Text, you will need Package Control ([https://packagecontrol.io/installation](https://packagecontrol.io/installation)),
    which is similar to a Plugin Manager. Since Ionic uses Sass, it's optional to
    install the Sass Syntax Highlighting package.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你决定使用 Sublime Text，你将需要 Package Control ([https://packagecontrol.io/installation](https://packagecontrol.io/installation))，它类似于插件管理器。由于
    Ionic 使用 Sass，安装 Sass 语法高亮包是可选的。
- en: Navigate to Sublime Text | Preferences | Package Control.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 Sublime Text | 首选项 | Package Control。
- en: 'Go to Package Control: Install Package. You could also just type the partial
    command (that is, `inst`) and it will automatically select the right option:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Package Control：安装包。你也可以直接输入部分命令（即 `inst`），它将自动选择正确的选项：
- en: '![](img/5fbfb5a6-fffd-48f1-8bb8-8ed90e343003.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5fbfb5a6-fffd-48f1-8bb8-8ed90e343003.png)'
- en: 'Type `Sass` and the search results will show one option for TextMate & Sublime
    Text. Select that item to install:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `Sass`，搜索结果将显示一个 TextMate & Sublime Text 的选项。选择该选项进行安装：
- en: '![](img/a98d51cd-80f5-4b23-931b-379d29c8975e.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a98d51cd-80f5-4b23-931b-379d29c8975e.png)'
- en: There's more...
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are tons of Sublime Text packages that you may want to use, such as HTML,
    JSHint, JSLint, Tag, and ColorPicker. You can visit [https://sublime.wbond.net/browse/popular](https://sublime.wbond.net/browse/popular)
    for additional needs.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多 Sublime Text 包你可能想使用，例如 HTML、JSHint、JSLint、Tag 和 ColorPicker。你可以访问 [https://sublime.wbond.net/browse/popular](https://sublime.wbond.net/browse/popular)
    以满足额外需求。
- en: Creating a HelloWorld app via the CLI
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 CLI 创建 HelloWorld 应用程序
- en: 'The quickest way to start your app is using the existing templates. Ionic gives
    you some standard out-of-the-box templates via the command line:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最快开始你的应用的方式是使用现有的模板。Ionic 通过命令行为你提供了一些标准模板：
- en: '**Blank**: This is a simple page with minimal JavaScript code'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空白**：这是一个带有最少JavaScript代码的简单页面'
- en: '**Tabs**: These are multiple pages with routes. A route URL goes to a tab'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签页**：这些是带有路由的多页。一个路由URL会跳转到标签页'
- en: '**Side menu**: This is a template with a left/right menu with the center content
    area'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**侧边菜单**：这是一个带有左右菜单和中心内容区域的模板'
- en: '**Super:** This is a template with prebuilt pages and providers, which emphasize
    the best practices for Ionic app development'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超级**：这是一个带有预构建页面和提供者的模板，强调Ionic应用程序开发的最佳实践'
- en: How to do it...
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To set up the app with a `blank` template from `ionic`, use this command:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用`blank`模板从`ionic`设置应用程序，请使用以下命令：
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you replace `blank` with `tabs`, it will create a `tabs` template, as shown:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果将`blank`替换为`tabs`，它将创建一个`tabs`模板，如下所示：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Similarly, the following command will create an app with a `sidemenu`:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，以下命令将创建一个带有`sidemenu`的应用程序：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '4\. Likewise, the following command will create an app with the `super` template:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 同样，以下命令将创建一个带有`super`模板的应用程序：
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Additional guidance for the Ionic CLI is available on the GitHub page: [https://github.com/ionic-team/ionic-cli](https://github.com/ionic-team/ionic-cli).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub页面上提供了关于Ionic CLI的额外指导：[https://github.com/ionic-team/ionic-cli](https://github.com/ionic-team/ionic-cli)。
- en: How it works...
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'This chapter will show you how to quickly start your code base and visualize
    the result. More details about Angular and its template syntax will be discussed
    in various chapters of this book, however, the core concepts are as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您展示如何快速启动您的代码库并可视化结果。关于Angular及其模板语法的更多细节将在本书的各个章节中讨论，然而，核心概念如下：
- en: '**Component**: Angular is very modular because you could write your code in
    a file and use an export class to turn it into a component. If you are familiar
    with AngularJS 1.x, this is similar to a controller and how it binds with a DOM
    node. A component will have its own private and public properties and methods
    (that is, functions). To tell whether a class is an Angular component or not,
    you have to use the `@Component` decorator. This is another new concept in TypeScript
    since you could enforce characteristics (metadata) on any class so that they behave
    in a certain way.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件**：Angular非常模块化，因为你可以将代码写入一个文件，并使用导出类将其转换为组件。如果你熟悉AngularJS 1.x，这类似于控制器以及它与DOM节点的绑定。组件将有自己的私有和公共属性和方法（即函数）。要判断一个类是否是Angular组件，你必须使用`@Component`装饰器。这是TypeScript中的另一个新概念，因为你可以对任何类施加特性（元数据），以便它们以某种方式行为。'
- en: '**Template**: A template is an HTML string or a separate `.html` file that
    tells AngularJS how to render a component. This concept is very similar to any
    other frontend and backend framework. However, Angular has its own syntax to allow
    simple logic on the DOM, such as repeat rendering (`*ngFor`), event binding (`click`),
    or custom tags (`<my-tag>`).'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板**：模板是一个HTML字符串或一个单独的`.html`文件，它告诉AngularJS如何渲染一个组件。这个概念与其他任何前端和后端框架非常相似。然而，Angular有自己的语法，允许在DOM上执行简单的逻辑，例如重复渲染（`*ngFor`）、事件绑定（`click`）或自定义标签（`<my-tag>`）。'
- en: '**Directive**: This allows you to manipulate the DOM, since the directive is
    bound to a DOM object. So, `*ngFor` and `*ngIf` would be examples of directives
    because they alter the behavior of that DOM.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指令**：这允许你操作DOM，因为指令绑定到了一个DOM对象上。所以，`*ngFor`和`*ngIf`就是指令的例子，因为它们会改变该DOM的行为。'
- en: '**Service**: This refers to the abstraction to manage models or collections
    of complex logic besides `get`/`set` required. There is no service decorator,
    as with a component. So, any class could be a service.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：这指的是除了`get`/`set`所需的抽象来管理模型或复杂逻辑的集合。与组件不同，没有服务装饰器。因此，任何类都可以是一个服务。'
- en: '**Pipe**: This is mainly used to process an expression in the template and
    return some data (that is, rounding numbers and adding currency) using the `{{
    expression | filter }}` format. For example, `{{amount | currency}}` will return
    $100 if the amount variable is 100.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道**：这主要用于在模板中处理表达式并返回一些数据（即四舍五入数字和添加货币）使用`{{ expression | filter }}`格式。例如，`{{amount
    | currency}}`如果`amount`变量是100，将返回$100。'
- en: 'Ionic automatically creates a project folder structure that looks as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic自动创建一个如下所示的项目文件夹结构：
- en: '![](img/7a549849-9f35-490b-b785-db44809a4e42.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7a549849-9f35-490b-b785-db44809a4e42.png)'
- en: You will spend most of your time in the `/src` folder because that's where your
    application components will be placed. This is very different from Ionic 1.x because
    the `/www` folder here is actually compiled by TypeScript. If you build the app
    for iOS, the Ionic build command line will also create another copy at `/platforms/ios/www`,
    which is specifically for Cordova to point to. Another interesting change in Angular
    is that your app has a root component, which is located at `/src/app` folder,
    and all other pages or screens are in `/src/pages`. Since Angular is component
    based, each component will come with HTML, CSS, and JS. If you add in more JavaScript
    modules, you can put them in the `/src/assets` folder, or a better practice is
    to use `npm install` so that it's automatically added in the `/node_modules` folder.
    Ionic has completely gotten rid of Grunt and Bower. Everything is simplified into
    just `package.json`, where your third-party dependencies will be listed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您大部分时间将花费在 `/src` 文件夹中，因为那里将放置您的应用程序组件。这与 Ionic 1.x 非常不同，因为这里的 `/www` 文件夹实际上是由
    TypeScript 编译的。如果您为 iOS 构建应用程序，Ionic 构建命令行也会在 `/platforms/ios/www` 创建另一个副本，这是专门为
    Cordova 指定的。Angular 中的另一个有趣的变化是，您的应用程序有一个根组件，位于 `/src/app` 文件夹中，所有其他页面或屏幕都在 `/src/pages`
    中。由于 Angular 是基于组件的，每个组件都会包含 HTML、CSS 和 JS。如果您添加更多的 JavaScript 模块，可以将它们放在 `/src/assets`
    文件夹中，或者更好的做法是使用 `npm install`，这样它就会自动添加到 `/node_modules` 文件夹中。Ionic 完全弃用了 Grunt
    和 Bower。所有内容都简化为 `package.json`，其中将列出您的第三方依赖项。
- en: There is no need to modify the `/platforms` or `/plugins` folder manually unless
    troubleshooting needs to be done. Otherwise, the Ionic or Cordova CLI will automate
    the content of these folders.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要手动修改 `/platforms` 或 `/plugins` 文件夹，除非需要进行故障排除。否则，Ionic 或 Cordova CLI 将会自动化这些文件夹的内容。
- en: 'By default, from the Ionic template, the Angular app name is called `MyApp`.
    You will see something like this in `app/app.component.ts`, which is the root
    component file for the entire app:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从 Ionic 模板来看，Angular 应用程序名称为 `MyApp`。您将在 `app/app.component.ts` 中看到类似的内容，这是整个应用程序的根组件文件：
- en: '![](img/26105712-f983-44a9-890e-3a305a193167.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26105712-f983-44a9-890e-3a305a193167.png)'
- en: This root component of your app and all content will be injected inside `<ion-app></ion-app>`
    of `index.html`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用程序的根组件以及所有内容都将注入到 `index.html` 中的 `<ion-app></ion-app>` 内。
- en: Note that if you double-click on the `index.html` file to open it in the browser,
    it will show a blank page. This doesn't mean that the app isn't working. The reason
    for this is that the Angular component of Ionic dynamically loads all the `.js`
    files and this behavior requires server access via the `http://` protocol. If
    you open a file locally, the browser automatically treats it as a file protocol
    (`file://`), and therefore Angular will not have the ability to load additional
    `.js` modules to run the app properly. There are several methods of running the
    app, which will be discussed later.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果您双击 `index.html` 文件在浏览器中打开它，会显示一个空白页面。这并不意味着应用程序没有工作。原因是 Ionic 的 Angular
    组件会动态加载所有的 `.js` 文件，这种行为需要通过 `http://` 协议进行服务器访问。如果您在本地打开文件，浏览器会自动将其视为文件协议 (`file://`)，因此
    Angular 将没有能力加载额外的 `.js` 模块以正确运行应用程序。有几种运行应用程序的方法，稍后将会讨论。
- en: Creating a HelloWorld app via Ionic Creator
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 Ionic Creator 创建 HelloWorld 应用程序
- en: Another way to start your app code base is to use **Ionic Creator**. This is
    a great interface builder to accelerate your app development with the drag and
    drop style. You can quickly take the existing components and position them to
    visualize how it should look in the app via a web-based interface. Most common
    components, such as buttons, images, and checkboxes are available.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种开始您的应用程序代码库的方法是使用 **Ionic Creator**。这是一个出色的界面构建器，可以通过拖放风格加速您的应用程序开发。您可以通过基于网络的界面快速获取现有的组件，并将它们定位以可视化应用程序中的外观。大多数常见组件，如按钮、图像和复选框都是可用的。
- en: Ionic Creator allows the user to export everything as a project with all `.html`,
    `.css`, and `.js` files. You should be able to edit content in the `/app` folder
    to build on top of the interface.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic Creator 允许用户将所有 `.html`、`.css` 和 `.js` 文件导出为一个项目。您应该能够在 `/app` 文件夹中编辑内容，以在界面之上构建。
- en: Getting ready
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Ionic Creator requires registration for a free account at [https://creator.ionic.io/](https://creator.ionic.io/)
    to get started.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Ionic Creator，您需要在 [https://creator.ionic.io/](https://creator.ionic.io/)
    注册一个免费账户。
- en: How to do it...
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Create a new project called `myApp`:![](img/0cd94da3-89cc-4384-930a-d1a967eac333.png)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `myApp` 的新项目：![](img/0cd94da3-89cc-4384-930a-d1a967eac333.png)
- en: 'Validate, to ensure that you see the following screen:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证，以确保您看到以下屏幕：
- en: '![](img/03cb16d0-347e-46f5-8cfb-04c0abf3cec0.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![img/03cb16d0-347e-46f5-8cfb-04c0abf3cec0.png]'
- en: The center area is your app interface. The left side gives you a list of pages.
    Each page is a single route. You also have access to a number of UI components
    that you would normally have to code by hand in an HTML file. The panel on the
    right shows the properties of any selected component.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中心区域是您的应用界面。左侧为您提供页面列表。每个页面都是一个单独的路由。您还可以访问许多UI组件，通常您需要手动在HTML文件中编码这些组件。右侧的面板显示了任何选中组件的属性。
- en: You're free to do whatever you need to do here by dropping components to the
    center screen. If you need to create a new page, you have to click on the Add
    Page in the Pages panel. Each page is represented as a link, which is basically
    a route in Angular UI-Router's definition. To navigate to another page (for example,
    after clicking a button), you can just change the link property and point to that
    page.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以自由地在这里进行任何需要做的事情，只需将组件拖放到中心屏幕即可。如果您需要创建一个新页面，您必须点击页面面板中的“添加页面”。每个页面都表示为一个链接，这基本上是Angular
    UI-Router定义中的路由。要导航到另一个页面（例如，在点击按钮后），您只需更改链接属性并指向该页面。
- en: There is an edit button on top, where you can toggle back and forth between
    the edit mode and preview mode. It's very useful to see how your app will look
    and behave.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 顶部有一个编辑按钮，您可以在编辑模式和预览模式之间切换。看到您的应用将如何看起来和表现是非常有用的。
- en: 'Once completed, click the export button at the top of the navigation bar. You
    have the following four options:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击导航栏顶部的导出按钮。您有以下四种选项：
- en: Use the Ionic CLI tool to get the code
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic CLI工具获取代码
- en: Download the project as a ZIP file
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将项目作为ZIP文件下载
- en: Export it to native code (similar to PhoneGap Build), as shown:![](img/0cbcd00b-b04d-4d32-afb2-f0fb5d5d2462.png)
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其导出到原生代码（类似于PhoneGap Build），如图所示：![img/0cbcd00b-b04d-4d32-afb2-f0fb5d5d2462.png]
- en: Export it to the preview mode using the Creator app
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Creator应用将其导出到预览模式
- en: The best way to learn Ionic Creator is to play with it.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 学习Ionic Creator的最佳方式是玩它。
- en: There's more...
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'To switch to the preview mode, where you can see the UI in a device simulator,
    click on the switch button in the top right to enable Test, as illustrated:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换到预览模式，在那里您可以在设备模拟器中看到UI，请点击右上角的切换按钮以启用测试，如图所示：
- en: '![](img/54cfb320-3ae1-47d6-928e-5999081f1dc3.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![img/54cfb320-3ae1-47d6-928e-5999081f1dc3.png]'
- en: In this mode, you should be able to interact with the components in the web
    browser as if they're actually deployed on the device.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模式下，您应该能够像在设备上实际部署一样，在Web浏览器中与组件进行交互。
- en: If you break something, it's very simple to start a new project. It's a great
    tool to use for prototyping and to get the initial template or project scaffolding.
    You should continue coding in your regular IDE for the rest of the app. Ionic
    Creator doesn't do everything for you yet. For example, if you want to access
    specific Cordova plugin features, you have to write that code separately.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您弄坏了什么，启动一个新的项目非常简单。这是一个用于原型设计和获取初始模板或项目脚手架的出色工具。您应该继续在常规IDE中编码其余的应用程序。Ionic
    Creator目前还不能为您做所有事情。例如，如果您想访问特定的Cordova插件功能，您必须单独编写那段代码。
- en: Also, if you want to tweak the interface outside of what is allowed within Ionic
    Creator, it will also require specific modifications to the `.html` and `.css`
    files.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您想在Ionic Creator允许的范围之外调整界面，还需要对`.html`和`.css`文件进行特定的修改。
- en: Viewing the app using your web browser
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用您的Web浏览器查看应用
- en: In order to run the web app, you need to turn your `/www` folder into a web
    server. Again, there are many methods to do this and people tend to stick with
    one or two ways to keep things simple. A few other options are unreliable, such
    as Sublime Text's live watch package or a static page generator (for example,
    the Jekyll and Middleman apps). They are slow to detect changes and may freeze
    your IDE, so won't be mentioned here.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行Web应用，您需要将您的`/www`文件夹转换成一个Web服务器。再次强调，有众多方法可以实现这一目标，人们往往倾向于坚持一两种方法以保持事情简单。一些其他选项可能不可靠，例如Sublime
    Text的实时监控包或静态页面生成器（例如，Jekyll和Middleman应用）。它们检测变化的速度较慢，可能会冻结您的IDE，因此在此不予以提及。
- en: Getting ready
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The recommended method is to use the Ionic serve command line. It basically
    launches an HTTP server so that you can open your app in a desktop browser.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的方法是使用Ionic serve命令行。它基本上启动一个HTTP服务器，这样您就可以在桌面浏览器中打开您的应用。
- en: How to do it...
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'First, you need to be in the project folder. Let''s assume that it is the side
    menu `HelloWorld`:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要进入项目文件夹。让我们假设它是侧边菜单 `HelloWorld`：
- en: '[PRE6]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'From there, just issue the simple command line, as shown:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，只需发出简单的命令行，如下所示：
- en: '[PRE7]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'That''s it! There''s no need to go into the `/www` folder or figure out which
    port to use. The command line will provide the following options while the web
    server is running:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！无需进入 `/www` 文件夹或确定使用哪个端口。当网络服务器运行时，命令行将提供以下选项：
- en: '![](img/e4d0d88e-ea86-44a9-89f0-aa68dde11dc4.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4d0d88e-ea86-44a9-89f0-aa68dde11dc4.png)'
- en: The most common option to use here is *Ctrl* + *C* to quit when you are done.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最常用的选项是在完成时使用 *Ctrl* + *C* 退出。
- en: 'There are additional steps to view the app with the correct device resolution:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要以正确的设备分辨率查看应用程序，还有额外的步骤：
- en: Install Google Chrome if it's not already on your computer.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的电脑上还没有安装，请安装 Google Chrome。
- en: Open the link (for example, `http://localhost:8100/`) from Ionic serve in
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Ionic serve 中打开链接（例如，`http://localhost:8100/`）
- en: Google Chrome.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Google Chrome。
- en: Turn on Developer Tools. For example, in Mac's Google Chrome, navigate to View
    | Developer | DeveloperTools:![](img/1c9d45d2-e902-4ec0-b0ae-edb046953f97.png)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具。例如，在 Mac 的 Google Chrome 中，导航到视图 | 开发者 | 开发者工具：![](img/1c9d45d2-e902-4ec0-b0ae-edb046953f97.png)
- en: Click on the small mobile icon in the Chrome Developer Tools area, as illustrated:![](img/103b910d-43f1-426b-b80b-9aca61a350d6.png)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Chrome 开发者工具区域点击小型的移动图标，如图所示：![](img/103b910d-43f1-426b-b80b-9aca61a350d6.png)
- en: There will be a long list of devices to pick from, as shown:![](img/a91ef19f-fcc7-41f6-8838-1c039bc6fce1.png)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会有一长串设备可供选择，如图所示：![](img/a91ef19f-fcc7-41f6-8838-1c039bc6fce1.png)
- en: After selecting a device, you need to refresh the page to ensure that the UI
    is updated. Chrome should give you the exact view resolution of the device.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择设备后，你需要刷新页面以确保 UI 已更新。Chrome 应该会给出设备的精确视图分辨率。
- en: '![](img/19796489-764c-404c-979d-5cc2a138b7be.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19796489-764c-404c-979d-5cc2a138b7be.png)'
- en: Most developers would prefer to use this method to code, as you can debug the
    app using Chrome Developer Tools. It works exactly like any other web application.
    You can create breakpoints or output variables to the console.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数开发者更愿意使用这种方法进行编码，因为你可以使用 Chrome 开发者工具调试应用程序。它的工作方式与任何其他网络应用程序完全相同。你可以在控制台创建断点或输出变量。
- en: How it works...
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Note that Ionic serve is actually watching everything under the `/src` folder
    and transpiring the TypeScript code into JavaScript under `/www` on the fly. This
    makes sense because there is no need for the system to scan through every single
    file when the probability of it changing is very small.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Ionic serve 实际上正在监视 `/src` 文件夹下的所有内容，并在 `/www` 下即时将 TypeScript 代码转换为 JavaScript。这很有道理，因为系统不需要扫描每个文件，因为其改变的概率非常小。
- en: 'While the web server is running, you can go back to the IDE and continue coding.
    For example, let''s open `page1.html` or any other template file and change the
    first line to this:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当网络服务器运行时，你可以回到 IDE 并继续编码。例如，让我们打开 `page1.html` 或任何其他模板文件，并将第一行更改为以下内容：
- en: '[PRE8]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Go back to the web browser where Ionic opened the new page; the app interface
    will change the title bar right away without requiring you to refresh the browser.
    This is a very nice feature when there is a lot of back and forth between code
    changes and instantly checking how it works or looks in the app.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到打开新页面的网络浏览器；应用程序界面会立即更改标题栏，无需刷新浏览器。当需要在代码更改和即时检查应用程序的工作或外观之间来回切换时，这是一个非常好的功能。
- en: Viewing the app using the Ionic CLI
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ionic CLI 查看应用程序
- en: So far, you have been testing the web app portion of Ionic. Most of the time,
    you will need to actually run the app on a physical device or at least an emulator
    to see how the app behaves and whether all native features work.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你一直在测试 Ionic 的网络应用程序部分。大多数时候，你需要实际在物理设备或至少在模拟器上运行应用程序，以查看应用程序的行为以及所有原生功能是否正常工作。
- en: Getting Ready
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have the emulator installed. iOS emulator comes when you do
    npm install, `-g ios-sim`, and the Android emulator comes with Android Studio.
    To test the app on a physical device, you must connect the device to your computer
    via a USB connection.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要安装模拟器。iOS 模拟器在执行 npm install `-g ios-sim` 时安装，Android 模拟器与 Android Studio
    一起安装。要在物理设备上测试应用程序，你必须通过 USB 连接将设备连接到你的电脑。
- en: How to do it...
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Add the specific platform (such as iOS) and build the app using the following
    command line:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行添加特定平台（如 iOS）并构建应用程序：
- en: '[PRE9]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note that you need to add the platforms to build the app. However, if you use
    the standard template from the Ionic CLI, it should already have the iOS platform
    included. To build and run for Android, you can replace iOS with Android.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，您需要添加平台来构建应用程序。但是，如果您使用来自 Ionic CLI 的标准模板，它应该已经包含了 iOS 平台。要为 Android 构建和运行，您可以替换
    iOS 为 Android。
- en: 'To emulate the app using the `ios` emulator, use the following command line:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用`ios`模拟器来模拟应用程序，请使用以下命令行：
- en: '[PRE10]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To run the app on the actual physical iPhone device, use the command line as
    shown:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在真实的物理 iPhone 设备上运行应用程序，请使用以下命令行：
- en: '[PRE11]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Viewing the app using Xcode for iOS
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Xcode 查看 iOS 应用程序
- en: You could run the app using Xcode (in Mac) as well.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用 Xcode（在 Mac 上）运行应用程序。
- en: How to do it...
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: Go to the `/platforms/ios` folder.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `/platforms/ios` 文件夹。
- en: Look for the folder with `.xcodeproj` and open it in Xcode.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找具有 `.xcodeproj` 的文件夹并在 Xcode 中打开它。
- en: Click on the iOS device icon and select your choice of iOS simulator:![](img/3016082f-baf7-4360-890b-8f69bb912547.png)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 iOS 设备图标并选择您选择的 iOS 模拟器！![图片](img/3016082f-baf7-4360-890b-8f69bb912547.png)
- en: Click on the run button and you should be able to see the app running in
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击运行按钮，您应该能够看到应用程序在运行
- en: the simulator.
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模拟器。
- en: There's more...
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: You can connect a physical device via a USB port and it will show up in the
    iOS Device list for you to pick it. Then, you can deploy the app directly on your
    device. Note that iOS Developer membership is required for this. This method is
    more complex than just viewing the app via a web browser.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过 USB 端口连接一个物理设备，它将显示在 iOS 设备列表中供您选择。然后，您可以直接在您的设备上部署应用程序。请注意，此操作需要 iOS
    开发者会员资格。这种方法比仅通过网页浏览器查看应用程序更复杂。
- en: 'However, it''s a must when you want to test out your code regarding device
    features, such as cameras or maps. If you change the code in the `/src` folder
    and want to run it again in Xcode, you have to do Ionic Cordova build ios first,
    because the running code is in the Staging folder of your Xcode project, as illustrated:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当您想要测试有关设备功能（如相机或地图）的代码时，这是必须的。如果您更改了 `/src` 文件夹中的代码并想要在 Xcode 中再次运行它，您必须首先执行
    Ionic Cordova build ios，因为正在运行的代码位于 Xcode 项目的 Staging 文件夹中，如图所示：
- en: '![](img/3cc9de18-0aac-4293-b593-e527bfa3f28d.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '!![图片](img/3cc9de18-0aac-4293-b593-e527bfa3f28d.png)'
- en: 'For debugging, the Xcode console can output JavaScript logs as well. However,
    you could use the more advanced features of Safari''s **Web Inspector** (which
    is similar to Google Chrome''s Developer Tools) to debug your app. Note that only
    Safari can debug a web app running on a connected physical iOS device because
    Chrome does not support this on a Mac. It''s easy to enable this capability, and
    it can be done with the following steps:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于调试，Xcode 控制台可以输出 JavaScript 日志。然而，您可以使用 Safari 的更高级的**Web 检查器**（类似于 Google
    Chrome 的开发者工具）来调试您的应用程序。请注意，只有 Safari 可以调试在连接的物理 iOS 设备上运行的 Web 应用程序，因为 Chrome
    在 Mac 上不支持此功能。启用此功能很容易，可以通过以下步骤完成：
- en: Allow remote debugging for an iOS device by navigating to Settings | Safari
    | Advanced and enabling Web Inspector:![](img/14e20162-800e-4a57-955d-308ddaffa542.png)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到“设置”|“Safari”|“高级”并启用“Web 检查器”来允许 iOS 设备进行远程调试！![图片](img/14e20162-800e-4a57-955d-308ddaffa542.png)
- en: Connect the physical iOS device to your Mac via USB and run the app
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 USB 将物理 iOS 设备连接到您的 Mac 并运行应用程序
- en: Open the Safari browser
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Safari 浏览器
- en: 'Select Develop | your device''s name or **iOS Simulator** | **index.html**,
    as shown:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“开发”|“您的设备名称”或**iOS 模拟器**|**index.html**，如图所示：
- en: '![](img/d897b15c-4158-4e37-be04-fff1e443d5e1.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '!![图片](img/d897b15c-4158-4e37-be04-fff1e443d5e1.png)'
- en: If you don't see the Develop menu in Safari, you need to navigate to **Preferences
    |**Advanced and check on Show Develop menu in menu bar.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 Safari 中看不到“开发”菜单，您需要导航到**首选项**|**高级**并勾选“在菜单栏中显示开发菜单”。
- en: Safari will open a new console just for that specific device, just as it's running
    within the computer's Safari.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 将为该特定设备打开一个新的控制台，就像它在计算机的 Safari 中运行一样。
- en: Viewing the app using Genymotion for Android
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Genymotion 查看 Android 应用程序
- en: While it's possible to install the Google Android simulator, many developers
    have an inconsistent experience on a Mac. There are many commercial and free alternatives
    that offer more convenience and a wide range of device support. Genymotion provides
    some unique advantages, such as allowing users to switch the Android model and
    version, supporting networking from within the app, and allowing SD card simulation.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以在 Mac 上安装 Google Android 模拟器，但许多开发者在使用过程中遇到了不一致的体验。有许多商业和免费的替代方案提供更多便利和广泛的设备支持。Genymotion
    提供一些独特的优势，例如允许用户切换 Android 模型和版本，支持在应用内进行网络连接，以及允许模拟 SD 卡。
- en: In this section, you will learn how to set up an Android developer environment
    (on a Mac in this case) first. Then, you will install and configure Genymotion
    for mobile app development.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将首先学习如何设置 Android 开发者环境（在本例中为 Mac）。然后，您将安装和配置 Genymotion 以进行移动应用开发。
- en: How to do it...
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: The first step is to set up the Android environment properly for development.
    Download and install Android Studio from [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html).
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是正确设置 Android 开发环境。从 [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html)
    下载并安装 Android Studio。
- en: You might be asked to install other libraries if your machine doesn't have the
    correct dependencies. If that is the case, you should run `sudo apt-get install
    lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6` from the command line to install
    them.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的机器没有正确的依赖项，您可能需要安装其他库。如果是这种情况，您应该从命令行运行 `sudo apt-get install lib32z1 lib32ncurses5
    lib32bz2-1.0 lib32stdc++6` 来安装它们。
- en: Run Android Studio.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Android Studio。
- en: You need to install all of the required packages, such as Android SDK. Just
    click Next twice on the setup wizard screen and click on the Finish button to
    start the packages' installation.![](img/3236f0e5-c8ba-4b2a-bd22-cba24ec8c117.png)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要安装所有必需的包，例如 Android SDK。只需在设置向导屏幕上点击两次“下一步”，然后点击“完成”按钮以开始安装包。
- en: After the installation is complete, you need to install additional packages
    and other SDK versions. On the Quick Start screen, select Configure:![](img/6a0f173d-f6da-4d0d-b352-a3b72652a865.png)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您需要安装额外的包和其他 SDK 版本。在快速入门屏幕上，选择配置：![快速入门配置](img/6a0f173d-f6da-4d0d-b352-a3b72652a865.png)
- en: After this, select SDKManager, as shown:![](img/a697cd9c-6640-4442-8db4-ee9147a23c1b.png)
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择 SDKManager，如图所示：![SDKManager](img/a697cd9c-6640-4442-8db4-ee9147a23c1b.png)
- en: It's good practice to install the previous version, such as Android5.0.1 and
    5.1.1\. You may also want to install all Tools and Extras for later use:![](img/f89849eb-b8b8-4e7f-98c0-a9c1aeabb919.png)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装上一个版本，如 Android5.0.1 和 5.1.1，是一个好习惯。您可能还希望安装所有工具和附加组件以供以后使用：![安装工具和附加组件](img/f89849eb-b8b8-4e7f-98c0-a9c1aeabb919.png)
- en: Click on the Install packages... button.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击安装包...按钮。
- en: Check the box on **Accept License** and select Install.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**接受许可**的框中勾选，并选择安装。
- en: The SDK Manager will give you an SDK path on the top. Make a copy of this path
    because you need to modify the environment path.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SDK 管理器将在顶部显示 SDK 路径。请复制此路径，因为您需要修改环境路径。
- en: 'Go to the terminal and type the following command:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入终端并输入以下命令：
- en: '[PRE12]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will open a text editor to edit your bash profile file. Insert the following
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个文本编辑器以编辑您的 bash 配置文件。插入以下内容：
- en: the line, where `/YOUR_PATH_TO/android-sdk` should be the SDK Path that you
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该行，其中 `/YOUR_PATH_TO/android-sdk` 应该是 SDK 路径。
- en: 'copied earlier:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 之前复制的：
- en: '[PRE13]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Save and close that text editor.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭该文本编辑器。
- en: 'Go back to the terminal and type:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回终端并输入：
- en: '[PRE14]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You should see the output as your SDK path. This verifies that you have correctly
    configured the Android developer environment.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到输出的是您的 SDK 路径。这验证了您已正确配置 Android 开发者环境。
- en: The next step is to install and configure Genymotion. Download and install Genymotion
    and Genymotion Shell from `sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0
    lib32stdc++6`.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是安装和配置 Genymotion。从 `sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0
    lib32stdc++6` 下载并安装 Genymotion 和 Genymotion Shell。
- en: Run Genymotion.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Genymotion。
- en: Click on the Add button to start adding a new Android device, as illustrated:![](img/22bfb2c1-6441-454a-9436-d069d506f0fb.png)
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加按钮以开始添加新的 Android 设备，如图所示：![添加 Android 设备](img/22bfb2c1-6441-454a-9436-d069d506f0fb.png)
- en: Select the device that you want to simulate. In this case, let's select Samsung
    Galaxy S5, as follows:![](img/ef9f22c4-64d9-4a15-b667-7a97a410bc82.png)
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要模拟的设备。在本例中，让我们选择三星 Galaxy S5，如下所示：![选择三星 Galaxy S5](img/ef9f22c4-64d9-4a15-b667-7a97a410bc82.png)
- en: You will see the device being added to your virtual devices. Click on that device.![](img/1f49fdb7-a3e9-4e5a-b5b3-222235cd8f4c.png)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到设备被添加到您的虚拟设备中。点击该设备！![](img/1f49fdb7-a3e9-4e5a-b5b3-222235cd8f4c.png)
- en: Then click on Start.![](img/46909828-85b3-4c8b-80e5-105c5f650d5b.png)
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后点击开始！![](img/46909828-85b3-4c8b-80e5-105c5f650d5b.png)
- en: The simulator will take a few seconds to start and will show another window.
    This is just a blank simulator without your app running inside it yet.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模拟器将花费几秒钟时间启动，并显示另一个窗口。这只是一个空白模拟器，其中还没有运行您的应用程序。
- en: Run Genymotion Shell.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Genymotion Shell。
- en: From Genymotion Shell, you need to get a device list and keep the IP address
    of the device attached, which is the Samsung Galaxy S5\. Type `devices list![](img/af3d8f10-6236-46d6-b0b8-fed4a48e5cb5.png)`.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Genymotion Shell，您需要获取设备列表并保留连接的设备的IP地址，即三星Galaxy S5。输入`devices list![](img/af3d8f10-6236-46d6-b0b8-fed4a48e5cb5.png)`。
- en: Type `adb connect 192.168.56.101` (or whatever the IP address was that you saw
    earlier from the devices list command line).
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`adb connect 192.168.56.101`（或从设备列表命令行中看到的任何IP地址）。
- en: Type `adb devices` to confirm that it is connected.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`adb devices`以确认已连接。
- en: Type `Ionic Cordova platform` adds Android to add Android as a platform for
    your app.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`Ionic Cordova platform`以添加Android，将Android添加为您的应用程序的平台。
- en: Finally, type Ionic Cordova run android.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，输入Ionic Cordova run android。
- en: You should be able to see the Genymotion window showing your app.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该能够看到显示您的应用程序的Genymotion窗口。
- en: Although there are many steps to take to get this working, it's a lot less likely
    that you have to go through the same process over. Once your environment is set
    up, all you need to do is to leave Genymotion running, while writing code. If
    there is a need to test the app on different Android devices, it's easy to add
    another virtual device in Genymotion and connect to it.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然要完成这项工作需要许多步骤，但您不必重复同样的过程的可能性要小得多。一旦您的环境设置完成，您只需要保持Genymotion运行，同时编写代码。如果需要在不同Android设备上测试应用程序，很容易在Genymotion中添加另一个虚拟设备并连接到它。
- en: Viewing the app using Ionic View
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ionic View查看应用程序
- en: '**Ionic View** is an app viewer that you can download from the App Store or
    Google Play. When you are in the development process and the app is not complete,
    you don''t want to submit it to either Apple or Google right away but limit access
    to your testers. Ionic View can help load your own app inside Ionic View and make
    it behave like a real app with some access to native device features. Additionally,
    Ionic View lets you use your app on an iOS device without any certification requirements.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ionic View**是一个可以从App Store或Google Play下载的应用程序查看器。在开发过程中，当应用程序尚未完成时，您不想立即将其提交给Apple或Google，而是限制测试人员的访问。Ionic
    View可以帮助在Ionic View中加载您的应用程序，并使其像真实应用程序一样运行，同时可以访问一些原生设备功能。此外，Ionic View还允许您在iOS设备上使用应用程序，而无需任何认证要求。'
- en: Since Ionic View uses the Cordova `InAppBrowser` plugin to launch your app,
    all the device features have to be hacked to make it work. Currently, Ionic View
    only supports SQLite, battery, camera, device motion, device orientation, dialog/notification,
    geolocation, globalization, network information, vibration, keyboard, status bar,
    barcode scanner, and zip. It's a good idea to check the updated support list prior
    to using Ionic View to ensure that your app works properly.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Ionic View使用Cordova的`InAppBrowser`插件来启动您的应用程序，因此必须对设备功能进行破解才能使其工作。目前，Ionic
    View仅支持SQLite、电池、摄像头、设备运动、设备方向、对话框/通知、地理位置、全球化、网络信息、振动、键盘、状态栏、条形码扫描器和zip。在使用Ionic
    View之前检查更新的支持列表是一个好主意，以确保您的应用程序能够正常工作。
- en: How to do it...
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'There are two ways to use Ionic View. You can either upload your own app or
    load someone else''s app ID. If you test your own app, follow these steps:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ionic View有两种方式。您可以选择上传自己的应用程序或加载他人的应用程序ID。如果您测试自己的应用程序，请按照以下步骤操作：
- en: Download Ionic View from either the App Store or Google Play.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从App Store或Google Play下载Ionic View。
- en: Make sure to register an account on [ionic.io](http://ionic.io).
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在[ionic.io](http://ionic.io)上注册一个账户。
- en: Go to your app's project folder.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您的应用程序项目文件夹。
- en: Search for the Ionic upload.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索Ionic上传。
- en: Enter your credentials.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的凭据。
- en: The CLI will upload the entire app and give you the app ID, which is 152909f7
    in this case. You may want to keep this app ID to share with other testers later.![](img/5706a465-0584-452d-a3ee-f94482e42c81.png)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CLI将上传整个应用程序并为您提供应用程序ID，在本例中为152909f7。您可能希望保留此应用程序ID，以便稍后与其他测试人员分享！![](img/5706a465-0584-452d-a3ee-f94482e42c81.png)
- en: Open the Ionic View app on the mobile device and log in if you haven't done
    so already.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在移动设备上打开Ionic View应用程序，如果您尚未登录，请登录。
- en: Now, you should be able to see the app name on your MY APPS page. Go ahead and
    select the app name (myApp in this case), as illustrated:![](img/92efd36b-9dc1-44ed-90a7-a55ac7128e33.png)
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您应该能够在“我的应用”页面上看到应用名称。按照图示选择应用名称（在本例中为myApp），如下所示：![选择应用名称](img/92efd36b-9dc1-44ed-90a7-a55ac7128e33.png)
- en: Select VIEW APP to run the app, as shown:![](img/e7a78bfb-56fa-4ed7-90a6-f3afce981d10.png)
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“查看应用”来运行应用，如图所示：![查看应用](img/e7a78bfb-56fa-4ed7-90a6-f3afce981d10.png)
- en: 'You will see that the app interface appears with initial instructions on how
    to exit the app. Since your app will cover the full screen of Ionic View, you
    need to swipe down using three fingers, as illustrated, to exit back to Ionic
    View:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会看到应用界面出现初始说明，说明如何退出应用。由于您的应用将覆盖Ionic View的全屏，您需要像图中所示，用三根手指向下滑动来退出回到Ionic
    View：
- en: '![](img/6040a102-883f-4d7e-8d03-29162d635944.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![更多](img/6040a102-883f-4d7e-8d03-29162d635944.png)'
- en: If there is no code update, the process is the same, except that you need to
    select SYNC TO LATEST from the menu.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有代码更新，过程相同，只是您需要从菜单中选择“同步到最新”。
- en: There's more...
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'To summarize, there are several benefits of using Ionic View, some of which
    are as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，使用Ionic View有几个好处，其中一些如下：
- en: It's convenient because there is only one command line to push the app
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这很方便，因为只有一个命令行就可以推送应用。
- en: Anyone can access your app by entering the app ID
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何人都可以通过输入应用ID来访问您的应用。
- en: There is no need to have iOS Developer membership to start developing with Ionic.
    Apple has its own TestFlight app, which is very similar
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic开始开发不需要iOS开发者会员资格。苹果有自己的TestFlight应用，非常相似。
- en: You can maintain an agile development process by having testers test the app
    as you develop it
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在开发应用的同时让测试人员测试应用，从而保持敏捷的开发流程。
- en: Ionic View supports a wide range of device features, and that support continues
    to grow
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic View支持广泛的设备功能，并且这种支持还在不断增长。
