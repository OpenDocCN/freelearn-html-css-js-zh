- en: Chapter 2. Getting Started with Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：Bootstrap 入门
- en: In the previous chapter, we understood why and where we need to use Bootstrap.
    We also know the main ingredients on what Bootstrap is made up of. In this chapter,
    we will download and start using Bootstrap. Importantly, we will start developing
    our own simple web application using all major features of Bootstrap.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了为什么以及在哪里需要使用 Bootstrap。我们还知道了 Bootstrap 由哪些主要成分组成。在本章中，我们将下载并开始使用
    Bootstrap。重要的是，我们将开始开发我们自己的简单 Web 应用程序，并使用 Bootstrap 的所有主要功能。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: How to download Bootstrap
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何下载 Bootstrap
- en: Understanding the Bootstrap file structure
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Bootstrap 文件结构
- en: Basic introduction of CSS preprocessors
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS 预处理器的基本介绍
- en: Start using Bootstrap with a sample web application
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用示例 Web 应用程序开始使用 Bootstrap
- en: Get Bootstrap
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 Bootstrap
- en: Bootstrap, being an open source software (released under MIT license), full
    source code is available freely.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 是一个开源软件（在 MIT 许可下发布），完整源代码可以免费获取。
- en: There are two ways how you can download Bootstrap.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式下载 Bootstrap。
- en: 'Get the precompiled bundle:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取预编译捆绑包：
- en: Navigate to [https://github.com/twbs/bootstrap/releases/download/v3.3.1/bootstrap-3.3.1-dist.zip](https://github.com/twbs/bootstrap/releases/download/v3.3.1/bootstrap-3.3.1-dist.zip).
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 [https://github.com/twbs/bootstrap/releases/download/v3.3.1/bootstrap-3.3.1-dist.zip](https://github.com/twbs/bootstrap/releases/download/v3.3.1/bootstrap-3.3.1-dist.zip)。
- en: This will download the compiled and minified `bootstrap-3.3.1-dist.zip` file,
    which contains all the packaged CSS, JavaScript, and Font files.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将下载编译并压缩的 `bootstrap-3.3.1-dist.zip` 文件，其中包含所有打包的 CSS、JavaScript 和字体文件。
- en: Tip
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This book is structured with Bootstrap version 3.3.1, which is the latest version
    at the time of writing.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书的结构是基于 Bootstrap 版本 3.3.1，这是写作时的最新版本。
- en: 'Get the full source code:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取完整源代码：
- en: Navigate to [https://github.com/twbs/bootstrap/archive/v3.3.1.zip](https://github.com/twbs/bootstrap/archive/v3.3.1.zip).
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至 [https://github.com/twbs/bootstrap/archive/v3.3.1.zip](https://github.com/twbs/bootstrap/archive/v3.3.1.zip)。
- en: This will download the full source code bundle of Bootstrap. You have to install
    and compile the source code before actually using this.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将下载 Bootstrap 的完整源代码捆绑包。在使用之前，你必须安装和编译源代码。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In later chapters, we will see how to set up the development environment for
    Bootstrap source code and how to compile and generate the distributable files.
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在后面的章节中，我们将看到如何设置 Bootstrap 源代码的开发环境以及如何编译和生成可分发文件。
- en: In case you are planning to build a development environment of Bootstrap and
    customizing the framework, downloading the full source code is required. Otherwise,
    you can very well do with the distributable pre-compiled bundle.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你打算构建 Bootstrap 的开发环境并自定义框架，则需要下载完整源代码。否则，你可以使用预先编译好的可分发捆绑包。
- en: The Bootstrap file structure
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap 文件结构
- en: Now that we have downloaded both the flavors of Bootstrap, let's examine what
    the downloaded archives contain. However, for your usage, you would download any
    one of them.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经下载了 Bootstrap 的两种版本，让我们来看看下载的存档包含什么。然而，对于你的使用，你可以下载其中任何一个。
- en: A precompiled bundle
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预编译捆绑包
- en: A precompiled and distributable bundle comes with three folders. The following
    is the snapshot of the folders and their contents.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 预编译和可分发捆绑包包含三个文件夹。以下是文件夹及其内容的快照。
- en: '![A precompiled bundle](img/B03987_02_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![预编译捆绑包](img/B03987_02_01.jpg)'
- en: 'folder: css'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件夹：css
- en: This folder encapsulates all the Bootstrap CSS files. For development purposes,
    you may use the full CSS files (nonminified copies); however, for production deployment,
    it is always suggested to use the minified versions—such as `bootstrap.min.css`
    and `bootstrap-theme.min.css`. However, using the bootstrap theme is optional,
    as the original bootstrap CSS comes with colors and other styling tags. Having
    said this, it is always better and suggested to use the theme file as well because
    it gives you a clean way to override the color combinations and themes of original
    Bootstrap. Thus, when you want to implement your own color scheme and branding,
    you would override and change the theme file, rather than the original Bootstrap
    CSS file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件夹包含了所有的 Bootstrap CSS 文件。在开发过程中，您可以使用完整的 CSS 文件（非压缩版本）；然而，在生产部署中，始终建议使用压缩版本——例如
    `bootstrap.min.css` 和 `bootstrap-theme.min.css`。然而，使用 Bootstrap 主题是可选的，因为原始的 Bootstrap
    CSS 已经包含了颜色和其他样式标签。话虽如此，始终建议使用主题文件，因为它为您提供了一个干净的方式来覆盖原始 Bootstrap 的颜色组合和主题。因此，当您想要实现自己的颜色方案和品牌时，您会覆盖并更改主题文件，而不是原始的
    Bootstrap CSS 文件。
- en: 'folder: fonts'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: fonts'
- en: This folder comes with all the custom fonts Bootstrap uses. One of the major
    utilizations of this is to generate the Glyphicons used in Bootstrap.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件夹包含了 Bootstrap 使用的所有自定义字体。其中一个主要用途是生成 Bootstrap 中使用的 Glyphicons。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: We will later see how and where you would use these Glyphicons.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后看到如何以及在哪里使用这些 Glyphicons。
- en: 'folder: js'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: js'
- en: All JavaScript components and plugins of Bootstrap are stored in this folder.
    Again you should use the minified version—the `bootstrap.min.js` file for production
    deployment.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 的所有 JavaScript 组件和插件都存储在这个文件夹中。同样，您应该使用压缩版本——`bootstrap.min.js` 文件用于生产部署。
- en: As you know, the Bootstrap JS plugins use jQuery, thus before using these JavaScript
    add-ons, you must include jQuery in your HTML page.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所知，Bootstrap JS 插件使用 jQuery，因此在使用这些 JavaScript 扩展之前，您必须在您的 HTML 页面中包含 jQuery。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: By default, this JS file comes with all the JavaScript plugins offered by Bootstrap,
    however, if you require to use only some selected plugins, you can include specific
    JS files as well. We will explore more on this in the later chapters.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这个 JS 文件包含了 Bootstrap 提供的所有 JavaScript 插件，但是如果您只想使用一些选定的插件，您也可以包含特定的 JS
    文件。我们将在后面的章节中更深入地探讨这一点。
- en: A source code bundle
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 源代码包
- en: Here are the files and folders that come with the source code bundle.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是源代码包中包含的文件和文件夹。
- en: '![A source code bundle](img/B03987_02_02.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![源代码包](img/B03987_02_02.jpg)'
- en: As you can see, the source code bundle is quite exhaustive, distributing lot
    many things.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，源代码包相当全面，包含了大量内容。
- en: However, the following are the most important of all.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，以下是最重要的。
- en: 'rfolder: dist'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'rfolder: dist'
- en: This is the folder where all final distributable files are collected. If you
    see the contents of this folder are the same as the distributable bundle we saw
    in the previous section.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是收集所有最终可分发文件的文件夹。如果您看到这个文件夹的内容与我们在上一节中看到的可分发包相同。
- en: When we will build the development environment for Bootstrap (in the later chapters),
    we will see that compiled output files will be stored in this folder.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在后面的章节中构建 Bootstrap 的开发环境时，我们将看到编译后的输出文件将存储在这个文件夹中。
- en: 'folder: fonts'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: fonts'
- en: Source folder and files for all the fonts used in Bootstrap.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 中使用的所有字体的源文件夹和文件。
- en: 'folder: grunt'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: grunt'
- en: Bootstrap uses Grunt to execute all the build-, compilation-, and packaging-related
    tasks. This folder contains all those relevant and required files.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 使用 Grunt 来执行所有与构建、编译和打包相关的任务。这个文件夹包含了所有相关和必需的文件。
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: We will see how to use Grunt to compile Bootstrap in detail in the later chapters.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中详细说明如何使用 Grunt 编译 Bootstrap。
- en: 'folder: js'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: js'
- en: All the source files for the Bootstrap JavaScript plugins are stored here.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Bootstrap JavaScript 插件的源文件都存储在这里。
- en: 'folder: less'
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'folder: less'
- en: Bootstrap uses CSS preprocessor LESS for compilation, customization, and packaging
    purposes. This folder contains all the LESS files to generate the final CSS files.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 使用 CSS 预处理器 LESS 进行编译、定制和打包。这个文件夹包含了生成最终 CSS 文件的所有 LESS 文件。
- en: Tip
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: There are other files and folders also, in the source code bundle; however,
    we will explore more on these when we will discuss about the `Dev` environment
    of Bootstrap.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在源代码包中还有其他文件和文件夹，然而，当我们讨论 Bootstrap 的 `Dev` 环境时，我们将更深入地探讨这些内容。
- en: CSS preprocessors
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS 预处理器
- en: You might have noticed that we just mentioned about the LESS files in Bootstrap
    source bundle. In this context, before continuing further into Bootstrap, we will
    briefly discuss this new language and technique in CSS3.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到我们刚刚提到了 Bootstrap 源代码包中的 LESS 文件。在这个背景下，在继续深入 Bootstrap 之前，我们将简要讨论这种新的
    CSS3 语言和技术。
- en: A CSS preprocessor is a program that takes some preprocessed code and convert
    them into the good old CSS code that browsers understand. This model has been
    innovated to make CSS more dynamic, productive, multiusable, efficient, and organized.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 预处理器是一个程序，它接受一些预处理的代码并将它们转换为浏览器理解的经典 CSS 代码。这种模式已被创新，以使 CSS 更具动态性、生产性、多用途性、效率和组织性。
- en: Traditionally, CSS has not been a programming language (it is still not), and
    all those powers you enjoy in a language (such as .NET, Java, or PHP) are simply
    absent. Coding in CSS has always been Write Everything Twice (WET), now with preprocessors
    finally we can do **Don't Repeat Yourself** (**DRY**) programming as well.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，CSS 不是一个编程语言（它现在仍然不是），你在一个语言中享受的所有那些功能（如 .NET、Java 或 PHP）都简单地不存在。在 CSS 中编码一直是“写两次”（WET），现在有了预处理器，我们也可以进行“不要重复自己”（DRY）编程了。
- en: To understand the scenario better, let's take some basic examples.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解场景，让我们举一些基本的例子。
- en: 'Here is a standard CSS segment we are in the habit of writing:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个我们习惯编写的标准 CSS 段落：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It is obvious to note that many of those attributes are duplicated. More painful
    it is when we want to change one attribute (for example `color`)— we need to change
    this in all the three places.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，许多这些属性都是重复的。当我们想要更改一个属性（例如 `color`）时，这更加痛苦——我们需要在三个地方都进行更改。
- en: 'Enter now a preprocessor language. Our new code would be:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入预处理器语言。我们的新代码将是：
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: So what we have done is simply created a class with all the common attributes
    in place and included that class in all the required places. Thus, if I want to
    change the `color`, I would just do it once in the `.text` class, and all the
    others will be updated.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们做的就是创建了一个包含所有常见属性的类，并将其包含在所有需要的地方。因此，如果我想更改 `color`，我只需在 `.text` 类中更改一次，其他所有地方都会更新。
- en: This greatly improves the reusability and efficiency of your CSS development
    and maintenance. Earlier we just saw the syntax of one CSS preprocessor language—LESS.
    There are quite a few other similar languages, such as Sass, Stylus, Turbine,
    and Switch CSS. Although **Syntactically Awesome Stylesheets** (**Sass**) and
    LESS are among the most popular of them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这大大提高了你 CSS 开发和维护的可重用性和效率。我们之前只看到了一个 CSS 预处理器语言的语法——LESS。还有一些其他类似的语言，如 Sass、Stylus、Turbine
    和 Switch CSS。尽管 **Syntactically Awesome Stylesheets** （Sass）和 LESS 是其中最受欢迎的。
- en: There are quite a few interesting and powerful features being offered by these
    languages. Some important features are given below.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语言提供了许多有趣和强大的功能。以下是一些重要功能的介绍。
- en: Tip
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Please note that, wherever not explicitly mentioned, all the following syntaxes
    are of the LESS preprocessor language.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，除非明确提及，以下所有语法都是 LESS 预处理器语言的。
- en: Variables
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变量
- en: Now, you can define variables also in the preprocessed code. For example,
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你还可以在预处理的代码中定义变量。例如，
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Mixins
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混入
- en: As per Wikipedia, "a mixin is a class that contains a combination of methods
    from other classes." In case of CSS, this greatly enhances reusability, since
    you define one class and set of rules there, and reuse that set in a number of
    instances elsewhere.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 根据维基百科，"混入（mixin）是一个包含来自其他类的方法组合的类。" 在 CSS 的情况下，这大大增强了可重用性，因为你在那里定义了一个类和一组规则，并在多个实例中重用这组规则。
- en: The first code segment earlier (the one with the `.text`, `.text-large` and
    other classes) is an example of mixin written in LESS. There we have defined the
    `.text` class once and have used that in more than one places.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的第一个代码段（包含 `.text`、`.text-large` 和其他类的那个）是 LESS 编写的混入示例。在那里我们只定义了 `.text`
    类一次，并在多个地方使用了它。
- en: Operations
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: 'Interestingly enough, now you can do mathematical operations as well using
    CSS preprocessors. For example, in LESS, you write this code:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 趣味的是，现在你还可以使用 CSS 预处理器进行数学运算。例如，在 LESS 中，你编写以下代码：
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The resulting CSS code that would get generated will be simply as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的 CSS 代码将简单地如下所示：
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Nesting
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌套
- en: 'Consider this code segment:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这个代码段：
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This definitely looks more organized and structured than writing the following
    code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这肯定比编写以下代码看起来更有组织和结构：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The first one is the preprocessed code you would write in LESS, and the second
    one is a generated (or processed) CSS code ready to be rendered in the browser—which
    is nothing different from what we were usually writing in earlier days.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是您会在LESS中编写的预处理器代码，第二个是生成（或处理）的CSS代码，准备在浏览器中渲染——这与我们以前通常编写的内容没有区别。
- en: Since each of these preprocessors is just another language, they have their
    own syntaxes and way of writing the code—which is not essentially the syntax you
    are familiar with CSS. However, after processing (that is, compilation), they
    all generate the standard and same CSS code that the browser can comprehend.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个预处理器都是另一种语言，它们都有自己的语法和编写代码的方式——这并不是你熟悉的CSS语法。然而，在处理（即编译）之后，它们都会生成浏览器可以理解的标准化和相同的CSS代码。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The scope of this book does not cover full installation and working guide for
    CSS preprocessors, so we will restrict ourselves to the Bootstrap context only.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的内容范围不包括CSS预处理器完整的安装和工作指南，因此我们将仅限于Bootstrap的上下文。
- en: Bootstrap supports Sass and LESS both; in this book, we will be covering Bootstrap
    with LESS. In the later chapters, we will see how these features have been used
    in various places in Bootstrap.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap支持Sass和LESS；在本书中，我们将使用LESS来介绍Bootstrap。在后续章节中，我们将看到这些功能如何在Bootstrap的各个地方被使用。
- en: How to use Bootstrap
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用Bootstrap
- en: As you might have guessed, to use Bootstrap you need to include all the CSS
    and JavaScript files in your HTML page. One way to do this is after downloading
    Bootstrap and include the CSS and JavaScript files, or another way is to directly
    use Bootstrap's CDN files.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所猜，要使用Bootstrap，你需要在HTML页面中包含所有的CSS和JavaScript文件。一种方法是在下载Bootstrap后包含CSS和JavaScript文件，另一种方法是直接使用Bootstrap的CDN文件。
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: CDN stands for Content Delivery (or Distribution) Network. It is a large system
    of the distributed servers over the Internet across multiple locations. The objective
    is to provide high performance and high availability of content to the end users.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: CDN代表内容分发（或分发）网络。它是一个由多个地点的分布式服务器组成的庞大系统。目标是向最终用户提供高性能和高可用性的内容。
- en: 'In case of a downloaded local copy of Bootstrap, we add this in the HTML HEAD
    section:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果下载了Bootstrap的本地副本，我们将在HTML的HEAD部分添加以下内容：
- en: '[PRE7]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Also, in case of Bootstrap''s CDN:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在Bootstrap的CDN的情况下：
- en: '[PRE8]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is our first HTML page using Bootstrap:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的第一个使用Bootstrap的HTML页面：
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following is the output would look like on a desktop screen:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面屏幕上，输出将如下所示：
- en: '![How to use Bootstrap](img/B03987_02_03.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用Bootstrap](img/B03987_02_03.jpg)'
- en: Well of course, it may not be a very impressive web page, but we still have
    started creating a web page using the elementary classes of Bootstrap.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这可能不是一个非常令人印象深刻的网页，但我们仍然开始使用Bootstrap的基本类创建网页。
- en: 'However, more importantly, the following is the view of the same page on a
    mobile screen:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，更重要的是，以下是在移动屏幕上同一页面的视图：
- en: '![How to use Bootstrap](img/B03987_02_04.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用Bootstrap](img/B03987_02_04.jpg)'
- en: As you may have noticed, that the two blocks have been automatically adjusted
    and rendered in a vertical pattern, whereas in the desktop, they are rendered
    in horizontal pattern.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能注意到的，这两个块已经自动调整并垂直渲染，而在桌面端，它们是水平渲染的。
- en: We will be creating a sample basic online store application in this book. In
    each of the later chapters we will explore and learn more about each Bootstrap
    features; and will add more functionalities in this application.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将创建一个示例基本在线商店应用程序。在后续的每一章中，我们将探索和学习更多关于Bootstrap各个功能的特点；并将在这个应用程序中添加更多功能。
- en: In the end, we will end up creating a full simple and responsive application
    user experience using Bootstrap. Here we are starting to create the base structure
    of the application.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将使用Bootstrap创建一个完整简单且响应式的应用程序用户体验。在这里，我们开始创建应用程序的基础结构。
- en: The application folder structure
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序文件夹结构
- en: 'To start with, here is our application folder structure:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这是我们的应用程序文件夹结构：
- en: '![The application folder structure](img/B03987_02_05.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序文件夹结构](img/B03987_02_05.jpg)'
- en: Note
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please keep in mind that we are restricting ourselves only to create the HTML/client
    side part of the application; of course, the server side or data transaction part
    is out of the scope of this book.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，我们只限于创建应用程序的HTML/客户端部分；当然，服务器端或数据交易部分超出了本书的范围。
- en: We will use the downloaded copies of all the files in our application, rather
    than using any CDN links.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在应用中使用所有下载的文件副本，而不是使用任何 CDN 链接。
- en: 'The `bs` folder is just the unzipped and unmodified version of the precompiled
    bundle. In this folder, we have all the required files for Bootstrap, ready to
    be consumed. Thus, in the HTML code, we have referenced the CSS and JS files in
    the following way:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`bs` 文件夹是预编译捆绑包的未压缩和未修改版本。在这个文件夹中，我们包含了 Bootstrap 所需的所有文件，准备使用。因此，在 HTML 代码中，我们以以下方式引用了
    CSS 和 JS 文件：'
- en: '[PRE10]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `js` folder is to have all the custom (our application-specific files) and
    other third-party JavaScript files. We should not merge any other JS or CSS files
    in Bootstrap folder; this is why, we have created a separate folder to store all
    those files other than Bootstrap. In this case, we have added the jQuery script
    file here (`jquery-2.0.3.min.js`).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`js` 文件夹用于存放所有自定义（我们应用特定的文件）和其他第三方 JavaScript 文件。我们不应该在 Bootstrap 文件夹中合并任何其他
    JS 或 CSS 文件；这就是为什么我们创建了一个单独的文件夹来存储所有这些文件，除了 Bootstrap。在这种情况下，我们在这里添加了 jQuery 脚本文件（`jquery-2.0.3.min.js`）。'
- en: Tip
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Just to remind you that Bootstrap uses and is dependent on jQuery for all its
    JavaScript plugins. Hence, we have added jQuery before referencing the Bootstrap
    JS file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便提醒一下，Bootstrap 使用并依赖于 jQuery 来实现其所有 JavaScript 插件。因此，我们在引用 Bootstrap JS 文件之前添加了
    jQuery。
- en: The `index.html` file is the home page of our simple application—in the earlier
    text, you saw the code of this file. We will add more HTML files at this location
    as and when required by the application.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`index.html` 文件是我们简单应用的首页——在早期的文本中，你看到了这个文件的代码。我们将根据应用的需求在此位置添加更多 HTML 文件。'
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we got introduced to the CSS preprocessors available in the
    market; we also understood some of the features and advantages of using these
    preprocessor tools and languages.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了市场上可用的 CSS 预处理器；我们还了解了一些使用这些预处理器工具和语言的特点和优势。
- en: We saw how to download Bootstrap framework and also what the flavors available
    in the Bootstrap package are. We learned that the files and folders are available
    and included in each of those distributed packages.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何下载 Bootstrap 框架，以及 Bootstrap 包中可用的各种风味。我们了解到，文件和文件夹都包含在每个分发的包中。
- en: Finally, we learned how to create a simple web page including and using Bootstrap.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学习了如何创建一个包含并使用 Bootstrap 的简单网页。
- en: We have started creating a sample web application and created our first page
    using Bootstrap CSS. We also laid a foundation structure on which we will develop
    the sample web application.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经开始创建一个示例网络应用，并使用 Bootstrap CSS 创建了我们的第一个页面。我们还建立了一个基础结构，我们将在这个基础上开发示例网络应用。
- en: In the next chapter, we will explore all the CSS classes and features offered
    in Bootstrap and will add more functionality to our web application using these
    classes.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探索 Bootstrap 提供的所有 CSS 类和功能，并使用这些类为我们的网络应用添加更多功能。
