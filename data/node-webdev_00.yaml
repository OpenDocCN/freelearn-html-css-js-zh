- en: Preface
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 前言
- en: Node.js is a server-side JavaScript platform that allows developers to build
    fast and scalable applications using JavaScript outside of web browsers. It is
    playing an ever-wider role in the software development world, having started as
    a platform for server applications but now seeing wide use in command-line developer
    tools and even in GUI applications, thanks to toolkits such as Electron. Node.js
    has liberated JavaScript from being stuck in the browser.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js是一个服务器端的JavaScript平台，允许开发人员在网页浏览器之外使用JavaScript构建快速可扩展的应用程序。它在软件开发世界中扮演着越来越重要的角色，最初作为服务器应用程序的平台，但现在在命令行开发工具甚至GUI应用程序中得到广泛应用，这要归功于Electron等工具包。Node.js已经将JavaScript从浏览器中解放出来。
- en: It runs on top of the ultra-fast JavaScript engine at the heart of Google's
    Chrome browser, V8\. The Node.js runtime follows an ingenious event-driven model
    that's widely used for concurrent processing capacity despite using a single-thread
    model.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 它运行在谷歌Chrome浏览器核心的超快JavaScript引擎V8之上。Node.js运行时遵循一个巧妙的事件驱动模型，尽管使用单线程模型，但在并发处理能力方面被广泛使用。
- en: The primary focus of Node.js is high-performance, highly scalable web applications,
    but it is seeing adoption in other areas. For example, Electron, the Node.js-based
    wrapper around the Chrome engine, lets Node.js developers create desktop GUI applications
    and is the foundation on which many popular applications have been built, including
    the Atom and Visual Studio Code editors, GitKraken, Postman, Etcher, and the desktop
    Slack client. Node.js is popular on Internet of Things devices. Its architecture
    is especially well suited to microservice development and often helps form the
    server side of full-stack applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js的主要重点是高性能、高可扩展性的Web应用程序，但它也在其他领域得到了应用。例如，基于Node.js的Electron包装了Chrome引擎，让Node.js开发人员可以创建桌面GUI应用程序，并成为许多热门应用程序的基础，包括Atom和Visual
    Studio Code编辑器、GitKraken、Postman、Etcher和桌面版Slack客户端。Node.js在物联网设备上很受欢迎。它的架构特别适合微服务开发，并经常帮助构建全栈应用程序的服务器端。
- en: The key to providing high throughput on a single-threaded system is Node.js's
    model for asynchronous execution. It's very different from platforms that rely
    on threads for concurrent programming, as those systems often have high overheads
    and complexity. By contrast, Node.js uses a simple event dispatch model that originally
    relied on callback functions but today relies on the JavaScript Promise object
    and async functions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在单线程系统上提供高吞吐量的关键是Node.js的异步执行模型。这与依赖线程进行并发编程的平台非常不同，因为这些系统通常具有很高的开销和复杂性。相比之下，Node.js使用一个简单的事件分发模型，最初依赖回调函数，但今天依赖JavaScript
    Promise对象和async函数。
- en: Because Node.js is on top of Chrome's V8 engine, the platform is able to quickly
    adopt the latest advances in the JavaScript language. The Node.js core team works
    closely with the V8 team, letting it quickly adopt new JavaScript language features
    as they are implemented in V8\. Node.js 14.x is the current release and this book
    is written for that release.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Node.js建立在Chrome的V8引擎之上，该平台能够快速采用JavaScript语言的最新进展。Node.js核心团队与V8团队密切合作，让它能够快速采用V8中实现的新JavaScript语言特性。Node.js
    14.x是当前版本，本书是针对该版本编写的。
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: Server-side engineers may find JavaScript to be an excellent alternative programming
    language. Thanks to advances in the language, JavaScript long ago stopped being
    a simplistic toy language suitable only for animating buttons in browsers. We
    can now build large systems with the language, and Node.js has many built-in features,
    such as a top-notch module system, that help in larger projects.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端工程师可能会发现JavaScript是一种优秀的替代编程语言。由于语言的进步，JavaScript早就不再是一种只适用于在浏览器中为按钮添加动画效果的简单玩具语言。我们现在可以使用这种语言构建大型系统，而Node.js具有许多内置功能，比如一流的模块系统，可以帮助开发更大的项目。
- en: Developers experienced with browser-side JavaScript may find it attractive to
    broaden their horizons to include server-side development using this book.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有经验的浏览器端JavaScript开发人员可能会发现通过本书扩展视野，包括使用服务器端开发。
- en: What this book covers
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](3cd3b221-f9a7-47f2-9159-203c0130088e.xhtml), *About Node.js*, introduces
    you to the Node.js platform. It covers its uses, the technological architecture
    choices in Node.js, its history, the history of server-side JavaScript, why JavaScript
    should be liberated from the browser, and important recent advances in the JavaScript
    scene.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 《第一章》《关于Node.js》介绍了Node.js平台。它涵盖了Node.js的用途、技术架构选择、历史、服务器端JavaScript的历史、JavaScript应该从浏览器中解放出来以及JavaScript领域的重要最新进展。
- en: '[Chapter 2](bd2253cb-6a41-4fc5-ae86-cc9632d44da4.xhtml), *Setting Up Node.js*,
    goes over setting up a Node.js developer environment. This includes installing
    Node.js on Windows, macOS, and Linux. Important tools are covered, including the
    `npm` and `yarn` package management systems and Babel, which is used to transpile
    modern JavaScript into a form that''s runnable on older JavaScript implementations.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 《第二章》《设置Node.js》介绍了如何设置Node.js开发环境。这包括在Windows、macOS和Linux上安装Node.js。还介绍了一些重要的工具，包括`npm`和`yarn`包管理系统，以及用于将现代JavaScript转译为在旧JavaScript实现上可运行形式的Babel。
- en: '[Chapter 3](516a5cd0-bdae-4e8c-bb0a-d508f85d483a.xhtml), *Exploring Node.js
    Modules*, delves into the module as the unit of modularity in Node.js applications.
    We will dive deep into understanding and developing Node.js modules and using
    `npm` to maintain dependencies. We will learn about the new module format, ES6
    modules, and how to use it in Node.js now that it is natively supported.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 《第三章》《探索Node.js模块》深入探讨了模块作为Node.js应用程序中的模块化单元。我们将深入了解和开发Node.js模块，并使用`npm`来维护依赖关系。我们将了解新的模块格式ES6模块，以及如何在Node.js中使用它，因为它现在得到了原生支持。
- en: '[Chapter 4](a883aeee-aa28-44c6-a02e-8238829cea90.xhtml), *HTTP Servers and
    Clients*, starts exploring web development with Node.js. We will develop several
    small webserver and client applications in Node.js. We will use the Fibonacci
    algorithm to explore the effects of heavy-weight, long-running computations on
    a Node.js application. We will also learn several mitigation strategies and get
    our first experience with developing REST services.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“HTTP服务器和客户端”，开始探索Node.js的Web开发。我们将在Node.js中开发几个小型Web服务器和客户端应用程序。我们将使用斐波那契算法来探索重型、长时间运行计算对Node.js应用程序的影响。我们还将学习几种缓解策略，并获得我们开发REST服务的第一次经验。
- en: '[Chapter 5](582d3898-0135-430c-8b6e-8326f287e18b.xhtml), *Your First Express
    Application*, begins the main journey of this book, which is developing an application
    for creating and editing notes. In this chapter, we get a basic notes application
    running and get started with the Express framework.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“你的第一个Express应用程序”，开始了本书的主要旅程，即开发一个用于创建和编辑笔记的应用程序。在本章中，我们运行了一个基本的笔记应用程序，并开始使用Express框架。
- en: '[Chapter 6](db8b0ab8-181f-4d8d-9088-a9962ec461b8.xhtml), *Implementing the
    Mobile-First Paradigm*, uses the Bootstrap V4 framework to implement responsive
    web design in the notes application. This includes integrating a popular icon
    set and the steps required to customize Bootstrap.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“实现移动优先范式”，使用Bootstrap V4框架在笔记应用程序中实现响应式Web设计。这包括集成流行的图标集以及自定义Bootstrap所需的步骤。
- en: '[Chapter 7](ae8529e5-3a08-45cc-89e9-82895eb45641.xhtml), *Data Storage and
    Retrieval*, explores several database engines and a method to easily switch between
    databases at will. The goal is to robustly persist data to disk.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“数据存储和检索”，探索了几种数据库引擎和一种可以轻松切换数据库的方法。目标是将数据稳健地持久化到磁盘。
- en: '[Chapter 8](1ef2de06-5b7d-44c8-a132-55f822d113cf.xhtml), *Authenticating Users
    with a Microservice*, adds user authentication to the notes application. We will
    learn about handling login and logout using PassportJS. Authentication is supported
    both for locally stored user credentials and for using OAuth with Twitter.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“使用微服务对用户进行身份验证”，为笔记应用程序添加了用户身份验证。我们将学习使用PassportJS处理登录和注销。身份验证既支持本地存储的用户凭据，也支持使用Twitter的OAuth。
- en: '[Chapter 9](3d687da9-7857-4c79-915b-b5b79873748c.xhtml), *Dynamic Client/Server
    Interaction with Socket.IO*, looks at letting our users talk with each other in
    real time. We will use a popular framework for dynamic interaction between client
    and server, Socket.IO, to support dynamic updates of content and a simple commenting
    system. Everything is dynamically updated by users in pseudo-real time, giving
    us the opportunity to learn about real-time dynamic updating.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，“使用Socket.IO进行动态客户端/服务器交互”，让我们看看如何让用户实时交流。我们将使用Socket.IO这个流行的框架来支持内容的动态更新和简单的评论系统。所有内容都是由用户在伪实时中动态更新的，这给了我们学习实时动态更新的机会。
- en: '[Chapter 10](176ce11c-dd6f-4ebf-ba14-529be6db28da.xhtml), *Deploying Node.js
    Applications to Linux Servers*, is where we begin the deployment journey. In this
    chapter, we will use the traditional methods of deploying background services
    on Ubuntu using Systemd.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“将Node.js应用部署到Linux服务器”，是我们开始部署旅程的地方。在本章中，我们将使用传统的方法在Ubuntu上使用Systemd部署后台服务。
- en: '[Chapter 11](b3de2a00-b4df-4552-9cf6-b3f356ef05b9.xhtml), *Deploying Node.js
    Microservices with Docker*, sees us start to explore cloud-based deployment using
    Docker to treat the notes application as a cluster of microservices.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“使用Docker部署Node.js微服务”，让我们开始探索使用Docker进行基于云的部署，将笔记应用程序视为一组微服务的集群。
- en: '[Chapter 12](8551a26c-6834-4df6-b392-60a15c20f6ff.xhtml), *Deploying a Docker
    Swarm to AWS EC2 with Terraform*, literally takes us to the cloud by looking at
    building a cloud hosting system using AWS EC2 systems. We will use a popular tool,
    Terraform, to create and manage an EC2 cluster, and we will learn how to almost
    completely automate the deployment of a Docker Swarm cluster using Terraform features.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“使用Terraform在AWS EC2上部署Docker Swarm”，让我们看看如何构建一个使用AWS EC2系统的云托管系统。我们将使用流行的工具Terraform来创建和管理EC2集群，并学习如何几乎完全自动化使用Terraform功能部署Docker
    Swarm集群。
- en: '[Chapter 13](1c1eb7f2-8b1a-4f70-9f0a-94d865c739ef.xhtml), *Unit Testing and
    Functional Testing*, has us explore three testing modes: unit testing, REST testing,
    and functional testing. We will use popular test frameworks, Mocha and Chai, to
    drive test cases in all three modes. For function testing, we will use Puppeteer,
    a popular framework for automating test execution in a Chrome instance.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，“单元测试和功能测试”，让我们探索三种测试模式：单元测试、REST测试和功能测试。我们将使用流行的测试框架Mocha和Chai来驱动这三种模式的测试用例。对于功能测试，我们将使用Puppeteer，这是一个在Chrome实例中自动化测试执行的流行框架。
- en: '[Chapter 14](4cccad1e-fe7e-495a-9e90-8818820b890a.xhtml), *Security in Node.js
    Applications*, is where we integrate security techniques and tools to mitigate
    security intrusions. We will start by implementing HTTPS on the AWS EC2 deployment
    using Let''s Encrypt. We will then discuss several tools in Node.js to implement
    security settings and discuss the best security practices for both Docker and
    AWS environments.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第14章，“Node.js应用程序中的安全性”，是我们集成安全技术和工具以减轻安全入侵的地方。我们将首先在AWS EC2部署中使用Let's Encrypt实现HTTPS。然后，我们将讨论Node.js中的几种工具来实现安全设置，并讨论Docker和AWS环境的最佳安全实践。
- en: To get the most out of this book
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: The basic requirement is installing Node.js and having a programmer-oriented
    text editor. The editor need not be anything fancy; even vi/vim will do in a pinch.
    We will show you how to install everything that's needed, and it's all open source,
    so there's no barrier to entry.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 基本要求是安装Node.js并拥有面向程序员的文本编辑器。编辑器不必太复杂；即使是vi/vim也可以。我们将向您展示如何安装所需的一切，而且这些都是开源的，因此没有任何准入障碍。
- en: The most important tool is the one between your ears, and we aren't referring
    to ear wax.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的工具是您的大脑，我们指的不是耳屎。
- en: '| **Software/hardware covered in the book** | **OS requirements** |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '**书中涵盖的软件/硬件** **操作系统要求**'
- en: '| Node.js and related frameworks such as Express, Sequelize, and Socket.IO
    | Any |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: Node.js及相关框架，如Express、Sequelize和Socket.IO
- en: '| The `npm`/`yarn` package management tools | Any |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: 使用`npm`/`yarn`软件包管理工具
- en: '| Python and C/C++ compilers | Any |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: Python和C/C++编译器
- en: '| MySQL, SQLite3, and MongoDB databases | Any |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: MySQL、SQLite3和MongoDB数据库
- en: '| Docker | Any |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: Docker
- en: '| Multipass | Any |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: Multipass
- en: '| Terraform | Any |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: Terraform
- en: '| Mocha and Chai | Any |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: Mocha和Chai
- en: Every piece of software concerned is readily available. For C/C++ compilers
    on Windows and macOS, you will need to get either Visual Studio (Windows) or Xcode
    (macOS), but both are freely available.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每个涉及的软件都是readily available。对于Windows和macOS上的C/C++编译器，您需要获取Visual Studio（Windows）或Xcode（macOS），但两者都是免费提供的。
- en: It will be helpful to have some experience with JavaScript programming. It is
    a fairly easy language to learn if you are already experienced with other programming
    languages.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有一些JavaScript编程经验，这将会很有帮助。如果您已经有其他编程语言的经验，学习它会相当容易。
- en: Download the example code files
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: While we aim to have identical code snippets in the book and in the repository,
    there are going to be minor differences in some places. The repository may contain
    comments, debugging statements, or alternate implementations (commented-out) that
    are not shown in the book.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们希望书中和存储库中的代码片段是相同的，但在某些地方可能会有细微差异。存储库中可能包含书中未显示的注释、调试语句或替代实现（已注释掉）。
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packtpub.com/support](https://www.packtpub.com/support)并注册，文件将直接发送到您的邮箱。
- en: 'You can download the code files by following these steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packt.com](http://www.packt.com)登录或注册。
- en: Select the Support tab.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择支持选项卡。
- en: Click on Code Downloads.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击代码下载。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用以下最新版本的软件解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的7-Zip/PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Node.js-Web-Development-Fifth-Edition](https://github.com/PacktPublishing/Node.js-Web-Development-Fifth-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Node.js-Web-Development-Fifth-Edition](https://github.com/PacktPublishing/Node.js-Web-Development-Fifth-Edition)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自丰富书籍和视频目录的其他代码包，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。快去看看吧！
- en: Conventions used
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Start by changing `package.json` to have the following `scripts` section."'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码字、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名。例如："首先更改`package.json`，使其具有以下`scripts`部分。"'
- en: 'A block of code is set as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]js\1'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]js\1'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式编写：
- en: '```js'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Click on the Submit button."'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会在文本中以这种方式出现。例如："单击提交按钮。"'
- en: Warnings or important notes appear like this.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明看起来像这样。
- en: Tips and tricks appear like this.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧看起来像这样。
