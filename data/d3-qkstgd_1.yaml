- en: Getting Started with D3.js
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: D3.js 入门
- en: The era of big data is upon us! Advances in hardware have made it possible for
    computers to store, analyze, and transmit massive amounts of information in a
    way that was previously impossible. Data science has become one of the most in-demand
    fields in the United States, and companies are constantly coming up with new techniques
    to analyze customer information; it seems as if every day there are new ways to
    visualize all this data. **D3** has become the most popular library used to create
    dynamic, interactive, data-driven visualizations on the web. Unlike many technologies
    previously used in data vizualization
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据时代已经到来！硬件的进步使得计算机能够以前不可能的方式存储、分析和传输大量信息。数据科学已成为美国最受欢迎的领域之一，公司不断推出新技术来分析客户信息；似乎每天都有新的方法来可视化这些数据。**D3**
    已经成为创建动态、交互式、数据驱动的网络可视化的最受欢迎的库。与之前用于数据可视化的许多技术不同
- en: ', D3 leverages the power of combining SVG images with web browsers and JavaScript.
    In this chapter, we''ll discuss the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: ，D3 利用将 SVG 图像与网络浏览器和 JavaScript 结合起来的力量。在本章中，我们将讨论以下主题：
- en: What is SVG?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 SVG？
- en: What makes D3 so special?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: D3 有什么特别之处？
- en: This book's approach to learning
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书的学习方法
- en: What is SVG?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 SVG？
- en: One of the best ways to present your data is via an interactive graphic on the
    web. The advantage of this approach is that its interactivity allows creators
    to pack more information into a single visualization, while the ubiquity of the
    web allows anyone to instantly access it. Gone are the days of PowerPoint presentations,
    or, worse still, printing static images on to paper as handouts. There are many
    ways to create a web-based interactive data visualization, but none of them is
    more popular than the JavaScript library called **D3.js**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络上通过交互式图形展示你的数据是最佳方式之一。这种方法的优点是，其交互性允许创作者在一个可视化中包含更多信息，而网络的普遍性则允许任何人立即访问它。PowerPoint
    演示文稿或更糟糕的是，将静态图像打印成纸作为讲义的日子已经过去了。有许多方法可以创建基于网络的交互式数据可视化，但没有一种方法比名为 **D3.js** 的
    JavaScript 库更受欢迎。
- en: 'To understand why `D3.js` works so well, it''s important to understand what
    SVG is and how it relates to D3\. **SVG** stands for **Scalable Vector Graphics**,
    and it''s a way to display shapes using mathematical directions/commands. Traditionally,
    the information for an image is stored in a grid, also called a raster. Each square
    (called a pixel) of the image has a specific color:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么 `D3.js` 工作得如此出色，重要的是要了解 SVG 是什么以及它与 D3 的关系。**SVG** 代表 **可缩放矢量图形**，它是一种使用数学方向/命令显示形状的方法。传统上，图像的信息存储在网格中，也称为位图。图像的每个方格（称为像素）都有特定的颜色：
- en: '![](img/73e7bfff-3121-406b-bb50-c2febad99b1e.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/73e7bfff-3121-406b-bb50-c2febad99b1e.png)'
- en: 'But with SVG, a set of succinct drawing directions is stored. For example,
    the drawing command for a circle is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但在 SVG 中，存储的是一组简洁的绘图指令。例如，绘制圆的绘图命令如下：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This code produces a much smaller file size, and because it''s a set of drawing
    directions, the image can be enlarged without any pixelation. A raster image becomes
    blurry and pixelated as it''s enlarged. The advantage of raster graphics over
    vector graphics is that they''re great for storing complex images such as photographs.
    With a photograph, where each pixel probably has a different color, it''s better
    to use a raster image. Imagine writing SVG drawing commands for a photograph:
    you would end up creating a new element for each pixel, and the file size would
    be too large.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码生成的文件大小更小，因为它是一组绘图指令，所以图像可以无损放大。位图图像放大时，会变得模糊和像素化。与矢量图形相比，位图图形的优势在于它们非常适合存储复杂的图像，如照片。对于照片，每个像素可能都有不同的颜色，因此最好使用位图图像。想象一下为照片编写
    SVG 绘图命令：你将为每个像素创建一个新的元素，文件大小会变得非常大。
- en: 'Once an SVG drawing command is written, a program needs to interpret the command
    and display the image. Up until recently, only designated drawing applications
    such as Adobe Illustrator could view and manipulate these images. But by 2011
    all major modern browsers supported SVG tags, allowing for developers to embed
    SVG directly on a web page. Since the SVG image was directly embedded in the code
    of a web page, JavaScript, which normally is used for manipulating HTML, could
    be used to manipulate the shape, size, and colors of the image in response to
    user events. To make the circle in the SVG example you have just seen grow to
    twice its original size, all that JavaScript had to do was change the rattribute:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦写出了 SVG 绘图命令，程序就需要解释该命令并显示图像。直到最近，只有指定的绘图应用程序，如 Adobe Illustrator，才能查看和操作这些图像。但到了
    2011 年，所有主要的现代浏览器都支持 SVG 标签，允许开发者直接在网页上嵌入 SVG。由于 SVG 图像直接嵌入到网页代码中，通常用于操作 HTML
    的 JavaScript 可以用来根据用户事件操作图像的形状、大小和颜色。为了使您刚才看到的 SVG 示例中的圆圈增长到原来的两倍大小，JavaScript
    只需更改 r 属性：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This was the massive breakthrough that allowed complex interactive data visualizations
    to be hosted on the web.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一次巨大的突破，它使得复杂的交互式数据可视化能够托管在网络上。
- en: What makes D3 so special?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: D3 有什么特别之处？
- en: 'D3.js came in at this point because writing the code to make complex data-driven
    documents (how D3 got its name) that linked SVG images with the big data that
    had become available on the internet was a difficult task. It rose to prominence
    during the Obama/Romney presidential debates as the New York times published a
    series of amazing visualizations. Check out some examples here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: D3.js 在这个时刻出现，因为编写代码以创建复杂的数据驱动文档（D3 得名的由来）——这些文档将 SVG 图像与互联网上可用的海量数据链接起来，是一项艰巨的任务。在奥巴马与罗姆尼总统辩论期间，随着《纽约时报》发布了一系列惊人的可视化作品，D3
    开始崭露头角。在此处查看一些示例：
- en: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/11/07/us/politics/obamas-diverse-base-of-support.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/11/07/us/politics/obamas-diverse-base-of-support.html)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/11/07/us/politics/obamas-diverse-base-of-support.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/11/07/us/politics/obamas-diverse-base-of-support.html)'
- en: '[http://archive.nytimes.com/www.nytimes.com/interactive/2012/11/02/us/politics/paths-to-the-white-house.html](http://archive.nytimes.com/www.nytimes.com/interactive/2012/11/02/us/politics/paths-to-the-white-house.html)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://archive.nytimes.com/www.nytimes.com/interactive/2012/11/02/us/politics/paths-to-the-white-house.html](http://archive.nytimes.com/www.nytimes.com/interactive/2012/11/02/us/politics/paths-to-the-white-house.html)'
- en: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/10/15/us/politics/swing-history.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/10/15/us/politics/swing-history.html)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/10/15/us/politics/swing-history.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/10/15/us/politics/swing-history.html)'
- en: '[https://www.nytimes.com/elections/2012/electoral-map.html](https://www.nytimes.com/elections/2012/electoral-map.html)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.nytimes.com/elections/2012/electoral-map.html](https://www.nytimes.com/elections/2012/electoral-map.html)'
- en: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html)'
- en: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/03/07/us/politics/how-candidates-fared-with-different-demographic-groups.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/03/07/us/politics/how-candidates-fared-with-different-demographic-groups.html)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://archive.nytimes.com/www.nytimes.com/interactive/2012/03/07/us/politics/how-candidates-fared-with-different-demographic-groups.html](https://archive.nytimes.com/www.nytimes.com/interactive/2012/03/07/us/politics/how-candidates-fared-with-different-demographic-groups.html)'
- en: D3 simplifies some of the most common, as well as some of the most, complex
    tasks that a developer can run into when creating browser-based visualizations.
    At its core, D3 easily maps SVG image properties to data values. As the data values
    change, due to user interactions, so do the images.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: D3 简化了开发者创建基于浏览器的可视化时可能遇到的一些最常见以及一些最复杂的任务。在其核心，D3 可以轻松地将 SVG 图像属性映射到数据值。随着数据值的变化，由于用户交互，图像也会相应变化。
- en: This book's approach to learning
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的学习方法
- en: 'D3 is a massive library, full of millions of options, but its core concepts
    are easy to learn. You do not need to know every detail of the library to become
    a functional D3 developer. Instead, this book attempts to teach the most fundamental
    aspects of D3 so that the reader can get job-ready quickly. It does so by stepping
    the user through a series of the most common graphs that a developer will be asked
    to make: a scatter plot, a bar graph, a pie chart, a force-directed graph, and
    a map. The goal is not only to teach the basics but also to give the reader a
    final set of builds that are fun to work, toward as well as useful to draw from
    as their career continues.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: D3 是一个庞大的库，包含数百万个选项，但其核心概念很容易学习。您不需要了解库的每个细节就能成为一名功能性的 D3 开发者。相反，这本书试图教授 D3
    最基本的部分，以便读者能够快速准备好就业。它通过引导用户通过一系列开发者将被要求制作的常见图表来实现这一点：散点图、条形图、饼图、力导向图和地图。目标是不仅教授基础知识，还要给读者提供一套有趣的构建，这些构建不仅在工作时有用，而且随着他们职业生涯的继续，也有助于他们从中汲取经验。
- en: Please note, the code demonstrated here was created to be easy to understand
    from an educational standpoint. It is not meant to be code that is ready for production.
    Nor does it employ ES6 or ES7 syntax. Often, demonstrating a concept in code that
    is production-ready or written in ES6/ES7 can hinder the educational experience.
    It is assumed that the reader is comfortable enough with the core concepts of
    programming that they can refine the code on their own, once they are comfortable
    with the fundamentals of D3.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里展示的代码是为了从教育角度易于理解而创建的。它并不是为生产准备的代码。也不使用 ES6 或 ES7 语法。通常，用生产就绪的代码或用 ES6/ES7
    编写的代码来展示一个概念可能会阻碍教育体验。假设读者对编程的核心概念足够熟悉，他们可以在熟悉 D3 的基础知识后自行改进代码。
- en: A preview of each build
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 每个构建的预览
- en: 'Each chapter focuses on a specific build. The completed build code for each
    chapter can be found at: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 每章都专注于特定的构建。每章完成的构建代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide)。
- en: Using SVG to create images using code
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SVG 通过代码创建图像
- en: 'In this chapter, we learn how to render shapes in the browser, using SVG. We''ll
    cover shapes such as these:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用 SVG 在浏览器中渲染形状。我们将涵盖如下形状：
- en: 'Circles:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圆形：
- en: '![](img/fd321b2d-73d4-49cf-b794-8c65632f9c24.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd321b2d-73d4-49cf-b794-8c65632f9c24.png)'
- en: 'Lines:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线条：
- en: '![](img/61f46fe4-8c14-47ae-8cbb-9995516cd859.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/61f46fe4-8c14-47ae-8cbb-9995516cd859.png)'
- en: 'Rectangles:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩形：
- en: '![](img/3288d14c-ed88-4b87-be57-e0dcd767c576.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3288d14c-ed88-4b87-be57-e0dcd767c576.png)'
- en: 'Ellipses:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 椭圆：
- en: '![](img/23d8dcc2-f9c9-46aa-87af-b69ccfa86465.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/23d8dcc2-f9c9-46aa-87af-b69ccfa86465.png)'
- en: 'Polygons:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多边形：
- en: '![](img/4fe0ad7d-7ce5-4f01-b321-617083bf33f4.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4fe0ad7d-7ce5-4f01-b321-617083bf33f4.png)'
- en: 'Polylines:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多段线：
- en: '![](img/c8871cbf-e772-4812-9767-5f3dc4ff8f5c.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8871cbf-e772-4812-9767-5f3dc4ff8f5c.png)'
- en: 'Cubic Bezier Curves:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立方贝塞尔曲线：
- en: '![](img/e179b016-31db-47ef-a11b-2a50ba2e1fac.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e179b016-31db-47ef-a11b-2a50ba2e1fac.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter02](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter02).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter02](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter02)。
- en: Building an interactive scatter plot
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建交互式散点图
- en: 'In this chapter, you''ll learn how to plot points on a graph to create a scatter
    plot. It will look a bit like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何在图表上绘制点以创建散点图。它看起来可能像这样：
- en: '![](img/2412f34d-a409-4751-9ee2-445f7afd7950.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2412f34d-a409-4751-9ee2-445f7afd7950.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter03](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter03).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter03](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter03)。
- en: Making a basic scatter plot interactive
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使基本的散点图交互式
- en: 'This chapter builds on the previous one, adding interactive functionality that
    allows you to do the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 本章在上一章的基础上进行了扩展，增加了交互功能，允许您执行以下操作：
- en: 'Create new points:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新点：
- en: '![](img/e67afc37-ade4-453e-a868-9b631a25f5d0.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e67afc37-ade4-453e-a868-9b631a25f5d0.png)'
- en: 'Remove points:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除点：
- en: '![](img/7ac886ce-1922-4b1f-ac9d-d77147900813.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7ac886ce-1922-4b1f-ac9d-d77147900813.png)'
- en: 'Update points:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新点：
- en: '![](img/df7293e4-bfa7-4638-b1d9-83b51f308215.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df7293e4-bfa7-4638-b1d9-83b51f308215.png)'
- en: 'Zoom and pan:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放和平移：
- en: '![](img/9a62b225-fc86-4e0c-8d1e-28d2f7e16c14.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a62b225-fc86-4e0c-8d1e-28d2f7e16c14.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter04](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter04).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter04](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter04).
- en: Creating a bar graph using a data file
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用数据文件创建条形图
- en: 'In this chapter, we''ll learn how to use AJAX to make an asynchronous call,
    after the page has loaded, to retrieve some JSON data and render it as a bar graph.
    It should look as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用 AJAX 在页面加载后进行异步调用，以检索一些 JSON 数据并将其渲染为条形图。它应该看起来如下：
- en: '![](img/52674d4f-b163-49f0-aa28-f989471cb60d.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52674d4f-b163-49f0-aa28-f989471cb60d.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter05](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter05).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter05](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter05).
- en: Animating SVG elements to create an interactive pie chart
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SVG 元素动画创建交互式饼图
- en: 'In this chapter, we''ll learn how to make a pie chart:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何制作饼图：
- en: '![](img/5ab4973e-14a9-492c-b640-8daaa2735e08.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ab4973e-14a9-492c-b640-8daaa2735e08.png)'
- en: 'Then we''ll turn it into a donut chart:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将它转换为饼图：
- en: '![](img/99cd058b-13f8-4d4a-a8d4-ac663ab273bd.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/99cd058b-13f8-4d4a-a8d4-ac663ab273bd.png)'
- en: 'And then we''ll create functionality so that the user can remove a section
    of the chart and it will close the gap with a smooth transition:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将创建功能，使用户能够删除图表的一部分，并且它将以平滑的过渡关闭缺口：
- en: '![](img/261e8997-e5b0-48fe-a148-d10f10f08a97.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/261e8997-e5b0-48fe-a148-d10f10f08a97.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter06](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter06).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter06](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter06).
- en: Using physics to create a force-directed graph
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用物理创建力导向图
- en: 'In this chapter, we''ll graph relationships between people with a force-directed
    graph. It will look as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用力导向图来绘制人与人之间的关系图。它将看起来如下：
- en: '![](img/a26bb7d1-b7c5-43b6-9ec9-dca853539db8.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a26bb7d1-b7c5-43b6-9ec9-dca853539db8.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter07](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter07).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter07](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter07).
- en: Mapping
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 映射
- en: 'In [Chapter 8](9e68fb4c-044a-40ec-ba46-3181bc2b7b5f.xhtml), *Mapping*, we''ll
    learn how to use GeoJSON data to create a map of the world. It will look as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 8 章](9e68fb4c-044a-40ec-ba46-3181bc2b7b5f.xhtml)，*映射*中，我们将学习如何使用 GeoJSON
    数据创建世界地图。它将看起来如下：
- en: '![](img/0f9fd30c-8ba4-4316-a726-91cfa42bd461.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f9fd30c-8ba4-4316-a726-91cfa42bd461.png)'
- en: 'The completed code for this section can be found here: [https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本节完成的代码可以在以下位置找到：[https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08](https://github.com/PacktPublishing/D3.js-Quick-Start-Guide/tree/master/Chapter08).
- en: Setting up
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: 'For this book, you really only need to download and install the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这本书，你实际上只需要下载并安装以下内容：
- en: 'Chrome: [https://www.google.com/chrome/](https://www.google.com/chrome/).'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chrome：[https://www.google.com/chrome/](https://www.google.com/chrome/).
- en: A web browser so that we can view our visualizations.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个网络浏览器，以便我们可以查看我们的可视化。
- en: 'Node: [https://nodejs.org/en/](https://nodejs.org/en/).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点：[https://nodejs.org/en/](https://nodejs.org/en/).
- en: This allows us to run javascript from the terminal. In [Chapter 4](e503bfe5-4b90-47eb-bae0-d588a9b545d5.xhtml),
    *Making a Basic Scatter Plot Interactive*,we will use it so that we can make AJAX
    calls.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这允许我们从终端运行 JavaScript。在[第 4 章](e503bfe5-4b90-47eb-bae0-d588a9b545d5.xhtml)，*制作基本散点图交互式*，我们将使用它来进行
    AJAX 调用。
- en: 'A code editor. I''d suggest Atom if you''re new to coding: [https://atom.io/](https://atom.io/).'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码编辑器。如果你是编程新手，我建议使用 Atom：[https://atom.io/](https://atom.io/).
- en: Summary
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you've received a high-level overview of what makes D3 so interesting.
    We examined what an SVG element is and set up our machine so that it is ready
    to create D3 code. We also took a look at this book's approach to learning and
    how it applies to the applications that we'll build. In [Chapter 2](f40fadd5-f40b-43dc-a82d-206aac322123.xhtml),
    *Using SVG to Create Images Using Code*, we'll dive into creating SVG elements.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经得到了一个关于D3为何如此有趣的概述。我们探讨了SVG元素是什么，并设置了我们的机器，使其准备好创建D3代码。我们还审视了本书的学习方法以及它如何应用于我们将要构建的应用程序。在[第二章](f40fadd5-f40b-43dc-a82d-206aac322123.xhtml)《使用代码创建SVG图像》中，我们将深入探讨创建SVG元素。
