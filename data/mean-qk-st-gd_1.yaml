- en: Introduction to the MERN Stack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MERN堆栈简介
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The MVC architectural pattern
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MVC架构模式
- en: Installing and configuring MongoDB
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置MongoDB
- en: Installing Node.js
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: Installing NPM packages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装NPM包
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will be required to have an IDE, Visual Studio Code, Node.js and MongoDB.
    You will also need to install Git, in order use the Git repository of this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个IDE、Visual Studio Code、Node.js和MongoDB。您还需要安装Git，以便使用本书的Git存储库。
- en: 'The code files of this chapter can be found on GitHub:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在GitHub上找到：
- en: '[https://github.com/PacktPublishing/MERN-Quick-Start-Guide/tree/master/Chapter01](https://github.com/PacktPublishing/MERN-Quick-Start-Guide/tree/master/Chapter01)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/MERN-Quick-Start-Guide/tree/master/Chapter01](https://github.com/PacktPublishing/MERN-Quick-Start-Guide/tree/master/Chapter01)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的运行情况：
- en: '[https://goo.gl/1zwc6F](https://goo.gl/1zwc6F)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://goo.gl/1zwc6F](https://goo.gl/1zwc6F)'
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'The MERN stack is a solution composed of four main components:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: MERN堆栈是由四个主要组件组成的解决方案：
- en: '**MongoDB**: A database that uses a document-oriented data model.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB**：使用面向文档的数据模型的数据库。'
- en: '**ExpressJS**: A web application framework for building web applications and
    APIs.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ExpressJS**：用于构建Web应用程序和API的Web应用程序框架。'
- en: '**ReactJS**: A declarative, component-based, and isomorphic JavaScript library
    for building user interfaces.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ReactJS**：用于构建用户界面的声明性、基于组件的、同构的JavaScript库。'
- en: '**Node.js**: A cross-platform JavaScript runtime environment built on Chrome''s
    V8 JavaScript engine allows developers to build diverse tools, servers, and applications.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js**：基于Chrome的V8 JavaScript引擎构建的跨平台JavaScript运行时环境，允许开发人员构建各种工具、服务器和应用程序。'
- en: These fundamental components that comprise the MERN stack are open source, and
    are thus maintained and developed by a great community of developers. What ties
    these components together is a common language, JavaScript.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些构成MERN堆栈的基本组件都是开源的，因此由一群伟大的开发者维护和开发。将这些组件联系在一起的是一种共同的语言，JavaScript。
- en: The recipes in this chapter will mainly focus on setting up a development environment
    to work with a MERN stack.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的食谱主要关注设置开发环境以使用MERN堆栈。
- en: You are free to use the code editor or IDE of your choice. However, I would
    suggest you give Visual Studio Code a try if you have trouble deciding which IDE
    to use.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以自由选择代码编辑器或IDE。但是，如果您在选择IDE方面有困难，我建议您尝试一下Visual Studio Code。
- en: The MVC architectural pattern
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MVC架构模式
- en: 'Most modern web applications implement the MVC architectural pattern. It consists
    of three interconnected parts that separate the internal representation of information
    in a web application:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代Web应用程序都实现了MVC架构模式。它由三个相互连接的部分组成，用于分离Web应用程序中信息的内部表示：
- en: '**Model**: Manages the business logic of an application that determines how
    data should be stored, created, and modified'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型**：管理应用程序的业务逻辑，确定数据应该如何存储、创建和修改'
- en: '**View**: Any visual representation of the data or information'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：数据或信息的任何可视表示'
- en: '**Controller**: Interprets user-generated events and transforms them into commands
    for the model and view to update accordingly:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制器**：解释用户生成的事件并将其转换为命令，以便模型和视图相应地更新：'
- en: '![](img/8af28448-da9c-4fb3-84e8-ec8f0177ba72.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8af28448-da9c-4fb3-84e8-ec8f0177ba72.png)'
- en: The **Separation of Concern** (**SoC**) design pattern separates frontend from
    backend code. Following the MVC architectural pattern, developers are able to
    adhere to the SoC design pattern, resulting in a consistent and manageable application
    structure.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**关注点分离**（**SoC**）设计模式将前端与后端代码分开。遵循MVC架构模式，开发人员能够遵循关注点分离设计模式，从而实现一致和可管理的应用程序结构。'
- en: The recipes in the following chapters implement this architectural pattern to
    separate the frontend and the backend.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节中的食谱实现了这种架构模式，以分离前端和后端。
- en: Installing and configuring MongoDB
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置MongoDB
- en: The official MongoDB website provides up-to-date packages containing binaries
    for installing MongoDB on Linux, OS X, and Windows.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的MongoDB网站提供了包含二进制文件的最新软件包，可用于在Linux、OS X和Windows上安装MongoDB。
- en: Getting ready
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Visit the official website of MongoDB at [https://www.mongodb.com/download-center](https://www.mongodb.com/download-center),
    select Community Server, and then select your preferred operating system version
    of the software and download it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 访问MongoDB的官方网站[https://www.mongodb.com/download-center](https://www.mongodb.com/download-center)，选择Community
    Server，然后选择您首选的软件操作系统版本并下载。
- en: Installing MongoDB and configuring it may require additional steps.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 安装MongoDB并进行配置可能需要额外的步骤。
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Visit the documentation website of MongoDB at [https://docs.mongodb.com/master/installation/](https://docs.mongodb.com/master/installation/)
    for instructions and check the Tutorials section for your specific platform.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 访问MongoDB的文档网站[https://docs.mongodb.com/master/installation/](https://docs.mongodb.com/master/installation/)获取说明，并在教程部分检查您特定平台的内容。
- en: 'After installation, an instance of `mongod-`, the daemon process for `MongoDB-`,
    can be started in a standalone fashion:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，可以以独立方式启动`MongoDB-`的守护进程`mongod-`的实例：
- en: Open a new Terminal
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端
- en: Create a new directory named `data`, which will contain the Mongo database
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`data`的新目录，其中包含Mongo数据库
- en: Type `mongod --port 27017 --dbpath /data/` to start a new instance and create
    a database
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`mongod --port 27017 --dbpath /data/`启动一个新实例并创建一个数据库
- en: Open another Terminal
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开另一个终端
- en: Type `mongo --port 27017` to connect a Mongo shell to the instance
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`mongo --port 27017`连接到Mongo shell实例
- en: There's more...
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As an alternative, you can opt to use a **Database as a service** (**DBaaS**)
    such as MongoDB Atlas, which, at the time of writing, allows you to create a free
    cluster with 512 MB of storage. Another simple alternative is mLab, although there
    are many other options.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方案，您可以选择使用**数据库即服务**（**DBaaS**）如MongoDB Atlas，它在撰写本文时允许您创建一个带有512MB存储空间的免费集群。另一个简单的选择是mLab，尽管还有许多其他选择。
- en: Installing Node.js
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: The official Node.js website provides two packages containing LTS and Current
    (containing the latest features) binaries to install Node.js on Linux, OS X, and
    Windows.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 官方Node.js网站提供了包含LTS和Current（包含最新功能）二进制文件的两个包，可用于在Linux、OS X和Windows上安装Node.js。
- en: Getting ready
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For the purpose of this book, we will install Node.js v10.1.x.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本书的目的，我们将安装Node.js v10.1.x。
- en: How to do it...
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To download the latest version of Node.js:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载最新版本的Node.js：
- en: Visit the official website at [https://nodejs.org/en/download/](https://nodejs.org/en/download/)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问官方网站[https://nodejs.org/en/download/](https://nodejs.org/en/download/)
- en: Select Current | Latest Features
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择当前|最新功能
- en: Select the binary for your preferred platform or **operating system** (**OS**)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您喜欢的平台或**操作系统**（**OS**）的二进制文件
- en: Download and install
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装
- en: If you prefer to install Node.js via package manager, visit [https://nodejs.org/en/download/package-manager/](https://nodejs.org/en/download/package-manager/)
    and select your preferred platform or OS.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢通过包管理器安装Node.js，请访问[https://nodejs.org/en/download/package-manager/](https://nodejs.org/en/download/package-manager/)并选择您喜欢的平台或操作系统。
- en: Installing npm packages
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装npm包
- en: The installation of Node.js includes a package manager called `npm`, which is
    the default and most widely used package manager for installing JavaScript/Node.js
    libraries.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js的安装包括一个名为`npm`的包管理器，它是默认和最广泛使用的用于安装JavaScript/Node.js库的包管理器。
- en: NPM packages are listed in the NPM registry at [https://registry.npmjs.org/](https://registry.npmjs.org/),
    where you can search for packages and even publish your own.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: NPM包列在NPM注册表[https://registry.npmjs.org/](https://registry.npmjs.org/)中，您可以在其中搜索包，甚至发布您自己的包。
- en: There are other alternatives to NPM as well, such as Yarn, which is compatible
    with the public NPM registry. You are free to use the package manager of your
    choice; however, for the purpose of this book, the package manager used in the
    recipes will be NPM.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他NPM的替代方案，如Yarn，它与公共NPM注册表兼容。您可以自由选择您喜欢的包管理器；但是，为了本书的目的，配方中使用的包管理器将是NPM。
- en: Getting ready
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: NPM expects to find a `package.json` file at the root of your `project` folder.
    This is a configuration file that describes the details of your project, such
    as its dependencies, the name of the project, and the author of the project.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: NPM期望在您的`project`文件夹的根目录中找到一个`package.json`文件。这是一个描述项目细节的配置文件，例如其依赖关系、项目名称和项目作者。
- en: 'Before you''re able to install any packages in your project, you must create
    a `package.json` file. These are the steps you will usually take to create a project:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在您能够在项目中安装任何包之前，您必须创建一个`package.json`文件。以下是您通常会采取的创建项目的步骤：
- en: Create a new `project` folder in your preferred location and either name it
    `mern-cookbook` or give it another name of your choice.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您喜欢的位置创建一个新的`project`文件夹，然后将其命名为`mern-cookbook`或者您自己选择的其他名称。
- en: Open a new Terminal.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端。
- en: Change the current directory to the new folder you just created. This is usually
    done with the `cd` command in your Terminal.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改当前目录到您刚刚创建的新文件夹。通常使用终端中的`cd`命令来完成。
- en: Run `npm init` to create a new `package.json` file, following the steps displayed
    in the Terminal.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`npm init`来创建一个新的`package.json`文件，按照终端显示的步骤进行操作。
- en: 'After that, you should have a `package.json` file that will look something
    like the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您应该有一个类似以下的`package.json`文件：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After this, you will be able to use NPM to install new packages for your project.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您将能够使用NPM为您的项目安装新的包。
- en: How to do it...
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Open a new Terminal
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端
- en: Change the current directory to where your newly created `project` folder is
    located
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将当前目录更改为您新创建的`project`文件夹所在的位置
- en: 'Run the following line to install the `chalk` package:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令来安装`chalk`包：
- en: '[PRE1]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, you will be able to use the package in your project via require in Node.js.
    Go through the following steps to see how you can use it:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将能够在Node.js中使用`require`来使用包。按照以下步骤来查看如何使用它：
- en: 'Create a new file named `index.js` and add the following code:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`index.js`的新文件，并添加以下代码：
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, open a new Terminal and run the following:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，打开一个新的终端并运行以下命令：
- en: '[PRE3]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: NPM will connect to and look in the NPM registry for the package named react,
    and will download it and install it if it exists.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: NPM将连接并在NPM注册表中查找名为react的包，如果存在，将下载并安装它。
- en: 'The following are some useful flags that you can use NPM with:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些您可以使用NPM的有用标志：
- en: '`--save`: This will install and add the package name and version in the `dependencies`
    section of your `package.json` file. These dependencies are modules that your
    project will use while in production.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--save`：这将在您的`package.json`文件的`dependencies`部分中安装并添加包名称和版本。这些依赖是您的项目在生产中将使用的模块。'
- en: '`--save-dev`: This works in the same way as the `--save` flag. It will install
    and add the package name in the `devDependencies` section of the `package.json`
    file. These dependencies are modules that your project will use during development.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--save-dev`：这与`--save`标志的工作方式相同。它将在`package.json`文件的`devDependencies`部分中安装并添加包名称。这些依赖是您的项目在开发过程中将使用的模块。'
- en: '`--save-exact`: This keeps the original version of the installed package. This
    means, if you share your project with other people, they will be able to install
    the exact same version of the package that you use.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--save-exact`：这将保留已安装包的原始版本。这意味着，如果您与其他人分享您的项目，他们将能够安装与您使用的确切相同版本的包。'
- en: While this book will provide you with a step-by-step guide to installing the
    necessary packages in every recipe, you are encouraged to visit the NPM documentation
    website at [https://docs.npmjs.com/getting-started/using-a-package.json](https://docs.npmjs.com/getting-started/using-a-package.json)[ ](https://docs.npmjs.com/getting-started/using-a-package.json)to
    learn more.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本书将为您提供逐步指南，以在每个示例中安装必要的软件包，但建议您访问NPM文档网站[https://docs.npmjs.com/getting-started/using-a-package.json](https://docs.npmjs.com/getting-started/using-a-package.json)以获取更多信息。
