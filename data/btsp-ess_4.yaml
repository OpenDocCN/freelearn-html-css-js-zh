- en: Chapter 4. Packaged Components in Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 Bootstrap中的组件包
- en: Components in Bootstrap can be understood as a collection of related HTML elements
    each associated with predefined CSS classes in order to generate a particular
    functionality and UI affect. In the previous chapter, we saw how each HTML element
    is styled by Bootstrap CSS; in this chapter, we will see how a few elements, each
    powered by some CSS classes, together can create a new control and generate a
    full functionality—a new complex component.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的组件可以理解为相关HTML元素的集合，每个元素都与预定义的CSS类相关联，以生成特定的功能性和UI效果。在前一章中，我们看到了每个HTML元素是如何被Bootstrap
    CSS样式的；在这一章中，我们将看到一些元素，每个元素都由一些CSS类提供支持，一起可以创建一个新的控件并生成完整的功能——一个新的复杂组件。
- en: For example, you have always created components in HTML such as navigation bar,
    pagination control, progress bar, alerts, and notifications. Also, you know that
    each of these are actually a collection of a number of HTML elements grouped together.
    Most of the times you have used some third-party libraries, or have built the
    component yourself using lots of HTML, CSS, and JavaScript code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你一直都在HTML中创建组件，如导航栏、分页控件、进度条、警告和通知。你也知道，这些实际上是由许多HTML元素组合而成的集合。大多数时候，你使用了一些第三方库，或者自己使用大量的HTML、CSS和JavaScript代码来构建组件。
- en: Now it is the time to use Bootstrap components that are pretty straightforward,
    simple to use, and most importantly with lesser number of code lines to implement.
    Of course, all are by default mobile friendly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候使用Bootstrap组件了，这些组件非常直观，易于使用，最重要的是，实现起来代码行数更少。当然，所有这些默认都是移动友好的。
- en: 'In this chapter, we will go through some major components packaged and provided
    by Bootstrap framework:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将介绍Bootstrap框架提供的几个主要组件：
- en: Working with Glyphicons
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Glyphicons
- en: Creating the navigation bar
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建导航栏
- en: Designing the badges, toolbars, and button groups
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计徽章、工具栏和按钮组
- en: Showing up alerts and warnings
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示警告和警告信息
- en: Organizing contents with panels and wells
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用面板和井组织内容
- en: Controlling navigation with pagination and breadcrumbs
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用分页和面包屑控制导航
- en: The page header
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面页头
- en: First thing you would want in your page is a good-looking header at the top
    of the page. This is a simple HTML heading wrapped on a `div` element.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你在页面上最想要的是顶部的一个漂亮的页头。这是一个简单的HTML标题，包裹在一个`div`元素中。
- en: 'Here is the code we have used in our application''s home page:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们应用程序主页上使用的代码：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you fancy a message along with the header, you can use the `<small>` element
    inside. For example, have a look at the following code:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢在页头旁边加上一条消息，你可以在其中使用`<small>`元素。例如，看看以下代码：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Glyphicons
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Glyphicons
- en: As per [http://glyphicons.com/](http://glyphicons.com/), the original vendor
    of Glyphicons, "*this is a library of precisely prepared monochromatic icons and
    symbols, created with an emphasis on simplicity and easy orientation*." In simple
    terms, these are icon fonts to depict and symbolize easy and common behaviors
    and contexts. For example, if you want to have a hyperlink for home page, you
    can add an icon depicting this link. Shopping cart has a most common icon; similar
    examples are login button/link or logout button/link.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[Glyphicons的原始供应商](http://glyphicons.com/)，“这是一个精心准备的单一颜色图标和符号库，强调简洁和易于定位。”简单来说，这些都是图标字体，用于表示和象征简单和常见的操作和行为。例如，如果你想为主页添加一个超链接，你可以添加一个表示这个链接的图标。购物车有一个最常见的图标；类似的例子还有登录按钮/链接或注销按钮/链接。
- en: These icons are very common in today's web design, and many a times only icons
    suffice, you may not need to write a text after that. Until now, you will have
    used small icon images for this purpose; however, now we would use Glyphicons
    that are very small in size, quick to render, and efficient in mobile devices
    as well. In addition, they can scale and change color easily, minimizes number
    of HTTP calls because we are replacing image icons by using these.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图标在今天的网页设计中非常常见，很多时候，仅使用图标就足够了，你可能不需要在之后写任何文本。到目前为止，你将使用小图标图像来完成这个目的；然而，现在我们将使用尺寸非常小、渲染速度快、在移动设备上也很高效的Glyphicons。此外，它们可以轻松缩放和更改颜色，通过使用这些图标来替换图像图标，可以最小化HTTP调用次数。
- en: 'In order to use Glyphicons in Bootstrap, you just simply add a `span` element
    with the CSS class that would be appropriate for your icon. For example, have
    a look at the following code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在Bootstrap中使用Glyphicons，你只需简单地添加一个带有适合你图标的CSS类的`span`元素。例如，看看以下代码：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you note that we have used this in our page header on the home page, and
    it has generated the **Home** icon ahead of the page header text. There is a wealth
    of Glyphicons available in Bootstrap library, which are listed at [http://getbootstrap.com/components/#glyphicons](http://getbootstrap.com/components/#glyphicons).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你注意，我们在主页的页面标题中使用了这个图标，并且在页面标题文本之前生成了**主页**图标。Bootstrap库中提供了丰富的Glyphicons，具体列表请见[http://getbootstrap.com/components/#glyphicons](http://getbootstrap.com/components/#glyphicons)。
- en: You might recall that in the folder structure of Bootstrap, there was a `fonts`
    folder—files of this folder are responsible for all functionalities of Glyphicons.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得，在Bootstrap的文件夹结构中有一个`fonts`文件夹——这个文件夹中的文件负责所有Glyphicons的功能。
- en: The navigation bar
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航栏
- en: After the page header, the next important thing is to have a navigation bar
    for the user to browse through different pages of your website.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面标题之后，下一件重要的事情是为用户提供一个导航栏，以便浏览您网站的不同页面。
- en: Our application pages, as of now, do not have a navigation bar. We have though
    two pages in our application—let's have a navigation bar for these.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序页面目前还没有导航栏。我们虽然有两个页面在我们的应用程序中——让我们为这些页面添加一个导航栏。
- en: 'This is a basic and preliminary code for the navigation bar:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这是导航栏的基本和初步代码：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](https://www.packtpub.com/)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](https://www.packtpub.com/books/content/support)
    and register to have the files e-mailed directly to you.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](https://www.packtpub.com/)的账户中下载示例代码文件，以获取您购买的所有Packt
    Publishing书籍。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](https://www.packtpub.com/books/content/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'We include this code in our index page just under the main `div` container.
    This renders as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将此代码包含在我们的索引页中，位于主`div`容器下方。其渲染效果如下：
- en: '![The navigation bar](img/B03987_04_01.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![导航栏](img/B03987_04_01.jpg)'
- en: 'In case of smaller devices such as mobile phones, it would look as shown in
    the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于较小的设备，如手机，其外观如下所示：
- en: '![The navigation bar](img/B03987_04_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![导航栏](img/B03987_04_02.jpg)'
- en: Most important thing to note here is that the navigation menu has automatically
    transformed into the hamburger or sandwich icon, as this being the most popular
    and standard way of displayed menus in mobile devices.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的最重要的事情是，导航菜单已经自动转换为汉堡或三明治图标，因为这是最受欢迎和标准的移动设备显示菜单方式。
- en: Now, let's add a few more interesting features to our navigation bar. For example,
    if you vertically scroll down the home page, the navigation bar disappears at
    the top. We will just add another Bootstrap class to make it fixed at the top.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们给我们的导航栏添加一些更有趣的功能。例如，如果你在主页上垂直滚动，导航栏会在顶部消失。我们将添加另一个Bootstrap类，使其固定在顶部。
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will fix the menu bar at the top of your browser and will always be visible
    to the user even if you have a long page and user scrolls down.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使菜单栏固定在浏览器顶部，并且即使在您有很长的页面并且用户向下滚动时，也会始终对用户可见。
- en: Tip
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'However, you will note that the actual body contents are being overlaid under
    this fixed navigation bar. In order to rectify this, we need to add a certain
    top padding to the `body` element. We have added this in the `body` tag, however,
    it is of course suggested to put this in a CSS class:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您会注意到实际的内容被固定在导航栏下方覆盖。为了纠正这一点，我们需要给`body`元素添加一定的顶部填充。我们已经在`body`标签中添加了这一点，然而，当然建议将其放在CSS类中：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next thing we want to do is to beautify our menu with some icons. For that,
    we will add Glyphicons for each of the menu items, using the following code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要做的是用一些图标美化我们的菜单。为此，我们将为每个菜单项添加Glyphicons，使用以下代码：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We also need a login link in the top menu so that the user can log in/log out
    from the menu itself. We just add another `UL` link in the navigation menu:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在顶部菜单中添加一个登录链接，以便用户可以从菜单本身登录/注销。我们只需在导航菜单中添加另一个`UL`链接：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, a search box to enable users to search for any products from our store
    is as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，一个搜索框，使用户能够搜索我们商店的任何产品，如下所示：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you notice, we have added this search box only for medium- and large-sized
    devices. Here is the final source code of the navigation bar. We have added another
    link (`browse.html`) for a page to display all the products we have in our store.
    We will create this page later. We have also added a link to see the user''s shopping
    cart:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您注意的话，我们只为中等和大型设备添加了这个搜索框。以下是导航栏的最终源代码。我们为显示我们商店中所有产品的页面添加了另一个链接（`browse.html`）。我们将在稍后创建这个页面。我们还添加了一个链接以查看用户的购物车：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is the current look of our navigation bar:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们导航栏的当前外观：
- en: '![The navigation bar](img/B03987_04_03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![导航栏](img/B03987_04_03.jpg)'
- en: Badges
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 徽章
- en: 'Badges are simple indicators to show count of the items you want to highlight.
    Very simple use cases are showing number of unread notifications, e-mails, messages,
    and many more. We will add this in our navigation bar to show the number of items
    in the shopping cart. This is the updated line of code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 徽章是简单的指示器，用于显示您想要突出显示的项目数量。非常简单的用例包括显示未读通知、电子邮件、消息等。我们将在导航栏中添加这个，以显示购物车中的项目数量。这是更新的代码行：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'It looks like in the following way:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来是这样的：
- en: '![Badges](img/B03987_04_04.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![徽章](img/B03987_04_04.jpg)'
- en: As you can see, you just simply add a `span` element with `badge` class, and
    put the text inside in order to highlight it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，您只需简单地添加一个带有 `badge` 类的 `span` 元素，并将文本放在里面以突出显示。
- en: Alerts
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 警告
- en: 'You can use alerts to provide communicative information to the user; for example,
    showing the status of an operation user is trying to do, showing some system information,
    showing user any warning messages, showing any error messages or status, and much
    more. Showing basic alerts is pretty simple—just create a `div` element with the
    `.alert` class in Bootstrap. For example, have a look at the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用警告（alerts）向用户传达沟通信息；例如，显示用户正在尝试进行的操作的状态，显示一些系统信息，显示用户任何警告消息，显示任何错误消息或状态，等等。显示基本警告相当简单——只需在
    Bootstrap 中创建一个带有 `.alert` 类的 `div` 元素。例如，看看以下代码：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can use any of these classes to show contextual information—`alert-info`,
    `alert-warning`, `alert-success`, or `alert-danger`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这些类中的任何一个来显示上下文信息——`alert-info`、`alert-warning`、`alert-success` 或 `alert-danger`。
- en: 'Putting links inside `alert` would require you to add the `.alert-link` in
    the `anchor` tag. This will ensure that the links will also be displayed in the
    corresponding contextual color. As an example, we have added this alert into the
    last section of our home page:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `alert` 中放置链接需要您在 `anchor` 标签中添加 `.alert-link`。这将确保链接也将以相应的上下文颜色显示。例如，我们已将此警告添加到主页的最后部分：
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are some other features offered in the Bootstrap alert module, which we
    will discuss in the next chapter.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 警告模块还提供了一些其他功能，我们将在下一章中讨论。
- en: Toolbars and button groups
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具栏和按钮组
- en: 'For grouping a number of buttons together, we would use the `.btn-group` class.
    This class creates a group of buttons; however, each of these buttons must have
    the `.btn` class associated. For example, use the following code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将多个按钮组合在一起，我们会使用 `.btn-group` 类。这个类创建了一组按钮；然而，这些按钮中的每一个都必须关联有 `.btn` 类。例如，使用以下代码：
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This is what the preceding code will generate:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是前面的代码将生成的内容：
- en: '![Toolbars and button groups](img/B03987_04_05.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![工具栏和按钮组](img/B03987_04_05.jpg)'
- en: 'We can club a number of button groups together to generate a toolbar. Let''s
    be a little innovative and use the Glyphicons in the buttons (instead of button
    text). Here is the code for this:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将多个按钮组合在一起生成工具栏。让我们有点创新，在按钮中使用图标（而不是按钮文本）。以下是这个代码：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This is how our toolbar looks like:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们的工具栏外观：
- en: '![Toolbars and button groups](img/B03987_04_06.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![工具栏和按钮组](img/B03987_04_06.jpg)'
- en: You can also use button groups, toolbars, and dropdowns together to generate
    richer user experience. We will explore those in the next chapter.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将按钮组、工具栏和下拉菜单一起使用，以生成更丰富的用户体验。我们将在下一章中探讨这些内容。
- en: Panels
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 面板
- en: You, of course, want to segregate your web page and contents in to different
    sections and subsections. It is like you see in normal portal frameworks or was
    popularized during the days of iGoogle. We have used this model in our homepage
    also where we had created three different sections—**Latest Additions**, **Most
    Popular Products**, and **You Recently Visited**.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您希望将您的网页和内容分割成不同的部分和子部分。这就像您在普通门户框架中看到的那样，或者像iGoogle时代那样流行。我们也在我们的主页上使用了这种模式，我们创建了三个不同的部分——**最新添加**、**最受欢迎的产品**和**您最近访问过**。
- en: In Bootstrap, panels can be used to create these sections. Panels in Bootstrap
    have two separate placeholders—namely header and body—with classes `.panel-heading`
    and `.panel-body`, respectively.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap中，可以使用面板创建这些部分。Bootstrap中的面板有两个独立的占位符——即标题和主体，分别使用类`.panel-heading`和`.panel-body`。
- en: Just like many other components in Bootstrap, panels also have five different
    modes— `.panel-info`, `.panel-success`, `.panel-primary`, `.panel-warning`, and
    `.panel-danger`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Bootstrap中的许多其他组件一样，面板也有五种不同的模式——`.panel-info`、`.panel-success`、`.panel-primary`、`.panel-warning`和`.panel-danger`。
- en: 'Thus, in our code, we have used:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我们的代码中，我们使用了：
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: It is also advised to use the `.panel-title` class inside `.panel-heading` in
    order to retain pre-styled headings and display contextual colors of hyperlinks.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 还建议在`.panel-heading`内部使用`.panel-title`类，以保留预定义的标题样式并显示超链接的上下文颜色。
- en: 'Similar to the panel heading, you can also use `.panel-footer` to create the
    footer section of the panel. Thus, a full panel code can appear as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与面板标题类似，您也可以使用`.panel-footer`来创建面板的页脚部分。因此，一个完整的面板代码可以如下所示：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: One interesting aspect is to show tables inside a panel. Bootstrap is intelligent
    enough to merge all the paddings and borders and will unify these two controls
    seamlessly.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的方面是展示面板内的表格。Bootstrap足够智能，可以合并所有填充和边框，并将这两个控件无缝统一。
- en: 'Here is the code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output is:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Panels](img/B03987_04_07.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![面板](img/B03987_04_07.jpg)'
- en: As you can see, the table and its borders are seamlessly adjoined with the panel,
    giving a cohesive look and feel.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，表格及其边框与面板无缝连接，给人一种统一的外观和感觉。
- en: Wells
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 井
- en: Wells are almost similar to panels, but with very less features and functionalities.
    This will generate a container element for you so that a group of logically related
    HTML contents can be rendered in that container.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 井几乎与面板相似，但功能更少。这将为您生成一个容器元素，以便可以在该容器中渲染一组逻辑上相关的HTML内容。
- en: 'As an example, just recap our **Contact Us** page, which we created in the
    last chapter. Let''s put this form inside a well. This is how the page looks like
    now:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们回顾一下我们在上一章中创建的**联系我们**页面。让我们把这个表单放在一个井里。这就是现在页面的样子：
- en: '![Wells](img/B03987_04_08.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![井](img/B03987_04_08.jpg)'
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The full source code for the page can be downloaded from [https://www.packtpub.com/](https://www.packtpub.com/).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 页面的完整源代码可以从[https://www.packtpub.com/](https://www.packtpub.com/)下载。
- en: 'Apart from adding the navigation bar, we can also add a new `div` element with
    class `.well` and wrap the **Contact Us** form inside that well:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 除了添加导航栏外，我们还可以添加一个新的具有类`.well`的`div`元素，并将**联系我们**表单包裹在那个井里：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We will now have an entirely different look of our page.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到我们页面的完全不同的外观。
- en: Jumbotron
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 巨幕
- en: 'An interesting addition in Bootstrap is **Jumbotron**. This is a component
    that optionally captures the whole viewport and renders the contents inside. We
    can use this component when we want to showcase some contents, or in some pages
    with very less content but important message to be displayed. One good example
    use of this can be a 404 page:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的一个有趣的新增功能是**巨幕**。这是一个可选地捕获整个视口并在其中渲染内容的组件。当我们想要展示一些内容，或者在有些页面中需要显示重要信息时，我们可以使用这个组件。一个很好的例子是404页面：
- en: '![Jumbotron](img/B03987_04_09.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![巨幕](img/B03987_04_09.jpg)'
- en: 'As you can see, the section has captured full width of the available screen
    space. However, if you don''t want that, here is another variation:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，该部分已捕获可用屏幕空间的全宽。然而，如果您不希望这样，这里还有一个变体：
- en: '![Jumbotron](img/B03987_04_10.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![巨幕](img/B03987_04_10.jpg)'
- en: 'The code is:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The difference between the two variances is only that, in the first case, the
    `jumbotron` code block is placed outside the main container element, and in the
    second case, the code block is placed inside the main container element.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 两个方差之间的区别仅在于，在第一种情况下，`jumbotron`代码块放置在主容器元素外部，而在第二种情况下，代码块放置在主容器元素内部。
- en: Hence, in the first case, it was capturing the full width of the screen, and
    in the second variation, it is rendered as a fixed width view.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在第一种情况下，它捕获了整个屏幕的宽度，而在第二种变化中，它被渲染为一个固定宽度的视图。
- en: Breadcrumbs
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 面包屑导航
- en: 'This is a simple component to generate the breadcrumb in your web page. Just
    add the `.breadcrumb` class in an `OL` element, and all the `LI` elements inside
    it will be rendered as each breadcrumb stage. Here is the code:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的组件，用于在您的网页中生成面包屑导航。只需在 `OL` 元素中添加 `.breadcrumb` 类，它内部的 `LI` 元素将被渲染为每个面包屑阶段。以下是代码：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here is the generated breadcrumb:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是生成的面包屑导航：
- en: '![Breadcrumbs](img/B03987_04_11.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![面包屑导航](img/B03987_04_11.jpg)'
- en: Paginations
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分页导航
- en: 'There are two patterns of pagination controls offered by Bootstrap, shown as
    follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 提供了两种分页控件模式，如下所示：
- en: '![Paginations](img/B03987_04_12.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![分页导航](img/B03987_04_12.jpg)'
- en: 'Here is the code:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是代码：
- en: '[PRE21]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As you can see, both the patterns are simple UL controls with different Bootstrap
    classes.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这两种模式都是简单的无序列表（UL）控件，但使用了不同的 Bootstrap 类。
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw how Bootstrap can be extended by using several CSS classes
    in a group of HTML controls to create different packaged components. By that process,
    we have almost all the commonly used controls that are required to design a flexible
    web page. All these components are built using CSS classes only. In the next chapter,
    we will explore the JavaScript components of Bootstrap.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如何通过在一系列 HTML 控件中使用多个 CSS 类来扩展 Bootstrap，以创建不同的打包组件。通过这个过程，我们几乎拥有了设计灵活网页所需的所有常用控件。所有这些组件都是仅使用
    CSS 类构建的。在下一章中，我们将探索 Bootstrap 的 JavaScript 组件。
