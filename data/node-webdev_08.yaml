- en: Implementing the Mobile-First Paradigm
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 实施移动优先范式
- en: 'Now that our first Express application is usable, we should act on the mantra
    of this age of software development: mobile-first. Mobile devices, whether they
    be smartphones, tablet computers, automobile dashboards, refrigerator doors, or
    bathroom mirrors, are taking over the world.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的第一个Express应用程序可用，我们应该按照这个软件开发时代的口头禅行事：以移动设备为先。无论是智能手机、平板电脑、汽车仪表盘、冰箱门还是浴室镜子，移动设备正在占领世界。
- en: The primary considerations in designing for mobiles are the small screen sizes,
    the touch-oriented interaction, the fact that there's no mouse, and the somewhat
    different **User Interface** (**UI**) expectations. In 1997-8, when streaming
    video was first developed, video producers had to learn how to design video experiences
    for a viewport the size of a fig newton (an American snack food). Today, application
    designers have to contend with an application window the size of a playing card.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在为移动设备设计时，主要考虑因素是小屏幕尺寸、触摸导向的交互、没有鼠标以及略有不同的**用户界面**（**UI**）期望。在1997-8年，当流媒体视频首次开发时，视频制作人员必须学会如何为视口大小与无花果（一种美国零食）大小相当的视频体验设计。今天，应用程序设计师必须应对与一张扑克牌大小相当的应用程序窗口。
- en: With the *Notes* application, our UI needs are modest, and the lack of a mouse
    doesn't make any difference to us.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*Notes*应用程序，我们的UI需求是简单的，而且没有鼠标对我们没有任何影响。
- en: 'In this chapter, we won''t do much Node.js development. Instead, we''ll do
    the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们不会进行太多的Node.js开发。相反，我们将进行以下操作：
- en: Modify the Notes application templates for better mobile presentation.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改Notes应用程序模板以获得更好的移动呈现效果。
- en: Edit Bootstrap SASS files to customize application theming.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑Bootstrap SASS文件以自定义应用程序主题。
- en: Install a third-party Bootstrap theme.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装第三方Bootstrap主题。
- en: Learn about Bootstrap 4.5, a popular framework for responsive UI design.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Bootstrap 4.5，这是一个流行的响应式UI设计框架。
- en: As of the time of writing, Bootstrap v5 has just entered the alpha phase. That
    makes it premature to adopt at this time, but we may wish to do so in the future.
    Going by the migration guide, much of Bootstrap will stay the same, or very similar,
    in version 5\. However, the biggest change in version 5 is the dropping of the
    requirement for jQuery. Because we use jQuery fairly heavily in [Chapter 9](3d687da9-7857-4c79-915b-b5b79873748c.xhtml), *Dynamic
    Client/Server Interaction with Socket.IO*, this is a significant consideration.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 截至撰写本文时，Bootstrap v5刚刚进入alpha阶段。这使得现在采用它为时尚早，但我们可能希望将来这样做。根据迁移指南，Bootstrap的大部分内容在第5版中将保持不变，或者非常相似。然而，第5版中最大的变化是不再需要jQuery。因为我们在[第9章](3d687da9-7857-4c79-915b-b5b79873748c.xhtml)中相当频繁地使用jQuery，这是一个重要的考虑因素，*使用Socket.IO进行动态客户端/服务器交互*。
- en: By completing the tasks in the preceding list, we'll dip our toes in the water
    of what it means to be a full-stack web engineer. The goal of this chapter is
    to gain an introduction to an important part of application development, namely
    the UI, and one of the leading toolkits for web UI development.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过完成前面列表中的任务，我们将初步了解成为全栈Web工程师意味着什么。本章的目标是获得应用程序开发的一个重要部分，即UI的介绍，以及Web UI开发的主要工具包之一。
- en: Rather than just do mobile-first development because it's the popular thing,
    let's first try to understand the problem being solved.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与其仅仅因为它是流行的事物而进行移动优先开发，不如首先尝试理解正在解决的问题。
- en: Understanding the problem – the Notes app isn't mobile-friendly
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解问题-Notes应用程序不适合移动设备
- en: 'Let''s start by quantifying the problem. We need to explore how well (or not)
    the application behaves on a mobile device. This is simple to do:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先量化问题。我们需要探索应用在移动设备上的表现如何（或者不好）。这很容易做到：
- en: Start the *Notes* application. Determine the IP address of the host system.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动*Notes*应用程序。确定主机系统的IP地址。
- en: Using your mobile device, connect to the service using the IP address, and browse
    around the *Notes* application, putting it through its paces and noting any difficulties.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的移动设备，使用IP地址连接到服务，并浏览*Notes*应用程序，对其进行测试并记录任何困难。
- en: Another way to approach this is to use your desktop browser, resizing it to
    be very narrow. The Chrome DevTools also includes a mobile device emulator. Either
    way, you can mimic the small screen size of a smartphone on your desktop.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是使用您的桌面浏览器，将其调整为非常窄。Chrome DevTools还包括移动设备模拟器。无论哪种方式，您都可以在桌面上模拟智能手机的小屏幕尺寸。
- en: 'To see a real UI problem on a mobile screen, edit `views/noteedit.hbs` and
    make this change:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要在移动屏幕上看到真正的UI问题，请编辑`views/noteedit.hbs`并进行以下更改：
- en: '[PRE0]js\1'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]js\1'
- en: The first segment of the stylesheet configures the page layout for all devices.
    Next, for any browser viewport at least `600px` wide, it reconfigures the page
    to display on the larger screen. Then, for any browser viewport at least `960px`
    wide, it is reconfigured again. The stylesheet has a final media query to cover
    print devices.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表的第一部分配置了所有设备的页面布局。接下来，对于任何至少宽度为`600px`的浏览器视口，重新配置页面以在较大屏幕上显示。然后，对于任何至少宽度为`960px`的浏览器视口，再次重新配置。样式表有一个最终的媒体查询来覆盖打印设备。
- en: These widths are what's called a **breakpoint**. Those threshold viewport widths
    are the points where the design changes itself around. You can see breakpoints
    in action by going to any responsive website, then resizing the browser window.
    Watch how the design jumps at certain sizes. Those are the breakpoints chosen
    by the author of that website.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些宽度被称为**断点**。这些阈值视口宽度是设计自身改变的点。您可以通过访问任何响应式网站，然后调整浏览器窗口大小来查看断点的作用。观察设计在特定尺寸处的跳跃。这些是该网站作者选择的断点。
- en: There's a wide range of differing opinions about the best strategy to choose
    your breakpoints. Do you target specific devices or do you target general characteristics?
    The Twenty Twelve theme did fairly well on mobile devices using only two viewport-size media
    queries. The CSS-Tricks blog has posted an extensive list of specific media queries
    for every known device, which is available at [https://css-tricks.com/snippets/css/media-queries-for-standard-devices/](https://css-tricks.com/snippets/css/media-queries-for-standard-devices/).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 关于选择断点的最佳策略有很多不同的意见。您是要针对特定设备还是要针对一般特征？Twenty Twelve主题仅使用两个视口大小媒体查询在移动设备上表现得相当不错。CSS-Tricks博客发布了一个针对每个已知设备的具体媒体查询的广泛列表，可在[https://css-tricks.com/snippets/css/media-queries-for-standard-devices/](https://css-tricks.com/snippets/css/media-queries-for-standard-devices/)上找到。
- en: 'We should at least target these devices:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们至少应该针对这些设备：
- en: '**Small**: This includes iPhone 5 SE.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小**：这包括iPhone 5 SE。'
- en: '**Medium**: This can refer to tablet computers or larger smartphones.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中等**：这可以指平板电脑或更大的智能手机。'
- en: '**Large**: This includes larger tablet computers or smaller desktop computers.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大**：这包括更大的平板电脑或更小的台式电脑。'
- en: '**Extra-large**: This refers to larger desktop computers and other large screens.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特大**：这指的是更大的台式电脑和其他大屏幕。'
- en: '**Landscape/portrait**: You may want to create a distinction between landscape
    mode and portrait mode. Switching between the two of course changes viewport width,
    possibly pushing it past a breakpoint. However, your application may need to behave
    differently in the two modes.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横向/纵向**：您可能希望区分横向模式和纵向模式。在两者之间切换当然会改变视口宽度，可能会将其推过断点。但是，您的应用程序可能需要在这两种模式下表现不同。'
- en: That's enough theory of responsive web design to get us started. In our *Notes*
    application, we'll work on using touch-friendly UI components and using Bootstrap
    to scale the user experience based on screen size. Let's get started.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这就足够让我们开始响应式网页设计的理论。在我们的*Notes*应用程序中，我们将致力于使用触摸友好的UI组件，并使用Bootstrap根据屏幕尺寸调整用户体验。让我们开始吧。
- en: Using Twitter Bootstrap on the Notes application
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Notes应用程序中使用Twitter Bootstrap
- en: Bootstrap is a mobile-first framework consisting of HTML5, CSS3, and JavaScript
    code providing a comprehensive set of world-class, responsive web design components.
    It was developed by engineers at Twitter and then released to the world in August
    2011.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap是一个移动优先的框架，包括HTML5、CSS3和JavaScript代码，提供了一套世界级的响应式网页设计组件。它是由Twitter的工程师开发的，然后于2011年8月发布到世界上。
- en: The framework includes code to retrofit modern features onto older browsers,
    a responsive 12-column grid system, and a long list of components (some using
    JavaScript) for building web applications and websites. It's meant to provide
    a strong foundation on which to build your application.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 该框架包括将现代功能应用于旧浏览器的代码，响应式的12列网格系统，以及用于构建Web应用程序和网站的大量组件（其中一些使用JavaScript）。它旨在为您的应用程序提供坚实的基础。
- en: Refer to [http://getbootstrap.com](http://getbootstrap.com) for more details
    about Bootstrap.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Bootstrap的更多详细信息，请参考[http://getbootstrap.com](http://getbootstrap.com)。
- en: With this introduction to Bootstrap, let's proceed to set it up.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个对Bootstrap的介绍，让我们继续设置它。
- en: Setting up Bootstrap
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Bootstrap
- en: The first step is to duplicate the code you created in the previous chapter.
    If, for example, you created a directory named `chap05/notes`, then create one
    named `chap06/notes` from the content of `chap05/notes`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是复制您在上一章中创建的代码。例如，如果您创建了一个名为`chap05/notes`的目录，那么从`chap05/notes`的内容中创建一个名为`chap06/notes`的目录。
- en: 'Now, we need to go about adding Bootstrap''s code in the *Notes* application.
    The Bootstrap website suggests loading the required CSS and JavaScript files out
    of the Bootstrap (and jQuery) public CDN. While that''s easy to do, we won''t
    do this for two reasons:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要开始在*Notes*应用程序中添加Bootstrap的代码。Bootstrap网站建议从Bootstrap（和jQuery）公共CDN加载所需的CSS和JavaScript文件。虽然这很容易做到，但我们不会这样做，有两个原因：
- en: It violates the principle of keeping all dependencies local to the application
    and not relying on global dependencies.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这违反了将所有依赖项保持本地化到应用程序并且不依赖全局依赖项的原则。
- en: It makes our application dependent on whether the CDN is functioning.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这使我们的应用程序依赖于CDN是否正常运行。
- en: It prevents us from generating a custom theme.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会阻止我们生成自定义主题。
- en: Instead, we'll install a local copy of Bootstrap. There are several ways to
    install Bootstrap locally. For example, the Bootstrap website offers a downloadable
    TAR/GZIP archive (tarball). The better approach is an automated dependency management
    tool, and fortunately, the npm repository has all the packages we need.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们将安装Bootstrap的本地副本。有几种方法可以在本地安装Bootstrap。例如，Bootstrap网站提供可下载的TAR/GZIP存档（tarball）。更好的方法是使用自动化依赖管理工具，幸运的是，npm存储库中有我们需要的所有包。
- en: The most straightforward choice is to use the Bootstrap ([https://www.npmjs.com/package/bootstrap](https://www.npmjs.com/package/bootstrap)),
    Popper.js ([https://www.npmjs.com/package/popper.js](https://www.npmjs.com/package/popper.js)),
    and jQuery ([https://www.npmjs.com/package/jquery](https://www.npmjs.com/package/jquery))
    packages in the npm repository. These packages provide no Node.js modules and
    instead are frontend code distributed through npm. Many frontend libraries are
    distributed through the npm repository.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 最直接的选择是在npm存储库中使用Bootstrap ([https://www.npmjs.com/package/bootstrap](https://www.npmjs.com/package/bootstrap))、Popper.js
    ([https://www.npmjs.com/package/popper.js](https://www.npmjs.com/package/popper.js))和jQuery
    ([https://www.npmjs.com/package/jquery](https://www.npmjs.com/package/jquery))包。这些包不提供Node.js模块，而是通过npm分发的前端代码。许多前端库都是通过npm存储库分发的。
- en: 'We install the packages using the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下命令安装包：
- en: '[PRE1]js\1'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]js\1'
- en: Within each of these directories are the CSS and JavaScript files that are meant
    to be used in the browser. More importantly, these files are located in a given
    directory whose pathname is known—specifically, the directories we just inspected.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个目录中都有用于在浏览器中使用的CSS和JavaScript文件。更重要的是，这些文件位于已知路径名的特定目录中，具体来说，就是我们刚刚检查过的目录。
- en: Let's see how to configure our Notes app to use those three packages on the
    browser side, as well as set up Bootstrap support in the page layout templates.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在浏览器端配置我们的Notes应用程序来使用这三个包，并在页面布局模板中设置Bootstrap支持。
- en: Adding Bootstrap to the Notes application
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将Bootstrap添加到Notes应用程序
- en: In this section, we'll first load Bootstrap CSS and JavaScript in the page layout
    templates, and then we'll ensure that the Bootstrap, jQuery, and Popper packages
    are available to be used. We have made sure those libraries are installed in `node_modules`,
    so we need to make sure Notes knows to serve the files as static assets to web
    browsers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将首先在页面布局模板中加载Bootstrap CSS和JavaScript，然后确保Bootstrap、jQuery和Popper包可供使用。我们已经确保这些库安装在`node_modules`中，因此我们需要确保Notes知道将这些文件作为静态资产提供给Web浏览器。
- en: On the Bootstrap website, they give a recommended HTML structure for pages.
    We'll be interpolating from their recommendation to instead use the local copies
    of Bootstrap, jQuery, and Popper that we just installed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap网站上，他们为页面提供了推荐的HTML结构。我们将从他们的建议中插入，以使用刚刚安装的Bootstrap、jQuery和Popper的本地副本。
- en: Refer to the *Getting Started* page at [https://getbootstrap.com/docs/4.5/getting-started/introduction/](https://getbootstrap.com/docs/4.5/getting-started/introduction/).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[https://getbootstrap.com/docs/4.5/getting-started/introduction/](https://getbootstrap.com/docs/4.5/getting-started/introduction/)的*入门*页面。
- en: 'What we''ll do is modify `views/layout.hbs` to match the template recommended
    by Bootstrap, by making the changes shown in bold text:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将修改`views/layout.hbs`以匹配Bootstrap推荐的模板，通过进行粗体文本中显示的更改：
- en: '[PRE2]js\1'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2]js\1'
- en: We're again using the `express.static` middleware to serve asset files to browsers
    visiting the *Notes* application. Each of these pathnames is where npm installed
    the Bootstrap, jQuery, and Popper libraries.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次使用`express.static`中间件来为访问*Notes*应用程序的浏览器提供资产文件。每个路径名都是npm安装的Bootstrap、jQuery和Popper库的位置。
- en: There is a special consideration for the Popper.js library. In the `popper.js/dist`
    directory, the team distributes a library in the ES6 module syntax. At this time,
    we cannot trust all browsers to support ES6 modules. In `popper.js/dist/umd` is
    a version of the Popper.js library that works in all browsers. We have therefore
    set the directory appropriately.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Popper.js库有一个特殊的考虑。在`popper.js/dist`目录中，团队以ES6模块语法分发了一个库。此时，我们不能相信所有浏览器都支持ES6模块。在`popper.js/dist/umd`中是一个适用于所有浏览器的Popper.js库的版本。因此，我们已经适当地设置了目录。
- en: 'Within the `public` directory, we have a little house-keeping to do. When `express-generator`
    set up the initial project, it generated `public/images`, `public/javascripts`,
    and `public/stylesheets` directories. Hence the URLs for each start with `/images`,
    `/javascripts`, and `/stylesheets`. It''s cleaner to give such files a URL starting
    with the `/assets` directory. To implement that change, start by moving the files
    around as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在`public`目录中，我们需要做一些整理。当`express-generator`设置初始项目时，它生成了`public/images`、`public/javascripts`和`public/stylesheets`目录。因此，每个的URL都以`/images`、`/javascripts`和`/stylesheets`开头。给这些文件一个以`/assets`目录开头的URL更清晰。要实现这个改变，首先要移动文件如下：
- en: '[PRE3]js\1'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE3]js\1'
- en: The onscreen differences are minor, but this is the necessary proof that the
    CSS and JavaScript files for Bootstrap are being loaded. We have accomplished
    the first major goal—using a modern, mobile-friendly framework to implement a
    mobile-first design.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上的差异很小，但这是CSS和JavaScript文件被加载的必要证明。我们已经实现了第一个主要目标——使用现代的、移动友好的框架来实现移动优先设计。
- en: Before going on to modify the look of the application, let's talk about other
    available frameworks.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改应用程序的外观之前，让我们谈谈其他可用的框架。
- en: Alternative layout frameworks
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 替代布局框架
- en: 'Bootstrap isn''t the only JavaScript/CSS framework providing a responsive layout
    and useful components. Of course, all the other frameworks have their own claims
    to fame. As always, it is up to each project team to choose the technologies they
    use, and of course, the marketplace is always changing as new libraries become
    available. We''re using Bootstrap in this project because of its popularity. These
    other frameworks are worthy of a look:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap并不是唯一提供响应式布局和有用组件的JavaScript/CSS框架。当然，所有其他框架都有自己的特点。一如既往，每个项目团队都可以选择他们使用的技术，当然，市场也在不断变化，新的库不断出现。我们在这个项目中使用Bootstrap是因为它很受欢迎。这些其他框架也值得一看：
- en: 'Pure.css ( [https://purecss.io/](https://purecss.io/)): A responsive CSS framework
    with an emphasis on a small code footprint.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pure.css ([https://purecss.io/](https://purecss.io/))：一个强调小代码占用空间的响应式CSS框架。
- en: 'Picnic CSS ([https://picnicss.com/](https://picnicss.com/)): A responsive CSS
    framework emphasizing small size and beauty.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Picnic CSS ([https://picnicss.com/](https://picnicss.com/))：一个强调小尺寸和美观的响应式CSS框架。
- en: 'Bulma ([https://bulma.io/](https://bulma.io/)): A responsive CSS framework
    that''s self-billed as very easy to use.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bulma ([https://bulma.io/](https://bulma.io/))：一个自称非常易于使用的响应式CSS框架。
- en: 'Shoelace ([https://shoelace.style/](https://shoelace.style/)): A CSS framework
    emphasizing using future CSS, meaning it uses CSS constructs at the bleeding edge
    of CSS standardization. Since most browsers don''t support those features, cssnext
    ([http://cssnext.io/](http://cssnext.io/)) is used to retrofit that support. Shoelace
    uses a grid layout system based on Bootstrap''s grid.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shoelace ([https://shoelace.style/](https://shoelace.style/))：一个强调使用未来CSS的CSS框架，意味着它使用CSS标准化的最前沿的CSS构造。由于大多数浏览器不支持这些功能，使用cssnext
    ([http://cssnext.io/](http://cssnext.io/)) 来进行支持。Shoelace使用基于Bootstrap网格的网格布局系统。
- en: 'PaperCSS ([https://www.getpapercss.com/](https://www.getpapercss.com/)): An
    informal CSS framework that looks like it was hand-drawn.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PaperCSS ([https://www.getpapercss.com/](https://www.getpapercss.com/))：一个看起来像手绘的非正式CSS框架。
- en: 'Foundation ([https://foundation.zurb.com/](https://foundation.zurb.com/)):
    Self-described as the most advanced responsive frontend framework in the world.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Foundation ([https://foundation.zurb.com/](https://foundation.zurb.com/))：自称为世界上最先进的响应式前端框架。
- en: 'Base ([http://getbase.org/](http://getbase.org/)): A lightweight modern CSS
    framework.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Base（[http://getbase.org/](http://getbase.org/)）：一个轻量级的现代CSS框架。
- en: HTML5 Boilerplate ([https://html5boilerplate.com/](https://html5boilerplate.com/))
    is an extremely useful basis from which to code the HTML and other assets. It
    contains the current best practices for the HTML code in web pages, as well as
    tools to normalize CSS support and configuration files for several web servers.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate（[https://html5boilerplate.com/](https://html5boilerplate.com/)）是编写HTML和其他资产的极其有用的基础。它包含了网页HTML代码的当前最佳实践，以及用于规范化CSS支持和多个Web服务器的配置文件。
- en: Browser technologies are also improving rapidly, with layout techniques being
    one area. The Flexbox and CSS Grid layout systems are a significant advance in
    making HTML content layout much easier than older techniques.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器技术也在迅速改进，布局技术是其中之一。Flexbox和CSS Grid布局系统在使HTML内容布局比以前的技术更容易方面是一个重大进步。
- en: Flexbox and CSS Grids
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Flexbox和CSS Grids
- en: Two new technologies impacting web application development are these new CSS
    layout methodologies. The CSS3 committee has been working on several fronts, including
    page layout.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种新的CSS布局方法正在影响Web应用程序开发。CSS3委员会一直在多个方面进行工作，包括页面布局。
- en: In the distant past, we used nested HTML tables for page layout. That is a bad
    memory that we don't have to revisit. More recently, we've been using a box model
    using `<div>` elements, and even at times using absolute or relative placement
    techniques. All these techniques have been suboptimal in several ways, some more
    than others.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在遥远的过去，我们使用嵌套的HTML表格进行页面布局。这是一个不愉快的回忆，我们不必再次回顾。最近，我们一直在使用使用`<div>`元素的盒模型，甚至有时使用绝对或相对定位技术。所有这些技术在多种方面都不够理想，有些更甚于其他。
- en: One popular layout technique is to divide the horizontal space into columns
    and assign a certain number of columns to each thing on the page. With some frameworks,
    we can even have nested `<div>` elements, each with their own set of columns.
    Bootstrap 3, and other modern frameworks, used that layout technique.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一个流行的布局技术是将水平空间分成列，并为页面上的每个元素分配一定数量的列。使用一些框架，我们甚至可以有嵌套的`<div>`元素，每个都有自己的列集。Bootstrap
    3和其他现代框架使用了这种布局技术。
- en: The two new CSS layout methodologies, Flexbox ([https://en.wikipedia.org/wiki/CSS_flex-box_layout](https://en.wikipedia.org/wiki/CSS_flex-box_layout))
    and CSS Grids ([https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)),
    are a significant improvement over all previous methodologies. We are mentioning
    these technologies because they're both worthy of attention.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 两种新的CSS布局方法，Flexbox（[https://en.wikipedia.org/wiki/CSS_flex-box_layout](https://en.wikipedia.org/wiki/CSS_flex-box_layout)）和CSS
    Grids（[https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)），是对以往所有方法的重大改进。我们提到这些技术是因为它们都值得关注。
- en: With Bootstrap 4, the Bootstrap team chose to go with Flexbox. Therefore, under
    the hood are Flexbox CSS constructs.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap 4中，Bootstrap团队选择了Flexbox。因此，在底层是Flexbox CSS构造。
- en: Having set up Bootstrap, and having learned some background to responsive web
    design, let's dive right in and start implementing responsive design in *Notes*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置了Bootstrap并学习了一些响应式Web设计的背景之后，让我们立即开始在*Notes*中实现响应式设计。
- en: Mobile-first design for the Notes application
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Notes应用的移动优先设计
- en: 'When we added CSS and JavaScript for Bootstrap et al., that was only the start.
    To implement a responsive mobile-friendly design, we need to modify every template
    to use Bootstrap components. Bootstrap''s features, in version 4.x, are grouped
    into four areas:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们为Bootstrap等添加了CSS和JavaScript时，那只是开始。为了实现响应式的移动友好设计，我们需要修改每个模板以使用Bootstrap组件。Bootstrap的功能在4.x版本中分为四个领域：
- en: '**Layout**: Declarations to control the layout of HTML elements, supporting
    different layouts based on device size'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**布局**：声明来控制HTML元素的布局，支持基于设备尺寸的不同布局'
- en: '**Content**: For regularizing the look of HTML elements, typography, images,
    tables, and more'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容**：用于规范化HTML元素、排版、图片、表格等外观'
- en: '**Components**: A comprehensive set of UI elements including navigation bars,
    buttons, menus, popups, forms, carousels, and more to make it easy to implement
    applications'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件**：包括导航栏、按钮、菜单、弹出窗口、表单、轮播图等全面的UI元素，使应用程序的实现变得更加容易'
- en: '**Utilities**: Additional tools to aid in tweaking the presentation and layout
    of HTML elements'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实用工具**：用于调整HTML元素的呈现和布局的附加工具'
- en: The Bootstrap documentation is full of what we might call *recipes*, to implement
    the structure of HTML elements for certain Bootstrap components or effects. A
    key to the implementation is that Bootstrap effects are triggered by adding the
    correct HTML class declaration to each HTML component.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap文档中充满了我们可以称之为*配方*的内容，用于实现特定Bootstrap组件或效果的HTML元素结构。实现的关键在于，通过向每个HTML组件添加正确的HTML类声明来触发Bootstrap效果。
- en: Let's start with page layout using Bootstrap.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用Bootstrap进行页面布局开始。
- en: Laying the Bootstrap grid foundation
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 奠定Bootstrap网格基础
- en: Bootstrap uses a 12-column grid system to control layout, giving applications
    a responsive mobile-first foundation on which to build. When correctly set up,
    a layout using Bootstrap components can automatically rearrange components for
    different sized screens between extra small up to large desktop computers. The
    method relies on `<div>` elements with classes to describe the role each `<div>`
    plays in the layout.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap使用12列网格系统来控制布局，为应用程序提供了一个响应式的移动优先基础。当正确设置时，使用Bootstrap组件的布局可以自动重新排列组件，以适应从超小屏幕到大型台式电脑的不同尺寸屏幕。该方法依赖于带有类的`<div>`元素来描述布局中每个`<div>`的作用。
- en: 'The basic layout pattern in Bootstrap is as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的基本布局模式如下：
- en: '[PRE4]js\1'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4]js\1'
- en: This declares three different layouts, one for extra-small devices, another
    for medium devices, and the last for large devices.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这声明了三种不同的布局，一种用于超小设备，另一种用于中等设备，最后一种用于大型设备。
- en: The grid system can do a lot more. For details, see the documentation at [https://getbootstrap.com/docs/4.5/layout/overview/](https://getbootstrap.com/docs/4.5/layout/overview/).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 网格系统可以做更多。详情请参阅[https://getbootstrap.com/docs/4.5/layout/overview/](https://getbootstrap.com/docs/4.5/layout/overview/)中的文档。
- en: This introduction gives us enough knowledge to start modifying the *Notes* application.
    Our next task is to better understand the structure of the application pages.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这个介绍给了我们足够的知识来开始修改*Notes*应用程序。我们下一个任务是更好地理解应用程序页面的结构。
- en: Responsive page structure for the Notes application
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*Notes*应用程序的响应式页面结构'
- en: 'We could go through a whole user experience analysis of *Notes*, or get designers
    involved, and get the perfect page design for each screen of the *Notes* application.
    But the current *Notes* application design is the result of a developer coding
    up page designs that are functional and not ugly. Let''s start by discussing the
    logic behind the structure of the page designs we have. Consider the following
    structure:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对*Notes*进行整个用户体验分析，或者让设计师参与，并为*Notes*应用程序的每个屏幕设计完美的页面设计。但是当前*Notes*应用程序的设计是开发人员编写的功能性而不是丑陋的页面设计的结果。让我们从讨论我们拥有的页面设计结构的逻辑开始。考虑以下结构：
- en: '[PRE5]js\1'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE5]js\1'
- en: You can then inspect the downloaded package and see that `./node_modules/feather-icons/dist/feather.js` contains
    browser-side code, making it easy to use the icons.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您可以检查已下载的包，看到`./node_modules/feather-icons/dist/feather.js`包含了浏览器端的代码，使得使用图标变得容易。
- en: 'We make that directory available by mounting it in `app.mjs`, just as we did
    for the Bootstrap and jQuery libraries. Add this code to `app.mjs`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在`app.mjs`中挂载它来使该目录可用，就像我们为Bootstrap和jQuery库所做的那样。将此代码添加到`app.mjs`中：
- en: '[PRE6]js\1'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]js\1'
- en: This loads the browser-side library and then invokes that library to cause the
    icons to be used.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这会加载浏览器端的库，然后调用该库来使用图标。
- en: 'To use one of the icons, use a `data-feather` attribute specifying one of the
    icon names, like so:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用其中一个图标，使用`data-feather`属性指定其中一个图标名称，就像这样：
- en: '[PRE7]js\1'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE7]js\1'
- en: Adding `class="page-header"` informs Bootstrap that this is, well, the page
    header. Within that, we have the `<h1>` header as before, providing the page title,
    and then a responsive Bootstrap `navbar`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 添加`class="page-header"`告诉Bootstrap这是页面标题。在其中，我们有与之前一样的`<h1>`标题，提供页面标题，然后是一个响应式的Bootstrap
    `navbar`。
- en: 'By default, the `navbar` is expanded—meaning the components inside the `navbar`
    are visible—because of the `navbar-expand-md` class. This `navbar` uses a `navbar-toggler`
    button that governs the responsiveness of the `navbar`. By default, this button
    is hidden and the body of the `navbar` is visible. If the screen is small enough,
    the `navbar-toggler` is switched so it''s visible and the body of the `navbar` becomes
    invisible, and when clicking on the now-visible `navbar-toggler`, a menu drops
    down containing the body of the `navbar`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`navbar`是展开的——这意味着`navbar`内部的组件是可见的——因为有`navbar-expand-md`类。这个`navbar`使用一个`navbar-toggler`按钮来控制`navbar`的响应性。默认情况下，这个按钮是隐藏的，`navbar`的主体是可见的。如果屏幕足够小，`navbar-toggler`会切换为可见状态，`navbar`的主体变为不可见，当点击现在可见的`navbar-toggler`时，会弹出一个包含`navbar`主体的菜单：
- en: '![](img/9e463059-e746-40ad-8de7-86722783d8d1.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e463059-e746-40ad-8de7-86722783d8d1.png)'
- en: We chose the Feather Icons' *home* icon because that link goes to the *home
    page*. It's intended that the middle portion of the `navbar` will contain a breadcrumb
    trail as we navigate around the *Notes* application.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了Feather Icons的*home*图标，因为该链接指向*主页*。打算`navbar`的中间部分将包含一个面包屑路径，当我们在*Notes*应用程序中导航时。
- en: The ADD Note button is glued to the right-hand side with a little Flexbox magic.
    The container is a Flexbox, meaning we can use the Bootstrap classes to control
    the space consumed by each item. The breadcrumb area is the blank spot between
    the home icon and the ADD Note button. It is empty in this case, but the `<div>` element
    that would contain it is there and declared with `class="col"`, meaning that it
    takes up a column unit. The ADD Note button is, on the other hand, declared with
    `class="col-auto"`, meaning it takes up only the room required for itself. Therefore,
    the empty breadcrumb area that will expand to fill the available space, while
    the ADD Note button fills only its own space, and is therefore pushed over to
    the side.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 添加笔记按钮与右侧粘合，使用一些Flexbox魔法。容器是Flexbox，这意味着我们可以使用Bootstrap类来控制每个项目所占用的空间。面包屑区域是主页图标和添加笔记按钮之间的空白区域。在这种情况下是空的，但是包含它的`<div>`元素已经声明为`class="col"`，这意味着它占据一个列单位。另一方面，添加笔记按钮声明为`class="col-auto"`，这意味着它只占据自己所需的空间。因此，空的面包屑区域将扩展以填充可用空间，而添加笔记按钮只填充自己的空间，因此被推到一边。
- en: Because it's the same application, the functionality all works; we're simply
    working on the presentation. We've added a few notes but the presentation of the
    list on the front page leaves a lot to be desired. The small size of the title
    is not very touch-friendly since it doesn't present a large target area for a
    fingertip. And can you explain why the `notekey` value has to be displayed on
    the home page? With that in mind, let's move on to fixing up the front page.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它是同一个应用程序，所有功能都能正常工作；我们只是在处理演示。我们已经添加了一些笔记，但是在首页上的列表呈现还有很多需要改进的地方。标题的小尺寸不太适合触摸操作，因为它没有为手指提供一个大的目标区域。你能解释为什么`notekey`值必须显示在主页上吗？考虑到这一点，让我们继续修复首页。
- en: Improving the Notes list on the front page
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在首页改进笔记列表
- en: The current home page has some simple text list that's not terribly touch-friendly,
    and showing the *key* at the front of the line might be inexplicable to the user.
    Let's fix this.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的主页有一些简单的文本列表，不太适合触摸操作，并且在行首显示*key*可能会让用户感到困惑。让我们来修复这个问题。
- en: 'Edit `views/index.hbs` as follows, with the changed lines shown in bold:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式编辑`views/index.hbs`，修改的行用粗体显示：
- en: '[PRE8]js\1'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]js\1'
- en: This removes the `<h1>` tag at the top of the header area, immediately tightening
    up the presentation.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这会移除页眉区域顶部的`<h1>`标签，立即收紧演示。
- en: 'Within the `navbar-collapse` area, we''ve replaced what had been intended as
    the breadcrumb with a simple `navbar-text` component containing the page title.
    To keep the ADD Note button glued to the right, we''re maintaining the `class="col"`
    and `class="col-auto"` settings:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在`navbar-collapse`区域内，我们用一个简单的`navbar-text`组件替换了原本意为面包屑的内容，其中包含页面标题。为了保持“添加笔记”按钮固定在右侧，我们保持了`class="col"`和`class="col-auto"`的设置：
- en: '![](img/f36a31a8-1cbd-4018-a2a6-2ca910157907.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f36a31a8-1cbd-4018-a2a6-2ca910157907.png)'
- en: Which header area design is better? That's a good question. Since beauty is
    in the eye of the beholder, both designs are probably equally good. What we have
    demonstrated is the ease with which we can update the design by editing the template
    files.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 哪种页眉设计更好？这是一个很好的问题。因为美在于观者的眼中，两种设计可能同样好。我们展示的是通过编辑模板文件轻松更新设计的便利性。
- en: Let's now take care of the page for viewing notes.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来处理查看笔记的页面。
- en: Cleaning up the note viewing experience
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理笔记查看体验
- en: Viewing a note isn't bad, but the user experience can be improved. For example,
    the user does not need to see the `notekey`, meaning we might remove that from
    the display. Additionally, Bootstrap has nicer-looking buttons we can use.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 查看笔记并不坏，但用户体验可以得到改善。例如，用户不需要看到`notekey`，这意味着我们可以从显示中删除它。此外，Bootstrap有更漂亮的按钮可以使用。
- en: 'In `views/noteview.hbs`, make these changes:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在`views/noteview.hbs`中进行以下更改：
- en: '[PRE9]js\1'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE9]js\1'
- en: 'There''s a lot going on here. What we''ve done is reorganize the `form` so
    Bootstrap can do the right things with it. The first thing to note is that we
    have several instances of this:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有很多事情要做。我们重新组织了`form`，以便Bootstrap可以对其进行正确处理。首先要注意的是我们有几个这样的实例：
- en: '[PRE10]js\1'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10]js\1'
- en: We've reworked it to use similar Bootstrap form markup. The question about deleting
    the note is wrapped with `class="form-text"` so that Bootstrap can display it
    properly.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重新设计了它，以使用类似的Bootstrap表单标记。关于删除笔记的问题被包裹在`class="form-text"`中，以便Bootstrap可以正确显示它。
- en: 'The buttons are wrapped with `class="btn-group"` as before. The buttons have
    exactly the same styling as on other screens, giving a consistent look across
    the application:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮与以前一样包裹在`class="btn-group"`中。按钮的样式与其他屏幕上完全相同，使应用程序在整体外观上保持一致：
- en: '![](img/8f9abc52-09b0-4df4-b231-afb832a45aee.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f9abc52-09b0-4df4-b231-afb832a45aee.png)'
- en: 'There is an issue in that the title text in the navbar does not use the word
    `Delete`. In `routes/notes.mjs`, we can make this change:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个问题，即导航栏中的标题文本没有使用单词`Delete`。在`routes/notes.mjs`中，我们可以进行这个更改：
- en: '[PRE11]js\1'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11]js\1'
- en: This will automatically download and unpack the Bootstrap source distribution,
    and then the `postdownload` step will run `npm install` to install the dependencies
    declared by the Bootstrap project. This gets the source tree all set up and ready
    to modify and build.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动下载并解压Bootstrap源代码分发包，然后`postdownload`步骤将运行`npm install`来安装Bootstrap项目声明的依赖项。这样就可以设置好源代码树，准备修改和构建。
- en: 'Type this command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE12]js\1'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12]js\1'
- en: Obviously, you'll need to adjust these directory names when a new Bootstrap
    release is issued.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，当发布新的Bootstrap版本时，您需要调整这些目录名称。
- en: In the Bootstrap source tree, running `npm run dist` builds Bootstrap using
    a process recorded in the Bootstrap `package.json` file. Likewise, `npm run watch`
    sets up an automated process to scan for changed files and rebuilds Bootstrap
    upon changing any file. Running `npm run clean` will delete the Bootstrap source
    tree. By adding these lines to our `theme/package.json` file, we can start this
    in the Terminal and we can now rerun the build as needed without having to scratch
    our heads, struggling to remember what to do.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在Bootstrap源代码树中，运行`npm run dist`将使用Bootstrap`package.json`文件中记录的过程构建Bootstrap。同样，`npm
    run watch`设置了一个自动化过程，用于扫描更改的文件并在更改任何文件时重新构建Bootstrap。运行`npm run clean`将删除Bootstrap源代码树。通过将这些行添加到我们的`theme/package.json`文件中，我们可以在终端中启动这个过程，现在我们可以根据需要重新运行构建，而不必绞尽脑汁，努力记住该做什么。
- en: 'To avoid having the Bootstrap source code checked into your Git repository,
    add a `theme/.gitignore` file:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免将Bootstrap源代码检入到Git存储库中，添加一个`theme/.gitignore`文件：
- en: '[PRE13]js\1'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE13]js\1'
- en: The built files land in the `theme/bootstrap-4.5.0/dist` directory. The content
    of that directory will match the contents of the npm package for Bootstrap.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 构建文件位于`theme/bootstrap-4.5.0/dist`目录中。该目录的内容将与Bootstrap的npm包的内容相匹配。
- en: Before proceeding, let's take a look around the Bootstrap source tree. The `scss`
    directory contains the SASS source that will be compiled into the Bootstrap CSS
    files. To generate a customized Bootstrap build will require a few modifications
    in that directory.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们看看Bootstrap源代码树。`scss`目录包含了将被编译成Bootstrap CSS文件的SASS源代码。要生成一个定制的Bootstrap构建，需要在该目录中进行一些修改。
- en: The `bootstrap-4.5.0/scss/bootstrap.scss` file contains `@import` directives
    to pull in all Bootstrap components. The file `bootstrap-4.5.0/scss/_variables.scss` contains
    definitions used in the remainder of the Bootstrap SASS source. Editing or overriding
    these values will change the look of websites using the resulting Bootstrap build.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`bootstrap-4.5.0/scss/bootstrap.scss`文件包含`@import`指令，以引入所有Bootstrap组件。文件`bootstrap-4.5.0/scss/_variables.scss`包含了在其余Bootstrap
    SASS源代码中使用的定义。编辑或覆盖这些值将改变使用生成的Bootstrap构建的网站的外观。'
- en: 'For example, these definitions determine the main color values:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这些定义确定了主要的颜色值：
- en: '[PRE14]js\1'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]js\1'
- en: This reverses the values for the `$body-bg` and `$body-color` settings in `_variables.scss`.
    The Notes app will now use white text on a dark background, rather than the default
    white background with dark text. Because these declarations do not use `!default`,
    they'll override the values in `_variables.scss`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这会颠倒`_variables.scss`中`$body-bg`和`$body-color`设置的值。Notes应用现在将使用黑色背景上的白色文本，而不是默认的白色背景和黑色文本。因为这些声明没有使用`!default`，它们将覆盖`_variables.scss`中的值。
- en: 'Then, make a copy of `scss/bootstrap.scss` in the `theme` directory and modify
    it like so:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在`theme`目录中复制`scss/bootstrap.scss`并进行修改：
- en: '[PRE15]js\1'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE15]js\1'
- en: With these scripts, before building Bootstrap, these two files will be copied
    in place, and afterward, the built files will be copied to a directory named `dist`.
    The `prebuild` step lets us commit our copy of the `_custom.scss` and `bootstrap.scss` files
    into our source repository, while being free to delete the Bootstrap source at
    any time. Likewise, the `postbuild` step lets us commit the custom theme we built
    to the source repository.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些脚本，在构建Bootstrap之前，这两个文件将被复制到指定位置，之后，构建后的文件将被复制到名为`dist`的目录中。`prebuild`步骤让我们可以将`_custom.scss`和`bootstrap.scss`的副本提交到我们的源代码库中，同时可以随时删除Bootstrap源。同样，`postbuild`步骤让我们可以将构建的自定义主题提交到源代码库中。
- en: 'Next, rebuild Bootstrap:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，重新构建Bootstrap：
- en: '[PRE16]js\1'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE16]js\1'
- en: What we've done is switch from the Bootstrap configuration in `node_modules`
    to what we just built in the `theme` directory.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的是从`node_modules`中的Bootstrap配置切换到我们刚在`theme`目录中构建的内容。
- en: Then reload the application, and you'll see the coloring change.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 然后重新加载应用程序，您将看到颜色的变化。
- en: There are two changes required to get this exact presentation. The button elements
    we used earlier have the `btn-outline-dark` class, which works well on a light
    background. Because the background is now dark, these buttons need to use light
    coloring.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得这个确切的演示，需要进行两个更改。我们之前使用的按钮元素具有`btn-outline-dark`类，这在浅色背景上效果很好。因为背景现在是黑色，这些按钮需要使用浅色着色。
- en: 'To change the buttons, in `views/index.hbs`, make this change:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改按钮，在`views/index.hbs`中进行以下更改：
- en: '[PRE17]js\1'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE17]js\1'
- en: That's cool, we can now rework the Bootstrap color scheme any way we want. Don't
    show this to your user experience team, because they'll throw a fit. We did this
    to prove the point that we can edit `_custom.scss` and change the Bootstrap theme.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷，我们现在可以按自己的意愿重新设计Bootstrap的颜色方案。不要向您的用户体验团队展示这一点，因为他们会大发雷霆。我们这样做是为了证明我们可以编辑`_custom.scss`并改变Bootstrap主题。
- en: The next thing to explore is using a pre-built, third-party Bootstrap theme.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要探索的是使用预先构建的第三方Bootstrap主题。
- en: Using third-party custom Bootstrap themes
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用第三方自定义Bootstrap主题
- en: If all this is too complicated for you, several websites provide pre-built Bootstrap
    themes, or else simplified tools to generate a Bootstrap build. To get our feet
    wet, let's download a theme from Bootswatch ([https://bootswatch.com/](https://bootswatch.com/)).
    This is both a collection of free and open source themes and a build system for
    generating custom Bootstrap themes ([https://github.com/thomaspark/bootswatch/](https://github.com/thomaspark/bootswatch/)).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有这些对您来说太复杂了，一些网站提供了预先构建的Bootstrap主题，或者简化的工具来生成Bootstrap构建。让我们先尝试从Bootswatch（[https://bootswatch.com/](https://bootswatch.com/)）下载一个主题。这既是一个免费开源主题的集合，也是一个用于生成自定义Bootstrap主题的构建系统（[https://github.com/thomaspark/bootswatch/](https://github.com/thomaspark/bootswatch/)）。
- en: 'Let''s use the **Minty** theme from Bootswatch to explore the needed changes.
    You can download the theme from the website or add the following to the `scripts`
    section of `package.json`:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Bootswatch的**Minty**主题来探索所需的更改。您可以从网站下载主题，或者将以下内容添加到`package.json`的`scripts`部分：
- en: '[PRE18]js\1'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE18]js\1'
- en: 'In `app.mjs` we will need to change the Bootstrap mounts to separately mount
    the JavaScript and CSS files. Use the following:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app.mjs`中，我们需要更改Bootstrap挂载点，分别挂载JavaScript和CSS文件。使用以下内容：
- en: '[PRE19]js\1'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE19]js\1'
- en: We selected the `text-dark` and `btn-dark` classes to provide some contrast
    against the background.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了`text-dark`和`btn-dark`类来提供一些与背景的对比。
- en: 'Re-run the application and you''ll see something like this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 重新运行应用程序，您将看到类似于这样的东西：
- en: '![](img/bb10d8cb-6641-48f4-a1dd-961043e0e675.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb10d8cb-6641-48f4-a1dd-961043e0e675.png)'
- en: With that, we have completed our exploration of customizing the look and feel
    of a Bootstrap-based application. We can now wrap up the chapter.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们已经完成了对基于Bootstrap的应用程序外观和感觉的定制探索。我们现在可以结束本章了。
- en: Summary
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The possibilities for using Bootstrap are endless. While we covered a lot of
    material, we have only touched the surface, and we could have done much more with
    our *Notes* application. But since our focus in this book is not on the UI, but
    on the backend Node.js code, we purposely limited ourselves to making the application
    work acceptably well on mobile devices.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Bootstrap的可能性是无穷的。虽然我们涵盖了很多内容，但我们只是触及了表面，我们可以在*Notes*应用程序中做更多的事情。但由于本书的重点不是UI，而是后端Node.js代码，我们故意限制了自己，使应用程序在移动设备上能够正常工作。
- en: You learned what the Twitter Bootstrap framework can do by using it to implement
    a simple responsive website design. Even the little changes we made improved the
    way the *Notes* app looks and feels. We also created a customized Bootstrap theme,
    along with using a third-party theme, to explore how easy it is to make a Bootstrap
    build look unique.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用Twitter Bootstrap框架来实现简单的响应式网站设计，您了解了Bootstrap框架的功能。即使我们所做的小改动也改善了*Notes*应用程序的外观和感觉。我们还创建了一个定制的Bootstrap主题，并使用了第三方主题，来探索如何轻松地使Bootstrap构建看起来独特。
- en: Now, we want to get back to writing Node.js code. We left off [Chapter 5](582d3898-0135-430c-8b6e-8326f287e18b.xhtml),
    *Your First Express Application*, with the problem of persistence, where the *Notes*
    application could be stopped and restarted without losing our notes. In [Chapter
    7](ae8529e5-3a08-45cc-89e9-82895eb45641.xhtml), *Data Storage and Retrieval*,
    we'll dive into using several database engines to store our data.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们想要回到编写Node.js代码。我们在[第5章](582d3898-0135-430c-8b6e-8326f287e18b.xhtml)中停下，*你的第一个Express应用程序*，遇到了持久性的问题，*Notes*应用程序可以在不丢失笔记的情况下停止和重新启动。在[第7章](ae8529e5-3a08-45cc-89e9-82895eb45641.xhtml)中，*数据存储和检索*，我们将深入使用几种数据库引擎来存储我们的数据。
