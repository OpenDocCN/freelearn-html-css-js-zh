- en: Journey Ahead
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前路漫漫
- en: In this book, we have covered the foundational concepts, techniques, and resources
    required to build interactive 3D web applications with WebGL 2\. Now that you're
    on your way to becoming a computer graphics expert, the resources in this final
    chapter are dedicated to helping you on that journey.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们已经涵盖了构建使用 WebGL 2 的交互式 3D 网络应用程序所需的基础概念、技术和资源。现在，你正在成为计算机图形专家的道路上，本章的资源专门用于帮助你完成这段旅程。
- en: 'In this concluding chapter, you will do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的结尾，你将执行以下操作：
- en: Cover WebGL libraries of various sizes and capabilities.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 涵盖不同大小和功能的 WebGL 库。
- en: Investigate strategies for testing WebGL applications.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探讨测试 WebGL 应用程序的战略。
- en: Learn about 3D reconstruction.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 3D 重建。
- en: Explore the power of physically-based rendering.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索基于物理的渲染的力量。
- en: Meet various graphics communities.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认识各种图形社区。
- en: WebGL Libraries
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WebGL 库
- en: Before we dive into various WebGL libraries, we should first define what a software
    library is. Although **library** and **framework** are often used interchangeably,
    they refer to *different* concepts in computer science. A software library comprises defined
    code, configuration, documentation, classes, scripts, and more, so that developers
    may include them in their programs to enhance their products. For example, in
    developing a program requiring extensive mathematical operations, a developer
    may include a suitable software library (for example, `glMatrix`) to reduce the
    need for writing those operations themselves.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨各种 WebGL 库之前，我们首先应该定义什么是软件库。尽管 **库** 和 **框架** 经常被互换使用，但在计算机科学中它们指的是 **不同**
    的概念。一个软件库包含定义好的代码、配置、文档、类、脚本等，以便开发者可以将它们包含在自己的程序中，以增强他们的产品。例如，在开发需要大量数学运算的程序时，开发者可以包含一个合适的软件库（例如，`glMatrix`），以减少自己编写这些运算的需求。
- en: That being said, as you may have noticed, we've built our 3D application in
    such a way that the classes, utilities, and overall architecture could, eventually,
    be turned into a library. This process was done intentionally so that we could
    learn concepts in isolation and also write code that could eventually comprise
    a feature-rich WebGL library that can be used by other applications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，正如你可能已经注意到的，我们以这种方式构建了我们的 3D 应用程序，使得类、实用程序和整体架构最终可以被转换成一个库。这个过程是故意为之，这样我们就可以孤立地学习概念，并编写最终可以构成功能丰富的
    WebGL 库的代码，该库可以被其他应用程序使用。
- en: That being said, it's important to know when and where to use libraries, so
    let's cover a few WebGL libraries of various sizes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，了解何时何地使用库是很重要的，所以让我们了解一下不同大小和功能的几个 WebGL 库。
- en: Small Libraries
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小型库
- en: Here are a few examples of small, non-prescriptive WebGL libraries that provide
    many helpers, utilities, and abstraction layers over WebGL's low-level API.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些小型、非规定性的 WebGL 库的例子，它们提供了许多辅助工具、实用程序和 WebGL 低级 API 的抽象层。
- en: TWGL
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TWGL
- en: '**TWGL** ([https://github.com/greggman/twgl.js](https://github.com/greggman/twgl.js))
    is an open-source WebGL library that serves to "*make using the WebGL API less
    verbose*". For example, here''s a simple TWGL demo that shows its intelligible,
    yet low-level, API on top of WebGL:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**TWGL** ([https://github.com/greggman/twgl.js](https://github.com/greggman/twgl.js))
    是一个旨在“使使用 WebGL API 更简洁”的开放源代码 WebGL 库。例如，以下是一个简单的 TWGL 演示，它展示了其易于理解、但低级的 API
    在 WebGL 之上：'
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can see the live demo on their GitHub page, which resembles the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的 GitHub 页面上看到实时演示，它类似于以下内容：
- en: '![](img/c0b4a0d0-7e57-4002-9977-83c5d9d53ad5.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c0b4a0d0-7e57-4002-9977-83c5d9d53ad5.png)'
- en: Regl
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Regl
- en: '**Regl** ([https://github.com/regl-project/regl](https://github.com/regl-project/regl)) is
    an open-source WebGL library with a functional flavor. As its documentation explains,
    Regl "*simplifies WebGL programming by removing as much shared state as it can
    get away with. To do this, it replaces the WebGL API with two fundamental abstractions, **resources**
    and **commands***". Here''s the snippet of code that illustrates the functional
    Regl API:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Regl** ([https://github.com/regl-project/regl](https://github.com/regl-project/regl))
    是一个具有函数式风格的开放源代码 WebGL 库。正如其文档所解释的，Regl 通过“尽可能多地移除共享状态来简化 WebGL 编程”。为此，它用两个基本抽象——**资源**
    和 **命令** 来替换 WebGL API。以下代码片段展示了函数式 Regl API：'
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can see the live demo on their GitHub page, which resembles the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的 GitHub 页面上看到实时演示，它类似于以下内容：
- en: '![](img/c8c1263a-a6bb-49b0-a9b1-d9f466f47869.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8c1263a-a6bb-49b0-a9b1-d9f466f47869.png)'
- en: StackGL
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: StackGL
- en: '**StackGL** ([http://stack.gl](http://stack.gl/)) is an open source WebGL project
    with an interesting approach to building WebGL applications. Instead of being bundled
    as a single library, it''s an ecosystem, comprised of many small, lean modules,
    inspired by the Unix philosophy.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**StackGL** ([http://stack.gl](http://stack.gl/)) 是一个有趣的WebGL应用程序构建方法的开源项目。它不是一个捆绑为单个库的单一库，而是一个由许多小型、精简模块组成的生态系统，灵感来源于Unix哲学。'
- en: 'Unix philosophyThe Unix mindset is a philosophical approach to writing minimalist,
    modular software, often expressed with the mantra "do one thing, and do it well!".
    For more information, please visit the following URL: [https://en.wikipedia.org/wiki/Unix_philosophy](https://en.wikipedia.org/wiki/Unix_philosophy).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Unix哲学Unix思维模式是一种编写简约、模块化软件的哲学方法，通常用口号“只做一件事，做好它！”来表达。更多信息，请访问以下网址：[https://en.wikipedia.org/wiki/Unix_philosophy](https://en.wikipedia.org/wiki/Unix_philosophy)。
- en: Unlike many 3D engines, StackGL emphasizes lean, modular code that is focused
    on writing shader code. That being said, be sure to visit their website, as it
    includes extensive documentation and demos that will help you master this approach.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多3D引擎不同，StackGL强调编写精简、模块化的代码，专注于编写着色器代码。因此，请务必访问他们的网站，因为它包含了广泛的文档和演示，这将帮助您掌握这种方法。
- en: Feature-Rich Libraries
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能丰富的库
- en: While small, lean, and modular WebGL libraries are useful, they may not be enough
    for complex applications. Here are several feature-rich WebGL libraries that offer an
    extensive list of features and capabilities.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然小型、精简和模块化的WebGL库很有用，但它们可能不足以满足复杂应用程序的需求。以下是一些功能丰富的WebGL库，它们提供了一系列的功能和特性。
- en: Three.js
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Three.js
- en: '**Three.js** ([https://github.com/mrdoob/three.js](https://github.com/mrdoob/three.js)) is
    an open source library that powers many of the WebGL applications on the web. It
    aims to create an easy to use, lightweight, 3D library, with multiple renderers that
    target 2D `canvas`, WebGL, SVG, and CSS3D. Here''s a neat demo of a rotating cube,
    showcasing the simplicity of the Three.js API:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Three.js** ([https://github.com/mrdoob/three.js](https://github.com/mrdoob/three.js)) 是一个开源库，为许多网页上的WebGL应用程序提供动力。它旨在创建一个易于使用、轻量级的3D库，具有多个渲染器，针对2D
    `canvas`、WebGL、SVG和CSS3D。以下是一个展示Three.js API简单性的旋转立方体演示：'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can see the live demo on their GitHub page, which resembles the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的GitHub页面上看到实时演示，如下所示：
- en: '![](img/3895b6f4-3ce0-4b9a-bf70-85410f41a675.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3895b6f4-3ce0-4b9a-bf70-85410f41a675.png)'
- en: Babylon.js
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Babylon.js
- en: '**Babylon.js** ([https://github.com/mrdoob/three.js](https://github.com/mrdoob/three.js)) is
    an open source WebGL library that came to fruition inside of Microsoft. It is
    a powerful library that was recently rewritten entirely in TypeScript.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Babylon.js** ([https://github.com/mrdoob/three.js](https://github.com/mrdoob/three.js)) 是一个在微软内部诞生的开源WebGL库。它是一个功能强大的库，最近完全用TypeScript重写。'
- en: TypeScriptTypeScript is an open source language developed by Microsoft. It is
    a powerful language that is a strict syntactical superset of JavaScript and adds
    optional static typing to JavaScript. For more information, visit [https://github.com/Microsoft/TypeScript](https://github.com/Microsoft/TypeScript).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScriptTypeScript是由微软开发的开源语言。它是一种强大的语言，是JavaScript的严格语法超集，并为JavaScript添加了可选的静态类型。更多信息，请访问[https://github.com/Microsoft/TypeScript](https://github.com/Microsoft/TypeScript)。
- en: 'Although choosing Babylon.js doesn''t require using TypeScript, it can be a
    major advantage over other libraries if you or your team prefer the features that
    TypeScript provides. Here''s an interesting JavaScript demo, showcasing the simple
    Babylon.js API:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然选择Babylon.js不需要使用TypeScript，但如果您或您的团队更喜欢TypeScript提供的功能，这可以成为与其他库相比的一个主要优势。以下是一个展示简单Babylon.js
    API的有趣的JavaScript演示：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can see the live demo on their GitHub page, which resembles the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的GitHub页面上看到实时演示，如下所示：
- en: '![](img/1702a52c-6226-4c6a-8df2-fe558719fb60.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1702a52c-6226-4c6a-8df2-fe558719fb60.png)'
- en: A-Frame
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A-Frame
- en: '**A-Frame** ([https://github.com/aframevr/aframe](https://github.com/aframevr/aframe)) is
    an open-source web framework for building virtual reality (VR) experiences. It
    is primarily maintained by Mozilla and the WebVR community. Although other WebGL
    libraries, such as Three.js and Babylon.js, offer VR support, A-Frame was designed
    entirely for building VR applications for the web.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**A-Frame** ([https://github.com/aframevr/aframe](https://github.com/aframevr/aframe)) 是一个用于构建虚拟现实（VR）体验的开源网页框架。它主要由Mozilla和WebVR社区维护。尽管其他WebGL库，如Three.js和Babylon.js，提供了VR支持，但A-Frame完全是为了构建网页上的VR应用程序而设计的。'
- en: '**A-Frame Core** Although A-Frame is an entirely new project, it is built on
    top of the Three.js game engine.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**A-Frame核心** 虽然A-Frame是一个全新的项目，但它建立在Three.js游戏引擎之上。'
- en: 'Here''s a demo showcasing the A-Frame''s declarative API:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个展示A-Frame声明性API的演示：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can see the live demo on their GitHub page, which resembles the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在他们的GitHub页面上看到实时演示，它类似于以下内容：
- en: '![](img/9c40dbc3-8d84-4d5b-b29f-c7637f975221.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9c40dbc3-8d84-4d5b-b29f-c7637f975221.png)'
- en: Game Engines
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏引擎
- en: Another approach to building complex 3D applications is to use an established
    game engine. A game engine is a software development environment designed so that
    people can build complex 3D applications. Although developers use 3D engines to
    create games for consoles, mobile devices, and personal computers, they can also
    be used to build interactive web applications. Two powerful game engines that
    you can use in building complex WebGL applications are Unity and PlayCanvas.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 构建复杂3D应用的另一种方法是使用成熟的游戏引擎。游戏引擎是一个软件开发环境，旨在让人们能够构建复杂的3D应用。尽管开发者使用3D引擎为游戏机、移动设备和个人电脑创建游戏，但它们也可以用来构建交互式Web应用。在构建复杂的WebGL应用时，你可以使用两个强大的游戏引擎：Unity和PlayCanvas。
- en: Unity
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity
- en: '**Unity** ([https://unity3D.com](https://unity3d.com)) is a portable game engine
    developed by Unity Technologies that offers cross-platform capabilities. It was
    first announced and released in June 2005 at the Apple Inc. Worldwide Developers
    Conference as an OS X-exclusive game engine. Over the years, it has become the
    leading game engine for delivering some of the most well-known games across diverse
    platforms. Although Unity prioritizes native over web-based outputs, it does offer
    WebGL support:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unity** ([https://unity3D.com](https://unity3d.com)) 是由Unity Technologies开发的便携式游戏引擎，提供跨平台功能。它最初于2005年6月在苹果公司的全球开发者大会上宣布并发布，作为一款仅限OS
    X的游戏引擎。多年来，它已成为跨平台提供一些最知名游戏的主要游戏引擎。尽管Unity优先考虑原生输出而非基于Web的输出，但它确实提供了WebGL支持：'
- en: '![](img/bb5f5311-2d9d-4f91-ad52-41bdc1e36b2e.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bb5f5311-2d9d-4f91-ad52-41bdc1e36b2e.png)'
- en: PlayCanvas
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PlayCanvas
- en: '**PlayCanvas** ([https://playcanvas.com](https://playcanvas.com/)) is an open source
    3D game engine that also offers a proprietary cloud-hosted creation platform.
    Although other game engines, such as Unity, offer WebGL support, PlayCanvas was
    built from the ground-up for the web. Additionally, PlayCanvas offers a wonderful development
    experience since it has many powerful features, such as a visual workspace, full
    WebGL 2 support, simultaneous editing from multiple computers, and more:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**PlayCanvas** ([https://playcanvas.com](https://playcanvas.com/)) 是一个开源的3D游戏引擎，同时也提供专有云托管创作平台。尽管其他游戏引擎，如Unity，也提供WebGL支持，但PlayCanvas是从头开始为Web构建的。此外，PlayCanvas提供出色的开发体验，因为它拥有许多强大的功能，如可视化工作区、完整的WebGL
    2支持、多台计算机同时编辑等：'
- en: '![](img/452bd9d3-1a44-4fec-9ca8-0b7747c26161.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/452bd9d3-1a44-4fec-9ca8-0b7747c26161.png)'
- en: Testing WebGL 2 Applications
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试WebGL 2应用
- en: If you happened to open your browser's debugger tools throughout this book,
    you may have noticed that the `canvas` you saw was a complete "black box". That
    is, you cannot inspect any of its elements as you could with the DOM elements
    on a web page. If you come from a traditional web-development background, this
    may seem like a big problem, since we're used to leveraging the DOM to help us
    query elements to test our application. So, how can we ensure the quality and
    stability of our WebGL applications?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在这本书中打开了浏览器的调试工具，你可能已经注意到你看到的`canvas`是一个完整的“黑盒”。也就是说，你不能像检查网页上的DOM元素那样检查它的任何元素。如果你来自传统的Web开发背景，这可能会显得像一个大问题，因为我们习惯于利用DOM来帮助我们查询元素以测试我们的应用。那么，我们如何确保我们的WebGL应用的品质和稳定性呢？
- en: Visual Regression Testing
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视觉回归测试
- en: 'Image comparisons of various application states throughout the development
    cycle is a common approach for testing WebGL applications. This technique, often referred to
    as **visual regression testing**, performs front-end or user-interface regression
    testing by capturing the screenshots of web pages/UI and comparing them with the
    original images (either historical baseline screenshots or reference images from
    a live website):'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发周期中，对各种应用状态的图像进行比较是测试WebGL应用的常见方法。这种技术通常被称为**视觉回归测试**，通过捕获网页/UI的屏幕截图并与原始图像（历史基线截图或实时网站的参考图像）进行比较，执行前端或用户界面回归测试：
- en: '![](img/497212fa-0ccd-4cda-9853-6e16eadb74cb.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/497212fa-0ccd-4cda-9853-6e16eadb74cb.png)'
- en: In the previous screenshot, you can see how the Baseline and Change are different
    via the final Diff output. This technique can be an effective approach for ensuring
    that your WebGL application continues to behave as expected.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，您可以看到通过最终的Diff输出，基线和更改是如何不同的。这种技术可以是一个确保您的WebGL应用程序继续按预期行为的有效方法。
- en: Visual Regression Testing ToolsGiven your language of choice, you can find many
    open source visual regression testing tools that fit your technology stack on
    GitHub ([https://github.com/search?q=visual+regression](https://github.com/search?q=visual+regression)).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 可视回归测试工具
- en: Application Introspection Testing
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用内省测试
- en: Another approach is to mimic the DOM API by exposing your WebGL elements via
    a custom API. For example, if we want to query a DOM element by its ID, we would
    do so via `document.getElementById('element-id')`. We could do the same with jQuery's
    simpler API via `$('#element-id')`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是通过自定义API公开你的WebGL元素来模拟DOM API。例如，如果我们想通过ID查询DOM元素，我们会这样做：`document.getElementById('element-id')`。我们也可以通过jQuery的更简单API通过`$('#element-id')`实现同样的操作。
- en: jQueryjQuery is a JavaScript library designed to simplify many of the common
    client-side scripting operations that are available. It is a free, open source
    software that uses the permissive MIT License. For more information, please visit [https://jquery.com](https://jquery.com).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery
- en: 'To see an implementation of this approach, please refer to **Three Musketeers** ([https://github.com/webgl/three-musketeer](https://github.com/webgl/three-musketeer)),
    an open source library, which can be included in *any* Three.js application with
    a single line of code. By including `three-musketeers`, we can run a variety of
    queries on elements in our scene, similar to DOM elements in a web page. Here
    are some sample queries for further illustration:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此方法的实现，请参考**Three Musketeers**（[https://github.com/webgl/three-musketeer](https://github.com/webgl/three-musketeer)），一个开源库，可以将其包含在任何Three.js应用程序中，只需一行代码。通过包含
    `three-musketeers`，我们可以在场景中的元素上运行各种查询，类似于网页中的DOM元素。以下是一些示例查询以供进一步说明：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`$$$` is an alias for a `three-musketeers` instance. The `debug` method enables
    visual debugging mode:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`$$$` 是 `three-musketeers` 实例的别名。`debug` 方法启用可视化调试模式：'
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `find` method searches the scene for an item with the ID of `Cube_1`. By
    calling `exists`, it returns a Boolean on whether it exists:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`find` 方法在场景中搜索具有ID `Cube_1` 的项目。通过调用 `exists`，它返回一个布尔值，表示是否存在：'
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Similar to `find`, `findAll` returns an array of items. In this case, instead
    of searching for a unique ID, we''re looking for all of the geometries that match
    the `BoxGeometry` type:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `find` 类似，`findAll` 返回一个项目数组。在这种情况下，我们不是在搜索一个唯一的ID，而是在寻找所有匹配 `BoxGeometry`
    类型的几何体：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We find the geometry with the unique ID, `Cube_1`, and trigger a mouse click
    event on the *appropriate* coordinates:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们找到具有唯一ID `Cube_1` 的几何体，并在适当的坐标上触发鼠标点击事件：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This is a simple technique that's very helpful for debugging. Every time we
    click in our web page, we log all intersected geometries, given the mouse click's
    2D coordinates mapped onto our 3D scene.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常有助于调试的简单技术。每次我们在网页上点击，我们都会记录所有相交的几何体，给定鼠标点击的2D坐标映射到我们的3D场景中。
- en: For more information, be sure to check out `three-musketeers` on GitHub ([https://github.com/webgl/three-musketeers](https://github.com/webgl/three-musketeers))
    or its documentation ([https://webgl.github.io/three-musketeers](https://webgl.github.io/three-musketeers)).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请务必查看GitHub上的`three-musketeers`（[https://github.com/webgl/three-musketeers](https://github.com/webgl/three-musketeers)）或其文档（[https://webgl.github.io/three-musketeers](https://webgl.github.io/three-musketeers)）。
- en: 3D Reconstruction
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3D重建
- en: 'Throughout this book, we either constructed our own geometries or imported
    models that have been created in 3D modeling tools, such as Maya or Blender. Although
    these are common approaches for building 3D assets, they require manual labor
    to create them. Are there other techniques for getting geometries? Yes, of course!
    **3D reconstruction** is the process of creating 3D models from images. It is
    the reverse process of obtaining 2D images from 3D scenes. Here''s an example
    of a 3D model that has been generated purely from aerial photographs by a technique
    called Photogrammetry:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们要么构建自己的几何形状，要么导入在3D建模工具（如Maya或Blender）中创建的模型。尽管这些是构建3D资产常用的方法，但它们需要人工劳动来创建。有没有其他获取几何形状的技术呢？当然有！**3D重建**是从图像中创建3D模型的过程。这是从3D场景中获得2D图像的逆过程。以下是一个完全通过航空摄影和称为摄影测量的技术生成的3D模型的例子：
- en: '![](img/03ed1032-51a4-43f3-a709-b6e1b15fc530.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/03ed1032-51a4-43f3-a709-b6e1b15fc530.png)'
- en: Photogrammetry
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 摄影测量
- en: Photogrammetry is the science of making spatial measuring from photographs.
    This is a powerful technique for recovering the exact positions of surface points.
    For more information, please visit [https://en.wikipedia.org/wiki/Photogrammetry](https://en.wikipedia.org/wiki/Photogrammetry).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 摄影测量是通过对照片进行空间测量的科学。这是一种强大的技术，可以恢复表面点的精确位置。更多信息，请访问[https://en.wikipedia.org/wiki/Photogrammetry](https://en.wikipedia.org/wiki/Photogrammetry)。
- en: Physically-Based Rendering
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于物理的渲染
- en: 'In [Chapter 3](0dcbfd9d-5446-48e9-90c1-841f4d160232.xhtml), *Lights*, we learned
    how to illuminate our scene by mimicking light. We did so by leveraging various
    shading and light reflection techniques that use two main components: specular
    and diffuse. Although we''ve been modeling materials with specular and diffuse
    in computer graphics for a long time, these techniques produce results that are
    not very realistic. For example, changing the specularity of a material doesn''t
    change the diffuse:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](0dcbfd9d-5446-48e9-90c1-841f4d160232.xhtml)《光线》中，我们学习了如何通过模拟光线来照亮我们的场景。我们通过利用各种着色和光线反射技术来实现，这些技术主要使用两个主要组件：镜面反射和漫反射。尽管我们在计算机图形学中已经使用镜面反射和漫反射来建模材料很长时间了，但这些技术产生的结果并不非常逼真。例如，改变材料的镜面反射率并不会改变漫反射：
- en: '![](img/87673064-c2cb-4076-b77b-ec9b248335fc.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/87673064-c2cb-4076-b77b-ec9b248335fc.png)'
- en: The preceding screenshot demonstrates that changing the two parameters of specular
    intensity and specular hardness only changes the whitish part of the reflection.
    The blue diffuse reflection doesn't change at all—that's not how our physical
    world works! So, in applications aiming for more realistic effects, an artist
    would be tasked with manually tuning these values for each material until it "looked
    right", which is an inefficient method at best. There has to be a better way!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的截图表明，仅改变镜面强度和镜面硬度这两个参数只会改变反射的白色部分。蓝色的漫反射根本不会改变——这并不是我们物理世界的运作方式！因此，在追求更逼真效果的应用中，艺术家将负责手动调整每个材料的这些值，直到它“看起来正确”，这充其量是一种低效的方法。必须有一种更好的方法！
- en: 'Enter **Physically-Based Rendering** (**PBR**), an approach to validate our
    material descriptions in the more objective, measurable, and scientific properties of
    real surfaces. One of the most apparent properties is the conservation of energy:
    a rougher surface will scatter light diffusely, while a smoother/more metallic
    surface will reflect light more directly, even though it''s the same pool of light
    they are both drawn from. So, with all things being equal, the rule follows that
    as materials become shinier, the diffuse component should darken:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 进入**基于物理的渲染**（**PBR**），这是一种通过更客观、可测量和科学的真实表面属性来验证我们的材料描述的方法。最明显的属性之一是能量守恒：粗糙的表面会漫反射光线，而更光滑/更金属的表面会直接反射光线，尽管它们都是从同一个光源中反射出来的。因此，在所有条件相同的情况下，规则遵循着随着材料变得越亮，漫反射成分应该越暗：
- en: '![](img/afb0dd66-850e-4184-9567-0de0c84ea098.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/afb0dd66-850e-4184-9567-0de0c84ea098.png)'
- en: Of course, there's more to physically-based rendering than energy conservation;
    however, this is a clear example that demonstrates the properties of a physically-based
    system. By keeping the reflection models similar to the way materials work in
    real life, we reduce the need for subjective manual tuning and produce real-world
    materials that look realistic under a variety of light conditions.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，基于物理的渲染不仅仅是能量守恒；然而，这是一个清楚地展示基于物理系统特性的例子。通过保持反射模型与材料在现实生活中的工作方式相似，我们减少了主观手动调整的需求，并产生了在各种光照条件下看起来逼真的真实世界材料。
- en: Communities
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区
- en: 'Computer graphics is a vast landscape of complex, beautiful, and inspiring
    concepts. One of the best ways to learn, share, and inspire others is to involve
    yourself in communities dedicated to this discipline. Here is a non-exhaustive
    list of some of the most popular communities:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机图形学是一个充满复杂、美丽和启发性的概念领域。参与致力于这一学科的社区是学习、分享和启发他人的最佳方式之一。以下是一些最受欢迎的社区的非详尽列表：
- en: '**Chrome** **Experiments** ([https://experiments.withgoogle.com](https://experiments.withgoogle.com/)) is
    an online showroom of web browser-based experiments, interactive programs, and
    artistic projects.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Chrome Experiments** ([https://experiments.withgoogle.com](https://experiments.withgoogle.com/))
    是一个基于网络浏览器的实验、互动程序和艺术项目的在线展示厅。'
- en: '**WebGL.com (**[https://WebGL.com](https://webgl.com/)) is the leading community
    for WebGL developers and comprises demos, tutorials, news, and more.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WebGL.com** ([https://WebGL.com](https://webgl.com/)) 是 WebGL 开发者的领先社区，包括演示、教程、新闻等。'
- en: '**SketchFab **([https://sketchfab.com](https://sketchfab.com/)) is a platform to
    publish, share, discover, buy, and sell 3D, VR, and AR content. It provides a
    viewer based on the WebGL and WebVR technologies that allows users to display
    3D models on the web.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SketchFab** ([https://sketchfab.com](https://sketchfab.com/)) 是一个发布、分享、发现、购买和销售
    3D、VR 和 AR 内容的平台。它提供了一个基于 WebGL 和 WebVR 技术的查看器，允许用户在网页上显示 3D 模型。'
- en: '**ShaderToy **([https://www.shadertoy.com](https://www.shadertoy.com/)) is
    a cross-browser online community and tool for creating and sharing shaders through
    WebGL, used both for learning and teaching 3D computer graphics in a web browser.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ShaderToy** ([https://www.shadertoy.com](https://www.shadertoy.com/)) 是一个跨浏览器的在线社区和工具，用于通过
    WebGL 创建和分享着色器，用于在网页浏览器中学习和教授 3D 计算机图形学。'
- en: '**CGTrader **([https://www.cgtrader.com/3D-models](https://www.cgtrader.com/3d-models)) is
    an online platform that allows designers and modeling studios to upload and either
    sell or share their 3D models with their community.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CGTrader** ([https://www.cgtrader.com/3D-models](https://www.cgtrader.com/3d-models))
    是一个在线平台，允许设计师和建模工作室上传他们的 3D 模型，并与社区分享或出售。'
- en: '**TurboSquid **([https://www.turbosquid.com](https://www.turbosquid.com/)) is
    a digital media company that sells stock 3D models used in 3D graphics to a variety
    of industries, including computer games, architecture, and interactive training.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TurboSquid** ([https://www.turbosquid.com](https://www.turbosquid.com/))
    是一家数字媒体公司，向包括计算机游戏、建筑和交互式培训在内的多个行业销售用于 3D 图形的库存 3D 模型。'
- en: '**Poly **([https://poly.google.com](https://poly.google.com/)) is a website that
    was created by Google for users to browse, distribute, and download 3D objects.
    It features a free library containing thousands of 3D objects that can be used
    in virtual reality and augmented reality applications.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Poly** ([https://poly.google.com](https://poly.google.com/)) 是由 Google 创建的一个网站，用户可以浏览、分发和下载
    3D 对象。它包含一个免费库，包含数千个可用于虚拟现实和增强现实应用的 3D 对象。'
- en: Summary
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Thank you for taking the time to read this book. By covering a wide range of
    topics—such as rendering, shaders, 3D math, lighting, cameras, textures, and many
    more—and guiding you in building compelling 3D applications, we hope that it has
    accomplished its goal of helping you learn interactive 3D computer graphics with
    WebGL 2.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您花时间阅读这本书。通过涵盖广泛的主题——如渲染、着色器、3D 数学、光照、相机、纹理等——并指导您构建引人入胜的 3D 应用程序，我们希望它已经实现了帮助您使用
    WebGL 2 学习交互式 3D 计算机图形学的目标。
- en: “Stories don't end," he says. "They just turn into new beginnings."
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: “故事不会结束，”他说，“它们只是变成了新的开始。”
- en: – Lindsay Eagar, Hour of the Bees
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: – Lindsay Eagar，《蜜蜂时刻》
- en: With that in mind, please be sure to stay in touch and share your work—we look
    forward to seeing what you build! If you have any questions or feedback, please
    refer to the preface of this book for contact details.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，请确保保持联系并分享您的工作——我们期待看到您所构建的内容！如果您有任何问题或反馈，请参阅本书的序言以获取联系方式。
