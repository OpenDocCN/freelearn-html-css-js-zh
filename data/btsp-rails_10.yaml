- en: Chapter 10. Creating a Shopping Cart Using Bootstrap Modals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章：使用 Bootstrap 模态框创建购物车
- en: This chapter is all about implementing what we have learned so far in Bootstrap.
    We won't be learning anything new here, but this chapter will definitely clear
    some of the core concepts such as using Bootstrap modal, typography, buttons,
    and responsive tables.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要讲解如何将我们迄今为止在 Bootstrap 中学到的知识付诸实践。在这里，我们不会学习任何新的内容，但这一章将肯定有助于澄清一些核心概念，例如使用
    Bootstrap 模态框、排版、按钮和响应式表格。
- en: In this chapter, we will create a JavaScript modal that will serve as a shopping
    cart in our Shopping application. This cart will have all the features needed
    for any shopping website. For demo purposes, we will be displaying only static
    data in our shopping cart.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建一个 JavaScript 模态框，它将作为我们的购物应用程序中的购物车使用。这个购物车将具备任何购物网站所需的所有功能。为了演示目的，我们将在购物车中只显示静态数据。
- en: 'In a nutshell, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们将涵盖以下主题：
- en: Adding a shopping cart symbol
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加购物车符号
- en: Creating a shopping cart using modals
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模态框创建购物车
- en: Adding a shopping cart symbol
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加购物车符号
- en: Before proceeding to create a shopping cart in our application, we need a handle
    which when clicked on, will display the shopping cart. For our application, I
    will add a Glyphicon font icon to display an icon in the current navigation bar
    of our application. So, let's proceed and make this tweak.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建我们的应用程序中的购物车之前，我们需要一个处理程序，当点击时，将显示购物车。对于我们的应用程序，我将在当前导航栏中添加一个 Glyphicon 字体图标来显示一个图标。所以，让我们继续并做出这个调整。
- en: 'Navigate to **app** | **views** | **layouts** and edit the `application.html.erb`
    file. Just in front case of the `<li>` element of **Home** , add another `<li>`
    element with the Glyphicon icon of the shopping cart, as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到 **app** | **views** | **layouts** 并编辑 `application.html.erb` 文件。在 **Home**
    的 `<li>` 元素之前，添加另一个带有 Glyphicon 购物车图标的 `<li>` 元素，如下所示：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Remember, Glyphicons are font images provided by Bootstrap, by default, in its
    repository.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，Glyphicons 是 Bootstrap 默认在其仓库中提供的字体图像。
- en: 'Open the browser and check for the shopping cart symbol in the navigation bar.
    It should look like the one shown in the following screenshot:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器并检查导航栏中的购物车符号。它应该看起来像以下截图所示：
- en: '![Adding a shopping cart symbol](img/3167_10_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![添加购物车符号](img/3167_10_01.jpg)'
- en: 'We will add a number beside the shopping cart icon to indicate the number of
    products added to the shopping cart. We will use Bootstrap''s badges for this.
    Adding a `<span>` element with the class `.badge` will create a beautiful number
    indicator:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在购物车图标旁边添加一个数字，以指示添加到购物车中的产品数量。我们将使用 Bootstrap 的徽章来实现这一点。添加一个具有 `.badge`
    类的 `<span>` 元素将创建一个漂亮的数字指示器：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should have a number indicator in the navigation bar, as shown in the following
    screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在导航栏中有一个数字指示器，如下面的截图所示：
- en: '![Adding a shopping cart symbol](img/3167_10_02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![添加购物车符号](img/3167_10_02.jpg)'
- en: 'Let''s also add the custom data attributes needed to trigger a modal in this
    shopping cart link. As stated in the earlier chapter, we need two custom attributes
    to create a modal handle: `data-target` and `data-toggle`. So, let''s add these
    attributes to our shopping cart link:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再添加一些自定义数据属性，以触发这个购物车链接中的模态框。如前一章所述，我们需要两个自定义属性来创建模态框处理程序：`data-target` 和
    `data-toggle`。所以，让我们将这些属性添加到我们的购物车链接中：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, the value provided to data-target is `#shoppingCart`. Hence, we will use
    `shoppingCart` as the ID of the modal that we will create in the next section.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，提供给 data-target 的值是 `#shoppingCart`。因此，我们将使用 `shoppingCart` 作为下一节中我们将创建的模态框的
    ID。
- en: Now, we are ready with a shopping cart icon that will trigger our shopping cart
    modal when clicked. This icon also represents the number of items present inside
    the shopping cart. Impressive! Isn't it?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好了一个购物车图标，当点击时将触发购物车模态框。这个图标也代表了购物车内部物品的数量。令人印象深刻！不是吗？
- en: Creating a shopping cart using modals
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模态框创建购物车
- en: As stated earlier in this book, to create a Bootstrap modal, we need a `<div>`
    element with the `.modal` class. We will also add the `.fade` class to apply the
    fading transition. It is the only transition animation provided by Bootstrap.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如本书前面所述，要创建一个 Bootstrap 模态框，我们需要一个具有 `.modal` 类的 `<div>` 元素。我们还将添加 `.fade` 类以应用淡入淡出过渡效果。这是
    Bootstrap 提供的唯一过渡动画。
- en: 'At end of the `application.html.erb` file, add the markup for the modal, as
    follows:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `application.html.erb` 文件的末尾，添加模态框的标记，如下所示：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'One of the most important things to note here, is that we have two modals in
    this page. To uniquely identify each one of them, we should give different IDs
    to them. In this case, we already have an ID with us, which is `shoppingCart`.
    So, let''s add it to our markup:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里需要注意的最重要的事情之一是，我们在这个页面上有两个模态框。为了唯一标识它们中的每一个，我们应该给它们不同的ID。在这种情况下，我们已经有了一个ID，即`shoppingCart`。所以，让我们将其添加到我们的标记中：
- en: '[PRE4]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, we need to place a markup for a modal dialog and modal content:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要放置一个模态对话框和模态内容的标记：
- en: '[PRE5]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Compared to the modal created in the earlier chapter, we are using a larger
    modal here, with the help of the `.modal-lg` class.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与前面章节中创建的模态框相比，我们在这里使用了一个更大的模态框，这是通过`.modal-lg`类实现的。
- en: 'Now, we will add a header to our modal. This header will contain the title
    **Your Cart** with another text that will indicate the number of items present
    in the shopping cart:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将为我们的模态框添加一个标题。这个标题将包含**您的购物车**的标题，以及另一个指示购物车中物品数量的文本：
- en: '[PRE6]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Place the preceding content inside the `.modal-content` element. The `<p>` element
    is floated towards the right using the class .pull-right and colored dark blue
    using the `.text-primary` utility class. It is used to represent the number of
    items present inside the shopping cart. The title **Your Cart** is written using
    the `<h4>` element with the `.modal-title` and `.text-primary` class (to add a
    blue color to the text). We also have an icon of a shopping cart present inside
    the title, created using the Glyphicon icon. If you trigger this modal by clicking
    on the shopping cart icon you will see something like the following:![Creating
    a shopping cart using modals](img/3167_10_03.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将前面的内容放置在`.modal-content`元素内。使用`.pull-right`类将`<p>`元素浮动到右边，并使用`.text-primary`实用类将其染成深蓝色。它用于表示购物车中物品的数量。**您的购物车**标题使用带有`.modal-title`和`.text-primary`类的`<h4>`元素编写（以给文本添加蓝色），我们还在标题中包含了一个购物车的图标，该图标是使用Glyphicon图标创建的。如果您通过点击购物车图标触发此模态，您将看到如下内容：![使用模态框创建购物车](img/3167_10_03.jpg)
- en: 'Let''s proceed to create the body part of the modal. Perform the following
    steps to create the body of the modal:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始创建模态框的主体部分。按照以下步骤创建模态框的主体：
- en: Add .modal-header;. to the following markup, as the sibling of the
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`.modal-header;`添加到以下标记中，作为其兄弟元素。
- en: '[PRE7]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We will insert a Bootstrap table that will hold the actual item details:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将插入一个Bootstrap表格，该表格将包含实际的项目详情：
- en: '[PRE8]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s create multiple columns inside this table:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在表格内创建多个列：
- en: '[PRE9]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We have columns for **Serial no**, **Item Name**, **Unit Price**, **Quantity
    Ordered**, and **Price of the item**. We also have an extra column without a heading
    that will contain a link to remove a particular item row from the table.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们有**序列号**、**项目名称**、**单价**、**订购数量**和**项目价格**的列。我们还有一个没有标题的额外列，其中将包含一个链接，用于从表中删除特定的项目行。
- en: 'Let''s fill up the first row:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们填写第一行：
- en: '[PRE10]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: For the quantity field, I have used an input field with the `.form-control`
    class to give a Bootstrap look and feel to it. I have also applied a CSS width
    of `50px` to it. In the last column, I have added a text link called **remove**
    with the `.btn`, `.btn-danger`, and `.btn-sm` class. The`.btn-danger` class makes
    the button red, while the `.btn-sm` class is used to reduce the size of the normal
    Bootstrap button. Try filling up some more items in the table. Finally, you will
    get a modal that looks like the one shown in the following screenshot:![Creating
    a shopping cart using modals](img/3167_10_04.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于数量字段，我使用了一个带有`.form-control`类的输入字段，以给它一个Bootstrap的外观和感觉。我还给它应用了一个CSS宽度为`50px`。在最后一列中，我添加了一个名为**删除**的文本链接，带有`.btn`、`.btn-danger`和`.btn-sm`类。`.btn-danger`类使按钮变红，而`.btn-sm`类用于减小正常Bootstrap按钮的大小。尝试在表格中填写更多项目。最后，您将得到一个如下截图所示的模态框：![使用模态框创建购物车](img/3167_10_04.jpg)
- en: 'We are now left with the last row that will display the total sum of the items.
    Let''s proceed and add that too:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们只剩下最后一行，将显示物品的总计。让我们继续并添加它：
- en: '[PRE11]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Instead of adding all the columns, I have merged the first four columns by
    using the `colspan` attribute here. In the last column, I have changed the text
    of the button to **clear all**. One of the most important changes here are the
    classes .active and .lead added to the row. The .active class highlights the row
    using a grey-colored background, whereas the .lead class increases the font size
    of the text. The modal should now look like the following:'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我没有添加所有列，而是通过在这里使用 `colspan` 属性合并了前四列。在最后一列，我将按钮的文本更改为**清除所有**。这里最重要的变化之一是添加到行的
    `.active` 和 `.lead` 类。`.active` 类使用灰色背景突出显示行，而 `.lead` 类增加了文本的字体大小。现在模态框应该看起来像以下这样：
- en: '![Creating a shopping cart using modals](img/3167_10_05.jpg)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![使用模态框创建购物车](img/3167_10_05.jpg)'
- en: 'We will now add two different buttons at the end of the modal: **Continue Shopping**
    and **Checkout**:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将在模态框的末尾添加两个不同的按钮：**继续购物**和**结账**：
- en: '[PRE12]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The first button is pulled towards the right using the .`pull-right` utility
    class. The **Continue Shopping** button uses the `data-dismiss` attribute to close
    the modal and to let the user continue using the website.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一个按钮是通过使用 `.pull-right` 工具类向右拉动的。**继续购物**按钮使用 `data-dismiss` 属性来关闭模态框，并允许用户继续使用网站。
- en: Finally, our Shopping cart design is complete. It should now look like the one
    shown in the following screenshot:![Creating a shopping cart using modals](img/3167_10_06.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们的购物车设计完成了。现在它应该看起来像下面截图所示：![使用模态框创建购物车](img/3167_10_06.jpg)
- en: Summary
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: I hope you enjoyed reading this chapter. Through this chapter, we tried to design
    a dummy shopping cart using Bootstrap and its components. We saw how to use Bootstrap
    tables inside Bootstrap modals, and how to make use of Bootstrap's utility classes.
    We have also seen how to use free font icons, Glyphicons, to create shopping cart
    icons inside a navigation bar.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢阅读这一章。通过这一章，我们尝试使用 Bootstrap 和其组件设计一个模拟购物车。我们看到了如何在 Bootstrap 模态框中使用 Bootstrap
    表格，以及如何利用 Bootstrap 的工具类。我们还看到了如何使用免费字体图标，Glyphicons，在导航栏中创建购物车图标。
- en: In the next chapter, we are going to learn one of the most important topics,
    *Customizing Bootstrap*. Be prepared and join me soon.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习一个非常重要的主题，*自定义 Bootstrap*。做好准备，很快我会和你一起学习。
