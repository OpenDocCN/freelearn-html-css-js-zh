- en: Theming the App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用主题
- en: 'In this chapter, we will cover the following tasks related to app theme customization:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍与应用主题自定义相关的以下任务：
- en: Viewing and debugging themes for a specific platform
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看和调试特定平台的主题
- en: Customizing themes based on the platform
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据平台自定义主题
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'Although Ionic has its own out-of-the-box default themes, you might want to
    customize your app''s look and feel even further. There are several methods, as
    follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Ionic自带一些默认主题，但你可能还想进一步自定义应用的外观和感觉。有以下几种方法：
- en: Changing the style sheet within the Sass file
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Sass 文件中更改样式表
- en: Detecting platform-specific types (iOS, Android, Windows) in JavaScript and
    applying custom classes or AngularJS conditions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 JavaScript 中检测特定平台的数据类型（iOS、Android、Windows）并应用自定义类或 AngularJS 条件
- en: Either of the preceding two methods should work, but it's highly recommended
    to apply customization in a Sass file before the app is built, in order to achieve
    maximum rendering performance.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两种方法中的任何一种都应该有效，但强烈建议在构建应用之前，在 Sass 文件中应用自定义，以实现最佳渲染性能。
- en: Viewing and debugging themes for a specific platform
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看和调试特定平台的主题
- en: One of the biggest challenges in developing an app is ensuring that it has the
    desired look and feel for each platform. Specifically, you want to write the code
    and theme once and have it just work. Another challenge is figuring out the workflow
    on a daily basis, from writing code and previewing it in the browser to deploying
    to a device for testing purposes. You want to minimize a lot of unnecessary steps.
    It's certainly difficult if you have to rebuild the app and test it independently
    for each mobile platform.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发应用时最大的挑战之一是确保每个平台都有期望的外观和感觉。具体来说，你希望编写一次代码和主题，就能在所有平台上正常工作。另一个挑战是每天都要确定工作流程，从编写代码并在浏览器中预览到将应用部署到设备进行测试。你希望尽量减少不必要的步骤。如果你必须为每个移动平台独立重建应用并测试，这无疑是非常困难的。
- en: Ionic CLI provides seamless integration to improve your workflow to ensure that
    you can *catch* all the issues for each platform ahead of time. You can quickly
    view the app on various platforms in the same browser window. This feature is
    powerful because now you can make a side-by-side comparison for each screen with
    specific interaction. If you want to debug JavaScript code, you employ the same
    web developer tool that you have been using in the browser. This capability will
    save you a lot of time instead of waiting to push the app to a physical device,
    which could take minutes if your app is getting larger.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic CLI 提供了无缝集成，以改善你的工作流程，确保你可以提前 *捕捉* 到每个平台的所有问题。你可以在同一个浏览器窗口中快速查看各种平台的应用。这个功能非常强大，因为现在你可以对每个屏幕进行并排比较，并具有特定的交互。如果你想调试
    JavaScript 代码，你可以使用在浏览器中一直使用的相同网页开发者工具。这种能力将为你节省大量时间，而不是等待将应用推送到物理设备，如果你的应用变得更大，这可能需要几分钟。
- en: In this example, you will learn how to modify a theme quickly using Sass variables.
    Then, you will run the app and inspect different platforms for UI consistency.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，你将学习如何使用 Sass 变量快速修改主题。然后，你将运行应用并检查不同平台的 UI 一致性。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: There is no need to test the theme on a physical device because Ionic can render
    iOS, Android, and Windows phone in the browser.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要在物理设备上测试主题，因为 Ionic 可以在浏览器中渲染 iOS、Android 和 Windows Phone。
- en: How to do it...
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here are the instructions:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是操作步骤：
- en: 'Create a new app using the `tutorial` template, as shown, and go to the folder:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用如图所示的 `tutorial` 模板创建一个新的应用，然后进入文件夹：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In Ionic 1, you need to set up Sass dependencies because Ionic uses a number
    of external libraries for this. However, Ionic has no such requirements because
    all the dependencies are added when you create the project.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ionic 1 中，你需要设置 Sass 依赖项，因为 Ionic 使用了大量的外部库。然而，Ionic 没有这样的要求，因为所有依赖项都是在创建项目时添加的。
- en: 'Open the `.../src/theme/variable.scss` file, and replace the `$colors` variable
    with the following commands:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `.../src/theme/variable.scss` 文件，并用以下命令替换 `$colors` 变量：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The default color codes can be commented out, as shown in the preceding code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 默认颜色代码可以像前面代码中那样注释掉。
- en: 'Open `app.html` and add the `clear` attribute to the following code block:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `app.html` 文件，并将 `clear` 属性添加到以下代码块中：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Open the `./src/pages/hello-ionic/hello-ionic.html` file and replace the contents
    with the given code:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `./src/pages/hello-ionic/hello-ionic.html` 文件，并用给定的代码替换其内容：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Test run the app in the browser, and you should be able to see a screen, as
    follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中测试运行应用，你应该能看到一个屏幕，如下所示：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `-l` (lima) command means to render the app for all three platforms.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`-l`（lima）命令表示为所有三个平台渲染应用。'
- en: '![](img/b5ee73f8-bbbd-40b5-a934-5068f44a4359.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b5ee73f8-bbbd-40b5-a934-5068f44a4359.png)'
- en: How it works...
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Ionic has made it very easy to develop and test themes for different platforms.
    Your typical flow is to modify the theme variable in `variables.scss` first. You
    should not modify any `.css` files directly. Also, the Ionic project now makes
    it safe so that you can't accidentally edit the wrong core theme files, because
    those core files are no longer in the app folder location.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 使得为不同平台开发和使用测试主题变得非常容易。你的典型流程是首先修改 `variables.scss` 中的主题变量。你不应该直接修改任何
    `.css` 文件。此外，Ionic 项目现在确保你不会意外地编辑错误的核心理念文件，因为这些核心文件不再位于应用文件夹位置。
- en: 'To update the default color, you just have to modify the color code in `variables.scss`.
    You can even add more color names, such as `clear: white`, and Ionic will automatically
    take care of the rest. That means the `clear` keyword is available as a value-to-color
    attribute on any Ionic element that accepts the color attribute. A few examples
    are as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '要更新默认颜色，你只需修改 `variables.scss` 中的颜色代码即可。你甚至可以添加更多颜色名称，例如 `clear: white`，Ionic
    会自动处理其余部分。这意味着 `clear` 关键字可以作为值到颜色的属性在任何接受颜色属性的 Ionic 元素上使用。以下是一些示例：'
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The Ionic CLI is a very useful tool for debugging your theme in different platforms.
    To get help on how to use the Ionic CLI, you can type the following command line
    in the console:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic CLI 是一个非常有用的工具，可以帮助你在不同平台上调试主题。要获取有关如何使用 Ionic CLI 的帮助，你可以在控制台中输入以下命令行：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will list all the options available for you to choose from. Under the
    `serve` option, you should familiarize yourself with some of the important features,
    which are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将列出所有可用的选项供你选择。在 `serve` 选项下，你应该熟悉一些重要功能，如下所示：
- en: '| **Parameters** | **Description** |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **参数** | **描述** |'
- en: '| `--consolelogs&#124;-c` | Prints app console logs to Ionic CLI |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `--consolelogs|-c` | 将应用控制台日志打印到 Ionic CLI |'
- en: '| `--serverlogs&#124;-s` | Prints dev server logs to Ionic CLI |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `--serverlogs|-s` | 将开发服务器日志打印到 Ionic CLI |'
- en: '| `--browser&#124;-w` | Specifies the browser to use (Safari, Firefox, and
    Chrome) |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `--browser|-w` | 指定要使用的浏览器（Safari、Firefox 和 Chrome） |'
- en: '| `--browseroption&#124;-o` | Specifies a path to open to (`/#/tab/dash`) |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `--browseroption|-o` | 指定要打开的路径（`/#/tab/dash`） |'
- en: '| `--lab&#124;-l` | Tests your apps on multiple screen sizes and platform types
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `--lab|-l` | 在多个屏幕尺寸和平台类型上测试你的应用 |'
- en: There's more...
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can get more color palettes by visiting Matheus Cruz Rocha's cloned repository
    at [https://github.com/innovieco/ionic-flat-colors](https://github.com/innovieco/ionic-flat-colors).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问 Matheus Cruz Rocha 的克隆存储库来获取更多调色板：[https://github.com/innovieco/ionic-flat-colors](https://github.com/innovieco/ionic-flat-colors)。
- en: Customizing themes based on the platform
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据平台定制主题
- en: Each mobile platform vendor has its own design guideline. This section will
    go over an example of a typical workflow to develop, view, debug, and address
    the app theme differently for iOS, Android, and Windows phone. In traditional
    development (using either the native language or other hybrid app solutions),
    you have to keep separate repositories for each platform in order to customize
    the theme. This could be very inefficient in the long run.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 每个移动平台供应商都有自己的设计指南。本节将介绍一个典型的开发、查看、调试和针对 iOS、Android 和 Windows 手机应用主题的不同工作流程的示例。在传统开发（使用本地语言或其他混合应用解决方案）中，你必须为每个平台维护单独的存储库以定制主题。从长远来看，这可能会非常低效。
- en: Ionic has many built-in features to support theme changes based on the detected
    platform. It makes it very convenient by separating Sass variables for each platform.
    This will eliminate a lot of unnecessary customizations. As a developer, you'd
    rather focus on the app experience than spend time managing the platform.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 有许多内置功能来支持基于检测到的平台进行主题更改。通过为每个平台分离 Sass 变量，它使得操作非常方便。这将消除许多不必要的定制。作为开发者，你更愿意专注于应用体验而不是花时间管理平台。
- en: 'The example in this section covers two possible customizations using Sass and
    JavaScript. The following screenshot shows an iOS, Android, and Windows app with
    a different title bar color and text:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的示例涵盖了使用 Sass 和 JavaScript 的两种可能的定制。以下截图显示了具有不同标题栏颜色和文本的 iOS、Android 和 Windows
    应用：
- en: '![](img/a452685c-07c6-4a67-a1cc-6b44947c9e93.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a452685c-07c6-4a67-a1cc-6b44947c9e93.png)'
- en: Getting ready
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: There is no need to test themes on a physical device because Ionic can render
    all three platforms in the browser.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要在物理设备上测试主题，因为 Ionic 可以在浏览器中渲染所有三个平台。
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Here are the instructions:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是说明：
- en: 'Create a new app using the `blank` template and go into the project folder:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `blank` 模板创建一个新应用，并进入项目文件夹：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Open the `./src/app/app.module.ts` file and replace the entire body with
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `./src/app/app.module.ts` 文件，将整个主体替换为
- en: 'the following:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This example expands the use of Ionic Bootstrap, which will be discussed now.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子扩展了 Ionic Bootstrap 的使用，现在将进行讨论。
- en: 'Open `./src/pages/home/home.ts` and replace the code with the following:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `./src/pages/home/home.ts` 并将代码替换为以下：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Open the `./src/pages/home/home.html` file and change the template to:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `./src/pages/home/home.html` 文件，将模板更改为：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is the only template for the app, but its UI will look different depending
    on the detected platform.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是应用唯一的模板，但它的 UI 将根据检测到的平台而有所不同。
- en: 'Replace `./src/pages/home/home.scss` with the following style sheet:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `./src/pages/home/home.scss` 替换为以下样式表：
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There is no need to change the global variables. Thus, you only modify the styles
    for one page. The purpose is to demonstrate the ability to customize for each
    platform.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要更改全局变量。因此，你只需修改一个页面的样式。目的是展示为每个平台定制的功能。
- en: 'Test-run the app in the browser using the following command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在浏览器中测试运行应用：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Ionic automatically created platform-specific parent classes and put them at
    the `<body>` tag. The iOS app will include the `.ios` class. The Android app will
    have the `.md` class. So, for style sheet customization, you can leverage those
    existing classes to change the look and feel of your app.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 自动创建了平台特定的父类，并将它们放在 `<body>` 标签中。iOS 应用将包含 `.ios` 类。Android 应用将包含 `.md`
    类。因此，对于样式表定制，你可以利用这些现有的类来改变应用的外观和感觉。
- en: Ionic documentation has a list of all platform modes and configuration properties
    at [http://ionicframework.com/docs/v2/theming/platform-specific-styles/](http://ionicframework.com/docs/v2/theming/platform-specific-styles/).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ionic 文档在 [http://ionicframework.com/docs/v2/theming/platform-specific-styles/](http://ionicframework.com/docs/v2/theming/platform-specific-styles/)
    列出了所有平台模式和配置属性。
- en: '| **Platform** | **Mode** | **Details** |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| **平台** | **模式** | **详情** |'
- en: '| iPhone/iPad/iPad | ios | The iOS style is used across all Apple products
    |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| iPhone/iPad/iPad | ios | iOS 样式用于所有苹果产品 |'
- en: '| Android | md | md means **Material Design** as this is the default design
    for Android devices |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| Android | md | md 代表 **Material Design**，因为这是 Android 设备的默认设计 |'
- en: '| Windows Phone | wp | Viewing on any Windows device inside Cordova or Electron
    uses the Windows styles |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| Windows Phone | wp | 在 Cordova 或 Electron 内的任何 Windows 设备上查看都使用 Windows 样式
    |'
- en: '| Core | md | Material Design is the default for all others |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 核心 | md | 对于所有其他平台，默认为 Material Design |'
- en: 'First, let''s take a look at the Ionic Bootstrap class from Ionic Angular.
    You declared this in the `app.module.ts` file:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看来自 Ionic Angular 的 Ionic Bootstrap 类。你在 `app.module.ts` 文件中声明了它：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This statement basically instructs the app to bootstrap with the `MyApp` object.
    The second parameter is where you can inject your customized configuration properties.
    There is a list of all config properties at [http://ionicframework.com/docs/v2/api/config/Config/](http://ionicframework.com/docs/v2/api/config/Config/).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这条语句基本上指示应用使用 `MyApp` 对象进行引导。第二个参数是你可以注入自定义配置属性的地方。所有配置属性列表在 [http://ionicframework.com/docs/v2/api/config/Config/](http://ionicframework.com/docs/v2/api/config/Config/)。
- en: One main thing to point out here is `iconMode`. Icons are very different for
    each platform in Ionic. The entire Ionicons set is now separated by the platform
    name. There are three platforms according to Ionic's documentation page, at [http://ionicframework.com/docs/v2/ionicons/](http://ionicframework.com/docs/v2/ionicons/).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这里要指出的一点是 `iconMode`。在 Ionic 中，每个平台的图标都大不相同。整个 Ionicons 集现在都根据平台名称分开。根据 Ionic
    的文档页面，有三个平台，分别是 [http://ionicframework.com/docs/v2/ionicons/](http://ionicframework.com/docs/v2/ionicons/)。
- en: 'You can even search for the icon name using the Search Ionicons buttons, as
    follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以使用搜索 Ionicons 按钮，如下所示搜索图标名称：
- en: '![](img/8f302a71-c31d-404d-83e7-b3e0fb892b16.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f302a71-c31d-404d-83e7-b3e0fb892b16.png)'
- en: 'Note that you don''t need to worry about which icon to pick for which platform.
    Even though in this example, the code forces you to choose the iOS icon for all
    three platforms, you could just use the icon name and let Ionic decide which icon
    to use:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你不需要担心为哪个平台选择哪个图标。尽管在这个例子中，代码强制你为所有三个平台选择 iOS 图标，但你只需使用图标名称，让 Ionic 决定使用哪个图标：
- en: '![](img/a0ef9f2c-3314-4974-8d0c-310c8eb6ed66.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0ef9f2c-3314-4974-8d0c-310c8eb6ed66.png)'
- en: 'For example, when you state the icon name as `"add"`, Ionic will use `"md-add"`
    if the user is using Android, as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当你指定图标名称为 `"add"` 时，如果用户正在使用 Android，Ionic 将使用 `"md-add"`，如下所示：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'There are several ways to theme your app based on the platform. First, you
    could add variables to detect the current platform, as in the `HomePage` class,
    as illustrated:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方式可以根据平台为主题化你的应用。首先，你可以在 `HomePage` 类中添加变量来检测当前的平台，如下所示：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`this.platform = platform` is what Ionic provides. If you open up the browser
    console while running the app, you can inspect the `platform` object:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`this.platform = platform` 是 Ionic 提供的。如果你在运行应用时打开浏览器控制台，你可以检查 `platform` 对象：'
- en: '![](img/3d6b6bd0-0422-42ac-9be1-274699e104c6.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d6b6bd0-0422-42ac-9be1-274699e104c6.png)'
- en: This `platform` object has a rich amount of information. This is similar to
    `ionic.platform` in Ionic 1\. However, it has been restructured significantly.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 `platform` 对象包含大量的信息。这类似于 Ionic 1 中的 `ionic.platform`。然而，它已经进行了重大重构。
- en: 'By making the platform variables available to the view, you can use it to hide
    or show a specific DOM using `ngIf`. It''s recommended to use `ngIf` instead of
    `ngShow`, because `ngShow` may show and hide the element right away, creating
    a *flickering* effect. The following is the code in the template relating to using
    those platform variables:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将平台变量提供给视图，你可以使用它来通过 `ngIf` 隐藏或显示特定的 DOM。建议使用 `ngIf` 而不是 `ngShow`，因为 `ngShow`
    可能会立即显示和隐藏元素，从而产生 *闪烁* 效果。以下是与使用这些平台变量相关的模板中的代码：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Finally, you could change the theme using platform classes directly. Consider
    the following example:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以直接使用平台类来更改主题。考虑以下示例：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This means that, whenever it's a material design mode (`.md` class), you will
    override the classes with your own styles. The preceding example shows an interesting
    CSS gradient, which works very nicely in mobile devices.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，每当它是材料设计模式（`.md` 类）时，你将用自己的样式覆盖这些类。前面的例子展示了一个有趣的 CSS 渐变，它在移动设备上工作得非常好。
- en: There's more...
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Further device information is available from the `Platform` class. You can even
    detect iPad devices at [http://ionicframework.com/docs/v2/api/platform/Platform/](http://ionicframework.com/docs/v2/api/platform/Platform/).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的设备信息可以通过 `Platform` 类获得。你甚至可以在 [http://ionicframework.com/docs/v2/api/platform/Platform/](http://ionicframework.com/docs/v2/api/platform/Platform/)
    检测到 iPad 设备。
