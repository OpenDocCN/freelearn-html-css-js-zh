- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: What is Nest.js?
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Nest.js？
- en: There are so many available web frameworks, and with the advent of Node.js,
    even more have been released. JavaScript frameworks go in and out of style very
    quickly as web technologies change and grow. Nest.js is a good starting point
    for many developers that are looking to use a modern web framework because it
    uses a language that is very similar to that of the most used language on the
    web to this day, JavaScript. Many developers were taught programming using languages
    such as Java or C/C++, which are both strict languages, so using JavaScript can
    be a little awkward and easy to make mistakes given the lack of type safety. Nest.js
    uses TypeScript, which is a happy medium. It is a language that provides the simplicity
    and power of JavaScript with the type safety of other languages you may be used
    to. The type safety in Nest.js is only available at compile time, because the
    Nest.js server is compiled to a Node.js Express server that runs JavaScript. This
    is still a major advantage, however, since it allows you to better design programs
    error free prior to runtime.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多可用的Web框架，随着Node.js的出现，发布的框架更是层出不穷。随着Web技术的变化和发展，JavaScript框架很快就会进入和退出流行。Nest.js对许多开发人员来说是一个很好的起点，因为它使用一种非常类似于迄今为止最常用的Web语言JavaScript的语言。许多开发人员是使用诸如Java或C/C++之类的语言来学习编程的，这两种语言都是严格的语言，因此使用JavaScript可能会有点尴尬，并且由于缺乏类型安全性，容易出错。Nest.js使用TypeScript，这是一个很好的折衷方案。它是一种语言，提供了JavaScript的简单性和强大性，同时又具有您可能习惯的其他语言的类型安全性。Nest.js中的类型安全性仅在编译时可用，因为Nest.js服务器被编译为运行JavaScript的Node.js
    Express服务器。然而，这仍然是一个重大优势，因为它允许您在运行时之前更好地设计无错误的程序。
- en: 'Node.js has a rich ecosystem of packages in NPM (Node Package Manager). With
    over 350,000 packages, it’s the world’s largest package registry. With Nest.js
    making use of Express, you have access to each and every one of these packages
    when developing Nest applications. Many even have type definitions for their packages
    that allow IDE’s to read the package and make suggestions/auto fill in code that
    may not be possible when crossing JavaScript code with TypeScript code. One of
    the largest benefits of Node.js is the huge repository of modules that are available
    to pull from instead of having to write your own. Nest.js includes some of these
    modules already as part of the Nest platform, like `@nestjs/mongoose`, which uses
    the NPM library `mongoose`. Prior to 2009, JavaScript was mainly a front-end language,
    but after the release of Node.js in 2009, it spurred the development of many JavaScript
    and TypeScript projects like: Angular, React, and Vue, among others. Angular was
    a heavy inspiration for the development of Nest.js because both use a Module/Component
    system that allows for reusability. If you are not familiar with Angular, it is
    a TypeScript-based front-end framework that can be used cross-platform to develop
    responsive web apps and native apps, and it functions a lot like Nest does. The
    two also pair very well together with Nest providing the ability to run a Universal
    server to serve pre-rendered Angular web pages to speed up website delivering
    times using Server-Side Rendering (SSR) mentioned above.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js在NPM（Node Package Manager）中拥有丰富的软件包生态系统。拥有超过35万个软件包，它是世界上最大的软件包注册表。使用Express的Nest.js在开发Nest应用程序时，您可以访问每一个这些软件包。许多软件包甚至为其软件包提供了类型定义，允许IDE读取软件包并提供建议/自动填充代码，这在跨JavaScript代码与TypeScript代码交叉时可能是不可能的。Node.js最大的好处之一是可以从中提取模块的庞大存储库，而不必编写自己的模块。Nest.js已经将其中一些模块包括在Nest平台的一部分中，比如`@nestjs/mongoose`，它使用NPM库`mongoose`。在2009年之前，JavaScript主要是一种前端语言，但在2009年Node.js发布之后，它推动了许多JavaScript和TypeScript项目的开发，如：Angular、React等。Angular对Nest.js的开发产生了很大的启发，因为两者都使用了允许可重用的模块/组件系统。如果您不熟悉Angular，它是一个基于TypeScript的前端框架，可用于跨平台开发响应式Web应用程序和原生应用程序，并且它的功能与Nest非常相似。两者在一起也非常搭配，Nest提供了运行通用服务器的能力，以提供预渲染的Angular网页，以加快网站交付时间，使用了上面提到的服务器端渲染（SSR）。
- en: About the example
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于示例
- en: This book will reference a working Nest.js project that is hosted on GitHub
    at (https://github.com/backstopmedia/nest-book-example). Throughout the book,
    code snippets and chapters will reference parts of the code so that you can see
    a working example of what you are learning about. The example Git repository can
    be cloned within your command prompt.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将引用一个托管在GitHub上的Nest.js项目的示例（https://github.com/backstopmedia/nest-book-example）。在整本书中，代码片段和章节将引用代码的部分，以便您可以看到您所学习的内容的一个工作示例。示例Git存储库可以在命令提示符中克隆。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will create a local copy of the project on your computer, which you can
    run locally by building the project with Docker:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的计算机上创建项目的本地副本，您可以通过使用Docker构建项目在本地运行：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once your Docker container is up and running on port localhost:3000, you will
    want to run the migration before doing anything else. To do this run:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的Docker容器在本地主机：3000端口上运行起来，您将希望在做任何其他事情之前运行迁移。要做到这一点，请运行：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To get the ID of your running Docker container:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 获取正在运行的Docker容器的ID：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This will run the database migrations so that your Nest.js app can read and
    write to the database with the correct schema.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行数据库迁移，以便您的Nest.js应用程序可以使用正确的模式读取和写入数据库。
- en: 'If you don’t want to use Docker, or cannot use Docker, you can build the project
    with your choice of package managers such as `npm` or `yarn`:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想使用Docker，或者无法使用Docker，您可以使用您选择的软件包管理器（如`npm`或`yarn`）构建项目：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: or
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 或
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This installs the dependencies in your `node_modules` folder. Then run:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的`node_modules`文件夹中安装依赖项。然后运行：
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Or the following to start your Nest.js server:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 或以下内容启动您的Nest.js服务器：
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These will run `nodemon`, which will cause your Nest.js application to restart
    if any changes are made, saving you from having to stop, rebuild, and start your
    application again.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些将运行`nodemon`，如果有任何更改，将导致您的Nest.js应用程序重新启动，使您无需停止、重建和重新启动应用程序。
- en: About the authors
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于作者
- en: '**Greg Magolan** is a Senior Architect, Full-Stack Engineer, and Angular Consultant
    at Rangle.io. He has been developing enterprise software solutions for over 15
    years working for companies suchas Agilent Technologies, Electronic Arts, Avigilon,
    Energy Transfer Partners, FunnelEnvy, Yodel andACM Facility Safety.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格雷格·马戈兰（Greg Magolan）是Rangle.io的高级架构师、全栈工程师和Angular顾问。他在Agilent Technologies、Electronic
    Arts、Avigilon、Energy Transfer Partners、FunnelEnvy、Yodel和ACM Facility Safety等公司工作了15年以上，开发企业软件解决方案。
- en: '**Jay Bell** is the CTO of Trellis. He is a Senior Angular developer that uses
    Nest.js in production to develop industry leading software to help non-profits
    and charities in Canada. He is a serial entrepreneur that has developed software
    in a large range of industries from helping combat wildfires with drones to building
    mobile apps.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杰伊·贝尔（Jay Bell）是Trellis的首席技术官。他是一名资深的Angular开发人员，使用Nest.js在生产中开发领先行业的软件，帮助加拿大的非营利组织和慈善机构。他是一位连续创业者，曾在许多行业开发软件，从利用无人机帮助打击森林大火到构建移动应用程序。
- en: '**David Guijarro** is a Front-End Developer at Car2go Group GmbH. He has a
    wide experience working within the JavaScript ecosystem. He has successfully built
    and led multi-cultural, multi-functional teams.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大卫·吉哈罗（David Guijarro）是Car2go Group GmbH的前端开发人员。他在JavaScript生态系统内有丰富的工作经验，成功建立并领导了多元文化、多功能团队。
- en: '**Adrien de Peretti** is a Full-Stack JavaScript Developer. He is passionate
    about new technologies and is constantly looking for new challenges, and is especially
    interested in the field of Artificial Intelligence and Robotics. When he is not
    front of his computer, Adrien is in nature and playing different sports.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阿德里安·德佩雷蒂（Adrien de Peretti）是一名全栈JavaScript开发人员。他对新技术充满热情，不断寻找新挑战，特别对人工智能和机器人领域感兴趣。当他不在电脑前时，阿德里安喜欢在大自然中玩各种运动。
- en: '**Patrick Housley** is a Lead Technologist at VML. He is an IT professional
    with over six years of experience in the technology industry and is capable of
    analyzing complex issues spanning multiple technologies while providing detailed
    resolutions and explanations. He has strong front-end development skills with
    experience leading development teams in maintenance and greenfield projects.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帕特里克·豪斯利（Patrick Housley）是VML的首席技术专家。他是一名拥有超过六年技术行业经验的IT专业人士，能够分析涉及多种技术的复杂问题，并提供详细的解决方案和解释。他具有强大的前端开发技能，有领导开发团队进行维护和新项目开发的经验。
