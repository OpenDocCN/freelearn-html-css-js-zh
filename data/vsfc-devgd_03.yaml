- en: Chapter 3. Visualforce and Standard Web Development Technologies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章. Visualforce和标准Web开发技术
- en: The combination of native Visualforce markup and standard web development technologies
    can be used to build rich UIs for Force.com applications. However HTML rendering
    of Visualforce is complicated and there are many ways to change Visualforce's
    generated default HTML by using additional resources such as CSS and JavaScript.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通过结合本地的Visualforce标记和标准Web开发技术，可以用于构建Force.com应用程序的丰富UI。然而，Visualforce的HTML渲染比较复杂，并且有多种方式可以通过使用额外的资源如CSS和JavaScript来改变Visualforce生成的默认HTML。
- en: 'This chapter teaches how to develop Visualforce pages with standard web development
    technologies such as CSS, JavaScript, jQuery, and HTML5\. The usage of static
    resources for CSS, JavaScript, and jQuery are also included in the chapter. The
    following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讲解如何使用CSS、JavaScript、jQuery和HTML5等标准Web开发技术来开发Visualforce页面。本章还包括了CSS、JavaScript和jQuery静态资源的用法。以下主题将在本章中介绍：
- en: Styling Visualforce pages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 样式化Visualforce页面
- en: Using JavaScript in Visualforce pages
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Visualforce页面中使用JavaScript
- en: Using jQuery in Visualforce pages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Visualforce页面中使用jQuery
- en: HTML5 and Visualforce pages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML5和Visualforce页面
- en: Let's build rich user interfaces.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建丰富的用户界面。
- en: Styling Visualforce pages
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样式化Visualforce页面
- en: We use Visualforce pages to accomplish both simple UI requirements and sophisticated
    UI requirements. In the case of implementing sophisticated scenarios, we cannot
    meet such requirements by using only Salesforce's standard styles. We can customize
    the look and feel of a Visualforce page by using our own stylesheets or styles.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用Visualforce页面来完成简单的UI需求和复杂的UI需求。在实现复杂场景的情况下，仅使用Salesforce的标准样式无法满足这些需求。我们可以通过使用自己的样式表或样式来自定义Visualforce页面的外观和感觉。
- en: 'Many standard Visualforce components have the `style` and/or `styleClass` attribute.
    We can use either of these attributes to customize the page by using CSS. This
    allows us to change the default style (width, height, color, and font) of components.
    There are two types of styles in Visualforce, which are as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 许多标准Visualforce组件都有`style`和/或`styleClass`属性。我们可以使用这两个属性之一通过CSS来定制页面，这允许我们更改组件的默认样式（宽度、高度、颜色和字体）。Visualforce中有两种样式类型，如下所示：
- en: Salesforce styles
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Salesforce样式
- en: Custom styles
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义样式
- en: Salesforce styles
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Salesforce样式
- en: Salesforce standard pages have standard styles that can be used on Visualforce
    pages. When we use standard Visualforce components such as `<apex:inputField>`,
    `<apex:pageBlock>`, `<apex:pageBlockTable>`, and `<apex:detail>`, they acquire
    the default styles provided by Salesforce. The `tabStyle` attribute in the `<apex:page>`
    or `<apex:apgeBlock>` component can specify the style of a particular object tab.
    It will change the color scheme of the preceding components. When we use a standard
    controller, Visualforce page components inherit the styles of the associated objects.
    When we use a custom controller, we can use the styles of any of Salesforce's
    standard tabs by using the `tabStyle` attribute on the `<apex:page>` tag.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Salesforce标准页面有可以在Visualforce页面中使用的标准样式。当我们使用标准Visualforce组件，如`<apex:inputField>`、`<apex:pageBlock>`、`<apex:pageBlockTable>`和`<apex:detail>`时，它们会获得Salesforce提供的默认样式。`<apex:page>`或`<apex:apgeBlock>`组件中的`tabStyle`属性可以指定特定对象标签的样式。这将改变前面组件的颜色方案。当我们使用标准控制器时，Visualforce页面组件会继承相关对象的样式。当我们使用自定义控制器时，我们可以通过在`<apex:page>`标签上使用`tabStyle`属性来使用Salesforce任何标准标签的样式。
- en: Custom styles
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义样式
- en: We can extend the Salesforce styles by using custom styles. Custom styles can
    be added to a Visualforce page by using the `style` and/or `styleClass` attribute.
    The `style` attribute and the `styleClass` attribute are available on most Visualforce
    components. The `style` attribute allows you to add inline custom CSS statements.
    The `styleClass` attribute allows you to add custom styles via a class name which
    is specified in a CSS file.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用自定义样式来扩展Salesforce样式。可以通过使用`style`和/或`styleClass`属性将自定义样式添加到Visualforce页面中。`style`属性和`styleClass`属性在大多数Visualforce组件中都是可用的。`style`属性允许你添加内联自定义CSS语句。`styleClass`属性允许你通过在CSS文件中指定的类名来添加自定义样式。
- en: 'In the following example, the sample Visualforce page has custom styles that
    have been added via the `style` and `styleClass` attributes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，示例Visualforce页面通过`style`和`styleClass`属性添加了自定义样式：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding example, we have implemented CSS on the Visualforce page. But,
    if we use the same style in multiple locations, we have to add that particular
    CSS file to every Visualforce page. We can use static resources to overcome this
    problem. This is another way to bind custom styles to the Visualforce markup.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们在 Visualforce 页面上实现了 CSS。但是，如果我们要在多个位置使用相同的样式，我们必须将特定的 CSS 文件添加到每个
    Visualforce 页面中。我们可以使用静态资源来解决这个问题。这是将自定义样式绑定到 Visualforce 标记的另一种方式。
- en: 'Static resources are uploaded to the Force.com platform via the **Setup** screen.
    The Force.com platform allows us to upload images, stylesheets, JavaScript, and
    archives (`.zip` and `.jar` files). The following is the stylesheet (CSS filename:
    `main.css`) we have used above Visualforce page:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 静态资源通过 **设置** 屏幕上传到 Force.com 平台。Force.com 平台允许我们上传图像、样式表、JavaScript 和存档（`.zip`
    和 `.jar` 文件）。以下是我们上面 Visualforce 页面使用的样式表（CSS 文件名：`main.css`）：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let''s see how we can upload this stylesheet into static resources. The resource
    name is `CusomMainStyle` which must be unique. The resource can be created by
    navigating to the following path:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何将这个样式表上传到静态资源中。资源名称是 `CusomMainStyle`，它必须是唯一的。可以通过以下路径创建资源：
- en: '**Your Name** | **Setup** | **Develop** | **Static Resources** | **New**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**您的姓名** | **设置** | **开发** | **静态资源** | **新建**'
- en: '![Custom styles](img/9818_03_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![自定义样式](img/9818_03_01.jpg)'
- en: Use static resources to store CSS file
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用静态资源存储 CSS 文件
- en: 'We can refer to the `CustomMainStyle` static resources in a Visualforce page
    as follows. The `<apex:stylesheet>` tag can be used to include a stylesheet. The
    resource name is used to refer the static resource in a Visualforce page as given
    in the following code:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 Visualforce 页面中如下引用 `CustomMainStyle` 静态资源。可以使用 `<apex:stylesheet>` 标签包含样式表。资源名称用于在
    Visualforce 页面中引用静态资源，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'If you want to remove the Salesforce standard styles entirely, you have to
    set a false value to the `standardStylesheets`, `sidebar`, and `showHeader` attributes
    on the `<apex:page>` tag. If you stop loading standard Salesforce stylesheets,
    you can reduce the size of your Visualforce page:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想完全删除 Salesforce 标准样式，您必须将 `<apex:page>` 标签上的 `standardStylesheets`、`sidebar`
    和 `showHeader` 属性设置为 false 值。如果您停止加载标准 Salesforce 样式表，您可以减小 Visualforce 页面的尺寸：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We have mentioned earlier that the Force.com platform allows us to upload archive
    files (such as ZIP and JAR files) as static resources. In such a scenario, a ZIP
    file can contain resources such as images, CSS files and JavaScript files. In
    this case, we can refer an individual resource within the ZIP file by using the
    `URLFOR` function. The `URLFOR` function has two parameters. The first parameter
    is the name of the static resource, which we provide while uploading a static
    resource. The second parameter is the path to the particular file within the ZIP
    file. The static resource that is used in the following example is a ZIP file
    that has the `main.css` stylesheet in a directory called `CustomStyleZipFolder`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到，Force.com 平台允许我们将存档文件（如 ZIP 和 JAR 文件）作为静态资源上传。在这种情况下，ZIP 文件可以包含图像、CSS
    文件和 JavaScript 文件等资源。在这种情况下，我们可以通过使用 `URLFOR` 函数引用 ZIP 文件内的单个资源。`URLFOR` 函数有两个参数。第一个参数是静态资源的名称，我们在上传静态资源时提供。第二个参数是
    ZIP 文件中特定文件的路径。以下示例中使用的静态资源是一个包含 `main.css` 样式表的目录 `CustomStyleZipFolder` 的 ZIP
    文件。
- en: '![Custom styles](img/9818_03_02.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![自定义样式](img/9818_03_02.jpg)'
- en: Upload zip file as a static resource
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将 zip 文件作为静态资源上传
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'There is a special scenario with the static resources where you can use relative
    paths of files in static resource. This allows us to refer to other contents within
    the archive in a relative manner. For example, the `Main.css` file has the following
    style:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于静态资源，存在一个特殊场景，您可以使用文件的相对路径。这允许我们以相对方式引用存档内的其他内容。例如，`Main.css` 文件具有以下样式：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the preceding style code, the image's path needs to be specified relatively
    to the `Main.css` file. In this scenario, we prepare our `CustomStyleZipFolder`
    directory, that contains the `Main.css` file and the `images` folder. Here, the
    `sfLogo.jpg` image present in `Images` is referred in `Main.css`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的样式代码中，图像的路径需要相对于 `Main.css` 文件指定。在这种情况下，我们准备了 `CustomStyleZipFolder` 目录，其中包含
    `Main.css` 文件和 `images` 文件夹。在这里，`Images` 中存在的 `sfLogo.jpg` 图像在 `Main.css` 中被引用。
- en: Then we only need to include the `Main.css` file into a Visualforce page. We
    do not need to worry about the relative path in the stylesheet, because the static
    resource contains both the stylesheet and the image.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们只需将 `Main.css` 文件包含到 Visualforce 页面中。我们不需要担心样式表中的相对路径，因为静态资源包含样式表和图像。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Maximum size of a single static resource is 5 MB. Maximum size of static resources
    that we can have in an organization is 250 MB.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 单个静态资源的最大大小为 5 MB。组织中静态资源的最大大小为 250 MB。
- en: Using JavaScript in Visualforce pages
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Visualforce 页面中使用 JavaScript
- en: 'JavaScript is one of the key browser technologies for Visualforce pages. JavaScript
    provides the framework for communicating between other JavaScript objects, HTML
    elements, and the Visualforce controller. We can use JavaScript libraries as well
    as some Visualforce components (such as `<apex:actionFunction>`, `<apex:actionSupport>,
    <apex:commandButton>`, `<apex:commandLink>`) with Visualforce pages. JavaScript
    code can be written in a Visualforce page and can be included in a Visualforce
    page by using a static resource. This is the best method to use to include a JavaScript
    library in a Visualforce page. We can use the `<apex:includeScript>` component
    to include a JavaScript library from static resources. For example:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 是 Visualforce 页面的关键浏览器技术之一。JavaScript 为在 JavaScript 对象、HTML 元素和 Visualforce
    控制器之间进行通信提供了框架。我们可以在 Visualforce 页面中使用 JavaScript 库以及一些 Visualforce 组件（如 `<apex:actionFunction>`、`<apex:actionSupport>`、`<apex:commandButton>`、`<apex:commandLink>`）等。JavaScript
    代码可以在 Visualforce 页面中编写，并且可以通过使用静态资源将其包含在 Visualforce 页面中。这是在 Visualforce 页面中包含
    JavaScript 库的最佳方法。我们可以使用 `<apex:includeScript>` 组件从静态资源中包含 JavaScript 库。例如：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Accessing Visualforce components in JavaScript
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 JavaScript 中访问 Visualforce 组件
- en: 'When we refer Visualforce components in the JavaScript code, the ID attribute
    comes into play. Every Visualforce component has an ID attribute. The ID attribute
    must be specified with a particular component to refer it in JavaScript, and it
    is used to bind the two components together. When the page is rendered, this ID
    attribute is a part of DOM ID for a particular component. The ID attribute must
    be unique as well. The following code snippet shows a way of binding two components
    using the `id` attribute:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在 JavaScript 代码中引用 Visualforce 组件时，ID 属性就派上用场。每个 Visualforce 组件都有一个 ID 属性。要使用
    JavaScript 引用特定组件，必须指定该组件的 ID 属性，并且它用于将两个组件绑定在一起。当页面渲染时，此 ID 属性是特定组件 DOM ID 的一部分。ID
    属性也必须是唯一的。以下代码片段展示了使用 `id` 属性绑定两个组件的方法：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following example provides an idea about the way to handle JavaScript in
    a Visualforce page. This page has been implemented to change the pick list value
    by checkbox through JavaScript. The JavaScript code is included within the `<script>`
    tag. The JavaScript function has two arguments. The first argument is the element
    that triggered the event (`input`) and the second one is the DOM ID (`id`) of
    the target pick list field. The `{!$Component.inputStatus}` expression obtains
    the DOM ID of the HTML element generated by the `<apex:inputField id="inputStatus"
    value="{!order.Status__c}"/>` component:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例提供了一个在 Visualforce 页面中处理 JavaScript 的方法思路。此页面已实现通过 JavaScript 修改复选框来更改选择列表的值。JavaScript
    代码包含在 `<script>` 标签内。JavaScript 函数有两个参数。第一个参数是触发事件的元素（`input`），第二个参数是目标选择列表字段的
    DOM ID (`id`)。`{!$Component.inputStatus}` 表达式获取由 `<apex:inputField id="inputStatus"
    value="{!order.Status__c}"/>` 组件生成的 HTML 元素的 DOM ID：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following code is the associated controller class for the preceding Visualforce
    page. It retrieves the existing orders as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是前面 Visualforce 页面相关控制器类的代码。它按照以下方式检索现有订单：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://www.packtpub.com](http://www.packtpub.com) 的账户中下载您购买的所有 Packt
    书籍的示例代码文件。如果您在其他地方购买了此书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册，以便将文件直接通过电子邮件发送给您。
- en: JavaScript remoting for Apex controllers
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Apex 控制器的 JavaScript 远程调用
- en: 'Javascript remoting is the process that provides support for some methods in
    APEX controllers that are to be called via JavaScript. This feature allows us
    to implement complex and dynamic behaviors that cannot be accomplished using standard
    Visualforce Ajax components. JavaScript remoting was released as a Developer Preview
    in Spring ''11\. Since the Summer ''11 release, JavaScript remoting provides support
    for additional return data types. Also, the references to the same objects are
    no longer duplicated in the response. JavaScript remoting has three main parts:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 远程调用是提供对 APEX 控制器中某些方法支持的过程，这些方法将通过 JavaScript 调用。此功能使我们能够实现使用标准
    Visualforce Ajax 组件无法完成的复杂和动态行为。JavaScript 远程调用在 Spring '11 作为开发者预览版发布。自 Summer
    '11 版本发布以来，JavaScript 远程调用提供了对更多返回数据类型的支持。此外，响应中不再重复引用相同的对象。JavaScript 远程调用有三个主要部分：
- en: The JavaScript code which is used to invocate a remote method
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于调用远程方法的 JavaScript 代码
- en: The remote method in the Apex controller
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apex 控制器中的远程方法
- en: The callback function (written in JavaScript) in a Visualforce page
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce 页面中的回调函数（用 JavaScript 编写）
- en: 'To use JavaScript remoting, your request must take the following form:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 JavaScript 远程调用，您的请求必须采用以下形式：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The description of the preceding code is as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码的描述如下：
- en: '`namespace`: This is your organization''s namespace. This is only required
    if the class comes from an installed package.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`namespace`：这是您的组织命名空间。如果类来自已安装的包，则此为必需项。'
- en: '`controller`: This is the name of your Apex controller.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`controller`：这是您的 Apex 控制器的名称。'
- en: '`method`: This is the name of the Apex method you''re calling.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`method`：这是您正在调用的 Apex 方法的名称。'
- en: '`params`: This is a comma-separated list of parameters that your method takes.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`params`：这是您方法接受的参数的逗号分隔列表。'
- en: '`callbackFunction`: This is the name of the function that handles the response
    from the controller. It returns the status of the call and the method result.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`callbackFunction`：这是处理控制器响应的函数的名称。它返回调用的状态和方法结果。'
- en: '`escape`: This specifies whether your response should be escaped (by default,
    `true`) or not (`false`).'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`escape`：这指定了您的响应是否应该被转义（默认为 `true`）或不应转义（`false`）。'
- en: 'The remote method must begin with the `@RemoteAction` annotation as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 远程方法必须以 `@RemoteAction` 注解开始，如下所示：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The remote method can have the following data types as arguments:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 远程方法可以作为参数具有以下数据类型：
- en: Apex primitives (String, Integer, and so on)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apex 原始数据类型（String、Integer 等）
- en: Collections (Set, List, Map)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合（Set、List、Map）
- en: sObject (Standard objects and custom objects)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sObject（标准对象和自定义对象）
- en: User-defined Apex classes and interfaces
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的 Apex 类和接口
- en: 'The remote method can return the following data types:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 远程方法可以返回以下数据类型：
- en: Apex primitives (String, Integer, and so on)
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apex 原始数据类型（String、Integer 等）
- en: sObjects (standard objects and custom objects)
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sObjects（标准对象和自定义对象）
- en: Collections (Set, List, Map)
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合（Set、List、Map）
- en: User-defined Apex classes and enums
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的 Apex 类和枚举
- en: '`SelectOption`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SelectOption`'
- en: '`PageReference`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PageReference`'
- en: '`SaveResult`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SaveResult`'
- en: '`UpsertResult`'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UpsertResult`'
- en: '`DeleteResult`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DeleteResult`'
- en: Tip
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The remote method must be uniquely identified by the name and number of parameters.
    For example, we cannot write a remote method with the same method name and equal
    number of arguments and different type of arguments.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 远程方法必须通过名称和参数数量唯一标识。例如，我们不能编写具有相同方法名称、相等参数数量但不同参数类型的远程方法。
- en: 'The following example shows how to use JavaScript remoting in a Visualforce
    page and the Apex controller:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了如何在 Visualforce 页面和 Apex 控制器中使用 JavaScript 远程调用：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This is the associated Apex controller:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相关的 Apex 控制器：
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Using jQuery in Visualforce pages
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Visualforce 页面中使用 jQuery
- en: jQuery is an open source JavaScript library which allows us to implement client-side
    scripting of HTML. jQuery has been designed to be capable of extending the main
    libraries with new plugins for introducing a wide variety of new features. And
    also it allows us to navigate a document, select a DOM element, create animations,
    event handling, and develop Ajax applications.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 是一个开源的 JavaScript 库，它允许我们实现 HTML 的客户端脚本。jQuery 被设计成能够通过引入新的插件来扩展主要库，从而引入各种新功能。它还允许我们导航文档、选择
    DOM 元素、创建动画、事件处理以及开发 Ajax 应用程序。
- en: When we develop Visualforce pages, jQuery can be used to simplify the UI developments.
    For example, jQuery is used to simplify the DOM manipulations and give access
    to the library of UI elements, and simplify the Ajax techniques and technologies
    of mobile devices.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开发 Visualforce 页面时，jQuery 可以用来简化 UI 开发。例如，jQuery 用于简化 DOM 操作并访问 UI 元素库，以及简化移动设备的
    Ajax 技术和技术。
- en: 'The following example shows the jQuery version of our previous example. This
    is used to explain the JavaScript code in Visualforce. This example uses the `Order__c`
    standard controller. This page needs the ID parameter with an order id:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了我们之前示例的 jQuery 版本。这用于解释 Visualforce 中的 JavaScript 代码。本例使用 `Order__c`
    标准控制器。此页面需要带有订单 ID 的 ID 参数：
- en: '[https://c.ap1.visual.force.com/apex/JQueryExample?id=a02900000086Hlr](https://c.ap1.visual.force.com/apex/JQueryExample?id=a02900000086Hlr)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://c.ap1.visual.force.com/apex/JQueryExample?id=a02900000086Hlr](https://c.ap1.visual.force.com/apex/JQueryExample?id=a02900000086Hlr)'
- en: 'This page renders the order detail page. We are using jQuery to fulfill our
    requirement. Therefore, the Visualforce page needs to include the jQuery library
    for jQuery implementations. In the following example we used an online reference
    of the main jQuery library:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面渲染订单详情页面。我们使用 jQuery 来满足我们的需求。因此，Visualforce 页面需要包含 jQuery 库以实现 jQuery 实现。在以下示例中，我们使用了主
    jQuery 库的在线参考：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can also use static resources to include the jQuery library. The usage is
    same as in the JavaScript and CSS examples.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用静态资源来包含 jQuery 库。用法与 JavaScript 和 CSS 示例相同。
- en: Tip
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There are other JavaScript libraries with the same default global variable name
    (`$`). If we also use the same global variable name, there will be a conflict
    at the client side. Our jQuery functions will not work. To eliminate that conflict,
    we can use `jQuery.noConflict()` and assign it to another global variable and
    use that new global variable in our jQuery code.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他具有相同默认全局变量名（`$`）的 JavaScript 库。如果我们也使用相同的全局变量名，客户端将会有冲突。我们的 jQuery 函数将无法工作。为了消除这种冲突，我们可以使用
    `jQuery.noConflict()` 并将其分配给另一个全局变量，然后在我们的 jQuery 代码中使用这个新全局变量。
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Tip
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If we don''t use an `id` attribute for a particular component, Visualforce
    uses a dynamically-generated `id`, for example, `j_id0, j_id0:j_id1`. Consider
    an example, we have specified the `id` attribute for `<apex:inputField id="inputOne"/>`.
    But we haven''t specified any `id` attribute for parent components of `inputOne`.
    We can select such a component using jQuery. It is called partial selectors.For
    example: `j$(''[id*= inputOne]'')`'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有为特定组件使用 `id` 属性，Visualforce 将使用动态生成的 `id`，例如，`j_id0, j_id0:j_id1`。考虑一个例子，我们已指定
    `<apex:inputField id="inputOne"/>` 的 `id` 属性。但我们没有为 `inputOne` 的父组件指定任何 `id` 属性。我们可以使用
    jQuery 选择这样的组件。这被称为部分选择器。例如：`j$('[id*= inputOne]')`
- en: HTML5 and Visualforce pages
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5 和 Visualforce 页面
- en: HTML5 is the new standard of HTML. The previous version of HTML is HTML 4.01\.
    HTML5 has new features such as new elements, new attributes, video and audio support,
    2D/3D graphic support, full CSS3 support, local storage, local SQL database support,
    and featuring web applications. With these features, we can reduce the use of
    external plugins. There are also are more markups to replace scripting. HTML5
    has better error handling mechanism.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 是 HTML 的新标准。HTML 的前一个版本是 HTML 4.01。HTML5 具有新功能，如新元素、新属性、视频和音频支持、2D/3D
    图形支持、完整的 CSS3 支持、本地存储、本地 SQL 数据库支持，以及具有网页应用功能。有了这些功能，我们可以减少对外部插件的依赖。还有更多标记来替代脚本。HTML5
    具有更好的错误处理机制。
- en: When it comes to the Force.com developments, we can use HTML5 for Visualforce
    page developments and develop mobile web applications. In the Force.com platform,
    HTML5 plays a major role in developing web-based mobile applications. For example,
    recently Salesforce has released touch.salesforce.com, which uses HTML5.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到 Force.com 开发时，我们可以使用 HTML5 进行 Visualforce 页面开发，并开发移动网页应用。在 Force.com 平台上，HTML5
    在开发基于网页的移动应用中起着重要作用。例如，最近 Salesforce 发布了 touch.salesforce.com，它使用了 HTML5。
- en: By default, Visualforce pages are functioned with `docType` of HTML 4.01 transitional.
    Since the Winter '12 version, Visualforce pages are supported to change the `docType`
    attribute in the `<apex:page>` tag. In a pure HTML5 page, the `<!DOCTYPE html>`
    tag must be specified at the top of the page. The `docType` attribute of `<apex:page>`
    achieves that requirement.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Visualforce 页面使用 HTML 4.01 转换的 `docType`。自 Winter '12 版本以来，Visualforce
    页面支持在 `<apex:page>` 标签中更改 `docType` 属性。在一个纯 HTML5 页面中，必须在页面顶部指定 `<!DOCTYPE html>`
    标签。`<apex:page>` 的 `docType` 属性实现了这一要求。
- en: 'The following is the example usage for the `docType` Visualforce attribute
    on the `<apex:page>` component:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在`<apex:page>`组件上`docType` Visualforce属性的示例用法：
- en: '[PRE16]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following example is a Visualforce page with drag-and-drop functionality
    by using HTML5\. Here we have a rectangle and an image which is referring from
    static resources. We can drag the image into the rectangle:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是一个使用HTML5实现拖放功能的Visualforce页面。这里有一个矩形和一个引用自静态资源的图片。我们可以将图片拖入矩形中：
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Summary
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we became familiar with the combined usage of native Visualforce
    markup and standard web development technologies. We have seen the way to build
    rich UIs in the Force.com platform by using CSS, JavaScript, jQuery, and HTML5\.
    We have learned the usage of static resources for CSS, JavaScript, and jQuery.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们熟悉了本地Visualforce标记和标准Web开发技术的结合使用。我们看到了如何通过使用CSS、JavaScript、jQuery和HTML5在Force.com平台上构建丰富的UI。我们还学习了CSS、JavaScript和jQuery静态资源的用法。
