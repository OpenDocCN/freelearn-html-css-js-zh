- en: Chapter 10. A Sample PhoneGap Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章：一个 PhoneGap 示例项目
- en: '*Until now, we have seen how to create a PhoneGap project, use various APIs
    individually, and finally how to build the application. After learning these important
    things, we will need to package all our learning and create an actual app with
    all the APIs. Working on this demo app project will help you to understand the
    practical usage of the APIs and how to put them to use. I have tried to make the
    project as simple as possible, so that you can understand it without any difficulties.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*到目前为止，我们已经看到了如何创建 PhoneGap 项目，单独使用各种 API，以及最终如何构建应用程序。在学习了这些重要内容之后，我们需要将所有学习内容打包，创建一个包含所有
    API 的实际应用程序。在这个演示应用项目中工作将帮助您理解 API 的实际用法以及如何使用它们。我已经尽量使项目尽可能简单，以便您能够轻松理解。*'
- en: 'In this chapter, you will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将：
- en: Create a new PhoneGap project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的 PhoneGap 项目
- en: Learn how to include Bootstrap and other libraries in the project
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在项目中包含 Bootstrap 和其他库
- en: Develop the demo app using all the APIs provided by PhoneGap
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PhoneGap 提供的所有 API 开发演示应用
- en: Build the application and try it in a real device
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在真实设备上构建应用程序并尝试
- en: What's in the app?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用中包含什么？
- en: The demo app that we are going to create will showcase all the features of the
    PhoneGap/Cordova APIs. The app will list all sections in a sliding menu and the
    user can choose which API they are interested in. The demo app is available in
    the Google Play Store at [https://play.google.com/store/apps/details?id=com.iyaffle.phonegap](https://play.google.com/store/apps/details?id=com.iyaffle.phonegap).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要创建的演示应用将展示 PhoneGap/Cordova API 的所有功能。应用将列出所有部分在一个滑动菜单中，用户可以选择他们感兴趣的 API。该演示应用可在
    Google Play 商店中找到，链接为 [https://play.google.com/store/apps/details?id=com.iyaffle.phonegap](https://play.google.com/store/apps/details?id=com.iyaffle.phonegap)。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the benefit of everyone, the complete project source is available in the
    GitHub repository. Readers can view or download the entire source from [https://github.com/iYaffle/PhoneGap-Demo-App](https://github.com/iYaffle/PhoneGap-Demo-App).
    Happy learning!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了大家的利益，完整的项目源代码可在 GitHub 仓库中找到。读者可以从 [https://github.com/iYaffle/PhoneGap-Demo-App](https://github.com/iYaffle/PhoneGap-Demo-App)
    查看或下载整个源代码。祝您学习愉快！
- en: Libraries used
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的库
- en: We are going to use the following libraries in our demo app. We will find out
    why we are using each of these libraries in our demo.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在我们的演示应用中使用以下库。我们将找出为什么在我们的演示中使用这些库。
- en: Twitter Bootstrap
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Twitter Bootstrap
- en: Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive
    projects on the web. Bootstrap will be our primary UI framework of the project.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 是最受欢迎的用于在网络上开发响应式项目的 HTML、CSS 和 JS 框架。Bootstrap 将成为我们的主要 UI 框架。
- en: It can be downloaded from [http://www.getbootstrap.com/](http://www.getbootstrap.com/).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以从 [http://www.getbootstrap.com/](http://www.getbootstrap.com/) 下载。
- en: jQuery
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: jQuery
- en: jQuery is a JavaScript framework that has changed the life of many web developers.
    It has redefined the way JavaScript is coded. It provides an API to easily deal
    with DOM manipulation, event handling, animation, and AJAX.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 是一个改变了众多网页开发者生活的 JavaScript 框架。它重新定义了 JavaScript 的编码方式。它提供了一个 API，可以轻松处理
    DOM 操作、事件处理、动画和 AJAX。
- en: It can be downloaded from [http://www.jquery.com/](http://www.jquery.com/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以从 [http://www.jquery.com/](http://www.jquery.com/) 下载。
- en: mMenu
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: mMenu
- en: mMenu is the famous jQuery plugin that creates sliding submenus for websites
    and web apps. It has a dependency of jQuery and we will be using it to create
    our sliding menu.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: mMenu 是一个著名的 jQuery 插件，它为网站和 Web 应用创建滑动子菜单。它依赖于 jQuery，我们将使用它来创建我们的滑动菜单。
- en: It can be downloaded from [http://www.mmenu.frebsite.nl/](http://www.mmenu.frebsite.nl/).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以从 [http://www.mmenu.frebsite.nl/](http://www.mmenu.frebsite.nl/) 下载。
- en: FastClick
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FastClick
- en: FastClick is a tiny but useful library, which will help us to eliminate the
    300 ms delay in touch devices. For more information on this, refer to the *Handling
    click delays* section of [Chapter 8](ch08.html "Chapter 8. Advanced PhoneGap"),
    *Advanced PhoneGap*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: FastClick 是一个微小但实用的库，它将帮助我们消除触摸设备中的 300 毫秒延迟。关于这方面的更多信息，请参考第 8 章 *Handling click
    delays* 部分，*Advanced PhoneGap*。
- en: It can be downloaded from [https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以从 [https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)
    下载。
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This chapter will be a basic one and it's highly recommended for the readers
    to read the previous chapters to understand the APIs before proceeding. We have
    covered only the critical aspects of the project and the rest is left to the readers
    to read and interpret in order to encourage development of the project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将是一个基础章节，强烈建议读者在继续之前阅读前面的章节，以了解API。我们已经涵盖了项目的关键方面，其余的留给读者去阅读和解释，以鼓励项目的开发。
- en: Creating the project
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目
- en: As the first step of our activity, we need to create a new PhoneGap project.
    We will be using PhoneGap CLI tools to create a project and install various plugins.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作为我们活动的第一步，我们需要创建一个新的PhoneGap项目。我们将使用PhoneGap CLI工具来创建项目并安装各种插件。
- en: 'Now, let''s create a new project named `PhoneGap`, using PhoneGap CLI:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用PhoneGap CLI创建一个名为`PhoneGap`的新项目：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After creating the project, as you know, a new directory with the project name
    will be created. Let''s make that our current directory:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建项目后，如您所知，将创建一个新的以项目名称命名的目录。让我们将其设置为当前目录：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let''s add Android as our target platform. If you are interested, you
    can add other platforms too, if you have the required SDKs installed:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加Android作为我们的目标平台。如果您感兴趣，如果您已安装所需的SDK，也可以添加其他平台：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We should have the `fastclick.js`, `jquery.mmenu.min.all`, and `jquery-2.1.3.min.js`
    libraries downloaded in the `js` folder of the project's home `www` directory.
    Note that all CSS files of the jQuery and mMenu libraries should be placed in
    the `css` directory of the `www` directory. Now, we can kick off our project development.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该在项目的家目录`www`目录下的`js`文件夹中下载`fastclick.js`、`jquery.mmenu.min.all`和`jquery-2.1.3.min.js`库。请注意，jQuery和mMenu库的所有CSS文件都应该放在`www`目录下的`css`目录中。现在，我们可以开始我们的项目开发。
- en: Installing plugins
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装插件
- en: 'As our application is going to use almost all of the APIs, we will be installing
    them in our project. You can either install all of these plugins now or install
    them as and when required. The commands to install them are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的应用程序将使用几乎所有API，我们将在项目中安装它们。您现在可以安装所有这些插件，也可以在需要时安装它们。安装它们的命令如下：
- en: '`cordova plugin add cordova-plugin-dialogs`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-dialogs`'
- en: '`cordova plugin add cordova-plugin-device`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-device`'
- en: '`cordova plugin add cordova-plugin-vibration`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-vibration`'
- en: '`cordova plugin add cordova-plugin-camera`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-camera`'
- en: '`cordova plugin add cordova-plugin-network-information`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-network-information`'
- en: '`cordova plugin add cordova-plugin-contacts`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-contacts`'
- en: '`cordova plugin add cordova-plugin-splashscreen`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-splashscreen`'
- en: '`cordova plugin add cordova-plugin-device-motion`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-device-motion`'
- en: '`cordova plugin add cordova-plugin-geolocation`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-geolocation`'
- en: '`cordova plugin add cordova-plugin-media-capture`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-media-capture`'
- en: '`cordova plugin add cordova-plugin-file`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-file`'
- en: '`cordova plugin add cordova-plugin-globalization`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-globalization`'
- en: '`cordova plugin add cordova-plugin-inappbrowser`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-inappbrowser`'
- en: '`cordova plugin add cordova-plugin-media`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cordova plugin add cordova-plugin-media`'
- en: Design of the homepage
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 首页设计
- en: 'For every app, the `index.html` page will be the homepage, and that''s where
    our application will start too. To begin from scratch, clear out the body contents
    of the file. Inside the `<body>` tag of the `index.html` file, we will add the
    following code:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个应用程序，`index.html`页面将是主页，我们的应用程序也将从这里开始。要从头开始，清除文件的body内容。在`index.html`文件的`<body>`标签内，我们将添加以下代码：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To understand each of the sections in the preceding code, we will need to understand
    the Bootstrap components. In Bootstrap, we can have a header for the page that
    is identified by the `header` class. The actual contents of the page are placed
    under the `div` element with the `content` class. These are standard Bootstrap
    techniques and you can easily understand them if you read the Bootstrap documents.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解前面代码中的每个部分，我们需要了解Bootstrap组件。在Bootstrap中，我们可以有一个由`header`类标识的页面标题。页面的实际内容放置在具有`content`类的`div`元素下。这些都是标准的Bootstrap技术，如果您阅读Bootstrap文档，可以轻松理解它们。
- en: 'Now, we''ll add the CSS file references to the `<head>` section of the page,
    as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将添加CSS文件引用到页面的`<head>`部分，如下所示：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, we will add all the required JavaScript files that we are going to use
    above the `</body>` tag. Ensure that you are adding each file in the correct order,
    so that dependencies are resolved:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将在`</body>`标签上方添加所有我们将要使用的JavaScript文件。确保你按正确的顺序添加每个文件，以便解决依赖关系：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You may have noticed that we have added a button with the `id` value as `openMenu`.
    Now, we will add the event for it. We are trying to open the slide menu when the
    user clicks on the button. The slide menu has become a famous approach recently,
    as it is used in the Facebook mobile application:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到我们添加了一个`id`值为`openMenu`的按钮。现在，我们将为它添加事件。我们试图在用户点击按钮时打开滑动菜单。滑动菜单最近已成为一种流行的方法，因为它被用于Facebook移动应用中：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'With the provided CSS styling (refer to the `.css` files), you would see the
    app as shown in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用提供的CSS样式（参考`.css`文件），你会看到应用如下截图所示：
- en: '![Design of the homepage](img/B03476_10_01.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![主页设计](img/B03476_10_01.jpg)'
- en: 'Now, let''s see the sliding menu. We have defined the menu content in a separate
    template file and we are going to include that in our page using AJAX. We will
    have the code in a separate JS file `main.js` so that we can include it in every
    page. The code snippet is provided here for your reference:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看滑动菜单。我们已经在单独的模板文件中定义了菜单内容，并计划使用AJAX将其包含在我们的页面中。我们将代码放在单独的JS文件`main.js`中，以便我们可以在每个页面中包含它。代码片段如下供您参考：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `menu.html` file will have a plain list with links to all the pages that
    we have created. Check that out for yourself here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`menu.html`文件将包含一个带有链接到我们创建的所有页面的普通列表。您可以在这里查看：[链接](#)'
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This code takes care of getting the content of `menu.html` and pushes that to
    the HTML document under the `div` element identified by the `id` value as `page`.
    Then, we apply the sliding option on the menu item that we have included.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码负责获取`menu.html`的内容，并将其推送到`id`值为`page`的`div`元素下。然后，我们对包含的菜单项应用滑动选项。
- en: 'After doing this correctly, when you click on the **Start Here** button, you
    will see the sliding menu open in front of you:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 正确完成此操作后，当你点击**从这里开始**按钮时，你将看到滑动菜单在你面前打开：
- en: '![Design of the homepage](img/B03476_10_02.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![主页设计](img/B03476_10_02.jpg)'
- en: With this, we have made our basic framework of the app ready. Next, we will
    learn about each API and their usage. Going forward, only the main snippet will
    be provided. It will be helpful for readers to learn and try the rest themselves.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，我们已经准备好了应用的基本框架。接下来，我们将学习每个API及其用法。向前推进，只提供主要片段。这将有助于读者学习和尝试其余部分。
- en: Using the Accelerometer API
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用加速度计API
- en: 'We are now going to use the Accelerometer API. Using this API, we are going
    to get the acceleration coordinates and display them in the application. For the
    same, we have defined some `div` elements, as shown here:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将使用加速度计API。使用这个API，我们将获取加速度坐标并在应用中显示它们。为此，我们定义了一些`div`元素，如下所示：
- en: '[PRE9]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, we have two buttons to start and stop the acceleration watch:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有两个按钮来开始和停止加速度监控：
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now, let's come to the core JavaScript for this. We are instructing the app
    to watch the acceleration continuously for one second, using the `onDeviceReady()`
    function and update the values in the corresponding `div` elements.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看这个的核心JavaScript代码。我们通过使用`onDeviceReady()`函数，指示应用持续一秒监控加速度，并更新相应的`div`元素中的值。
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output for this will be as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此输出的结果如下：
- en: '![Using the Accelerometer API](img/B03476_10_03.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![使用加速度计API](img/B03476_10_03.jpg)'
- en: 'When we want to stop the watch, we trigger the `stopWatch()` function by clicking
    on the **Stop Watching** button. When we click on the **Start Watching** button,
    the watch will be started again, as shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想要停止监控时，通过点击**停止监控**按钮来触发`stopWatch()`函数。当我们点击**开始监控**按钮时，监控将再次开始，如下所示：
- en: '![Using the Accelerometer API](img/B03476_10_04.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用加速度计API](img/B03476_10_04.jpg)'
- en: Using the Device API
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用设备API
- en: 'With the Device API, we are going to get the information about our device.
    We will define five `<p>` tags to hold the data:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用设备API，我们将获取有关我们设备的信息。我们将定义五个`<p>`标签来保存数据：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We have the following script that will get the device information and put it
    in the DOM. You may have noticed that we are using the attribute ID value of the
    `<p>` element:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有以下脚本，它将获取设备信息并将其放入DOM中。你可能已经注意到我们正在使用`<p>`元素的属性ID值：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output will be as shown here:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the Device API](img/B03476_10_05.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![使用设备API](img/B03476_10_05.jpg)'
- en: Using the Camera API
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用相机API
- en: 'The Camera API can be used to capture an image from the device camera and also
    to select an image from the image gallery. We will see both of these uses with
    an example:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 相机API可以用来从设备相机捕获图片，也可以从图片库中选择图片。我们将通过示例查看这两种用法：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You will now be able to take photos, using your device camera:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将能够使用你的设备相机拍照：
- en: '![Using the Camera API](img/B03476_10_06.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_06.jpg)'
- en: 'You will now also be able to select images from your device album:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你还将能够从你的设备相册中选择图片：
- en: '![Using the Camera API](img/B03476_10_07.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_07.jpg)'
- en: 'The following is the script used for this example and it''s recommended that
    you read about the Camera API before proceeding with this example:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用于此示例的脚本，建议你在继续此示例之前先了解关于相机API的内容：
- en: '[PRE15]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following are the screenshots of the example in action:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是示例操作的截图：
- en: '![Using the Camera API](img/B03476_10_08.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_08.jpg)'
- en: 'Once you shoot the picture, you will be asked to select or reject the taken
    image:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你拍摄了照片，你将被要求选择或拒绝所拍摄的图片：
- en: '![Using the Camera API](img/B03476_10_09.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_09.jpg)'
- en: 'Once you have accepted the image, it will be shown in the app:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你接受了图片，它将在应用程序中显示：
- en: '![Using the Camera API](img/B03476_10_10.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_10.jpg)'
- en: 'When you select the option to choose from the image gallery, the Gallery application
    will be shown for image selection:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择从图库中选择选项时，将显示图库应用程序以进行图片选择：
- en: '![Using the Camera API](img/B03476_10_11.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_11.jpg)'
- en: 'Again, once you''ve selected an image from the gallery, it will be shown in
    the page:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，一旦你从图库中选择了一张图片，它将在页面上显示：
- en: '![Using the Camera API](img/B03476_10_12.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![使用相机API](img/B03476_10_12.jpg)'
- en: Using the Capture API
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用捕获API
- en: 'With the help of the Capture API, we can capture audio, video, and camera images.
    We will see a simple code to perform all of these operations. The following code
    will add three buttons to the page and bind an event to each of those buttons:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 通过捕获API，我们可以捕获音频、视频和相机图片。我们将看到一个简单的代码来执行所有这些操作。以下代码将在页面上添加三个按钮，并将事件绑定到每个按钮上：
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following is the JavaScript code snippet; each function is easy to understand:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个JavaScript代码片段；每个函数都很容易理解：
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output of this will be as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 此操作的输出如下：
- en: '![Using the Capture API](img/B03476_10_13.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![使用捕获API](img/B03476_10_13.jpg)'
- en: 'Try recording your voice using the app:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试使用应用程序录制你的声音：
- en: '![Using the Capture API](img/B03476_10_14.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![使用捕获API](img/B03476_10_14.jpg)'
- en: Using the Connection API
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用连接API
- en: The Connection API is one of the simplest APIs to work with. We are going to
    find what kind of data connection the device has and then display it.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 连接API是其中最简单的API之一。我们将找出设备具有哪种数据连接，然后显示它。
- en: 'To hold the data, we define a new element, as shown here:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了存储数据，我们定义了一个新的元素，如下所示：
- en: '[PRE18]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the JavaScript function, we get the connection type and validate it using
    the `checkConnection()` method. Then, we display a friendly message:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript函数中，我们获取连接类型，并使用`checkConnection()`方法进行验证。然后，我们显示一个友好的消息：
- en: '[PRE19]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output of this will be as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此操作的输出如下：
- en: '![Using the Connection API](img/B03476_10_15.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![使用连接API](img/B03476_10_15.jpg)'
- en: Using the Contacts API
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用联系人API
- en: 'Now, let''s see some advanced concepts of the Contacts API. We are going to
    do the following three things:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看联系人API的一些高级概念。我们将做以下三件事：
- en: Fetch ten phone numbers from a device; we have limited it to ten for simplicity.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从设备中获取10个电话号码；为了简单起见，我们将其限制为10个。
- en: Search for a contact and display their phone number, along with the contact
    name.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索联系人并显示他们的电话号码，以及联系人名称。
- en: Add a new contact using the app.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用应用程序添加新联系人。
- en: 'The following is the HTML code; it looks big as we have used Bootstrap styles
    to create tab styles:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是HTML代码；由于我们使用了Bootstrap样式来创建标签样式，所以看起来很大：
- en: '[PRE20]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Coming to the JavaScript section, the following is the code for each operation.
    Reading the section about the Contacts API will help you to understand this. We
    have few jQuery-related statements too in the code:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 进入JavaScript部分，以下是对每个操作的代码。阅读有关联系人API的部分将帮助你理解这一点。代码中还有一些与jQuery相关的语句：
- en: '[PRE21]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Ten contacts will be fetched and displayed when you click on the **Fetch 10
    Contacts** button:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击**获取10个联系人**按钮时，将获取并显示10个联系人：
- en: '![Using the Contacts API](img/B03476_10_16.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![使用联系人API](img/B03476_10_16.jpg)'
- en: 'The total count of the contacts in the device and 10 contacts will be displayed,
    along with the phone number:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示设备中联系人的总数和10个联系人，以及电话号码：
- en: '![Using the Contacts API](img/B03476_10_17.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![使用联系人API](img/B03476_10_17.jpg)'
- en: 'The contact names and numbers are hidden for the sake of privacy. You can also
    search for contacts, as shown here:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 联系人姓名和电话号码出于隐私保护的原因被隐藏。您也可以在此处搜索联系人，如下所示：
- en: '![Using the Contacts API](img/B03476_10_18.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![使用联系人API](img/B03476_10_18.jpg)'
- en: 'Once you enter the search text and click on the **OK** button, you will see
    the results for your search:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当您输入搜索文本并点击**确定**按钮后，您将看到搜索结果：
- en: '![Using the Contacts API](img/B03476_10_19.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![使用联系人API](img/B03476_10_19.jpg)'
- en: Using the Files API
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用文件API
- en: 'Using the Files API, we can handle files and directories in the real device.
    This API makes it easy for the developers to handle all file-related operations:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文件API，我们可以在真实设备中处理文件和目录。此API使开发者能够轻松处理所有与文件相关的操作：
- en: '[PRE22]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following is the code to get all the directories in the device filesystem.
    You can extend the code to read all files, as well as read, edit, and delete a
    file:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在设备文件系统中获取所有目录的代码。您可以扩展此代码以读取所有文件，以及读取、编辑和删除文件：
- en: '[PRE23]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output will be as shown here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the Files API](img/B03476_10_20.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![使用文件API](img/B03476_10_20.jpg)'
- en: Using the Globalization API
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用全球化API
- en: The Globalization API helps you to customize content such as numbers, date,
    and currency based on your user's device locale, instead of showing them in a
    hardcoded format. With this API, you can truly create a real globalized application.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 全球化API可以帮助您根据用户的设备区域设置自定义内容，如数字、日期和货币，而不是以硬编码的格式显示。使用此API，您可以真正创建一个真正的全球化应用程序。
- en: 'Let''s create the menu for each of the options we are going to try:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为将要尝试的每个选项创建菜单：
- en: '[PRE24]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'With the preceding code, you will see the app as shown in the following screenshot;
    it has a drop-down menu for selecting the options to be used:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通过前面的代码，您将看到如下所示的截图；它有一个下拉菜单来选择要使用的选项：
- en: '![Using the Globalization API](img/B03476_10_21.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![使用全球化API](img/B03476_10_21.jpg)'
- en: 'Now, the complete script is provided here; we have assigned each function to
    the click event of each link:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，完整的脚本在此提供；我们将每个函数分配给了每个链接的点击事件：
- en: '[PRE25]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: When you click on the **Number Pattern** option, you can see the number pattern
    on the device that is decided based on the phone locale. Try out other menu options
    as well.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**数字模式**选项时，您可以看到基于手机区域设置的设备上的数字模式。也请尝试其他菜单选项。
- en: '![Using the Globalization API](img/B03476_10_22.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![使用全球化API](img/B03476_10_22.jpg)'
- en: Using the InApp Browser API
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用InApp浏览器API
- en: InApp Browser is a web browser that can be controlled by the app. Your app can
    open the website in a browser and handle it as required.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: InApp浏览器是一个可以被应用控制的网页浏览器。您的应用可以在浏览器中打开网站并按需处理。
- en: 'Again, we will have a button to launch InApp Browser. We have created a JavaScript
    function named `launchIAB` to get the URL and open it:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们将有一个按钮来启动InApp浏览器。我们创建了一个名为`launchIAB`的JavaScript函数来获取URL并打开它：
- en: '[PRE26]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output will be as shown here:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the InApp Browser API](img/B03476_10_23.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![使用InApp浏览器API](img/B03476_10_23.jpg)'
- en: 'Now, we will see the JavaScript involved here. We have handled the load, start,
    and stop events of the InApp Browser:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到这里涉及的JavaScript。我们处理了InApp浏览器的加载、开始和停止事件：
- en: '[PRE27]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The loading start screen will be as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 加载开始屏幕将如下所示：
- en: '![Using the InApp Browser API](img/B03476_10_24.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![使用InApp浏览器API](img/B03476_10_24.jpg)'
- en: Using the Notification API
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用通知API
- en: 'With the Notification API, we can make the phone beep, vibrate, show alerts,
    and input and confirm dialog windows. So for each of these five operations, we
    will have five buttons that each have a trigger event. We have styled the buttons
    using Bootstrap:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 使用通知API，我们可以使手机发出声音、震动、显示警报以及输入和确认对话框。因此，对于这五种操作中的每一种，我们都会有一个按钮，每个按钮都有一个触发事件。我们使用Bootstrap来设计这些按钮：
- en: '[PRE28]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output will be as follows:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the Notification API](img/B03476_10_25.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![使用通知API](img/B03476_10_25.jpg)'
- en: 'The following code is very much self-explanatory. Don''t forget to take note
    of the syntax of the alert, confirm, and prompt dialog boxes:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码非常直观。不要忘记注意警报、确认和提示对话框的语法：
- en: '[PRE29]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The preceding two functions will produce the default beep sound on your device
    three times and vibrate for one second, respectively:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的两个函数将分别在您的设备上产生默认的蜂鸣声三次并振动一秒钟：
- en: '[PRE30]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This is how the alert window is shown:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是如何显示警告窗口的：
- en: '![Using the Notification API](img/B03476_10_26.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![使用通知API](img/B03476_10_26.jpg)'
- en: 'The confirmation box is shown in the following screenshot:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 确认框在以下屏幕截图中显示：
- en: '![Using the Notification API](img/B03476_10_27.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![使用通知API](img/B03476_10_27.jpg)'
- en: 'You can use the prompt dialog to get inputs from the user:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用提示对话框从用户那里获取输入：
- en: '![Using the Notification API](img/B03476_10_28.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![使用通知API](img/B03476_10_28.jpg)'
- en: Using the Splash Screen API
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用启动画面API
- en: Splash screens are the ones that you see when an application start. Although
    not all applications have it, it's available in some famous apps such as Microsoft
    Office Mobile. When the applications start, a fullscreen image shows up and closes
    automatically after a few seconds. This can be used to hide the backend loading
    of the application.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 启动画面是在应用程序启动时看到的。尽管并非所有应用程序都有它，但它在一些著名的应用程序中可用，例如Microsoft Office Mobile。当应用程序启动时，会出现一个全屏图像，并在几秒钟后自动关闭。这可以用来隐藏应用程序的后端加载。
- en: 'We will have a button with a click event to show the splash screen:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将有一个带有点击事件的按钮来显示启动画面：
- en: '[PRE31]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Coming to the JavaScript, we use the `navigator.splashscreen.show()` method
    to show the splash screen, as shown here:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript中，我们使用`navigator.splashscreen.show()`方法来显示启动画面，如下所示：
- en: '[PRE32]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output will be as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the Splash Screen API](img/B03476_10_29.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![使用启动画面API](img/B03476_10_29.jpg)'
- en: 'When the **Show Splash Screen** button is clicked, you will see the splash
    screen open and close after a few seconds:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击**显示启动画面**按钮时，您会在几秒钟后看到启动画面打开和关闭：
- en: '![Using the Splash Screen API](img/B03476_10_30.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![使用启动画面API](img/B03476_10_30.jpg)'
- en: Note that there is also a function of `hide()`, and I am leaving that to you
    to try out.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，还有一个`hide()`函数，我将留给你去尝试。
- en: Using the GeoLocation API
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用地理位置API
- en: 'With the GeoLocation API, we are going to get the location coordinates and
    use Google Maps to plot them in a map:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 使用地理位置API，我们将获取位置坐标并使用谷歌地图在地图上绘制它们：
- en: '[PRE33]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The `div` element with `id` as `geolocation` will hold the geolocation values.
    The `div` element, `googleMap`, will have the Google Map:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`id`为`geolocation`的`div`元素将包含地理位置值。`googleMap`的`div`元素将包含谷歌地图：'
- en: '[PRE34]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output will be as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Using the GeoLocation API](img/B03476_10_31.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![使用地理位置API](img/B03476_10_31.jpg)'
- en: Building the app
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建应用程序
- en: As we have completed the development of the application, we can now build and
    try the app in a real device. You can either use a local build or build using
    the online PhoneGap services.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经完成了应用程序的开发，我们现在可以在真实设备上构建和尝试应用程序。您可以使用本地构建或使用在线PhoneGap服务进行构建。
- en: 'To use the local build using Cordova, use the following command:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Cordova进行本地构建，请使用以下命令：
- en: '[PRE35]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: After the build is complete, the app will be created for all the platforms you
    added when you created the project. You can see the Android app (`.apk`) inside
    the `platforms\android\ant-build\` directory and the iOS app (`.ipa`) inside `platforms/ios/build/device`,
    if you have added the iOS platform.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，应用程序将为您在创建项目时添加的所有平台创建。如果您添加了iOS平台，您可以在`platforms\android\ant-build\`目录中看到Android应用程序（`.apk`），在`platforms/ios/build/device`目录中看到iOS应用程序（`.ipa`）。
- en: You can take the Android `.apk` file and directly install it in the device.
    However, for iOS, you need to perform provisioning. The details are covered in
    [Appendix B](apb.html "Appendix B. Publishing Your App"), *Publishing Your App*.
    Congratulations on creating our full-fledged app using PhoneGap. Now, install
    the app in your real device and enjoy the feel of using your first full-fledged
    application.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接将Android的`.apk`文件安装到设备上。然而，对于iOS，您需要进行配置。详细信息请参阅[附录B](apb.html "附录 B. 发布您的应用")，*发布您的应用*。恭喜您使用PhoneGap创建了一个完整的应用程序。现在，在您的真实设备上安装应用程序并享受使用您第一个完整应用程序的感觉。
- en: Scope for improvements
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改进空间
- en: 'The app that we saw is very basic and there is a lot of scope for improvements.
    The following are a few things that can be done to the app we just finished:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到的应用程序非常基础，有很多改进的空间。以下是对我们刚刚完成的应用程序可以进行的几件事情：
- en: Use a templating engine such as HandleBarJS
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模板引擎，如HandleBarJS
- en: Use the Ionic framework
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic框架
- en: Use RequireJS to dynamically load the required libraries
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用RequireJS动态加载所需的库
- en: Handle hardware-accelerated, GPU-based animations
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理基于硬件加速和GPU的动画
- en: Compress source files
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 压缩源文件
- en: Summary
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have learned how to create an app using PhoneGap and its API. This is just
    a start and there are many more challenges in creating a real-life app. We hope
    this tutorial will be a good foundation for your skills on hybrid app development.
    PhoneGap development is not limited to these APIs and there are several other
    useful plugins to be used. We wish you good luck for your PhoneGap development.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了如何使用PhoneGap及其API创建应用程序。这只是一个开始，在实际应用程序开发中还有许多更多的挑战。我们希望这篇教程能成为你在混合应用程序开发技能上的良好基础。PhoneGap开发不仅限于这些API，还有其他几个有用的插件可供使用。祝你在PhoneGap开发中好运。
