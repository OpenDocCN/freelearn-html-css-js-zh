- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Node.js is considered by many a game-changer—possibly the biggest innovation
    of the decade in web development. It is loved not just for its technical capabilities,
    but also for the paradigm shift that it introduced in web development and, in
    general, in the software development ecosystem.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js被许多人视为变革者——可能是本世纪网络开发领域最大的创新。它不仅因其技术能力而受到喜爱，还因为它在Web开发以及整个软件开发生态系统中引入的范式转变。
- en: First, Node.js applications are written in JavaScript, the most adopted language
    on the web and the only programming language supported natively by every web browser.
    This aspect enables scenarios such as single-language application stacks and the
    sharing of code between the server and the client. A single language also helps
    to reduce the gap between frontend and backend engineers, making backend programming
    extremely approachable and intuitive for frontend developers. Once you are acquainted
    with Node.js and JavaScript, you can easily build software for a wide variety
    of platforms and contexts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，Node.js应用程序是用JavaScript编写的，这是网络上最广泛使用的语言，也是每个网络浏览器原生支持的唯一编程语言。这一特性使得单语言应用程序堆栈和服务器与客户端之间的代码共享成为可能。使用单一语言也有助于缩小前端和后端工程师之间的差距，使得后端编程对前端开发者来说极其易于接近和直观。一旦你熟悉了Node.js和JavaScript，你就可以轻松地为各种平台和环境构建软件。
- en: Node.js itself is contributing to the rise and evolution of the JavaScript language.
    People realize that using JavaScript on the server brings a lot of value, and
    they are loving it for its pragmatism, for its flexibility, its event-driven approach,
    and for its hybrid nature, halfway between object-oriented and functional programming.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js本身正推动JavaScript语言的崛起和演变。人们意识到在服务器上使用JavaScript带来了很多价值，他们喜欢它的实用主义、灵活性、事件驱动的方法以及它介于面向对象和函数式编程之间的混合特性。
- en: The second revolutionizing factor is Node.js' single-threaded programming model
    and its asynchronous architecture. Besides obvious advantages from a performance
    and scalability point of view, this characteristic changed the way developers
    approach concurrency and parallelism. Mutexes are replaced by queues, threads
    by callbacks, and synchronization by causality. These abstractions are generally
    simpler to adopt than their traditional counterparts, but they are still extremely
    powerful, allowing developers to be very productive while solving day-to-day challenges.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个革命性因素是Node.js的单线程编程模型和其异步架构。从性能和可扩展性的角度来看，这一特性带来了明显的优势，同时也改变了开发者处理并发和并行的方式。互斥锁被队列取代，线程被回调函数取代，同步被因果关系取代。这些抽象通常比它们的传统对应物更容易采用，但它们仍然非常强大，允许开发者解决日常挑战时非常高效。
- en: 'The last and most important aspect of Node.js lies in its ecosystem: the npm
    package manager, its constantly growing database of modules, its enthusiastic
    and helpful community, and most importantly, its very own culture based on simplicity,
    pragmatism, and extreme modularity.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js的最后一个也是最重要的方面在于其生态系统：npm包管理器，其不断增长的模块数据库，其热情和乐于助人的社区，最重要的是，其基于简单性、实用性和极端模块化的独特文化。
- en: 'However, because of these peculiarities, Node.js development gives you a very
    different feel compared to other server-side platforms, and any developer new
    to this paradigm will often feel unsure about how to tackle even the most common
    design and coding problems effectively. Common questions include: *How do I organize
    my code? What''s the best way to design this? How can I make my application more
    modular? How do I handle a set of asynchronous calls effectively? How can I make
    sure that my application will not collapse while it grows?* Or more simply, *what''s
    the right way to implement this?* Fortunately, Node.js has become a mature enough
    platform and most of these questions can now be easily answered with a design
    pattern, a proven coding technique, or a recommended practice. The aim of this
    book is to guide you through this emerging world of patterns, techniques, and
    practices, showing you what the proven solutions to the most common problems are
    and teaching you how to use them as the starting point to building the solution
    to your particular problem.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于这些特殊性，Node.js 开发与其他服务器端平台相比给您的感觉非常不同，任何新接触这种范式的新手都经常会感到不确定如何有效地解决甚至最常见的设计和编码问题。常见问题包括：*我该如何组织我的代码？最好的设计方式是什么？我如何使我的应用程序更模块化？我如何有效地处理一系列异步调用？我如何确保我的应用程序在增长过程中不会崩溃？*
    或者更简单地说，*正确的实现方式是什么？* 幸运的是，Node.js 已经成为一个足够成熟的平台，现在大多数这些问题都可以通过设计模式、经过验证的编码技术或推荐的最佳实践轻松回答。本书的目的是引导您进入这个正在出现的模式、技术和实践的世界，向您展示最常见问题的验证解决方案，并教会您如何将它们作为构建特定问题解决方案的起点。
- en: 'By reading this book, you will learn the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读本书，您将学习以下内容：
- en: '**The "Node way"**:'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**“Node 方式”**：'
- en: How to use the right point of view when approaching Node.js development. You
    will learn, for example, how different traditional design patterns look in Node.js,
    or how to design modules that do only one thing.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何在接近 Node.js 开发时使用正确的视角。例如，您将学习不同的传统设计模式在 Node.js 中的样子，或者如何设计只做一件事的模块。
- en: '**A set of patterns to solve common Node.js design and coding problems**:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一套解决常见 Node.js 设计和编码问题的模式**：'
- en: You will be presented with a "Swiss Army knife" of patterns, ready to use in
    order to efficiently solve your everyday development and design problems.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将获得一套“瑞士军刀”般的模式，这些模式可以随时使用，以高效解决您日常的开发和设计问题。
- en: '**How to write scalable and efficient Node.js applications**:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如何编写可扩展和高效的 Node.js 应用程序**：'
- en: You will gain an understanding of the basic building blocks and principles of
    writing large and well-organized Node.js applications that can scale. You will
    be able to apply these principles to novel problems that don't fall within the
    scope of existing patterns.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将了解编写大型且组织良好的 Node.js 应用程序的基本构建块和原则，这些应用程序可以扩展。您将能够将这些原则应用于现有模式范围之外的全新问题。
- en: '**Code in "modern JavaScript"**:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用“现代 JavaScript”编写代码**：'
- en: JavaScript has been around since 1995, but a lot has changed since its first
    inception, especially in these last few years. This book will take advantage of
    the most modern JavaScript features, like the class syntax, promises, generator
    functions, and async/await, giving you a properly up-to-date experience.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: JavaScript 自1995年以来一直存在，但自从其首次推出以来，已经发生了许多变化，尤其是在最近几年。本书将利用最现代的 JavaScript 功能，如类语法、Promise、生成器函数和
    async/await，为您提供最新的体验。
- en: Throughout the book, you will be presented with real-life libraries and technologies,
    such as LevelDB, Redis, RabbitMQ, ZeroMQ, Express, and many others. They will
    be used to demonstrate a pattern or technique, and besides making the example
    more useful, these will also give you great exposure to the Node.js ecosystem
    and its set of solutions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，您将遇到真实的库和技术，如 LevelDB、Redis、RabbitMQ、ZeroMQ、Express 等。它们将被用来展示模式或技术，除了使示例更有用之外，这些还将使您深入了解
    Node.js 生态系统及其解决方案集。
- en: Whether you use or plan to use Node.js for your work, your side project, or
    for an open source project, recognizing and using well-known patterns and techniques
    will allow you to use a common language when sharing your code and design, and
    on top of that, it will help you get a better understanding of the future of Node.js
    and how to make your own contributions a part of it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是使用 Node.js 进行工作、个人项目还是开源项目，识别和使用已知模式和技巧都将使您在分享代码和设计时使用共同的语言，而且更重要的是，它将帮助您更好地理解
    Node.js 的未来以及如何使您自己的贡献成为其中的一部分。
- en: What you need for this book
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书准备的内容
- en: To experiment with the code, you will need a working installation of Node.js
    version 14 (or greater) and npm version 6 (or greater). If some examples will
    require you to use some extra tooling, these will be described accordingly in
    place. You will also need to be familiar with the command line, know how to install
    an npm package, and know how to run Node.js applications. Finally, you will need
    a text editor to work with the code and a modern web browser.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要实验代码，您需要一个可工作的Node.js版本14（或更高版本）和npm版本6（或更高版本）的安装。如果某些示例需要您使用额外的工具，这些工具将相应地在本处描述。您还需要熟悉命令行，知道如何安装npm包，以及如何运行Node.js应用程序。最后，您需要一个文本编辑器来处理代码和一个现代网络浏览器。
- en: Who this book is for
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for developers who have already had initial contact with Node.js
    and now want to get the most out of it in terms of productivity, design quality,
    and scalability. You are only required to have some prior exposure to the technology
    through some basic examples and some degree of familiarity with the JavaScript
    language, since this book will cover some basic concepts as well. Developers with
    intermediate experience in Node.js will also find the techniques presented in
    this book beneficial.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向已经接触过Node.js并希望从生产效率、设计质量和可扩展性方面最大限度地利用它的开发者。您只需通过一些基本示例对技术有所了解，并对JavaScript语言有一定程度的熟悉即可，因为本书还将涵盖一些基本概念。具有Node.js中级经验的开发者也会发现本书中介绍的技术有益。
- en: Some background in software design theory is also an advantage to understand
    some of the concepts presented.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对软件设计理论的一些了解也有助于理解本书中提出的一些概念。
- en: This book assumes that you have a working knowledge of web application development,
    web services, databases, and data structures.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设您已经具备一定的网络应用程序开发、网络服务、数据库和数据结构的工作知识。
- en: What this book covers
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '*Chapter 1*, *The Node.js Platform*, serves as an introduction to the world
    of Node.js application design by showing the patterns at the core of the platform
    itself. It covers the Node.js ecosystem and its philosophy, and provides a quick
    introduction to the Node.js internals and the reactor pattern.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*第一章*，*Node.js平台*，通过展示平台本身的核心模式，为Node.js应用程序设计的世界提供了一个介绍。它涵盖了Node.js生态系统及其哲学，并提供了对Node.js内部和反应器模式的快速介绍。'
- en: '*Chapter 2*, *The Module System*, dives into the module systems available in
    Node.js, underlining the differences between CommonJS and the more modern ES modules
    from the ECMAScript 2015 specification.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*第二章*，*模块系统*，深入探讨了Node.js中可用的模块系统，强调了CommonJS与ECMAScript 2015规范中更现代的ES模块之间的区别。'
- en: '*Chapter 3*, *Callbacks and Events*, introduces the first steps towards learning
    asynchronous coding and its patterns, discussing and comparing callbacks and the event
    emitter (observer pattern).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*第三章*，*回调和事件*，介绍了学习异步编程及其模式的第一步，讨论并比较了回调和事件发射器（观察者模式）。'
- en: '*Chapter 4*, *Asynchronous Control Flow Patterns with Callbacks*, introduces
    a set of patterns and techniques for efficiently handling asynchronous control
    flow in Node.js using callbacks. This chapter teaches you some traditional ways
    to mitigate the "callback hell" problem using plain JavaScript.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*第四章*，*使用回调的异步控制流模式*，介绍了一组在Node.js中使用回调高效处理异步控制流的模式和技巧。本章教您一些使用纯JavaScript减轻“回调地狱”问题的传统方法。'
- en: '*Chapter 5*, *Asynchronous Control Flow Patterns with Promises and Async/Await*,
    progresses with the exploration of more sophisticated and modern asynchronous
    control flow techniques.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*第五章*，*使用Promise和Async/Await的异步控制流模式*，继续探索更复杂和现代的异步控制流技术。'
- en: '*Chapter 6*, *Coding with Streams*, dives deep into one of the most important
    tools in Node.js: streams. It shows you how to process data with transform streams
    and how to combine them into different patterns.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*第六章*，*使用流进行编码*，深入探讨了Node.js中最重要工具之一：流。它展示了如何使用转换流处理数据以及如何将它们组合成不同的模式。'
- en: '*Chapter 7*, *Creational Design Patterns*, starts to explore the traditional
    design patterns in Node.js. In this chapter, you will learn about some of the
    most popular creational design patterns, namely the *Factory* pattern, the *Revealing
    Constructor* pattern, the *Builder* pattern, and the *Singleton* pattern.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*第七章*，*创建型设计模式*，开始探索Node.js中的传统设计模式。在本章中，您将了解一些最受欢迎的创建型设计模式，即*工厂*模式、*揭示构造函数*模式、*构建者*模式和*单例*模式。'
- en: '*Chapter 8*, *Structural Design Patterns*, continues the exploration of traditional
    design patterns in Node.js, covering structural design patterns such as *Proxy*,
    *Decorator*, and *Adapter*.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*第8章*，*结构设计模式*，继续探索Node.js中的传统设计模式，涵盖了诸如*代理*、*装饰器*和*适配器*等结构设计模式。'
- en: '*Chapter 9*, *Behavioral Design Patterns*, concludes the conversation around
    traditional design patterns in Node.js by introducing behavioral design patterns
    like *Strategy*, *State*, *Template*, *Middleware*, *Command*, and *Iterator*.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*第9章*，*行为设计模式*，通过介绍诸如*策略*、*状态*、*模板*、*中间件*、*命令*和*迭代器*等行为设计模式，结束了围绕Node.js中传统设计模式的对话。'
- en: '*Chapter 10*, *Universal JavaScript for Web Applications*, explores one of
    the most interesting capabilities of modern JavaScript web applications: being
    able to share code between the frontend and the backend. Throughout this chapter,
    you will learn the basic principles of Universal JavaScript by building a simple
    web application using modern tools and libraries.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*第10章*，*Web应用程序的通用JavaScript*，探讨了现代JavaScript Web应用程序最有趣的功能之一：能够在前端和后端之间共享代码。在本章中，您将通过使用现代工具和库构建一个简单的Web应用程序来学习通用JavaScript的基本原理。'
- en: '*Chapter 11*, *Advanced Recipes*, takes a problem-solution approach to show
    you how some common coding and design intricacies can be approached with ready-to-use
    solutions.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*第11章*，*高级食谱*，采用问题-解决方案的方法向您展示如何使用现成的解决方案来处理一些常见的编码和设计复杂性。'
- en: '*Chapter 12*, *Scalability and Architectural Patterns*, teaches you the basic
    techniques and patterns for scaling a Node.js application.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*第12章*，*可扩展性和架构模式*，教您扩展Node.js应用程序的基本技术和模式。'
- en: '*Chapter 13*, *Messaging and Integration Patterns*, presents the most important
    messaging patterns, teaching you how to build and integrate complex distributed
    systems using Node.js and its ecosystem.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*第13章*，*消息和集成模式*，介绍了最重要的消息模式，教您如何使用Node.js及其生态系统构建和集成复杂的分布式系统。'
- en: To get the most out of this book
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: To get the most out of this book you can download the example code files and
    the color images as per the instructions below.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要充分利用本书，您可以按照以下说明下载示例代码文件和彩色图像。
- en: Download the example code files
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com/](http://www.packt.com/).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com/](http://www.packt.com/)上的账户下载本书的示例代码文件。如果您在其他地方购买了此书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [http://www.packt.com](http://www.packt.com).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[http://www.packt.com](http://www.packt.com)登录或注册。
- en: Select the **Support** tab.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**支持**选项卡。
- en: Click on **Code Downloads**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: Enter the name of the book in the **Search** box and follow the on-screen instructions.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书籍名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保您使用最新版本的以下软件解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for macOS
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for macOS
- en: 7-Zip / PeaZip for Linux
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [nodejsdp.link/repo](http://nodejsdp.link/repo).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在GitHub上，地址为[nodejsdp.link/repo](http://nodejsdp.link/repo)。如果代码有更新，它将在现有的GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表的彩色图像的PDF文件。您可以从这里下载：[https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839214110_ColorImages.pdf)。
- en: Conventions used
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的约定
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释：
- en: '**Code words in text**: `server.listen(handle)`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本中的代码词**：`server.listen(handle)`'
- en: '**Pathname**: `src/app.js`'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径名**：`src/app.js`'
- en: '**Dummy URL**: `http://localhost:8080`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟URL**：`http://localhost:8080`'
- en: 'A block of code is generally formatted using StandardJS conventions ([nodejsdp.link/standard](http://nodejsdp.link/standard))
    and it is set as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块通常使用StandardJS约定格式化([nodejsdp.link/standard](http://nodejsdp.link/standard))，并设置如下：
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are highlighted in bold:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块中特定部分的注意时，相关的行或项目将以粗体突出显示：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "To explain the problem, we will create a little **web spider**, a command-line
    application that takes in a web URL as the input and downloads its contents locally
    into a file."'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上看到的单词，例如在菜单或对话框中，在文本中如下所示：“为了解释问题，我们将创建一个小型**网络蜘蛛**，这是一个命令行应用程序，它接受网页URL作为输入，并将其内容下载到本地文件中。”'
- en: Warnings or important notes appear like this.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项如下所示。
- en: Tips and tricks appear like this.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门如下所示。
- en: Most URLs are linked through our own short URL system to make it easier for
    readers coming through the print edition to access them. These links are in the
    form [nodejsdp.link/some-descriptive-id](http://nodejsdp.link/some-descriptive-id).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数URL都通过我们自己的短网址系统链接，以便读者通过印刷版更容易访问。这些链接的形式为[nodejsdp.link/some-descriptive-id](http://nodejsdp.link/some-descriptive-id)。
- en: Get in touch
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book, mention
    the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请在邮件主题中提及书名，并将邮件发送至`customercare@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you could report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    select your book, click on the **Errata Submission Form** link, and enter the
    details.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，如果您能向我们报告这一点，我们将不胜感激。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)，选择您的书籍，点击**勘误提交表单**链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you could provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过`copyright@packt.com`与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Reviews
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用过这本书，为何不在您购买它的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，Packt公司可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Packt的更多信息，请访问[packt.com](http://packt.com)。
