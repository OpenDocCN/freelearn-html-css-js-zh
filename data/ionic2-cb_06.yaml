- en: Chapter 6. User Authentication and Push Notification Using Ionic Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章：使用 Ionic Cloud 进行用户认证和推送通知
- en: 'In this chapter, we will cover the following tasks related to authenticating
    users and registering and receiving push notification messages:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖与用户认证、注册和接收推送通知消息相关的以下任务：
- en: Registering and authenticating users using Ionic Cloud
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ionic Cloud 注册和验证用户
- en: Building an iOS app to receive push notifications
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建用于接收推送通知的 iOS 应用
- en: Building an Android app to receive push notifications
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建用于接收推送通知的 Android 应用
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Tracking and engaging users are key features necessary for your app to grow.
    That means you should be able to register and authenticate users. Once the users
    start using the app, you also need to segment the users so that you can customize
    their interactions. Then, you can send push notifications to encourage users to
    revisit the app.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪和吸引用户是您的应用增长的关键功能。这意味着您应该能够注册和验证用户。一旦用户开始使用应用，您还需要对用户进行细分，以便您可以定制他们的交互。然后，您可以发送推送通知来鼓励用户重新访问应用。
- en: 'There are three components that you need to use for your project, as follows:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您的项目需要使用以下三个组件，如下所示：
- en: '**Ionic Cloud**: This is a cloud service that helps save user information and
    coordinate push notifications between you, Apple, or Google and the end users''
    devices.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ionic Cloud**：这是一个云服务，帮助您保存用户信息，并在您、苹果或谷歌与最终用户设备之间协调推送通知。'
- en: '**Ionic Cloud Angular module**: This is just an Angular module to import to
    your local project. It provides some simple utilities for your code to interface
    with Ionic Cloud. Otherwise, directly calling Ionic Cloud API would be very complex.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ionic Cloud Angular 模块**：这只是一个 Angular 模块，用于导入到您的本地项目中。它为您的代码提供了一些与 Ionic
    Cloud 交互的简单实用工具。否则，直接调用 Ionic Cloud API 会非常复杂。'
- en: '**Cordova Push Notification and InAppBrowser**: Since your code is in JavaScript,
    you need to communicate with the device''s native features, such as push notification.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cordova 推送通知和 InAppBrowser**：由于您的代码是用 JavaScript 编写的，您需要与设备的原生功能进行通信，例如推送通知。'
- en: Registering and authenticating users using Ionic Cloud
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ionic Cloud 注册和验证用户
- en: 'Ionic Cloud can provide all of the user management and authentication capabilities
    out of the box. The following providers are supported by Ionic Cloud:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic Cloud 可以提供开箱即用的所有用户管理和认证功能。以下提供者是 Ionic Cloud 支持的：
- en: E-mail/password
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件/密码
- en: Custom authentication
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义认证
- en: Facebook
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脸书
- en: Google
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google
- en: Twitter
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Twitter
- en: Instagram
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Instagram
- en: LinkedIn
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 领英
- en: GitHub
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub
- en: Depending on the app, you may not need to use all of these authentication methods.
    For example, it would make more sense to use a LinkedIn authentication for an
    app focusing on a working professional to narrow down the audiences who fit the
    user profile of the app. If you have your own authentication server where you
    maintain your own user database, you can still use the custom authentication of
    Ionic Cloud to create a custom token.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 根据应用的不同，您可能不需要使用所有这些认证方法。例如，对于专注于职业人士的应用，使用领英认证可能更有意义，以缩小符合应用用户画像的受众范围。如果您有自己的认证服务器，其中您维护自己的用户数据库，您仍然可以使用
    Ionic Cloud 的自定义认证来创建自定义令牌。
- en: 'This chapter will try to simplify the authentication concept as much as possible.
    You will learn how to do the following things:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将尽可能简化认证概念。您将学习如何完成以下事情：
- en: Register a new user
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册新用户
- en: Log in and logging out a user
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录和注销用户
- en: Change user profile data using custom fields
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自定义字段更改用户个人资料数据
- en: 'Observe the following screenshot of the app:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 观察以下应用的截图：
- en: '![Registering and authenticating users using Ionic Cloud](img/image00269.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Ionic Cloud 注册和验证用户](img/image00269.jpeg)'
- en: Getting ready
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can run this app via a browser. There is no need to test user authentication
    using a physical device.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过浏览器运行此应用。无需使用物理设备测试用户认证。
- en: How to do it...
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Observe the following instructions:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 观察以下说明：
- en: 'Create a new `MySimpleAuth` app using the `blank` template, as shown, and go
    to the `MySimpleAuth` folder:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `blank` 模板创建一个新的 `MySimpleAuth` 应用，如图所示，并转到 `MySimpleAuth` 文件夹：
- en: '[PRE0]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install Ionic Cloud Angular using the following command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 Ionic Cloud Angular：
- en: '[PRE1]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Initialize your Ionic Cloud setting so that an app ID can be created in your
    account, as follows:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化您的 Ionic Cloud 设置，以便在您的账户中创建一个应用 ID，如下所示：
- en: '[PRE2]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will be prompted to log in to your Ionic Cloud account for this command
    line. The initialization process will save the `app_id` and `api_key` values to
    your project's `ionic.io.bundle.min.js`. This means you cannot change the project
    in your Ionic Cloud account after this (or you will have to manually remove the
    IDs and reinitialize). Your app ID is also recorded in the `ionic.config.json`
    file.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行此命令行时，将提示你登录到你的 Ionic Cloud 账户。初始化过程会将 `app_id` 和 `api_key` 值保存到你的项目 `ionic.io.bundle.min.js`
    中。这意味着在此之后你不能更改你的 Ionic Cloud 账户中的项目（否则你将不得不手动删除 ID 并重新初始化）。你的应用 ID 也记录在 `ionic.config.json`
    文件中。
- en: Log in to your Ionic Cloud at [https://apps.ionic.io](https://apps.ionic.io).
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的 [https://apps.ionic.io](https://apps.ionic.io) 的 Ionic Cloud。
- en: Identify the new app that you initialized and copy the app ID (that is, `7588ce26`),
    as shown in the following screenshot:![How to do it...](img/image00270.jpeg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别你初始化的新应用并复制应用 ID（即 `7588ce26`），如下截图所示：![如何做...](img/image00270.jpeg)
- en: 'Open and edit `./src/app/app.module.ts` with the following code:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码打开并编辑 `./src/app/app.module.ts`：
- en: '[PRE3]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You need to ensure that the `app_id` has the correct value in your case.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要确保 `app_id` 在你的情况下具有正确的值。
- en: 'Edit and replace ./src/pages/home/home.html with the following code:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码编辑并替换 ./src/pages/home/home.html：
- en: '[PRE4]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: These are just your basic `login` and `logout` templates. It's all in a single
    page to keep things simple.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些只是基本的 `登录` 和 `注销` 模板。所有内容都在一个页面上以保持简单。
- en: 'Open and edit `./src/pages/home/home.ts` with the following code:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码打开并编辑 `./src/pages/home/home.ts`：
- en: '[PRE5]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The preceding code provides four methods to register, save data, log in, and
    log out a user.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码提供了四种方法来注册、保存数据、登录和注销用户。
- en: 'Finally, add a minor `input` field alignment in `./src/pages/home/home.scss`,
    as follows:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在 `./src/pages/home/home.scss` 中添加一个小的 `input` 字段对齐，如下所示：
- en: '[PRE6]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Go to your Terminal and run the app:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你的终端并运行应用：
- en: '[PRE7]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works...
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作...
- en: 'In a nutshell, Ionic Cloud acts as a backend server for your app. It allows
    you to create a new user record in its database. Through the `user` class, you
    can interact with the Ionic Cloud authentication system. The first step is to
    register the user. This takes an **Email** and **Password** as shown in the following
    screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Ionic Cloud 作为你的应用的后端服务器。它允许你在其数据库中创建新的用户记录。通过 `user` 类，你可以与 Ionic Cloud
    认证系统交互。第一步是注册用户。这需要一个 **电子邮件** 和 **密码**，如下截图所示：
- en: '![How it works...](img/image00271.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00271.jpeg)'
- en: 'When you click on **Register**, the following code will be executed:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击 **注册** 时，以下代码将被执行：
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `details` object has the e-mail and password from the form. Once it has
    successfully completed, it will automatically log in the user via `this.auth.login`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`details` 对象包含表单中的电子邮件和密码。一旦成功完成，它将通过 `this.auth.login` 自动登录用户。'
- en: 'Note that this piece of code here is just to show the loading screen to prevent
    the user from clicking on the Register button multiple times:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这里的这段代码只是为了显示加载屏幕，防止用户多次点击注册按钮：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This example app only has **Name** and **Birthday** as custom user data, as
    illustrated in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例应用仅包含 **姓名** 和 **生日** 作为自定义用户数据，如下截图所示：
- en: '![How it works...](img/image00272.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00272.jpeg)'
- en: 'To save the **User Profile**, you call the `save()` method as shown in the
    following code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存 **用户资料**，你调用 `save()` 方法，如下代码所示：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you look into the console log, the user token and custom data are also available,
    as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看控制台日志，用户令牌和自定义数据也都可以看到，如下截图所示：
- en: '![How it works...](img/image00273.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00273.jpeg)'
- en: You can also view the **UserData** in the Ionic Cloud portal. Log in to your
    account and navigate to your app's **Auth** menu.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在 Ionic Cloud 门户中查看 **UserData**。登录到你的账户并导航到应用的 **认证** 菜单。
- en: 'Click on the **VIEW** button of the user you created, as shown in the following
    screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 点击你创建的用户旁边的 **查看** 按钮，如下截图所示：
- en: '![How it works...](img/image00274.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00274.jpeg)'
- en: 'Select the **CUSTOM DATA** tab and you can see the same information stored
    for the user, as illustrated in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 **自定义数据** 选项卡，你可以看到为用户存储的相同信息，如下截图所示：
- en: '![How it works...](img/image00275.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00275.jpeg)'
- en: For more information about user authentication, you may want to refer the official
    Ionic documentation at [http://docs.ionic.io/services/users/](http://docs.ionic.io/services/users/).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于用户认证的信息，你可能需要参考官方的 Ionic 文档，网址为 [http://docs.ionic.io/services/users/](http://docs.ionic.io/services/users/)。
- en: Building an iOS app to receive push notifications
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个用于接收推送通知的 iOS 应用
- en: Push notification is an important feature to engage users frequently, especially
    when the users are not using the app. Many people download an app but only open
    it a few times. If you send them a push notification message, it will encourage
    them to open the app to get involved in a new activity. Implementing push notifications
    is very complex if you have to build everything from scratch. However, Ionic makes
    it very simple by leveraging the Cordova Push Notification plugin and Ionic Cloud
    as the providers. A push notification provider is a server that can communicate
    with the **Apple Push Notification service** (**APNs**) or Google's **Firebase
    Cloud Messaging** (**FCM**). You can set up your own provider server using existing
    open sources, but you have to maintain this server separately and keep up with
    potential changes from the APN APIs.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 推送通知是吸引用户频繁参与的重要功能，尤其是在用户没有使用应用时。许多人下载了应用，但只打开了几次。如果你向他们发送推送通知消息，这将鼓励他们打开应用参与新的活动。如果你必须从头开始构建一切，实现推送通知非常复杂。然而，Ionic
    通过利用 Cordova 推送通知插件和 Ionic Cloud 作为提供商，使这个过程变得非常简单。推送通知提供商是一个可以与 **Apple 推送通知服务**
    (**APNs**) 或 Google 的 **Firebase 云消息** (**FCM**) 通信的服务器。你可以使用现有的开源软件设置自己的提供商服务器，但你必须单独维护此服务器，并跟上
    APN API 的潜在变化。
- en: 'In this section, you will learn how to do the following things:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习以下内容：
- en: Set up Ionic Cloud for iOS Push Notification
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Ionic Cloud 以支持 iOS 推送通知
- en: Configure iOS app, certificates (App and Push), and provisioning profile
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 iOS 应用、证书（应用和推送）以及配置文件
- en: Write code to receive push notifications
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写代码以接收推送通知
- en: 'The following is a screenshot of the app after receiving a couple of notification
    messages:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在接收了几条通知消息后应用的截图：
- en: '![Building an iOS app to receive push notifications](img/image00276.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![构建一个用于接收推送通知的 iOS 应用](img/image00276.jpeg)'
- en: Getting ready
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: It's required to have a physical iOS device available in order to test for notification
    messages.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试通知消息，需要有一个可用的物理 iOS 设备。
- en: You must also register for the **Apple Developer Program** (**ADP**) in order
    to access [https://developer.apple.com](https://developer.apple.com) and [https://itunesconnect.apple.com](https://itunesconnect.apple.com)
    because these websites will require an approved account.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你还必须注册 **Apple 开发者计划** (**ADP**)，以便访问 [https://developer.apple.com](https://developer.apple.com)
    和 [https://itunesconnect.apple.com](https://itunesconnect.apple.com)，因为这些网站将需要经过批准的账户。
- en: 'In addition, the following instructions use the specific version of these components:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下说明使用了这些组件的具体版本：
- en: Mac OSX El Capitan 10.11.4
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OSX El Capitan 10.11.4
- en: Xcode 7.3.1
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xcode 7.3.1
- en: Ionic CLI 2.1.8
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic CLI 2.1.8
- en: Cordova 6.4.0
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cordova 6.4.0
- en: Node 6.8.1
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node 6.8.1
- en: NPM 3.10.8
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPM 3.10.8
- en: How to do it...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Observe the following instructions:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细阅读以下说明：
- en: 'Create a new `MyiOSPush` app using the `blank` template, as shown, and go to
    the `MyiOSPush` folder:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `blank` 模板创建一个新的 `MyiOSPush` 应用，如图所示，然后进入 `MyiOSPush` 文件夹：
- en: '[PRE11]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Install the Ionic `cloud-angular` client, which is a library to interact with
    the `push` object, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Ionic `cloud-angular` 客户端，这是一个用于与 `push` 对象交互的库，安装方法如下：
- en: '[PRE12]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You need to have Node version 4.x or later and NPM version 3.x or later.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要拥有 Node 版本 4.x 或更高版本以及 NPM 版本 3.x 或更高版本。
- en: 'Initialize your Ionic Cloud setting, as illustrated, so that an app ID can
    be created in your account:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照图示初始化你的 Ionic Cloud 设置，以便在你的账户中创建一个应用 ID：
- en: '[PRE13]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will be prompted to log in to your Ionic Cloud account for this command
    line. The initialization process will save the `app_id` and `api_key` values to
    your project's `ionic.io.bundle.min.js`. This means you cannot change the project
    in your Ionic Cloud account after this (or you will have to manually remove the
    IDs and reinitialize). Your app ID is also recorded in the `ionic.config.json`
    file.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此命令行中，你将被提示登录你的 Ionic Cloud 账户。初始化过程将保存 `app_id` 和 `api_key` 值到你的项目的 `ionic.io.bundle.min.js`
    文件中。这意味着在此之后你不能更改你的 Ionic Cloud 账户中的项目（否则你将不得不手动删除 ID 并重新初始化）。你的应用 ID 也记录在 `ionic.config.json`
    文件中。
- en: 'You need to install the Cordova Push Notification plugin and provide some value
    as `SENDER_ID`. Since you are only using iOS Push Notification, you can just provide
    a fake value, temporarily, here, as shown in the following code:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要安装Cordova推送通知插件，并提供一些值作为`SENDER_ID`。由于您仅使用iOS推送通知，您可以在这里提供一个假值，暂时如下所示：![如何操作...](img/image00290.jpeg)
- en: '[PRE14]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Open your `./ionic.config.json` file in the project folder and copy the `app_id`
    value. In this case, the value is `00f293c4` from the following code:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目文件夹中打开您的`./ionic.config.json`文件，并复制`app_id`值。在这种情况下，值是`00f293c4`，如下所示：
- en: '[PRE15]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Open and edit `./src/app/app.module.ts` with the following content:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下内容打开并编辑`./src/app/app.module.ts`：
- en: '[PRE16]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You must replace `''app_id'': ''00f293c4''` with your own app ID.'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '您必须将`''app_id'': ''00f293c4''`替换为您自己的App ID。'
- en: Visit the Apple Developer website at [https://developer.apple.com](https://developer.apple.com)
    and log in with your credentials.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Apple开发者网站[https://developer.apple.com](https://developer.apple.com)，并使用您的凭据登录。
- en: Click on **Certificates, Identifiers & Profiles**, as illustrated in the following
    screenshot:![How to do it...](img/image00277.jpeg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**证书、标识符和配置文件**，如图所示：![如何操作...](img/image00277.jpeg)
- en: Select the correct device platform you are targeting. In this case, it will
    be **iOS, tvOS, watchOS** as shown in the following screenshot:![How to do it...](img/image00278.jpeg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您要针对的正确设备平台。在这种情况下，它将是**iOS、tvOS、watchOS**，如图所示：![如何操作...](img/image00278.jpeg)
- en: Navigate to **Identifiers** > **App IDs** to create an app ID, as illustrated
    in the following screenshot:![How to do it...](img/image00279.jpeg)
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**标识符** > **App ID**以创建一个App ID，如图所示：![如何操作...](img/image00279.jpeg)
- en: Click on the plus(**+**) button in the top right corner of the screen, as shown
    in the following screenshot:![How to do it...](img/image00280.jpeg)
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右上角的加号(**+**)按钮，如图所示：![如何操作...](img/image00280.jpeg)
- en: Fill in the form to register your **App ID**. The **Name** field could be anything
    and it's not the same Ionic Cloud's app ID. You can provide the name of your project
    (that is, `MyiOSPush`) to keep things simple, as shown:![How to do it...](img/image00281.jpeg)
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写表格以注册您的**App ID**。**名称**字段可以是任何内容，并且它与Ionic Cloud的App ID不同。您可以为您的项目（即`MyiOSPush`）提供名称以保持简单，如图所示：![如何操作...](img/image00281.jpeg)
- en: The important part that you need to do correctly here is the **Bundle ID** because
    it must match your bundle identifier in the `./config.xml` file or Xcode, as illustrated:![How
    to do it...](img/image00282.jpeg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里需要正确操作的重要部分是**捆绑ID**，因为它必须与`./config.xml`文件或Xcode中的捆绑标识符匹配，如图所示：![如何操作...](img/image00282.jpeg)
- en: To enable push notifications, you need to check the **Push Notification** service
    on the following page:![How to do it...](img/image00283.jpeg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用推送通知，您需要在以下页面检查**推送通知**服务：![如何操作...](img/image00283.jpeg)
- en: Select **Register**, as shown:![How to do it...](img/image00284.jpeg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**注册**，如图所示：![如何操作...](img/image00284.jpeg)
- en: Select **Done** to complete the step to create **App ID**, as follows:![How
    to do it...](img/image00285.jpeg)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**完成**以完成创建**App ID**的步骤，如图所示：![如何操作...](img/image00285.jpeg)
- en: To start with certificate creation, you will need to generate a certificate
    signing request file locally on your Mac OSX using **Keychain Access**. Navigate
    to the **Keychain Access** top left menu and navigate to **Certificate Assistant**
    > **Request a Certificate From a Certificate Authority…**, as illustrated:![How
    to do it...](img/image00286.jpeg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始证书创建，您需要在Mac OSX本地使用**钥匙串访问**生成证书签名请求文件。导航到**钥匙串访问**左上角的菜单，并导航到**证书助手** >
    **从证书颁发机构请求证书…**，如图所示：![如何操作...](img/image00286.jpeg)
- en: Enter your **User Email Address** and **Common Name**. Leave the **CA Email
    Address** field blank and check **Saved to disk**, as shown:![How to do it...](img/image00287.jpeg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的**用户电子邮件地址**和**通用名称**。将**CA电子邮件地址**字段留空，并勾选**保存到磁盘**，如图所示：![如何操作...](img/image00287.jpeg)
- en: Save your `CertificateSigningRequest.certSigningRequest` file, as follows:![How
    to do it...](img/image00288.jpeg)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的`CertificateSigningRequest.certSigningRequest`文件，如下所示：![如何操作...](img/image00288.jpeg)
- en: Navigate to the Apple Developer website and navigate to **Certificates** > **All**,
    as shown:![How to do it...](img/image00289.jpeg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Apple开发者网站，并导航到**证书** > **所有**，如图所示：![如何操作...](img/image00289.jpeg)
- en: Click on the plus button in the top right corner to start creating a certificate,
    as follows:![How to do it...](img/image00290.jpeg)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的加号按钮开始创建证书，如下所示：![如何操作...](img/image00290.jpeg)
- en: You just have to go through the steps on the website to fill out the necessary
    information. In this example, you will select the **Development** version instead
    of **Production**, as illustrated:![How to do it...](img/image00291.jpeg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您只需按照网站上的步骤填写必要的信息。在这个例子中，您将选择**开发**版本而不是**生产**版本，如图所示：![如何操作...](img/image00291.jpeg)
- en: Click on the **Continue** button, as follows, to proceed:![How to do it...](img/image00292.jpeg)
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式点击**继续**按钮以继续：![如何操作...](img/image00292.jpeg)
- en: Click on the **Choose File…** button, as shown in the following screenshot,
    to upload your signing request file that you saved earlier:![How to do it...](img/image00293.jpeg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如图所示点击**选择文件…**按钮，上传您之前保存的签名请求文件：![如何操作...](img/image00293.jpeg)
- en: Click on the **Continue** button, as illustrated, to proceed:![How to do it...](img/image00294.jpeg)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击如图所示的**继续**按钮以继续：![如何操作...](img/image00294.jpeg)
- en: Click on the **Download** button to download your iOS Development certificate
    file:![How to do it...](img/image00295.jpeg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮以下载您的iOS开发证书文件：![如何操作...](img/image00295.jpeg)
- en: Click on the `.cer` file you downloaded, as shown, so that it can be imported
    to **Keychain Access**:![How to do it...](img/image00296.jpeg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击您下载的`.cer`文件，如图所示，以便将其导入到**钥匙串访问**：![如何操作...](img/image00296.jpeg)
- en: Locate your certificate in **Keychain Access** because you need to export this
    to the `.p12` file format. Ionic Cloud will need this file later in order to generate
    a push token and send push notifications to the app. Observe the following screenshot:![How
    to do it...](img/image00297.jpeg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**钥匙串访问**中找到您的证书，因为您需要将其导出为`.p12`文件格式。Ionic Cloud稍后需要此文件以生成推送令牌并向应用发送推送通知。观察以下截图：![如何操作...](img/image00297.jpeg)
- en: Right click and select **Export** from the drop-down menu:![How to do it...](img/image00298.jpeg)
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击并从下拉菜单中选择**导出**：![如何操作...](img/image00298.jpeg)
- en: Save your `Certificates.p12` file, as illustrated, so that you can import it
    to Ionic Cloud later:![How to do it...](img/image00299.jpeg)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如图所示保存您的`Certificates.p12`文件，以便您可以在以后将其导入到Ionic Cloud：![如何操作...](img/image00299.jpeg)
- en: As illustrated in the following screenshot, provide a password to protect this
    file:![How to do it...](img/image00300.jpeg)
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如以下截图所示，为此文件提供密码以保护它：![如何操作...](img/image00300.jpeg)
- en: Note
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You must provide a password in this step although it's optional in **Keychain
    Access**. The reason is that Ionic Cloud cannot import a `.p12` file without a
    password.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此步骤中，您必须提供密码，尽管在**钥匙串访问**中它是可选的。原因是Ionic Cloud无法在没有密码的情况下导入`.p12`文件。
- en: If you need to push the app to a specific device, you must register the device.
    Go to **Devices** > **All**:![How to do it...](img/image00301.jpeg)
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要将应用推送到特定设备，您必须注册该设备。转到**设备** > **所有**：![如何操作...](img/image00301.jpeg)
- en: Click on the plus button:![How to do it...](img/image00302.jpeg)
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号按钮：![如何操作...](img/image00302.jpeg)
- en: Provide the device **UDID** and save to register the device. Observe the following
    screenshot:![How to do it...](img/image00303.jpeg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供设备的**UDID**并保存以注册设备。观察以下截图：![如何操作...](img/image00303.jpeg)
- en: You'll need a provisioning profile. Navigate to **Provisioning Profiles** >
    **All**:![How to do it...](img/image00304.jpeg)
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要配置文件。导航到**配置文件** > **所有**：![如何操作...](img/image00304.jpeg)
- en: Click on the plus button:![How to do it...](img/image00305.jpeg)
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号按钮：![如何操作...](img/image00305.jpeg)
- en: Select **iOS App Development** as your provisioning profile since this example
    is for the development version only:![How to do it...](img/image00306.jpeg)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**iOS应用开发**作为您的配置文件，因为此示例仅针对开发版本：![如何操作...](img/image00306.jpeg)
- en: Click on the **Continue** button:![How to do it...](img/image00307.jpeg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**按钮：![如何操作...](img/image00307.jpeg)
- en: Select the correct **App ID** in the drop-down menu and save to finalize your
    provisioning profile creation:![How to do it...](img/image00308.jpeg)
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下拉菜单中选择正确的**App ID**并保存以完成您的配置文件创建：![如何操作...](img/image00308.jpeg)
- en: Click on the **Continue** button:![How to do it...](img/image00309.jpeg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**按钮：![如何操作...](img/image00309.jpeg)
- en: Select the iOS Development certificate you created earlier, as shown in the
    following screenshot:![How to do it...](img/image00310.jpeg)
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您之前创建的iOS开发证书，如图所示：![如何操作...](img/image00310.jpeg)
- en: As illustrated, select at least one device that you want to be able to install
    the app for testing:![How to do it...](img/image00311.jpeg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如以下截图所示，选择至少一个您想要安装应用进行测试的设备：![如何操作...](img/image00311.jpeg)
- en: Provide a **Profile Name** to your provisioning profile, as shown:![How to do
    it...](img/image00312.jpeg)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的配置文件提供**配置文件名称**，如图所示：![如何操作...](img/image00312.jpeg)
- en: Click on the **Download** button to download the provisioning profile file (that
    is, `MyiOSPush_Provisioning_Profile.mobileprovision`):![How to do it...](img/image00313.jpeg)
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮以下载配置文件文件（即`MyiOSPush_Provisioning_Profile.mobileprovision`）：![如何操作...](img/image00313.jpeg)
- en: Click on `MyiOSPush_Provisioning_Profile.mobileprovision`, which you just downloaded,
    in order to import it into Xcode:![How to do it...](img/image00314.jpeg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你刚刚下载的`MyiOSPush_Provisioning_Profile.mobileprovision`，以便将其导入到Xcode中：![如何操作...](img/image00314.jpeg)
- en: Note
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This step is very important because if you don't import it into Xcode, your
    app cannot be built successfully. If your app failed to build because of an invalid
    provisioning profile, it's best to check the provisioning profile status in the
    Developer console.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一步非常重要，因为如果你没有将其导入到Xcode中，你的应用将无法成功构建。如果你的应用因为无效的配置文件而无法构建，最好在开发者控制台中检查配置文件状态。
- en: To enable the **Push Notification** feature, you must request a **Push Certificate**,
    which is different from the app certificate. Select the **App ID** that you created
    earlier (that is, `MyiOSPush`):![How to do it...](img/image00315.jpeg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用**推送通知**功能，你必须请求一个**推送证书**，它与应用证书不同。选择你之前创建的**App ID**（即`MyiOSPush`）：![如何操作...](img/image00315.jpeg)
- en: Click on the **Edit** button at the bottom of the page:![How to do it...](img/image00316.jpeg)
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**编辑**按钮：![如何操作...](img/image00316.jpeg)
- en: Note
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The **Push Notifications** must show the **Configurable** state. Otherwise,
    your app is not available for **Push Notifications**.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**推送通知**必须显示**可配置**状态。否则，你的应用将无法使用**推送通知**。'
- en: Click on the **Create Certificates...** button under the **Push Notifications**
    > **Development SSL Certificate** section:![How to do it...](img/image00317.jpeg)
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**推送通知** > **开发SSL证书**部分下的**创建证书...**按钮：![如何操作...](img/image00317.jpeg)
- en: You will be taken to a new page to create your CSR file. Click on the **Continue**
    button:![How to do it...](img/image00318.jpeg)
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将被带到新页面以创建你的CSR文件。点击**继续**按钮：![如何操作...](img/image00318.jpeg)
- en: Click on the **Choose File...** button:![How to do it...](img/image00319.jpeg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击底部的**选择文件...**按钮：![如何操作...](img/image00319.jpeg)
- en: Locate the `CertificateSigningRequest.certSigningRequest` file that you created
    earlier:![How to do it...](img/image00320.jpeg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到你之前创建的`CertificateSigningRequest.certSigningRequest`文件：![如何操作...](img/image00320.jpeg)
- en: Note
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You must upload the same, `.certSigningRequest` file as you did for the app
    certificate. Otherwise, your app will not receive push notifications and it's
    very hard to debug.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你必须上传与应用证书相同的`.certSigningRequest`文件。否则，你的应用将无法接收推送通知，并且很难调试。
- en: Click on the **Continue** button:![How to do it...](img/image00321.jpeg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**按钮：![如何操作...](img/image00321.jpeg)
- en: Click on the **Download** button to download the certificate file. You can name
    it `aps_certificate.cer` to avoid overwriting to the earlier `.cer` file:![How
    to do it...](img/image00322.jpeg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮以下载证书文件。你可以将其命名为`aps_certificate.cer`以避免覆盖早期的`.cer`文件：![如何操作...](img/image00322.jpeg)
- en: Once your `.cer` file is downloaded, you need to click on it to import it to
    **Keychain Access**:![How to do it...](img/image00323.jpeg)
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完`.cer`文件后，你需要点击它以将其导入到**钥匙串访问**：![如何操作...](img/image00323.jpeg)
- en: Locate the new push services certificate in **Keychain Access** and select it,
    as illustrated in the following screenshot:![How to do it...](img/image00324.jpeg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**钥匙串访问**中找到新的推送服务证书并选择它，如图所示：![如何操作...](img/image00324.jpeg)
- en: Right click on the certificate and select **Export**:![How to do it...](img/image00325.jpeg)
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击证书并选择**导出**：![如何操作...](img/image00325.jpeg)
- en: Give it a new name to avoid overwriting it to the app certificate. This process
    is, basically, converting a `.cer` to `.p12` file for Ionic Cloud:![How to do
    it...](img/image00326.jpeg)
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给它一个新的名称以避免覆盖应用证书。这个过程基本上是将`.cer`文件转换为`.p12`文件以供Ionic Cloud使用：![如何操作...](img/image00326.jpeg)
- en: Provide a password for this `.p12` file to protect it:![How to do it...](img/image00327.jpeg)
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为这个`.p12`文件提供密码以保护它：![如何操作...](img/image00327.jpeg)
- en: Note
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Password for the `.p12` file is required because Ionic Cloud will not import
    a `.p12` file for APN without password.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`.p12`文件的密码是必需的，因为Ionic Cloud不会导入没有密码的APN `.p12`文件。'
- en: Once you have completed the setup on the Apple Developer website, you need to
    upload the provisioning profile and two certificates (app and push) to Ionic Cloud.
    Navigate to [https://apps.ionic.io](https://apps.ionic.io) and log in with your
    credentials.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成在Apple开发者网站上的设置后，您需要将配置文件和两个证书（应用和推送）上传到Ionic Cloud。导航到[https://apps.ionic.io](https://apps.ionic.io)并使用您的凭据登录。
- en: Select the app generated for this project (that is, `MyiOSPush`):![How to do
    it...](img/image00328.jpeg)
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择为此项目生成的应用（即`MyiOSPush`）：![如何操作...](img/image00328.jpeg)
- en: Navigate to **Settings** > **Certificates**:![How to do it...](img/image00329.jpeg)
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**设置** > **证书**：![如何操作...](img/image00329.jpeg)
- en: Select **New Security Profile**:![How to do it...](img/image00330.jpeg)
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**新建安全配置文件**：![如何操作...](img/image00330.jpeg)
- en: Provide a **Profile Name** and click on the **Create** button to save the profile:![How
    to do it...](img/image00331.jpeg)
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供一个**配置文件名称**并点击**创建**按钮以保存配置文件：![如何操作...](img/image00331.jpeg)
- en: Select **EDIT** next to the `MyPushProfile` that you just created to edit the
    settings:![How to do it...](img/image00332.jpeg)
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您刚刚创建的`MyPushProfile`旁边的**编辑**以编辑设置：![如何操作...](img/image00332.jpeg)
- en: 'You will need to upload three files: a provisioning profile, and app development
    certificate for the app itself, and an APN certificate for push notification.
    Let''s start with the app requirements. Click on **Choose File** under **Build
    Credentials** and upload two files: `Certificates.p12` (from Step 30) and `MyiOSPush_Provisioning_Profile.mobileprovision`
    (from Step 44). Ensure that you provide the same password that you used to protect
    the `.p12` file earlier:![How to do it...](img/image00333.jpeg)'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要上传三个文件：一个配置文件，一个用于应用本身的应用开发证书，以及一个用于推送通知的APN证书。让我们从应用要求开始。在**构建凭据**下的**选择文件**处点击，上传两个文件：`Certificates.p12`（第30步）和`MyiOSPush_Provisioning_Profile.mobileprovision`（第44步）。确保您提供与之前保护`.p12`文件相同的密码：![如何操作...](img/image00333.jpeg)
- en: Click on **Choose File** under **Push Notification Service** and upload the
    `push_Certificates.p12` file (from Step 58). Ensure that you provide the same
    password that protects this file:![How to do it...](img/image00334.jpeg)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**推送通知服务**下点击**选择文件**并上传`push_Certificates.p12`文件（第58步）。确保您提供保护此文件的相同密码：![如何操作...](img/image00334.jpeg)
- en: Note
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: You should not get confused between the two `.p12` files as one is for your
    app and one is for your push notification feature.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您不应混淆两个`.p12`文件，因为一个是您的应用，另一个是您的推送通知功能。
- en: Click on the **Save** button to save your security profile. This completes your
    Ionic Cloud setup for push notification.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮以保存您的安全配置文件。这完成了您的推送通知的Ionic Cloud设置。
- en: 'You need to modify your home page code in order to receive notification messages.
    Open and edit `./src/pages/home/home.html` and paste the given code:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要修改主页代码以接收通知消息。打开并编辑`./src/pages/home/home.html`，然后粘贴以下代码：
- en: '[PRE17]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Replace the content of the `home.ts` file, in the same folder, with the following
    code:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将同一文件夹中的`home.ts`文件的内容替换为以下代码：
- en: '[PRE18]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Replace `home.scss`, also in the `/home` folder, with the given code:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`/home`文件夹中的`home.scss`替换为以下代码：
- en: '[PRE19]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Connect your physical iPhone to the Mac via a USB connection.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB连接将您的物理iPhone连接到Mac。
- en: 'Ensure that you are in the app folder and build for the iOS platform, as follows:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您位于应用文件夹中，并针对iOS平台进行构建，如下所示：
- en: '[PRE20]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: You may need to include the `--device` parameter at the end due to an existing
    bug with Ionic 2.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于Ionic 2存在一个现有错误，您可能需要在末尾包含`--device`参数。
- en: The OS will prompt to allow codesign to sign using the iOS Developer certificate.
    You must accept this to allow access in order to build the app and upload it to
    your device:![How to do it...](img/image00335.jpeg)
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 操作系统将提示允许使用iOS开发者证书进行codesign签名。您必须接受此提示以允许访问，以便构建应用并将其上传到您的设备：![如何操作...](img/image00335.jpeg)
- en: Verify that the app has been running successfully on the device. The initial
    screen should look as illustrated:![How to do it...](img/image00336.jpeg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证应用是否在设备上成功运行。初始屏幕应如图所示：![如何操作...](img/image00336.jpeg)
- en: 'At this point, you have completed the push notification setup and coding. The
    next step is to verify that you receive notifications via the app. Here are the
    instructions:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已完成了推送通知的设置和编码。下一步是验证您是否通过应用接收通知。以下是说明：
- en: Click on the **Register Push** button in the mobile app to register for push
    notification to the Ionic Cloud provider server to acquire a token. Click on **OK**
    to accept permission to receive push notifications, as follows:![How to do it...](img/image00337.jpeg)
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在移动应用中点击 **注册推送** 按钮以向 Ionic Cloud 提供者服务器注册推送通知并获取令牌。点击 **确定** 接受接收推送通知的权限，如下所示：![如何操作...](img/image00337.jpeg)
- en: Navigate to **Ionic Cloud** > your app (**MyiOSPush**) > **Push**:![How to do
    it...](img/image00338.jpeg)
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **Ionic Cloud** > 您的应用 (**MyiOSPush**) > **推送**：![如何操作...](img/image00338.jpeg)
- en: Click on the **CREATE YOUR FIRST PUSH** button:![How to do it...](img/image00339.jpeg)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建您的第一个推送** 按钮：![如何操作...](img/image00339.jpeg)
- en: Fill in the push notification form to create your first push message:![How to
    do it...](img/image00340.jpeg)
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写推送通知表单以创建您的第一个推送消息：![如何操作...](img/image00340.jpeg)
- en: Verify on the right screen to ensure that the push message is displayed as desired:![How
    to do it...](img/image00341.jpeg)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧屏幕上验证以确保推送消息显示如预期：![如何操作...](img/image00341.jpeg)
- en: Leave the segment as **All users** so that anyone can get the push:![How to
    do it...](img/image00342.jpeg)
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将段保留为 **所有用户**，以便任何人都可以接收推送：![如何操作...](img/image00342.jpeg)
- en: Select the security profile (that is, `mypushprofile`) that you created earlier.
    Then, click on the **Send this Push** button:![How to do it...](img/image00343.jpeg)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您之前创建的安全配置文件（即 `mypushprofile`）。然后，点击 **发送此推送** 按钮：![如何操作...](img/image00343.jpeg)
- en: Verify that the push notification has been sent successfully from Ionic Cloud.
    It should have the **Sent** status, as shown:![How to do it...](img/image00344.jpeg)
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证从 Ionic Cloud 发送的推送通知是否成功。它应该有 **已发送** 状态，如下所示：![如何操作...](img/image00344.jpeg)
- en: In the app on your mobile device, verify that the push message has appeared
    as illustrated:![How to do it...](img/image00345.jpeg)
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的移动设备上的应用中，验证推送消息是否已按图示出现：![如何操作...](img/image00345.jpeg)
- en: You have successfully completed the verification steps.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功完成验证步骤。
- en: How it works...
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'To understand how the entire process works, let''s summarize what you have
    done, as shown in the following section:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解整个流程是如何工作的，让我们总结一下您所做的工作，如下所示：
- en: 'Created an Ionic project and initialized it to create an Ionic Cloud project:'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个 Ionic 项目并将其初始化以创建一个 Ionic Cloud 项目：
- en: Your Ionic project on the local computer must sync with the Ionic Cloud project
    for push notifications and other management, such as user authentication
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您本地的 Ionic 项目必须与 Ionic Cloud 项目同步，以便进行推送通知和其他管理，例如用户身份验证
- en: 'Set up your Apple Developer account by doing the following things:'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过以下步骤设置您的苹果开发者账户：
- en: Created an app ID
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个应用 ID
- en: Created app certificate (after creating a signing request locally via **Keychain
    Access**)
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了应用证书（在本地通过 **Keychain Access** 创建签名请求之后）
- en: Created a provisioning profile
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个配置文件
- en: Created a push certificate
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个推送证书
- en: 'Set up your Ionic Cloud account:'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置您的 Ionic Cloud 账户：
- en: Created a security profile.
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个安全配置文件。
- en: 'Imported three files from Apple Developer: an app certificate, a provisioning
    profile, and a push certificate. These files are needed so that Ionic Cloud can
    be a trusted provider to communicate with Apple''s APN server to trigger push
    notifications.'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从苹果开发者那里导入三个文件：一个应用证书、一个配置文件和一个推送证书。这些文件是必需的，以便 Ionic Cloud 可以成为受信任的提供者，与苹果的
    APN 服务器通信以触发推送通知。
- en: 'Wrote code in your app to receive notifications:'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的应用中编写了接收通知的代码：
- en: You need to install the Ionic Cloud Angular library and the Cordova Push Notification
    plugin. The basic idea is to make the `push` object available for the app to use.
    This `push` object has been configured with your Ionic Cloud push provider.
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要安装 Ionic Cloud Angular 库和 Cordova 推送通知插件。基本思想是使 `push` 对象可供应用使用。此 `push`
    对象已配置为使用您的 Ionic Cloud 推送提供者。
- en: Now, let's focus on the coding portion itself to understand how this works.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们专注于编码部分本身，以了解它是如何工作的。
- en: 'You need to change how the app bootstraps in `app.module.ts`. This requires
    the importing of the `provideCloud` and `CloudSettings` providers, as shown:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要更改 `app.module.ts` 中的应用启动方式。这需要导入 `provideCloud` 和 `CloudSettings` 提供者，如下所示：
- en: '[PRE21]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Besides setting the `app_id` to match with your project `app_id` in Ionic Cloud,
    you need to specify the `push` object with the parameters you want for both iOS
    and Android, as follows:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 除了将 `app_id` 设置为与 Ionic Cloud 中的项目 `app_id` 匹配之外，您还需要指定具有您想要为 iOS 和 Android
    设置的参数的 `push` 对象，如下所示：
- en: '[PRE22]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, inside `NgModule`, you need to insert the following line so that Ionic
    knows that it needs to initialize Ionic Cloud as well:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 `NgModule` 内部，您需要插入以下行，以便 Ionic 知道它还需要初始化 Ionic Cloud：
- en: '[PRE23]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In your `home.html` template, there is a button to trigger the registration
    of push notification by calling `registerpush()`:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的 `home.html` 模板中，有一个按钮可以通过调用 `registerpush()` 触发推送通知的注册：
- en: '[PRE24]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This registration process must be intervened manually by the user because the
    user will have to accept permission in the next step. It's not recommended to
    require the users to accept a push notification request when they open the app
    right away. The main reason is because they are not familiar with your app and
    don't know what to expect (that is, whether they will get bombarded with notifications
    later on).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 此注册过程必须由用户手动干预，因为用户将需要在下一步接受权限。不建议在用户立即打开应用时就要求他们接受推送通知请求。主要原因是因为他们不熟悉您的应用，不知道会期待什么（即，他们是否会后来被通知轰炸）。
- en: 'The messages will be displayed via the `messages` object, as shown in the following
    code:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 消息将通过 `messages` 对象显示，如下面的代码所示：
- en: '[PRE25]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Here, each `message` item has the `title` and `text` fields.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，每个 `message` 项目都有 `title` 和 `text` 字段。
- en: 'In `home.ts`, there are two critical imports that you must be aware of: `Push`
    and `PushToken` are required to register and receive push notifications. `ApplicationRef`
    will be discussed later as you need to trigger re-render the Angular template
    manually, as illustrated:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `home.ts` 文件中，有两个关键的导入项，您必须注意：`Push` 和 `PushToken` 是注册和接收推送通知所必需的。`ApplicationRef`
    将在稍后讨论，因为您需要手动触发 Angular 模板的重新渲染，如下所示：
- en: '[PRE26]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'All you need to call is the `this.push.register()` function. This will return
    a `PushToken` object as you can see in the following screenshot of the console
    log:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需要调用 `this.push.register()` 函数。这将返回一个 `PushToken` 对象，您可以在以下控制台日志的屏幕截图中看到：
- en: '![How it works...](img/image00346.jpeg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00346.jpeg)'
- en: 'To receive notifications, you need to subscribe by using the following code:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 要接收通知，您需要使用以下代码进行订阅：
- en: '[PRE27]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This will call `processPush()` each time there is a new notification message,
    as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在每次有新的通知消息时调用 `processPush()`，如下所示：
- en: '[PRE28]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'When the user receives a push message, this function will append to the `messages`
    array. If you don''t call `this.applicationRef.tick()`, the UI will not get updated
    since this process is outside Angular cycle. If you look into the console log,
    the `PushMessage` looks as follows, with the `text` and `title` fields:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户收到推送消息时，此函数将向 `messages` 数组中添加。如果您不调用 `this.applicationRef.tick()`，由于此过程在
    Angular 生命周期之外，UI 将不会更新。如果您查看控制台日志，`PushMessage` 将如下所示，其中包含 `text` 和 `title` 字段：
- en: '![How it works...](img/image00347.jpeg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00347.jpeg)'
- en: If the user doesn't open the app, you will see that the notification appears
    in the notification area.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户没有打开应用，您会看到通知出现在通知区域。
- en: There's more...
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Ionic has its own iOS setup instructions pages, as follows:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 有自己的 iOS 设置说明页面，如下所示：
- en: '[http://docs.ionic.io/setup.html](http://docs.ionic.io/setup.html)'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/setup.html](http://docs.ionic.io/setup.html)'
- en: '[http://docs.ionic.io/services/profiles/#ios-setup](http://docs.ionic.io/services/profiles/#ios-setup)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/services/profiles/#ios-setup](http://docs.ionic.io/services/profiles/#ios-setup)'
- en: '[http://docs.ionic.io/services/push/](http://docs.ionic.io/services/push/)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/services/push/](http://docs.ionic.io/services/push/)'
- en: The Cordova Push Notification plugin is available directly at [https://github.com/phonegap/phonegap-plugin-push](https://github.com/phonegap/phonegap-plugin-push).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Cordova 推送通知插件可以直接在 [https://github.com/phonegap/phonegap-plugin-push](https://github.com/phonegap/phonegap-plugin-push)
    找到。
- en: For more information about the Apple Push Notification service, you can visit
    the official documentation at [https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Apple 推送通知服务的更多信息，您可以访问官方文档 [https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html)。
- en: Building an Android app to receive push notifications
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个用于接收推送通知的 Android 应用
- en: Push notification works in the same way as iOS for Google. However, instead
    of using the Apple Notification Service, you will be working through the Firebase
    Cloud Messaging server, which is a new replacement for **Google Cloud Messaging**
    (**GCM**). However, Ionic Cloud abstracts this process so that you don't have
    to code using a different API. You will be using the same `push` object as for
    the iOS app.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: Google 推送通知与 iOS 的工作方式相同。但是，您将通过 Firebase Cloud Messaging 服务器进行操作，这是 Google
    Cloud Messaging（**GCM**）的新替代品。然而，Ionic Cloud 抽象了此过程，因此您无需使用不同的 API 进行编码。您将使用与
    iOS 应用相同的 `push` 对象。
- en: Note
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about the differences between FCM and GCM, visit the FAQ
    at [https://firebase.google.com/support/faq](https://firebase.google.com/support/faq).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 FCM 和 GCM 之间差异的更多信息，请访问[https://firebase.google.com/support/faq](https://firebase.google.com/support/faq)中的常见问题解答。
- en: 'In this section, you will learn how to do the following things:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何完成以下事项：
- en: Set up Ionic Cloud for Android push notification
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Android 推送通知的 Ionic Cloud
- en: Configure the Firebase project for the push API
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Firebase 项目以使用推送 API
- en: Write code to receive push notifications in Android
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写 Android 接收推送通知的代码
- en: You will be using the same code base as your iOS Push Notification example.
    The main difference is the process to set up in your Firebase and Ionic Cloud
    account.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用与您的 iOS 推送通知示例相同的代码库。主要区别在于在您的 Firebase 和 Ionic Cloud 账户中设置的过程。
- en: Getting ready
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can test the Android push notification using the Android emulator. So, there
    is no need to have a physical Android device available.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 Android 模拟器测试 Android 推送通知。因此，无需物理 Android 设备。
- en: You must also register for Firebase in order to access [https://console.firebase.google.com](https://console.firebase.google.com).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 您还必须注册 Firebase 以访问[https://console.firebase.google.com](https://console.firebase.google.com)。
- en: 'In addition, the following instructions use the specific version of these components:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下说明使用了这些组件的特定版本：
- en: Mac OSX El Capitan 10.11.4
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OSX El Capitan 10.11.4
- en: Ionic CLI 2.1.8
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic CLI 2.1.8
- en: Cordova 6.4.0
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cordova 6.4.0
- en: Node 6.8.1
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node 6.8.1
- en: NPM 3.10.8
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPM 3.10.8
- en: Android Studio 2.x, with at least Android 5.1 (Lollipop) installed.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了至少 Android 5.1（Lollipop）的 Android Studio 2.x。
- en: Observe the following
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 观察以下内容
- en: '![Getting ready](img/image00348.jpeg)'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备就绪](img/image00348.jpeg)'
- en: Android SDK Tools, Build Tools, Platform Tools and Intel **Hardware Accelerated
    Execution Manager** (**HAXM**) ([https://software.intel.com/en-us/android/articles/installation-instructions-for-intel-hardware-accelerated-execution-manager-windows](https://software.intel.com/en-us/android/articles/installation-instructions-for-intel-hardware-accelerated-execution-manager-windows)).
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android SDK 工具、构建工具、平台工具和英特尔**硬件加速执行管理器**（**HAXM**）([https://software.intel.com/en-us/android/articles/installation-instructions-for-intel-hardware-accelerated-execution-manager-windows](https://software.intel.com/en-us/android/articles/installation-instructions-for-intel-hardware-accelerated-execution-manager-windows))。
- en: 'Observe the following screenshot:'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 观察以下截图：
- en: '![Getting ready](img/image00349.jpeg)'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备就绪](img/image00349.jpeg)'
- en: At least one **Android Virtual Device** (**AVD**) has been created (use the
    `$ android avd` command line to open AVD Manager). Observe the following screenshot:![Getting
    ready](img/image00350.jpeg)
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少已创建一个**Android 虚拟设备**（**AVD**）（使用 `$ android avd` 命令行打开 AVD 管理器）。观察以下截图：![准备就绪](img/image00350.jpeg)
- en: How to do it...
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here are the instructions:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是说明：
- en: 'Create a new `MyAndroidPush` app using the `blank` template, as follows, and
    go to the `MyAndroidPush` folder:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `blank` 模板创建一个新的 `MyAndroidPush` 应用，如下所示，并转到 `MyAndroidPush` 文件夹：
- en: '[PRE29]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Install the Ionic Cloud Angular client, which is a library, to interact with
    the `push` object, as illustrated:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Ionic Cloud Angular 客户端库，以与 `push` 对象交互，如图所示：
- en: '[PRE30]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You need to have Node version 4.x or later and NPM version 3.x or later.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您需要安装 Node 版本 4.x 或更高版本以及 NPM 版本 3.x 或更高版本。
- en: 'Initialize your Ionic Cloud setting so that an app ID can be created in your
    account, as shown:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化您的 Ionic Cloud 设置，以便在您的账户中创建一个应用 ID，如下所示：
- en: '[PRE31]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will be prompted to log in to your Ionic Cloud account for this command
    line.
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此命令行中，您将被提示登录到您的 Ionic Cloud 账户。
- en: You will need a Firebase project number and a Firebase server ID in order to
    set up your `app.ts` file correctly. First, let's log in to the Firebase console
    at [https://console.firebase.google.com](https://console.firebase.google.com).
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要 Firebase 项目编号和 Firebase 服务器 ID 才能正确设置您的 `app.ts` 文件。首先，让我们登录到 Firebase 控制台[https://console.firebase.google.com](https://console.firebase.google.com)。
- en: Click on the **CREATE NEW PROJECT** button and fill in a project name (that
    is, `MyAndroidPush`):![How to do it...](img/image00351.jpeg)
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建新项目**按钮，并填写一个项目名称（即`MyAndroidPush`）：![如何操作...](img/image00351.jpeg)
- en: Navigate to **Grow** > **Notifications** in the left navigation menu:![How to
    do it...](img/image00352.jpeg)
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到左侧导航菜单中的**增长** > **通知**：![如何操作...](img/image00352.jpeg)
- en: Select the Android icon:![How to do it...](img/image00353.jpeg)
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择Android图标：![如何操作...](img/image00353.jpeg)
- en: Note
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Firebase Cloud Messaging service also supports the iOS app. So, it's possible
    that you can use FCM for both the iOS and Android projects.
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Firebase云消息服务也支持iOS应用。因此，你可能可以在iOS和Android项目中都使用FCM。
- en: Provide **Package name** in the form. You can copy and paste the **Package name**
    from your app project at `./config.xml`:![How to do it...](img/image00354.jpeg)
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单中提供**包名**。你可以从你的应用项目在`./config.xml`中的**包名**复制并粘贴：![如何操作...](img/image00354.jpeg)
- en: Select **CONTINUE** and save the JSON file somewhere. You will not need this
    JSON file for Ionic project:![How to do it...](img/image00355.jpeg)
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**继续**并保存JSON文件到某个位置。你不需要这个JSON文件用于Ionic项目：![如何操作...](img/image00355.jpeg)
- en: Click on the **FINISH** button to complete setting up the notification service:![How
    to do it...](img/image00356.jpeg)
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮以完成设置通知服务：![如何操作...](img/image00356.jpeg)
- en: Now, you will need the **Server key** and **Sender ID**. Navigate to the gear
    icon in the top left corner and select the **Project settings** menu item:![How
    to do it...](img/image00357.jpeg)
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要**服务器密钥**和**发送者ID**。导航到左上角的齿轮图标，并选择**项目设置**菜单项：![如何操作...](img/image00357.jpeg)
- en: Select the **CLOUD MESSAGING** tab:![How to do it...](img/image00358.jpeg)
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**云消息**选项卡：![如何操作...](img/image00358.jpeg)
- en: Copy both the **Server key** and **Sender ID** (the same as **Project ID** if
    using Google Cloud Messaging):![How to do it...](img/image00359.jpeg)
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制**服务器密钥**和**发送者ID**（如果使用Google Cloud Messaging，则与**项目ID**相同）：![如何操作...](img/image00359.jpeg)
- en: Navigate back to the Terminal and ensure that you are in the Ionic project folder.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到终端并确保你处于Ionic项目文件夹中。
- en: 'You need to install the Cordova Push Notification plugin and provide the same
    **Sender ID** value as the `SENDER_ID` value in the command line previously, as
    shown:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要安装Cordova推送通知插件，并提供与之前命令行中的`SENDER_ID`值相同的**发送者ID**，如下所示：
- en: '[PRE32]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Open your `./ionic.config.json` file in the project folder and copy the `app_id`
    value (in this case, the value is `e546b9f6`) from the following code:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目文件夹中打开你的`./ionic.config.json`文件，并从以下代码中复制`app_id`值（在这个例子中，值是`e546b9f6`）：
- en: '[PRE33]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Open and edit `./src/app/app.module.ts` with the following content:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下内容打开并编辑`./src/app/app.module.ts`：
- en: '[PRE34]'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Note
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You must replace `''app_id'': ''00f293c4''` with your own app ID. Also, you
    have to provide **Sender ID** here one more time.'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '你必须将`''app_id'': ''00f293c4''`替换为你自己的应用ID。此外，你还需要在这里再次提供**发送者ID**。'
- en: 'The code for your home page is very similar to the iOS push example. Open and
    edit `./src/pages/home/home.html`, and paste the following code:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的主页代码与iOS推送示例非常相似。打开并编辑`./src/pages/home/home.html`，并粘贴以下代码：
- en: '[PRE35]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Replace the content of the `home.ts` file, in the same folder, with the following
    code:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将同一文件夹中的`home.ts`文件的内容替换为以下代码：
- en: '[PRE36]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Replace `home.scss`, also in the `/home` folder, with the following code:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`home.scss`替换为以下代码，也在`/home`文件夹中：
- en: '[PRE37]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If this is the first time you create this app, you must have a `keystore` file.
    This file is used to identify your app for push and publishing. If you lose it,
    you cannot update your app later on. To create a `keystore`, type the following
    command line and ensure that it''s the same `keytool` version of the SDK (that
    is, check your `PATH` environment variable):'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你第一次创建此应用，你必须有一个`keystore`文件。此文件用于识别你的应用以进行推送和发布。如果你丢失它，你以后无法更新你的应用。要创建`keystore`，请输入以下命令行，并确保它与SDK的`keytool`版本相同（即检查你的`PATH`环境变量）：
- en: '[PRE38]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Once you fill out the information in the command line, make a copy of this
    file somewhere safe because you will need it later. Observe the following code:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你在命令行中填写了信息，请将此文件的副本保存在安全的地方，因为你以后需要它。观察以下代码：
- en: '[PRE39]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Note
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You must provide a password for this step. Otherwise, Ionic Cloud won't let
    you upload the `keystore` file.
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你必须为此步骤提供密码。否则，Ionic Cloud不会让你上传`keystore`文件。
- en: Now, log in to your Ionic Cloud at [https://apps.ionic.io](https://apps.ionic.io)
    to configure the security profile next.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，登录到你的Ionic Cloud [https://apps.ionic.io](https://apps.ionic.io)以配置安全配置文件。
- en: Navigate to your project (that is, `MyAndroidPush`) and select the **Settings**
    menu:![How to do it...](img/image00360.jpeg)
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的项目（即 `MyAndroidPush`）并选择**设置**菜单：![如何操作...](img/image00360.jpeg)
- en: Select **Certificates**, as follows:![How to do it...](img/image00361.jpeg)
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**证书**，如下所示：![如何操作...](img/image00361.jpeg)
- en: Create a **New Security Profile** and provide a name (for example, `MyAndroidPush`):![How
    to do it...](img/image00362.jpeg)
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的**安全配置文件**并提供一个名称（例如，`MyAndroidPush`）：![如何操作...](img/image00362.jpeg)
- en: Select **EDIT**, as illustrated:![How to do it...](img/image00363.jpeg)
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**编辑**，如图所示：![如何操作...](img/image00363.jpeg)
- en: Upload your `keystore` file (for example, `MyAndroidPushKe``y.keystore`,) alias
    name (for example, `MyAndroidPushKey`), and password from Step 22:![How to do
    it...](img/image00364.jpeg)
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传你的 `keystore` 文件（例如，`MyAndroidPushKe``y.keystore`），别名（例如，`MyAndroidPushKey`），以及步骤
    22 中的密码：![如何操作...](img/image00364.jpeg)
- en: Paste **Server key** from Step 13 into the **GCM API Key** input box:![How to
    do it...](img/image00365.jpeg)
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将步骤 13 中的 **Server key** 粘贴到 **GCM API Key** 输入框中：![如何操作...](img/image00365.jpeg)
- en: Select **Save** to complete creating a security profile.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**保存**以完成创建安全配置文件。
- en: Navigate back to the terminal.
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回终端。
- en: 'Ensure that you are in the app folder and build for the Android platform, as
    follows:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你处于应用文件夹中，并针对 Android 平台进行构建，如下所示：
- en: '[PRE40]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The process to verify push notification for Android is very similar to iOS.
    Here are the instructions:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 验证 Android 推送通知的过程与 iOS 非常相似。以下是说明：
- en: Navigate to **Ionic Cloud** > your app (**MyAndroidPush**) > **Push**:![How
    to do it...](img/image00338.jpeg)
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **Ionic Cloud** > 你的应用（**MyAndroidPush**）> **推送**：![如何操作...](img/image00338.jpeg)
- en: Click on the **CREATE YOUR FIRST PUSH** button:![How to do it...](img/image00339.jpeg)
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建第一个推送**按钮：![如何操作...](img/image00339.jpeg)
- en: Fill in the push notification form from the create your first push message:![How
    to do it...](img/image00366.jpeg)
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从创建第一个推送消息填写推送通知表单：![如何操作...](img/image00366.jpeg)
- en: Leave the segment as **All users** so that anyone can get the push:![How to
    do it...](img/image00342.jpeg)
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将段设置为**所有用户**，以便任何人都可以接收推送：![如何操作...](img/image00342.jpeg)
- en: Select your security profile (that is, `MyAndroidPush`) that you created earlier.
    Then, click on the **Send this Push** button. Observe the following screenshot:![How
    to do it...](img/image00343.jpeg)
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你之前创建的安全配置文件（即 `MyAndroidPush`）。然后，点击**发送此推送**按钮。观察以下截图：![如何操作...](img/image00343.jpeg)
- en: Verify that the push notification has been sent successfully from Ionic Cloud.
    It should have the **Sent** status, as illustrated:![How to do it...](img/image00367.jpeg)
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证从 Ionic Cloud 发送的推送通知是否成功。它应该有**已发送**状态，如图所示：![如何操作...](img/image00367.jpeg)
- en: In the app on your simulator device, verify that the push message has appeared,
    as shown:![How to do it...](img/image00368.jpeg)
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的模拟器设备上的应用中，验证推送消息是否已出现，如图所示：![如何操作...](img/image00368.jpeg)
- en: You have successfully completed the verification steps.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 你已成功完成验证步骤。
- en: How it works...
  id: totrans-348
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'At a high level, this is the communication process behind the scene:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看，这是幕后通信过程：
- en: 'Your device sends a registration request for push notification to Google''s
    Firebase server. Your device''s app must have the following:'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的设备向谷歌的 Firebase 服务器发送推送通知的注册请求。你的设备的应用程序必须具备以下内容：
- en: Firebase **Project ID**
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firebase **项目 ID**
- en: Firebase **Sender ID**
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firebase **发送者 ID**
- en: Google will reply with the registration ID (which is the same as the push token
    from the Ionic `push` object).
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌将回复注册 ID（它与 Ionic `push` 对象的推送令牌相同）。
- en: 'Your app will send the registration ID to Ionic Cloud (or any push provider
    server). This process is behind the scene because Ionic Cloud Angular calls Ionic
    Cloud APIs to execute. However, your Ionic Cloud must have a security profile
    with four pieces of information, as listed in the following section:'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的应用将向 Ionic Cloud（或任何推送提供者服务器）发送注册 ID。此过程在幕后进行，因为 Ionic Cloud Angular 调用 Ionic
    Cloud API 来执行。然而，你的 Ionic Cloud 必须有一个包含以下列出的四条信息的安全配置文件：
- en: Firebase's Server key
  id: totrans-355
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firebase 的服务器密钥
- en: Keystore
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥库
- en: Keystore Alias
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥库别名
- en: Keystore password
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥库密码
- en: Ionic Cloud will save this registration ID to request Google to send push notification
    later. You can trigger notifications via the Ionic Cloud UI.
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic Cloud 将保存此注册 ID 以请求谷歌稍后发送推送通知。您可以通过 Ionic Cloud UI 触发通知。
- en: This is very similar to how Ionic Cloud works with Apple. Everything is simplified
    into your interactions with the `push` object from the Ionic Cloud Angular module.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 这与Ionic Cloud与苹果的合作方式非常相似。所有内容都简化为与Ionic Cloud Angular模块中的`push`对象交互。
- en: 'To receive the console output, you can navigate to Google''s URL at [chrome://inspect/#devices](http://chrome://inspect/#devices).
    This will provide a list of the available simulators to debug. Click on the **inspect**
    link to open the Google Developer Tool:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 要接收控制台输出，您可以导航到谷歌的URL [chrome://inspect/#devices](http://chrome://inspect/#devices)。这将提供可用的模拟器列表以进行调试。点击**检查**链接以打开谷歌开发者工具：
- en: '![How it works...](img/image00369.jpeg)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00369.jpeg)'
- en: 'You should be able to see the same screen as follows:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够看到以下相同的屏幕：
- en: '![How it works...](img/image00370.jpeg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/image00370.jpeg)'
- en: The app outputs a token (that is, a Registration ID) and each push notification
    will be a `PushMessage` object. You can open and inspect the properties.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序输出一个令牌（即注册ID），每个推送通知都将是一个`PushMessage`对象。您可以打开并检查其属性。
- en: In summary, Android push notification works nicely because of the out-of-the-box
    integration between Ionic Cloud, Ionic Angular module, and Firebase Cloud Messaging.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Android推送通知之所以工作得很好，是因为Ionic Cloud、Ionic Angular模块和Firebase云消息传递之间的即插即用集成。
- en: There's more...
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Ionic has its own Android setup instructions pages, as follows:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic有自己的Android设置说明页面，如下所示：
- en: '[http://docs.ionic.io/setup.html](http://docs.ionic.io/setup.html)'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/setup.html](http://docs.ionic.io/setup.html)'
- en: '[http://docs.ionic.io/services/profiles/#android-app-keystore](http://docs.ionic.io/services/profiles/#android-app-keystore)'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/services/profiles/#android-app-keystore](http://docs.ionic.io/services/profiles/#android-app-keystore)'
- en: '[http://docs.ionic.io/services/push/](http://docs.ionic.io/services/push/)'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.ionic.io/services/push/](http://docs.ionic.io/services/push/)'
- en: For more information about the Firebase Notification service, you can visit
    the official documentation at [https://firebase.google.com/docs/cloud-messaging/](https://firebase.google.com/docs/cloud-messaging/).
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Firebase通知服务的更多信息，您可以访问官方文档[https://firebase.google.com/docs/cloud-messaging/](https://firebase.google.com/docs/cloud-messaging/)。
