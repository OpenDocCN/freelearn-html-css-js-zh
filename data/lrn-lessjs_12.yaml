- en: Chapter 12. Color Processing with Less
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章：使用Less进行颜色处理
- en: Imagine the scene if you will—you're a designer, creating the latest sale adverts
    for a department store. You've spent hours creating your masterpiece, submitted
    it for approval… only to find that the Sales Director hates your choice of color.
    He doesn't think it works properly ("there's not enough contrast…"), so it's a
    case of back to the drawing board. Only you know that he is… shall we say... very
    picky about his choice of colors, which you know does not always work that well…
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下这样的场景——你是一名设计师，正在为一家百货公司制作最新的促销广告。你花了几个小时创作你的杰作，提交给上级审批…结果发现销售总监讨厌你选择的颜色。他认为这不起作用（“对比度不够…”），所以又回到了画板。只有你知道他非常挑剔他的颜色选择，你知道这并不总是有效…
- en: 'Sound familiar? What if we could pick our main color and have code (yes, code)
    automatically pick a color for you that not only works technically but also suits
    your chosen principal color? Sound impossible? Not with Less—welcome to the world
    of color processing! In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来熟悉吗？如果我们能选择我们的主色调，并且让代码（是的，代码）自动为你选择一个颜色，这个颜色不仅技术上可行，而且符合你选择的主色调，会怎么样呢？听起来不可能吗？在Less中就不是这样——欢迎来到颜色处理的领域！在本章中，我们将涵盖以下主题：
- en: Introducing color management in Less
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Less中引入颜色管理
- en: Color spaces and formats
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色空间和格式
- en: Color functions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色函数
- en: Generating color palettes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成调色板
- en: Examples of blending modes and parallels with Photoshop
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合模式示例以及与Photoshop的对比
- en: Working with W3C and WCAG standards for color management
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用W3C和WCAG标准进行颜色管理
- en: Intrigued? Let's start…
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 感到好奇了吗？让我们开始吧…
- en: Introducing color management in Less
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Less中引入颜色管理
- en: '*Printer profiles …colorimeters… sRGB… huh? You''re probably a developer, thinking,
    "I know* *nothing about color management; what the* *heck does it all mean?"*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*打印机配置文件…色度计…sRGB…嗯？你可能是一名开发者，心想，“我对颜色管理一无所知；这一切究竟是什么意思？”*'
- en: 'Well, to put it into context: imagine you''ve taken a picture of a red flag
    on a boat (yes, I know, stay with me on this), which appears to take on an orange
    tone when viewed on screen, but starts to come out purple when printed. Now, I
    bet you''re really confused… let me explain it all.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们先从背景说起：想象一下，你在一艘船上拍了一张红旗的照片（是的，我知道，请继续听我讲），在屏幕上看起来是橙色调，但打印出来却变成了紫色。现在，我敢打赌你真的很困惑……让我来解释一下。
- en: This is all about color management. In simple words, it's the art of making
    sure your printer, camera, and computer all display accurate shades of the same
    color. This sounds perfectly reasonable, right? After all, all devices should
    display the same color, no matter the device…
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都是关于颜色管理的。简单来说，它是确保你的打印机、相机和电脑都能准确显示相同颜色的艺术。这听起来非常合理，对吧？毕竟，所有设备都应该显示相同的颜色，无论是什么设备…
- en: Wrong. The key to color management is that every device reproduces color differently.
    In a sense, they all speak different languages and are not as sophisticated as
    our own eyes; here's where we need that colorimeter to balance everything…!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 错了。颜色管理的关键是每个设备都以不同的方式重现颜色。从某种意义上说，它们都在说不同的语言，并且没有我们自己的眼睛那么复杂；这就是我们需要色度计来平衡一切的地方…！
- en: Making sense now? However, where's the link with Less? Well, it's exactly the
    same principle in Less—we need to make sure that colors are correctly balanced;
    it's no good putting blues against purples, as they are too similar. Thankfully,
    Less has a range of functions that can help us with this. We can choose a primary
    color, such as purple, then use functions such as `darken()` or `lighten()` to
    choose suitable colors that complement our primary one. Less will then compile
    this function into valid CSS; for example, if we choose `#6600FF` (a shade of
    purple), we can get Less to lighten it by 10 percent to produce `#801AFF`. This
    value will then be rendered on screen when Less has compiled your code.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在明白了吗？然而，Less与这个有什么联系呢？嗯，Less中正是同样的原理——我们需要确保颜色得到正确的平衡；把蓝色和紫色放在一起是不好的，因为它们太相似了。幸运的是，Less有一系列功能可以帮助我们做到这一点。我们可以选择一个主色调，比如紫色，然后使用`darken()`或`lighten()`等函数来选择与主色调相配的颜色。然后Less会将这个函数编译成有效的CSS；例如，如果我们选择`#6600FF`（一种紫色调），我们可以让Less将其亮度提高10%以产生`#801AFF`。这个值将在Less编译你的代码时在屏幕上显示。
- en: We will delve into the various functions that Less supports, but for a moment,
    let's turn our attention to a little theory to help us better understand more
    about the importance of color formats and spaces.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入研究Less支持的各个函数，但让我们暂时将注意力转向一点理论，以帮助我们更好地理解颜色格式和空间的重要性。
- en: Examining color spaces and formats
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查颜色空间和格式
- en: When we think of colors, most of us will probably think of red, green, or blue,
    but do we ever think of color spaces? If the answer is no, then think again; you've
    just mentioned one of several color spaces we can use.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想到颜色时，我们大多数人可能会想到红色、绿色或蓝色，但我们是否曾想过颜色空间？如果答案是“没有”，那么再想想；你刚刚提到了我们可以使用的几种颜色空间之一。
- en: Color spaces are a means of uniquely specifying color. The most well-known one
    is **red, green, and blue** (**RGB**). However, others are available, such as
    **Hue, Saturation, Lightness** (**HSL**), its cousin, which includes alpha support
    (HSLa) or **HSV** (**Hue, Saturation, and Value**). Less includes support for
    these and others; we will look at these in more detail shortly, but first, let's
    take a look at using basic mathematical operators to create new colors.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色空间是唯一指定颜色的方法。最著名的是**红色、绿色和蓝色**（**RGB**）。然而，还有其他可供选择，例如**色调、饱和度和亮度**（**HSL**），它的近亲包括支持alpha（HSLa）或**HSV**（**色调、饱和度和值**）。Less对它们的支持较少；我们很快会详细探讨这些，但首先，让我们看看如何使用基本的数学运算符来创建新的颜色。
- en: Working with arithmetic operators
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用算术运算符
- en: How often have you spent hours fine-tuning a palette for a client, only to find
    they want to change the whole lot? It will be impossible to simply change one
    color, you will need to change them all…
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你有多少次花几个小时为客户调整调色板，结果却发现他们想改变全部？简单地改变一种颜色是不可能的，你需要改变它们全部…
- en: 'We can use Less to help us with this. It contains support for a number of functions
    that we can use to automate the creation and manipulation of colors. We can pick
    the red, blue, or green shades from colors, or use HSL to get the hue, lightness,
    or saturation levels from a color. However, we can also do something that you
    might not expect to see, but which makes perfect sense: use simple math operators,
    such as `+` or `–` to create our colors.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Less来帮助我们。它包含了一系列我们可以用来自动化颜色创建和操作的函数。我们可以从颜色中选择红色、蓝色或绿色的色调，或者使用HSL从颜色中获取色调、亮度和饱和度级别。然而，我们还可以做一些你可能不会看到，但完全有道理的事情：使用简单的数学运算符，如`+`或`–`来创建我们的颜色。
- en: 'Try this little experiment. If you have installed Crunch!, then add this to
    a new file within, and save it:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试这个简单的实验。如果你已经安装了Crunch!，那么在其中的一个新文件中添加以下内容，并保存：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When compiled, we get two colors, generated from one base color:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后，我们得到两种颜色，它们都来自一种基本颜色：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This compiled line of code gives us….a very dark gray, and…another dark gray.
    Not quite the colors I had in mind, but hey, it shows the principle very well;
    we can easily create multiple colors from one single base color. The key to it
    is to ensure that we get the right balance of numbers, in terms of base colors
    against those we calculate using operators. Let's see whether we can improve on
    this, and start exploring the world of functions to create some more appealing
    colors.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这行编译后的代码给我们……一种非常深的灰色，以及……另一种深灰色。并不是我心中所想的颜色，但嘿，它很好地展示了原理；我们可以很容易地从一种单一的基本颜色中创建多种颜色。关键是要确保我们得到正确的数字平衡，即在基本颜色与我们使用运算符计算的颜色之间。让我们看看我们是否可以改进这一点，并开始探索创建更多吸引人的颜色的函数世界。
- en: Working with color functions
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用颜色函数
- en: The functions available within Less can be used to provide some interesting
    colors. It is worth taking the time to familiarize yourself with the options available,
    particularly as it is possible to produce the same color using different methods!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Less中可用的函数可以用来提供一些有趣的颜色。花时间熟悉可用的选项是值得的，尤其是因为使用不同的方法可以产生相同的颜色！
- en: The functions can be split into four groups—they cover color definition, channels,
    operations, and blending. Let's take a look at each group of functions in turn,
    starting with defining color formats.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 函数可以分为四组——它们涵盖了颜色定义、通道、操作和混合。让我们依次查看每一组函数，从定义颜色格式开始。
- en: Defining color formats
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义颜色格式
- en: 'Before we can alter colors, we naturally need to define them. We could simply
    provide a HEX code, but this isn''t always sufficient; Less allows us to do more.
    Less provides a number of methods to obtain colors using different formats, and
    these are the three that you will likely use the most:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够改变颜色之前，我们自然需要定义它们。我们可以简单地提供一个HEX代码，但这并不总是足够的；Less允许我们做更多。Less提供了一些方法，使用不同的格式来获取颜色，这些是你最可能最常使用的三种：
- en: '| Function | Creates an opaque color from | Example value |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 从 | 示例值 |'
- en: '| --- | --- | --- |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `rgb` | Decimal red, green, and blue (RGB) values | `rgb(90, 129, 32)` |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `rgb` | 十进制红色、绿色和蓝色（RGB）值 | `rgb(90, 129, 32)` |'
- en: '| `hsl` | Hue, saturation, and lightness (HSL) values | `hsl(90, 100%, 50%)`
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `hsl` | 色调、饱和度和亮度（HSL）值 | `hsl(90, 100%, 50%)` |'
- en: '| `hsv` | Hue, saturation, and value (HSV) values | `hsv(90, 100%, 50%)` |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `hsv` | 色调、饱和度和值（HSV）值 | `hsv(90, 100%, 50%)` |'
- en: Tip
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For more information, refer to the full list of functions in [Appendix](part0129_split_000.html#page
    "Appendix A. Color Functions in Less"), *Color Functions in Less*. I've created
    a CodePen that shows these effects in action. This is available at [http://codepen.io/alibby251/pen/horqx](http://codepen.io/alibby251/pen/horqx).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[附录](part0129_split_000.html#page "附录A. Less中的颜色函数")中的完整函数列表，*Less中的颜色函数*。我创建了一个CodePen来展示这些效果。这是在[http://codepen.io/alibby251/pen/horqx](http://codepen.io/alibby251/pen/horqx)可用的。
- en: These methods mean that we're not limited to simply using HEX codes all of the
    time—after all, could you tell that `#8a5c16` is dark orange? I suspect not! A
    better method of defining colors is to use `RGB` (or `RGBA`, if we want to define
    opacity as well); we can then extract the individual base colors, as shown in
    our next demo.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法意味着我们并不局限于始终只使用HEX代码——毕竟，你能说出`#8a5c16`是深橙色吗？我怀疑不能！定义颜色的更好方法是使用`RGB`（或者如果我们想定义透明度，则使用`RGBA`）；然后我们可以提取单个基本颜色，如我们下一个演示所示。
- en: Converting colors from HEX to RGBA
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从HEX到RGBA转换颜色
- en: 'This is a very simple exercise, in which we''ll take a color, extract the constituent
    base colors, and display them on screen. We can then use these later to produce
    new colors. We''ll begin, with setting up the markup for our demo:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常简单的练习，我们将取一个颜色，提取其组成的基本颜色，并在屏幕上显示它们。然后我们可以使用这些颜色来产生新的颜色。我们将从设置我们演示的标记开始：
- en: Start by downloading a copy of the code that accompanies this book. From it,
    extract a copy of `hextorgb.html` and save this to our project folder. This will
    act as the basis for our demo.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先下载这本书附带代码的副本。从中，提取`hextorgb.html`的副本并将其保存到我们的项目文件夹中。这将成为我们演示的基础。
- en: 'We now need to add our styling, so in a new file add the following, starting
    with defining some base styles for our page:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在需要添加我们的样式，所以在一个新文件中添加以下内容，从定义我们页面的基本样式开始：
- en: '[PRE2]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next come the Less styles. We first need to extract the red, blue, and green
    styles from our base color:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来是Less样式。我们首先需要从基本颜色中提取红色、蓝色和绿色样式：
- en: '[PRE3]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once we have the base colors, we set them to mixins that will define the background
    colors of our boxes:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们有了基本颜色，我们将它们设置为mixin，这将定义我们框的背景颜色：
- en: '[PRE4]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'If you need to support IE8, then `RGBA()` will not work. Instead, use something
    like this:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你需要支持IE8，那么`RGBA()`将不起作用。相反，使用类似以下的内容：
- en: '[PRE5]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, `R`, `G`, and `B` are equivalent to red, green, and blue values; `XX`
    is the figure denoting the level of opacity to use.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，`R`、`G`和`B`分别对应红色、绿色和蓝色值；`XX`是表示所需透明度级别的数字。
- en: 'The boxes won''t display very nicely on their own, so let''s add some font
    styling:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 框单独显示不会非常美观，所以让我们添加一些字体样式：
- en: '[PRE6]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Last but by no means least, we need to tweak the positioning of each box, and
    set the background colors:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们需要调整每个框的位置，并设置背景颜色：
- en: '[PRE7]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Save the Less code as `hextorgb.less`. If we preview the results of our work,
    we should see the four boxes displayed on screen; the first is our selected color,
    followed by each of its constituent primary colors:![Converting colors from HEX
    to RGBA](img/00115.jpeg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Less代码保存为`hextorgb.less`。如果我们预览我们的工作结果，我们应该在屏幕上看到四个显示的框；第一个是我们选择的颜色，后面跟着它的每个组成的基本颜色：![从HEX到RGBA转换颜色](img/00115.jpeg)
- en: At this point, you might be asking what happened here. It's a good question.
    Although it looks like a lot of Less code, in reality, it all boils down to the
    use of three functions, namely `red()`, `green()`, and `blue()`. We first extract
    the primary colors, then use the `rgba()` function in various mixins to create
    `background-colors` and assign each to the three boxes displayed on screen.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，您可能会问这里发生了什么。这是一个好问题。尽管它看起来有很多Less代码，但实际上，它都归结为使用三个函数，即`red()`、`green()`和`blue()`。我们首先提取主颜色，然后使用各种混入中的`rgba()`函数来创建`background-colors`并将它们分配给屏幕上显示的三个框。
- en: Let's move on now, and change focus to look at another of the color function
    groups in Less, which is working with color channels.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续前进，将重点转向查看Less中的另一个颜色函数组，即处理颜色通道。
- en: Channeling colors using Less
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Less通道化颜色
- en: 'Now that we have established a suitable color space to work with, we might
    come across a need to extract and potentially alter part of an existing color.
    Thankfully, Less includes a range of functions that can help in this respect;
    let''s take a look at the three functions you will likely use the most; a full
    list is available in [Appendix](part0129_split_000.html#page "Appendix A. Color
    Functions in Less"), *Color Functions in Less*, at the end of the book:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了一个适合工作的颜色空间，我们可能会遇到需要提取和可能修改现有颜色的一部分的需求。幸运的是，Less包含一系列可以帮助这方面的函数；让我们看看您最可能使用的三个函数；完整的列表可以在书的附录[附录](part0129_split_000.html#page
    "附录 A. Color Functions in Less")“Less中的颜色函数”中找到：
- en: '| Function | Extracts | Example value |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 提取 | 示例值 |'
- en: '| --- | --- | --- |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `hue` | The hue channel of a color object in the HSL color space.Returns
    an integer value between 0 to 360. | `hue(hsl(90, 100%, 50%))` |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `hue` | HSL颜色空间中颜色对象的色调通道。返回介于0到360之间的整数值。 | `hue(hsl(90, 100%, 50%))` |'
- en: '| `saturation` | The saturation channel of a color object in the HSL color
    space.Returns a percentage value between 0 to 100 percent. | `saturation(hsl(90,
    100%, 50%))` |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `saturation` | HSL颜色空间中颜色对象的饱和度通道。返回介于0到100%之间的百分比值。 | `saturation(hsl(90,
    100%, 50%))` |'
- en: '| `lightness` | The lightness channel of a color object in the HSL color space.Returns
    a percentage value between 0 to 100 percent. | `lightness(hsl(90, 100%, 50%))`
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `lightness` | HSL颜色空间中颜色对象的亮度通道。返回介于0到100%之间的百分比值。 | `lightness(hsl(90, 100%,
    50%))` |'
- en: Tip
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For more information, it is worth reading the documentation on the main Less
    site at [http://lesscss.org/functions/#color-channel](http://lesscss.org/functions/#color-channel).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，值得阅读Less官方网站上的文档[http://lesscss.org/functions/#color-channel](http://lesscss.org/functions/#color-channel)。
- en: While it is key to understand how these functions work, we can only truly appreciate
    their power, if used in action. Let's set that right by building a demo that puts
    at least one of these to work, in the form of some simple alert boxes.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然理解这些函数的工作原理是关键，但我们只有在使用它们时才能真正感受到它们的强大。让我们通过构建一个至少使用这些函数之一来工作的演示来纠正这一点，形式是一些简单的警告框。
- en: Creating alert boxes
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建警告框
- en: Sebastian Ekström, a Swedish developer, has produced a perfect example of how
    to use the lightness and darkness functions within Less. I've reproduced it here
    with some minor changes to use HSL colors in place of standard HEX codes. You
    can see the original version of this demo at [http://codepen.io/sebastianekstrom/pen/uHAtL](http://codepen.io/sebastianekstrom/pen/uHAtL).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Sebastian Ekström，一位瑞典开发者，提供了一个如何使用Less中的亮度和暗度函数的完美示例。我在这里对其进行了一些小的修改，以使用HSL颜色代替标准的十六进制代码。您可以在[http://codepen.io/sebastianekstrom/pen/uHAtL](http://codepen.io/sebastianekstrom/pen/uHAtL)查看这个示例的原始版本。
- en: 'Let''s make a start. We first need to download some icons; for the purposes
    of this demo, I will assume you''ve used these:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。我们首先需要下载一些图标；为了这个演示的目的，我将假设您已经使用了以下这些：
- en: The confirmation dialog ([http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-information-icon.html](http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-information-icon.html))
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确认对话框([http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-information-icon.html](http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-information-icon.html))
- en: The error dialog ([http://www.iconarchive.com/show/nuoveXT-2-icons-by-saki/Status-dialog-error-icon.html](http://www.iconarchive.com/show/nuoveXT-2-icons-by-saki/Status-dialog-error-icon.html))
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误对话框([http://www.iconarchive.com/show/nuoveXT-2-icons-by-saki/Status-dialog-error-icon.html](http://www.iconarchive.com/show/nuoveXT-2-icons-by-saki/Status-dialog-error-icon.html))
- en: The warning dialog ([http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-warning-icon.html](http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-warning-icon.html))
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警告对话框（[http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-warning-icon.html](http://www.iconarchive.com/show/oxygen-icons-by-oxygen-icons.org/Status-dialog-warning-icon.html)）
- en: If you want to use alternative icons, then adjust the code accordingly.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要使用替代图标，那么相应地调整代码。
- en: From a copy of the code download, extract a copy of `alerts.html`. This will
    act as the basis for our demo.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从代码下载的副本中，提取`alerts.html`的副本。这将成为我们演示的基础。
- en: 'Next, let''s create our Less styling. In a new file, add the following color
    styles, beginning with the principal text color:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们创建我们的Less样式。在一个新文件中，添加以下颜色样式，从主要文本颜色开始：
- en: '[PRE8]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Next, add the following two mixins; these determine the background color to
    use:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，添加以下两个混合函数；这些确定要使用的背景颜色：
- en: '[PRE9]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Tip
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Notice the use of the `when` statements? Only one text color will be used; this
    will be determined if the lightness value of `@text-color` is above or below `40%`.
    If it is above, then plain black is used; if below, then white is used instead.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意到`when`语句的使用吗？将只使用一个文本颜色；这将由`@text-color`的亮度值是否高于或低于`40%`来决定。如果是高于，则使用纯黑色；如果是低于，则使用白色代替。
- en: 'Our next two mixins control the font formatting and basic button design:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们接下来的两个混合函数控制字体格式化和基本按钮设计：
- en: '[PRE10]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can now tie our styles together. We first call the mixin that creates the
    confirmation dialog, followed by the mixins for the warning and error dialogs,
    respectively:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以将我们的样式结合起来。我们首先调用创建确认对话框的混合函数，然后依次调用警告和错误对话框的混合函数：
- en: '[PRE11]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save the file as `alerts.less` in the `css` subfolder. If all is well, we will
    see the three dialogs, against an all-over dark background:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`css`子文件夹中的`alerts.less`。如果一切顺利，我们将看到三个对话框，背景为全黑的背景：
- en: '![Creating alert boxes](img/00116.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![创建警告框](img/00116.jpeg)'
- en: Okay, so we can now set our color space and extract a base color of our choice.
    However, what are we going to do with the colors? It's unlikely that simply extracting
    a color is going to be sufficient; we will very likely need to do something more
    with it. Not a problem with Less. We can operate on our chosen color, to produce
    any color we so desire!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，所以我们现在可以设置我们的颜色空间并提取我们选择的基色。然而，我们将如何使用这些颜色？仅仅提取颜色可能不足以满足需求；我们很可能需要做更多的事情。Less没有问题。我们可以对我们的选择颜色进行操作，以产生我们想要的任何颜色！
- en: Operating on colors
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色运算
- en: At this point, you're probably asking yourself, "Why would we need to use operators
    on colors?" Surely that's what you do with numbers, right…?
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能正在问自己，“为什么我们需要在颜色上使用运算符？”当然，那是你用数字做的事情，对吧…？
- en: Not necessarily. Using simple arithmetic operators, as we saw earlier in the
    *Working with arithmetic operators* section, will work perfectly well, but what
    happens if we need to change colors and end up picking colors that look terrible
    using the fixed calculations we provide? Clearly we need a better method…!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 并非必然。使用简单的算术运算符，正如我们在*使用算术运算符*部分之前所看到的，将完美地工作，但如果我们需要更改颜色，并最终选择使用我们提供的固定计算看起来很糟糕的颜色呢？显然，我们需要一个更好的方法…！
- en: 'Fortunately for us, there exist a number of functions within Less that we can
    use, and assuming that we have a suitable color to work from, we can use any of
    these functions to produce a different shade, or change hue, saturation, or lightness
    levels for example. Let''s take a moment to consider the three you are likely
    to use most:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Less中存在许多我们可以使用的函数，并且假设我们有合适的颜色作为起点，我们可以使用这些函数中的任何一个来产生不同的色调，或者改变色调、饱和度或亮度级别等。让我们花点时间考虑你可能会最常使用的三个：
- en: '| Function | Purpose of function | Example value |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 函数用途 | 示例值 |'
- en: '| --- | --- | --- |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `lighten` | This is used to increase the lightness of a color in the HSL
    color space by an absolute amount. | `lighten(#a52a2a, 20%);` |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `lighten` | 通过绝对量增加HSL颜色空间中颜色的亮度。 | `lighten(#a52a2a, 20%);` |'
- en: '| `darken` | This decreases the lightness of a color in the HSL color space
    by an absolute amount. | `darken(#a52a2a, 20%);` |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `darken` | 通过绝对量减少HSL颜色空间中颜色的亮度。 | `darken(#a52a2a, 20%);` |'
- en: '| `fade` | This sets the absolute transparency of a color. This can be applied
    to colors irrespective of whether they already have an opacity value or not. |
    `fade(#a52a2a, 20%);` |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `fade` | 设置颜色的绝对透明度。这可以应用于无论颜色是否已经有不透明度值的所有颜色。 | `fade(#a52a2a, 20%);` |'
- en: Tip
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For more information, refer to the full list of functions given in [Appendix](part0129_split_000.html#page
    "Appendix A. Color Functions in Less"), *Color Functions in Less*, at the end
    of this book. I've also created a CodePen that shows these effects in action and
    is available at [http://codepen.io/alibby251/pen/KGltj](http://codepen.io/alibby251/pen/KGltj).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅本书末尾的完整函数列表，[附录](part0129_split_000.html#page "附录A. Less中的颜色函数")，*Less中的颜色函数*。我还创建了一个CodePen，展示了这些效果，可在[http://codepen.io/alibby251/pen/KGltj](http://codepen.io/alibby251/pen/KGltj)找到。
- en: This makes perfect sense on any site, but more so on larger sites that use colors
    throughout and where updating them would be a nightmare. Instead, we can choose
    our master color, assign it to a variable, and use functions to generate the remaining
    colors. Let's take a look at how this would work in practice, with a quick and
    easy example that changes text colors based on the `H` attribute we use.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这在任何网站上都很合理，但在使用颜色并更新它们会是一场噩梦的大型网站上更是如此。相反，我们可以选择我们的主颜色，将其分配给一个变量，并使用函数生成剩余的颜色。让我们看看这如何在实践中快速简单地工作，通过一个基于我们使用的`H`属性的文本颜色变化的快速示例。
- en: Making text darker or lighter in color
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使文本颜色变深或变浅
- en: The first of our two real-world demos is very simple. Let's say we have a number
    of text styles on our site, which use different shades of the same color.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的两个真实世界演示中的第一个非常简单。假设我们在网站上有很多文本样式，它们使用相同颜色的不同色调。
- en: 'We could easily set the colors within our CSS, but this would miss out on a
    major key part of Less; why set them explicitly, when we can get Less to do this
    for us? To see what this means, let''s knock up a quick demo that creates some
    different styles for the standard `H1` to `H6` markup as shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地在CSS中设置颜色，但这会错过Less的一个主要关键部分；为什么我们要明确设置它们，当我们可以让Less为我们做这件事时？为了了解这意味着什么，让我们快速搭建一个演示，创建一些不同的样式，用于标准的`H1`到`H6`标记，如下所示：
- en: '![Making text darker or lighter in color](img/00117.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![使文本颜色变深或变浅](img/00117.jpeg)'
- en: 'Let''s start:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始：
- en: For this demo, we need to download a copy of the code that accompanies this
    book. From it, extract a copy of `altercolor.html` and save to our project folder.
    This will act as the basis for our demo.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个演示，我们需要下载这本书附带代码的副本。从中，提取`altercolor.html`的副本并将其保存到我们的项目文件夹中。这将成为我们演示的基础。
- en: 'In a separate file, go ahead and add the following styles, beginning with our
    base font mixin, to style the text:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个单独的文件中，继续添加以下样式，从我们的基本字体mixin开始，以样式化文本：
- en: '[PRE12]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next comes the variable that sets our base color:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来是设置我们的基本颜色的变量：
- en: '[PRE13]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We all need to add the all-important mixin calls that create the font styles:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们都需要添加创建字体样式的至关重要的mixin调用：
- en: '[PRE14]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Save the file as `altercolor.less` in the `css` subfolder. If we preview our
    work, we should expect to see six statements, styled as shown at the start of
    this exercise.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`css`子文件夹中的`altercolor.less`。如果我们预览我们的工作，我们应该期望看到六个语句，样式如本练习开始所示。
- en: Beautifully simple, huh? With a little work and one single color, we've set
    all of the styles automatically, using Less. Our demo is creating the styles dynamically,
    but we can easily precompile the Less statements into valid CSS code, and use
    this instead. All we need to do is just use the right `H` attribute when designing
    our pages!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 简单而优雅，不是吗？通过一点工作和一种颜色，我们使用Less自动设置了所有样式。我们的演示正在动态创建样式，但我们可以轻松地将Less语句预编译成有效的CSS代码，并使用它。我们只需要在设计页面时使用正确的`H`属性即可！
- en: Let's move on now and take a look at some more of the functions of Less that
    we can use—the blending group. These functions work in a similar fashion to those
    options available within graphics packages such as Photoshop or GIMP. Let's explore
    these in more detail.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续前进，看看Less的一些更多功能，我们可以使用——混合组。这些函数的工作方式与图形软件包（如Photoshop或GIMP）中可用的选项类似。让我们更详细地探索这些。
- en: Color blending
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 颜色混合
- en: So far, we've seen how we can define a color space, extract one of its constituent
    elements out of it (such as hue or level of green) and that we can transform the
    color through fading or spinning the original. There's one more way we can change
    a color using Less—blending.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到我们可以定义一个颜色空间，从中提取其组成元素（如色调或绿色的级别）并可以通过淡入或旋转原始颜色来转换颜色。还有另一种使用Less改变颜色的方法——混合。
- en: 'The principle works in the same way, in that we require two colors, but the
    effects are quite different. Let''s have a quick look at the three functions you
    will likely use the most:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 原则上与之前相同，我们需要两种颜色，但效果却大不相同。让我们快速看一下你可能会最常使用的三个功能：
- en: '| Function | Purpose of function | Example value |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 功能 | 功能用途 | 示例值 |'
- en: '| --- | --- | --- |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `multiply` | This function multiplies two colors. | `multiply(#9ec1ef, #091d37);`
    |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `multiply` | 此功能将两种颜色相乘。 | `multiply(#9ec1ef, #091d37);` |'
- en: '| `screen` | This does the opposite of multiply. The result is a brighter color.
    | `screen (#9ec1ef, #091d37);` |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `screen` | 这与`multiply`相反。结果是颜色更亮。 | `screen (#9ec1ef, #091d37);` |'
- en: '| `overlay` | Conditionally make light channels lighter and dark channels darker.
    | `overlay (#9ec1ef, #091d37);` |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `overlay` | 条件性地使亮通道更亮，暗通道更暗。 | `overlay (#9ec1ef, #091d37);` |'
- en: Tip
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For more information, refer to the full list of functions given in [Appendix](part0129_split_000.html#page
    "Appendix A. Color Functions in Less"), *Color Functions in Less*, at the end
    of the book. I've also created a CodePen that shows these effects in action, available
    at [http://codepen.io/alibby251/pen/IKqEk](http://codepen.io/alibby251/pen/IKqEk).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更多信息，请参阅书末附录中给出的完整函数列表[附录](part0129_split_000.html#page "附录 A. Less中的颜色函数")，“Less中的颜色函数”。我还创建了一个CodePen，展示了这些效果的实际应用，可在[http://codepen.io/alibby251/pen/IKqEk](http://codepen.io/alibby251/pen/IKqEk)查看。
- en: Now that we've seen the various color blending modes available in Less, let's
    move on and take a look at how these compare with performing similar actions in
    Photoshop.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了Less中可用的各种颜色混合模式，让我们继续看看这些模式与在Photoshop中执行类似操作相比如何。
- en: Comparing Less with Photoshop
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与Photoshop比较Less
- en: Working with blend modes in CSS is likely to raise a very important point—how
    does Less stack up against applications such as Photoshop?
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS中使用混合模式可能会提出一个非常重要的问题——Less与Photoshop等应用程序相比如何？
- en: Well, the good news is that for those already familiar with blend modes in Photoshop,
    the same values exist within Less, although the range is not as extensive as Photoshop.
    We can use values such as lighten, darken, hardlight, and so on, to produce similar
    effects to creating images in Photoshop.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，对于那些已经熟悉Photoshop中混合模式的人来说，Less中存在相同的值，尽管范围不如Photoshop广泛。我们可以使用诸如lighten、darken、hardlight等值来产生与在Photoshop中创建图像相似的效果。
- en: Tip
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Two good examples of how we can use blending modes can be found at [http://css-tricks.com/basics-css-blend-modes/](http://css-tricks.com/basics-css-blend-modes/);
    have a look also at [http://www.dummies.com/how-to/content/photoshop-ccs-blending-modes.html](http://www.dummies.com/how-to/content/photoshop-ccs-blending-modes.html)
    to get a feel for how these modes fit in with the other blend modes available
    in the latest version of Photoshop (CC at the time of writing this).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 两个如何使用混合模式的良好例子可以在[http://css-tricks.com/basics-css-blend-modes/](http://css-tricks.com/basics-css-blend-modes/)找到；也可以看看[http://www.dummies.com/how-to/content/photoshop-ccs-blending-modes.html](http://www.dummies.com/how-to/content/photoshop-ccs-blending-modes.html)，以了解这些模式如何在最新版本的Photoshop（撰写本文时为CC版）中与其他混合模式相匹配。
- en: The downside is that support for blend modes is still very new; for example,
    support for `background-blend-mode` (at the time of writing this) is limited to
    the latest versions of modern browsers, with the exception of IE.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点是混合模式的支持仍然非常新；例如，`background-blend-mode`（撰写本文时）的支持仅限于现代浏览器的最新版本，IE除外。
- en: This limitation aside, it is definitely worth spending time getting familiar
    with how we can replicate the same effects from Photoshop within Less/CSS. As
    we've already seen, there are a host of blend values we can use. As a tester of
    what is possible using CSS, have a look at the excellent gradients produced by
    Bennett Feely, which use `background-blend-mode`. You can see the gradients at
    [http://bennettfeely.com/gradients/](http://bennettfeely.com/gradients/).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个限制之外，花时间熟悉如何在Less/CSS中复制Photoshop中的相同效果绝对是值得的。正如我们已经看到的，我们可以使用一系列混合值。作为一个CSS可能性的测试者，你可以看看Bennett
    Feely使用`background-blend-mode`产生的出色渐变，你可以在[http://bennettfeely.com/gradients/](http://bennettfeely.com/gradients/)看到这些渐变。
- en: 'To really get a feel of how we can use blend modes in Less, it is strongly
    recommended that you understand at least these three: `screen`, `multiply`, and
    `overlay`. The others will follow in due course. Let''s take a moment to cover
    these three modes in more detail:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要真正了解如何在Less中使用混合模式，强烈建议你至少了解以下这三个：`screen`、`multiply`和`overlay`。其他的功能将陆续介绍。让我们花点时间更详细地介绍这三个模式：
- en: '`Screen`: This ignores blacks and makes images appear lighter with light tones
    appearing washed out.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`屏幕`：它忽略了黑色，使图像看起来更亮，浅色调看起来被冲淡。'
- en: '`Multiply`: This is the direct opposite, with darker tones reinforced, while
    light will pass through anything that is clear or bright.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`乘法`：这是直接相反的，深色调得到加强，而浅色会透过任何清晰或明亮的东西。'
- en: '`Overlay`: This is a balance between screen and multiply; it ignores midtones,
    making the blended result lighter and darker at the same time, to increase contrast.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`叠加`：这是屏幕和乘法的平衡；它忽略了中间调，使混合结果同时变亮和变暗，以增加对比度。'
- en: Let's change tack at this point and move on. We can easily use blend modes to
    help produce new colors, or interesting effects (particularly with images!); this
    won't be truly effective unless we've worked out what our site's palette will
    look like.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，让我们改变方向，继续前进。我们可以轻松地使用混合模式来帮助产生新的颜色，或者有趣的效果（尤其是与图像一起！）；除非我们已经想清楚我们的网站调色板将是什么样子，否则这不会真正有效。
- en: It's at this point we can really put Less to good use, in calculating suitable
    values for our palette. Before we do so, let's begin with a primer on creating
    successful palettes to help set the scene.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们可以真正充分利用Less，来计算适合我们调色的板的价值。在我们这样做之前，让我们从创建成功调色的板的基础知识开始，以帮助设定场景。
- en: Introducing palettes
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍调色板
- en: We all work with colors as part of designing a site. Colors are key to making
    or breaking our design. The creation of a cohesive and interesting website relies
    on the right choice of colors that form our palette. Historically, we frequently
    used either a white or color background; as our tastes have evolved, so has the
    need to choose the right colors to form our palette.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在设计网站时都会使用颜色。颜色对于我们的设计至关重要，是成败的关键。创建一个统一且有趣的网站依赖于正确选择构成我们调色的板上的颜色。从历史上看，我们经常使用白色或彩色背景；随着我们品味的演变，选择构成我们调色的板上的正确颜色也变得同样重要。
- en: The key to any successful palette, and that is even before we get into the depths
    of producing it, is to really understand how color works. The theory of color
    is a complex subject, where we can get to grips with understanding how different
    shades and hues interact with each other and the effect this has on the visitor
    to the site.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 任何成功调色板的关键，甚至在深入到制作它之前，是真正理解颜色是如何工作的。色彩理论是一个复杂的主题，我们可以通过理解不同色调和色相如何相互作用以及这种相互作用对网站访问者的影响来掌握它。
- en: 'To help us through the minefield of choosing the right colors to create our
    palette, there are a number of tips we can use:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们通过选择正确颜色来创建调色的板的雷区，我们可以使用一些技巧：
- en: Try to choose a palette type that creates suitable colors, based on a color
    of your choice. There are several palette types available, but three of particular
    note are Analogous, Complementary, and Triadic.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试根据你选择的颜色选择合适的调色板类型。有几种调色板类型可供选择，但特别值得注意的是类似色、互补色和三色。
- en: Instead, choose colors based on current trends. This might, for example, be
    muted pastel colors, which have become popular in producing soothing, flat designs.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相反，基于当前趋势选择颜色。例如，这可能是一些柔和的粉彩色，它们在制作舒缓的平面设计中变得流行。
- en: An alternative is to use bright colors, which are usually heavily saturated,
    to make elements really stand out. The range of colors is often limited, with
    lots of white or gray space, to help equalize the stark colors used in this palette.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个选择是使用鲜艳的颜色，这些颜色通常饱和度很高，可以使元素真正突出。颜色范围通常有限，有很多白色或灰色空间，以帮助平衡在这个调色板中使用的鲜明颜色。
- en: We can even go for a monochromatic design, which is often based around shades
    of black or gray, with specific elements highlighted in reds or blues. Monochrome
    palettes help convey an emotional or psychological message, whereas we can use
    an accent color to highlight important elements in the design.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们甚至可以尝试单色设计，这通常基于黑色或灰色的色调，具体元素用红色或蓝色突出显示。单色调色板有助于传达情感或心理信息，而我们可以使用强调色来突出设计中的重要元素。
- en: Note
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A great tool to use when choosing colors is Adobe's Kuler, which is available
    at [https://kuler.adobe.com/create/color-wheel/](https://kuler.adobe.com/create/color-wheel/).
    It shows some other palettes that you can use, such as Triad or Compound; it is
    worth trying these once you've become familiar with creating palettes.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择颜色时，一个很好的工具是Adobe的Kuler，可在[https://kuler.adobe.com/create/color-wheel/](https://kuler.adobe.com/create/color-wheel/)找到。它显示了一些你可以使用的其他调色板，例如三色或复合；一旦你熟悉了创建调色板，尝试这些是有价值的。
- en: Let's take a moment now to look at some of these palette types in more detail.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们花点时间更详细地看看这些调色板类型。
- en: Analyzing color palette examples
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析调色板示例
- en: It is surprising how consumers can frequently be guided by the colors used on
    a website; for example, a study found that between 60-80 percent of customers'
    purchasing decisions are influenced solely by color! Let's take a moment to consider
    a couple of examples to show the importance of choosing the right colors.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 消费者如何经常被网站上的颜色所引导，这一点令人惊讶；例如，一项研究发现，60-80%的顾客购买决策仅受颜色的影响！让我们花点时间考虑几个例子，以展示选择正确颜色的重要性。
- en: Trüf, a Los Angeles-based web design company, uses a monochromatic design, with
    red to highlight critical elements of their site—you can see their design at [http://www.trufcreative.com](http://www.trufcreative.com).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Trüf，一家位于洛杉矶的网页设计公司，使用单色设计，用红色突出其网站的关键元素——你可以看到他们的设计在[http://www.trufcreative.com](http://www.trufcreative.com)。
- en: A similar use of colors, but for a different site, Etch uses various shades
    in its bold background, with pink elements to make the design really stand out.
    Their site is at [http://www.etchapps.com](http://www.etchapps.com).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 类似的使用颜色，但针对不同的网站，Etch在其大胆的背景中使用了各种色调，用粉色元素使设计真正脱颖而出。他们的网站是[http://www.etchapps.com](http://www.etchapps.com)。
- en: To get a feel for the importance of choosing colors well, take a look at the
    infographic on Column Five Media's site, at [http://www.columnfivemedia.com/work-items/infographic-true-colors-what-your-brand-colors-say-about-your-business](http://www.columnfivemedia.com/work-items/infographic-true-colors-what-your-brand-colors-say-about-your-business);
    there are some very revealing facts!
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了感受选择颜色的重要性，请查看Column Five Media网站上的信息图表，网址为[http://www.columnfivemedia.com/work-items/infographic-true-colors-what-your-brand-colors-say-about-your-business](http://www.columnfivemedia.com/work-items/infographic-true-colors-what-your-brand-colors-say-about-your-business)；那里有一些非常揭示的事实！
- en: It is worth noting though that accessibility must be considered where practical;
    this will often be determined by the appeal of the product or service on offer
    to visually impaired visitors; Geri Coady has produced a useful guide in the form
    of an e-book, which is available for sale at [http://www.fivesimplesteps.com/products/colour-accessibility](http://www.fivesimplesteps.com/products/colour-accessibility).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，在实际情况下必须考虑可访问性；这通常由提供给视觉障碍访客的产品或服务的吸引力所决定；Geri Coady已经制作了一份有用的指南形式的电子书，可在[http://www.fivesimplesteps.com/products/colour-accessibility](http://www.fivesimplesteps.com/products/colour-accessibility)上购买。
- en: Let's move on now and turn our attention to what we've been waiting for—choosing
    some colors.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续前进，把注意力转向我们一直期待的事情——选择一些颜色。
- en: Choosing our colors
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择我们的颜色
- en: So far, we've learned about the importance of choosing our colors carefully
    and the impact this will have on our site's visitors; getting it wrong will be
    disastrous! In comparison, once we know which colors we want to use, creating
    our palette is really easy.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经了解了选择颜色的重要性以及这将对我们的网站访客产生的影响；选错颜色将会是灾难性的！相比之下，一旦我们知道我们想要使用哪些颜色，创建我们的调色板就真的很容易了。
- en: The first stage is to choose our primary color. Column Five Media's infographic
    suggests that only 5 percent of the world's top 100 brands use more than two colors;
    the key here is to use as many colors as is suitable for your project. A good
    rule of thumb is to choose at least 2-3 colors to work with, alongside a neutral
    light or dark color for the background. We can then use Less to produce any shade
    needed from your choice of principal colors.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 第一阶段是选择我们的主色。Column Five Media的信息图表建议，世界上前100个顶级品牌中只有5%使用超过两种颜色；这里的关键是使用适合你项目的颜色数量。一个很好的经验法则是选择至少2-3种颜色来搭配，同时使用中性浅色或深色作为背景。然后我们可以使用Less从你的主色选择中产生所需的任何色调。
- en: Using a photo as our source
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用照片作为我们的来源
- en: How often have you wondered where you will get that inspiration for a design?
    I'll bet the answer is frequently, and I'm willing to bet that photos will feature
    somewhere in this list of sources!
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你有多经常想知道你将从哪里获得设计灵感？我敢打赌答案经常是，而且我敢打赌照片将在这个来源列表中占有一席之地！
- en: Photos are perfect as a source of inspiration. We can pick a principal color
    from it, then manually choose colors that would work. It can be a little hit and
    miss though; not every color scheme will work, but the key to using this method
    is experimenting until you find colors that would provide a good harmony in your
    design.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 照片是灵感的完美来源。我们可以从中选择一个主色，然后手动选择合适的颜色。但这可能会有些运气成分；并不是每个配色方案都会奏效，但使用这种方法的关键是实验，直到找到能够为你的设计提供良好和谐的色彩。
- en: We can take a more pragmatic route though. Adobe released Kuler, a brilliant
    app (and website), to help choose suitable colors according to the type of palette
    we use.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以采取更实际的方法。Adobe发布了Kuler，一个出色的应用程序（和网站），帮助我们根据所使用的色板类型选择合适的颜色。
- en: We can either choose a color, then get Kuler to choose appropriate colors for
    us, or we can upload a photo of our choice and select suitable colors from it.
    In the following screenshot, we can see the results of selecting a color from
    a photo, such as the one used in my first book, *jQuery Tools UI Library*, published
    by *Packt Publishing*.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择一个颜色，然后让Kuler为我们选择合适的颜色，或者我们可以上传我们选择的照片，并从中选择合适的颜色。在下面的屏幕截图中，我们可以看到从照片中选择颜色的结果，例如我在第一本书《jQuery
    Tools UI Library》中使用的那张照片，由Packt Publishing出版。
- en: '![Using a photo as our source](img/00118.jpeg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![使用照片作为我们的来源](img/00118.jpeg)'
- en: 'In comparison, if we take the purple from far left (`#a67097`) and use it in
    Kuler''s color wheel, we get a completely different result, using the Analogous
    palette:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，如果我们从最左边的紫色（`#a67097`）开始，并在Kuler的色彩轮上使用它，我们会得到一个完全不同的结果，使用的是类似色板：
- en: '![Using a photo as our source](img/00119.jpeg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![使用照片作为我们的来源](img/00119.jpeg)'
- en: It really comes down to what your project needs in terms of color; to help with
    this and understand the impact on your visitors, it is worth reading an article
    by Rachel Shillcock, on Tuts+, at [http://webdesign.tutsplus.com/articles/understanding-the-qualities-and-characteristics-of-color--webdesign-13292](http://webdesign.tutsplus.com/articles/understanding-the-qualities-and-characteristics-of-color--webdesign-13292).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上取决于你的项目在颜色方面的需求；为了帮助这一点并了解对访客的影响，阅读Rachel Shillcock在Tuts+上的一篇文章是值得的，文章地址为[http://webdesign.tutsplus.com/articles/understanding-the-qualities-and-characteristics-of-color--webdesign-13292](http://webdesign.tutsplus.com/articles/understanding-the-qualities-and-characteristics-of-color--webdesign-13292)。
- en: Tip
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For a good source of inspiration, take a look at the palettes created on Kuler
    by others; they are at [https://kuler.adobe.com/explore/newest/](https://kuler.adobe.com/explore/newest/).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得良好的灵感来源，可以看看Kuler上其他人创建的色板；它们位于[https://kuler.adobe.com/explore/newest/](https://kuler.adobe.com/explore/newest/)。
- en: Choosing a color using a tool, such as Kuler, can be an interesting experience.
    It opens up a world of possibilities, although one person's idea of harmony might
    not align with others! Choices, choices…
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 使用工具，如Kuler，选择颜色可以是一次有趣的体验。它打开了一个充满可能性的世界，尽管一个人的和谐感可能与其他人不同！选择，选择……
- en: To help take some of the guesswork out of creating palettes, we can easily use
    the power of Less to create a suitable palette, based on our choice of color.
    Let's take a look at how this will work in practice.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助减少创建色板时的猜测，我们可以轻松地利用Less的强大功能，根据我们选择的颜色创建一个合适的色板。让我们看看这在实践中是如何工作的。
- en: Creating a color palette using Less
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Less创建颜色色板
- en: Now that we've chosen our color scheme, we can get stuck into creating our palette.
    There are literally hundreds of tools available, but we want Less to do all the
    heavy lifting for us.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经选择了我们的配色方案，我们可以开始创建我们的色板。实际上有数百种工具可供选择，但我们希望Less为我们做所有繁重的工作。
- en: 'Now, I have a confession to make: while we can absolutely get Less to do the
    hard work for us, we still have to work out the formulae that generates our colors.
    Or do we?'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我有一个坦白要讲：虽然我们可以让Less为我们做艰苦的工作，但我们仍然需要计算出生成我们颜色的公式。或者，我们不需要？
- en: Fortunately, one kind soul, Jimmy King (a developer at Meltmedia) has already
    produced a very simple, yet brilliant tool for this purpose. If we head over to
    [http://jimmyking.me/colors.less](http://jimmyking.me/colors.less), not only can
    we set a color picker to our choice of color, but also get a preview of suitable
    colors that fit different types of palettes. What's more, we can even get the
    Less code to generate the colors to boot!
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一位热心的朋友，Jimmy King（Meltmedia的开发者），已经为这个目的制作了一个非常简单但非常出色的工具。如果我们访问[http://jimmyking.me/colors.less](http://jimmyking.me/colors.less)，不仅可以将颜色选择器设置为我们选择的颜色，还可以预览适合不同类型色板的颜色。更重要的是，我们甚至可以得到生成颜色的Less代码！
- en: 'Let''s put this into action with a quick demo that uses our `#a67097` color
    from the previous exercise to create a Triadic-based color palette:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个快速演示来实施这个想法，演示使用之前练习中的`#a67097`颜色创建一个基于三色的色板：
- en: Download and extract a copy of `colorpalette.html` from the code that accompanies
    this book; we'll use this as a basis for our markup.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本书附带的代码中下载并解压`colorpalette.html`副本；我们将以此作为我们的标记的基础。
- en: 'In a separate file, add the following Less statements, beginning with creating
    variables that define our colors:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个单独的文件中，添加以下Less语句，从创建定义我们颜色的变量开始：
- en: '[PRE15]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We've used the spin function in this step; spin is used to rotate the hue angle
    of an color in a HSV color wheel. You can learn more about this operation at [http://lesscss.org/functions/#color-operations-spin](http://lesscss.org/functions/#color-operations-spin).
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在这个步骤中使用了spin函数；spin用于在HSV颜色轮中旋转颜色的色调角度。你可以在[http://lesscss.org/functions/#color-operations-spin](http://lesscss.org/functions/#color-operations-spin)了解更多关于这个操作的信息。
- en: 'Next, add the following mixins. Note that we can combine these with the color
    style rules shown further down in the code; I''ve separated these out for clarity:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，添加以下混入（mixins）。请注意，我们可以将这些与代码中显示的彩色样式规则结合起来；我为了清晰起见将它们分开：
- en: '[PRE16]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We also need some basic font styling; this is not essential, but it helps make
    it look better! Go ahead and add the following mixin:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要一些基本的字体样式；这不是必需的，但它有助于使其看起来更好！请继续添加以下混入：
- en: '[PRE17]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We''re almost done. Here come the most important mixins; these create the boxes
    and style them with the appropriate background colors:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们几乎完成了。接下来是最重要的混入（mixins）；这些创建框并使用适当的背景颜色来样式化它们：
- en: '[PRE18]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We need to make the demo look a little more presentable, so go ahead and add
    the following styles:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要让这个演示看起来更专业一些，所以请继续添加以下样式：
- en: '[PRE19]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Save the file as `colorpalette.less`. If we preview the results in a browser,
    we will see something akin to this screenshot:![Creating a color palette using
    Less](img/00120.jpeg)
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`colorpalette.less`。如果我们在一个浏览器中预览结果，我们将看到类似于以下截图的内容：![使用Less创建色板](img/00120.jpeg)
- en: At this point, you're probably thinking, "What's happened here?". Well, if we
    revert to Jimmy's tool, the keen-eyed among you should spot that I've used the
    formulae to produce a Triadic color palette. All we've done is packaged up the
    formulae into a small demo, where we're setting the background color for three
    boxes, based on the results of each formula.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能正在想，“这里发生了什么？”好吧，如果我们回到吉米的工具，你们中那些眼尖的人应该能注意到，我使用了公式来生成一个三色色板。我们所做的一切只是将这些公式打包成一个小的演示，在这个演示中，我们根据每个公式的结果设置三个框的背景颜色。
- en: Jimmy has produced formulae for a number of different palette types, so rather
    than reinvent the wheel, we can simply choose our principal color, then take a
    copy of the code automatically produced by the site once we've decided which palette
    to use! The key point though is that there is absolutely no room for debate as
    to whether the colors work; they are mathematically chosen to produce a harmonious
    palette.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 吉米为多种不同的色板类型产生了公式，所以我们不必重新发明轮子，我们只需选择我们的主色，然后在我们决定使用哪个色板后，自动生成代码的副本！不过，关键点是，关于颜色是否有效，绝对没有讨论的余地；这些颜色是数学上选择的，以产生和谐的色板。
- en: Tip
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When producing palettes, try to decide on and keep to a suitable naming convention.
    There are no hard and fast rules on format, but consistency and reuse is very
    much the order of the day!
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在制作色板时，尽量决定并坚持一个合适的命名约定。没有固定的格式规则，但一致性和重用是当务之急！
- en: So, we've seen how easy it is to produce color palettes and that Jimmy's tool
    makes it a cinch to get the all-important calculations needed to create each color.
    This gives me an idea… what if we were to ditch Photoshop and design in the browser
    instead?
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经看到制作色板是多么容易，吉米的工具使获取创建每种颜色所需的所有重要计算变得轻而易举。这让我有了一个想法…如果我们放弃Photoshop并在浏览器中设计会怎样？
- en: Ditching old habits
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 放弃旧习惯
- en: What?? No—that would be absolutely impossible, I hear you say! We can't do that…
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 什么？？不可能吧，我听到你说！我们不可能做到这一点…
- en: Or can we…? Well, surprising as it might sound, it is perfectly possible; what's
    more, Less can help make this a painless process. Let me explain.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 或者我们可以…？好吧，虽然听起来可能令人惊讶，但这完全可能；更重要的是，Less可以帮助使这个过程变得无痛。让我来解释。
- en: Historically, designers and developers have relied on using Photoshop to create
    mockups of sites. "Nothing wrong in this", I hear you say. However, it doubles
    the work; clients can't use the design to see how it looks and works, and changes
    cannot be made on the fly. Also, Photoshop is expensive. We need a high-end PC
    or Mac just to get the full benefit from using it; can developers working on small
    sites, where costs are a concern, really justify the cost?
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，设计师和开发者一直依赖使用 Photoshop 来创建网站的草图。"这没什么问题"，你可能会说。然而，这会加倍工作量；客户无法使用设计来查看其外观和功能，而且无法即时做出更改。此外，Photoshop
    价格昂贵。我们只需要高端的 PC 或 Mac 才能充分利用它；对于成本敏感的小型网站开发者来说，他们真的能证明这种成本是合理的吗？
- en: In contrast, designing straight into the browser makes the process more dynamic;
    we can make changes quickly and easily, particularly if Less has been used! We
    can even produce several style sheets that can completely alter the appearance
    of a site with just a few clicks; creating designs in Photoshop means recreating
    the base view from the ground up for each subsequent design. With the best will
    in the world, there is always a risk that each design will have some slight differences,
    despite following the same process in each case!
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，直接在浏览器中设计使过程更加动态；我们可以快速轻松地做出更改，尤其是如果使用了 Less 的话！我们甚至可以仅通过几次点击就生成几个样式表，这些样式表可以完全改变网站的外观；在
    Photoshop 中创建设计意味着为每个后续设计从头开始重新创建基本视图。尽管我们愿意这样做，但每次设计都可能会有一些细微的差异，尽管每个案例都遵循了相同的过程！
- en: However, we should not forget that the real key to design is actually not to
    concentrate on the color, but the content first. If we get that right, then the
    colors will fall easily into place.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们不应该忘记，设计的真正关键不是专注于颜色，而是内容。如果我们在这方面做得正确，那么颜色就会自然而然地就位。
- en: Note
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To help get the feel of the mindset of designing in the browser, Creative Bloq
    has published an interview with web developer, Sean Fioritto, which is available
    at [http://www.creativebloq.com/css3/why-web-developers-should-sketch-css-not-photoshop-51411711](http://www.creativebloq.com/css3/why-web-developers-should-sketch-css-not-photoshop-51411711).
    This makes for an interesting read!
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助大家感受在浏览器中设计的心态，Creative Bloq 发布了对网页开发者 Sean Fioritto 的采访，采访内容可在[http://www.creativebloq.com/css3/why-web-developers-should-sketch-css-not-photoshop-51411711](http://www.creativebloq.com/css3/why-web-developers-should-sketch-css-not-photoshop-51411711)找到。这是一篇很有趣的阅读材料！
- en: If, however, we really cannot afford to stop using Photoshop, then we can at
    least make our development workflow smarter. CSS Hat has made a plugin that can
    convert any design into the equivalent Less code and export them as Less files.
    It's available at [http://www.csshat.com](http://www.csshat.com), and versions
    are available for both Windows and Mac with licenses priced at 35 USD for both
    versions.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果我们真的负担不起停止使用 Photoshop，那么我们至少可以使我们的开发工作流程更智能。CSS Hat 开发了一个插件，可以将任何设计转换为等效的
    Less 代码，并将它们导出为 Less 文件。它可在[http://www.csshat.com](http://www.csshat.com)找到，并且有适用于
    Windows 和 Mac 的版本，两个版本的许可证价格均为 35 美元。
- en: Note
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To see it in action, Kezz Bacey has written a two-part tutorial that shows how
    easy it is to use the plugin to produce Less code; part 1 of the tutorial is available
    at [http://webdesign.tutsplus.com/tutorials/how-to-improve-your-photoshop-workflow-with-csshat-and-pnghat--cms-20786](http://webdesign.tutsplus.com/tutorials/how-to-improve-your-photoshop-workflow-with-csshat-and-pnghat--cms-20786)
    and part 2 at [http://webdesign.tutsplus.com/tutorials/how-to-code-a-photoshop-layout-with-csshat-lesshat-and-pnghat--cms-20997](http://webdesign.tutsplus.com/tutorials/how-to-code-a-photoshop-layout-with-csshat-lesshat-and-pnghat--cms-20997).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 要看到它的实际应用，Kezz Bacey 编写了一个两部分的教程，展示了如何轻松地使用这个插件来生成更少的 Less 代码；教程的第一部分可在[http://webdesign.tutsplus.com/tutorials/how-to-improve-your-photoshop-workflow-with-csshat-and-pnghat--cms-20786](http://webdesign.tutsplus.com/tutorials/how-to-improve-your-photoshop-workflow-with-csshat-and-pnghat--cms-20786)找到，第二部分在[http://webdesign.tutsplus.com/tutorials/how-to-code-a-photoshop-layout-with-csshat-lesshat-and-pnghat--cms-20997](http://webdesign.tutsplus.com/tutorials/how-to-code-a-photoshop-layout-with-csshat-lesshat-and-pnghat--cms-20997)。
- en: We're almost at the end of our mini journey of working with colors in Less.
    Before we finish and move to look at animation in the next chapter, we need to
    take a look at some legal requirements that every designer should consider within
    their designs. This is, of course, the WCAG standards; let's take a look at these
    in more detail.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎完成了在 Less 中使用颜色的迷你之旅。在我们完成并进入下一章查看动画之前，我们需要看看每个设计师在设计时都应该考虑的一些法律要求。当然，这是
    WCAG 标准；让我们更详细地看看这些。
- en: Working with W3C and WCAG standards
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与 W3C 和 WCAG 标准合作
- en: 'Throughout this chapter, we''ve been on a journey of discovery, seeing how
    various different functions within Less can help simplify the work required to
    create new colors. There is one important part of creating colors that we have
    yet to cover and which designers must be aware of: the need to ensure compliance
    with the WCAG guidelines for accessibility.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们一直在进行探索之旅，了解 Less 中的各种不同功能如何帮助简化创建新颜色所需的工作。在创建颜色方面，我们还有一项重要内容尚未涉及，设计师必须注意：确保符合
    WCAG 可访问性指南。
- en: Overcoming blocks on access to a site
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 克服网站访问障碍
- en: 'In this modern age, one would hope that all sites would be accessible to everyone;
    the truth is that this is not always the case. Access can be blocked for a number
    of reasons, and in terms of color, they are:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个现代时代，人们希望所有网站都对每个人可访问；但事实并非总是如此。访问可能因多种原因而被阻止，在颜色的方面，它们是：
- en: Visitors who cannot differentiate between particular colors and therefore can't
    access information that relies on the use of those colors to convey meaning (for
    example, red/green color blindness)
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于无法区分特定颜色且因此无法访问依赖于这些颜色来传达意义的信息的访客（例如，红绿色盲）
- en: Visitors who need to use devices that can't display information that uses color
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要使用无法显示使用颜色的信息的设备的访客
- en: Visitors with color deficiencies, who struggle to see sites that have foreground
    and background colors that are very close in hue
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于那些难以看到前景和背景颜色非常接近的网站的访客，他们可能存在颜色缺陷
- en: So, how can we get around these issues and ensure we produce a site that is
    accessible?
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何解决这些问题并确保我们创建的网站是可访问的？
- en: Introducing WCAG
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 WCAG
- en: WCAG has compiled an extensive list of guidelines to help guide designers through
    ensuring compliance, which can be viewed at [http://www.w3.org/TR/WCAG/](http://www.w3.org/TR/WCAG/).
    These need to be followed, although designers can opt to choose compliance at
    either A, Double-A, or Triple-A grade levels.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: WCAG 编制了一份广泛的指南列表，以帮助设计师确保合规性，这些指南可以在[http://www.w3.org/TR/WCAG/](http://www.w3.org/TR/WCAG/)查看。虽然设计师可以选择在
    A、双A 或三A 级别中选择合规性，但这些指南需要遵循。
- en: 'The WCAG recommendations make for dry reading, and there are, nevertheless,
    two key factors to consider, which in summary are:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: WCAG 建议可能难以阅读，但仍然有两个关键因素需要考虑，总结如下：
- en: Colors should not be used as the only means of conveying any information; a
    green button marked **OK** is preferable to a simple green circle
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不应仅使用颜色来传达任何信息；一个标有**OK**的绿色按钮比一个简单的绿色圆圈更可取
- en: Text (and images of text) should have a contrast ratio of at least 4.5:1, except
    when large-scale text is used, or the text forms part of a decorative image or
    brand logo
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文字（以及文字的图像）应至少具有 4.5:1 的对比度比率，除非使用大号文字，或者文字是装饰性图像或品牌标志的一部分
- en: 'To ensure that information is not likely to fall foul of WCAG compliance, we
    can use several guidelines:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保信息不太可能违反 WCAG 合规性，我们可以使用以下几条指南：
- en: Avoid using colored text or strong background colors
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免使用彩色文字或强烈的背景颜色
- en: Black text on white background is recommended (avoid using underlined text as
    your customers might think the text is a hyperlink when it is not)
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议使用黑色文字在白色背景上（避免使用下划线文字，因为您的客户可能会认为文字是超链接，而实际上并不是）
- en: Use standard fonts (for example, Arial, Times New Roman)
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标准字体（例如，Arial，Times New Roman）
- en: Uppercase text should not be used for entire page headings or blocks of text
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不应使用大写字母作为整个页面标题或文本块的字体
- en: In addition, we can use a number of tools to help us decide whether we have
    the right contrast levels. Two such examples are available at [http://www.dasplankton.de/ContrastA/](http://www.dasplankton.de/ContrastA/)
    and [http://webaim.org/resources/contrastchecker/](http://webaim.org/resources/contrastchecker/).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用一些工具来帮助我们决定是否达到了正确的对比度水平。两个这样的例子可以在[http://www.dasplankton.de/ContrastA/](http://www.dasplankton.de/ContrastA/)和[http://webaim.org/resources/contrastchecker/](http://webaim.org/resources/contrastchecker/)找到。
- en: Note
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'There are plenty of resources available online for further reading, including
    case examples and guidelines issued for specific companies or government organizations.
    Some examples include:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在线有大量资源可供进一步阅读，包括针对特定公司或政府机构的案例研究和指南。以下是一些例子：
- en: '[http://www.w3.org/WAI/WCAG20/quickref/](http://www.w3.org/WAI/WCAG20/quickref/)'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/WAI/WCAG20/quickref/](http://www.w3.org/WAI/WCAG20/quickref/)'
- en: '[http://www.w3.org/TR/2008/REC-WCAG20-20081211/](http://www.w3.org/TR/2008/REC-WCAG20-20081211/)'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/2008/REC-WCAG20-20081211/](http://www.w3.org/TR/2008/REC-WCAG20-20081211/)'
- en: '[http://www.w3.org/TR/compositing-1/](http://www.w3.org/TR/compositing-1/)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/compositing-1/](http://www.w3.org/TR/compositing-1/)'
- en: It is worth noting that the Less library has been modified to help compliance.
    Although it is not completely compliant yet, one example of change to help towards
    compliance is the pull request issued at [https://github.com/less/less.js/pull/1704](https://github.com/less/less.js/pull/1704);
    this deals with changes made to color functions within Less, such as multiply
    or overlay.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Less库已被修改以帮助合规。尽管它还没有完全合规，但一个有助于合规的更改示例是[https://github.com/less/less.js/pull/1704](https://github.com/less/less.js/pull/1704)上发出的拉取请求；这涉及到对Less中颜色函数（如乘法或叠加）所做的更改。
- en: Making a site useable
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使网站可用
- en: Okay, this might seem like a strange question, given we've just talked about
    how to make sites compliant, right?
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，鉴于我们刚刚讨论了如何使网站合规，这个问题可能看起来有些奇怪，对吧？
- en: Well, yes and no. While researching for this book, I came across a brilliant
    discussion on Stack Overflow, which talks about ensuring compliance to the WCAG
    guidelines and why adhering to them can actually be detrimental to your site.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，是的，也不是。在为这本书进行研究时，我遇到了一个关于确保遵守WCAG指南以及为什么遵守它们实际上可能对您的网站有害的精彩讨论。
- en: In a nutshell, the responder to the original question discusses the good work
    being done by the team behind the guidelines even though they are not perfect.
    He talks about the need to apply the guidelines with care and that only those
    that best suit a website should be used. He mentions that many people with disabilities
    will often find ways around information that is otherwise hidden from view, and
    that in some respects, they are the perfect individuals to help test the usability
    of a site!
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，原始问题的回答者讨论了尽管它们并不完美，但背后团队所做的好工作。他谈论了需要谨慎应用指南，并且只有最适合网站的那些指南应该被使用。他提到，许多残疾人通常会找到绕过那些本应隐藏在视线之外的信息的方法，从某些方面来说，他们是帮助测试网站可用性的完美人选！
- en: Note
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can read the full discussion at [http://stackoverflow.com/questions/21415785/wcag-vs-real-users-opinions](http://stackoverflow.com/questions/21415785/wcag-vs-real-users-opinions).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://stackoverflow.com/questions/21415785/wcag-vs-real-users-opinions](http://stackoverflow.com/questions/21415785/wcag-vs-real-users-opinions)上阅读完整的讨论。
- en: Summary
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Color management in Less can be seen as something of a paradox; while the tools
    are relatively simple to use, they can be used to produce complex designs that
    are only limited by the bounds of your imagination. Throughout this chapter, we've
    covered a number of tools that you can use to extract, mix, and blend colors.
    Let's take a moment to review what we have learned throughout this chapter.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在Less中的色彩管理可以看作是一种矛盾；虽然工具相对简单易用，但它们可以用来制作复杂的设计，这些设计的复杂程度仅限于你的想象力。在本章中，我们介绍了一些你可以用来提取、混合和混合颜色的工具。让我们花点时间回顾一下本章所学的内容。
- en: We began with a little theory to set the scene and introduce color management;
    we also learned a little about color spaces and formats. Our delve into using
    Less began with a look at using simple arithmetic operators such as multiplication
    or division; this was swiftly followed by an introduction to the various color
    functions available in Less and how these functions compared to working with Photoshop.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先用一点理论来设定场景并介绍色彩管理；我们还了解了一些关于色彩空间和格式的知识。我们使用Less的探索之旅从查看使用简单的算术运算符，如乘法或除法开始；紧接着是介绍Less中可用的各种颜色函数以及这些函数与使用Photoshop相比如何。
- en: Next up was an introduction to palettes and an analysis of some examples, to
    illustrate the importance of choosing colors carefully. This included using photos
    as a potential color source, which we then used to create a color palette using
    Less.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是关于调色板的介绍和一些示例分析，以说明仔细选择颜色的重要性。这包括使用照片作为潜在的颜色来源，然后我们使用Less创建了一个颜色调色板。
- en: Next up came something that some might see as controversial, which was a look
    at ditching old habits and moving to using something like Less to develop straight
    into the browser. While some may argue this is not sensible, we covered some of
    the reasons why this practice might turn out to be beneficial; for those who couldn't
    face the move, we looked at a simple way of getting the Less styles created automatically
    from Photoshop. To close out the chapter, we took a look at how developers must
    adhere to the WCAG guidelines on the use of color, why they were devised, and
    how we need to be careful in applying them to our sites.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论了一些可能被视为有争议的话题，那就是放弃旧习惯，转而使用类似Less的工具直接在浏览器中开发。虽然有些人可能会认为这并不合理，但我们讨论了为什么这种做法可能会带来好处的一些原因；对于那些无法面对这种转变的人来说，我们介绍了一种简单的方法，可以从Photoshop自动创建Less样式。为了结束本章，我们探讨了开发者必须遵守关于颜色使用的WCAG指南，为什么这些指南被制定，以及我们在应用它们到我们的网站上需要小心谨慎的原因。
- en: Phew! We certainly covered a lot! Let's move onto our next chapter, which will
    take a look at how we can use Less to simplify development of animation within
    our projects.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们确实覆盖了很多内容！接下来，让我们进入下一章，本章将探讨我们如何使用Less来简化项目中的动画开发。
