- en: Chapter 6. Data Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章. 数据管理
- en: With the development we have done already, the application is really taking
    shape. We can input and see the data. Now if we customize the content according
    to the need, we'll have the finished application we were originally hoping for.
    In this final chapter, we will implement the data import/export to restore or
    backup the data. This time, the data we refer to is the `Quotation` and `Bill`
    data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们已经完成的发展，应用程序真的开始成形了。我们可以输入并查看数据。现在，如果我们根据需要自定义内容，我们将得到我们最初希望完成的最终应用程序。在本章的最后，我们将实现数据导入/导出以恢复或备份数据。这次，我们指的是`报价`和`账单`数据。
- en: Designing Import and Export
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计导入和导出
- en: Let's start by thinking about the `Quotation` table. Because `Bill` is mostly
    the same as `Quotation`, we'll just implement `Quotation` here. Try this implementation
    with `Bill`, as well by yourself. First, we'll add an `Export` and `Import` button
    in the `Quotation` list, so that it begins to function. Next, we'll make the file
    start downloading when the `Export` button is pressed. We'll add a new panel so
    that we can visually check the selected data that we are about to import. So let's
    go ahead and create this type of data import and export functions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先考虑`报价`表。因为`账单`与`报价`大部分相同，所以我们在这里只实现`报价`。尝试用`账单`亲自尝试这种实现。首先，我们在`报价`列表中添加`导出`和`导入`按钮，使其开始工作。接下来，当按下`导出`按钮时，我们将使文件开始下载。我们将添加一个新的面板，以便我们可以直观地检查即将导入的选定的数据。所以让我们继续创建这种类型的数据导入和导出功能。
- en: Data format
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据格式
- en: At first, when exporting, let's consider the data format in which it will be
    downloaded. This time, we're thinking of outputting in the **TSV format** instead
    of CSV or XML. TSV is easier for the developers to read and it's very simple to
    generate with JavaScript. The following list shows the order of output.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在最初导出时，让我们考虑将要下载的数据格式。这次，我们考虑以**TSV格式**输出，而不是CSV或XML。TSV对开发者来说更容易阅读，并且使用JavaScript生成非常简单。以下列表显示了输出的顺序。
- en: '`Quotation` and `Quotations` are outputted in a single file. In the case of
    quotation, the order of output is as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`报价`和`报价单`在一个文件中输出。在报价的情况下，输出的顺序如下：'
- en: '`quotation`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quotation`'
- en: '`id`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`'
- en: '`status`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`status`'
- en: '`customer`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`customer`'
- en: '`note`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`note`'
- en: '`modified`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modified`'
- en: '`created`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`created`'
- en: 'In the case of quotations, the order of output is as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在报价的情况下，输出的顺序如下：
- en: '`quotations`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quotations`'
- en: '`id`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`'
- en: '`status`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`status`'
- en: '`parent`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parent`'
- en: '`description`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`'
- en: '`qty`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`qty`'
- en: '`price`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`price`'
- en: '`sum`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sum`'
- en: '`modified`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modified`'
- en: '`created`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`created`'
- en: For the very first item, enter the table name, this will let you output multiple
    tables at the same time.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个项目，输入表名，这将允许您同时输出多个表。
- en: Creating the Import and Export views in Quotation
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在报价中创建导入和导出视图
- en: 'First, we''ll add the `button` feature and modify the code for import and export
    (source file: `01_making_the_import_and_export_view_in_quotation/app/view/quotation/List.js`):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将添加`按钮`功能并修改导入和导出的代码（源文件：`01_making_the_import_and_export_view_in_quotation/app/view/quotation/List.js`）：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should now see the following form:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该看到以下表单：
- en: '![Creating the Import and Export views in Quotation](img/5446OS_06_01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![在报价中创建导入和导出视图](img/5446OS_06_01.jpg)'
- en: 'Next, implement the button''s event handler (source file: `01_making_the_import_and_export_view_in_quotation/app/controller/quotation/List.js`):.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，实现按钮的事件处理器（源文件：`01_making_the_import_and_export_view_in_quotation/app/controller/quotation/List.js`）：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Detect the actions for `import` and `export` you set up in the `button` feature,
    and then assign `onImport` and `onExport` to the various click events. Of course,
    we will make `onImport` and `onExport` from scratch.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 检测在`按钮`功能中设置的`导入`和`导出`操作，然后将`onImport`和`onExport`分配给各种点击事件。当然，我们将从头开始创建`onImport`和`onExport`。
- en: Preparing the server side for export
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备导出服务器
- en: In order to download the file, we will make the `quotation-export.php` file.
    The file can be installed anywhere, but this time we have positioned it in the
    document route where the `index.php` file is located.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了下载文件，我们将创建`quotation-export.php`文件。该文件可以安装在任何位置，但这次我们将其放置在包含`index.php`文件的文档路由中。
- en: 'The process to export the `Quotation` data will be implemented by PHP. It''s
    a long one, so please refer to the source file for the code (source file: `02_preparing_the_server_side_for_export/quotation-export.php`).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 导出`报价`数据的过程将由PHP实现。这是一个较长的过程，因此请参考源文件中的代码（源文件：`02_preparing_the_server_side_for_export/quotation-export.php`）。
- en: Execute SQL and output it to match the data format we thought up earlier.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 执行SQL并将输出与之前构思的数据格式相匹配。
- en: In order to change the filename to the second one, the filename that comes after
    the quotation will have the year, month, date, hour, minute, and second recorded.
    Then, it is downloaded with the `.tsv` file extension. Please check if you can
    download the file by entering the `quotation-export.php` URL directly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将文件名改为第二个，引用之后的文件名将包含年份、月份、日期、小时、分钟和秒。然后，它将以`.tsv`文件扩展名下载。请检查你是否可以直接输入`quotation-export.php`
    URL来下载文件。
- en: 'Next, let''s make this URL move when you press down the button we just made.
    (source file: `02_preparing_the_server_side_for_export/app/controller/quotation/List.js`):.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们在按下我们刚刚制作的按钮时移动这个URL。（源文件：`02_preparing_the_server_side_for_export/app/controller/quotation/List.js`）：.
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating a temporary view for import
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建导入的临时视图
- en: Next, we will continue by implementing the import process. Like it was explained
    earlier, upload the data you will import and then implement it, so that you can
    import after you have visually checked it.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将继续实现导入过程。就像之前解释的那样，上传你将要导入的数据，然后实现它，这样你就可以在视觉上检查后再导入。
- en: Let's make the `myapp-import` event fire when we press the `import` button,
    and implement it so that the panel shows to confirm the import data.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在按下`导入`按钮时触发`myapp-import`事件，并实现它以便面板显示以确认导入数据。
- en: 'First, let''s implement the listener. When this event happens, the URL will
    change to `#!/quotation/import` (source file: `03_making_a_temporary_view_for_import/app/controller/quotation/Quotation.js`):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们实现监听器。当这个事件发生时，URL将更改为`#!/quotation/import`（源文件：`03_making_a_temporary_view_for_import/app/controller/quotation/Quotation.js`）：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, implement so that the event fires (source file: `03_making_a_temporary_view_for_import/app/controller/quotation/List.js`):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，实现事件触发（源文件：`03_making_a_temporary_view_for_import/app/controller/quotation/List.js`）：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Implement the contents of the `onImport` method that we implemented earlier.
    From the `List` view object, fire the `myapp-import` event with `fireEvent`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 实现我们之前实现的`onImport`方法的内容。从`List`视图对象中，使用`fireEvent`触发`myapp-import`事件。
- en: 'When this event happens, the URL will be changed. Next, modify `onShow` so
    that the panel for imports shows up (source file: `03_making_a_temporary_view_for_import/app/controller/quotation/Quotation.js`):'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当这个事件发生时，URL将会改变。接下来，修改`onShow`，以便导入面板显示出来（源文件：`03_making_a_temporary_view_for_import/app/controller/quotation/Quotation.js`）：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameter analysis is being performed by the process we made earlier. Using
    this process, if you have an `import` property, the `import` panel will be displayed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参数分析是通过我们之前制作的过程进行的。使用此过程，如果你有一个`导入`属性，`导入`面板将会显示。
- en: 'We haven''t made the main `import` panel. Here, we have just made a very simple
    panel so that it can be displayed for the time being (source file: `03_making_a_temporary_view_for_import/app/view/quotation/Import.js`):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有制作主要的`导入`面板。在这里，我们只是制作了一个非常简单的面板，以便暂时显示（源文件：`03_making_a_temporary_view_for_import/app/view/quotation/Import.js`）：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add this panel (`app/view/quotation/Quotation.js`) to the `screen` panel item
    (source file: `03_making_a_temporary_view_for_import/app/view/quotation/Quotation.js`).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 将此面板（`app/view/quotation/Quotation.js`）添加到`screen`面板项（源文件：`03_making_a_temporary_view_for_import/app/view/quotation/Quotation.js`）。
- en: When you configure an item, you should specify the `xtype`. To do this, set
    up the class name it requires so that dynamic loading can take place.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当你配置一个项时，你应该指定`xtype`。为此，设置它所需的类名，以便可以进行动态加载。
- en: 'In this state, execute the whole application. When you press the `import` button,
    the following panel will be displayed:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种状态下，执行整个应用程序。当你按下`导入`按钮时，将显示以下面板：
- en: '![Creating a temporary view for import](img/5446OS_06_02.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![创建导入的临时视图](img/5446OS_06_02.jpg)'
- en: The `import` panel is still temporary, and the `grid` panel we implemented earlier
    is still not displayed; but we can check with the `onShow` event handler that
    it is changing properly.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`导入`面板仍然是临时的，我们之前实现的`网格`面板还没有显示；但我们可以通过`onShow`事件处理器来检查它是否正在正确地变化。'
- en: Creating the CT view for import
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建导入的CT视图
- en: 'We haven''t created the CT that we usually would have made already. So, let''s
    make the CT to display the temporary import panel we made earlier (source file:
    `04_making_the_ct_view_for_import/ct/quotation/view_import.html`).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有创建我们通常已经制作的CT。所以，让我们制作CT来显示我们之前制作的临时导入面板（源文件：`04_making_the_ct_view_for_import/ct/quotation/view_import.html`）。
- en: 'For the HTML, there shouldn''t be any problems if we duplicate a different
    HTML and amend the JavaScript file to be read in the same way (source file: `04_making_the_ct_view_for_import/ct/quotation/view_import.js`):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于HTML，如果我们复制不同的HTML并修改JavaScript文件以相同的方式读取，应该不会有任何问题（源文件：`04_making_the_ct_view_for_import/ct/quotation/view_import.js`）
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, let''s prepare a grid for this panel. After the upload is complete, it
    will receive the display data from JSON data. So, let''s make a store with the
    `memory` proxy (source file: `04_making_the_ct_view_for_import/app/store/QuotationImport.js`):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为这个面板准备一个网格。上传完成后，它将从JSON数据中接收显示数据。所以，让我们使用`memory`代理创建一个存储（源文件：`04_making_the_ct_view_for_import/app/store/QuotationImport.js`）
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Also, use the following code to prepare a grid for this panel (source file:
    `04_making_the_ct_view_for_import/app/store/QuotationImportItems.js`):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用以下代码为此面板准备一个网格（源文件：`04_making_the_ct_view_for_import/app/store/QuotationImportItems.js`）
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The reason we have created two `memory` proxies is because we will prepare
    one each for `Quotation` and `Quotations`, and then make two grids. Now, we are
    going to use this in `Grid`; but we will add the following code to make sure that
    it displays without any problems in CT (source file: `04_making_the_ct_view_for_import/ct/quotation/view_import.js`).'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建两个`memory`代理的原因是因为我们将为`Quotation`和`Quotations`各自准备一个，然后制作两个网格。现在，我们将在`Grid`中使用这个，但我们将添加以下代码以确保它在CT中无问题显示（源文件：`04_making_the_ct_view_for_import/ct/quotation/view_import.js`）
- en: To make sure that the two stores we made previously can use the `view_import.js`
    script in the CT directory, let's change it so that it can instantiate when it's
    initially launched.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们之前制作的两个存储可以使用CT目录中的`view_import.js`脚本，让我们将其修改为在启动时可以实例化。
- en: 'Now, we''ll quickly make the view. We''ll remodel the temporary `Import` panel
    we made earlier (source file: `04_making_the_ct_view_for_import/app/view/quotation/Import.js`):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将快速制作视图。我们将重新设计之前制作的临时`Import`面板（源文件：`04_making_the_ct_view_for_import/app/view/quotation/Import.js`）
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As mentioned earlier, we will make two `grid` panels. This is for `Quotation`
    and `Quotations`. Again, the layout is a **border** **layout** and it specifies
    flex.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将制作两个`grid`面板。这是为`Quotation`和`Quotations`准备的。再次强调，布局是**边框**布局，并指定了弹性。
- en: Users who have been using Ext JS for a long time might think this is strange;
    but with the current Ext JS, you can specify flex even in a border layout.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 经常使用Ext JS的用户可能会觉得这很奇怪；但根据当前的Ext JS，你甚至可以在边框布局中指定弹性。
- en: So, if you set up `flex:1` for both `north` and `center`, it will equally arrange
    the top and bottom of the form; and with `north` set up as `split:true`, the splitter
    can be displayed.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你为`north`和`center`都设置`flex:1`，它将平均安排表单的顶部和底部；并且当`north`设置为`split:true`时，分割器可以显示。
- en: 'If you check the display, it will look like the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检查显示，它将看起来像以下这样：
- en: '![Creating the CT view for import](img/5446OS_06_03.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![创建导入的CT视图](img/5446OS_06_03.jpg)'
- en: Creating Upload and Show Data in the grid
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建上传和显示网格中的数据
- en: 'This time, upload the data you exported and let''s display it in a grid. To
    do this, add a controller in `app.js`. You might have to jog your memory because
    it has been a while since the last time! (Source file: `05_making_upload_and_show_data_in_the_grid/app/Application.js`.):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，上传你导出的数据，让我们在网格中显示它。为此，在`app.js`中添加一个控制器。你可能需要回忆一下，因为上次使用已经有一段时间了！（源文件：`05_making_upload_and_show_data_in_the_grid/app/Application.js`）
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, we will make this controller (source file: `05_making_upload_and_show_data_in_the_grid/app/controller/quotation/Import.js`):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将制作这个控制器（源文件：`05_making_upload_and_show_data_in_the_grid/app/controller/quotation/Import.js`）
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, temporarily change the `upload` button (that we created previously) to
    `filefield` (source file: `05_making_upload_and_show_data_in_the_grid/app/view/quotation/Import.js`):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，暂时将之前创建的`upload`按钮更改为`filefield`（源文件：`05_making_upload_and_show_data_in_the_grid/app/view/quotation/Import.js`）
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Furthermore, add the `API` key in the config options and specify the `Direct`
    function in `submit`. This panel is a form panel. Upload the file using the `submit`
    method. Next, make the `Direct` function that we specified in `submit` (source
    file: `05_making_upload_and_show_data_in_the_grid/p` `hp/config.php`).'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在配置选项中添加`API`密钥，并在`submit`中指定`Direct`函数。这个面板是一个表单面板。使用`submit`方法上传文件。接下来，制作我们在`submit`中指定的`Direct`函数（源文件：`05_making_upload_and_show_data_in_the_grid/php/config.php`）
- en: 'We''ll add the following method to the `MyAppQuotation` class:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向`MyAppQuotation`类添加以下方法：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We''ll actually implement the method we added previously. It''s too long to
    include in this text, so please refer to the source files for the code (source
    file: `05_making_upload_and_show_data_in_the_grid/php/classes/MyAppQuotation.php`).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将实际实现之前添加的方法。由于篇幅过长，无法包含在此文本中，请参考源代码文件（源文件：`05_making_upload_and_show_data_in_the_grid/php/classes/MyAppQuotation.php`）。
- en: Return the upload data again with JSON. If you are thinking of building an application,
    you should perform an input check because the user can input whatever information
    they like with a TSV file.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用JSON返回上传数据。如果你打算构建一个应用程序，你应该执行输入检查，因为用户可以使用TSV文件输入他们喜欢的任何信息。
- en: With the controller you implemented before, use the `loadData` method and read
    the data that was returned from the server side into the `MemoryStore` method.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你之前实现的控制器，使用`loadData`方法并将从服务器端返回的数据读取到`MemoryStore`方法中。
- en: Executing the Import data
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行导入数据
- en: 'Once you have displayed the read data in the grid and checked it, you can create
    a button to apply it to the database (source file: `06_execute_import_data /app/view/quotation/Import.js`):'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在网格中显示了读取的数据并检查了它，你就可以创建一个按钮将其应用到数据库中（源文件：`06_execute_import_data /app/view/quotation/Import.js`）：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Let''s make it so that it is impossible to press the button in the initial
    state. It will enable the button once the previous data upload has been complete
    (source file: `06_execute_import_data /app/controller/quotation/Import.js`):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确保在初始状态下无法按下按钮。一旦之前的数据上传完成，按钮将被启用（源文件：`06_execute_import_data /app/controller/quotation/Import.js`）：
- en: '[PRE16]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, we are calling the `executeImport` and `Direct` functions. That''s right,
    we haven''t made it yet. Let''s make this and make it possible to receive data
    from the client side (source file: `06_execute_import_data /php/config.php`):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们正在调用`executeImport`和`Direct`函数。没错，我们还没有完成。让我们实现这个功能，使其能够从客户端接收数据（源文件：`06_execute_import_data
    /php/config.php`）：
- en: '[PRE17]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We''ll implement the method we added to the `config.php` file. Again, this
    is too long to show here, so please refer to the source file (source file: `06_execute_import_data
    /php/classes/MyAppQuotation.php`).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`config.php`文件中实现之前添加的方法。同样，由于篇幅过长，无法在此展示，请参考源文件（源文件：`06_execute_import_data
    /php/classes/MyAppQuotation.php`）。
- en: When the data has been received, empty the inside of the database once with
    `Truncate` and insert the new data. Whether this is a good or bad way to do it
    will depend on the system you make.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据被接收后，使用`Truncate`一次性清空数据库内部，然后插入新的数据。这样做是好是坏将取决于你构建的系统。
- en: Furthermore, if you look closely at the code, you'll know that error processing
    is not at a high level. If you are intending to make this at a commercial level,
    you will have to build up this area. Already, the implementation is complete.
    But finally, let's change the URL to `#!/quotation` to change it to a list display,
    and then finish.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你仔细查看代码，你会知道错误处理并没有达到高级别。如果你打算将这个项目商业化，你将不得不构建这个区域。已经，实现已经完成。但最后，让我们将URL更改为`#!/quotation`以将其更改为列表显示，然后完成。
- en: Summary
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have motored through implementing the `Export` and `Import` data. There are
    still many points to cover, such as input checks and the error checks. But after
    learning this flow, I think you now have the base to customize this database in
    the way that you want.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了`Export`和`Import`数据的实现。还有许多要点需要覆盖，例如输入检查和错误检查。但学习了这个流程后，我认为你现在有了按照你想要的方式定制这个数据库的基础。
- en: Well done! You've made it to the end of the book!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！你已经读完了这本书的最后一页！
- en: 'Let''s go over what you have achieved:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下你所取得的成就：
- en: You made the data structure
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你创建了数据结构
- en: You made the application architecture
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你创建了应用程序架构
- en: You made the input and output by using grids and fields on the browser
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你通过使用浏览器上的网格和字段进行了输入和输出
- en: You developed the application to obtain information using various charts
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你开发了使用各种图表获取信息的应用程序
- en: You made the data export and import management features
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你完成了数据导出和导入管理功能
- en: Each feature is fundamental to an application of this kind. From now on, if
    you're thinking of creating something similar in your next project, please use
    this sample application as a base for your application. You only need to change
    a few points, and then you should be able to create a customized application very
    quickly.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每个功能对于此类应用程序都是基本的。从现在开始，如果你在下一个项目中考虑创建类似的东西，请将这个示例应用程序作为你应用程序的基础。你只需要更改几个点，然后你应该能够非常快速地创建一个定制应用程序。
- en: Incorporating the architecture from this book into applications you have made,
    or are about to make, will simplify control and improve maintenance. It will also
    give you have high-level and versatile history management and let you add new
    screens with ease.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 将本书中的架构应用到你所制作或即将制作的应用程序中，将简化控制并提高维护性。它还将为你提供高级且通用的历史管理功能，并让你轻松添加新屏幕。
- en: However, the sample application introduced in this book needed some extra features
    for actual real-world use. So we added some things here and there at the end of
    this chapter to brush up the application.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，本书中介绍的这个示例应用程序在实际应用中需要一些额外的功能。因此，我们在本章的结尾添加了一些内容，以完善这个应用程序。
- en: A list of the extra edited code files can be found in the sample code folder
    for this chapter. Please refer to this to see the final modifications we made
    to the application.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的示例代码文件夹中可以找到额外编辑的代码文件列表。请参考此列表，查看我们对应用程序所做的最终修改。
- en: Also, we have included the comment `// update code` next to any modifications.
    Just search inside the code with that comment, and you should be able to see changes
    straight away.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们在任何修改旁边都包含了注释 `// update code`。只需在代码中搜索这个注释，你应该能够立即看到更改。
- en: Finally, remember that if you get lost, or if you hit a brick wall in one of
    your future projects, just take another look at this application and see if it
    can offer you some kind of solution.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，记住，如果你在未来的某个项目中迷失了方向，或者遇到了难以逾越的障碍，只需再次查看这个应用程序，看看它是否能为你提供某种解决方案。
- en: I hope that you will be able to create some fantastic applications! Good luck
    and happy coding!
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你们能够创造出一些令人惊叹的应用程序！祝你们好运，编码愉快！
