- en: Chapter 8. Advanced PhoneGap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章. 高级PhoneGap
- en: '*Enter globalization and localization if you want your application to reach
    users of multiple countries and cultures. Your application should be able to support
    multiple languages/locales and this can be achieved by using the Globalization
    API and libraries related to localization. Think of support for multiple gestures
    if you want the application to be more advanced and user-friendly.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果您希望您的应用程序能够触及多个国家和文化的用户，请输入全球化与本地化。您的应用程序应能够支持多种语言/区域，这可以通过使用全球化API和相关本地化库来实现。如果您希望应用程序更先进且用户友好，请考虑支持多种手势。*'
- en: 'In this chapter, you will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将：
- en: Learn how to use the Globalization API to support the locale of the mobile app
    user
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用全球化API来支持移动应用程序用户的区域设置
- en: Learn how to localize the application by showing the content in multiple languages
    based on the user's choice
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何根据用户的喜好以多种语言显示内容来本地化应用程序
- en: Get an overview of the libraries providing gesture support
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取提供手势支持的库的概述
- en: Learn how to implement multiple touch gestures to enhance the user experience
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何实现多个触摸手势以增强用户体验
- en: Learn how to remove the 300 ms delay introduced during click events
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何移除点击事件中引入的300毫秒延迟
- en: Using the Globalization API
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用全球化API
- en: In computing, globalization, internationalization, and localization are means
    of adapting computer software to different languages, regional differences, and
    the technical requirements of a target market. Let's see these in detail.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机科学中，全球化、国际化、本地化是适应不同语言、区域差异和目标市场技术要求的手段。让我们详细看看这些。
- en: The term **localization** refers to all the activities needed before your app
    can be deployed in different languages and according to local cultural conventions.
    Before starting to localize an app, you have to **internationalize** your code
    by removing any language and cultural dependencies and design your code in order
    for it to be adapted to various languages without engineering changes. You can
    then localize your app, translate client-facing content and labels, and otherwise
    adapt it so that it works well in a particular locale.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**本地化**指的是在您的应用程序能够在不同语言和当地文化规范下部署之前所需的所有活动。在开始本地化应用程序之前，您必须通过移除任何语言和文化依赖项并设计代码以便它能够适应各种语言而无需进行工程更改来**国际化**您的代码。然后，您可以本地化应用程序，翻译面向客户端的内容和标签，并对其进行其他适应，以便在特定区域中良好运行。
- en: The term **locale** refers to a collection of settings or preferences to be
    used in localization. A locale is often described as a language and country pair
    such as en-US, de-AT, it-IT, and so on.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**区域**指的是用于本地化的设置或首选项的集合。区域通常描述为语言和国家对的组合，如en-US、de-AT、it-IT等。
- en: The term **globalization** stands for the combination of internationalization
    and localization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**全球化**代表国际化与本地化的结合。
- en: 'There are some odd-looking abbreviations in which a number is used to indicate
    the number of letters between the first and last letters used to refer to internationalization,
    localization, and globalization:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有些看起来奇怪的缩写中使用了数字来表示用于指代国际化、本地化和全球化的第一个和最后一个字母之间的字母数：
- en: '`i18n`: This stands for internationalization'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i18n`: 这代表国际化'
- en: '`l10n`: This stands for localization'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l10n`: 这代表本地化'
- en: '`g11n`: This stands for globalization'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`g11n`: 这代表全球化'
- en: Note
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Software internationalization is a huge topic because it covers plurals, dates,
    special characters, and so on. Discussing all of them is beyond the scope of this
    book. If you are interested in learning more about internationalization, take
    a look at the GNU project gettext ([http://www.gnu.org/software/gettext/manual/](http://www.gnu.org/software/gettext/manual/)),
    the globalize project ([https://github.com/jquery/globalize](https://github.com/jquery/globalize)),
    or the Jed project ([http://slexaxton.github.io/Jed/](http://slexaxton.github.io/Jed/)).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 软件国际化是一个很大的话题，因为它涵盖了复数、日期、特殊字符等。讨论所有这些内容超出了本书的范围。如果您想了解更多关于国际化的知识，请查看GNU项目gettext
    ([http://www.gnu.org/software/gettext/manual/](http://www.gnu.org/software/gettext/manual/))、globalize项目
    ([https://github.com/jquery/globalize](https://github.com/jquery/globalize)) 或Jed项目
    ([http://slexaxton.github.io/Jed/](http://slexaxton.github.io/Jed/))。
- en: 'PhoneGap offers great support for localization through the Globalization API
    that is accessible through the `globalization` object. You can install the plugin
    to your project as shown here:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap通过`globalization`对象提供的全球化API提供了强大的本地化支持。您可以将插件安装到项目中，如下所示：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `globalization` object is a child of the `navigator` object, and therefore
    has global scope. In order to access the `globalization` object, it''s enough
    to type the following line of code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`globalization`对象是`navigator`对象的子对象，因此具有全局作用域。为了访问`globalization`对象，只需输入以下代码行即可：'
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `globalization` object exposes several asynchronous methods that have a
    similar signature. In fact, usually most methods accept an argument, a success
    and a failure handler, and optionally an `options` object:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`globalization`对象暴露了几个具有类似签名的异步方法。实际上，通常大多数方法接受一个参数、一个成功处理程序和一个失败处理程序，以及可选的`options`对象：'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Not all the methods accept an argument and the `options` object; some of them
    accept only a success and a failure handler. The failure handler receives a `GlobalizationError`
    object as an argument. There are two properties defined on this object: `message`
    and `code`. The first one contains a string describing the error details; the
    second one contains an integer equal to one of the following pseudo constants
    defined in the `GlobalizationError` object:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有方法都接受参数和`options`对象；其中一些方法仅接受成功和失败处理程序。失败处理程序接收一个`GlobalizationError`对象作为参数。该对象上定义了两个属性：`message`和`code`。第一个属性包含描述错误详细信息的字符串；第二个属性包含一个整数，等于在`GlobalizationError`对象中定义的以下伪常量之一：
- en: '`GlobalizationError.UNKNOWN_ERROR` (return value `0`): This means a generic
    error occurred'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlobalizationError.UNKNOWN_ERROR`（返回值`0`）：这意味着发生了通用错误'
- en: '`GlobalizationError.FORMATTING_ERROR` (return value `1`): This means an error
    occurred during a formatting operation'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlobalizationError.FORMATTING_ERROR`（返回值`1`）：这意味着在格式化操作期间发生错误'
- en: '`GlobalizationError.PARSING_ERROR` (return value `2`): This means an error
    occurred during a parsing operation'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlobalizationError.PARSING_ERROR`（返回值`2`）：这意味着在解析操作期间发生错误'
- en: '`GlobalizationError.PATTERN_ERROR` (return value `3`): This means an error
    occurred while recovering a currency, date, or number pattern'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlobalizationError.PATTERN_ERROR`（返回值`3`）：这意味着在恢复货币、日期或数字模式时发生错误'
- en: 'The Globalization API exposes the following methods defined in the `navigator.globalization`
    object:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Globalization API暴露了在`navigator.globalization`对象中定义的以下方法：
- en: '`getPreferredLanguage`: This returns the string identifier for the device''s
    current language; the string is stored in the `value` property of the object received
    as an argument in the success handler (for example, `{value: ‘English''}`)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getPreferredLanguage`：此方法返回设备当前语言的字符串标识符；字符串存储在成功处理程序接收的对象的`value`属性中（例如，`{value:
    ‘English''}`）'
- en: '`getLocaleName`: This returns the locale identifier according to the device''s
    current language; the string is stored in the `value` property of the object received
    as an argument in the success handler (for example, `{value: ‘en''}`)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getLocaleName`：此方法根据设备的当前语言返回区域标识符；字符串存储在成功处理程序接收的对象的`value`属性中（例如，`{value:
    ‘en''}`）'
- en: '`dateToString`: This returns a date formatted as a string according to the
    client''s locale and time zone; the method accepts a `Date` object as the first
    argument and an optional `options` object as the last argument:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dateToString`：此方法根据客户端的区域设置和时区将日期格式化为字符串；该方法接受一个`Date`对象作为第一个参数，以及一个可选的`options`对象作为最后一个参数：'
- en: '[PRE3]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The returned result is stored in the `value` property of the object received
    as an argument in the success handler (for example, `{value: ‘06/14/2013 12:49
    PM''}`).'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '返回的结果存储在成功处理程序接收的对象的`value`属性中（例如，`{value: ‘06/14/2013 12:49 PM''}`）。'
- en: '`stringToDate`: This parses a date formatted as a string, and depending on
    the device''s preferences and calendar, returns the corresponding `Date` object
    as an argument in the success handler.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stringToDate`：此方法解析格式为字符串的日期，并根据设备的偏好和日历返回相应的`Date`对象作为成功处理程序中的参数。'
- en: '`getDatePattern`: This returns an object received as an argument in the success
    handler containing the following:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getDatePattern`：此方法返回一个对象，作为成功处理程序中的参数接收，包含以下内容：'
- en: A pattern string to format and parse dates according to the device's preferences
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于根据设备偏好格式化和解析日期的模式字符串
- en: The time zone of the device
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备的时区
- en: The difference in seconds between the device's time zone and the universal time
    and the offset in seconds between the device's non-daylight saving time zone
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备时区与通用时间之间的秒数差以及设备非夏令时时区与通用时间之间的秒数差
- en: 'The client''s daylight saving time zone (for example, `{pattern: ‘dd/MM/yyyy
    HH:mm'', timezone: ‘CEST'', utc_offset: 3600, dst_offset: 3600}`)'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '客户端的夏令时时区（例如，`{pattern: ‘dd/MM/yyyy HH:mm‘, timezone: ‘CEST‘, utc_offset: 3600,
    dst_offset: 3600}`）'
- en: This method accepts an optional `options` object through which it's possible
    to specify the format length (that is, `short`, `medium`, `long`, or `full`) and
    the data to be returned (that is, `date`, `time`, or `date and time`)
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此方法通过可选的`options`对象接受，可以通过它指定格式长度（即`short`、`medium`、`long`或`full`）和要返回的数据（即`date`、`time`或`date
    and time`）
- en: '`getDateNames`: This returns an array of names of the months or days of the
    week, depending on the device''s settings; the array is stored in the `value`
    property of the object received as an argument in the success handler (that is,
    `{value: Array[12]}`)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getDateNames`: 该函数返回一个包含月份或星期名称的数组，具体取决于设备的设置；数组存储在成功处理程序接收到的对象中的`value`属性中（即，`{value:
    Array[12]}`）'
- en: '`isDayLightSavingsTime`: This returns a Boolean stating whether daylight saving
    time is in effect for a given `Date` object passed as the first argument using
    the device''s time zone and calendar; the value is stored in the `dst` property
    of the object received as an argument in the success handler (for example, `{dst:
    true}`)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isDayLightSavingsTime`: 该函数返回一个布尔值，表示是否对作为第一个参数传入的`Date`对象使用设备的时区和日历实施夏令时；值存储在成功处理程序接收到的对象中的`dst`属性中（例如，`{dst:
    true}`）'
- en: '`getFirstDayOfWeek`: This returns the first day of the week as a number, depending
    on the device''s user preferences and calendar, assuming that the days of the
    week are numbered starting from `1` (= Sunday); the string is stored in the `value`
    property of the object received as an argument in the success handler (for example,
    `{value: 1}`)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getFirstDayOfWeek`: 该函数返回一周的第一天作为数字，取决于设备的用户偏好和日历，假设一周的天数从`1`开始编号（即星期日）；字符串存储在成功处理程序接收到的对象中的`value`属性中（例如，`{value:
    1}`）'
- en: '`numberToString`: This returns the number passed as the first argument formatted
    as a string according to the client''s locale and preferences; the number is stored
    in the `value` property of the object received as an argument in the success handler
    (for example, `{value: ‘12,456,246''}`)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numberToString`: 该函数将作为第一个参数传入的数字格式化为字符串，格式根据客户端的区域设置和偏好；数字存储在成功处理程序接收到的对象中的`value`属性中（例如，`{value:
    ‘12,456,246''}`）'
- en: '`stringToNumber`: This returns the string passed as the first argument formatted
    as a number according to the client''s locale and preferences; the number is stored
    in the `value` property of the object received as an argument in the success handler
    (for example, `{value: 1250.04}`)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stringToNumber`: 该函数将作为第一个参数传入的字符串格式化为数字，格式根据客户端的区域设置和偏好；数字存储在成功处理程序接收到的对象中的`value`属性中（例如，`{value:
    1250.04}`）'
- en: '`getNumberPattern`: This returns an object received as an argument in the success
    handler containing the following:'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getNumberPattern`: 该函数返回一个对象，作为成功处理程序中的参数，包含以下内容：'
- en: A pattern string to format and parse numbers according to the device's preferences
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于格式化和解析数字的格式字符串，根据设备的偏好
- en: 'The number of fractional digits to use when parsing and formatting numbers,
    the rounding increment to use when parsing and formatting, and so on (for example,
    `{decimal: ‘.'', fraction: 0, grouping: ‘,'', negative: ‘-'', pattern: ‘#,##0.###'',
    positive: ‘'', rounding: 0, symbol: ‘.''}`)'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '解析和格式化数字时使用的分数位数，解析和格式化时使用的舍入增量等（例如，`{decimal: ‘.'', fraction: 0, grouping:
    ‘,’ negative: ‘-‘, pattern: ‘#,##0.###‘, positive: ‘‘, rounding: 0, symbol: ‘.’}`）'
- en: '`getCurrencyPattern`: This returns an object received as an argument in the
    success handler containing a pattern string to format and parse currencies according
    to the currency code passed as the first argument, the device''s preferences,
    the number of fractional digits to use when parsing and formatting numbers, the
    rounding increment to use when parsing and formatting, the ISO 4217 currency code
    for the pattern, and so on (for example, `{code: ‘EUR'', decimal: ‘.'', fraction:
    2, grouping: ‘,'', pattern: ‘$#,##0.00;(¤#,##0.00)'', rounding: 0}`)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getCurrencyPattern`：此函数返回一个对象，该对象作为成功处理程序中的参数接收，包含一个用于根据传递给第一个参数的货币代码格式化和解析货币的模式字符串，设备的偏好设置，解析和格式化数字时使用的分数位数，解析和格式化时使用的舍入增量，用于模式的ISO
    4217货币代码等（例如，`{code: ‘EUR'', decimal: ‘.'', fraction: 2, grouping: ‘,’ pattern:
    ‘$#,##0.00;(¤#,##0.00)’, rounding: 0}`）。'
- en: Tip
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Both the `numberToString` and `stringToNumber` methods accept an optional `options`
    object; through the `type` property of this object, you can specify the format
    of the number (for example, `decimal`, `percent`, or `currency`).
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`numberToString`和`stringToNumber`方法都接受一个可选的`options`对象；通过此对象的`type`属性，您可以指定数字的格式（例如，`decimal`、`percent`或`currency`）。'
- en: Through the combination of the data provided by the methods of the `globalization`
    object, it's possible to handle very complex scenarios and provide a highly localized
    app to the end user. The Globalization API is a very powerful tool that allows
    you to work in conjunction with other JavaScript libraries.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`globalization`对象的方法提供的数据的组合，可以处理非常复杂的情况，并为最终用户提供高度本地化的应用。全球化API是一个非常强大的工具，它允许您与其他JavaScript库协同工作。
- en: Localizing your app
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地化您的应用
- en: From a development perspective, the common practice is to place the text in
    resource strings that are loaded at the execution time depending on the user settings.
    There are several techniques you can use to globalize your app such as storing
    the translations in **portable object** (**PO**) files, creating a JSON object
    containing all of them, or loading the localization files dynamically when the
    app starts. The goal is to deploy an app that is able to select the relevant language
    resource file at runtime and to handle culture-aware number and date parsing and
    formatting, plurals, currencies, special characters, validation, and so on.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发角度来看，常见的做法是将文本放置在资源字符串中，这些字符串在执行时根据用户设置加载。您可以使用几种技术来全球化您的应用，例如将翻译存储在**可移植对象**（**PO**）文件中，创建包含所有内容的JSON对象，或者在应用启动时动态加载本地化文件。目标是部署一个能够在运行时选择相关语言资源文件，并处理文化感知的数字和日期解析与格式化、复数、货币、特殊字符、验证等的应用。
- en: In the following example, we will learn how to load different language strings
    in the application using a simple JavaScript library.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将学习如何使用简单的JavaScript库在应用中加载不同的语言字符串。
- en: Time for action – rendering localized messages
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动作时间 - 渲染本地化消息
- en: 'Refer to the following steps to render different messages in your app according
    to the device''s language settings:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 根据设备的语言设置，按照以下步骤在您的应用中渲染不同的消息：
- en: 'Open the command-line tool and create a new PhoneGap project called `Globalization`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具并创建一个名为`Globalization`的新PhoneGap项目：
- en: '[PRE4]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the Globalization API plugin using the following command:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令添加全球化API插件：
- en: '[PRE5]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Using the command-line tool, add the platform you want to use for this test
    (Android, Blackberry, iOS, or Windows Phone 8):'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令行工具，添加您想用于此测试的平台（Android、Blackberry、iOS 或 Windows Phone 8）：
- en: '[PRE6]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Download and save the `l10n.js` file available at [https://github.com/marcelklehr/html10n.js](https://github.com/marcelklehr/html10n.js)
    in the `www/js` folder.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并保存位于[https://github.com/marcelklehr/html10n.js](https://github.com/marcelklehr/html10n.js)的`l10n.js`文件到`www/js`文件夹。
- en: 'Go to the `www` folder and create the JSON file named `langs.json` to store
    all the required language strings as shown here. A JSON file format is a simple
    way of storing data like XML. The file will have the same literals repeated for
    each language:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`www`文件夹，创建一个名为`langs.json`的JSON文件以存储所有必需的语言字符串，如下所示。JSON文件格式是存储数据如XML的简单方式。该文件将为每种语言重复相同的字面量：
- en: '[PRE7]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the `www` directory, edit the `index.html` file and add the following code
    line in the `head` section to load the JavaScript file to work with multiple languages:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`www`目录中，编辑`index.html`文件，并在`head`部分添加以下代码行以加载用于处理多种语言的JavaScript文件：
- en: '[PRE8]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Load the `langs.json` file with the appropriate type as shown here:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下示例加载`langs.json`文件：
- en: '[PRE9]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Define the `onload` function for the `body` tag to load the document initially
    with correct language values:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`body`标签定义`onload`函数，以正确语言值初始化加载文档：
- en: '[PRE10]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create some HTML elements to try working with multiple languages. For this
    example, we will create two buttons, an alert box, and a heading tag. When the
    language is changed, all the string values will be changed too:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一些HTML元素来尝试使用多种语言。在此示例中，我们将创建两个按钮、一个警告框和一个标题标签。当更改语言时，所有字符串值也会相应更改：
- en: '[PRE11]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create a function to be used to initialize the language settings. The `localize`
    method is used to load the application with the provided language. Initially,
    we load the page with the English language using the `index` method:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于初始化语言设置的函数。使用`localize`方法加载提供语言的应用程序。最初，我们使用`index`方法用英语语言加载页面：
- en: '[PRE12]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create two functions to load the English and French languages when users click
    on the button:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建两个函数，当用户点击按钮时加载英语和法语语言：
- en: '[PRE13]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Define the function to show an alert window with the translated string when
    the **Test Alert** button is clicked:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个函数，当点击**测试警告**按钮时，显示包含翻译字符串的警告窗口：
- en: '[PRE14]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Apart from these, you can define your `deviceready` event function for other
    PhoneGap/Cordova-related activities. For this example, it''s left empty:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了这些，您还可以为其他PhoneGap/Cordova相关活动定义`deviceready`事件函数。在此示例中，它被留空：
- en: '[PRE15]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Open the command-line tool, go to the `Globalization` folder, and build and
    run the app on a real device or an emulator:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，进入`Globalization`文件夹，并在真实设备或模拟器上构建和运行应用程序：
- en: '[PRE16]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The complete source code of the example is provided here for your reference:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此处提供了示例的完整源代码供您参考：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '*What just happened?*'
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You developed an app that is able to render different text messages based on
    the language required by the user. When the user clicks on the **French**/**English**
    button, all other texts in the application will change automatically.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您开发了一个能够根据用户所需的语言渲染不同文本消息的应用程序。当用户点击**法语**/**英语**按钮时，应用程序中的所有其他文本将自动更改。
- en: Adding multitouch gesture support
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加多点触控手势支持
- en: For any hybrid mobile apps, touch gestures is an important feature that makes
    the app great in the hands of the users.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何混合移动应用程序，触摸手势是一个重要的功能，它使得应用程序在用户手中表现得更好。
- en: 'The following is the list of JavaScript libraries that can enable multitouch
    gesture handling in your apps. Each library has its own merits and limitations.
    Some have dependencies with other libraries and some do not. You have to be careful
    when choosing the libraries as it might introduce new dependencies to your application:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以使您的应用启用多点触控手势处理的JavaScript库列表。每个库都有其优点和局限性。一些与其他库有依赖关系，而一些则没有。在选择库时必须小心，因为它可能会向您的应用程序引入新的依赖项：
- en: '| Library name | Dependency | URL |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 库名称 | 依赖关系 | 网址 |'
- en: '| --- | --- | --- |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ZeptoJS | No | [http://zeptojs.com/](http://zeptojs.com/) |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| ZeptoJS | No | [http://zeptojs.com/](http://zeptojs.com/) |'
- en: '| EventJS | No | [https://github.com/mudcube/Event.js](https://github.com/mudcube/Event.js)
    |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| EventJS | No | [https://github.com/mudcube/Event.js](https://github.com/mudcube/Event.js)
    |'
- en: '| QuoJS | No | [http://quojs.tapquo.com/](http://quojs.tapquo.com/) |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| QuoJS | No | [http://quojs.tapquo.com/](http://quojs.tapquo.com/) |'
- en: '| Hammer | No | [http://hammerjs.github.io/](http://hammerjs.github.io/) |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| Hammer | No | [http://hammerjs.github.io/](http://hammerjs.github.io/) |'
- en: '| ThumbsJS | No | [http://mwbrooks.github.io/thumbs.js/](http://mwbrooks.github.io/thumbs.js/)
    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| ThumbsJS | No | [http://mwbrooks.github.io/thumbs.js/](http://mwbrooks.github.io/thumbs.js/)
    |'
- en: '| jGestures | jQuery | [http://jgestures.codeplex.com/](http://jgestures.codeplex.com/)
    |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| jGestures | jQuery | [http://jgestures.codeplex.com/](http://jgestures.codeplex.com/)
    |'
- en: '| DoubleTab | jQuery | [https://github.com/technoweenie/jquery.doubletap](https://github.com/technoweenie/jquery.doubletap)
    |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| DoubleTab | jQuery | [https://github.com/technoweenie/jquery.doubletap](https://github.com/technoweenie/jquery.doubletap)
    |'
- en: '| Touchable | jQuery | [https://github.com/dotmaster/Touchable-jQuery-Plugin](https://github.com/dotmaster/Touchable-jQuery-Plugin)
    |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| Touchable | jQuery | [https://github.com/dotmaster/Touchable-jQuery-Plugin](https://github.com/dotmaster/Touchable-jQuery-Plugin)
    |'
- en: '| TouchyJS | jQuery | [https://github.com/HotStudio/touchy](https://github.com/HotStudio/touchy)
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| TouchyJS | jQuery | [https://github.com/HotStudio/touchy](https://github.com/HotStudio/touchy)
    |'
- en: Although there are a few more libraries, Hammer is widely trusted for gestures
    support in mobile applications. Hammer is an open source library that can recognize
    gestures made by touch, mouse, and pointerEvents. It doesn't have any dependencies
    and the total minified size is less than 4 KB.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然还有更多库，但 Hammer 在移动应用的手势支持方面被广泛信任。Hammer 是一个开源库，可以识别由触摸、鼠标和 pointerEvents 制作出的手势。它没有任何依赖，并且压缩后的总大小小于
    4 KB。
- en: We will illustrate an example using Hammer to implement touch events in the
    application.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Hammer 举例说明如何在应用中实现触摸事件。
- en: Time for action – implementing gesture support
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施手势支持的时间
- en: 'Refer to the following steps to implement multitouch gestures in your app using
    the Hammer JavaScript library:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 Hammer JavaScript 库在你的应用中实现多点触摸手势：
- en: 'Open the command-line tool and create a new PhoneGap project called `hammer`:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具并创建一个名为 `hammer` 的新 PhoneGap 项目：
- en: '[PRE18]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Using the command-line tool, add the platform you want to use for this test
    (Android, Blackberry, iOS, or Windows Phone 8):'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令行工具，添加你想要用于此测试的平台（Android、Blackberry、iOS 或 Windows Phone 8）：
- en: '[PRE19]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Download the Hammer-related files from [https://github.com/hammerjs/hammer.js](https://github.com/hammerjs/hammer.js)
    and save it in the `www/js` folder. You can find both `hammer.min.js` and `hammer.js`
    files in the download bundle from GitHub. You can just keep the `hammer.min.js`
    file and delete the rest.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/hammerjs/hammer.js](https://github.com/hammerjs/hammer.js)
    下载与 Hammer 相关的文件，并将其保存到 `www/js` 文件夹。你可以在 GitHub 的下载包中找到 `hammer.min.js` 和 `hammer.js`
    文件。你可以只保留 `hammer.min.js` 文件，删除其余的。
- en: 'Include the `hammer.min.js` file in your `index.html` file to start using Hammer:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `index.html` 文件中包含 `hammer.min.js` 文件以开始使用 Hammer：
- en: '[PRE20]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Add a `div` element named `touch` to the page body. This element will be attached
    to all the touch events we are going to create:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面主体中添加一个名为 `touch` 的 `div` 元素。此元素将附加到我们将要创建的所有触摸事件：
- en: '[PRE21]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, let''s create the event listeners for the “press” gesture and attach it
    to the `div` element we just created:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们为“按下”手势创建事件监听器并将其附加到我们刚刚创建的 `div` 元素：
- en: '[PRE22]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Open the command-line tool, go to the project folder, and build and run the
    app on a real device or an emulator:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，进入项目文件夹，并在真实设备或模拟器上构建和运行应用：
- en: '[PRE23]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: When you try to apply a “press” action on the element, you will see that Hammer
    has detected your action and changed the text content of the element.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当你尝试在元素上应用“按下”动作时，你会看到 Hammer 已经检测到你的动作并改变了元素的文字内容。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note that the Hammer library is very flexible for the developers. You can handle
    multiple gestures in a single event handler. In the following example, we have
    handled pan, swipe, drag, and touch gestures in a single function. However, overusing
    them can damage your application performance:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到 Hammer 库对开发者来说非常灵活。你可以在单个事件处理器中处理多个手势。在以下示例中，我们在单个函数中处理了平移、滑动、拖动和触摸手势。然而，过度使用它们可能会损害你的应用性能：
- en: '[PRE24]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The pinch and rotate recognizers are disabled by default because they might
    interfere with the application''s behavior. However, if you want to handle these
    two gestures in your application, you can enable them by calling them as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下禁用了捏合和旋转识别器，因为它们可能会干扰应用的行为。但是，如果你想在应用中处理这两个手势，你可以通过以下方式启用它们：
- en: '[PRE25]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You can also enable vertical or all directions for the pan and swipe recognizers
    as shown here:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以启用垂直或所有方向的拖动和滑动识别器，如以下所示：
- en: '[PRE26]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more details on all gesture recognizers and customization options, refer
    to [http://hammerjs.github.io/getting-started/](http://hammerjs.github.io/getting-started/).
    Reading this documentation will help you to use Hammer with maximum efficiency.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 有关所有手势识别器和自定义选项的更多详细信息，请参阅[http://hammerjs.github.io/getting-started/](http://hammerjs.github.io/getting-started/)。阅读此文档将帮助你以最高效的方式使用
    Hammer。
- en: Handling click delays
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理点击延迟
- en: We have seen that a mobile application can support various touch gestures. With
    the introduction of new technologies, differences between web apps and native
    mobile apps are getting close to zero, but not actually zero. One such difference
    is how click events are handled in mobile apps.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到移动应用可以支持各种触摸手势。随着新技术的引入，Web 应用和原生移动应用之间的差异越来越接近于零，但实际上并不是零。其中一个差异是移动应用中如何处理点击事件。
- en: When you click on a button, mobile browsers wait for 300 ms to actually trigger
    the click event for the button that you have clicked. The actual reason is that
    the mobile browser waits to see whether the user wants to perform a click or a
    double click. After the 300 ms delay, if there is no other tap, it's considered
    as a single click. However, if there are no event handlers for double clicks,
    the delay will be unnecessary. By overcoming these delays, you can make your app
    more responsible and less laggy.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击按钮时，移动浏览器会等待 300 毫秒来实际触发您所点击的按钮的点击事件。实际原因是移动浏览器等待查看用户是否想要执行点击或双击操作。在 300
    毫秒的延迟之后，如果没有其他轻触，则被视为单次点击。然而，如果没有双击的事件处理器，这种延迟将是不必要的。通过克服这些延迟，您可以使得您的应用程序更加响应迅速，减少卡顿。
- en: 'We are going to see an approach to avoid this 300 ms delay using the library
    called **FastClick** that is available at [https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick).
    The steps are as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将介绍一种使用名为 **FastClick** 的库来避免这种 300 毫秒延迟的方法，该库可在 [https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)
    获取。步骤如下：
- en: 'Include `fastclick.js` in your JavaScript pack or add it to your HTML page
    as shown here:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `fastclick.js` 包含在您的 JavaScript 包中，或如以下所示将其添加到您的 HTML 页面中：
- en: '[PRE27]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Define the `deviceready` event listener as you regularly do for other PhoneGap/Cordova
    functionalities:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照您通常为其他 PhoneGap/Cordova 功能性所做的方式定义 `deviceready` 事件监听器：
- en: '[PRE28]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, attach the FastClick functionality as shown here:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按照以下所示附加 FastClick 功能性：
- en: '[PRE29]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In some cases, you might need FastClick to ignore a few elements where double-click
    is possible. In those cases, you can add the `needsclick` class to the element
    as shown here:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能需要 FastClick 忽略一些可能发生双击的元素。在这些情况下，您可以将 `needsclick` 类添加到元素中，如以下所示：
- en: '[PRE30]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For some more advanced discussions related to this topic, refer to FastClick's
    GitHub page. If you are looking at an alternative approach suggested by Google,
    take a look at [https://developers.google.com/mobile/articles/fast_buttons](https://developers.google.com/mobile/articles/fast_buttons).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 对于与该主题相关的更多高级讨论，请参阅 FastClick 的 GitHub 页面。如果您正在查看 Google 提出的替代方法，请查看 [https://developers.google.com/mobile/articles/fast_buttons](https://developers.google.com/mobile/articles/fast_buttons)。
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to create an app that supports the locale of
    the user using PhoneGap's Globalization API and to create a localized app that
    supports multiple user languages. More importantly, we saw how we can better handle
    multitouch gestures in the application.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何使用 PhoneGap 的 Globalization API 创建支持用户语言的本地化应用程序，以及如何创建支持多种用户语言的本地化应用程序。更重要的是，我们看到了如何更好地处理应用程序中的多点触控手势。
- en: In the next chapter, we will cover the topics that will help you in making the
    application ready for public release.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍一些有助于使应用程序准备公开发布的主题。
