- en: Chapter 1. Google Maps JavaScript API Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. Google Maps JavaScript API 基础
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating a simple map in a custom DIV element
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在自定义 DIV 元素中创建简单地图
- en: Creating a simple fullscreen map
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建全屏简单地图
- en: Moving from the Web to mobile devices
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Web 移动到移动设备
- en: Changing map properties programmatically
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过编程方式更改地图属性
- en: Changing base maps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改基础地图
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Location is becoming a very popular topic day by day, and Google is one of the
    main game changers in this area. Most websites have a contact page with Google
    Maps showing the location of the business. This is the simplest usage of the Google
    Maps JavaScript API. There are also other advanced usages of it to show different
    information on maps. This whole book contains multiple usage recipes on the Google
    Maps JavaScript API, from beginner to advanced topics. There are different parts
    that make up the Google Maps JavaScript API such as the raster/vector layers,
    controls, events, and services, which are all covered in the following chapters.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 位置正变得越来越受欢迎，而 Google 是这个领域的主要变革者之一。大多数网站都有一个带有 Google Maps 的联系页面，显示企业的位置。这是
    Google Maps JavaScript API 的最简单用法。还有其他更高级的用法，可以在地图上显示不同的信息。本书包含多个关于 Google Maps
    JavaScript API 的用法食谱，从入门到高级主题。Google Maps JavaScript API 由多个部分组成，如栅格/矢量图层、控件、事件和服务，这些内容都在以下章节中进行了介绍。
- en: There are both open source and commercial alternatives to the Google Maps JavaScript
    API, such as OpenLayers, Leaflet, Bing Maps, MapQuest, and Here Maps (formerly,
    Nokia Maps), but the Google Maps JavaScript API has great support in base maps,
    satellite images, and the API itself. For example, the API can be used to show
    only one location or all the data of a government agency on a map.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Google Maps JavaScript API 有开源和商业替代品，例如 OpenLayers、Leaflet、Bing Maps、MapQuest
    和 Here Maps（以前称为诺基亚地图），但 Google Maps JavaScript API 在基础地图、卫星图像和 API 本身方面有很好的支持。例如，API
    可以用来在地图上显示一个位置或政府机构的所有数据。
- en: The Google Maps JavaScript API is not a free tool to show maps, but its free
    usage limit is enough for most developers. There is a limit of 25,000 map loads
    per day per site, which is counted when a map is initialized on a web page.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Google Maps JavaScript API 不是一个免费的地图展示工具，但它的免费使用限制对于大多数开发者来说已经足够了。每天每个网站有 25,000
    次地图加载的限制，这发生在地图在网页上初始化时计算。
- en: Creating a simple map in a custom DIV element
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在自定义 DIV 元素中创建简单地图
- en: When you work with mapping applications, creating a map is the most important
    task you can do. The map is the main part of the application with which the users
    interact and where all the visualization occurs. This part may seem trivial, but
    all of the following chapters rely on this part of the application.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用地图应用工作时，创建地图是你能做的最重要的任务。地图是应用的主要部分，用户与之交互，所有可视化操作都发生在这里。这部分可能看起来很 trivial，但所有后续章节都依赖于这个应用的部分。
- en: This recipe will guide you through the process of creating a simple map view
    on a web page.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将指导你通过在网页上创建简单地图视图的过程。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As described in the preface, we need a web server to host our HTML, JavaScript,
    and CSS files and a web browser to interpret them on the client side.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如前言所述，我们需要一个网络服务器来托管我们的 HTML、JavaScript 和 CSS 文件，以及一个网络浏览器来在客户端解释它们。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As already stated, the Google Maps JavaScript API works with HTML, CSS, and
    JavaScript code. So a text editor with HTML, JavaScript, and CSS handling capabilities
    would be a good friend to have on hand while exploring this book.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Google Maps JavaScript API 与 HTML、CSS 和 JavaScript 代码一起工作。因此，在探索本书时，拥有一个具有
    HTML、JavaScript 和 CSS 处理能力的文本编辑器会是一个很好的帮手。
- en: For Mac users, there are lots of commercial or free text editors such as TextWrangler,
    BBEdit, Sublime Text, or WebStorm. They all handle HTML, JavaScript, and CSS beautifully.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Mac 用户，有很多商业或免费的文本编辑器，例如 TextWrangler、BBEdit、Sublime Text 或 WebStorm。它们都能很好地处理
    HTML、JavaScript 和 CSS。
- en: For Windows users as well, there are different text editors, but **Notepad++**
    is the most used and recommended one.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows 用户来说，也有不同的文本编辑器，但 **Notepad++** 是最常用和推荐的。
- en: Choosing an editor depends on your computer usage habits, so there is no exact
    solution or recommendation to users to select a particular type of editor. Everyone
    has different perceptions that affect these choices.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 选择编辑器取决于你的计算机使用习惯，因此没有确切的方法或推荐给用户选择特定类型的编辑器。每个人都有不同的感知，这些感知会影响这些选择。
- en: You can find the source code at `Chapter 1/ch01_simple_map.html`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 `Chapter 1/ch01_simple_map.html` 找到源代码。
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://www.packtpub.com](http://www.packtpub.com) 的账户中下载您购买的所有 Packt
    书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册，以便将文件直接通过电子邮件发送给您。
- en: How to do it…
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Here are the steps we will use to create our first map using the Google Maps
    JavaScript API.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们将使用 Google Maps JavaScript API 创建第一个地图的步骤。
- en: Create a new empty file named `map.html` and insert the following code block
    into it. This block is required for every app that uses the Google Maps JavaScript
    API. You must insert your Google Maps JavaScript API key into the URL in the following
    code.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `map.html` 的新空文件，并将以下代码块插入其中。此块是每个使用 Google Maps JavaScript API 的应用程序所必需的。您必须在以下代码中的
    URL 中插入您的 Google Maps JavaScript API 密钥。
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Please ensure that you have your Google Maps JavaScript API key from the Google
    APIs Console ([http://code.google.com/apis/console](http://code.google.com/apis/console))
    and replace it with `YOUR_API_KEY`. If you do not change that part of the code,
    your map cannot be seen due to Google's API rules. Also make sure to change the
    API key before publishing your map's document on another location or production
    environment.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请确保您从 Google APIs Console ([http://code.google.com/apis/console](http://code.google.com/apis/console))
    获取了您的 Google Maps JavaScript API 密钥，并将其替换为 `YOUR_API_KEY`。如果您不更改代码的这一部分，由于 Google
    的 API 规则，您的地图将无法显示。同时，确保在将地图文档发布到其他位置或生产环境之前更改 API 密钥。
- en: 'The following part is required in order to place the map where needed. In the
    `<head>` section, add the HTML styling code to create a map that is 800 px in
    width and 500 px in height with the `<style>` element as follows:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将地图放置在所需的位置，以下部分是必需的。在 `<head>` 部分中，添加以下 `<style>` 元素的 HTML 样式代码，以创建宽度为 800
    像素和高度为 500 像素的地图：
- en: '[PRE1]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Add the following JavaScript lines to the code to run with the Google Maps JavaScript
    API. Do not forget to define the `map` object outside the function in order to
    access it from every part of the code.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 JavaScript 代码行添加到代码中，以便使用 Google Maps JavaScript API 运行。不要忘记在函数外部定义 `map`
    对象，以便从代码的任何部分访问它。
- en: '[PRE2]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Add the following lines to finish the code. This part defines the `<html>` tags
    where the map will be added and when to initialize the map.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下行以完成代码。这部分定义了添加地图的位置和初始化地图的时间的 `<html>` 标签。
- en: '[PRE3]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Enter the URL of your local server, where your `map.html` file is stored, in
    your favorite browser and take a look at the result. You will see a map with navigation
    controls at the top-left corner and the base map control at the top-right corner.![How
    to do it…](img/8825OT_01_01.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您最喜欢的浏览器中输入您本地服务器的 URL，其中存储着您的 `map.html` 文件，并查看结果。您将看到一个带有导航控件在左上角和基本地图控件在右上角的地图。![如何操作…](img/8825OT_01_01.jpg)
- en: As evident from the preceding screenshot, we have created our simple map with
    the Google Maps JavaScript API.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述截图所示，我们已经使用 Google Maps JavaScript API 创建了我们的简单地图。
- en: How it works...
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Let's start examining the code step by step. First, the HTML5 document is defined
    with the code `<!DOCTYPE html>`. Then the `<html>` and `<head>` tags are added.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步地检查代码。首先，使用代码 `<!DOCTYPE html>` 定义了 HTML5 文档。然后添加了 `<html>` 和 `<head>`
    标签。
- en: 'Before the `<style>` element, the Google Maps JavaScript API is included as
    a reference using the `<script>` element as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `<style>` 元素之前，使用 `<script>` 元素将 Google Maps JavaScript API 作为引用包含如下：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then a new `<script>` tag is added to the code. After the `<head>` section,
    the `<body>` section starts.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在代码中添加一个新的 `<script>` 标签。在 `<head>` 部分之后，开始 `<body>` 部分。
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The following line of code listens to the load of the document. This event triggers
    the `initMap` function when the page is fully loaded. This prevents unpredictable
    behaviors that would arise from DOM and its related elements.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码行监听文档的加载。当页面完全加载时，此事件触发 `initMap` 函数。这可以防止由于 DOM 及其相关元素而出现的不可预测的行为。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Finally, we have the HTML tags to create our page. The `<div>` element with
    `id="mapDiv"` is the place where our map will be shown. This element gets its
    style from the CSS tags defined previously, which has a width of 800 px and a
    height of 500 px.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有创建我们页面的 HTML 标签。具有 `id="mapDiv"` 的 `<div>` 元素是我们地图将显示的位置。此元素从之前定义的 CSS
    标签中获取样式，宽度为 800 像素，高度为 500 像素。
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The styling of the `mapDiv` element is directly related to CSS rules that can
    be found on the W3Schools website ([http://www.w3schools.com/css](http://www.w3schools.com/css))
    in detail.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`mapDiv`元素的样式与可以在W3Schools网站上详细找到的CSS规则直接相关（[http://www.w3schools.com/css](http://www.w3schools.com/css)）。'
- en: As stated previously, the main JavaScript code that initializes the map will
    be explained in detail. First, the `map` object is defined as a global object
    to access the map from every function that is added later.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，初始化地图的主要JavaScript代码将详细解释。首先，将`map`对象定义为全局对象，以便从稍后添加的每个函数中访问地图。
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then the `initMap` function is defined as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后定义`initMap`函数如下：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Before creating a map, the following code is called to change the map's theme
    to the latest one that was announced at Google IO 2013 in May 2013\. This theme
    is the new look used in the new Google Maps. Both the cartography and styles of
    components are fresh and up to date; however, using this new feature is optional.
    If you don't use the following line of code, you'd use the old theme.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建地图之前，以下代码被调用以将地图的主题更改为2013年5月在2013年Google IO上宣布的最新主题。这个主题是用于新Google Maps的新外观；地图的制图和组件样式都是新颖且最新的；然而，使用这个新功能是可选的。如果您不使用以下代码行，您将使用旧主题。
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, the map options would be defined as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，地图选项将被定义为以下内容：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: There are three important parameters for the map options.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 地图选项有三个重要参数。
- en: '`center`: This is the center of the map in latitudes and longitudes. The previously
    defined parameters are the coordinates of Ankara, Turkey. If you don''t know how
    to get the coordinates of a place, refer to the recipes given in [Chapter 5](ch05.html
    "Chapter 5. Understanding Google Maps JavaScript API Events"), *Understanding
    Google Maps JavaScript API Events*.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`center`：这是地图的纬度和经度中心。之前定义的参数是土耳其安卡拉的坐标。如果您不知道如何获取一个地方的坐标，请参考[第5章](ch05.html
    "第5章。理解Google Maps JavaScript API事件")中提供的菜谱，*理解Google Maps JavaScript API事件*。'
- en: '`zoom`: This parameter is an integer that defines the level in which the map
    is shown. Google Maps have zoom levels from 0 (world level) to 21+ (street level).
    Users see more details but less area when the zoom level increases.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zoom`：此参数是一个整数，定义了地图显示的级别。Google Maps的缩放级别从0（世界级别）到21+（街道级别）。当缩放级别增加时，用户可以看到更多细节但面积更小。'
- en: '`mapTypeId`: This parameter defines the types of base maps shown on the map.
    The details of this parameter are given in the later recipes of this chapter.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mapTypeId`：此参数定义了地图上显示的基本地图类型。此参数的详细信息将在本章后面的菜谱中给出。'
- en: 'Before creating the map object, it is necessary to get the `div` element to
    where the map will be shown. This is done via the classic DOM method, `getElementById`,
    as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建地图对象之前，必须获取地图将显示的`div`元素。这通过以下经典DOM方法`getElementById`完成：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, we have everything in place to create a map object:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们已准备好创建地图对象：
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This code gets the `mapElement` and `mapOptions` objects to create the map.
    The first parameter is the `div` element where the map will be placed and the
    other is the `mapOptions` object that holds the starting parameters of the map.
    The preceding line of code creates the map with the given options at the given
    `div` element and returns the map object to interact with the map later.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码获取`mapElement`和`mapOptions`对象以创建地图。第一个参数是地图将被放置的`div`元素，另一个是包含地图起始参数的`mapOptions`对象。上一行代码在给定的`div`元素上使用给定的选项创建地图，并返回地图对象以便稍后与地图交互。
- en: Note
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This recipe is the simplest one in the book but also the most important one
    to get started with the Google Maps JavaScript API. There are lots of parameters
    or options of the map, which will be discussed in the later chapters and recipes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此菜谱是书中最简单的一个，但也是开始使用Google Maps JavaScript API最重要的一个。地图有很多参数或选项，将在后面的章节和菜谱中讨论。
- en: Also remember that in the following recipes, the basic code will not be included
    in the book in order to provide you with more recipes. Only those lines of code
    that are changed or required are given in the following chapters and recipes,
    but you will have access to the complete code with all the omitted lines from
    the Packt Publishing website ([http://www.packtpub.com/support](http://www.packtpub.com/support))
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 还要记住，在以下菜谱中，基本代码将不会包含在书中，以便为您提供更多菜谱。以下章节和菜谱中只给出更改或必需的代码行，但您可以通过Packt Publishing网站（[http://www.packtpub.com/support](http://www.packtpub.com/support)）获取完整的代码，包括省略的行。
- en: Creating a simple fullscreen map
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个简单的全屏地图
- en: Applications can be mapped in different formats. Some of them show a map after
    a mouse click or an event, and some of them are shown directly in fullscreen mode.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以以不同的格式进行映射。其中一些在鼠标点击或事件后显示地图，而另一些则直接以全屏模式显示。
- en: This recipe will show you how to create a fullscreen map that will be used both
    in web or mobile applications.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将向您展示如何创建一个全屏地图，该地图将在Web或移动应用程序中使用。
- en: Getting ready
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As stated before, some recipes will show only the changed lines in the code
    in order to make way for more recipes. This recipe is the modified version of
    the previous recipe, *Creating a simple map in a custom DIV element*.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，一些配方将只显示代码中的更改行，以便为更多配方腾出空间。这个配方是之前配方*在自定义DIV元素中创建简单地图*的修改版本。
- en: You can find the source code at `Chapter 1/ch01_full_screen_map.html`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`第1章/ch01_full_screen_map.html`中找到源代码。
- en: How to do it…
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'You can easily create a simple fullscreen map by following the given steps:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过遵循以下步骤轻松创建一个简单的全屏地图：
- en: Let's start by creating a new empty file named `full_screen_map.html`. Then,
    copy all of the code in the previous HTML file (`map.html`) and paste it into
    this file.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从创建一个名为`full_screen_map.html`的新空文件开始。然后，将之前HTML文件（`map.html`）中的所有代码复制并粘贴到这个文件中。
- en: 'Find the following lines of code in the new file:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新文件中找到以下代码行：
- en: '[PRE13]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Add the following lines and change them according to the new values stated.
    The `width` and `height` values are changed to `100%` in order to make the map
    full screen in the browser viewport. Also, the margin value of the `body` element
    is changed to `0` to remove all the spaces around the map.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下行并根据新值进行更改。`width`和`height`值更改为`100%`，以便在浏览器视口中使地图全屏。此外，将`body`元素的`margin`值更改为`0`以移除地图周围的全部空间。
- en: '[PRE14]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Enter the URL of your local server, where your `full_screen_map.html` file is
    stored, in your favorite browser and take a look at the result. You will see the
    map with navigation controls at the top-left corner and the base map control at
    the top-right corner that fills the entire browser area.![How to do it…](img/8825OT_01_02.jpg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您最喜欢的浏览器中输入存储`full_screen_map.html`文件的本地区域URL，查看结果。您将看到地图在左上角有导航控件，右上角有填充整个浏览器区域的基图控件。![如何操作…](img/8825OT_01_02.jpg)
- en: Thus we have successfully created a simple fullscreen map.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经成功创建了一个简单的全屏地图。
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The Google Maps JavaScript API uses the `div` component of the HTML standard
    to show the map. The `div` component gets its style and properties from CSS rules,
    which are defined at the top, in the `<head>` element. The `width` and `height`
    attributes of `#mapdiv` show that the `div` component will fill the entire browser
    space. You can easily modify these `width` and `height` properties to change the
    map dimensions according to your needs.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Google Maps JavaScript API使用HTML标准的`div`组件来显示地图。`div`组件从CSS规则中获取其样式和属性，这些规则定义在顶部的`<head>`元素中。`#mapdiv`的`width`和`height`属性表明`div`组件将填充整个浏览器空间。您可以轻松修改这些`width`和`height`属性以根据您的需求更改地图尺寸。
- en: There's more...
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: The size of the map is directly related to CSS styles, and there is no direct
    relation between the map size and the Google Maps JavaScript API. The `DIV` element
    that holds the Google Maps JavaScript API's base maps and overlays is just a blank
    container, and as the `DIV` elements get larger, so does your map.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 地图的尺寸直接与CSS样式相关，地图尺寸与Google Maps JavaScript API之间没有直接关系。包含Google Maps JavaScript
    API的基本地图和覆盖层的`DIV`元素只是一个空白容器，随着`DIV`元素变大，您的地图也会变大。
- en: See also
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple map in a custom DIV element* recipe
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在自定义DIV元素中创建简单地图*的配方'
- en: Moving from the Web to mobile devices
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从网络设备转移到移动设备
- en: Mobile devices are getting more popular nowadays; all the popular websites are
    preparing their mobile apps or sites in order for people to access them anywhere.
    Mapping applications have also become more popular since accessing the location
    of a device with proper APIs was introduced in HTML5.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，移动设备越来越受欢迎；所有流行的网站都在准备他们的移动应用或网站，以便人们可以在任何地方访问它们。自从在HTML5中引入了使用适当API访问设备位置的功能后，地图应用也变得更加流行。
- en: In this recipe, we will prepare a mapping application that will run on mobile
    browsers in full screen, and it will zoom to the location of a device with the
    help of the W3C Geolocation API. This API is also accessible from desktop browsers
    to get your location.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将准备一个将在全屏模式下在移动浏览器中运行的映射应用程序，并且它将借助W3C地理位置API缩放到设备的地理位置。此API也可以从桌面浏览器访问以获取您的位置。
- en: Getting ready
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This code will be run on a mobile device or simulator, so make sure that your
    code will be accessible from your mobile device or simulator. In this recipe,
    I suggest you upload the code to a hosting server or website so that it could
    be accessed easily from your mobile device or simulator.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码将在移动设备或模拟器上运行，因此请确保您的代码可以从您的移动设备或模拟器访问。在本教程中，我建议您将代码上传到托管服务器或网站，以便可以从您的移动设备或模拟器轻松访问。
- en: You can find the source code at `Chapter 1/ch01_mobile_map.html`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`第1章/ch01_mobile_map.html`找到源代码。
- en: How to do it…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'If you want to create a map that is optimum for mobile devices, you should
    follow the given steps:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想创建一个适合移动设备的地图，应遵循以下步骤：
- en: Let's start by creating a new empty file named `mobile_map.html`. Then, copy
    all of the code in the HTML file (`map.html`) that was introduced in the *Creating
    a simple map in a custom DIV element* recipe, and paste it into the new file.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从创建一个名为`mobile_map.html`的新空文件开始。然后，将介绍在*在自定义DIV元素中创建简单地图*教程中的HTML文件（`map.html`）中的所有代码复制并粘贴到新文件中。
- en: 'Find the following lines of code in the new file:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新文件中找到以下代码行：
- en: '[PRE15]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Insert the following line before the previous code block. This line tells mobile
    browsers that the current web application is designed for mobile devices:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在之前的代码块之前插入以下行。此行告诉移动浏览器当前Web应用程序是为移动设备设计的：
- en: '[PRE16]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Add the following `CSS` styles in order to make the map fullscreen.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`CSS`样式以使地图全屏显示。
- en: '[PRE17]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Then, add the following code block after creating the `map` object. This code
    block will check whether your browser supports the Geolocation API and sets the
    center of the map according to the coordinates of the device.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在创建`map`对象后添加以下代码块。此代码块将检查您的浏览器是否支持地理位置API，并根据设备坐标设置地图中心。
- en: '[PRE18]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Upload your file to a proper hosting site and check this URL on your mobile
    device or simulator. You will be asked whether to allow the reading of your location
    or not. If you allow it, you will see the map of your location.![How to do it…](img/8825OT_01_03.jpg)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的文件上传到适当的托管站点，并在您的移动设备或模拟器上检查此URL。您将被询问是否允许读取您的位置。如果您允许，您将看到您位置处的地图。![如何操作…](img/8825OT_01_03.jpg)
- en: This is how we achieve the goal of creating a simple map for mobile devices.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是如何实现为移动设备创建简单地图的目标。
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The `<meta>` tags are used by browsers and search engines, and they are not
    visible to the users. They help browsers know how to behave. In our case, the
    following `<meta>` tag is used to tell browsers that the current website is optimized
    for mobile browsers:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`<meta>`标签由浏览器和搜索引擎使用，对用户不可见。它们帮助浏览器了解如何表现。在我们的情况下，以下`<meta>`标签用于告诉浏览器当前网站针对移动浏览器进行了优化：'
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This `<meta>` tag solves zooming problems when the user pinches in or out, because
    pinching in or out should zoom the map in or out respectively and not the document
    itself.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此`<meta>`标签解决了用户缩放时的缩放问题，因为缩放应该使地图放大或缩小，而不是文档本身。
- en: In order to get the device location, the W3C Geolocation API implemented by
    browsers is used. There is a navigator namespace in the HTML5 standard, and the
    Geolocation subnamespace is checked first if the browser has support for the Geolocation
    API. If `navigator.geolocation` returns an object, we can get the coordinates
    with the help of the `getCurrentPosition` function. The callback function gets
    the latitude and longitude of the device and creates the `google.maps.LatLng`
    object. Then, the `setCenter` method of the `map` object is triggered with the
    `devCenter` object that was created before. This will change the center of the
    map according to the device location.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取设备位置，我们使用浏览器实现的W3C地理位置API。HTML5标准中有一个navigator命名空间，如果浏览器支持地理位置API，则首先检查Geolocation子命名空间。如果`navigator.geolocation`返回一个对象，我们可以通过`getCurrentPosition`函数的帮助获取坐标。回调函数获取设备的纬度和经度并创建`google.maps.LatLng`对象。然后，使用之前创建的`devCenter`对象触发`map`对象的`setCenter`方法。这将根据设备位置更改地图的中心。
- en: The last line of the callback function is used to set the zoom level of the
    map. This can be changed according to your needs.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数的最后一行用于设置地图的缩放级别。这可以根据您的需求进行更改。
- en: There's more...
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The HTML5 standard is still in progress, and there can be changes in the W3
    Geolocation API. If you want to get more information about geolocation, refer
    to the W3C documentation site ([http://dev.w3.org/geo/api/spec-source.html](http://dev.w3.org/geo/api/spec-source.html)).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5标准仍在进行中，W3 Geolocation API可能会有变化。如果您想了解更多关于地理位置的信息，请参考W3C文档网站([http://dev.w3.org/geo/api/spec-source.html](http://dev.w3.org/geo/api/spec-source.html))。
- en: See also
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple map in a custom DIV element* recipe
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在自定义DIV元素中创建简单地图* 的配方'
- en: Changing map properties programmatically
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过编程更改地图属性
- en: Until this recipe, the map has been interactive within itself. Users can zoom
    in/out, drag the map, change the user interface, or enable/disable mouse interactivity.
    If you want to play with the map outside of it, you should access the map and
    change the properties you want, or you can change the properties programmatically
    in different cases. Changing map properties programmatically is one of the important
    parts of the Google Maps JavaScript API. In most mapping applications, a user
    searches for a place, and the application should focus on that point on the map.
    This is possible with the `map` object's functions. There are lots of map functions,
    but we will cover only the most used ones.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，地图在其内部是交互式的。用户可以缩放地图、拖动地图、更改用户界面或启用/禁用鼠标交互。如果您想在地图之外玩地图，您应该访问地图并更改您想要的属性，或者您可以在不同情况下通过编程更改属性。通过编程更改地图属性是Google
    Maps JavaScript API的重要部分之一。在大多数地图应用中，用户搜索一个地点，应用应该聚焦在地图上的该点。这是通过 `map` 对象的函数实现的。有很多地图函数，但我们将只介绍最常用的。
- en: In this recipe, we will create a mapping application that a user can interact
    with outside the map. Buttons are used in order to interact with the map.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将创建一个用户可以在地图外部与之交互的地图应用。使用按钮来与地图交互。
- en: Getting ready
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you continue, a map object must be created in order to interact with
    it. If a map object is not defined, you will get an error. These kinds of problems
    occur due to JavaScript's asynchronous behavior in most cases.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在您继续之前，必须创建一个地图对象以便与之交互。如果没有定义地图对象，您将得到一个错误。这类问题通常是由于JavaScript的异步行为引起的。
- en: You can find the source code at `Chapter 1/ch01_interaction_map.html`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 `Chapter 1/ch01_interaction_map.html` 中找到源代码。
- en: How to do it…
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Changing the map properties is quite easy if you follow the given steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果按照给定的步骤操作，更改地图属性相当简单：
- en: Let's start by creating a new empty file named `interaction_map.html`. Then,
    copy all of the code in the HTML file (`map.html`) that was introduced in the
    *Creating a simple map in a custom DIV element* recipe and paste it into the new
    file.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从创建一个名为 `interaction_map.html` 的新空文件开始。然后，将 *在自定义DIV元素中创建简单地图* 配方中引入的HTML文件（`map.html`）中的所有代码复制并粘贴到新文件中。
- en: Add the following functions after the `initmap()` function. These functions
    are called by the buttons defined in HTML, which are used to interact with the
    map. Functions are explained later in this recipe.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `initmap()` 函数之后添加以下函数。这些函数由HTML中定义的按钮调用，用于与地图交互。函数将在本配方中稍后解释。
- en: '[PRE20]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Next, add the following function to listen to the click events of the buttons
    defined in the HTML code in step 5.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，添加以下函数以监听步骤5中定义的HTML代码中按钮的点击事件。
- en: '[PRE21]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The `startButtonEvents` function must be called on initializing the map, so
    the following line of code is added:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在初始化地图时必须调用 `startButtonEvents` 函数，因此添加了以下代码行：
- en: '[PRE22]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Then, add the following HTML lines of code inside the `<body>` tag. These are
    the `<button>` tags to be shown on the web page. Each `button` element listens
    for the click event to fire the related function.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在 `<body>` 标签内添加以下HTML代码行。这些是将在网页上显示的 `<button>` 标签。每个 `button` 元素都监听点击事件以触发相关函数。
- en: '[PRE23]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Enter the URL of your local server, where your `interaction_map.html` file is
    stored, in your favorite browser and take a look at the result. You will see the
    map with buttons at the top. Each button triggers a different function to interact
    with the map.![How to do it…](img/8825OT_01_04.jpg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您最喜欢的浏览器中输入您本地服务器的URL，其中存储着您的 `interaction_map.html` 文件，并查看结果。您将看到带有按钮的地图在顶部。每个按钮都会触发不同的函数以与地图交互。![如何操作…](img/8825OT_01_04.jpg)
- en: As a result of the recipe, we can change map properties programmatically.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 作为菜谱的结果，我们可以通过编程方式更改地图属性。
- en: How it works...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Each JavaScript function defined previously is used to change the different
    sides of the map. The ones most used are to change the center and zoom level of
    the map. Most of the time, people just move from one location to another on a
    map. For example, if you are showing the locations of a coffee chain, the map
    should focus on each of the locations of the coffee shops. The following code
    creates a `google.maps.LatLng` object that will be the input of the `setCenter()`
    function. The `41.0579` and `29.0340` values are the latitude and longitude of
    Istanbul, Turkey respectively. You will replace these coordinate values with your
    own coordinate values to change the center of the map. This function will only
    change the center of the map, not the zoom level.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 之前定义的每个JavaScript函数都用于更改地图的不同侧面。最常用的函数是更改地图的中心和缩放级别。大多数时候，人们只是在地图上从一个位置移动到另一个位置。例如，如果您正在显示咖啡连锁店的地点，地图应该聚焦在每个咖啡店的地点。以下代码创建了一个`google.maps.LatLng`对象，它将成为`setCenter()`函数的输入。`41.0579`和`29.0340`值分别是土耳其伊斯坦布尔的纬度和经度。您将用您自己的坐标值替换这些坐标值以更改地图的中心。此函数将仅更改地图的中心，而不会更改缩放级别。
- en: '[PRE24]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'If you want to zoom in or out of the map in order to cover/show an area, you
    should also play with the zoom value. For example, your coffee shop location at
    zoom level 6 cannot provide effective guidance to your customers. It should at
    least be at level 15 or more to see the street names and the exact location. This
    can be done with the following code:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想放大或缩小地图以覆盖/显示一个区域，您还应该调整缩放值。例如，您的咖啡店位置在缩放级别6时无法为您的客户提供有效的指导。它至少应该是15级或更高，以便看到街道名称和确切位置。以下代码可以实现这一点：
- en: '[PRE25]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In some cases, you don''t want users to interact with the map, such as fixing
    the map location, by disabling mouse drags or wheel scrolls. These are some examples
    of the `google.maps.MapOptions` object''s properties. These properties are directly
    related to the properties of the map. If you want to change one or more properties
    of the map, you should create a JSON object and call the following map function:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能不希望用户与地图进行交互，例如通过禁用鼠标拖动或滚轮滚动来固定地图位置。以下是一些`google.maps.MapOptions`对象属性的示例。这些属性与地图的属性直接相关。如果您想更改地图的一个或多个属性，您应该创建一个JSON对象并调用以下地图函数：
- en: '[PRE26]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'With the `setOptions()` function, you can also enable or disable the default
    controls, but this will be reviewed in [Chapter 4](ch04.html "Chapter 4. Working
    with Controls"), *Working with Controls*. You can set one or more properties with
    the `setOptions()` function. You can find short explanations with comments next
    to the properties:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`setOptions()`函数，您还可以启用或禁用默认控件，但这将在[第4章](ch04.html "第4章。使用控件")*使用控件*中讨论。您可以使用`setOptions()`函数设置一个或多个属性。您可以在属性旁边的注释中找到简短的解释：
- en: '[PRE27]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Tip
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Accessing a map object**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**访问地图对象**'
- en: 'Be aware of defining a map object as a global object in order to access it
    anywhere. This can be a problem in some cases while writing in JavaScript. Please
    check the following link to get more information on JavaScript and Scopes : [http://coding.smashingmagazine.com/2009/08/01/what-you-need-to-know-about-javascript-scope/](http://coding.smashingmagazine.com/2009/08/01/what-you-need-to-know-about-javascript-scope/).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 注意将地图对象定义为全局对象以便在任何地方访问。在编写JavaScript时，这可能会在某些情况下引起问题。请查看以下链接以获取有关JavaScript和作用域的更多信息：[http://coding.smashingmagazine.com/2009/08/01/what-you-need-to-know-about-javascript-scope/](http://coding.smashingmagazine.com/2009/08/01/what-you-need-to-know-about-javascript-scope/)。
- en: See also
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple map in a custom DIV element* recipe
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在自定义DIV元素中创建简单地图*的菜谱'
- en: Changing base maps
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改基础地图
- en: Base maps are one of the most important parts of the process of mapping the
    APIs. Base maps show the roads, satellite images, or terrains, which can be used
    for different situations. For example, a road map can be suitable for showing
    the location of your coffee shop, but a satellite image cannot. Satellite images
    can also be suitable for showing parcel information to check whether they are
    drawn correctly. The Google Maps JavaScript API has four different base maps such
    as **ROADMAP**, **SATELLITE**, **HYBRID**, and **TERRAIN**. All of these base
    maps can be seen in the following screenshot wherein they can be compared to each
    other.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 基础地图是映射API过程中的一个重要部分。基础地图显示道路、卫星图像或地形，可用于不同的情况。例如，道路图可能适合显示您的咖啡店位置，但卫星图像则不适合。卫星图像也可以用于显示地块信息，以检查它们是否绘制正确。Google
    Maps JavaScript API有四种不同的基础地图，如**ROADMAP**、**SATELLITE**、**HYBRID**和**TERRAIN**。所有这些基础地图都可以在以下截图中看到，它们可以相互比较。
- en: '![Changing base maps](img/8825OT_01_05.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![更改基础地图](img/8825OT_01_05.jpg)'
- en: In this recipe, we will go through the Google Maps base maps and learn how to
    change them programmatically.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将了解Google Maps基础地图，并学习如何通过编程方式更改它们。
- en: Getting ready
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will use the JavaScript arrays in order to make the input
    parameters of a function readable. I suggest you check Google for the JavaScript
    arrays if you don't have any experience.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用JavaScript数组来使函数的输入参数易于阅读。如果您没有相关经验，建议您在Google上查找JavaScript数组。
- en: You can find the source code at `Chapter 1/ch01_base_map.html`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`Chapter 1/ch01_base_map.html`中找到源代码。
- en: How to do it…
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: If you follow the given steps, you can change the base maps of your map.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您遵循给定的步骤，您就可以更改地图的基础地图。
- en: Let's start by creating a new empty file named `base_map.html`. Then, copy all
    of the code in the HTML file (`map.html`) that is introduced in the *Creating
    a simple map in a custom DIV element* recipe and paste it into the new file.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从创建一个名为`base_map.html`的新空文件开始。然后，复制在*在自定义DIV元素中创建简单地图*菜谱中介绍的HTML文件中的所有代码，并将其粘贴到新文件中。
- en: Add the following function after the `initMap()` function. It will listen to
    the click events of the buttons added to the HTML code in step 4\. It simply sets
    the base map according to the IDs of the buttons.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`initMap()`函数之后添加以下函数。它将监听在步骤4中添加到HTML代码中的按钮的点击事件。它简单地根据按钮的ID设置基础地图。
- en: '[PRE28]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `startButtonEvents` function must be called upon initializing the map, so
    the following line of code is added after the map is initialized.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`startButtonEvents`函数必须在初始化地图时调用，因此添加了以下代码行在地图初始化之后。'
- en: '[PRE29]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Then, add the following HTML lines of code before the map''s `div` element.
    These are the HTML buttons to change the base map:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在地图的`div`元素之前添加以下HTML代码行。这些是用于更改基础地图的HTML按钮：
- en: '[PRE30]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Enter the URL of your local server, where your `base_map.html` file is stored,
    in your favorite browser, and take a look at the result. You will see the map
    with buttons at the top. Each button changes the base maps according to their
    names.![How to do it…](img/8825OT_01_06.jpg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您喜欢的浏览器中输入本地服务器的URL，其中存储着您的`base_map.html`文件，然后查看结果。您将看到顶部带有按钮的地图。每个按钮都会根据其名称更改基础地图。![如何操作…](img/8825OT_01_06.jpg)
- en: As shown in the preceding screenshot, you can easily change the base maps that
    are provided by Google.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述截图所示，您可以轻松更改Google提供的基础地图。
- en: How it works...
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Most of the magic is done by the API itself; you just choose the map type you
    want to switch to.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分魔法都是由API本身完成的；您只需选择要切换到的地图类型。
- en: These map types are predefined, but there is a possibility to add your own base
    maps or styled maps to the API and switch to them. Adding your own base maps or
    styled maps are introduced in [Chapter 2](ch02.html "Chapter 2. Adding Raster
    Layers"), *Adding Raster Layers*.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这些地图类型是预定义的，但您有可能向API添加自己的基础地图或样式地图，并切换到它们。在[第2章](ch02.html "第2章。添加栅格图层")中介绍了添加自己的基础地图或样式地图，*添加栅格图层*。
- en: 'You can also define the starting base map at the `mapOptions` object as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在`mapOptions`对象中定义起始基础地图，如下所示：
- en: '[PRE31]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: After changing the map options, your map will be opened with the `TERRAIN` base
    map type.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改地图选项后，您的地图将以`TERRAIN`基础地图类型打开。
- en: There's more...
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Changing base maps may seem to be an easy topic, but the math and tech behind
    them is not as easy as using them. The base maps and overlays used in the Google
    Maps JavaScript API are processed in the Web Mercator projection system. In this
    projection system, the angles are preserved, but the size and shape of large objects
    change. As a result, the poles seem to be bigger than North America, which is
    not true at all. This projection is a good way to show the whole world in the
    same map.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 改变基础地图可能看起来是一个简单的话题，但它们背后的数学和技术并不像使用它们那样简单。在 Google Maps JavaScript API 中使用的基础地图和叠加图层是在
    Web Mercator 投影系统中处理的。在这个投影系统中，角度被保留，但大型物体的尺寸和形状会发生变化。因此，看起来极地似乎比北美更大，这完全不是事实。这种投影是一种很好的方式，可以在同一张地图上展示整个世界。
- en: Please check the later chapters for detailed information or check the Wikipedia
    article at [https://en.wikipedia.org/wiki/Mercator_projection](https://en.wikipedia.org/wiki/Mercator_projection).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅后续章节以获取详细信息，或查看维基百科上的文章[https://en.wikipedia.org/wiki/Mercator_projection](https://en.wikipedia.org/wiki/Mercator_projection)。
- en: See also
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Creating a simple map in a custom DIV element* recipe
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在自定义 DIV 元素中创建简单地图* 的配方'
