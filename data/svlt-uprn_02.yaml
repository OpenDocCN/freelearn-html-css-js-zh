- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Configurations and Options
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和选项
- en: In my opinion, there are few things more frustrating than working diligently
    on a project for weeks, only for a bug to manifest itself upon the project launch
    in the production environment because of a seemingly obscure configuration option.
    That is why this chapter will make efforts to teach you about the various options
    available to you before you dig in. I know you’re ready to learn about SvelteKit
    already. I promise that I’m just as excited to get into “actually building stuff”
    as you are, but I assure you that there is value in learning these concepts early
    on. If you’re hoping to rapidly develop a high-performance web application, then
    I believe it is in your best interest to learn these concepts before you start
    on your specific app.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，没有什么比在项目上辛勤工作几周，结果在生产环境中因为一个看似微不足道的配置选项而出现bug更令人沮丧的了。这就是为什么本章将努力在您深入研究之前向您介绍可用的各种选项。我知道您已经准备好学习SvelteKit了。我保证，我对“真正开始构建东西”的热情与您一样，但我向您保证，早期学习这些概念是有价值的。如果您希望快速开发高性能的Web应用程序，那么我相信在学习您特定的应用程序之前学习这些概念对您最有利。
- en: To begin this chapter, we’ll start by taking a look at how you can manage your
    project configuration with options available in your `svelte.config.js` file.
    We’ll then take a brief look at some configurations with basic adapters so that
    you can get started. We’ll also look at the options available to you in your `vite.config.js`
    file. It may seem strange to discuss Vite so much in a book about SvelteKit, but
    SvelteKit wouldn’t be the tool it is without Vite.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始本章，我们将首先查看如何使用`svelte.config.js`文件中的选项来管理您的项目配置。然后，我们将简要地查看一些使用基本适配器的配置，以便您开始。我们还将查看您在`vite.config.js`文件中可用的选项。在关于SvelteKit的书中如此多地讨论Vite可能看起来有些奇怪，但如果没有Vite，SvelteKit就不会是现在的工具。
- en: 'In this chapter, we’ll cover these topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Configuring SvelteKit
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置SvelteKit
- en: Configuring Vite
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Vite
- en: After we have discussed the configurations and how they’ll affect your tools,
    you should feel more comfortable making appropriate changes to suit the needs
    of your next SvelteKit project.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论了配置及其如何影响您的工具之后，您应该会感到更自在地做出适当的更改，以满足您下一个SvelteKit项目的需求。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The complete code for this chapter is available on GitHub at: [https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter02](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter02)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完整代码可在GitHub上找到：[https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter02](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter02)
- en: Configuring SvelteKit
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置SvelteKit
- en: The essential configuration for a SvelteKit project lives inside the `svelte.config.js`
    file. Understanding the various options available to you will empower you to make
    the most of SvelteKit. While we cannot cover all available options in such a brief
    section, the aim of it is to cover options that you are likely to find useful.
    For more configuration options, see the *Further Reading* section at the end of
    this chapter for more resources.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SvelteKit项目的核心配置位于`svelte.config.js`文件中。了解您可用的各种选项将使您能够充分利用SvelteKit。虽然我们无法在如此简短的章节中涵盖所有可用的选项，但我们的目标是涵盖您可能认为有用的选项。有关更多配置选项，请参阅本章末尾的*进一步阅读*部分以获取更多资源。
- en: 'To get started, go ahead and open the `svelte.config.js` file from the skeleton
    project in your editor. Note that it’s quite simple at this point. Essentially,
    it imports the `adapter` function from the `@sveltejs/adapter-auto` package, specifies
    that function in the `kit` property of the `config` constant, and finally, exports
    the `config` object. We’re also given a type annotation via `config.kit` property
    is where we will add various other properties to customize our configuration.
    It should look similar to this:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请打开编辑器中骨架项目中的`svelte.config.js`文件。请注意，目前它相当简单。基本上，它从`@sveltejs/adapter-auto`包中导入`adapter`函数，在`config`常量的`kit`属性中指定该函数，并最终导出`config`对象。我们还通过`config.kit`属性提供了一个类型注解，我们将在这里添加各种其他属性来自定义配置。它应该看起来像这样：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `adapter-auto` package is included by default when installing with `npm
    create svelte@latest`. It will automatically adapt your project during build time
    so that it can be effortlessly deployed to Vercel, Cloudflare Pages, Netlify,
    or Azure Static Web Apps. Because of this, `adapter-auto` is considered a `devDependencies`.
    Doing so will allow you to customize options specific to that environment, since
    `adapter-auto` does not accept any options.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`adapter-auto` 包在通过 `npm create svelte@latest` 安装时默认包含。它将在构建时自动适应你的项目，以便可以轻松部署到
    Vercel、Cloudflare Pages、Netlify 或 Azure Static Web Apps。因此，`adapter-auto` 被视为
    `devDependencies`。这样做将允许你自定义特定于该环境的选项，因为 `adapter-auto` 不接受任何选项。'
- en: We’ll discuss adapters at length in a later chapter; we’ll cover how you can
    use the `adapter-static` package to generate a static site and how you can run
    SvelteKit applications on Node.js servers using `adapter-node`. For now, let’s
    look at some other potential configuration options you may find yourself needing
    in the following sections.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中详细讨论适配器；我们将介绍如何使用 `adapter-static` 包生成静态网站，以及如何使用 `adapter-node` 在
    Node.js 服务器上运行 SvelteKit 应用程序。现在，让我们看看你可能在以下章节中需要的一些其他潜在配置选项。
- en: alias
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: alias
- en: 'While it is very useful to have access to the `src/lib/` path via the `$lib/`
    alias, there may come a time where you want to access something outside of that.
    To do so, you can add the `alias` property to `config.kit`. For instance, if your
    project had a specific file for connecting to and managing a database, you could
    create an alias to make imports simpler. Alternatively, you may want to easily
    access an image from a commonly used folder. See the following code snippets demonstrating
    these concepts:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通过 `$lib/` 别名访问 `src/lib/` 路径非常有用，但有时你可能想访问其外部的内容。为此，你可以在 `config.kit` 中添加
    `alias` 属性。例如，如果你的项目有一个用于连接和管理数据库的特定文件，你可以创建一个别名以简化导入。或者，你可能想轻松地从常用文件夹中访问图像。以下代码片段展示了这些概念：
- en: src/db.js
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: src/db.js
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: svelte.config.js
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: svelte.config.js
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: src/routes/+page.svelte
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: src/routes/+page.svelte
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this example, I’ve created a mock database object with a property called
    `connection`. In the `svelte.config.js` file, I’ve added two aliases – one for
    the mock database object and another that points to a folder of images. Then,
    in the `+page.svelte` file, an import is made from both of these aliases to illustrate
    how you might use aliases to import a single file, as well as make an import of
    one particular file from a directory.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我创建了一个名为 `connection` 的模拟数据库对象。在 `svelte.config.js` 文件中，我添加了两个别名——一个用于模拟数据库对象，另一个指向一个图像文件夹。然后，在
    `+page.svelte` 文件中，从这两个别名中进行了导入，以说明如何使用别名导入单个文件，以及如何从目录中导入特定文件。
- en: This example fails to take into consideration any asynchronous code that would
    usually be required for database operations. It is also not considered best practice
    to make calls to a database directly from routes, but we’ll come back to how to
    do that in a later chapter. While this example is quite rudimentary, it is intended
    to showcase the usefulness of being able to add your own aliases for specific
    files and directories.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例未能考虑通常用于数据库操作所需的任何异步代码。直接从路由调用数据库也不是最佳实践，但我们在后面的章节中会回到如何做到这一点。虽然这个例子相当基础，但它的目的是展示能够为特定文件和目录添加自己的别名是有用的。
- en: appDir
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: appDir
- en: This property defaults to the `_app` value and is used to determine where imported
    assets such as CSS and JS will be served from the built application.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性默认为 `_app` 值，并用于确定导入的资产（如 CSS 和 JS）将从构建的应用程序中提供。
- en: csp
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: csp
- en: 'To aid in defending your application and its users from malicious `config.kit.csp`
    are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助保护你的应用程序及其用户免受恶意 `config.kit.csp` 的侵害，以下是一些措施：
- en: '`mode: ''hash'' | ''nonce'' | ''auto''`: This specifies whether hashes or nonces
    should be used to enforce CSP. Using `auto` will use nonces for dynamically rendered
    pages and hashes for prerendered pages.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mode: ''hash'' | ''nonce'' | ''auto''`：这指定了是否应使用哈希或非ces来强制执行 CSP。使用 `auto`
    将为动态渲染的页面使用非ces，为预渲染的页面使用哈希。'
- en: '`directives`: Directives specified here will be added to the `Content-Security-Policy`
    headers. See the official SvelteKit documentation for a full list of available
    options.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`directives`: 在此处指定的指令将被添加到 `Content-Security-Policy` 头部。有关可用选项的完整列表，请参阅官方
    SvelteKit 文档。'
- en: '`reportOnly`: This is used to report errors but still allows scripts to be
    loaded. Directives specified here will be added to the `Content-Security-Policy-Report-Only`
    headers. See the official SvelteKit documentation for a full list of available
    options.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reportOnly`：这个选项用于报告错误，但仍然允许脚本加载。这里指定的指令将被添加到`Content-Security-Policy-Report-Only`头中。有关可用选项的完整列表，请参阅官方SvelteKit文档。'
- en: 'While this can be helpful to prevent scripts from being loaded from external
    sources, you may have deliberately included scripts from a `%sveltekit.nonce%`
    to the `nonce` property of the included script, like so:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这可以帮助防止从外部来源加载脚本，但您可能故意将来自`%sveltekit.nonce%`的脚本包含到包含脚本的`nonce`属性中，如下所示：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: csrf
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSRF
- en: 'To help protect your application from `POST` requests to your application from
    another origin. If you need to disable it, you can do so by setting `config.kit.csrf.checkOrigin`
    to `false`, like so:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助保护您的应用程序免受来自另一个源对您的应用程序的`POST`请求。如果您需要禁用它，可以通过将`config.kit.csrf.checkOrigin`设置为`false`来实现，如下所示：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: env
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境变量
- en: 'If you have included `.env` files in your project, you can further specify
    which ones can be public and which directory they are stored in with the following
    options:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在项目中包含了`.env`文件，您可以使用以下选项进一步指定哪些可以公开以及它们存储在哪个目录中：
- en: '`dir`: A string value that defaults to “`.`” (the project `root` directory).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dir`：一个默认为“`.`”（项目根目录）的字符串值。'
- en: '`publicPrefix`: A string value that defaults to `PUBLIC_`. This prefix denotes
    whether environment variables located in `.env` files are safe to be exposed to
    client-side code. Those environment variables are then accessible by importing
    from the `$env/static/public` module throughout the rest of the application. For
    example, assume we’re working with an `.env` file in the `base` directory of our
    project. Adding the `PUBLIC_EXTERNAL_API=https://api.nasa.gov/planetary/apod`
    value will be importable in client-side code, whereas the `INTERNAL_API=AN_INTERNAL_IP_ADDRESS`
    value will only be importable in server code.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`publicPrefix`：一个默认为`PUBLIC_`的字符串值。这个前缀表示`.env`文件中定位的环境变量是否安全地暴露给客户端代码。这些环境变量随后可以通过从整个应用程序中的`$env/static/public`模块导入来访问。例如，假设我们正在处理项目`base`目录中的一个`.env`文件。添加`PUBLIC_EXTERNAL_API=https://api.nasa.gov/planetary/apod`值将在客户端代码中可导入，而`INTERNAL_API=AN_INTERNAL_IP_ADDRESS`值则只能在服务器代码中导入。'
- en: prerender
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预渲染
- en: 'It’s very likely that at least some content in your application will be prerenderable
    – that is, it will show the exact same HTML, CSS, and JS for each and every user
    that visits it. A common example of this is an “About” page. Whether or not you
    would like for a specific page to be prerendered will be addressed in a later
    chapter, but to further customize prerendering, consider the following options
    that can be added to `config.kit.prerender`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的应用程序中，很可能至少有一部分内容是可以预渲染的——也就是说，它将为每个访问它的用户显示完全相同的HTML、CSS和JS。一个常见的例子是“关于”页面。是否希望特定页面进行预渲染将在后面的章节中讨论，但为了进一步自定义预渲染，请考虑以下可以添加到`config.kit.prerender`中的选项：
- en: '`entries`: An array of strings for each route that should be prerendered. The
    default value is the `*` special character and will include all non-dynamic routes.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`entries`：一个字符串数组，用于指定每个应该进行预渲染的路由。默认值是`*`特殊字符，将包括所有非动态路由。'
- en: '`concurrency`: The number of pages that can be prerendered simultaneously.
    Because JS is single-threaded, this will only take effect if your project needs
    to make network requests during the prerendering process.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`concurrency`：可以同时预渲染的页面数量。由于JavaScript是单线程的，因此只有在您的项目需要在预渲染过程中进行网络请求时，此选项才会生效。'
- en: '`crawl`: This option defaults to `true`. It tells SvelteKit whether or not
    it should prerender pages found in the `entries` array.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crawl`：此选项默认为`true`。它告诉SvelteKit是否应该预渲染`entries`数组中找到的页面。'
- en: '`handleHttpError`: This option defaults to `fail`. Other options include `ignore`,
    `warn`, or a `details` object specific to SvelteKit that implements `PrerenderHttpErrorHandler`.
    If the prerendering process fails at any point, this option determines how to
    manage it.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`handleHttpError`：此选项默认为`fail`。其他选项包括`ignore`、`warn`或一个特定的SvelteKit `details`对象，该对象实现了`PrerenderHttpErrorHandler`。如果在预渲染过程的任何点上失败，此选项将确定如何处理它。'
- en: '`handleMissingId`: This is the same as `handleHttpError` except that the `details`
    object it accepts is implemented from `PrerenderMissingIdHandler`. Linking to
    a specific point on another page is done using a hash in the URL – a `#` character
    followed by the ID of an element on the destination page. If an element with the
    specified ID is not found on the destination page, then this option will determine
    how the build process should behave.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`handleMissingId`：这与 `handleHttpError` 相同，但它接受的 `details` 对象是从 `PrerenderMissingIdHandler`
    实现的。链接到另一页上的特定点是通过 URL 中的哈希实现的——一个 `#` 字符后跟目标页面上元素的 ID。如果目标页面上找不到指定 ID 的元素，那么此选项将决定构建过程应该如何行为。'
- en: '`origin`: This defaults to [https://kit.svelte.dev/docs/page-options](https://kit.svelte.dev/docs/page-options).
    If you want to use the application URL in the rendered content, it can be helpful
    to specify it here.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`origin`：默认为 [https://kit.svelte.dev/docs/page-options](https://kit.svelte.dev/docs/page-options)。如果你想在渲染内容中使用应用程序的
    URL，在这里指定它可能会有所帮助。'
- en: Hopefully, this list of options was not too overwhelming and gave some insight
    as to how you can customize SvelteKit to your needs. SvelteKit will continue to
    evolve, so it is always recommended to check the official documentation, as features
    may be added or removed in future releases.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这个选项列表不会让你感到过于繁重，并为你提供了如何根据需要自定义 SvelteKit 的见解。SvelteKit 将继续发展，因此始终建议查看官方文档，因为新功能可能会在未来的版本中添加或删除。
- en: Now that we’ve looked at a few options available for customizing SvelteKit,
    let’s look at how we can modify the behavior of Vite. Like SvelteKit, Vite comes
    with opinions on how projects should be configured. These opinions are useful
    for a wide range of use cases, but there will always be instances where they’ll
    need to be adjusted.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了一些可用于自定义 SvelteKit 的选项，让我们来看看如何修改 Vite 的行为。与 SvelteKit 一样，Vite 对项目应该如何配置有自己的看法。这些看法对于广泛的用例非常有用，但总会有需要调整的情况。
- en: Configuring Vite
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Vite
- en: As previously mentioned, Vite is the build tool that makes SvelteKit possible,
    so it’s just as important to know how to configure Vite as it is SvelteKit. That
    being said, Vite is highly configurable, and so for the sake of brevity (and your
    attention span), we’ll keep it limited to only a high-level view of available
    options. This section is not intended to be an exhaustive list but rather a quick
    glance at the options available to you. For further reading, consult the resources
    located at the end of this chapter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Vite 是使 SvelteKit 成为可能的项目构建工具，因此了解如何配置 Vite 与了解 SvelteKit 一样重要。话虽如此，Vite
    具有高度的可配置性，因此为了简洁（以及您的注意力集中），我们将仅限于提供一个对可用选项的高级概述。本节的目的不是提供一个详尽的列表，而是快速浏览一下您可用的选项。如需进一步阅读，请参阅本章末尾的资源。
- en: 'At its heart, SvelteKit is just a Vite plugin. Obviously, there is more to
    it than that, but when you open `vite.config.js` in a newly created SvelteKit
    project, you’ll see what I mean. Similar to `svelte.config.js`, this configuration
    exports a `config` constant, with a couple of properties set – the SvelteKit plugin
    that is imported and the tests to include. If you answered “no” to tests during
    the `create@svelte` prompts, you may not see the `test` property. The configuration
    from the skeleton application is shown in the following code snippet:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，SvelteKit 只是一个 Vite 插件。显然，它不仅仅是一个插件，但当你在一个新创建的 SvelteKit 项目中打开 `vite.config.js`
    文件时，你就会明白我的意思。类似于 `svelte.config.js`，这个配置导出了一个 `config` 常量，其中设置了一些属性——导入的 SvelteKit
    插件和要包含的测试。如果你在 `create@svelte` 提示中回答了“否”关于测试的问题，你可能看不到 `test` 属性。以下代码片段展示了骨架应用程序的配置：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: plugins
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插件
- en: It seems logical to start with the `plugins` property of our Vite configuration,
    as this book’s entire premise is based around one plugin in particular. With Vite
    becoming more popular and seeing a rise in adoption, its ecosystem is expanding,
    and with that comes more plugins. Many of those plugins are developed by the community
    to solve common problems. And because Vite extends Rollup, many Rollup plugins
    also work with Vite out of the box, although not all. The Vite development team
    maintains several official Vite plugins, including one that enables legacy browser
    support. Many features and functionality can be added to your application via
    these plugins. Once you have found a plugin that satisfies your requirements and
    installed it, you will need to import and include it in the `config.plugins` array,
    just as SvelteKit was previously shown. Configurations for plugins vary, but typically,
    options are passed via the parameters of the imported function call. To find more
    plugins available for Vite, check out the Awesome Vite project at [https://github.com/vitejs/awesome-vite](https://github.com/vitejs/awesome-vite).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们的Vite配置的`plugins`属性开始似乎很合理，因为这本书的整个前提都是基于一个特定的插件。随着Vite变得越来越受欢迎，其采用率也在上升，其生态系统正在扩展，随之而来的是更多的插件。许多这些插件都是由社区开发的，用于解决常见问题。由于Vite扩展了Rollup，许多Rollup插件也可以与Vite无缝工作，尽管并非所有。Vite开发团队维护了几个官方的Vite插件，包括一个支持旧版浏览器支持的插件。许多功能和功能可以通过这些插件添加到你的应用程序中。一旦你找到了满足你要求的插件并安装了它，你将需要将其导入并包含在`config.plugins`数组中，就像之前展示的SvelteKit一样。插件的配置各不相同，但通常，选项是通过导入函数调用的参数传递的。要查找更多可用的Vite插件，请查看GitHub上的Awesome
    Vite项目[https://github.com/vitejs/awesome-vite](https://github.com/vitejs/awesome-vite)。
- en: server
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: server
- en: Since Vite is running the development server you’ll be working on with SvelteKit,
    you may need to make some changes to how that server operates. For instance, you
    may need to change the default port, proxy it through another server elsewhere,
    add support for HTTPS, or even disable HMR for testing with older browsers. In
    these instances and more, you will want to adjust `config.server` accordingly.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Vite正在运行你用SvelteKit工作的开发服务器，你可能需要更改该服务器的一些操作方式。例如，你可能需要更改默认端口，通过另一个服务器代理，添加对HTTPS的支持，或者甚至禁用HMR以使用旧浏览器进行测试。在这些情况下以及更多情况下，你将想要相应地调整`config.server`。
- en: build
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: build
- en: When building your application for your production environment, you’ll likely
    need to make some adjustments. Whether you need to ensure the application has
    met specific browser compatibility or you’d like to customize Rollup’s options,
    these settings can be found under `config.build`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在生产环境中构建应用程序时，你可能需要做一些调整。无论你需要确保应用程序满足特定的浏览器兼容性，还是你想自定义Rollup的选项，这些设置都可以在`config.build`下找到。
- en: preview
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: preview
- en: Once you have built your application for your production environment, you should
    test it with Vite’s preview functionality. Changing your preview server’s options
    can be done by managing `config.preview`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你为你的生产环境构建了应用程序，你应该使用Vite的预览功能对其进行测试。可以通过管理`config.preview`来更改预览服务器的选项。
- en: optimizeDeps
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: optimizeDeps
- en: Occasionally, you may want to test multiple dependencies or versions of dependencies
    with your code to see how well they work for your project. To include or exclude
    dependencies from pre-bundling, or to further modify options used by `esbuild`,
    begin configuring `config.optimizeDeps`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你可能想测试多个依赖项或依赖项的版本与你的代码一起工作，以查看它们对你的项目有多好。要包括或排除依赖项以进行预捆绑，或进一步修改`esbuild`使用的选项，请开始配置`config.optimizeDeps`。
- en: ssr
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ssr
- en: If you need to prevent dependencies from running in your server environment,
    you may need to manage the options available to you under `config.ssr`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要防止依赖在你的服务器环境中运行，你可能需要管理在`config.ssr`下可用的选项。
- en: Summary
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered many configuration options available for SvelteKit.
    We went over an example of how `config.kit.alias` might be useful for importing
    frequently accessed files. While we did not cover all options, we did briefly
    look at the `appDir`, `csp`, `csrf`, `env`, and `prerender` options and how they
    can affect our application.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了SvelteKit可用的许多配置选项。我们讨论了`config.kit.alias`可能如何用于导入频繁访问的文件的一个例子。虽然我们没有涵盖所有选项，但我们简要地看了`appDir`、`csp`、`csrf`、`env`和`prerender`选项以及它们如何影响我们的应用程序。
- en: We also glanced at some configuration options available in `vite.config.js`.
    For the most part, SvelteKit sets up a configuration that works for us according
    to the choices made in the installation prompt, but for further tweaks and plugins,
    we now know where to start looking in the official Vite documentation.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也浏览了一些在 `vite.config.js` 中可用的配置选项。大部分情况下，SvelteKit 会根据安装提示中的选择设置一个适合我们的配置，但对于进一步的调整和插件，我们现在知道在哪里开始查找官方
    Vite 文档。
- en: In the next chapter, we’ll go over some existing web standards and how SvelteKit’s
    design keeps them in mind. Existing standards present in web browsers are quickly
    becoming supported in other environments, including Node-based environments or
    even Deno and Cloudflare Workers. By leveraging these standards instead of building
    new ones on top of them, SvelteKit is accessible to more developers.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论一些现有的网络标准以及 SvelteKit 的设计如何考虑到这些标准。存在于网络浏览器中的现有标准正迅速在其他环境中得到支持，包括基于
    Node 的环境，甚至是 Deno 和 Cloudflare Workers。通过利用这些标准而不是在它们之上构建新的标准，SvelteKit 对更多开发者变得可访问。
- en: Further Reading
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**SvelteKit documentation** – The first stop on your troubleshooting journey
    should always be the official SvelteKit documentation: [https://kit.svelte.dev/docs](https://kit.svelte.dev/docs)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SvelteKit 文档** – 在你的故障排除之旅中，官方 SvelteKit 文档应该是你的第一站：[https://kit.svelte.dev/docs](https://kit.svelte.dev/docs)'
- en: '**Awesome Vite** – A collection of official and community-maintained resources
    or plugins that make development with Vite delightful: [https://github.com/vitejs/awesome-vite](https://github.com/vitejs/awesome-vite)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**出色的 Vite** – 一系列官方和社区维护的资源或插件，使使用 Vite 进行开发变得愉快：[https://github.com/vitejs/awesome-vite](https://github.com/vitejs/awesome-vite)'
- en: '**Vite documentation** – Need to modify your development server or build process?
    Check here for official recommendations: [https://vitejs.dev/config/](https://vitejs.dev/config/)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vite 文档** – 需要修改你的开发服务器或构建过程？请在此查看官方推荐：[https://vitejs.dev/config/](https://vitejs.dev/config/)'
