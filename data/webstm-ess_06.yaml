- en: Chapter 6. Immersing Yourself in Mobile App Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章. 沉浸在移动应用开发中
- en: In the previous chapter, we went through some of the essential web frameworks,
    and learned how WebStorm can help when working with them. We have seen how JavaScript
    can be used on both the client and the server.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了一些基本的Web框架，并学习了WebStorm如何帮助我们在使用它们时工作。我们看到了JavaScript如何在客户端和服务器端使用。
- en: 'In this chapter, we are going to learn how to use JavaScript, HTML, and CSS
    to develop mobile applications, and for setting up our environment to test mobile
    applications. For this, we are going to focus on the following, which are some
    of the most-used frameworks of the moment:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用JavaScript、HTML和CSS开发移动应用程序，并设置我们的环境以测试移动应用程序。为此，我们将关注以下内容，它们是目前一些最常用的框架：
- en: Apache Cordova
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Cordova
- en: PhoneGap
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PhoneGap
- en: Ionic
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic
- en: The main advantage of using the HTML, CSS, and JavaScript frameworks for mobile
    development is that we can use a single codebase and a single language for all
    the platforms that we want to target. This can help a lot in terms of the amount
    of code you have to write, the technologies that you have to learn, and the speed
    of development.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML、CSS和JavaScript框架进行移动开发的优点在于，我们可以使用单一代码库和单一语言来针对所有我们想要的目标平台。这可以在代码量、需要学习的技术和开发速度方面有很大帮助。
- en: By the end of this chapter, you will be able to quickly start a mobile project,
    and test it across multiple devices.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够快速开始一个移动项目，并在多个设备上测试它。
- en: Setting up your system for mobile development
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为移动开发设置系统
- en: Before we dive into the mobile development world, we need to prepare our system
    so that we can test the applications we create. For that purpose, we are going
    to set up some emulators and the necessary tools.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入移动开发世界之前，我们需要准备我们的系统，以便我们可以测试我们创建的应用程序。为此，我们将设置一些模拟器和必要的工具。
- en: The iOS platform guide
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS平台指南
- en: In this section, we are going to set up our environment to deploy apps for iOS
    devices such as iPhone and iPad. The Apple® tools, which are required to build
    the iOS applications, run only on the OS X operating system on Intel-based Macs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置我们的环境，以便为iPhone和iPad等iOS设备部署应用程序。构建iOS应用程序所需的苹果工具只能在基于Intel的Mac上运行的OS
    X操作系统上运行。
- en: Installing Xcode and the SDK
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Xcode和SDK
- en: The first tool that you need to install is Xcode. This tool runs only on OS
    X version 10.9 (Mavericks) or higher, and includes the iOS 8 SDK. If you plan
    to test your app on an actual device, it must have at least iOS 6.x installed,
    and you must also be a member of the Apple's iOS Developer Program. In this book,
    you are going to learn how to deploy the apps to the emulator, for which you don't
    need to register with the developer program.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装的第一个工具是Xcode。这个工具只能在OS X版本10.9（Mavericks）或更高版本上运行，并包括iOS 8 SDK。如果你计划在实际设备上测试你的应用程序，它必须至少安装了iOS
    6.x，而且你必须也是苹果iOS开发者计划的成员。在这本书中，你将学习如何将应用程序部署到模拟器，而这不需要你在开发者计划中注册。
- en: 'You can install Xcode from the AppStore. Search for Xcode and select install:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从AppStore安装Xcode。搜索Xcode并选择安装：
- en: '![Installing Xcode and the SDK](img/00081.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![安装Xcode和SDK](img/00081.jpeg)'
- en: Once the installation of Xcode is over, we need to install the `ios-sim` tool.
    This tool is a command-line utility that launches an iOS application in the simulator.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Xcode安装完成，我们需要安装`ios-sim`工具。这是一个命令行实用程序，可以在模拟器中启动iOS应用程序。
- en: 'To install `ios-sim`, we need to open a terminal window, and run the following
    command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`ios-sim`，我们需要打开一个终端窗口，并运行以下命令：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once the installation of `ios-sim` is done, we have all the tools needed to
    test our applications on the iOS platform.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成`ios-sim`的安装，我们就拥有了在iOS平台上测试我们应用程序所需的所有工具。
- en: The Android platform guide
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android平台指南
- en: Now that we have the iOS platform set up, we are going to show you how to set
    up the environment for the Android apps. The simplest way to get all the required
    tools is to install Android Studio, the official Android IDE. This is an IDE built
    on another popular JetBrains product called IntelliJ IDEA Community Edition. It
    is available for the Windows, Mac OS X, and Linux platforms.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了iOS平台，我们将向您展示如何设置Android应用程序的环境。获取所有必需工具的最简单方法是安装Android Studio，这是官方的Android
    IDE。这是一个基于另一个流行的JetBrains产品IntelliJ IDEA Community Edition的IDE。它适用于Windows、Mac
    OS X和Linux平台。
- en: To install Android Studio, download the latest version from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html),
    and then follow the screen instructions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Android Studio，请从 [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    下载最新版本，然后按照屏幕上的说明操作。
- en: 'By default, Android Studio installs the image emulator for Nexus 5\. If you
    want to test your application on other devices, you need to install them in the
    Android Virtual Device Manager. You can find that in Android Studio under **Tools**
    | **Android** | **AVD Manager**:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Android Studio 安装了 Nexus 5 的图像模拟器。如果您想在其他设备上测试您的应用程序，您需要在 Android 虚拟设备管理器中安装它们。您可以在
    Android Studio 中的 **工具** | **Android** | **AVD 管理器** 找到它：
- en: '![The Android platform guide](img/00082.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![Android 平台指南](img/00082.jpeg)'
- en: All the frameworks covered in this chapter also support deployment to other
    platforms besides iOS and Android. So if you want to develop an application for
    those, you will have to install the necessary SDK or tools. We will not cover
    the steps for other platforms in this book, but you can find more information
    by searching for the SDK of each platform.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的所有框架也支持部署到 iOS 和 Android 之外的其他平台。因此，如果您想为这些平台开发应用程序，您将必须安装必要的 SDK 或工具。本书不会涵盖其他平台的步骤，但您可以通过搜索每个平台的
    SDK 来找到更多信息。
- en: 'Some of the other supported platforms are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些支持的平台如下：
- en: Amazon Fire OS
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Fire OS
- en: BlackBerry
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BlackBerry
- en: Firefox OS
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firefox OS
- en: Ubuntu
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu
- en: Windows Phone
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Phone
- en: Tiezen
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tiezen
- en: Now that we have set up the environment for the Android and iOS platforms, we
    can start building the mobile apps.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为 Android 和 iOS 平台设置了环境，我们可以开始构建移动应用程序。
- en: Cordova
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cordova
- en: '|   | *Apache Cordova is a platform for building native mobile applications
    using HTML, CSS and JavaScript* |   |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|    | *Apache Cordova 是一个使用 HTML、CSS 和 JavaScript 构建原生移动应用程序的平台* |    |'
- en: '|   | --[https://cordova.apache.org/](https://cordova.apache.org/) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|    | --[https://cordova.apache.org/](https://cordova.apache.org/) |'
- en: Cordova is a set of JavaScript APIs that allows access to the native functions
    of the device such as the accelerometer, camera, or geolocation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Cordova 是一组 JavaScript API，允许访问设备的原生功能，如加速度计、摄像头或地理位置。
- en: The developer, while writing an app with Apache Cordova, uses web technologies
    that are packaged using the SDK platform as the native apps. At their core, the
    apps use HTML5 and CSS3 for the rendering part and JavaScript for the logic.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者在用 Apache Cordova 编写应用程序时，使用 SDK 平台打包的 Web 技术作为原生应用程序。在核心上，这些应用程序使用 HTML5
    和 CSS3 进行渲染，并使用 JavaScript 进行逻辑处理。
- en: 'Before we start building applications with this framework, we need to install
    it. To do that, we need to run the following command in a terminal window:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用此框架构建应用程序之前，我们需要安装它。为此，我们需要在终端窗口中运行以下命令：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding command installs Apache Cordova globally, so it will be available
    for all future projects. Once the installation is complete, we will have to restart
    WebStorm so that it detects the newly installed framework.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令全局安装了 Apache Cordova，因此它将适用于所有未来的项目。安装完成后，我们需要重新启动 WebStorm，以便它能够检测到新安装的框架。
- en: 'Now select **New Project** from either the welcome screen or the **File** menu.
    Select **PhoneGap/Cordova App** as a template, insert the destination folder,
    and select the path to the Cordova CLI, as shown in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在从欢迎屏幕或 **文件** 菜单中选择 **新建项目**。选择 **PhoneGap/Cordova 应用** 作为模板，插入目标文件夹，并选择 Cordova
    CLI 的路径，如图所示：
- en: '![Cordova](img/00083.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00083.jpeg)'
- en: This creates and opens a new project based on the Cordova framework. The project
    comes preloaded with an example page that we can use.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建并打开一个基于 Cordova 框架的新项目。该项目预装了一个示例页面，我们可以使用它。
- en: 'Before testing our application in the emulators, we need to edit the run configurations.
    So select **Edit Configurations...**, as shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的应用程序在模拟器中测试之前，我们需要编辑运行配置。因此，选择 **编辑配置...**，如图所示：
- en: '![Cordova](img/00084.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00084.jpeg)'
- en: Change the name to iOS, and select **ios** in the Platform dropdown. Click on
    **OK** to save the configuration. This will create a run environment configuration
    that can be used to test the application on the iOS platform.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 将名称更改为 iOS，并在平台下拉菜单中选择 **ios**。点击 **确定** 保存配置。这将创建一个运行环境配置，可用于在 iOS 平台上测试应用程序。
- en: 'If we check **Specify target** (seen in the following screenshot), we can choose
    a specific device like iPhone 6, iPhone 5s, or others:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们检查 **指定目标**（如图所示），我们可以选择特定的设备，如 iPhone 6、iPhone 5s 或其他设备：
- en: '![Cordova](img/00085.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00085.jpeg)'
- en: 'Now we can run our application in the emulator by pressing *Shift* + *F10*
    or selecting the run icon next to the configuration:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过按 *Shift* + *F10* 或选择配置旁边的运行图标来在模拟器中运行我们的应用程序。
- en: '![Cordova](img/00086.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00086.jpeg)'
- en: 'This will start the Cordova build system and run our application in the iOS
    emulator. We can also see the run log in the run section:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动 Cordova 构建系统并在 iOS 模拟器中运行我们的应用程序。我们还可以在运行部分查看运行日志：
- en: '![Cordova](img/00087.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00087.jpeg)'
- en: We are going to create a similar configuration to test our application on the
    Android platform. Select the **Edit Configuration** menu again.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个类似的配置来测试我们的应用程序在 Android 平台上的运行。再次选择 **编辑配置** 菜单。
- en: With the previous iOS configuration selected, click on the **Copy Configuration**
    icon to duplicate it. In the newly-created configuration, change the name to `Android`
    and the **Platform** to **android**.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择之前的 iOS 配置后，点击 **复制配置** 图标以复制它。在新建的配置中，将名称更改为 `Android` 并将 **平台** 更改为 **android**。
- en: '![Cordova](img/00088.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00088.jpeg)'
- en: We have now created a configuration to test our application on the Android emulator.
    To run the application, press *Shift* + *F10*, or press the run icon. This starts
    the application, using the Android emulator this time.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在创建了一个配置来测试我们的应用程序在 Android 模拟器上的运行。要运行应用程序，请按 *Shift* + *F10*，或按运行图标。这将启动应用程序，这次使用
    Android 模拟器。
- en: '![Cordova](img/00089.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Cordova](img/00089.jpeg)'
- en: We have now created a simple app that waits for the device-ready event, and
    renders a simple screen changing the state when the device is ready. We are now
    going to build a more complex application using PhoneGap, since the differences
    between the frameworks are minimal.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经创建了一个简单的应用程序，它等待设备就绪事件，并在设备就绪时改变屏幕状态。我们现在将使用 PhoneGap 构建一个更复杂的应用程序，因为框架之间的差异很小。
- en: PhoneGap
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PhoneGap
- en: '|   | *Easily create apps using the web technologies you know and love: HTML,
    CSS, and JavaScript PhoneGap is a free and open source framework that allows you
    to create mobile apps using standardized web APIs for the platforms you care about.*
    |   |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|    | *轻松使用您所熟悉和喜爱的网络技术创建应用程序：HTML、CSS 和 JavaScript。PhoneGap 是一个免费的开源框架，允许您使用针对您关心的平台的标准化网络
    API 创建移动应用程序。* |'
- en: '|   | --[http://phonegap.com/](http://phonegap.com/) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '|    | --[http://phonegap.com/](http://phonegap.com/) |'
- en: PhoneGap is a distribution of Apache Cordova; so, the engine behind it is Cordova,
    but you have access to more tools such as the Developer App or remote builds.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap 是 Apache Cordova 的一个发行版；因此，其背后的引擎是 Cordova，但你还可以访问更多工具，例如开发者应用或远程构建。
- en: 'Before we start, we need to install the framework globally, and restart WebStorm
    to pick it up. To do that, execute the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们需要全局安装框架并重新启动 WebStorm 以获取它。为此，请执行以下命令：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To start a new project based on PhoneGap, select **New Project** from either
    the welcome screen or the **File** menu, and select **PhoneGap/Cordova App** as
    the template. Insert the destination folder, and select the path to the newly
    installed PhoneGap CLI:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要基于 PhoneGap 开始一个新项目，请从欢迎屏幕或 **文件** 菜单中选择 **新建项目**，然后选择 **PhoneGap/Cordova 应用**
    作为模板。插入目标文件夹，并选择新安装的 PhoneGap CLI 的路径：
- en: '![PhoneGap](img/00090.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap](img/00090.jpeg)'
- en: This creates and opens a new project based on the PhoneGap framework. This project
    comes with an example page that we are going to extend.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建并打开一个基于 PhoneGap 框架的新项目。该项目包含一个示例页面，我们将对其进行扩展。
- en: Before moving further, we need to change the **minSdkVersion** in the **config.xml**
    file to **10**. We do this, because, by default, Android Studio doesn't download
    the SDK for the old API versions, and we don't want to target the old version
    of Android.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要将 `config.xml` 文件中的 **minSdkVersion** 修改为 **10**。我们这样做是因为，默认情况下，Android
    Studio 不会下载旧 API 版本的 SDK，而我们不想针对旧版本的 Android。
- en: To open the file, press *⌘* + *Shift* + *N*, start typing the file name (`config.xml`),
    and then select it. Once you have the file open, you can press *⌘* + *F*, and
    a search dialog will appear at the top of the page where we can type the `android-minSdkVersion`
    to find the fragment in the code.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开文件，请按 *⌘* + *Shift* + *N*，开始输入文件名（`config.xml`），然后选择它。一旦文件打开，你可以按 *⌘* + *F*，搜索对话框将出现在页面顶部，我们可以在这里输入
    `android-minSdkVersion` 以在代码中找到片段。
- en: '![PhoneGap](img/00091.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap](img/00091.jpeg)'
- en: Since our app uses the location, we need to add `cordova-plugin-geolocation`
    to the `config.xml` file so that PhoneGap downloads and installs it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的应用使用了位置，我们需要将`cordova-plugin-geolocation`添加到`config.xml`文件中，以便PhoneGap下载并安装它。
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now, following the steps given in the previous section, we are going to create
    a run configuration for iOS and Android to test our application on both platforms.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照上一节中给出的步骤，我们将为iOS和Android创建一个运行配置，以在两个平台上测试我们的应用程序。
- en: In this section, we will create the map example from the first chapter, but
    this time as a mobile application.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将从第一章创建地图示例，但这次作为一个移动应用。
- en: 'Since our app uses jQuery, we need to download and copy it to the `JS` folder,
    and then load it in the `index.html` file. Load the following script between the
    `cordova.js` and `index.js` files:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的应用使用了jQuery，我们需要下载并复制它到`JS`文件夹中，然后在`index.html`文件中加载它。在`cordova.js`和`index.js`文件之间加载以下脚本：
- en: '[PRE4]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After the app `<div>`, create a new `<div>` container for the map, as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在`<div>`标签的`app`之后，创建一个新的`<div>`容器用于地图，如下所示：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We also need to add the following styles to the `index.css` file:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要将以下样式添加到`index.css`文件中：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now load the Google Maps API. Since the API is an external resource that will
    be downloaded, we will load it only once the device is ready and connected to
    the Internet. So open the `index.js` file, and add the following code inside the
    `onDeviceReady` handler:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在加载Google Maps API。由于API是一个外部资源，将会被下载，所以我们只在设备准备好并连接到互联网时加载它。因此，打开`index.js`文件，并在`onDeviceReady`处理程序中添加以下代码：
- en: '[PRE7]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will listen for when the device is online, and trigger the `loadGoogleMapsAPI`
    function that we are going to define next:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这将监听设备在线时的情况，并触发我们接下来要定义的`loadGoogleMapsAPI`函数：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The preceding function checks whether the API is loaded or not; if not, it loads
    it using jQuery's `getScript` method. Considering that the API was loaded asynchronously,
    we need to use the callback to pass as a query string parameter to the script.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的函数检查API是否已加载；如果没有，它将使用jQuery的`getScript`方法加载它。考虑到API是异步加载的，我们需要使用回调函数将查询字符串参数传递给脚本。
- en: 'Now we will create the `onMapsApiLoaded` callback function, where we get the
    device location. We are also going to watch for any changes in the location and
    read the location:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建`onMapsApiLoaded`回调函数，其中我们获取设备位置。我们还将监视位置的变化并读取位置：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For the location method, we have to create two callback functions and a configuration
    object. We will use the default location if there is an error while loading the
    location:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于位置方法，我们必须创建两个回调函数和一个配置对象。如果加载位置时发生错误，我们将使用默认位置：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Once we have the location from the device or the default one, we can create
    and update the map.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们从设备或默认位置获取了位置，我们就可以创建和更新地图。
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will hide the initial screen, create the map, and update our position on
    it.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这将隐藏初始屏幕，创建地图，并更新我们在地图上的位置。
- en: 'Now, if we follow the steps from the previous example for running the application
    in the iOS emulator, we will see the following screen:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们按照上一个示例中的步骤在iOS模拟器中运行应用程序，我们将看到以下屏幕：
- en: '![PhoneGap](img/00092.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap](img/00092.jpeg)'
- en: 'If we run the application in the Android emulator, we will get a similar screen:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在Android模拟器中运行应用程序，我们将得到一个类似的屏幕：
- en: '![PhoneGap](img/00093.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap](img/00093.jpeg)'
- en: The Ionic framework
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离子框架
- en: '|   | *Create incredible apps.**Iconic is the beautiful, open source front-end
    SDK for developing hybrid mobile apps with web technologies.* |   |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '|    | *创建令人难以置信的应用。**Iconic是一个美丽的开源前端SDK，用于使用Web技术开发混合移动应用。** |    |'
- en: '|   | --[http://ionicframework.com/](http://ionicframework.com/) |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '|    | --[http://ionicframework.com/](http://ionicframework.com/) |'
- en: Ionic is a framework that focuses on the look, feel, and UI interactions. It
    is not a replacement for PhoneGap or Cordova, but an addition to these. It can
    be viewed as the Bootstrap for mobile development, since it is a collection of
    CSS styles and Angular JavaScript components.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic是一个专注于外观、感觉和UI交互的框架。它不是PhoneGap或Cordova的替代品，而是它们的补充。它可以被视为移动开发的Bootstrap，因为它是一个CSS样式和Angular
    JavaScript组件的集合。
- en: 'Before we start, we need to install the framework globally and restart WebStorm
    to pick it up. To do that, run the following command:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要全局安装框架并重新启动WebStorm以获取它。为此，运行以下命令：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Once we have installed the application, we need to restart WebStorm so that
    it can pick up the framework, and start a new project selecting the **PhoneGap/Cordova
    App** template and using the newly-installed Ionic CLI as the project compiler:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 安装应用程序后，我们需要重新启动WebStorm，以便它能够识别框架，并选择**PhoneGap/Cordova App**模板，使用新安装的Ionic
    CLI作为项目编译器来启动一个新项目：
- en: '![The Ionic framework](img/00094.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic框架](img/00094.jpeg)'
- en: After the project is created, we need to create the run configuration for both
    iOS and Android in the same way that we did for the previous projects; so, create
    the configuration following the steps from the previous section.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 项目创建完成后，我们需要像之前的项目一样，为iOS和Android创建运行配置；因此，请按照上一节中的步骤创建配置。
- en: Since Ionic comes with a sample project, we can readily test the created project
    on the emulator.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Ionic附带一个示例项目，我们可以在模拟器上轻松测试创建的项目。
- en: '![The Ionic framework](img/00095.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic框架](img/00095.jpeg)'
- en: This framework will create a more complex application with a built-in navigation
    that will allow us to see more screens.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此框架将创建一个具有内置导航的更复杂的应用程序，这将使我们能够看到更多屏幕。
- en: '![The Ionic framework](img/00096.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic框架](img/00096.jpeg)'
- en: Summary
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, you have learned how to use web technologies to create native
    mobile applications, and how WebStorm assists us in doing so: from creating projects
    quickly using templates to managing the run configurations.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用Web技术创建原生移动应用程序，以及WebStorm如何帮助我们实现这一点：从使用模板快速创建项目到管理运行配置。
- en: In the next chapter, we are going to see how WebStorm can help us in analyzing
    and debugging our code.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到WebStorm如何帮助我们分析和调试代码。
