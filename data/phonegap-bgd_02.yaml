- en: Chapter 2. Building Your First PhoneGap Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：构建您的第一个PhoneGap项目
- en: '*In [Chapter 1](ch01.html "Chapter 1. Introduction to PhoneGap"), *Introduction
    to PhoneGap*, you learned about one of the problems PhoneGap is trying to solve—developing
    mobile applications consistently across multiple platforms—and how to set up your
    build environment. Next, you will delve into the internals of PhoneGap. First,
    you need to know how the project is structured and how the CLI tools are used.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在[第一章](ch01.html "第一章：PhoneGap简介")*《PhoneGap简介*》中，您学习了PhoneGap试图解决的问题之一——在多个平台上持续开发移动应用程序，以及如何设置您的构建环境。接下来，您将深入了解PhoneGap的内部结构。首先，您需要了解项目是如何构建的，以及CLI工具是如何使用的。'
- en: 'In this chapter, you will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将：
- en: Take a look at the structure of a PhoneGap/Cordova application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看PhoneGap/Cordova应用程序的结构
- en: Learn about using the command-line tools of Cordova
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解使用Cordova命令行工具
- en: Know about Cordova lifecycle events
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Cordova生命周期事件
- en: Create a sample example
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个示例
- en: Get an overview of the browser's debugging tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解浏览器调试工具的概述
- en: Review the debug workflow with mobile in mind
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑到移动设备，回顾调试工作流程
- en: Learn how to build and deploy the applications
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何构建和部署应用程序
- en: The structure of a PhoneGap application
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PhoneGap应用程序的结构
- en: 'After creating a new project, as explained in the previous chapter, you''ll
    see the following structure inside the project''s root folder:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中解释了创建新项目之后，您将在项目的根目录内看到以下结构：
- en: '`www`: This directory contains the source files of the application and so we
    will be playing a lot in this directory. It contains the `css`, `js`, and `img`
    subdirectories, where you can place the respective files. Apart from assets such
    as CSS, JavaScript, and images, we will also have application-related HTML files.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`www`: 这个目录包含应用程序的源文件，因此我们将在该目录中进行大量操作。它包含`css`、`js`和`img`子目录，您可以将相应的文件放置在这些子目录中。除了CSS、JavaScript和图像等资产外，我们还将有与应用程序相关的HTML文件。'
- en: '`merges`: In this folder, you can add any platform-specific customization so
    you don''t have to modify the source files every time you work with a project.
    For example, we can use this feature to use a different font style on Android
    devices only. The platforms that you want to override will have a specific folder
    similar to the `www` folder having its own CSS, JS, HTML, and image contents:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merges`: 在这个文件夹中，您可以添加任何特定于平台的定制，这样您就不必每次与项目一起工作时都修改源文件。例如，我们可以使用这个功能在Android设备上使用不同的字体样式。您想要覆盖的平台将有一个类似于`www`文件夹的特定文件夹，包含自己的CSS、JS、HTML和图像内容：'
- en: '[PRE0]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding directory structure, the global application has the `app.js`
    file and in the `merges` directory, each platform has a separate `app.js` file.
    During the build process, the global `app.js` file will be replaced with the platform-specific
    `app.js` file.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在先前的目录结构中，全局应用程序包含`app.js`文件，而在`merges`目录中，每个平台都有一个单独的`app.js`文件。在构建过程中，全局的`app.js`文件将被平台特定的`app.js`文件替换。
- en: '`platforms`: This directory will have platform-dependent build files. For each
    platform that we add to the project, we can see a subdirectory.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platforms`: 这个目录将包含平台相关的构建文件。对于我们将添加到项目中的每个平台，我们都可以看到一个子目录。'
- en: '`plugins`: This is the directory where you''ll find the plugins used in the
    project. Whenever we install new plugins, they will be added over here.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plugins`: 这是您将找到项目中使用的插件的目录。每次我们安装新的插件时，它们都将被添加到这里。'
- en: '`hooks`: This directory can contain scripts that can be used to customize the
    Cordova/PhoneGap commands. This is really for advanced users where integrating
    with build systems and version control systems is required.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hooks`: 这个目录可以包含可以用来自定义Cordova/PhoneGap命令的脚本。这主要针对需要与构建系统和版本控制系统集成的高级用户。'
- en: '`config.xml`: This configuration file will have all the values specific to
    the application, such as application name, package name, version number, and other
    such configurations.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.xml`: 这个配置文件将包含所有特定于应用程序的值，例如应用程序名称、包名、版本号以及其他此类配置。'
- en: Using the PhoneGap CLI
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PhoneGap CLI
- en: You can use the Cordova command-line interface to initialize the project code,
    after which you can use various platforms' SDKs to develop them further. In the
    previous chapter, we discussed how to create a new project, add the required platforms,
    and build them using the CLI.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Cordova命令行界面初始化项目代码，之后您可以使用各种平台的SDK进一步开发它们。在上一章中，我们讨论了如何创建新项目，添加所需的平台，并使用CLI构建它们。
- en: Apart from creating a project by using the CLI tool, there are several other
    functions carried out by the CLI of Cordova. As the steps for installing the CLI
    are already covered, let's move on with advanced CLI usage. Once you create a
    project, use `cd` to move into it and you can execute a variety of project-level
    commands.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用 CLI 工具创建项目外，Cordova 的 CLI 还执行其他几个功能。由于安装 CLI 的步骤已经介绍，让我们继续介绍高级 CLI 使用。一旦创建项目，使用
    `cd` 命令进入它，您就可以执行各种项目级命令。
- en: 'The following is the list of the most used CLI commands:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最常用的 CLI 命令列表：
- en: '`platform add <platform>`: This adds a platform as a build target for the project.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platform add <platform>`: 这会将一个平台添加为项目的构建目标。'
- en: '`platform [rm | remove] <platform>`: This removes a platform which was previously
    added to the project.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platform [rm | remove] <platform>`: 这会移除之前已添加到项目中的平台。'
- en: '`platform [ls | list]`: This lists all platforms for which the project will
    build.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platform [ls | list]`: 这会列出项目将为其构建的所有平台。'
- en: '`platform [up | update] <platform>`: This updates the Cordova version used
    for the given platform.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`platform [up | update] <platform>`: 这会更新给定平台使用的 Cordova 版本。'
- en: '`plugin [ls | list]`: This lists all the plugins included in the project.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plugin [ls | list]`: 这会列出项目中包含的所有插件。'
- en: '`plugin add <path-to-plugin> [<path-to-plugin> ...]`: This adds one (or more)
    plugins to the project.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plugin add <path-to-plugin> [<path-to-plugin> ...]`: 这会将一个（或多个）插件添加到项目中。'
- en: '`plugin [rm | remove] <plugin-name> [<plugin-name> ...]`: This removes one
    (or more) plugins from the project.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plugin [rm | remove] <plugin-name> [<plugin-name> ...]`: 这会从项目中移除一个（或多个）插件。'
- en: '`plugin search [<keyword1> <keyword2> ...]`: This searches the plugin registry
    for plugins matching the list of keywords.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plugin search [<keyword1> <keyword2> ...]`: 这会在插件注册表中搜索与关键词列表匹配的插件。'
- en: '`prepare [platform...]`: This copies files into the specified platforms, or
    all platforms. It is then ready for building by Eclipse, Xcode, and so on.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prepare [platform...]`: 这会将文件复制到指定的平台，或所有平台。然后它就准备好由 Eclipse、Xcode 等构建了。'
- en: '`compile [platform...]`: This compiles the app into a binary for each targeted
    platform. With no parameters, it builds for all platforms; otherwise, it builds
    for the specified platforms.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compile [platform...]`: 这会将应用程序编译成针对每个目标平台的二进制文件。如果没有参数，它将为所有平台构建；否则，它将为指定的平台构建。'
- en: '`build [<platform> [<platform> [...]]]`: This is an alias for `cordova prepare`
    followed by `cordova compile`.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`build [<platform> [<platform> [...]]]`: 这是对 `cordova prepare` 后跟 `cordova
    compile` 的别名。'
- en: '`emulate [<platform> [<platform> [...]]]`: This launches emulators and deploys
    the app to them. With no parameters, it emulates the app for all the platforms
    added to the project; otherwise, it emulates the app for the specified platforms.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emulate [<platform> [<platform> [...]]]`: 这将启动模拟器并将应用程序部署到它们。如果没有参数，它将为项目中添加的所有平台模拟应用程序；否则，它将为指定的平台模拟应用程序。'
- en: '`serve [port]`: This launches a local web server allowing you to access each
    platform''s `www` directory on the given port (default `8000`).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`serve [port]`: 这将启动一个本地 Web 服务器，允许您在指定的端口（默认 `8000`）上访问每个平台的 `www` 目录。'
- en: 'All the preceding CLI commands are to be executed inside the project directory.
    Some of the example usages are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的上述 CLI 命令都需要在项目目录内执行。以下是一些示例用法：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `help` command is a global command, which displays a help page with all
    the available commands and the syntax to use them. This command can be executed
    at any command window and not necessarily within the project directory:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`help` 命令是一个全局命令，它显示一个包含所有可用命令及其语法的使用帮助页面。此命令可以在任何命令窗口中执行，而无需一定在项目目录内：'
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Cordova events
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cordova 事件
- en: To maximize the benefits of using Cordova, you should know about all the events
    available. They are called **lifecycle events** because they are a part of your
    application throughout its lifecycle. These events are available by default for
    all applications and it's up to the developer to use them to implement better
    design. Although there are several events, we will discuss the most important
    and commonly used events.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要最大化使用 Cordova 的好处，您应该了解所有可用的事件。它们被称为 **生命周期事件**，因为它们是您应用程序生命周期的一部分。这些事件默认对所有应用程序都可用，开发者可以使用它们来实现更好的设计。尽管有多个事件，但我们将讨论最重要的和最常用的事件。
- en: The deviceready event
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`deviceready` 事件'
- en: 'The `deviceready` event is an important event of Cordova and you can''t live
    without it in the Cordova world. This event is triggered when Cordova has fully
    loaded and the application is ready to be used. We should know when the application
    is ready to be used and so this event comes to our rescue. This event should be
    the gateway to all the application''s functionality:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`deviceready`事件是Cordova的重要事件，在Cordova的世界里，没有它你无法生存。当Cordova完全加载并且应用程序准备好使用时，会触发这个事件。我们应该知道应用程序何时准备好使用，因此这个事件就派上了用场。这个事件应该是所有应用程序功能的大门：'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To make the code easy to understand, we can define the function separately
    and bind it to the event, as shown here:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使代码易于理解，我们可以单独定义函数并将其绑定到事件，如下所示：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The online event
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线事件
- en: 'The `online` event is triggered when the device goes online with Internet connectivity.
    With this event, you can determine whether your application is currently in the
    online state or not. If your application requires the user to be online, this
    can be helpful:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备与互联网建立连接时，会触发`online`事件。通过这个事件，你可以确定你的应用程序当前是否处于在线状态。如果你的应用程序需要用户在线，这可能会很有帮助：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The offline event
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离线事件
- en: 'As you might have guessed, the `offline` event is the opposite of the `online`
    event. When the device goes offline, the application can capture it by using this
    event and necessary action can be taken by the developer:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所猜，`offline`事件是`online`事件的相反。当设备离线时，应用程序可以通过这个事件捕获它，并且开发者可以采取必要的行动：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There is no accurate way of finding whether the device is currently in the **online**
    or **offline** state. These events work on the connection state and it can sometimes
    be wrong. Note that even though the device is connected to 2G, 3G, or Wi-Fi, it
    doesn't mean the device is online.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 没有准确的方法来确定设备当前是处于**在线**还是**离线**状态。这些事件基于连接状态，有时可能会出错。请注意，即使设备连接到2G、3G或Wi-Fi，这并不意味着设备在线。
- en: The pause event
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 暂停事件
- en: 'The `pause` event is triggered when the application is moved to the background,
    which is typically when the user switches to another application. You can use
    this event to notify users that they are being taken away from the application:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序被移动到后台时，会触发`pause`事件，这通常发生在用户切换到另一个应用程序时。你可以使用这个事件来通知用户他们正在被带离应用程序：
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The resume event
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 恢复事件
- en: 'When the application is again brought to the foreground, the `resume` event
    is triggered. This usually happens after the `pause` event as the app should be
    in the background before coming to the foreground of the mobile platform:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序再次被带到前台时，会触发`resume`事件。这通常发生在`pause`事件之后，因为应用应该在移动平台的前台之前处于后台：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The backbutton event
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 返回按钮事件
- en: 'The `backbutton` event is fired when the user presses the Back button on the
    mobile device. You can use this event to override the default actions that happen
    when the Back button is pressed:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在移动设备上按下返回按钮时，会触发`backbutton`事件。你可以使用这个事件来覆盖按下返回按钮时发生的默认操作：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: There are several other events that are supported by external plugins. There
    is an exhaustive list of such plugins, which can be used by adding the appropriate
    plugins to the project.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个其他事件是由外部插件支持的。有一个这样的插件详单，可以通过向项目中添加适当的插件来使用。
- en: Note
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Not all events are supported on all platforms. For example, the `backbutton`
    event is not supported on iOS devices. For the full list of supported platforms
    for each event, refer to the documentation at [http://cordova.apache.org/docs/en/edge/cordova_events_events.md.html#Events](http://cordova.apache.org/docs/en/edge/cordova_events_events.md.html#Events).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有事件都支持所有平台。例如，`backbutton`事件在iOS设备上不受支持。有关每个事件支持的完整平台列表，请参阅[http://cordova.apache.org/docs/en/edge/cordova_events_events.md.html#Events](http://cordova.apache.org/docs/en/edge/cordova_events_events.md.html#Events)上的文档。
- en: Time for action – the Hello World example
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践时间 - Hello World 示例
- en: PhoneGap is an intermediary layer that talks to the mobile device and the application;
    the app resides inside a browser, and, using the PhoneGap API, you can connect
    to phone features such as contacts and camera.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap是一个介于移动设备和应用程序之间的中间层；应用程序位于浏览器内部，使用PhoneGap API，你可以连接到电话功能，如联系人相机。
- en: The UI layer of a PhoneGap application is a web browser view that takes up 100
    percent of the device's width and height; think of the UI layer as a browser.
    The UI layer is known as **WebView**. The WebView used by PhoneGap is the same
    one used by the native operating system.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap应用程序的用户界面层是一个占据设备宽度和高度100%的网页浏览器视图；将用户界面层视为一个浏览器。用户界面层被称为**WebView**。PhoneGap使用的WebView与原生操作系统使用的相同。
- en: 'Having discussed the basics of PhoneGap and the command-line tools, we will
    now create a simple application. This is not the typical Hello World example.
    With the already learned commands and configured environment with npm, let''s
    create a new project:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了PhoneGap的基础知识和命令行工具之后，我们现在将创建一个简单的应用程序。这不是典型的Hello World示例。使用已经学到的命令和通过npm配置的环境，让我们创建一个新的项目：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'With the completion of the preceding commands, we created a new project called
    `example1` and added Android platform support to the project. The directory structure
    is now this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成前面的命令后，我们创建了一个名为`example1`的新项目，并将Android平台支持添加到了项目中。现在的目录结构如下：
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: By default, the Cordova `create` script generates a skeletal web-based application
    whose home page is the project's `www/index.html` file. Edit this application
    however you want, but any initialization should be specified as part of the `deviceready`
    event handler, referenced by default from `www/js/index.js`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Cordova的`create`脚本生成一个基于Web的应用程序骨架，其主页是项目的`www/index.html`文件。你可以随意编辑这个应用程序，但任何初始化都应该指定为`deviceready`事件处理程序的一部分，默认情况下从`www/js/index.js`引用。
- en: 'When you open the `index.html` file present in the `www` directory, you will
    see HTML code. The `body` section will be similar to the code presented here.
    This is the default body content generated by the CLI tool for the project. It
    just shows a page with an image and some text:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开`www`目录中存在的`index.html`文件时，你会看到HTML代码。`body`部分将与这里展示的代码类似。这是CLI工具为项目生成的默认`body`内容。它只显示一个带有图像和一些文本的页面：
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output would be the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是以下内容：
- en: '![Time for action – the Hello World example](img/B03476_02_09.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 – Hello World 示例](img/B03476_02_09.jpg)'
- en: 'For a complex application, the page would not be this simple. To start with,
    let''s modify the page to add some text. The modified code is shown here, which
    is a simple static HTML content:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个复杂的应用程序，页面不会这么简单。首先，让我们修改页面以添加一些文本。修改后的代码如下，这是一个简单的静态HTML内容：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If any JavaScript external files are included at the top of the HTML `head`
    section, the browser stops parsing further until the file is downloaded. So it
    is recommended to add any JavaScript files or code chunks to the end of the `body`
    tag to decrease the wait time.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在HTML的`head`部分顶部包含了任何JavaScript外部文件，浏览器将停止解析，直到文件下载完成。因此，建议将任何JavaScript文件或代码块添加到`body`标签的末尾，以减少等待时间。
- en: 'Today, most modern browsers support the `async` and `defer` attributes on scripts.
    These attributes tell the browser that it''s safe to continue parsing while the
    scripts are being downloaded:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，大多数现代浏览器支持脚本上的`async`和`defer`属性。这些属性告诉浏览器，在脚本下载的同时，它安全地继续解析：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*What just happened?*'
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We removed the code from the default project created and added our own content.
    Please note that we added the `deviceready` event listener. When the app gets
    loaded and ready for action, the event will show an alert box. The `deviceready`
    event should be the entry point for all our device-related action.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从默认创建的项目中移除了代码，并添加了我们自己的内容。请注意，我们添加了`deviceready`事件监听器。当应用加载并准备好执行时，该事件将显示一个警告框。`deviceready`事件应该是所有与设备相关的操作的入口点。
- en: 'When we build and emulate the sample project, we will see the following output
    in the emulator:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们构建和模拟示例项目时，我们将在模拟器中看到以下输出：
- en: '![What just happened?](img/B03476_02_10.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/B03476_02_10.jpg)'
- en: WebKit debugging – Chrome, Safari, and Opera
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WebKit调试 – Chrome、Safari和Opera
- en: WebKit-based browsers support various debugging tools. For example, when encountering
    JavaScript issues, you can launch Web Inspector or Developer Tools and start to
    explore logs and errors using the JavaScript console.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 基于WebKit的浏览器支持各种调试工具。例如，当遇到JavaScript问题时，你可以启动Web Inspector或开发者工具，并开始使用JavaScript控制台探索日志和错误。
- en: In Chrome, you can access the Developer Tools from the Customize menu (click
    on the Customize menu and then go to **Tools** | **Developer Tools**). The Customize
    menu is available in the top-right corner. When working with Safari, you first
    have to enable the Developer Tools by opening Safari's **Preferences** panel and
    then selecting the **Show Develop** menu in the menu bar checkbox. You can then
    access the inspector by choosing **Show Web Inspector** from the application's
    **Develop** menu.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Chrome 中，您可以从自定义菜单访问开发者工具（单击自定义菜单，然后转到 **工具** | **开发者工具**）。自定义菜单位于右上角。当使用
    Safari 时，您首先需要通过打开 Safari 的 **偏好设置** 面板并选择菜单栏中的 **显示开发** 菜单复选框来启用开发者工具。然后，您可以通过选择应用程序的
    **开发** 菜单中的 **显示 Web 检查器** 来访问检查器。
- en: Since the Web Inspector is part of the WebKit codebase, you can use the same
    shortcuts in Chrome and Safari to access the debugging tools.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Web 检查器是 WebKit 代码库的一部分，您可以在 Chrome 和 Safari 中使用相同的快捷键来访问调试工具。
- en: 'On Windows and Linux, press:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 和 Linux 上，按：
- en: '*Ctrl* + *Shift* + *I* to open Developer Tools'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *Shift* + *I* 用于打开开发者工具'
- en: '*Ctrl* + *Shift* + *J* to open Developer Tools and bring focus to the console'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *Shift* + *J* 用于打开开发者工具并将焦点置于控制台'
- en: '*Ctrl* + *Shift* + *C* to toggle the Inspect Element mode'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *Shift* + *C* 用于切换元素检查模式'
- en: 'On OS X, press:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OS X 上，按：
- en: ⌥ ⌘ *I* (option + command + *I*) to open Developer Tools
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ⌥ ⌘ *I*（选项 + 命令 + *I*）打开开发者工具
- en: ⌥ ⌘ *J* (option + command + *J*) to open Developer Tools and bring focus to
    the console
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ⌥ ⌘ *J*（选项 + 命令 + *J*）打开开发者工具并将焦点置于控制台
- en: ⌥ ⌘ *C* (option + command + *C*) to toggle the Inspect Element mode
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ⌥ ⌘ *C*（选项 + 命令 + *C*）用于切换元素检查模式
- en: When accessing Developer Tools, you can switch between tools by clicking on
    the respective icon.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 当访问开发者工具时，您可以通过单击相应的图标在工具之间切换。
- en: 'The **Elements** panel allows you to see the webpage as the browser renders
    it. When using it, you can see the raw HTML and CSS, and explore the **Document
    Object Model** (**DOM**). By clicking on the **Elements** panel and moving around
    the source of the page, you can identify the HTML blocks and change the CSS selector''s
    value on-the-fly in order to experiment and fix possible rendering issues:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**元素** 面板允许您以浏览器渲染网页的方式查看网页。当使用它时，您可以看到原始的 HTML 和 CSS，并探索 **文档对象模型**（**DOM**）。通过单击
    **元素** 面板并在页面的源代码中移动，您可以识别 HTML 块，并实时更改 CSS 选择器的值以进行实验和修复可能的渲染问题：'
- en: '![WebKit debugging – Chrome, Safari, and Opera](img/B03476_02_01.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![WebKit 调试 – Chrome、Safari 和 Opera](img/B03476_02_01.jpg)'
- en: The **Resources** panel lets you inspect resources that are loaded and available
    in the inspected page. It lets you interact with frame trees containing frame
    resources (HTML, JavaScript, CSS, images, fonts, and so on), HTML5 databases,
    local storage, cookies, and AppCache.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源** 面板允许您检查在检查的页面中加载和可用的资源。它允许您与包含框架资源的框架树（HTML、JavaScript、CSS、图像、字体等）交互，HTML5
    数据库、本地存储、cookies 和 AppCache。'
- en: Using the **Network** panel, you can explore the components that a webpage or
    application requests from web servers, how long these requests take, and how much
    bandwidth is required.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **网络** 面板，您可以探索网页或应用程序从网络服务器请求的组件，这些请求需要多长时间，以及需要多少带宽。
- en: 'Using the **Sources** panel, you can access all the resources loaded into the
    page. Use this panel to access the JavaScript, set breakpoints in the code, and
    explore the stack trace for each error. In order to set a breakpoint, select the
    script in which you want to set the breakpoint, and then click on the line number
    you are interested in. When the debug tool reaches the breakpoint, you can see
    what''s happening in your code by exploring the call stack (that is, the chain
    of functions and/or methods executed until this breakpoint) and the scope variables,
    and move in and out of functions:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **资源** 面板，您可以访问页面中加载的所有资源。使用此面板访问 JavaScript，在代码中设置断点，并探索每个错误的堆栈跟踪。为了设置断点，选择您想要设置断点的脚本，然后点击您感兴趣的行号。当调试工具达到断点时，您可以通过探索调用堆栈（即执行到该断点的函数和方法链）和作用域变量来查看代码中的情况，并进入和退出函数：
- en: '![WebKit debugging – Chrome, Safari, and Opera](img/B03476_02_02.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![WebKit 调试 – Chrome、Safari 和 Opera](img/B03476_02_02.jpg)'
- en: The JavaScript can be edited directly inside the debugger and you can see your
    changes on-the-fly by going back and forth using the navigation arrows. If you
    want the debugger to stop the code execution each time an exception is raised,
    use the **Pause all** button at the bottom left of the panel. For details about
    each of the functionalities, we recommend that you refer to the official docs
    at [https://developer.chrome.com/devtools/docs/javascript-debugging](https://developer.chrome.com/devtools/docs/javascript-debugging).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接在调试器中编辑JavaScript，并通过使用导航箭头来回切换来实时查看您的更改。如果您希望调试器在每次抛出异常时停止代码执行，请使用面板左下角的**暂停所有**按钮。有关每个功能的详细信息，我们建议您参考[https://developer.chrome.com/devtools/docs/javascript-debugging](https://developer.chrome.com/devtools/docs/javascript-debugging)的官方文档。
- en: The **Timeline** panel lets you analyze the various WebKit behind-the-scenes
    activities such as how long the browser takes to handle DOM events, render page
    layouts, and handle events.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间线**面板让您可以分析WebKit背后的各种活动，例如浏览器处理DOM事件、渲染页面布局和处理事件所需的时间。'
- en: Once you press the Record button, you can start to inspect what's happening
    in the page you are currently viewing.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您按下记录按钮，您就可以开始检查您当前查看的页面中发生的事情。
- en: The Events and Frames icons (available in Chrome) allow you to access two different
    timeline data views, the first one is based on time and the second one is based
    on frames; you can zoom into each view by using the grey vertical controls at
    the top.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 事件和帧图标（在Chrome中可用）允许您访问两种不同的时间线数据视图，第一个是基于时间，第二个是基于帧；您可以通过使用顶部的灰色垂直控件来放大每个视图。
- en: The Memory icon lets you explore the memory usage of a specific webpage; in
    order to be more accurate during the exploration, it's a good habit to force the
    garbage collector by pressing the Trash icon at the bottom of the panel. Garbage
    collection is a form of automatic memory management; the collector attempts to
    reclaim garbage or memory occupied by objects that are no longer being used by
    the browser's window.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**内存**图标让您可以探索特定网页的内存使用情况；为了在探索过程中更加准确，按下面板底部的垃圾箱图标强制垃圾收集是一个好习惯。垃圾收集是一种自动内存管理形式；收集器试图回收垃圾或浏览器窗口不再使用的对象占用的内存。'
- en: '![WebKit debugging – Chrome, Safari, and Opera](img/B03476_02_03.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![WebKit调试 – Chrome、Safari和Opera](img/B03476_02_03.jpg)'
- en: The **Profiles** tool helps you capture and analyze the performance of JavaScript
    scripts. For example, you can learn which functions take the most time to execute
    and then zoom in on the possible bottlenecks and understand exactly where to optimize.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置文件**工具帮助您捕获和分析JavaScript脚本的性能。例如，您可以了解哪些函数执行时间最长，然后放大可能的瓶颈并确切了解在哪里进行优化。'
- en: The **Audits** panel is like having your own web optimization consultant sitting
    next to you. This panel can analyze a page as it loads and then provide suggestions
    and optimizations to decrease page load time and increase perceived responsiveness.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**审计**面板就像有一个自己的网页优化顾问坐在您身边。此面板可以在页面加载时分析页面，并提供建议和优化以减少页面加载时间并提高感知响应性。'
- en: Gecko debugging – Firefox
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gecko调试 – Firefox
- en: Firefox is based on the Gecko open source layout engine used in many applications
    developed by the Mozilla Foundation and the Mozilla Corporation. It offers good
    debugging tools and it's evolving quickly, including innovative projects such
    as Desktop WebRT, which lets you build a desktop web application at runtime that
    provides web apps with a native-like look and feel along with platform integration
    APIs on Windows, OS X, and other desktop platforms.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox基于Mozilla基金会和Mozilla公司开发的许多应用程序中使用的Gecko开源布局引擎。它提供了良好的调试工具，并且发展迅速，包括像Desktop
    WebRT这样的创新项目，它允许您在运行时构建桌面Web应用程序，该应用程序提供类似原生的外观和感觉，以及Windows、OS X和其他桌面平台上的平台集成API。
- en: If you are not developing apps for Android or iOS, you can use the Firefox layout
    engine, which offers some powerful development and debugging tools. Let's quickly
    explore how to use Firefox/Firebug to inspect and debug your app; as you will
    see, there are several similarities between the debug tools available in WebKit
    and Firefox.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不为Android或iOS开发应用程序，您可以使用Firefox布局引擎，它提供了一些强大的开发和调试工具。让我们快速了解如何使用Firefox/Firebug检查和调试您的应用程序；正如您将看到的，WebKit和Firefox中可用的调试工具之间存在几个相似之处。
- en: Firebug integrated with Firefox puts a great set of developer tools at your
    fingertips that rivals the features of the WebKit Web Inspector. In order to install
    the Firebug extension, you have to go to [https://www.getfirebug.com/downloads/](https://www.getfirebug.com/downloads/)
    and install the latest version. Once installed, you can open the extension by
    navigating to **Tools** | **Web Developer** | **Firebug**.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Firefox 集成的 Firebug 将一套强大的开发者工具放在你的指尖，其功能与 WebKit 网页检查器相媲美。为了安装 Firebug 扩展，你必须前往
    [https://www.getfirebug.com/downloads/](https://www.getfirebug.com/downloads/)
    并安装最新版本。安装后，你可以通过导航到**工具** | **Web 开发者** | **Firebug**来打开扩展。
- en: 'The Firebug toolbar gives you access to the HTML source code and CSS rules,
    lets you explore and debug JavaScript functions, and more:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 工具栏让你可以访问 HTML 源代码和 CSS 规则，让你可以探索和调试 JavaScript 函数，等等：
- en: '![Gecko debugging – Firefox](img/B03476_02_04.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![Gecko 调试 – Firefox](img/B03476_02_04.jpg)'
- en: 'Once the debugger reaches a breakpoint, you can:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦调试器达到断点，你可以：
- en: Explore the variables defined in the block of code in which you set up the breakpoint
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索你在设置断点时定义的代码块中的变量
- en: Explore the stack of function/method calls
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索函数/方法调用的堆栈
- en: Create watches in order to understand how the content of a variable changes
    during the execution of the code
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建监视器以了解变量内容在代码执行过程中的变化情况
- en: 'The Script console in Firebug is amazing. You can type your code in to the
    right window and then run it and see the results in the console by clicking on
    the **Run** button at the bottom right of the panel:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 中的脚本控制台非常出色。你可以在右侧窗口中输入你的代码，然后通过点击面板右下角的**运行**按钮来运行它，并在控制台中查看结果：
- en: '![Gecko debugging – Firefox](img/B03476_02_05.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![Gecko 调试 – Firefox](img/B03476_02_05.jpg)'
- en: To filter logs, use the **All**, **Errors**, **Warnings**, **Info**, **Debug
    Info**, and **Cookies** selectors at the top of the window.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要过滤日志，请使用窗口顶部的**所有**、**错误**、**警告**、**信息**、**调试信息**和**Cookies**选择器。
- en: 'As mentioned previously, Firefox has three great native development tools:
    Scratchpad, Inspect, and Responsive Design View. You can access these tools through
    the menu bar by navigating to **Tools** | **Web Developer**.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Firefox 有三个出色的原生开发工具：Scratchpad、Inspect 和响应式设计视图。你可以通过导航到**工具** | **Web
    开发者**来通过菜单栏访问这些工具。
- en: 'Think of Scratchpad as a text editor; you can use it to type and execute JavaScript.
    The difference between Scratchpad and the console is that it looks like a text
    editor and you can write all the code you want before executing it:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Scratchpad 视为一个文本编辑器；你可以用它来输入和执行 JavaScript。Scratchpad 与控制台的区别在于它看起来像文本编辑器，你可以在执行之前编写所有你想要的代码：
- en: '![Gecko debugging – Firefox](img/B03476_02_06.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![Gecko 调试 – Firefox](img/B03476_02_06.jpg)'
- en: 'The Responsive Design View tool lets you change the resolution without resizing
    the browser. You can also use it to simulate device rotation:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式设计视图工具允许你更改分辨率而不需要调整浏览器的大小。你还可以用它来模拟设备旋转：
- en: '![Gecko debugging – Firefox](img/B03476_02_07.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![Gecko 调试 – Firefox](img/B03476_02_07.jpg)'
- en: Internet Explorer
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Internet Explorer
- en: Internet Explorer, at the time of writing, still has a wide install base; it's
    also the least favorite browser among developers. Virtually every developer has
    experienced serious issues when optimizing a webpage for IE; this is due to the
    fact that IE diverges from web standards in significant areas, but things are
    changing and the preview of IE 10 is getting good scores in various tests. Internet
    Explorer 11 is even better for developers.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Internet Explorer 仍然拥有广泛的安装基础；它也是开发者中最不受欢迎的浏览器。几乎每个开发者都曾在为 IE 优化网页时遇到过严重问题；这是因为
    IE 在许多重要领域偏离了网络标准，但情况正在改变，IE 10 的预览在各种测试中都获得了良好的评分。对于开发者来说，Internet Explorer 11
    更好。
- en: Developer Tools were introduced in Internet Explorer 8, and updated with new
    functionality in Internet Explorer 9\. Developer Tools in Internet Explorer 10
    add Web Worker debugging and support for multiple script sources.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者工具是在 Internet Explorer 8 中引入的，并在 Internet Explorer 9 中通过新功能进行了更新。Internet
    Explorer 10 的开发者工具增加了 Web Worker 调试和多个脚本源的支持。
- en: 'You can access Developer Tools by pressing *F12* or by navigating to **Tools**
    | **Developer Tools** from the menu bar:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过按 *F12* 或通过从菜单栏导航到**工具** | **开发者工具**来访问开发者工具：
- en: '![Internet Explorer](img/B03476_02_08.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer](img/B03476_02_08.jpg)'
- en: The IE 10 Developer Tools provide a similar user interface to the Developer
    Tools in Safari, Chrome, and Firefox.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: IE 10 开发者工具提供了与 Safari、Chrome 和 Firefox 开发者工具类似的用户界面。
- en: Debugging workflow
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试工作流程
- en: The desktop browser is a great tool for hybrid mobile app development. The majority
    of your mobile development can be previewed and debugged in your desktop browser.
    Because PhoneGap leverages open web standards (HTML, CSS, and JavaScript), you
    can start work in a desktop browser and then move on to a native project once
    the functionality is fleshed out. This way, it's possible to speed up our development
    cycles and spend more time implementing core functionality. You can use the latest
    versions of any of the major desktop browsers such as Internet Explorer (IE),
    Google Chrome, Firefox, Safari, or Opera to get started with a PhoneGap app. All
    of these browsers have Developer Tools for logging and debugging your code.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 桌面浏览器是混合移动应用开发的强大工具。你可以在桌面浏览器中预览和调试大部分移动开发工作。因为PhoneGap利用了开放网络标准（HTML、CSS和JavaScript），你可以在桌面浏览器中开始工作，一旦功能完善，就可以转移到原生项目。这样，可以加快我们的开发周期，并有更多时间实现核心功能。你可以使用任何主流桌面浏览器的最新版本，如Internet
    Explorer（IE）、Google Chrome、Firefox、Safari或Opera，以开始使用PhoneGap应用。所有这些浏览器都有用于记录和调试代码的开发者工具。
- en: New developers tend to prefer WebKit-based browsers; at the time of writing,
    Chrome has the largest install base market share followed by Firefox and Internet
    Explorer.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 新开发者往往更喜欢基于WebKit的浏览器；在撰写本文时，Chrome拥有最大的安装基础市场份额，其次是Firefox和Internet Explorer。
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Chrome also offers a technology known as **Google Packaged Apps** to build native
    apps based on web standards. More information about it is available at [https://developer.chrome.com/apps/about_apps](https://developer.chrome.com/apps/about_apps).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome还提供了一种名为**Google Packaged Apps**的技术，用于基于网络标准构建原生应用。更多关于它的信息可在[https://developer.chrome.com/apps/about_apps](https://developer.chrome.com/apps/about_apps)找到。
- en: As you have seen, each browser offers different debugging tools and each tool
    has its pros and cons. Regardless of which tool you use, however, your debugging
    workflow is the same.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，每个浏览器都提供了不同的调试工具，每个工具都有其优缺点。然而，无论你使用哪种工具，你的调试工作流程都是相同的。
- en: 'When investigating a specific problem, you will usually follow this process:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在调查特定问题时，你通常会遵循以下流程：
- en: Find the relevant code in the debugger's code view pane.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在调试器的代码视图中找到相关的代码。
- en: Set breakpoint(s) where you think interesting things may occur.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你认为可能发生有趣事情的地方设置断点。
- en: Run the script again by reloading the page in the browser if it's an inline
    script, or by clicking on a button if it's an event handler.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果是内联脚本，通过在浏览器中重新加载页面再次运行脚本，如果是事件处理器，则通过点击按钮来运行。
- en: Wait until the debugger pauses execution and makes it possible to step through
    the code.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待调试器暂停执行，以便可以逐步执行代码。
- en: Investigate the values of variables. For example, look for variables that are
    undefined when they should contain a value, or return `false` when you expect
    them to return `true`.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调查变量的值。例如，寻找本应包含值但未定义的变量，或者当你期望它们返回`true`时返回`false`。
- en: If necessary, you can use the console to evaluate code or change variables for
    testing. You can also execute complex JavaScript code and test a solution before
    implementing it.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，你可以使用控制台来评估代码或更改变量以进行测试。你还可以在实现之前执行复杂的JavaScript代码并测试解决方案。
- en: Identifying the problem by learning which piece of code or input caused the
    error conditions and isolating it is a suitable approach. However, with mobile
    apps, things are not always so straightforward. The advantage of PhoneGap is that
    you can develop and debug in a common environment such as the browser, but keep
    in mind that a mobile app has to be tested and debugged on the target devices
    as well.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 通过学习哪段代码或输入导致了错误条件，并隔离它来识别问题是一种合适的方法。然而，在移动应用中，事情并不总是这么简单。PhoneGap的优势在于你可以在浏览器等通用环境中开发和调试，但请记住，移动应用还需要在目标设备上进行测试和调试。
- en: 'Although it''s not a neat way of debugging, you can use console log messages
    to debug. These log messages will be printed in the console of the browser development
    tool. A sample use of the JavaScript code is provided here for reference:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不是一种整洁的调试方式，但你可以使用控制台日志消息进行调试。这些日志消息将在浏览器开发工具的控制台中打印出来。这里提供了一个JavaScript代码示例供参考：
- en: '[PRE15]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'There are several other debugging tools for PhoneGap/Cordova. While a few of
    them are free services, some of them are paid services:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 对于PhoneGap/Cordova，还有其他几种调试工具。虽然其中一些是免费服务，但也有一些是付费服务：
- en: '**Ripple Emulator**: [http://emulate.phonegap.com/](http://emulate.phonegap.com/)'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Ripple模拟器**：[http://emulate.phonegap.com/](http://emulate.phonegap.com/)'
- en: '**GapDebug**: [https://www.genuitec.com/products/gapdebug/](https://www.genuitec.com/products/gapdebug/)'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**GapDebug**: [https://www.genuitec.com/products/gapdebug/](https://www.genuitec.com/products/gapdebug/)'
- en: '**jsHybugger**: [https://www.jshybugger.com/](https://www.jshybugger.com/)'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**jsHybugger**: [https://www.jshybugger.com/](https://www.jshybugger.com/)'
- en: '**Weinre**: [http://people.apache.org/~pmuellr/weinre-docs/latest/](http://people.apache.org/~pmuellr/weinre-docs/latest/)'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Weinre**: [http://people.apache.org/~pmuellr/weinre-docs/latest/](http://people.apache.org/~pmuellr/weinre-docs/latest/)'
- en: '**Adobe** **Edge** **Inspect**: [https://creative.adobe.com/products/inspect](https://creative.adobe.com/products/inspect)'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Adobe Edge Inspect**: [https://creative.adobe.com/products/inspect](https://creative.adobe.com/products/inspect)'
- en: '**Chrome**: [https://developer.chrome.com/devtools/docs/remote-debugging](https://developer.chrome.com/devtools/docs/remote-debugging)'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Chrome**: [https://developer.chrome.com/devtools/docs/remote-debugging](https://developer.chrome.com/devtools/docs/remote-debugging)'
- en: Building and deployment
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和部署
- en: Once you are done with your development, you might want to test the application
    on a real mobile device. Each mobile platform will have a different kind of binary
    format for the applications. For example, Android application files will have
    the `.apk` extension. Similarly, each platform will have a different format for
    the application.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的开发工作完成，你可能想在真实的移动设备上测试应用程序。每个移动平台都会有不同类型的二进制格式用于应用程序。例如，Android应用程序文件将具有`.apk`扩展名。同样，每个平台都会有不同格式的应用程序。
- en: To create binary files for all platforms from your source code, you need to
    build the application either locally or by using a cloud service.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要从源代码为所有平台创建二进制文件，你需要本地构建应用程序或使用云服务。
- en: 'If you are building the application locally, you need to run the command-line
    interface, and the required platform''s SDK should be installed on the machine.
    The CLI supports the following combinations on each operating system:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是在本地构建应用程序，你需要运行命令行界面，并且所需的平台SDK应该安装在本机上。CLI支持以下操作系统上的组合：
- en: '| Windows | Linux | Mac |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| Windows | Linux | Mac |'
- en: '| --- | --- | --- |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Amazon Fire OSAndroidBlackBerry 10Windows Phone 7Windows Phone 8Windows 8Firefox
    OS | Amazon Fire OSAndroidBlackBerry 10Firefox OS | iOS (only on Mac) |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| Amazon Fire OSAndroidBlackBerry 10Windows Phone 7Windows Phone 8Windows 8Firefox
    OS | Amazon Fire OSAndroidBlackBerry 10Firefox OS | iOS（仅在Mac上） |'
- en: This table makes it clear that you can't build an iOS application on a Windows
    machine or a Windows 8 application on a Mac machine. You will need an appropriate
    machine and the required SDKs installed on the machine.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 此表清楚地表明，你无法在Windows机器上构建iOS应用程序或在Mac机器上构建Windows 8应用程序。你需要一台合适的机器，并在机器上安装所需的SDK。
- en: Assuming you have all the required SDKs installed and configured, to build the
    application for each of the platform, you can use the **build** tool of CLI.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经安装并配置了所有所需的SDK，要为每个平台构建应用程序，你可以使用CLI的**build**工具。
- en: 'Run the following command to build the project for all the platforms added
    to the project. If you added multiple platforms to the project using the `platform
    add` command, the build will happen for all platforms:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令以构建项目中添加的所有平台的工程。如果你使用`platform add`命令向项目中添加了多个平台，构建将针对所有平台进行：
- en: '[PRE16]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If you want to build the application only for a particular platform, say Android
    or iOS, you can target them individually with the following commands:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想为特定平台构建应用程序，比如Android或iOS，你可以使用以下命令单独针对它们：
- en: '[PRE17]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `build` command is the shortcut to prepare and compile the project. You
    can also build a project in two steps, as shown here. The following set of commands
    is the equivalent of the `build` command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`build`命令是准备和编译项目的快捷方式。你还可以按以下步骤构建项目：以下命令集相当于`build`命令：'
- en: '[PRE18]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Once the build process is completed, the platform-specific app will be available
    within the project's `platforms` subdirectory.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦构建过程完成，特定平台的app将可在项目的`platforms`子目录中找到。
- en: Having seen the manual way of building an application, now let's find out about
    PhoneGap Build. If you want to build and generate application binary files for
    all platforms, you need to install the individual SDKs on your machine, which
    is not practically possible. That's where we find the PhoneGap Build process handy.
    PhoneGap Build is an online service for creating binary files for all mobile platforms
    based on a single source code.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了手动构建应用程序的方法后，现在让我们来了解一下PhoneGap Build。如果你想要从源代码为所有平台创建二进制文件，你需要在机器上安装单个源代码的各个SDK，这在实际操作中是不可能的。这就是我们觉得PhoneGap
    Build过程很方便的原因。PhoneGap Build是一个基于单一源代码为所有移动平台创建二进制文件的在线服务。
- en: 'It takes the source code and creates the app file for each of the platforms
    that you require. It''s as simple as uploading your Cordova/PhoneGap project and
    the cloud service does the rest. The overall functionality of the PhoneGap Build
    process is provided in the following diagram, which is available at [https://build.phonegap.com](https://build.phonegap.com):'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 它会提取源代码，并为所需的每个平台创建应用文件。这就像上传你的 Cordova/PhoneGap 项目，然后云服务完成剩余的工作。PhoneGap Build
    流程的整体功能在以下图表中提供，该图表可在 [https://build.phonegap.com](https://build.phonegap.com)
    获取：
- en: '![Building and deployment](img/B03476_02_11.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![构建和部署](img/B03476_02_11.jpg)'
- en: 'To use PhoneGap Build, you have to follow these steps:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 PhoneGap Build，你必须遵循以下步骤：
- en: Complete your PhoneGap/Cordova project and ensure you have all the functionalities
    included in the app as per your design.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成你的 PhoneGap/Cordova 项目，并确保你的应用中包含了设计中的所有功能。
- en: PhoneGap Build only requires the contents (HTML, CSS, JavaScript, and images)
    of your project's `assets` directory.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PhoneGap Build 只需要你的项目 `assets` 目录的内容（HTML、CSS、JavaScript 和图片）。
- en: If you have any `phonegap.js` or `cordova.js` files included in your assets,
    remove the file as the PhoneGap Build process will automatically inject the required
    file.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你包含了任何 `phonegap.js` 或 `cordova.js` 文件在你的资源中，请移除该文件，因为 PhoneGap Build 流程将自动注入所需的文件。
- en: You can upload the project to the PhoneGap Build process and you can see the
    magic happen.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将项目上传到 PhoneGap Build 流程，并见证魔法发生。
- en: 'You can easily download all the application builds for all platforms with a
    single click:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以轻松地通过单次点击下载所有平台的应用构建版本：
- en: '![Building and deployment](img/B03476_02_12.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![构建和部署](img/B03476_02_12.jpg)'
- en: More details about the PhoneGap Build process can be obtained at [http://docs.build.phonegap.com/en_US/](http://docs.build.phonegap.com/en_US/).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 PhoneGap Build 流程的更多详细信息可以在 [http://docs.build.phonegap.com/en_US/](http://docs.build.phonegap.com/en_US/)
    获取。
- en: Summary
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After providing an overview of several tools and some debugging techniques,
    this chapter prepared you to move to the next step, creating and building a multi-platform
    app with Apache Cordova and its PhoneGap distribution. You also learned the usage
    of various command-line tools and Cordova events. In the next chapter, you'll
    gain information about various mobile frameworks and templates to start off your
    mobile development.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在概述了几个工具和一些调试技术之后，本章为你准备进入下一步，即使用 Apache Cordova 及其 PhoneGap 发行版创建和构建多平台应用。你还学习了各种命令行工具和
    Cordova 事件的使用。在下一章中，你将了解各种移动框架和模板，以开始你的移动开发。
