- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Back in the spring of 1995, web browsers were very different from present day
    browsers. It had been 4 years since the release of the WorldWideWeb (the first
    Internet browser written by Tim Berners-Lee, later renamed Nexus), 2 years since
    the initial release of Mosaic, and Internet Explorer 1.0 was a few months away
    from release. The World Wide Web began to show signs of popularity, and though
    some of the big companies showed interest in the field, the main disruptor back
    then was a small company named Netscape.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 回到1995年春天，网络浏览器与现在的浏览器有很大不同。距离WorldWideWeb（由Tim Berners-Lee编写的第一个互联网浏览器，后来更名为Nexus）发布已经有4年了，距离Mosaic的初始发布已经有2年了，而Internet
    Explorer 1.0距离发布还有几个月的时间。万维网开始显示出受欢迎的迹象，尽管一些大公司对这个领域表现出了兴趣，但当时的主要颠覆者是一家名为Netscape的小公司。
- en: Netscape's already popular browser, Netscape Navigator, was in the works for
    its second version, when the client engineering team and co-founder Marc Anderseen
    decided that Navigator 2.0 should embed a programming language. The task was assigned
    to a software engineer named Branden Eich, who completed it in ten days between
    May 6 and May 15, 1995, naming the language Mocha, then LiveScript, and eventually
    JavaScript.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Netscape已经很受欢迎的浏览器Netscape Navigator正在制作其第二个版本，当时客户端工程团队和联合创始人Marc Anderseen决定Navigator
    2.0应该嵌入一种编程语言。这项任务被分配给一位名叫Branden Eich的软件工程师，他在1995年5月6日至5月15日之间完成了这项任务，将这种语言命名为Mocha，然后是LiveScript，最终是JavaScript。
- en: Netscape Navigator 2.0 was released in September 1995 and transformed the way
    we perceived the web browser. By August 1996, Internet Explorer 3.0 introduced
    its own implementation of JavaScript, and in November of that year, Netscape had
    announced that they had submitted JavaScript to ECMA for standardization. In June
    1997, the ECMA-262 specification was published, making JavaScript the de facto
    standard programming language for the Web.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Netscape Navigator 2.0于1995年9月发布，改变了我们对网络浏览器的看法。到1996年8月，Internet Explorer 3.0推出了自己的JavaScript实现，同年11月，Netscape宣布他们已经向ECMA提交了JavaScript的标准化。1997年6月，ECMA-262规范发布，使JavaScript成为了Web的事实标准编程语言。
- en: For years, JavaScript was denigrated by many as the programming language for
    amateurs. JavaScript's architecture, fragmented implementation, and original "amateur"
    audience made professional programmers dismiss it. But then AJAX was introduced,
    and when Google released their Gmail and Google Maps applications in the mid-2000s,
    it suddenly became clear that AJAX technology could transform websites into web
    applications. This inspired the new generation of web developers to take JavaScript
    development to the next level.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，JavaScript被许多人贬低为业余程序员的编程语言。JavaScript的架构、分散的实现和原始的“业余”受众使专业程序员对其不屑一顾。但随后引入了AJAX，当谷歌在2000年代中期发布了他们的Gmail和Google
    Maps应用程序时，突然间清楚地看到AJAX技术可以将网站转变为Web应用程序。这激发了新一代的Web开发人员将JavaScript开发推向新的高度。
- en: What began with the first generation of utility libraries, such as jQuery and
    Prototype, soon got boosted by Google's next great contribution, the Chrome browser
    and its V8 JavaScript engine, released at the end of 2008\. The V8 engine, with
    its JIT compiling capabilities, greatly enhanced JavaScript performance. This
    led to a new era in JavaScript development. 2009 was JavaScript's annus mirabilis;
    suddenly, platforms such as Node.js enabled developers to run JavaScript on the
    server, databases such as MongoDB popularized and simplified the use of JSON storage,
    and frameworks such as Angular and React are simplifying the creation of complex
    frontend applications. More than 20 years after its original debut, JavaScript
    is now everywhere. What used to be an "amateur" programming language, capable
    of executing small scripts, is now one of the most popular programming languages
    in the world. The rise of open source collaboration tools, along with the devoted
    involvement of talented engineers, created one of the richest communities in the
    world, and the seeds planted by many contributors are now flourishing in a burst
    of sheer creativity.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从最初的实用库（如jQuery和Prototype）开始，很快就得到了谷歌的下一个重大贡献，即Chrome浏览器及其于2008年底发布的V8 JavaScript引擎的推动。V8引擎以其JIT编译能力大大提高了JavaScript的性能。这导致了JavaScript开发的新时代。2009年是JavaScript的奇迹之年；突然间，诸如Node.js之类的平台使开发人员能够在服务器上运行JavaScript，诸如MongoDB之类的数据库推广和简化了JSON存储的使用，诸如Angular和React之类的框架简化了复杂前端应用程序的创建。在其原始发布20多年后，JavaScript现在无处不在。曾经是一种能够执行小脚本的“业余”编程语言，现在是世界上最流行的编程语言之一。开源协作工具的兴起，以及才华横溢的工程师的投入，创造了世界上最丰富的社区之一，许多贡献者播下的种子现在正在以纯粹的创造力迸发。
- en: The practical implications are enormous. What was once a fragmented team of
    developers, each an expert in their own domain, can now become a homogeneous team
    capable of developing leaner, more agile software together using a single language
    across all layers.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实际意义是巨大的。曾经是一个分散的开发团队，每个人都是自己领域的专家，现在可以成为一个能够使用单一语言跨所有层开发更精简、更敏捷软件的同质团队。
- en: There are many full-stack JavaScript frameworks out there, some built by great
    teams, some that address important issues, but none of them are as open and modular
    as the MEAN stack. The idea is simple, we'll take MongoDB as the database, Express
    as the web framework, Angular as the frontend framework, and Node.js as the platform,
    and combine them in a modular approach that will ensure the flexibility needed
    in modern software development. MEAN's approach relies on the communities around
    each of the open source modules keeping it updated and stable, ensuring that if
    one of the modules becomes useless, we can just seamlessly replace it with a better-suited
    one.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多全栈JavaScript框架，一些是由优秀团队构建的，一些解决了重要问题，但没有一个像MEAN堆栈那样开放和模块化。这个想法很简单，我们将MongoDB作为数据库，Express作为Web框架，Angular作为前端框架，Node.js作为平台，以模块化的方式组合它们，以确保现代软件开发所需的灵活性。MEAN的方法依赖于每个开源模块周围的社区保持其更新和稳定，确保如果其中一个模块变得无用，我们可以无缝地用更合适的模块替换它。
- en: I would like to welcome you to the JavaScript revolution and assure you I will
    do my best to help you become a full-stack JavaScript developer.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我想欢迎您加入JavaScript革命，并向您保证我会尽力帮助您成为全栈JavaScript开发人员。
- en: In this book, we'll help you set up your environment and explain how to connect
    the different MEAN components together using the best modules. You'll be introduced
    to the best practices of maintaining your code clear and simple and be shown how
    to avoid common pitfalls. We'll walk through building your authentication layer
    and adding your first entity. You'll learn how to leverage JavaScript non-blocking
    architecture in building real-time communication between your server and client
    applications. Finally, we'll show you how to cover your code with the proper tests,
    and we'll show you what tools to use to automate your development process.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将帮助您设置您的环境，并解释如何使用最佳模块将不同的MEAN组件连接在一起。您将了解保持代码清晰简单的最佳实践，并学会如何避免常见陷阱。我们将逐步构建您的身份验证层并添加您的第一个实体。您将学会如何利用JavaScript非阻塞架构来构建服务器和客户端应用程序之间的实时通信。最后，我们将向您展示如何使用适当的测试覆盖您的代码，并向您展示自动化开发流程中使用的工具。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](ch01.html "Chapter 1. Introduction to MEAN"), *Introduction to
    MEAN*, introduces you to the MEAN stack and shows you how to install the different
    prerequisites on each OS.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章 MEAN简介")，“MEAN简介”，向您介绍了MEAN堆栈，并向您展示了如何在每个操作系统上安装不同的先决条件。'
- en: '[Chapter 2](ch02.html "Chapter 2. Getting Started with Node.js"), *Getting
    Started with Node.js*, explains explain the basics of Node.js and how it is used
    in web application development.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章 Node.js入门")，“Node.js入门”，解释了Node.js的基础知识以及它在Web应用程序开发中的使用。'
- en: '[Chapter 3](ch03.html "Chapter 3. Building an Express Web Application"), *Building
    an Express Web Application*, explains how to create and structure an Express application
    by implementing the MVC pattern.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章 构建Express Web应用程序")，“构建Express Web应用程序”，解释了如何通过实现MVC模式来创建和构建Express应用程序。'
- en: '[Chapter 4](ch04.html "Chapter 4. Introduction to MongoDB"), *Introduction
    to MongoDB*, explains the basics of MongoDB and how it can be used to store your
    applications'' data.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章 MongoDB简介")，“MongoDB简介”，解释了MongoDB的基础知识以及如何用它来存储应用程序的数据。'
- en: '[Chapter 5](ch05.html "Chapter 5. Introduction to Mongoose"), *Introduction
    to Mongoose*, shows how to use a Mongoose to connect an Express application with
    a MongoDB database.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章 Mongoose简介")，“Mongoose简介”，展示了如何使用Mongoose将Express应用程序与MongoDB数据库连接起来。'
- en: '[Chapter 6](ch06.html "Chapter 6. Managing User Authentication Using Passport"),
    *Managing User Authentication Using Passport*, explains how to manage your users''
    authentication and offer them diverse login options.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章 使用Passport管理用户身份验证")，“使用Passport管理用户身份验证”，解释了如何管理用户的身份验证并为他们提供不同的登录选项。'
- en: '[Chapter 7](ch07.html "Chapter 7. Introduction to Angular"), *Introduction
    to Angular*, explains how to implement an Angular application in conjunction with
    your Express application.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章 Angular简介")，“Angular简介”，解释了如何在Express应用程序中实现Angular应用程序。'
- en: '[Chapter 8](ch08.html "Chapter 8. Creating a MEAN CRUD Module"), *Creating
    a MEAN CRUD Module*, explains how to write and use your MEAN application''s entities.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章 创建MEAN CRUD模块")，“创建MEAN CRUD模块”，解释了如何编写和使用MEAN应用程序的实体。'
- en: '[Chapter 9](ch09.html "Chapter 9. Adding Real-time Functionality Using Socket.io"),
    *Adding Real-time Functionality Using Socket.io*, shows you how to create and
    use real-time communication between your client and server.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章 使用Socket.io添加实时功能")，“使用Socket.io添加实时功能”，向您展示了如何在客户端和服务器之间创建和使用实时通信。'
- en: '[Chapter 10](ch10.html "Chapter 10. Testing MEAN Applications"), *Testing MEAN
    Applications*, explains how to automatically test the different parts of your
    MEAN application.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章 测试MEAN应用")，“测试MEAN应用”，解释了如何自动测试MEAN应用的不同部分。'
- en: '[Chapter 11](ch11.html "Chapter 11. Automating and Debugging MEAN Applications"),
    *Automating and Debugging MEAN Applications*, explains how to develop your MEAN
    application more efficiently.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](ch11.html "第11章 MEAN应用的自动化和调试")，“MEAN应用的自动化和调试”，解释了如何更高效地开发MEAN应用程序。'
- en: What you need for this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书做好准备
- en: This book is suitable for beginner and intermediate web developers with basic
    knowledge of HTML, CSS, and modern JavaScript development.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合具有HTML、CSS和现代JavaScript开发基础知识的初学者和中级Web开发人员。
- en: Who this book is for
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的受众
- en: This book is aimed at web developers interested in learning how to build modern
    web applications using MongoDB, Express, Angular, and Node.js.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向有兴趣学习如何使用MongoDB、Express、Angular和Node.js构建现代Web应用程序的Web开发人员。
- en: Conventions
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些文本样式，用于区分不同类型的信息。以下是这些样式的一些示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "To
    test your static middleware, add an image named `logo.png` to the `public/img`
    folder."'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“要测试您的静态中间件，请将名为`logo.png`的图像添加到`public/img`文件夹中。”
- en: 'A block of code is set as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Once you click on the **Next** button, the installation should begin."'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。屏幕上显示的单词，例如菜单或对话框中的单词，会在文本中以这种方式出现：“一旦您点击**下一步**按钮，安装应该开始。”'
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会以这种方式出现在框中。
- en: Tip
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
