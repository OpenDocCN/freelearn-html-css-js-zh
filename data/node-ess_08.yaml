- en: Chapter 8. Creating and Deploying Packages
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。创建和部署包
- en: Now that we have all of the pieces that are needed to create Node.js applications
    and servers, we will now focus more on sharing our modules and contributing to
    the eco-system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了创建Node.js应用程序和服务器所需的所有组件，我们现在将更多地关注分享我们的模块并为生态系统做出贡献。
- en: All the packages on npm have been uploaded, maintained, and contributed by someone
    in the community, so let's have a look at how we can do the same ourselves.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 所有npm上的包都是由社区中的某个人上传、维护和贡献的，所以让我们看看我们如何自己做同样的事情。
- en: Creating npm packages
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建npm包
- en: 'We can start with the following steps:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从以下步骤开始：
- en: 'First we need to create a user:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们需要创建一个用户：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once we have a user we have opened the gates to npm.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了一个用户，我们就为npm打开了大门。
- en: 'Now, let''s create a package:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个包：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To publish this package all we need to do is run `npm publish`:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布这个包，我们只需要运行`npm publish`：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can see that we have published our package successfully, you can view the
    one I published at:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到我们已经成功发布了我们的包，您可以查看我发布的包：
- en: '[https://www.npmjs.com/package/njs-e-example-package](https://www.npmjs.com/package/njs-e-example-package)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.npmjs.com/package/njs-e-example-package](https://www.npmjs.com/package/njs-e-example-package)'
- en: You will have to name your package something else in order to publish it; otherwise,
    we will have a conflict.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了发布它，您将不得不给您的包取一个别的名字；否则，我们将会有冲突。
- en: 'Now we can run the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以运行以下命令：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Then we will have the package! Isn't that pretty cool?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们就会有这个包！这不是很酷吗？
- en: 'If we try to publish again, we will get an error because version `1.0.2` is
    already published, as shown in the following screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次尝试发布，将会出现错误，因为版本`1.0.2`已经发布，如下截图所示：
- en: '![Creating npm packages](img/B04729_08_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![创建npm包](img/B04729_08_01.jpg)'
- en: 'To increment our package version, all we need to do is execute:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要增加我们的包版本，我们只需要执行：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we can publish again:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以再次发布：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can go to your packages page on npm and you will see that the version number
    and release count has been updated.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以转到npm上的包页面，您会看到版本号和发布计数已经更新。
- en: Versioning in Node.js follows the `semver` schema, which is made up of major,
    minor, and patch versions. When the patch version is incremented, it means that
    the API has stayed the same however something has been fixed behind the scenes.
    If the minor version has been incremented, it means that a non-breaking API change
    has occurred, such as a method has been added. If the major version is updated,
    it means that there has been a breaking API change; for example a method has been
    deleted or a method signature has changed.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js中的版本控制遵循`semver`模式，由主要、次要和补丁版本组成。当增加补丁版本时，这意味着API保持不变，但在幕后修复了一些东西。如果增加了次要版本，这意味着发生了不破坏API的更改，例如添加了一个方法。如果更新了主要版本，这意味着发生了破坏API的更改；例如删除了一个方法或方法签名发生了变化。
- en: Sometimes, there are things in your project that you don't want to be pushed
    out for other people to have. This could be an original source, some certificates,
    or maybe some keys for development. Just like when using `git`, we have an ignore
    file called `.npmignore`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，项目中有一些你不希望被其他人推出去的东西。这可能是原始源代码、一些证书，或者一些开发密钥。就像使用`git`一样，我们有一个叫做`.npmignore`的忽略文件。
- en: By default, if there is no `.npmignore` but there is a `.gitignore`, npm will
    ignore what is matched by the `.gitignore` file. If you don't like this behavior
    then you can just create an empty `.npmignore` file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果没有`.npmignore`但有`.gitignore`，npm将忽略`.gitignore`文件匹配的内容。如果您不喜欢这种行为，那么您可以创建一个空的`.npmignore`文件。
- en: 'The `.npmignore` file follows the same rules as `.gitignore`, which are as
    follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`.npmignore`文件遵循与`.gitignore`相同的规则，规则如下：'
- en: Blank lines or lines starting with `#` are ignored
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空行或以`#`开头的行将被忽略
- en: Standard glob patterns work
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准的glob模式有效
- en: You can end patterns with a forward slash `/` to specify a directory
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以用斜杠`/`结束模式以指定目录
- en: You can negate a pattern by starting it with an exclamation point `!`
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过在模式前加上感叹号`!`来否定一个模式
- en: 'For example, if we had a directory of certificates in which we had a key:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们有一个包含密钥的证书目录：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We probably don''t want this to be published, so in our ignore file we will
    have:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能不希望这被发布，所以在我们的忽略文件中我们将有：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We also don''t want any `key` files that we have lying around, so we add this
    as well:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也不希望有任何我们搁置的`key`文件，所以我们也添加了这个：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, let''s publish:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们发布：
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, let''s install our package:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们安装我们的包：
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, when we list what''s in the directory, we don''t see all our certificates
    being passed around:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们列出目录中的内容时，我们不会看到所有的证书都被传播出去：
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This is great, but what if we want to protect our entire package and not just
    a few certificates?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，但是如果我们想保护整个包而不仅仅是一些证书呢？
- en: 'All we need to do is set `private` to `true` in our `package.json` file and
    it will prevent npm from publishing the module when we run `npm publish`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要在`package.json`文件中将`private`设置为`true`，这样当我们运行`npm publish`时，它将阻止npm发布模块：
- en: 'Our `package.json` should look something like:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`package.json`应该看起来像这样：
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, when we run `npm publish`:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们运行`npm publish`时：
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Awesome, that's exactly what we wanted to see.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，这正是我们想要看到的。
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Looks like we are getting closer to being ready with all things about Node.js.
    We know now how to set up, debug, develop, and distribute our software.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们离准备好所有关于Node.js的事情都越来越近了。我们现在知道如何设置、调试、开发和分发我们的软件。
- en: 'In the next chapter, we will cover one more concept we need to know about:
    unit testing.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍我们需要了解的另一个概念：单元测试。
- en: 'Prepared for Bentham Chang, Safari ID bentham@gmail.com User number: 2843974
    © 2015 Safari Books Online, LLC. This download file is made available for personal
    use only and is subject to the Terms of Service. Any other use requires prior
    written consent from the copyright owner. Unauthorized use, reproduction and/or
    distribution are strictly prohibited and violate applicable laws. All rights reserved.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为Bentham Chang准备，Safari ID为bentham@gmail.com 用户编号：2843974 © 2015 Safari Books
    Online，LLC。此下载文件仅供个人使用，并受到服务条款的约束。任何其他用途均需版权所有者的事先书面同意。未经授权的使用、复制和/或分发严格禁止并违反适用法律。保留所有权利。
