- en: Chapter 9. Publishing the App for Different Platforms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。在不同平台上发布应用程序
- en: 'In this chapter, we will cover the following tasks related to publishing and
    future-proofing an app:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下与发布和确保应用程序长期可用性相关的任务：
- en: Adding versioning to future proof the app
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为确保应用程序的长期可用性添加版本控制
- en: Building and publishing an app for iOS
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建并发布iOS应用程序
- en: Building and publishing an app for Android
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建并发布Android应用程序
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'In the past, it was very cumbersome to build and successfully publish an app.
    However, there is much documentation and many unofficial instructions on the internet
    today that can pretty much address any problem that you may run into. In addition,
    Ionic also comes with its own CLI to assist in this process. This chapter will
    guide you through the app building and publishing steps at a high level. You will
    learn how to do the following things:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，构建和成功发布应用程序非常繁琐。然而，如今互联网上有大量的文档和非官方指南，几乎可以解决你可能遇到的所有问题。此外，Ionic还自带CLI来协助这个过程。本章将指导你完成应用程序构建和发布的步骤。你将学习如何完成以下事情：
- en: Add versioning to future proof the app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为确保应用程序的长期可用性添加版本控制
- en: Publish your app to App Store or Google Play
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的应用程序发布到App Store或Google Play
- en: The purpose of this chapter is to provide ideas on what to look for and some
    *gotchas*. Apple and Google are constantly updating their platforms and processes;
    so, the steps may not look exactly the same over time.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是提供关于要寻找的内容以及一些需要注意的问题的想法。苹果和谷歌不断更新他们的平台和流程；因此，随着时间的推移，步骤可能不会完全相同。
- en: Adding versioning to future proof the app
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为确保应用程序的长期可用性添加版本控制
- en: It's typical that you don't think about keeping track of the app version for
    a particular user. However, as the app grows in the number of users as well as
    releases, you will soon face the problem of update issues and incompatibilities.
    For example, a user may run an old version of your app but all your backend APIs
    are now expecting new parameters from a newer app version. Therefore, you may
    want to think about a strategy to detect the app version locally in order to notify
    the users for an update requirement. This is also helpful if your backend processes
    differently for a specific app version.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，你可能不会考虑跟踪特定用户的版本。然而，随着应用程序的用户数量和发布次数的增加，你很快就会面临更新问题和兼容性问题。例如，一个用户可能运行你应用程序的旧版本，但你现在所有的后端API都期望从较新版本的应用程序中获取新参数。因此，你可能需要考虑一种策略来本地检测应用程序版本，以便通知用户更新需求。如果你的后端针对特定应用程序版本有不同的处理方式，这也有帮助。
- en: 'The app you are going to build is very simple. It will detect the current version
    and store the information in a service. This is the screenshot of the app:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你将要构建的应用程序非常简单。它将检测当前版本并将信息存储在服务中。这是应用程序的截图：
- en: '![Adding versioning to future proof the app](img/image00394.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![为确保应用程序的长期可用性添加版本控制](img/image00394.jpeg)'
- en: Getting ready
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This app example must run on a physical device or a simulator.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序示例必须在物理设备或模拟器上运行。
- en: How to do it...
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Observe the following instructions:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些注意事项：
- en: 'Create a new `MyAppVersion` app using the `blank` template, as follows, and
    go to the `MyAppVersion` folder:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`blank`模板创建一个新的`MyAppVersion`应用程序，如下所示，然后转到`MyAppVersion`文件夹：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install the `app-version` plugin:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`app-version`插件：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Edit `./config.xml` by changing the version number, as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过更改版本号编辑`./config.xml`，如下所示：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that your `widget id` might be different from the one mentioned here. You
    only need to change the version number. In this case, it is the `0.0.123` version.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你的`widget id`可能与这里提到的不同。你只需要更改版本号。在这种情况下，是`0.0.123`版本。
- en: 'Create the `services` folder inside the app folder, as shown:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序文件夹内创建名为`services`的文件夹，如下所示：
- en: '[PRE3]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create `myenv.ts` in the `services` folder with the following code:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`services`文件夹中创建`myenv.ts`，代码如下：
- en: '[PRE4]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is your only service for this app. In the real-world project, you will
    need multiple services because some of them will have to communicate directly
    with your backend.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是此应用程序的唯一服务。在现实世界的项目中，你需要多个服务，因为其中一些将需要直接与你的后端进行通信。
- en: 'Open and edit your .`/src/app/app.module.ts`,as follows:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开并编辑你的`.src/app/app.module.ts`，如下所示：
- en: '[PRE5]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The main modification in this file is to inject the `MyEnv` provider for the
    entire app.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此文件的主要修改是在整个应用程序中注入`MyEnv`提供者。
- en: 'Open and replace .`/src/pages/home/home.html` with this code:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开并替换`.src/pages/home/home.html`为以下代码：
- en: '[PRE6]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Open and replace `./src/pages/home/home.ts` with the following code:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开并替换`./src/pages/home/home.ts`为以下代码：
- en: '[PRE7]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Open and edit `home.scss` in the same folder:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在同一文件夹中打开并编辑`home.scss`：
- en: '[PRE8]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Go to your terminal and run the app. If you want to run the app on your physical
    device, type the given command:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您的终端并运行应用。如果您想在您的物理设备上运行应用，请输入以下命令：
- en: '[PRE9]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For Android, type the following command:'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于Android，请输入以下命令：
- en: '[PRE10]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works…
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In a nutshell, the `AppVersion` plugin does all the *heavy lifting*. It's not
    possible for an Ionic app to find out the current version in its code using Javascript.
    You may think that using local storage or cookie is an alternative, but the users
    could also delete that storage manually. In order to have a permanent solution,
    the `AppVersion` plugin should be used because it can read your `config.xml` file
    and get the version for you.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，`AppVersion`插件做了所有*繁重的工作*。使用JavaScript，Ionic应用无法在其代码中找到当前版本。您可能会认为使用本地存储或cookie是一个替代方案，但用户也可以手动删除该存储。为了有一个永久的解决方案，应该使用`AppVersion`插件，因为它可以读取您的`config.xml`文件并为您获取版本。
- en: 'It''s the best practice to create a separate service for all environment variables.
    That''s why you should have a service, called `MyEnv`. Also, you should inject
    `MyEnv` as a provider at the *app level* because you want to instantiate it only
    once, instead of doing it every time a new component is created. Observe the following
    code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为所有环境变量创建一个单独的服务是最佳实践。这就是为什么您应该有一个名为`MyEnv`的服务。此外，您应该在*应用级别*注入`MyEnv`作为提供者，因为您只想实例化一次，而不是每次创建新组件时都这样做。观察以下代码：
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Since all the `AppVersion` methods are based on `promise`, you should return
    the entire object as a promise. Let''s take a look at the `getAppVersion()` method
    in your `myenv.ts` file:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有`AppVersion`方法都是基于`promise`的，您应该返回整个对象作为一个promise。让我们看看您的`myenv.ts`文件中的`getAppVersion()`方法：
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, in your page files, such as `home.ts`, you should call the `getAppVersion`
    method, as shown, and use the .`then()` method to get the result:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在您的页面文件中，例如`home.ts`，您应该像下面这样调用`getAppVersion`方法，并使用`.then()`方法获取结果：
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If you open the console to inspect the `promise` object, you will see that
    it has your app version value and the `.then()` method. Observe the following
    screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打开控制台来检查`promise`对象，您将看到它包含您的应用版本值和`.then()`方法。观察以下截图：
- en: '![How it works…](img/image00395.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00395.jpeg)'
- en: For more information about the `AppVersion` plugin, you may want to refer to
    the official AppVersion documentation at [https://github.com/whiteoctober/cordova-plugin-app-version](https://github.com/whiteoctober/cordova-plugin-app-version).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于`AppVersion`插件的信息，您可以参考官方AppVersion文档，网址为[https://github.com/whiteoctober/cordova-plugin-app-version](https://github.com/whiteoctober/cordova-plugin-app-version)。
- en: Building and publishing an app for iOS
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和发布iOS应用
- en: Publishing on App Store could be a frustrating process if you are not well prepared
    upfront. In this section, you will walk through the steps to properly configure
    everything in Apple Developer Center, iTunes Connect and local Xcode project.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有提前做好准备，发布到App Store可能会是一个令人沮丧的过程。在本节中，您将了解如何在Apple Developer Center、iTunes
    Connect和本地Xcode项目中正确配置所有内容。
- en: Getting ready
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You must register for Apple Developer Program in order to access [https://developer.apple.com/macos/touch-bar/](https://developer.apple.com/macos/touch-bar/)
    and [https://itunesconnect.apple.com](https://itunesconnect.apple.com), because
    those websites will require an approved account.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须注册Apple Developer Program才能访问[https://developer.apple.com/macos/touch-bar/](https://developer.apple.com/macos/touch-bar/)和[https://itunesconnect.apple.com](https://itunesconnect.apple.com)，因为那些网站将需要一个已批准的账户。
- en: 'In addition, the following instructions a the specific version of these components:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下是对这些组件特定版本的说明：
- en: Mac OS X El Capitan 10.11.2
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OS X El Capitan 10.11.2
- en: Xcode 7.2
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xcode 7.2
- en: Ionic CLI 2.0
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic CLI 2.0
- en: Cordova 5.4.1
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cordova 5.4.1
- en: How to do it…
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here are the instructions:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是说明：
- en: 'Ensure that you are in the app folder and build for the iOS platform:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您在应用文件夹中，并为iOS平台构建：
- en: '[PRE14]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Go to the `/platforms/ios` folder to open the `.xcodeproj` file in Xcode. Observe
    the following screenshot:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前往`/platforms/ios`文件夹，在Xcode中打开`.xcodeproj`文件。观察以下截图：
- en: '![How to do it…](img/image00396.jpeg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00396.jpeg)'
- en: Go through the **General** tab, as illustrated in the following screenshot,
    to make sure that you have the correct information for everything, especially
    **Bundle Identifier** and **Version**. Change and save as needed:![How to do it…](img/image00397.jpeg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过**常规**选项卡，如图所示的以下截图，确保你拥有所有正确的信息，特别是**包标识符**和**版本**。如有需要，进行更改并保存：![如何操作…](img/image00397.jpeg)
- en: Visit the Apple Developer website and click on **Certificates, Identifiers &
    Profiles**, as illustrated:![How to do it…](img/image00277.jpeg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Apple开发者网站并点击**证书、标识符和配置文件**，如图所示：![如何操作…](img/image00277.jpeg)
- en: Select the correct device platform you are targeting. In this case, it will
    be **iOS, tvOS, watchOS** as shown:![How to do it…](img/image00278.jpeg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你正在针对的正确设备平台。在这种情况下，它将是**iOS、tvOS、watchOS**，如图所示：![如何操作…](img/image00278.jpeg)
- en: For the iOS app, you need the certificate, app ID, test device, and provisioning
    profile. To start with the certificate, navigate to **Certificates** | **All**,
    as follows:![How to do it…](img/image00289.jpeg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于iOS应用，你需要证书、App ID、测试设备和配置文件。要从证书开始，导航到**证书** | **所有**，如下所示：![如何操作…](img/image00289.jpeg)
- en: Click on the (**+**) plus button, as shown in the following screenshot:![How
    to do it…](img/image00398.jpeg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击如下所示的加号（**+**）按钮：![如何操作…](img/image00398.jpeg)
- en: You just have to go through the steps in the website to fill out the necessary
    information, as depicted in the following screenshot:![How to do it…](img/image00399.jpeg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你只需按照网站上的步骤填写必要的信息，如下面的截图所示：![如何操作…](img/image00399.jpeg)
- en: Once you've completed the form, you can save the CSR file and import it to your
    Mac's **Keychain Access**.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成表格后，你可以保存CSR文件并将其导入到Mac的**钥匙串访问**中。
- en: Navigate to **Identifiers** | **App IDs**, as follows, to create an app ID:![How
    to do it…](img/image00279.jpeg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照如下所示导航到**标识符** | **App ID**以创建一个App ID：![如何操作…](img/image00279.jpeg)
- en: Click on the plus (**+**) button at the top right of the screen, as follows:![How
    to do it…](img/image00400.jpeg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕右上角的加号（**+**）按钮，如下所示：![如何操作…](img/image00400.jpeg)
- en: Fill in the form to register your **App ID**, as shown:![How to do it…](img/image00401.jpeg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照如下所示填写表格以注册你的**App ID**：![如何操作…](img/image00401.jpeg)
- en: The important part here that you need to do correctly is the **Bundle ID**,
    as shown in the following screenshot, because it must match your **Bundle Identifier**
    in Xcode:![How to do it…](img/image00402.jpeg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里需要正确完成的重要部分是**包标识符**，如下面的截图所示，因为它必须与Xcode中的**Bundle Identifier**匹配：![如何操作…](img/image00402.jpeg)
- en: If your app needs **Push Notifications** or other **App Services**, you need
    to check those services on the page:![How to do it…](img/image00403.jpeg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的应用需要**推送通知**或其他**应用服务**，你需要在页面上检查这些服务：![如何操作…](img/image00403.jpeg)
- en: If you need to push the app to a specific device, you must register the device.
    Navigate to **Devices** | **All**, as illustrated:![How to do it…](img/image00301.jpeg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你需要将应用推送到特定设备，你必须注册该设备。导航到**设备** | **所有**，如图所示：![如何操作…](img/image00301.jpeg)
- en: Click on the plus (**+**) button, as shown:![How to do it…](img/image00302.jpeg)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击显示的加号（**+**）按钮，如图所示：![如何操作…](img/image00302.jpeg)
- en: Provide the device **UDID**, as follows, and save it in order to register the
    device:![How to do it…](img/image00303.jpeg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供设备的**UDID**，如下所示，并保存以注册设备：![如何操作…](img/image00303.jpeg)
- en: Finally, you need a provisioning profile if one doesn't exist yet. Usually,
    Xcode will create one automatically. However, you could create your own by navigating
    to **Provisioning Profiles** | **All**, as shown:![How to do it…](img/image00404.jpeg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果你还没有配置文件，你需要一个。通常，Xcode会自动创建一个。然而，你可以通过导航到**配置文件** | **所有**来创建自己的，如下所示：![如何操作…](img/image00404.jpeg)
- en: Click on the plus (**+**) button, as follows:![How to do it…](img/image00405.jpeg)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击如下所示的加号（**+**）按钮：![如何操作…](img/image00405.jpeg)
- en: Select App Store as your provisioning profile, as illustrated:![How to do it…](img/image00406.jpeg)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**App Store**作为你的配置文件，如图所示：![如何操作…](img/image00406.jpeg)
- en: Select the correct **App ID** in the drop-down menu and save to finalize your
    provisioning profile creation, as follows:![How to do it…](img/image00407.jpeg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下拉菜单中选择正确的**App ID**并保存，以完成你的配置文件创建，如下所示：![如何操作…](img/image00407.jpeg)
- en: Visit iTunes Connect at [https://itunesconnect.apple.com](https://itunesconnect.apple.com)
    and click on the **My Apps** button, shown as follows:![How to do it…](img/image00408.jpeg)
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[iTunes Connect](https://itunesconnect.apple.com)并点击**我的应用**按钮，如图所示：![如何操作…](img/image00408.jpeg)
- en: Select the plus (**+**) icon to select **New App**, as shown:![How to do it…](img/image00409.jpeg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择加号（**+**）图标以选择**新建应用**，如图所示：![如何操作…](img/image00409.jpeg)
- en: Fill out the form and ensure that you select the right **Bundle Identifier**
    of your app:![How to do it…](img/image00410.jpeg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写表格并确保您选择了应用的正确**捆绑标识符**：![如何操作…](img/image00410.jpeg)
- en: There are several additional steps to provide information about the app, such
    as screenshot, icon, and address. If you just want to test the app, you could
    provide some place holder information initially and come back to edit later.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有几个额外的步骤来提供有关应用的信息，例如截图、图标和地址。如果您只想测试应用，您可以最初提供一些占位符信息，稍后再回来编辑。
- en: That's it to prepare your Developer and iTunes Connect account.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 准备您的开发者账号和 iTunes Connect 账号就到这里。
- en: Now, open **Xcode** and select **iOS Device** as the archive target. Otherwise,
    the **Archive** feature will not turn on. You will need to archive your app before
    you can submit to the App Store:![How to do it…](img/image00411.jpeg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开 **Xcode** 并选择**iOS 设备**作为存档目标。否则，**存档**功能将无法启用。您需要在提交到应用商店之前存档您的应用：![如何操作…](img/image00411.jpeg)
- en: Navigate to **Product** | **Archive** in the top menu, as illustrated:![How
    to do it…](img/image00412.jpeg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部菜单中导航到**产品** | **存档**，如图所示：![如何操作…](img/image00412.jpeg)
- en: After the archive process is completed, select **Submit to App Store** to finish
    the publishing process.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存档过程完成后，选择**提交到应用商店**以完成发布过程。
- en: To publish, select **Submit for Beta App Review**. You may want to go through
    other tabs, such as **Pricing** and **In-App Purchases**, to configure your own
    requirements.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要发布，选择**提交进行Beta应用审查**。您可能想浏览其他标签页，如**定价**和**应用内购买**，以配置您自己的要求。
- en: How it works…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Obviously, this section does not cover every bit of detail in the publishing
    process. In general, you just need to ensure that your app is tested thoroughly,
    locally, on a physical device (either via USB or *TestFlight*) before submitting
    it to the App Store.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，本节没有涵盖发布过程中的所有细节。一般来说，您只需确保在提交到应用商店之前，在物理设备上（通过 USB 或 *TestFlight*）彻底测试您的应用即可。
- en: 'If for some reason the **Archive** feature doesn''t build, you could manually
    go to your local Xcode folder to delete that specific temporary archived app to
    clear cache, as shown:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某些原因**存档**功能无法构建，您可以手动前往您的本地 Xcode 文件夹删除该特定临时存档应用以清除缓存，如图所示：
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: There's more…
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: '*TestFlight* is a separate subject by itself. The benefit of *TestFlight* is
    that you don''t need your app to be approved by Apple in order to install the
    app on a physical device for testing and development. You can find out more information
    about *TestFlight* at [https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html](http://%20https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*TestFlight* 是一个独立的话题。*TestFlight* 的好处是您不需要您的应用获得苹果的批准就可以在物理设备上进行测试和开发安装。您可以在
    [https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html](http://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html)
    上找到更多关于 *TestFlight* 的信息。'
- en: Building and publishing an app for Android
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Android 构建和发布应用
- en: Building and publishing an Android app is a little more straightforward than
    iOS because you just interface with the command line to build the .apk file and
    upload it to Google Play's Developer Console.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 Android 应用比 iOS 更直接，因为您只需与命令行接口来构建 .apk 文件并将其上传到 Google Play 开发者控制台。
- en: The Ionic Framework documentation also has a great instruction page for this,
    which is [http://ionicframework.com/docs/guide/publishing.html](http://ionicframework.com/docs/guide/publishing.html).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 框架文档也为此提供了很好的说明页面，链接为 [http://ionicframework.com/docs/guide/publishing.html](http://ionicframework.com/docs/guide/publishing.html)。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The requirement is to have your Google Developer account ready and to log in
    to [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要求是您的 Google 开发者账户已准备好并登录到 [https://play.google.com/apps/publish](https://play.google.com/apps/publish)。
- en: Your local environment should also have the right SDK as well as `keytool`,
    `jarsigner`, and `zipalign` command line for that specific version.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您的本地环境也应具备正确的 SDK 以及针对该特定版本的 `keytool`、`jarsigner` 和 `zipalign` 命令行。
- en: How to do it…
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Here are the instructions:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是说明：
- en: 'Go to your app folder and build for Android with the following command:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入你的应用文件夹，使用以下命令为Android构建：
- en: '[PRE16]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You will see the `android-release-unsigned.apk` in the `/platforms/android/build/outputs/apk`
    folder. Go to that folder in the terminal:![How to do it…](img/image00413.jpeg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在`/platforms/android/build/outputs/apk`文件夹中看到`android-release-unsigned.apk`。在终端中转到该文件夹：![如何操作…](img/image00413.jpeg)
- en: 'If this is the first time you created this app, you must have a `keystore`
    file. This file is used to identify your app for publishing. If you lose it, you
    cannot update your app later on. To create a `keystore`, type the following command
    line and ensure that it''s the same `keytool` version of the SDK:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是你第一次创建此应用，你必须有一个`keystore`文件。此文件用于在发布时识别你的应用。如果你丢失了它，你以后无法更新你的应用。要创建`keystore`，请输入以下命令行，并确保它与SDK的`keytool`版本相同：
- en: '[PRE17]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Once you fill out the information in the command line, make a copy of this file
    somewhere safe because you will need it later.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦填写了命令行中的信息，请将此文件复制到某个安全的地方，因为以后你需要它。
- en: 'The next step is to use that file to *sign* your app so that it will create
    a new `.apk` that Google Play allows users to install:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是使用该文件来*签名*你的应用，以便它将创建一个新的`.apk`文件，Google Play允许用户安装：
- en: '[PRE18]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To prepare for the final `.apk` before upload, you must package it using `zipalign`,
    as follows:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上传之前准备最终的`.apk`，你必须使用`zipalign`打包，如下所示：
- en: '[PRE19]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You need to ensure that `zipalign` is in `PATH` or you have to specify the
    absolute path. The app name could be anything you like or you can use the same
    name as created in this chapter:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确保`zipalign`在`PATH`中，或者你必须指定绝对路径。应用名称可以是任何你喜欢的，或者你可以使用本章创建的相同名称：
- en: Log in to Google Developer Console and click on **Add new application**, as
    shown:![How to do it…](img/image00414.jpeg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录Google开发者控制台，点击**添加新应用**，如图所示：![如何操作…](img/image00414.jpeg)
- en: Fill out content rating and other information as possible for your app using
    the left menu:![How to do it…](img/image00415.jpeg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左侧菜单尽可能填写你的应用的内容评级和其他信息：![如何操作…](img/image00415.jpeg)
- en: Now you are ready to upload your `.apk` file. First is to do a Beta:![How to
    do it…](img/image00416.jpeg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你已经准备好上传你的`.apk`文件。首先是要进行Beta测试：![如何操作…](img/image00416.jpeg)
- en: Once you are done with Beta testing, you can follow Developer Console instructions
    to push the app to production.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成Beta测试，你可以按照开发者控制台的说明将应用推送到生产环境。
- en: Note
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you run into any problem while publishing the app, it's helpful to look at
    the "Why can't I publish?" link in the dashboard's top right corner. Google will
    guide you on specific steps that must be completed or fixed.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在发布应用时遇到任何问题，查看仪表板右上角的“为什么我不能发布？”链接会有帮助。Google会指导你完成或修复必须完成的特定步骤。
- en: How it works…
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: This section does not cover other Android marketplaces, such as Amazon app store,
    because each of them has different processes. However, the common idea is that
    you need to completely build the unsigned version of the `.apk`, sign it using
    an existing or new `keystore` file, and, finally, `zipa` `lign` to prepare it
    for upload.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 本节不涵盖其他Android市场，例如Amazon应用商店，因为它们各自有不同的流程。然而，共同的想法是，你需要完全构建`.apk`的无签名版本，使用现有的或新的`keystore`文件进行签名，最后`zipalign`以准备上传。
