- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '12'
- en: Enhancing Accessibility and Optimizing SEO
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高可访问性和优化SEO
- en: When it comes to building web applications, we cannot disregard how important
    it is to ensure the applications are accessible to all users. By empowering those
    who rely on assistive technologies such as screen readers, we can further the
    impact our applications have. Not only does making an application available to
    a wider audience bring in more users, but it can also affect **Search Engine Optimization**
    (**SEO**). Therefore, it would be negligent to disregard how SvelteKit can help
    us make our applications accessible from the start.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到构建Web应用程序时，我们不能忽视确保应用程序对所有用户可访问的重要性。通过赋权依赖于屏幕阅读器等辅助技术的用户，我们可以进一步扩大我们应用程序的影响。不仅使应用程序对更广泛的受众可用可以带来更多用户，而且还可以影响**搜索引擎优化**（**SEO**）。因此，忽视SvelteKit如何帮助我们从一开始就使应用程序可访问将是疏忽的。
- en: 'To understand how we can best empower our users and how doing so can help boost
    our SEO, we should examine a few concepts. Firstly, we’ll see how the built-in
    compile-time checks can improve the accessibility of our application with little
    configuration on our end. We’ll also see how to best announce route changes, which
    can benefit tools such as screen readers. We’ll then briefly cover a few more
    tips that can benefit accessibility and wrap up with some simple tips for improving
    SEO. We’ll break it all apart into the following sections:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解我们如何最好地赋权我们的用户，以及这样做如何帮助我们提高SEO，我们应该检查几个概念。首先，我们将看到内置的编译时检查如何通过我们端的小配置来提高我们应用程序的可访问性。我们还将了解如何最好地宣布路由更改，这可以惠及屏幕阅读器等工具。然后，我们将简要介绍一些可以惠及可访问性的技巧，并以一些简单的SEO优化技巧结束。我们将所有内容分解为以下部分：
- en: Compile-time checks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译时检查
- en: Announcing routes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宣布路由
- en: Accessibility enhancements
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可访问性增强
- en: SEO tips
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SEO技巧
- en: Upon completing this chapter, we’ll have covered the essentials for ensuring
    your SvelteKit applications are accessible to a wide audience. Following the best
    practices outlined here will have the added benefit of improving SEO rankings.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章后，我们将涵盖确保您的SvelteKit应用程序对广大受众可访问性的基本要素。遵循这里概述的最佳实践将带来提高SEO排名的额外好处。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The complete code for this chapter is available on GitHub at: [https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter12](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter12)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完整代码可在GitHub上找到：[https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter12](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/main/chapters/chapter12)
- en: Compile-Time Checks
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编译时检查
- en: When we installed our SvelteKit project, it came with a few opinionated enhancements
    out of the box. Of those enhancements, the compile-time checks can be of particular
    use to warn us of elements that have been poorly formed or are missing attributes.
    Upon making the suggested changes, we’ll notice that these warnings go away.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们安装我们的SvelteKit项目时，它自带了一些有见地的增强功能。在这些增强功能中，编译时检查特别有用，可以警告我们有关格式不佳或缺少属性的元素。在做出建议的更改后，我们会注意到这些警告消失了。
- en: If you’ve paid attention to the recommendations from `eslint` or the output
    from builds, you may have noticed some warnings referring to `A11y`. This is the
    abbreviated term used for *Accessibility*. It refers to the *A*, the following
    11 characters, and the *y*. In recognizing the importance of making applications
    accessible, the Svelte developers have opted to include sane behaviors by default
    as it contributes to a more open web. Before becoming frustrated with regular
    warnings, consider the convenience of having the application checked for a11y
    errors while not having to seek out our own solutions. Not only does building
    with a11y in mind help users but it also helps developers become better by recognizing
    which patterns are accessible and which are not.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你注意到了`eslint`的建议或构建输出的结果，你可能已经注意到了一些关于`A11y`的警告。这是指代*可访问性*的缩写术语。它指的是字母*A*，接下来的11个字符，以及字母*y*。在认识到使应用程序可访问的重要性时，Svelte开发者选择默认包含合理的默认行为，因为这有助于构建一个更加开放的互联网。在因常规警告而感到沮丧之前，考虑一下在无需寻求我们自己的解决方案的情况下，让应用程序检查a11y错误带来的便利。不仅考虑a11y构建有助于用户，而且有助于开发者通过识别哪些模式是可访问的，哪些不是，来变得更好。
- en: 'If you’ve yet to see any of these issues, we can go back to one of our earliest
    examples and remove an `alt` attribute from an `<``img>` element:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有看到这些问题，我们可以回到我们最早的例子之一，并从`<img>`元素中移除`alt`属性：
- en: src/routes/+page.svelte
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: src/routes/+page.svelte
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this example, the only change made is the removal of the `alt` attribute
    from the `<img>` tag at the very end. Most modern editors should alert you directly
    in the file, but if you’re not seeing this warning, you can view it directly in
    the output from the build by running `npm run build` in your terminal. Upon observing
    the `build` output, we will be able to discern the exact location of the problem
    and view a recommended fix.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，所做的唯一更改是在`<img>`标签的最后移除`alt`属性。大多数现代编辑器应该会直接在文件中提醒您，但如果您没有看到这个警告，您可以在终端中运行`npm
    run build`来直接查看构建输出。在观察`build`输出后，我们将能够确定问题的确切位置并查看推荐的修复方案。
- en: These warnings don’t only apply to missing attributes on HTML elements either.
    We’ll also be alerted if form labels are associated with a control, if certain
    media types have captions, if attributes are given improper values, and more warnings
    than can be reasonably listed here. For a full list, see the resources at the
    end of this chapter. As we can see, the compile-time a11y checks can be incredibly
    useful in helping developers deliver accessible applications to as many users
    as possible.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些警告不仅适用于HTML元素的缺失属性。如果表单标签与控件相关联，如果某些媒体类型有字幕，如果属性赋予不正确的值，以及更多无法合理列出的警告，我们也会收到警告。有关完整列表，请参阅本章末尾的资源。正如我们所见，编译时无障碍性检查可以在帮助开发者向尽可能多的用户提供可访问的应用程序方面非常有用。
- en: Following the advice of compile-time check warnings is not the only way that
    we can improve a11y in our applications. We can also inform users of navigation
    events by updating the title of each page. By announcing route changes in the
    following way, we have the benefit of alerting users of screen readers while maintaining
    client-side navigation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循编译时检查警告的建议并不是我们提高应用程序无障碍性的唯一方法。我们还可以通过更新每个页面的标题来通知用户导航事件。通过以下方式宣布路由更改，我们可以在保持客户端导航的同时，提醒屏幕阅读器用户。
- en: Announcing routes
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 宣布路由
- en: Another strategy for ensuring a11y of our applications includes announcing our
    routes. This effectively means that all of our pages include a title so that screen
    readers can announce the new page to their users. With typical SSR applications,
    navigation consists of each new page being loaded when navigated to. With SvelteKit,
    navigation is handled by the client and so full-page reloads are not always necessary.
    This presents a dilemma for screen readers as they rely on a new title element
    to be present with each link clicked so that the page may be announced to users.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们应用程序的无障碍性的另一种策略是宣布我们的路由。这意味着我们的所有页面都包含一个标题，以便屏幕阅读器可以向用户宣布新页面。在典型的SSR应用程序中，导航包括在导航到时加载每个新页面。在SvelteKit中，导航由客户端处理，因此并不总是需要完整的页面重新加载。这对屏幕阅读器来说是一个困境，因为它们依赖于每个链接点击时都存在新的标题元素，以便向用户宣布页面。
- en: 'To play better with screen readers, we can insert a title into each new page
    we create using the `<``svelte:head>` directive:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地与屏幕阅读器协同工作，我们可以使用`<svelte:head>`指令将标题插入到我们创建的每个新页面中：
- en: src/routes/+page.svelte
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: src/routes/+page.svelte
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On our application landing page, we’ve re-added the `alt` attribute to our
    `<img>` tag, but more importantly, we’ve set the page title to `<svelte:head>`
    tag. Let’s make a similar change in another file so we can observe how this affects
    the browsing experience:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的应用程序着陆页面上，我们已经重新添加了`alt`属性到我们的`<img>`标签，但更重要的是，我们已经将页面标题设置为`<svelte:head>`标签。让我们在另一个文件中也进行类似的更改，以便我们可以观察这如何影响浏览体验：
- en: src/routes/(site)/about/+page.svelte
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: src/routes/(site)/about/+page.svelte
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In our application’s `<title>` element with the appropriate text and surrounding
    it with `<svelte:head>` tags. These tags place the content within the document
    head. To see how this can affect the browsing experience, open the development
    version of the application and take note of the page title shown in your browser
    on the home page. Then, click **About** and observe how the title shown in the
    browser tab changes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们应用程序的`<title>`元素中，使用适当的文本，并用`<svelte:head>`标签包围它。这些标签将内容放置在文档的头部。为了了解这如何影响浏览体验，请打开应用程序的开发版本，并注意在浏览器中显示的主页页面标题。然后，点击**关于**，观察浏览器标签中显示的标题如何变化。
- en: For screen reader applications, this small change allows them to alert users
    that they have navigated to a new route. Even for users who are not utilizing
    a screen reader, this is a noticeable improvement over the previous text showing
    only the site name. If a user were to bookmark a page on this site, the default
    text would now more accurately reflect the page in question. Not only is this
    helpful addition for all human users but it can also be a big boost to our application’s
    SEO, as many search engines will take into account page titles when indexing posts.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于屏幕阅读器应用程序，这个小小的改变允许它们提醒用户他们已经导航到一个新的路由。即使对于不使用屏幕阅读器的用户，这也是对之前只显示站点名称的文本的一个明显的改进。如果用户在这个网站上标记了一个页面，现在的默认文本将更准确地反映该页面。这不仅对所有人类用户有帮助，而且还可以大大提高我们应用程序的SEO，因为许多搜索引擎在索引帖子时会考虑页面标题。
- en: By announcing routes, we can greatly improve the experience of our application
    for its users. Next, let’s take a look at some other small adjustments that can
    make big improvements.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过宣布路由，我们可以极大地改善我们应用程序的用户体验。接下来，让我们看看一些其他的小调整，这些调整可以带来很大的改进。
- en: Accessibility enhancements
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无障碍性增强
- en: 'Not all developers nor all of those who utilize screen readers speak English
    as their primary language. As such, we should be able to adjust our application
    accordingly. Doing so is fairly straightforward and we can vastly improve the
    experience for users of assistive technology around the world by making a small
    note about the language our content is served in. By default, SvelteKit sets the
    language to English but we can quickly adjust it by changing the `lang` attribute
    on the `<html>` element in `src/app.html`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有开发人员以及所有使用屏幕阅读器的用户都将英语作为他们的母语。因此，我们应该能够相应地调整我们的应用程序。这样做相当直接，通过在内容提供语言上做一小笔记，我们可以极大地改善全球辅助技术用户的体验。默认情况下，SvelteKit将语言设置为英语，但我们可以通过更改`src/app.html`中的`<html>`元素的`lang`属性来快速调整：
- en: src/app.html
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: src/app.html
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note the `<html>` element at the top of the file with the `lang` attribute set.
    Setting the `lang` attribute to the appropriate language, such as `fr` for French
    or `ar` for Arabic, ensures that screen readers can correctly pronounce or translate
    the content.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意文件顶部的`<html>`元素，其中设置了`lang`属性。将`lang`属性设置为适当的语言，例如`fr`代表法语或`ar`代表阿拉伯语，确保屏幕阅读器可以正确发音或翻译内容。
- en: One final a11y improvement we can make in our applications is allowing SvelteKit
    to manipulate the focus on HTML elements. Normally, when an application is rendered
    on the server, each new navigation event resets the focus. But in client-side
    rendered applications, the browser may not detect that a navigation event has
    occurred and therefore, focus will persist on whatever the currently focused element
    happens to be. To manage this with a11y in mind, SvelteKit resets focus to the
    `<body>` element – that is, unless an element has the `autofocus` attribute set,
    at which point that element will be given focus. Letting SvelteKit’s behavior
    take control of focus comes with the benefit of letting users of screen readers
    know that a navigation event has occurred.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在我们的应用程序中实现的最后一个无障碍性改进是允许SvelteKit操纵HTML元素上的焦点。通常，当应用程序在服务器上渲染时，每个新的导航事件都会重置焦点。但在客户端渲染的应用程序中，浏览器可能无法检测到导航事件的发生，因此，焦点将保持在当前聚焦的元素上。为了考虑到无障碍性，SvelteKit将焦点重置到`<body>`元素上——也就是说，除非某个元素设置了`autofocus`属性，在这种情况下，该元素将被给予焦点。让SvelteKit的行为控制焦点的好处是让屏幕阅读器的用户知道已经发生了导航事件。
- en: When it comes to making our applications more accessible to a wider audience,
    it doesn’t take much effort on our part. Doing so improves the user experience,
    and all of the aforementioned improvements can also boost SEO rankings.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到使我们的应用程序更容易被更广泛的受众使用时，我们不需要付出太多努力。这样做可以改善用户体验，上述所有改进也可以提高SEO排名。
- en: SEO Tips
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SEO技巧
- en: Aside from making some small a11y improvements in our application, we can keep
    some other suggestions in mind. Firstly, we should make use of SvelteKit’s **Server-Side
    Rendering** (**SSR**) whenever possible. Doing so ensures the quick delivery of
    the application as well as makes content easier for search engines to parse. Of
    course, many search engines now have the capabilities to index client-side rendered
    content, but the speed and reliability of SSR cannot be discounted. We should
    only disable SSR if we have a valid reason to.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在我们的应用程序中做一些小的 a11y 改进外，我们还可以记住一些其他建议。首先，我们应该尽可能使用 SvelteKit 的 **服务器端渲染**（**SSR**）。这样做可以确保应用程序快速交付，同时使内容更容易被搜索引擎解析。当然，现在许多搜索引擎都有索引客户端渲染内容的能力，但
    SSR 的速度和可靠性不容忽视。我们只有在有充分理由的情况下才应该禁用 SSR。
- en: Another useful tip to consider is the performance of our application. For the
    most part, we can rely on Vite to tree-shake unused code out of our builds. Smaller
    bundle sizes mean fewer lines of code to deliver to the client and many search
    engines rank results based on asset delivery times. See the *Resources* section
    at the end of this chapter for tools that can deliver insights into your page
    speeds.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得考虑的有用技巧是考虑我们应用程序的性能。在大多数情况下，我们可以依赖 Vite 从我们的构建中摇树干未使用的代码。更小的包大小意味着需要发送给客户端的代码行数更少，许多搜索引擎根据资产交付时间来排名结果。请参阅本章末尾的
    *资源* 部分，了解可以提供关于页面速度洞察力的工具。
- en: The final useful tip for improving SEO is to leave trailing slashes off route
    names. Having extra slashes can negatively impact page ranks, so unless you have
    a valid reason to, consider leaving the page option `trailingSlash` property alone.
    By following these few tips, we can be sure our SvelteKit application will rank
    highly in search engine results.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 提高搜索引擎优化（SEO）的最后一个有用技巧是在路由名称中省略尾部斜杠。额外的斜杠可能会对页面排名产生负面影响，所以除非你有充分的理由，否则考虑让页面选项
    `trailingSlash` 属性保持不变。遵循这些少数几个技巧，我们可以确保我们的 SvelteKit 应用程序在搜索引擎结果中排名很高。
- en: Summary
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: When it comes to building a successful web application, we must strive to make
    it accessible to all. The reasons for doing so may be purely selfish by attempting
    to capture as much of the market as possible, or egalitarian by trying to include
    users from all walks of the web. It could be that you simply want to be highly
    ranked in search engine results. Whatever the reasons may be, it’s a fairly straightforward
    process with SvelteKit. We’ve seen the warnings provided at compile time and we’ve
    learned about the benefits of both SEO and a11y when it comes to creating unique
    page titles. With a few SEO tips to keep in mind, it’s easy for our accessible
    apps to become known to the world.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到构建一个成功的网络应用程序时，我们必须努力使其对所有用户都易于访问。这样做的原因可能是出于纯粹的自私，试图尽可能多地占领市场，或者出于平等主义，试图包括来自网络各个领域的用户。可能你只是想在高搜索引擎结果中排名很高。无论原因如何，使用
    SvelteKit 的过程相当直接。我们已经看到了编译时提供的警告，并且我们已经了解了在创建独特的页面标题时，SEO 和 a11y 的好处。只要记住一些 SEO
    小技巧，我们的可访问应用程序就很容易为世界所知。
- en: Having wrapped up this chapter, we’ve covered nearly everything there is to
    discuss about SvelteKit. However, technology moves quickly so we can never truly
    be finished learning. By the time this book is published, there will likely have
    been more improvements and changes introduced into SvelteKit. To ensure you have
    the latest information, the next chapter will provide more resources, communities,
    and examples that are well worth your time to explore.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成本章后，我们几乎涵盖了关于 SvelteKit 所有的讨论内容。然而，技术发展迅速，所以我们永远无法真正停止学习。到这本书出版时，SvelteKit
    很可能已经引入了更多的改进和变化。为了确保您拥有最新的信息，下一章将提供更多资源、社区和值得探索的示例。
- en: Resources
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源
- en: '*The A11y Project* – [https://www.a11yproject.com/](https://www.a11yproject.com/)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可访问性项目* – [https://www.a11yproject.com/](https://www.a11yproject.com/)'
- en: '*MDN Web Docs: Accessibility* – [https://developer.mozilla.org/en-US/docs/Web/Accessibility](https://developer.mozilla.org/en-US/docs/Web/Accessibility)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*MDN 网络文档：可访问性* – [https://developer.mozilla.org/en-US/docs/Web/Accessibility](https://developer.mozilla.org/en-US/docs/Web/Accessibility)'
- en: '*Svelte Accessibility Warnings* – [https://svelte.dev/docs#accessibility-warnings](https://svelte.dev/docs#accessibility-warnings)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Svelte 可访问性警告* – [https://svelte.dev/docs#accessibility-warnings](https://svelte.dev/docs#accessibility-warnings)'
- en: '*PageSpeed Insights* – [https://pagespeed.web.dev/](https://pagespeed.web.dev/)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*页面速度洞察力* – [https://pagespeed.web.dev/](https://pagespeed.web.dev/)'
- en: 'Appendix: Examples and Support'
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录：示例和支持
- en: 'Because learning is a never-ending process and technology moves quickly, this
    final chapter aims to provide you with the resources you’ll need to continue your
    journey with SvelteKit. In the world of web development, it’s rare to see a project
    that doesn’t integrate multiple tools and technologies, so we’ll address how we
    can easily integrate SvelteKit with other frontend tooling. We’ll also see some
    official and community-based resources that are invaluable when it comes to troubleshooting,
    advancing our knowledge, or discovering new components. After that, we’ll wrap
    things up with a thank-you from the author. Let’s finish this book with the following
    sections:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于学习是一个永无止境的过程，而且技术发展迅速，本章的最终目的是为你提供继续使用 SvelteKit 旅程所需的资源。在 Web 开发的世界里，几乎每个项目都会集成多个工具和技术，因此我们将探讨如何轻松地将
    SvelteKit 与其他前端工具集成。我们还将看到一些官方和社区资源，这些资源在解决问题、提升知识或发现新组件时非常有价值。之后，我们将以作者的感谢语结束。让我们以下列章节结束这本书：
- en: Integrations
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成
- en: More Reading and Resources
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多阅读和资源
- en: Wrapping up
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总结
- en: Afterward, you’ll have all the tools and knowledge necessary to go forth and
    build cool SvelteKit projects.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你将拥有所有必要的工具和知识，可以继续构建酷炫的 SvelteKit 项目。
- en: Technical requirements
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The complete code for this chapter is available on GitHub at: [https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/tailwind](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/tailwind).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完整代码可在 GitHub 上找到：[https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/tailwind](https://github.com/PacktPublishing/SvelteKit-Up-and-Running/tree/tailwind)。
- en: Integrations
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成
- en: When it comes to building modern web applications, it’s not uncommon to use
    a plethora of technologies. Each tool has its place, and it may be the case that
    a developer is more comfortable with a particular frontend framework than they
    are with standard CSS. This is fine, as it can speed up development so long as
    the tools integrate nicely with others. Fortunately for us, SvelteKit works quite
    well with others.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到构建现代 Web 应用程序时，使用大量技术并不罕见。每个工具都有其位置，并且开发者可能更熟悉特定的前端框架，而不是标准 CSS。这是可以的，只要这些工具能够很好地与其他工具集成，它就可以加快开发速度。幸运的是，SvelteKit
    与其他工具配合得相当好。
- en: 'At the time of writing, Tailwind CSS has become incredibly popular. Tailwind
    CSS aims to reduce the amount of shipped CSS by only extracting that which is
    used. This is great to reduce the amount of assets delivered to clients and speed
    up load times. To showcase how simple it is to integrate a tool such as Tailwind
    CSS in our existing SvelteKit project, let’s work through it. These steps can
    also be found in the official Tailwind CSS documentation. It’s recommended to
    create a new branch in your repository before starting this process, as it will
    break some of our existing styles. If you’re following along with this book’s
    repository, these examples are available on the `tailwind` branch. To begin, we
    can install Tailwind along with a couple of other dependencies using the following
    commands:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Tailwind CSS 已经变得非常流行。Tailwind CSS 的目标是减少发送的 CSS 量，只提取使用的那部分。这对于减少发送给客户端的资产数量和加快加载时间非常有用。为了展示如何简单地将
    Tailwind CSS 这样的工具集成到我们现有的 SvelteKit 项目中，让我们来操作一下。这些步骤也可以在官方 Tailwind CSS 文档中找到。建议在开始此过程之前在你的仓库中创建一个新的分支，因为它将破坏我们的一些现有样式。如果你正在跟随这本书的仓库，这些示例可以在
    `tailwind` 分支上找到。首先，我们可以使用以下命令安装 Tailwind 以及其他几个依赖项：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Of course, `tailwindcss` will include the necessary tooling to use Tailwind
    CSS within our project. The `postcss` dependency will allow us to manipulate CSS
    files, and `autoprefixer` is a `postcss` plugin that will automatically inject
    the appropriate vendor prefixes into our generated CSS. Once we have added the
    dependencies to our development environment, we can use the following command
    to initialize our Tailwind project. It will create the necessary `tailwind.config.js`
    and `postcss.config.js` files:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，`tailwindcss` 将包含在项目中使用 Tailwind CSS 所需的工具。`postcss` 依赖项将允许我们操作 CSS 文件，而
    `autoprefixer` 是一个 `postcss` 插件，它将自动将适当的供应商前缀注入到我们生成的 CSS 中。一旦我们将依赖项添加到我们的开发环境中，我们可以使用以下命令来初始化我们的
    Tailwind 项目。它将创建必要的 `tailwind.config.js` 和 `postcss.config.js` 文件：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After initializing `tailwindcss`, we can open `svelte.config.js` and import
    the `vitePreprocess` module. This will enable us to process `<style>` tags throughout
    our Svelte components:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在初始化 `tailwindcss` 之后，我们可以打开 `svelte.config.js` 并导入 `vitePreprocess` 模块。这将使我们能够处理
    Svelte 组件中的 `<style>` 标签：
- en: svelte.config.js
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: svelte.config.js
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now that we have imported `vitePreprocess`, we can ensure that Tailwind CSS
    knows about the paths to our components. We can do this by updating `tailwind.config.js`,
    like so:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了 `vitePreprocess`，我们可以确保 Tailwind CSS 了解我们的组件路径。我们可以通过更新 `tailwind.config.js`
    来做到这一点，如下所示：
- en: tailwind.config.js
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: tailwind.config.js
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Noticeably, we only need to change the paths available in the `content` array
    property to point to our `src/` directory and ensure that the `.svelte` file type
    is recognized, along with other standard file types.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们只需要更改 `content` 数组属性中可用的路径，指向我们的 `src/` 目录，并确保 `.svelte` 文件类型被识别，以及其他标准文件类型。
- en: 'We can then create a singular `app.css` file, where we can import all of Tailwind’s
    functionality using the `@``tailwind` directive:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以创建一个单独的 `app.css` 文件，在那里我们可以使用 `@tailwind` 指令导入 Tailwind 的所有功能：
- en: src/app.css
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: src/app.css
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you’ve been paying attention, the next step should be straightforward. We
    then import `src/app.css` into our root layout component:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你一直很注意，下一步应该很简单。然后我们将 `src/app.css` 导入到我们的根布局组件中：
- en: src/routes/+layout.svelte
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: src/routes/+layout.svelte
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Of course, we’ve already imported `reset.css`, so there will be conflicts with
    the existing CSS throughout our project. Ensure your development environment is
    running with `npm run dev`. To prevent completely breaking our project, we’ve
    only set the background on the `.content` element to a light orange color provided
    by Tailwind CSS, but we’ll definitely notice other changes applied throughout
    the project. Now would be an excellent time to explore the practice of utility-first
    CSS if you have not yet done so.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们已导入 `reset.css`，因此我们的项目中的现有 CSS 将会有冲突。确保你的开发环境正在运行 `npm run dev`。为了防止完全破坏我们的项目，我们只将
    `.content` 元素的背景设置为 Tailwind CSS 提供的浅橙色，但我们肯定会注意到项目中的其他变化。如果你还没有这样做，现在是一个探索以实用为先的
    CSS 实践的绝佳时机。
- en: 'We saw the manual way of integrating another tool such as Tailwind CSS, but
    we’re talking about SvelteKit, where things just work. If these steps are too
    much to remember, there is a simpler way. Try creating yet another branch based
    off of `main` in your project repository and use the following command to do essentially
    the same thing we just did. Again, if you’re following along with the book repository,
    this code can be found in the `tailwind-add` branch:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了手动集成另一个工具（如 Tailwind CSS）的方法，但我们谈论的是 SvelteKit，在那里事情总是按预期进行。如果这些步骤太难记住，有一个更简单的方法。尝试在你的项目仓库的
    `main` 分支上创建另一个分支，并使用以下命令执行我们刚才所做的基本相同的事情。再次提醒，如果你正在跟随本书的仓库，这段代码可以在 `tailwind-add`
    分支中找到：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can follow along with the prompts, and once we’ve installed the dependencies
    with `npm install`, our project will have Tailwind CSS integrated! By using the
    community-maintained `svelte-add` project, we can quickly and easily import templates
    that integrate various technologies with our SvelteKit project. For instance,
    if you prefer to use SCSS/Sass flavors when writing CSS, you can use the `scss`
    custom adder, like so:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照提示进行操作，一旦我们使用 `npm install` 安装了依赖项，我们的项目就会集成 Tailwind CSS！通过使用社区维护的 `svelte-add`
    项目，我们可以快速轻松地导入与我们的 SvelteKit 项目集成的模板。例如，如果你在编写 CSS 时更喜欢使用 SCSS/Sass 风格，你可以使用 `scss`
    自定义添加器，如下所示：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As we can see, it’s not difficult to incorporate different technologies with
    SvelteKit. While we can incorporate these other toolchains manually, it’s also
    easily done with community-provided resources. Let’s take a look at more community
    resources to see what else is out there!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，使用 SvelteKit 集成不同的技术并不困难。虽然我们可以手动集成这些其他工具链，但使用社区提供的资源也同样容易。让我们看看更多的社区资源，看看还有哪些其他选择！
- en: More Reading and Resources
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多阅读和资源
- en: As previously demonstrated, the community resources surrounding SvelteKit can
    be excellent to save us time and mental overhead, allowing us to focus on building
    our applications. This book would not have been possible without the community
    around SvelteKit. If you’re looking to expand on your SvelteKit knowledge, assist
    others, or create your own SvelteKit extensions, consider the various resources
    listed next!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示，围绕 SvelteKit 的社区资源可以非常有效地节省我们的时间和精神负担，使我们能够专注于构建我们的应用程序。如果没有 SvelteKit
    的社区，这本书就不可能完成。如果你想要扩展你的 SvelteKit 知识，帮助他人，或者创建你自己的 SvelteKit 扩展，请考虑以下列出的各种资源！
- en: SvelteKit Documentation
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SvelteKit 文档
- en: 'The documentation provided on the official SvelteKit website will likely be
    the best resource you’ll find for information about the framework. It’s incredibly
    thorough and constantly updated to reflect changes within the framework. Be sure
    to start here for any questions you may have about SvelteKit:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在官方 SvelteKit 网站上提供的文档可能是你找到有关框架信息的最佳资源。它非常详尽，并且不断更新以反映框架内的变化。确保在有任何关于 SvelteKit
    的问题时从这里开始：
- en: '[https://kit.svelte.dev](https://kit.svelte.dev)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://kit.svelte.dev](https://kit.svelte.dev)'
- en: SvelteKit Tutorial
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SvelteKit 教程
- en: 'To thoroughly test your SvelteKit knowledge and learn more than this book could
    cover, check out the official SvelteKit tutorial:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了彻底测试你的 SvelteKit 知识并学习这本书无法涵盖的内容，请查看官方 SvelteKit 教程：
- en: '[https://learn.svelte.dev/tutorial](https://learn.svelte.dev/tutorial)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://learn.svelte.dev/tutorial](https://learn.svelte.dev/tutorial)'
- en: Svelte and SvelteKit chat
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Svelte 和 SvelteKit 聊天
- en: 'Have a question or just want to chat with others that are using SvelteKit?
    The official Discord server is the place to go:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有问题或只是想与其他使用 SvelteKit 的人聊天？官方 Discord 服务器是你要去的地方：
- en: '[https://svelte.dev/chat](https://svelte.dev/chat)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://svelte.dev/chat](https://svelte.dev/chat)'
- en: Independent Creators
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 独立创作者
- en: 'There are too many great writers and creators working with SvelteKit to list
    here, but a couple of this author’s favorites are Rodney Johnson and Josh Collinsworth.
    Collinsworth provides the excellent SvelteKit static blog starter template we
    saw in [*Chapter 8*](B19024_08_Final_AM.xhtml#_idTextAnchor106), and Johnson creates
    informative tutorial videos and articles:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 有太多优秀的作家和创作者在与 SvelteKit 合作，这里无法一一列举，但作者最喜欢的两位是罗德尼·约翰逊和乔希·柯林斯沃斯。柯林斯沃斯提供了我们在[*第
    8 章*](B19024_08_Final_AM.xhtml#_idTextAnchor106)中看到的出色的 SvelteKit 静态博客起始模板，而约翰逊则创作了信息丰富的教程视频和文章：
- en: 'Rodney Johnson: https://rodneylab.com/'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 罗德尼·约翰逊：[https://rodneylab.com/](https://rodneylab.com/)
- en: 'Josh Collinsworth: [https://joshcollinsworth.com/](https://joshcollinsworth.com/)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 乔希·柯林斯沃斯：[https://joshcollinsworth.com/](https://joshcollinsworth.com/)
- en: Svelte Society
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Svelte Society
- en: 'When it comes to finding Svelte and SvelteKit community resources, Svelte Society
    has you covered, whether you’re looking for templates, components, adders, or
    more. They even organize Svelte events, so if you’re looking to meet other Svelte
    developers in your area, you should start here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到寻找 Svelte 和 SvelteKit 社区资源时，Svelte Society 会为你提供全方位的支持，无论你是寻找模板、组件、插件，还是更多。他们甚至还会组织
    Svelte 活动，所以如果你想在你的地区遇见其他 Svelte 开发者，你应该从这里开始：
- en: '[https://sveltesociety.dev/](https://sveltesociety.dev/)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://sveltesociety.dev/](https://sveltesociety.dev/)'
- en: SvelteKit Repository
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SvelteKit 仓库
- en: 'As with many open source projects, the code behind SvelteKit is freely available
    to view on GitHub. If you believe you’ve found a bug specific to the framework,
    consider searching the issues here, and if you don’t see your problem listed,
    contribute by submitting it! SvelteKit developers constantly accept pull requests
    and appreciate any help they can get:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 就像许多开源项目一样，SvelteKit 背后的代码在 GitHub 上免费提供供查看。如果你认为你发现了一个针对框架的特定错误，请在这里搜索问题，如果你没有看到你的问题被列出，请通过提交它来贡献！SvelteKit
    开发者不断接受拉取请求，并欣赏他们能得到的任何帮助：
- en: '[https://github.com/sveltejs/kit](https://github.com/sveltejs/kit)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/sveltejs/kit](https://github.com/sveltejs/kit)'
- en: As with many open source projects, the community and documentation can make
    or break a project. Because of the excellent support behind SvelteKit, it’s hard
    to imagine a future where people don’t constantly evangelize about SvelteKit and
    Svelte.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 就像许多开源项目一样，社区和文档可以成就或毁掉一个项目。由于 SvelteKit 背后出色的支持，很难想象一个人们不会不断宣扬 SvelteKit 和
    Svelte 的未来。
- en: Wrapping up
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: If you’ve made it this far, then thank you for staying with me. I hope the material
    and knowledge provided here can be of assistance with your SvelteKit projects.
    If you’ve enjoyed this book, then do share it with friends, colleagues, and acquaintances
    who are interested in learning a new JS framework. As this is my first book, it’s
    certainly been a journey for me, and I’ve learned much about the writing process.
    If you’re interested in finding more technical texts by me, I write at https://www.closingtags.com
    about web development and web-adjacent technologies. If you build something cool
    with SvelteKit, I’d love to hear about it. I can be reached via the contact form
    on my website. Thanks again, and I look forward to seeing what you build.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经读到这儿，那么感谢你一直陪伴着我。我希望这里提供的材料和知识能够对你的 SvelteKit 项目有所帮助。如果你喜欢这本书，那么请与对学习新
    JS 框架感兴趣的朋友、同事和熟人分享。作为我的第一本书，这无疑是一次旅程，我在写作过程中学到了很多。如果你对我的更多技术性文本感兴趣，我会在 https://www.closingtags.com
    上写关于网页开发和相关技术的文章。如果你用 SvelteKit 做出了什么酷炫的东西，我很乐意听到你的分享。你可以通过我网站上的联系表单联系到我。再次感谢，并期待看到你创造的作品。
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: That’s it, you’ve finished the book! If you still have questions about the various
    workings of SvelteKit, look into the previously provided community resources.
    You’ll find everything necessary to expand your SvelteKit knowledge and see what
    others in the community are doing. Because SvelteKit integrates so well with many
    other tools, it should be a breeze to incorporate it with your existing workflows.
    I look forward to seeing what you build with it. Thanks again!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，你已经完成了这本书！如果你对 SvelteKit 的各种功能还有疑问，可以查看之前提供的社区资源。你将找到所有扩展你的 SvelteKit 知识和了解社区其他成员所做的事情所需的一切。由于
    SvelteKit 与许多其他工具集成得很好，将其融入现有的工作流程应该会非常容易。我期待看到你用它创造的作品。再次感谢！
- en: Resources
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源
- en: 'Tailwind CSS: [https://tailwindcss.com](https://tailwindcss.com)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Tailwind CSS: [https://tailwindcss.com](https://tailwindcss.com)'
- en: 'Svelte Add: [https://github.com/svelte-add/svelte-add](https://github.com/svelte-add/svelte-add)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Svelte Add: [https://github.com/svelte-add/svelte-add](https://github.com/svelte-add/svelte-add)'
