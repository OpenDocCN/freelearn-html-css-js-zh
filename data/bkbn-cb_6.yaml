- en: Chapter 6. Templates and UX sugar
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。模板和 UX 糖
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Using templates in a view
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图中使用模板
- en: Implementing a template loader
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现模板加载器
- en: Using Mustache templates
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Mustache 模板
- en: Defining a form
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个表单
- en: Adding validation to a form
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向表单添加验证
- en: Handling form events
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理表单事件
- en: Customizing a form with the Bootstrap framework
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Bootstrap 框架自定义表单
- en: Assembling layouts with LayoutManager
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 LayoutManager 组装布局
- en: Building a semantic and an easily styleable data grid
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建语义化和易于样式的数据网格
- en: Drawing on the HTML5 canvas
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 HTML5 画布上绘制
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: This chapter introduces you to templates, which are used to separate HTML markup
    from the application code. Thus, the application becomes more structured and clean.
    We will discuss the templating engine provided by Underscore.js and learn how
    to integrate Backbone with third-party templating engines, such as Mustache.js.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向您介绍了模板，它们用于将 HTML 标记与应用程序代码分离。因此，应用程序变得更加结构化和整洁。我们将讨论 Underscore.js 提供的模板引擎，并学习如何将
    Backbone 与第三方模板引擎（如 Mustache.js）集成。
- en: Also, we will discuss useful Backbone extensions, which allows the use of forms,
    layouts, and grids.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将讨论有用的 Backbone 扩展，它允许使用表单、布局和网格。
- en: Using templates in a view
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在视图中使用模板
- en: In this recipe, you are going to learn how to use templates in the Backbone
    view. By default, Backbone.js is integrated with templating engine provided by
    Underscore.js.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，您将学习如何在 Backbone 视图中使用模板。默认情况下，Backbone.js 与 Underscore.js 提供的模板引擎集成。
- en: 'Let''s take an example of the *Rendering a collection in a view* recipe in
    [Chapter 4](ch04.html "Chapter 4. Views"), *Views*, where we rendered a collection
    with a view and updated the code using Underscore''s templating engine. The result
    will look like the following image:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以 [第 4 章](ch04.html "第 4 章。视图") 中 *在视图中渲染集合* 食谱的例子为例，我们在视图中渲染了一个集合，并使用 Underscore
    的模板引擎更新了代码。结果将类似于以下图像：
- en: '![Using templates in a view](img/2728OS_06_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![在视图中使用模板](img/2728OS_06_01.jpg)'
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to use templates in a view:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在视图中使用模板：
- en: Make sure you have models and collection objects defined.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已定义模型和集合对象。
- en: '[PRE0]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Define a view with the `template` property which contains a template. Then,
    when rendering a view, use `template()` to return rendered HTML.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用包含模板的 `template` 属性定义一个视图。然后，在渲染视图时，使用 `template()` 返回渲染的 HTML。
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Create a collection instance.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个集合实例。
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create a view instance, render it, and set the result to the value of `body`.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个视图实例，渲染它，并将结果设置为 `body` 的值。
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: With the help of the `_.template()` method provided by Underscore.js, we can
    define an HTML template where we can include JavaScript code inside the `<% …
    %>` brackets. To output a variable into the template, we need to use the `<%=
    … %>` syntax, and to output an HTML escaped variable, we can use the `<%- … %>`
    syntax.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Underscore.js 提供的 `_.template()` 方法，我们可以在 `<% … %>` 括号内包含 JavaScript 代码的
    HTML 模板中定义。要将变量输出到模板中，我们需要使用 `<%= … %>` 语法，而要将转义后的 HTML 变量输出，我们可以使用 `<%- … %>`
    语法。
- en: Further, in the `render()` method, we pass the collection items in the JSON
    format into a template.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在 `render()` 方法中，我们将以 JSON 格式将集合项传递给模板。
- en: There's more...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: In this section, we are going to learn how to split a template into partials.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何将模板拆分为部分。
- en: Splitting a template into partials
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将模板拆分为部分
- en: Partial is a template that can be called from other templates as a function.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 部分是一个可以从其他模板中调用的模板，作为一个函数。
- en: 'In case we want to reuse parts of the existing templates, we can split one
    template into different parts. To do so, follow these steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要重用现有模板的部分，我们可以将一个模板拆分为不同的部分。为此，请按照以下步骤操作：
- en: Define the template part.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义模板部分。
- en: '[PRE4]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Define the main template.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义主模板。
- en: '[PRE5]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When rendering a template, pass a partial method as a setting.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在渲染模板时，将部分方法作为设置传递。
- en: '[PRE6]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: See also
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: To get more information about templates in Underscore.js, you can refer to the
    official docs at [http://underscorejs.org/#template](http://underscorejs.org/#template).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关 Underscore.js 中模板的更多信息，您可以参考官方文档[http://underscorejs.org/#template](http://underscorejs.org/#template)。
- en: Implementing a template loader
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现模板加载器
- en: In a large application, which follows separation of concerned paradigm, it is
    important to store templates apart from views, so the web designer can modify
    them easily without harming views. Such a practice also provides template reusability
    within the application.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个大型应用程序中，遵循关注点分离范式，将模板存储在视图之外是很重要的，这样网页设计师可以轻松地修改它们，而不会损害视图。这种做法也提供了应用程序内的模板可重用性。
- en: Tip
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Store all your templates in a single HTML file**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**将所有模板存储在单个HTML文件中**'
- en: For server-side applications, developers typically store templates in separate
    files, achieving a convenient way for accessing and editing them. However, this
    can hardly be applied to client-side applications, because it makes a browser
    download multiple small files from a server, delaying an application start.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于服务器端应用程序，开发者通常将模板存储在单独的文件中，以实现方便访问和编辑它们。然而，这种方法几乎不能应用于客户端应用程序，因为它会使浏览器从服务器下载多个小文件，从而延迟应用程序的启动。
- en: In this recipe we will store our templates apart from views in a single HTML
    file. Also, we will write a template loader, which will load those templates into
    the memory, allowing them to be accessed from all over the application.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将把模板存储在单独的HTML文件中，除了视图之外。我们还将编写一个模板加载器，它将加载这些模板到内存中，允许从应用程序的各个部分访问它们。
- en: How to do it...
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to implement the template loader:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤实现模板加载器：
- en: Add templates enclosed in the `script` tag to the header of the `index.html`
    file. Set the `id` attribute to distinguish one template from another.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将包含在`script`标签中的模板添加到`index.html`文件的头部分。设置`id`属性以区分不同的模板。
- en: '[PRE7]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Create a template loading utility and place it into the `js/template-loader.js`
    file.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个模板加载实用工具，并将其放置到`js/template-loader.js`文件中。
- en: '[PRE8]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Include the template loader into the `index.html` file.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模板加载器包含到`index.html`文件中。
- en: '[PRE9]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When rendering a view, use templates defined in the global `$.tpl` array.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在渲染视图时，使用全局`$.tpl`数组中定义的模板。
- en: '[PRE10]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Because we defined our templates in `index.html`, they are loaded instantaneously.
    Then, in the template loader, when the document is fully loaded, we move them
    into the global variable `$.tpl` and remove templates from the DOM. This should
    speed up further usage of our templates as if we defined them in the JS file.
    Now, we can use those templates in different views of our application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在`index.html`中定义了我们的模板，它们可以即时加载。然后，在模板加载器中，当文档完全加载后，我们将它们移动到全局变量`$.tpl`中，并从DOM中删除模板。这应该会加快我们模板的进一步使用，就像我们在JS文件中定义它们一样。现在，我们可以在应用程序的不同视图中使用这些模板。
- en: Using Mustache templates
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Mustache模板
- en: Mustache is a beautiful, logicless template syntax. It can be used for HTML,
    config files, source code, and so on. There are various implementations of Mustache
    that exist for different languages, such as JavaScript, PHP, Ruby, Python, and
    many others.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Mustache是一种美丽且无逻辑的模板语法。它可以用于HTML、配置文件、源代码等。存在各种针对不同语言的Mustache实现，例如JavaScript、PHP、Ruby、Python以及许多其他语言。
- en: In this chapter, we are going to learn how to use Mustache.js, which is the
    implementation of Mustache for JavaScript, with Backbone.js.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用Mustache.js，这是JavaScript的Mustache实现，与Backbone.js一起使用。
- en: Getting ready
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can download Mustache.js from its GitHub page at [https://github.com/janl/mustache.js](https://github.com/janl/mustache.js).
    To include Mustache.js into your project, save the `mustache.js` file into the
    `lib` folder, and include a reference to it in `index.html`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从其GitHub页面[https://github.com/janl/mustache.js](https://github.com/janl/mustache.js)下载Mustache.js。要将Mustache.js包含到您的项目中，将`mustache.js`文件保存到`lib`文件夹中，并在`index.html`中包含对其的引用。
- en: Including the Backbone extension into your project is described in detail in
    the *Extending an application with plugins* recipe in [Chapter 1](ch01.html "Chapter 1. Understanding
    Backbone"), *Understanding Backbone*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章。理解Backbone")的*使用插件扩展应用程序*菜谱中详细描述了如何将Backbone扩展包含到您的项目中。
- en: How to do it...
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to use a Mustache template:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用Mustache模板：
- en: Define a Mustache template in the view.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在视图中定义一个Mustache模板。
- en: '[PRE11]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Run the `Mustache.render()` method to render a template.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`Mustache.render()`方法来渲染模板。
- en: '[PRE12]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`Mustache.render()` compiles a template string into a JavaScript code, and
    then executes it. A template string contains placeholders like `{{placeholder}}`,
    which are replaced with values provided in the second parameter.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`Mustache.render()`将模板字符串编译成JavaScript代码，然后执行它。模板字符串包含像`{{placeholder}}`这样的占位符，这些占位符将被第二个参数中提供的值替换。'
- en: There's more...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This section describes how to use compiled templates and partials in Mustache.js.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何在Mustache.js中使用编译后的模板和部分。
- en: Using compiled templates
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用编译后的模板
- en: 'To improve the performance of your application, you can compile the template
    before using it by calling `Mustache.compile()`. This method accepts the template
    string as a single parameter and returns a JavaScript function, which can be called
    to return HTML code. The following example demonstrates how to do it:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高应用程序的性能，您可以在使用之前通过调用`Mustache.compile()`编译模板。此方法接受模板字符串作为单个参数，并返回一个JavaScript函数，可以调用以返回HTML代码。以下示例演示了如何操作：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Using partials
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用部分
- en: As in Underscore templates, Mustache.js allows partials to be used. To call
    a partial template, use the `>` syntax.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 与Underscore模板一样，Mustache.js允许使用部分。要调用部分模板，请使用`>`语法。
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The partial template will look like this:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 部分模板将如下所示：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You can pass the partial template in several ways, as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下几种方式传递部分模板：
- en: An object of partials, which are strings as well, may be passed as the third
    argument to `Mustache.render()`. The object should be keyed by the name of the
    partial, and its value should be the partial text.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将部分对象（也是字符串）作为第三个参数传递给`Mustache.render()`。该对象应按部分的名称键入，其值应为部分文本。
- en: '[PRE16]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Template partials can also be compiled using the `Mustache.compilePartial()`
    function. The first parameter of this function is the name of the partial as it
    is named within a parent template. The second parameter is a partial template
    string.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模板部分也可以使用`Mustache.compilePartial()`函数进行编译。此函数的第一个参数是部分在父模板中的名称。第二个参数是部分模板字符串。
- en: '[PRE17]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: See also
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: To learn more about the Mustche.js syntax, you can visit its official GitHub
    page at [https://github.com/janl/mustache.js](https://github.com/janl/mustache.js).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Mustache.js语法的知识，您可以访问其官方GitHub页面[https://github.com/janl/mustache.js](https://github.com/janl/mustache.js)。
- en: Defining a form
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义表单
- en: Almost any web application requires an HTML form for user input. In the previous
    chapters, we learned how to render a form manually and bind it to the view model.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎任何Web应用程序都需要HTML表单来收集用户输入。在前面的章节中，我们学习了如何手动渲染表单并将其绑定到视图模型。
- en: However, we should look for backbone-forms extensions, which allow us to deal
    with forms more easily by writing less code. In this recipe and in further recipes,
    we are going to learn how to use this extension.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们应该寻找允许我们通过编写更少的代码来更轻松地处理表单的backbone-forms扩展。在本配方和后续配方中，我们将学习如何使用此扩展。
- en: 'Let''s create a simple form for `BuyerModel`, which will look like the following
    screenshot:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为`BuyerModel`创建一个简单的表单，它将如下截图所示：
- en: '![Defining a form](img/2728OS_06_02.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![定义表单](img/2728OS_06_02.jpg)'
- en: Getting ready
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To include backbone-forms into your project, download the entire extension archive
    from the GitHub page ([https://github.com/powmedia/backbone-forms](https://github.com/powmedia/backbone-forms)),
    and extract it into the `lib/backbone-forms` directory. Then include a reference
    to the extension files into `index.html`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要将backbone-forms添加到您的项目中，请从GitHub页面下载整个扩展存档（[https://github.com/powmedia/backbone-forms](https://github.com/powmedia/backbone-forms)），并将其提取到`lib/backbone-forms`目录中。然后，将扩展文件的引用包含到`index.html`中。
- en: '[PRE18]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Including the Backbone extension into your project is described in detail in
    the *Extending an application with plugins* recipe in [Chapter 1](ch01.html "Chapter 1. Understanding
    Backbone"), *Understanding Backbone*.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章。理解Backbone")的*使用插件扩展应用程序*配方中详细描述了将Backbone扩展添加到您的项目中，*理解Backbone*。
- en: How to do it...
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to define a form:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤定义一个表单：
- en: Define a form schema definition inside the model object.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模型对象内部定义表单模式定义。
- en: '[PRE19]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Create a view which should render a form with the help of the `Backbone.Form`
    object.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个视图，该视图应使用`Backbone.Form`对象渲染表单。
- en: '[PRE20]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Add a `submit` callback to the view. In this, the callback form is validated,
    and its values are passed to a model through the `commit()` method of the form.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向视图添加一个`submit`回调。在这个回调中，表单被验证，其值通过表单的`commit()`方法传递给模型。
- en: '[PRE21]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `Backbone.Form` object extends `Backbone.Views` by overriding the `render()`
    method, where it builds a form based on the schema definition we pass along with
    the model. If the model has initial values, then those values will be assigned
    to the form elements.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backbone.Form` 对象通过重写 `render()` 方法扩展了 `Backbone.Views`，在该方法中，它根据我们传递给模型的模式定义构建表单。如果模型有初始值，则这些值将被分配给表单元素。'
- en: 'By executing the `commit()` method, form validation is performed and form values
    are assigned to the model properties. If the `{validate: true}` option is passed
    to this method, then both form validation and model validation are performed.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '通过执行 `commit()` 方法，执行表单验证并将表单值分配给模型属性。如果将 `{validate: true}` 选项传递给此方法，则同时执行表单验证和模型验证。'
- en: There's more...
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: This section describes how to build a form without a model.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何在没有模型的情况下构建表单。
- en: Using a form without a model
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用无模型的表单
- en: 'We can create a form without tying a schema definition to a model. The following
    example shows how to do it:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个表单，而不需要将模式定义绑定到模型上。以下示例展示了如何实现：
- en: '[PRE22]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: To get form values, use the `getValue()` method.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取表单值，请使用 `getValue()` 方法。
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关链接
- en: To learn more about schema definition, you can check their official docs at
    [https://github.com/powmedia/backbone-forms#schema-definition](https://github.com/powmedia/backbone-forms#schema-definition).
    In the later recipes, we will continue learning backbone-forms extension.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于模式定义的信息，您可以查看他们的官方文档，链接为[https://github.com/powmedia/backbone-forms#schema-definition](https://github.com/powmedia/backbone-forms#schema-definition)。在后续的食谱中，我们将继续学习
    backbone-forms 扩展。
- en: Adding validation to a form
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向表单添加验证
- en: In this recipe, we will continue to learn backbone-forms extension, and we will
    talk about form validation, which is quite a useful functionality and required
    by almost any web application which leverages backbone-forms extensions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将继续学习 backbone-forms 扩展，并将讨论表单验证，这是一个非常有用的功能，几乎任何利用 backbone-forms 扩展的
    Web 应用程序都需要。
- en: How to do it...
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'Follow these steps to add validation to a form:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤向表单添加验证：
- en: Make sure you have model schema defined.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已经定义了模型模式。
- en: '[PRE24]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Add validators.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加验证器。
- en: '[PRE25]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Set a validation message.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置验证消息。
- en: '[PRE26]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To enable validation, we need to pass the `validators` array to a schema field
    definition. A validator can be a string, an object, a regexp (regular expression),
    or a function.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用验证，我们需要将 `validators` 数组传递给模式字段定义。验证器可以是一个字符串、一个对象、一个正则表达式（regular expression）或一个函数。
- en: A string is used to set built-in validators, which do not require additional
    parameters. These validators are `required`, `email`, and `url`. If a validator
    requires an additional parameter (for example, `match` and `regexp`), or if we
    want to override an error message, we need to use an object to define a validator.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字符串设置内置验证器，这些验证器不需要额外的参数。这些验证器是 `required`、`email` 和 `url`。如果验证器需要额外的参数（例如，`match`
    和 `regexp`），或者如果我们想覆盖错误消息，我们需要使用对象来定义验证器。
- en: '[PRE27]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To perform a custom validator, we need to pass a validation function with two
    parameters: `value`, which is a form element value, and `formValues`, which is
    a hash of all form values.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行自定义验证器，我们需要传递一个带有两个参数的验证函数：`value`，它是表单元素的值，以及 `formValues`，它是所有表单值的哈希。
- en: '[PRE28]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Validation is performed when the `form.validate()` or `form.commit()` method
    is called.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 验证是在调用 `form.validate()` 或 `form.commit()` 方法时执行的。
- en: There's more...
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: This section describes more about form validation.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了更多关于表单验证的信息。
- en: Customizing error messages
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义错误信息
- en: 'It can be useful to override an error message for all built-in validators of
    a specific type at once. It is quite easy to do this by overriding values in `Backbone.Form.validators.errMessages`
    (the configuration object). We can use Mustache tags. Here is how it is done:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定类型的所有内置验证器，可以同时覆盖错误消息。通过在 `Backbone.Form.validators.errMessages`（配置对象）中覆盖值，可以轻松地做到这一点。我们可以使用
    Mustache 标签。以下是实现方式：
- en: '[PRE29]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Performing a model validation
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 执行模型验证
- en: If you want to perform a model validation when committing or validating a form,
    you need to make sure that the model's `validate()` method returns an object of
    error messages keyed by the field names.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在提交或验证表单时执行模型验证，请确保模型的 `validate()` 方法返回一个按字段名称键控的错误消息对象。
- en: '[PRE30]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: See also
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关链接
- en: To learn more about form validation, you can refer to the docs at [https://github.com/powmedia/backbone-forms#validation](https://github.com/powmedia/backbone-forms#validation).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于表单验证的信息，您可以参考[https://github.com/powmedia/backbone-forms#validation](https://github.com/powmedia/backbone-forms#validation)上的文档。
- en: Handling form events
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理表单事件
- en: The `Backbone.Form` extension provides several events that we can use in our
    application. For example, by leveraging such events, we can implement specific
    functionalities where the value of one field depends on the value of another field.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backbone.Form`扩展提供了我们可以在应用程序中使用的一些事件。例如，通过利用这些事件，我们可以实现一些特定的功能，其中一个字段的值依赖于另一个字段的值。'
- en: 'In this recipe, we are going to create a form for the `InvoiceModel` model,
    where the **Paid Date** field will be shown only if the **Paid** option is selected
    as the **Status** field value. Our form will look like the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将为`InvoiceModel`模型创建一个表单，其中**支付日期**字段仅在**支付**选项作为**状态**字段值被选中时显示。我们的表单将如下截图所示：
- en: '![Handling form events](img/2728OS_06_03.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![处理表单事件](img/2728OS_06_03.jpg)'
- en: How to do it...
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps tohandle form events:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤处理表单事件：
- en: Define the model and the form schema.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义模型和表单模式。
- en: '[PRE31]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Create `InvoiceForm` based on `Backbone.Form`.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据`Backbone.Form`创建`InvoiceForm`。
- en: '[PRE32]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Override parent's `initialize()` method to bind the `status` field's `change`
    event to the callback, which will update dependent fields.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 覆盖父类的`initialize()`方法，将`status`字段的`change`事件绑定到回调函数，该函数将更新相关字段。
- en: '[PRE33]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Implement the `update` method for the form, which will update dependent fields.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现表单的`update`方法，该方法将更新相关字段。
- en: '[PRE34]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Override the `render` method of the form, where we need to run the `update`
    method to ensure dependent fields are shown properly.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 覆盖表单的`render`方法，在那里我们需要运行`update`方法以确保相关字段正确显示。
- en: '[PRE35]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: How it works...
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`Backbone.Form` provides several form events, which we can bind to our callbacks
    using the `on()` method. They are:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backbone.Form`提供了几个表单事件，我们可以使用`on()`方法将它们绑定到我们的回调函数。它们是：'
- en: '`change`: This event is triggered whenever something happens that affects the
    result of `form.getValue()`.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`change`：每当发生影响`form.getValue()`结果的事件时，都会触发此事件。'
- en: '`focus`: This event is triggered whenever this form gains focus, that is, when
    the input of an editor within this form becomes `document.activeElement`.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`focus`：每当此表单获得焦点时，即当此表单内编辑器的输入成为`document.activeElement`时，都会触发此事件。'
- en: '`blur`: This event is triggered whenever this form loses focus, that is, when
    the input of an editor within this form stops being `document.activeElement`.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blur`：每当此表单失去焦点时，即当此表单内编辑器的输入停止成为`document.activeElement`时，都会触发此事件。'
- en: '`<key>:<event>`: the `change`, `focus`, or `blur` event is triggered for the
    form element specified by `key`.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<key>:<event>`：`change`、`focus`或`blur`事件会针对由`key`指定的表单元素触发。'
- en: '`Backbone.Form` extends `Backbone.Views` and implements `initialize()` and
    `render()` methods. In our child object, we need to use these methods, and so
    we need to make sure parent methods are executed, which is possible because of
    JavaScript''s `__super__` keyword. Then, apply the method.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backbone.Form`扩展了`Backbone.Views`并实现了`initialize()`和`render()`方法。在我们的子对象中，我们需要使用这些方法，因此我们需要确保父方法被执行，这是由于JavaScript的`__super__`关键字所实现的。然后，应用该方法。'
- en: See also
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Handling events of Backbone objects* recipe in [Chapter 5](ch05.html "Chapter 5. Events
    and Bindings"), *Events and Bindings*
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。事件和绑定")中*处理Backbone对象的事件*菜谱，*事件和绑定*'
- en: Customizing a form with the Bootstrap framework
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Bootstrap框架自定义表单
- en: 'Default backbone-form''s styles look pretty boring, and we may want to replace
    them with something cool like Bootstrap. In this case, our form will look much
    better, as shown in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的backbone-form样式看起来相当无聊，我们可能想用像Bootstrap这样的酷炫样式来替换它们。在这种情况下，我们的表单看起来会更好，如下面的截图所示：
- en: '![Customizing a form with the Bootstrap framework](img/2728OS_06_04.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bootstrap框架自定义表单](img/2728OS_06_04.jpg)'
- en: 'Here we also use a List element (aka editor) to allow the user to input invoice
    item details. When user clicks on the **Add** button, the following popup is generated
    and shown to the user:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们也使用一个列表元素（即编辑器）来允许用户输入发票项目详情。当用户点击**添加**按钮时，以下弹出窗口会生成并显示给用户：
- en: '![Customizing a form with the Bootstrap framework](img/2728OS_06_05.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bootstrap框架自定义表单](img/2728OS_06_05.jpg)'
- en: Getting ready
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Follow these steps to be prepared to use Bootstrap.js:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤准备使用Bootstrap.js：
- en: Download the Bootstrap framework archive from its GitHub page at [http://twitter.github.com/bootstrap](http://twitter.github.com/bootstrap),
    and extract it into the `lib` folder of the application.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从其GitHub页面[http://twitter.github.com/bootstrap](http://twitter.github.com/bootstrap)下载Bootstrap框架存档，并将其提取到应用程序的`lib`文件夹中。
- en: Remove the `default.css` style's reference from `index.html`.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`index.html`中移除`default.css`样式的引用。
- en: Include links to the Bootstrap files into `index.html`.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Bootstrap文件包含到`index.html`中。
- en: '[PRE36]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Include links to the `Backbone.Forms` extension, List editor, Bootstrap modal
    adapter, Bootstrap templates, and styles.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包含对`Backbone.Forms`扩展、列表编辑器、Bootstrap模态适配器、Bootstrap模板和样式的链接。
- en: '[PRE37]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Including Backbone extension into your project is described in detail in the
    *Extending an application with plugins* recipe in [Chapter 1](ch01.html "Chapter 1. Understanding
    Backbone"), *Understanding Backbone*.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章。理解Backbone")的*使用插件扩展应用程序*配方中详细描述了将Backbone扩展包含到您的项目中。
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to customize a form with the Bootstrap framework:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用Bootstrap框架自定义表单：
- en: 'Add the following line of code into `main.js` in order to set default modal
    adapter:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码行添加到`main.js`中，以设置默认模态适配器：
- en: '[PRE38]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Add invoice items field definitions into the Backbone schema.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将发票项目字段定义添加到Backbone模式中。
- en: '[PRE39]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: How it works...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We included files which override default backbone-forms templates and styles
    in order to achieve integration with the Bootstrap framework. Also, we used List
    element, which makes a special call to the Bootstrap modal adapter to show a nice
    modal popup.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们包含了覆盖默认backbone-forms模板和样式的文件，以实现与Bootstrap框架的集成。此外，我们还使用了列表元素，它会对Bootstrap模态适配器进行特殊调用，以显示一个漂亮的模态弹出窗口。
- en: There's more...
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: This section describes how to override form templates.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何覆盖表单模板。
- en: Overriding form templates
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 覆盖表单模板
- en: In the previous example, we included `lib/backbone-forms/distribution/templates/bootstrap.js`
    into our project to make sure proper templates are used in order to provide integration
    with the Bootstrap engine. In this file, the `setTemplates()` method of the `Backbone.Form`
    object is called to override default templates.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，我们将`lib/backbone-forms/distribution/templates/bootstrap.js`包含到我们的项目中，以确保使用适当的模板，以便与Bootstrap引擎提供集成。在此文件中，通过调用`Backbone.Form`对象的`setTemplates()`方法来覆盖默认模板。
- en: '[PRE40]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Mustache syntax is used for template definition, and the templates that can
    be overridden are: `form`, `fieldset`, `field`, `nestedField`, `list`, `listItem`,
    `date`, `dateTime`, and `''list.Modal''`.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 模板定义使用Mustache语法，可以覆盖的模板有：`form`、`fieldset`、`field`、`nestedField`、`list`、`listItem`、`date`、`dateTime`和`'list.Modal'`。
- en: To use a specific template that is different from the one defined for the form
    element, add a template, and pass its name in the template parameter in the schema
    definition.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用与为表单元素定义的模板不同的特定模板，添加一个模板，并在模式定义中的模板参数中传递其名称。
- en: '[PRE41]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: To use a specific template for the form, pass its name when creating a new form.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要为表单使用特定的模板，在创建新表单时传递其名称。
- en: '[PRE42]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: See also
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: You can check the official Bootstrap.js docs to learn more about it at [http://twitter.github.com/bootstrap](http://twitter.github.com/bootstrap).
    Also, look at the `lib/backbone-forms/distribution/templates/default.js` file
    to find out all the available templates which can be overridden.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过查看[http://twitter.github.com/bootstrap](http://twitter.github.com/bootstrap)上的官方Bootstrap.js文档来了解更多信息。还可以查看`lib/backbone-forms/distribution/templates/default.js`文件，以找出所有可覆盖的模板。
- en: Assembling layouts with LayoutManager
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LayoutManager组装布局
- en: '**Backbone.LayoutManager** is one of the most useful extensions for Backbone.js.
    It allows to build a layout out of panes easily and to get rid of many lines of
    code compared to using just Backbone views. LayoutManager also provides mechanisms
    to load templates from the main HTML file or external files.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**Backbone.LayoutManager**是Backbone.js最有用的扩展之一。它允许轻松构建由面板组成的布局，并且与仅使用Backbone视图相比，可以减少许多代码行。LayoutManager还提供了从主HTML文件或外部文件加载模板的机制。'
- en: Let's build an application which will have two panes. On the first pane, the
    user will see a list of invoices, and on the other pane he'll see invoice details.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建一个将有两个面板的应用程序。在第一个面板中，用户将看到发票列表，而在另一个面板中，他将看到发票详情。
- en: '![Assembling layouts with LayoutManager](img/2728OS_06_06.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![使用LayoutManager组装布局](img/2728OS_06_06.jpg)'
- en: By clicking on the invoice number from the first pane, our application will
    update the second pane immediately.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单击第一个面板中的发票号码，我们的应用程序将立即更新第二个面板。
- en: Getting ready
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can download Backbone.LayoutManager from its GitHub page at [https://github.com/tbranyen/backbone.layoutmanager](https://github.com/tbranyen/backbone.layoutmanager).
    To include LayoutManager into your project, save the `backbone.layoutmanager.js`
    file into the `lib` folder and include a reference to it in `index.html`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从其GitHub页面[https://github.com/tbranyen/backbone.layoutmanager](https://github.com/tbranyen/backbone.layoutmanager)下载Backbone.LayoutManager。要将LayoutManager包含到您的项目中，将`backbone.layoutmanager.js`文件保存到`lib`文件夹中，并在`index.html`中包含对其的引用。
- en: Including Backbone extension into your project is described in detail in the
    *Extending an application with plugins* recipe in [Chapter 1](ch01.html "Chapter 1. Understanding
    Backbone"), *Understanding Backbone*.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章。理解Backbone")的“使用插件扩展应用程序”食谱中详细描述了如何将Backbone扩展添加到您的项目中，*理解Backbone*。
- en: How to do it...
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to assemble layouts:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤组装布局：
- en: Make sure you have model and collection objects defined.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已定义模型和集合对象。
- en: '[PRE43]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Define the invoice list pane.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义发票列表面板。
- en: '[PRE44]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Define the invoice pane.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义发票面板。
- en: '[PRE45]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Define a router with routes and create the collection instance in its `initialize()`
    method.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个带有路由的router并在其`initialize()`方法中创建集合实例。
- en: '[PRE46]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Add a page callback to the router, which creates a `Backbone.Layout` object
    and renders it.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向路由器添加页面回调，它创建一个`Backbone.Layout`对象并将其渲染。
- en: '[PRE47]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Add templates to the `<head>` tag of the page element.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模板添加到页面元素的`<head>`标签中。
- en: '[PRE48]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: How it works...
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `Backbone.LayoutManager` object implements the template loader, the `render()`
    method, and provides many other cool features, which is typically done by the
    developer. In the views option, we can select which layout pane or Backbone view
    should be attached to the HTML elements that is specified in the main template
    for the layout.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backbone.LayoutManager`对象实现了模板加载器、`render()`方法，并提供了许多其他酷炫的功能，这通常是开发者所做的事情。在视图选项中，我们可以选择将哪个布局面板或Backbone视图附加到主模板中指定的HTML元素。'
- en: See also
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Please refer to the LayoutManager docs to learn more about the extension at
    [https://github.com/tbranyen/backbone.layoutmanager/wiki](https://github.com/tbranyen/backbone.layoutmanager/wiki).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅LayoutManager文档以了解有关扩展的更多信息，[https://github.com/tbranyen/backbone.layoutmanager/wiki](https://github.com/tbranyen/backbone.layoutmanager/wiki)。
- en: Building a semantic and an easily styleable data grid
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建语义化和易于样式的数据网格
- en: In your application, you may want to output the data as a sortable, filterable,
    and editable grid, which is not an easy task to do from scratch. In this recipe,
    we will learn a quick solution for that task using Backgrid.js, a powerful extension
    for building data grids in Backbone applications.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的应用程序中，您可能希望以可排序、可过滤和可编辑的网格形式输出数据，这直接从头开始做并不容易。在本食谱中，我们将学习使用Backgrid.js，Backbone应用程序构建数据网格的强大扩展，来快速解决这个问题。
- en: 'In this application, we are going to create a simple grid using the Backgrid
    example. It will look like the following screenshot:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在此应用程序中，我们将使用Backgrid示例创建一个简单的网格。它将看起来像以下截图：
- en: '![Building a semantic and an easily styleable data grid](img/2728OS_06_07.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![构建语义化和易于样式的数据网格](img/2728OS_06_07.jpg)'
- en: When a user clicks on the column header, the grid is sorted by this column.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击列标题时，网格将按此列排序。
- en: '![Building a semantic and an easily styleable data grid](img/2728OS_06_17.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![构建语义化和易于样式的数据网格](img/2728OS_06_17.jpg)'
- en: If a user double-clicks on a specific cell, that cell is replaced by an input
    element, where a user can enter a new value.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户双击特定单元格，则该单元格将被输入元素替换，用户可以在其中输入新值。
- en: '![Building a semantic and an easily styleable data grid](img/2728OS_06_19.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![构建语义化和易于样式的数据网格](img/2728OS_06_19.jpg)'
- en: Getting ready
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Follow these steps to be prepared to use Backgrid extension:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤准备使用Backgrid扩展：
- en: Download Backgrid.js extension from its official web site at [http://backgridjs.com/](http://backgridjs.com/).
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从其官方网站[http://backgridjs.com/](http://backgridjs.com/)下载Backgrid.js扩展。
- en: Include Backgrid.js into your project by extracting this extension into the
    `lib/backgrid` folder.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将此扩展提取到`lib/backgrid`文件夹中来将Backgrid.js包含到您的项目中。
- en: Include references to the extension files into `index.html`.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.html`中包含对扩展文件的引用。
- en: '[PRE49]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Including Backbone extension into your project is described in detail in the
    *Extending an application with plugins* recipe in [Chapter 1](ch01.html "Chapter 1. Understanding
    Backbone"), *Understanding Backbone*.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章。理解Backbone")的“使用插件扩展应用程序”食谱中详细描述了如何将Backbone扩展添加到您的项目中，*理解Backbone*。
- en: How to do it...
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to build a grid:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤构建网格：
- en: Make sure you have a model and collection objects defined.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您已定义了模型和集合对象。
- en: '[PRE50]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Create a collection instance.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个集合实例。
- en: '[PRE51]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Define grid column settings.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义网格列设置。
- en: '[PRE52]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Initialize a new grid instance.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化一个新的网格实例。
- en: '[PRE53]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Add models into the collection.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型添加到集合中。
- en: '[PRE54]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Start the application.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动应用程序。
- en: '[PRE55]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: How it works...
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`Backgrid.Grid` extends `Backbone.View` so you can create its instance and
    pass column settings keyed by the `columns` parameter. Column settings are defined
    as an array, and each row has the following properties:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`Backgrid.Grid` 扩展了 `Backbone.View`，因此您可以创建其实例并传递通过 `columns` 参数键控的列设置。列设置定义为数组，每一行具有以下属性：'
- en: '`name`: It''s the name of the model property.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：它是模型属性的名称。'
- en: '`label`: It''s the label of the heading column.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label`：它是标题列的标签。'
- en: '`sortable`: It returns a boolean value to check whether a column is sortable.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sortable`：它返回一个布尔值以检查列是否可排序。'
- en: '`editable`: It returns a boolean value to check whether a column is editable.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`editable`：它返回一个布尔值以检查列是否可编辑。'
- en: '`cell`: It''s the cell type, which could be one of these: `datetime`, `date`,
    `time`, `number`, `integer`, `string`, `uri`, `email`, `boolean`, and `select`.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cell`：它是单元格类型，可以是以下之一：`datetime`、`date`、`time`、`number`、`integer`、`string`、`uri`、`email`、`boolean`
    和 `select`。'
- en: If you need to specify additional parameters for a cell type, you can extend
    the corresponding class and pass it to the `cell` property.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要为单元格类型指定额外的参数，您可以扩展相应的类并将其传递给 `cell` 属性。
- en: '[PRE56]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: There's more...
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this section, we are going to use several extensions for Backgrid, which
    can add extra features to our grid.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用几个 Backgrid 扩展，这些扩展可以为我们的网格添加额外功能。
- en: Performing bulk operations on grid models
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在网格模型上执行批量操作
- en: 'We are going to add an extra column to our grid, which will contain checkboxes
    allowing users to select specific models in a grid and to perform bulk operations
    on them, for example, deleting. The following screenshot shows what our table
    will look like:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向我们的网格添加一个额外的列，该列将包含复选框，允许用户在网格中选择特定的模型并对其执行批量操作，例如删除。以下截图显示了我们的表格将看起来像什么：
- en: '![Performing bulk operations on grid models](img/2728OS_06_20.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![在网格模型上执行批量操作](img/2728OS_06_20.jpg)'
- en: 'To complete this task, follow these steps:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此任务，请按照以下步骤操作：
- en: Include the SelectAll extension files into `index.html`.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 SelectAll 扩展文件包含到 `index.html` 中。
- en: '[PRE57]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Wrap grid into `TableView`.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将网格包裹在 `TableView` 中。
- en: '[PRE58]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Add the checkbox's column in the `initalize()` method.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `initialize()` 方法中添加复选框的列。
- en: '[PRE59]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Append the delete button in the `render()` method.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `render()` 方法中追加删除按钮。
- en: '[PRE60]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Handle the button click event.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理按钮点击事件。
- en: '[PRE61]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Create a new `TableView` instance and append it into the `body` element.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `TableView` 实例并将其追加到 `body` 元素中。
- en: '[PRE62]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Performing records filtering
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 执行记录过滤
- en: To allow users to filter records, we are going to use the Select extension and
    the Lunr.js library, which is shipped with the Backgrid package. Also, we will
    apply Bootstrap styles to make the search box look neat.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许用户过滤记录，我们将使用 Select 扩展和 Lunr.js 库，这些库包含在 Backgrid 包中。此外，我们将应用 Bootstrap
    样式以使搜索框看起来整洁。
- en: '![Performing records filtering](img/2728OS_06_11.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![执行记录过滤](img/2728OS_06_11.jpg)'
- en: 'Follow these steps to perform records filtering:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤执行记录过滤：
- en: Include Select extension, Lunr library, and Boostrap files into `index.html`.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Select 扩展、Lunr 库和 Bootstrap 文件包含到 `index.html` 中。
- en: '[PRE63]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Wrap grid into `TableView` as we did in the *Performing bulk operations on grid
    models* section.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如我们在 *在网格模型上执行批量操作* 部分中所做的那样，将网格包裹在 `TableView` 中。
- en: Initialize `ClientSideFilter` in the `TableView.initalize()` method.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `TableView.initalize()` 方法中初始化 `ClientSideFilter`。
- en: '[PRE64]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Prepend the table with `ClientSideFilter` in the `TableView.render()` method.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `TableView.render()` 方法中预置 `ClientSideFilter`。
- en: '[PRE65]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: See also
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Backgrid extension is actually very vast to be fully considered in this recipe.
    So, you can check the official Backgrid documentation at [http://backgridjs.com/](http://backgridjs.com/).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: Backgrid 扩展实际上非常广泛，无法在本食谱中完全考虑。因此，您可以查看官方 Backgrid 文档，网址为 [http://backgridjs.com/](http://backgridjs.com/)。
- en: Drawing on the HTML5 canvas
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 HTML5 canvas 上绘制
- en: Sometimes, we may want to render our view on the HTML5 canvas element, which
    can give more freedom and flexibility. The canvas can be used for rendering graphs
    as well as for creating an online game.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可能希望将视图渲染到 HTML5 canvas 元素上，这可以提供更多的自由和灵活性。canvas 可以用于渲染图表，也可以用于创建在线游戏。
- en: 'In this example, we are going to visualize the collection of models on the
    HTML5 canvas. The output of our code will look like the following screenshot:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将可视化HTML5画布上的模型集合。我们代码的输出将类似于以下截图：
- en: '![Drawing on the HTML5 canvas](img/2728OS_06_12.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![在HTML5画布上绘制](img/2728OS_06_12.jpg)'
- en: Getting ready
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we are going to take an example from the *Splitting a view into
    subviews* recipe in [Chapter 4](ch04.html "Chapter 4. Views"), *Views*, to change
    `InvoiceItemView` and `InvoiceItemListView`.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将从[第4章](ch04.html "第4章。视图")中“将视图拆分为子视图”的食谱中取一个例子，以改变`InvoiceItemView`和`InvoiceItemListView`。
- en: How to do it...
  id: totrans-310
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: '[PRE66]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Set box boundaries in the `initialize()` method of `InvoiceItemView`.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`InvoiceItemView`的`initialize()`方法中设置矩形框的边界。
- en: '[PRE67]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Draw a box and output model values on `ctx`, the canvas context, in the `render()`
    method of `InvoiceItemView`.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`InvoiceItemView`的`render()`方法中绘制一个矩形框，并在`ctx`（画布上下文）上输出模型值。
- en: '[PRE68]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Define `InvoiceItemListView`, which creates an empty canvas and triggers model
    view rendering iteratively, passing `ctx` as an option.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义`InvoiceItemListView`，它创建一个空白的画布并触发模型视图的迭代渲染，同时传递`ctx`作为选项。
- en: '[PRE69]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: How it works...
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`InvoiceItemListView` defines canvas as a main view element and sets its boundaries.
    In the `render()` method, we get `ctx`, the context object of the canvas, by calling
    the `getContext()` method. Context object allows us to draw on the canvas by running
    special HTML5 methods.'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`InvoiceItemListView`将画布定义为主要的视图元素，并设置其边界。在`render()`方法中，我们通过调用`getContext()`方法获取`ctx`，即画布的上下文对象。上下文对象允许我们通过运行特殊的HTML5方法在画布上绘制。'
- en: By passing `ctx` and canvas dimensions to the subview as options, we allow them
    to be used for text and shapes output to the canvas.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将`ctx`和画布尺寸作为选项传递给子视图，我们允许它们用于输出到画布上的文本和形状。
- en: See also
  id: totrans-322
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考以下内容
- en: HTML 5 canvas reference could be found at [http://www.w3schools.com/html/html5_canvas.asp](http://www.w3schools.com/html/html5_canvas.asp).
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 5画布参考可以在[http://www.w3schools.com/html/html5_canvas.asp](http://www.w3schools.com/html/html5_canvas.asp)找到。
