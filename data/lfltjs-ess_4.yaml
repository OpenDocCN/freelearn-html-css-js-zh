- en: Chapter 4. Creating Custom Markers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。创建自定义标记
- en: In [Chapter 3](ch03.html "Chapter 3. Creating Heatmaps and Choropleth Maps"),
    *Creating Heatmaps and Choropleth Maps*, you learned how to style your maps to
    create a heatmap and a choropleth map. Leaflet allows you to further customize
    the style of your map by modifying the default markers. In this chapter, you will
    learn how to style markers by creating custom marker icons. You will also learn
    about the available marker plugins for styles and effects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](ch03.html "第3章。创建热图和面状图")中，您学习了如何通过修改默认标记来进一步自定义地图样式，以创建热图和面状图。Leaflet允许您通过创建自定义标记图标来进一步自定义地图样式。您还将了解可用于样式和效果的可用标记插件。
- en: Creating a custom marker
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义标记
- en: 'In Leaflet, a marker is made from two images: an image that represents the
    marker and a second image that serves as the shadow to create depth. When you
    download Leaflet, there is an `images` folder. This folder contains the default
    marker: the blue pin that you have seen in your maps and a small shadow image.
    The images are named `marker-icon.png` and `marker-shadow.png`. The default marker
    and shadow are shown in the following screenshots:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在Leaflet中，标记由两个图像组成：一个表示标记的图像和一个作为阴影以创建深度的第二个图像。当您下载Leaflet时，有一个`images`文件夹。这个文件夹包含默认标记：您在地图上看到的蓝色图钉以及一个小阴影图像。这些图像被命名为`marker-icon.png`和`marker-shadow.png`。默认标记和阴影在以下屏幕截图中显示：
- en: '![Creating a custom marker](img/4812OS_04_01.jpg)![Creating a custom marker](img/4812OS_04_02.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义标记](img/4812OS_04_01.jpg)![创建自定义标记](img/4812OS_04_02.jpg)'
- en: Preparing your workspace in GIMP
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在GIMP中准备您的作图空间
- en: To create your own custom marker, you will need to draw an image in a painting
    application. In this example, you will use the free **GNU Image Manipulation Program**
    (**GIMP**). GIMP is a powerful imaging program that is similar to Adobe Photoshop
    which runs on most operating systems and is completely free. To download GIMP,
    go to [http://www.gimp.org/downloads/](http://www.gimp.org/downloads/) and click
    on **Download GIMP 2.8.10**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建您自己的自定义标记，您需要在绘画应用程序中绘制一个图像。在这个例子中，您将使用免费的**GNU图像处理程序**（**GIMP**）。GIMP是一个功能强大的图像处理程序，类似于Adobe
    Photoshop，可以在大多数操作系统上运行，并且完全免费。要下载GIMP，请访问[http://www.gimp.org/downloads/](http://www.gimp.org/downloads/)并点击**下载GIMP
    2.8.10**。
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You do not need to select a 32- or 64-bit version. GIMP includes both and will
    determine the appropriate version when the installer runs.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您不需要选择32位或64位版本。GIMP包括两者，安装程序运行时会确定适当的版本。
- en: 'Once GIMP is installed, launch the application. The application contains three
    windows: two panels on the left- and right-hand side of the screen and the main
    window in the center. You can combine the three windows into a standard single
    window application by navigating to **Windows** | **Single-Window Mode**. To create
    a new image file, navigate to **File** | **New...**. You will be prompted with
    a new image dialog box. Enter a width and height for the icon image. If the advanced
    options are not expanded, click on the menu to expand the window. You can enter
    a resolution or accept the default. The **Fill with** option is the most important.
    You must select **Transparency** from the dropdown. If you do not select **Transparency**,
    your icon will be a square or rectangle with a background color. This will not
    look flattering on your map. The dialog box should now look like the following
    screenshot:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 安装GIMP后，启动应用程序。应用程序包含三个窗口：屏幕左侧和右侧的两个面板以及中心的主窗口。您可以通过导航到**窗口** | **单窗口模式**将三个窗口合并为一个标准的单窗口应用程序。要创建一个新的图像文件，请导航到**文件**
    | **新建...**。您将看到一个新图像对话框。输入图标图像的宽度和高度。如果高级选项未展开，请点击菜单以展开窗口。您可以输入分辨率或接受默认值。**填充**选项是最重要的。您必须从下拉菜单中选择**透明度**。如果您不选择**透明度**，则您的图标将是一个带有背景颜色的正方形或矩形。这不会在您的地图上看起来很吸引人。对话框现在应该看起来像以下截图：
- en: '![Preparing your workspace in GIMP](img/4812OS_04_03.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![在GIMP中准备您的作图空间](img/4812OS_04_03.jpg)'
- en: Drawing and saving your image
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制并保存您的图像
- en: Now that the canvas is set up, you can draw your image. How we draw the image
    is beyond the scope of this book.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在画布已经设置好了，您可以绘制您的图像。我们如何绘制图像超出了本书的范围。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you would like to learn about GIMP, check out *Gimp 2.6 Cookbook*, *Juan
    Manuel Ferreyra*, *Packt Publishing*, available at [http://www.packtpub.com/gimp-2-6-cookbook/book](http://www.packtpub.com/gimp-2-6-cookbook/book).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解GIMP，可以查看*Gimp 2.6 烹饪书*，作者*胡安·曼努埃尔·费雷拉*，*Packt 出版公司*，可在[http://www.packtpub.com/gimp-2-6-cookbook/book](http://www.packtpub.com/gimp-2-6-cookbook/book)找到。
- en: 'If you are comfortable drawing in GIMP, create an image that can be used as
    your icon. Once you have created the image, navigate to **File** | **Export As...**.
    If you try to use the **Save** or **Save As…** options, you will not get the options
    for PNG. The **Export Image** dialog box allows you to choose the filename and
    where you would like to save the file. On the bottom-left corner of the dialog,
    expand the menu labeled **Select File Type (By Extension)**. Scroll down to **PNG
    image** and click on **Export**. You will be prompted with the **Export Image
    as PNG** dialog box. You must check the **Save color values from transparent pixels**
    option. The options form should look like the one shown in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在GIMP中绘制感到舒适，创建一个可以用作图标的图片。一旦创建图片，导航到**文件** | **导出为...**。如果您尝试使用**保存**或**另存为…**选项，您将不会得到PNG格式的选项。**导出图片**对话框允许您选择文件名和您希望保存文件的位置。在对话框的左下角，展开标有**选择文件类型（按扩展名）**的菜单。向下滚动到**PNG图片**并点击**导出**。您将看到一个**导出图片为PNG**的对话框。您必须勾选**保存透明像素的颜色值**选项。选项表单应类似于以下截图所示：
- en: '![Drawing and saving your image](img/4812OS_04_04.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![绘制并保存您的图片](img/4812OS_04_04.jpg)'
- en: 'Click on the **Export** button to save the image. The following screenshot
    is the finished icon:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**导出**按钮保存图片。以下截图是完成后的图标：
- en: '![Drawing and saving your image](img/4812OS_04_05.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![绘制并保存您的图片](img/4812OS_04_05.jpg)'
- en: Drawing the marker shadow
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制标记阴影
- en: 'Create another new image in GIMP, but select a larger width and smaller height:
    60 x 40\. The shadow will need to start at the same point as the tip of the marker
    and extend at approximately 45 degrees to the right. In GIMP, you can move the
    cursor over the image and see the pixel coordinates of the cursor. The shadow
    image is drawn horizontally at 20 pixels. The image in the following screenshot
    shows you the cursor at the tip of the icon and the coordinates in the lower-left
    corner of the window:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在GIMP中创建另一个新的图片，但选择更大的宽度和较小的长度：60 x 40。阴影需要从标记尖端开始，并向右大约45度延伸。在GIMP中，您可以将光标移到图片上，并看到光标的像素坐标。阴影图片在20像素处水平绘制。以下截图显示了图标尖端的光标和窗口左下角的坐标：
- en: '![Drawing the marker shadow](img/4812OS_04_06.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![绘制标记阴影](img/4812OS_04_06.jpg)'
- en: 'On the shadow image, start shading from pixel 20 towards the upper-right corner
    of the image. The finished shadow image will look something like what is shown
    in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在阴影图片上，从像素20开始向图片右上角进行着色。完成后的阴影图片将类似于以下截图所示：
- en: '![Drawing the marker shadow](img/4812OS_04_07.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![绘制标记阴影](img/4812OS_04_07.jpg)'
- en: Using an image as an icon
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用图片作为图标
- en: You can also use an image as an icon. The image need not be PNG or have a transparent
    background. You can correct all of these things in GIMP. In GIMP, navigate to
    **File** | **Open** and select your image. The image in this example is JPG with
    a white background.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用图片作为图标。图片不一定是PNG格式或具有透明背景。您可以在GIMP中纠正所有这些问题。在GIMP中，导航到**文件** | **打开**并选择您的图片。本例中的图片是带有白色背景的JPG格式。
- en: In the **Layers** panel, you should see a single layer with a picture of your
    image on it. Right-click on the layer and select **Add Alpha Channel**.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图层**面板中，您应该看到一个包含您图片的单个图层。右键点击图层并选择**添加Alpha通道**。
- en: '![Using an image as an icon](img/4812OS_04_08.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![将图片用作图标](img/4812OS_04_08.jpg)'
- en: You can now select the erase tool or the magic wand and remove the background
    color. Export the image as instructed in the previous section. You will still
    need to draw a shadow for your marker icon. Follow the same steps as the shadow
    in the previous example and save the image.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以选择橡皮擦工具或魔术棒来移除背景颜色。按照上一节中的说明导出图片。您仍然需要为您的标记图标绘制阴影。按照前一个示例中的阴影步骤进行，并保存图片。
- en: Now that you have two images—the icon and the shadow—it is time to use them
    in your Leaflet map.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经有了两个图片——图标和阴影——是时候在您的Leaflet地图中使用它们了。
- en: Using a custom marker in Leaflet
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Leaflet中使用自定义标记
- en: 'To create a marker icon in Leaflet, you need to create an instance of the `L.icon`
    class. The `L.icon` class takes 10 options, as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Leaflet中创建标记图标，你需要创建`L.icon`类的实例。`L.icon`类接受10个选项，如下所示：
- en: '`iconUrl`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iconUrl`'
- en: '`iconRetinaUrl`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iconRetinaUrl`'
- en: '`iconSize`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iconSize`'
- en: '`iconAnchor`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iconAnchor`'
- en: '`shadowUrl`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shadowUrl`'
- en: '`shadowRetinaUrl`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shadowRetinaUrl`'
- en: '`shadowSize`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shadowSize`'
- en: '`shadowAnchor`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shadowAnchor`'
- en: '`popupAnchor`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`popupAnchor`'
- en: '`className`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`className`'
- en: 'The only required option is `iconUrl`. In this example, you will ignore the
    retina images and the class name. Open `LeafletEssentials.html` and add the following
    code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一必需的选项是`iconUrl`。在这个例子中，你将忽略视网膜图像和类名。打开`LeafletEssentials.html`并添加以下代码：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding code sets the options. The `iconUrl` option directs the URL to
    the icon image and the `shadowUrl` option directs the URL to the shadow image.
    The `iconSize` and `shadowSize` options require the dimensions of the images in
    the format of width by height.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码设置了选项。`iconUrl`选项将URL指向图标图像，而`shadowUrl`选项将URL指向阴影图像。`iconSize`和`shadowSize`选项需要以宽度乘以高度格式的图像尺寸。
- en: The `iconAnchor` options set the point at which the marker and icon touch the
    map and where the pop up touches the icon. The marker had a point at the horizontal
    pixel 20, so this will be the anchor plus the height of the image in pixels. The
    shadow was drawn at the point of the marker, so its anchor will be at 20 and its
    height will be 40 pixels. You want the pop up to be drawn at the top in the center
    of the marker, so you must set its anchor accordingly.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`iconAnchor`选项设置标记和图标接触地图的点以及弹出窗口接触图标的位置。标记在水平像素20处有一个点，因此这将是以锚点加上图像的像素高度。阴影是在标记的点处绘制的，因此其锚点将是20，其高度将是40像素。你希望弹出窗口在标记的顶部中心绘制，因此你必须相应地设置其锚点。'
- en: The `popupAnchor` option is set relative to the `iconAnchor` option. The icon
    point is centered horizontally, so the pop-up anchor will be 0 pixels, making
    it anchored at 20\. To place the anchor at the top of the marker, you subtract
    pixels. Choosing a value of -53 for the pop-up anchor opens the pop up just above
    the icon.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`popupAnchor`选项相对于`iconAnchor`选项设置。图标点水平居中，因此弹出窗口锚点将是0像素，使其锚定在20像素处。要将锚点放置在标记的顶部，你减去像素。选择-53作为弹出窗口锚点将弹出窗口正好放在图标上方。'
- en: '![Using a custom marker in Leaflet](img/4812OS_04_21.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![在Leaflet中使用自定义标记](img/4812OS_04_21.jpg)'
- en: 'Next, you need to create a marker and tell it to use your new icon. The following
    code will do just that:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要创建一个标记并告诉它使用你创建的新图标。以下代码将做到这一点：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In [Chapter 1](ch01.html "Chapter 1. Creating Maps with Leaflet"), *Creating
    Maps with Leaflet*, you created markers with several options—one being `draggable:true`.
    The marker class also takes an icon as an option. In the preceding code, the `icon`
    option takes the name of an `L.Icon` object.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章. 使用Leaflet创建地图") *使用Leaflet创建地图* 中，你使用几个选项创建标记——其中一个选项是`draggable:true`。标记类也接受一个图标作为选项。在前面的代码中，`icon`选项接受一个`L.Icon`对象的名称。
- en: 'Save `LeafletEssentials.html` and open it in your browser. You should see a
    map similar to the one shown in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 保存`LeafletEssentials.html`并在浏览器中打开它。你应该看到一个与以下截图类似的地图：
- en: '![Using a custom marker in Leaflet](img/4812OS_04_09.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![在Leaflet中使用自定义标记](img/4812OS_04_09.jpg)'
- en: Defining an L.Icon class
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义L.Icon类
- en: 'You can also extend the `L.Icon` class to create your own marker class. This
    allows you to create markers in a variety of colors and only specify the size
    and anchor options once. This example will look very similar to the previous example.
    Add the following code to your `LeafletEssentials.html` file:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以扩展`L.Icon`类来创建你自己的标记类。这允许你创建各种颜色的标记，并且只需指定一次大小和锚点选项。这个例子将非常类似于上一个例子。将以下代码添加到你的`LeafletEssentials.html`文件中：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding code looks almost identical to the code in the previous example,
    except for the following differences:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码看起来几乎与上一个示例中的代码相同，除了以下差异：
- en: The first line, which instead of creating a new `L.icon` class, extends it
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行，它不是创建一个新的`L.icon`类，而是扩展它
- en: The options are wrapped in an object in line two
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项在第二行被包裹在一个对象中
- en: There is no `iconUrl` option
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有提供`iconUrl`选项
- en: 'By wrapping the options in an object, you can pass additional options when
    you create the marker. Add the following code to the `LeafletEssentials.html`
    file:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将选项包裹在一个对象中，你可以在创建标记时传递额外的选项。将以下代码添加到`LeafletEssentials.html`文件中：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding code sets the `iconUrl` option for each new `icon` object. Now,
    in one line of code, you have a red and blue icon. You can now assign the icon
    to a marker, as shown in the following code:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 上一段代码为每个新的 `icon` 对象设置了 `iconUrl` 选项。现在，在一行代码中，您就拥有了一个红色和蓝色的图标。您现在可以将图标分配给标记，如下面的代码所示：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the preceding code, each marker is assigned a different color icon. The
    result is shown in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一段代码中，每个标记被分配了不同颜色的图标。结果如下面的截图所示：
- en: '![Defining an L.Icon class](img/4812OS_04_10.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![定义 L.Icon 类](img/4812OS_04_10.jpg)'
- en: Using predefined markers with plugins
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用插件预定义标记
- en: 'In the first three chapters, you used the default Leaflet marker. In this chapter,
    you have just learned how to draw your own or use a pre-existing image. Rolling
    your own is not always practical, especially if you are not proficient in drawing.
    In this section, you will learn about two plugins that have stylish markers that
    you can customize and use in your Leaflet map: Maki markers and Bootstrap/Awesome
    markers.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在前三个章节中，您使用了默认的 Leaflet 标记。在本章中，您刚刚学习了如何绘制自己的或使用现有的图像。自己绘制并不总是实用的，尤其是如果您不擅长绘画。在本节中，您将了解两个插件，它们提供了您可以自定义并用于
    Leaflet 地图的时尚标记：Maki 标记和 Bootstrap/Awesome 标记。
- en: Using Mapbox Maki markers
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Mapbox Maki 标记
- en: Mapbox is a company that provides a mapping platform and tools. Its icons have
    been made available through the `Leaflet.Makimarkers` plugin. You can download
    the plugin at [https://github.com/jseppi/Leaflet.MakiMarkers](https://github.com/jseppi/Leaflet.MakiMarkers).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Mapbox 是一家提供地图平台和工具的公司。其图标已通过 `Leaflet.MakiMarkers` 插件提供。您可以在 [https://github.com/jseppi/Leaflet.MakiMarkers](https://github.com/jseppi/Leaflet.MakiMarkers)
    下载此插件。
- en: Note
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can learn about Mapbox by visiting their website at [http://mapbox.com](http://mapbox.com).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问他们的网站 [http://mapbox.com](http://mapbox.com) 了解 Mapbox。
- en: 'Maki markers is an open source icon library with over 100 available markers.
    You can find a full list of their names in the `Leaflet.MakiMarkers.js` file or
    go to the website at [https://www.mapbox.com/maki/](https://www.mapbox.com/maki/).
    The following screenshot shows you all of the icons:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Maki 标记是一个拥有超过 100 个可用标记的开源图标库。您可以在 `Leaflet.MakiMarkers.js` 文件中找到它们的完整名称列表，或访问网站
    [https://www.mapbox.com/maki/](https://www.mapbox.com/maki/)。以下截图显示了所有图标：
- en: '![Using Mapbox Maki markers](img/4812OS_04_11.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Mapbox Maki 标记](img/4812OS_04_11.jpg)'
- en: 'The icons in the preceding screenshot are placed on a colored marker symbol.
    Using the markers in your map requires only two lines of code and three options.
    The following steps will help you create a Maki marker and place it on your map:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图中的图标放置在彩色标记符号上。在您的地图中使用标记只需要两行代码和三个选项。以下步骤将帮助您创建 Maki 标记并将其放置在您的地图上：
- en: 'Add a reference to the JavaScript file. No CSS file is required with this plugin:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对 JavaScript 文件的引用。此插件不需要 CSS 文件：
- en: '[PRE5]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create an icon. You have to choose three options: the icon image you want to
    use, the hex color value of the marker, and the size (`s`, `m`, `l`):'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个图标。您必须选择三个选项：您想要使用的图标图像、标记的十六进制颜色值以及大小（`s`、`m`、`l`）：
- en: '[PRE6]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add the icon to a marker and add the marker to the map:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图标添加到标记中，并将标记添加到地图中：
- en: '[PRE7]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When you select a color, there will be an outline in a lighter shade of the
    same color. The following screenshot shows you the results of the preceding code:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择一种颜色时，将会有相同颜色的浅色轮廓。以下截图显示了上一段代码的结果：
- en: '![Using Mapbox Maki markers](img/4812OS_04_12.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Mapbox Maki 标记](img/4812OS_04_12.jpg)'
- en: Using Bootstrap and Font Awesome markers
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Bootstrap 和 Font Awesome 标记
- en: Another plugin for Leaflet that allows you to use predefined markers is `Leaflet.awesome.markers`.
    This plugin allows you to choose the Twitter Bootstrap markers or the Font Awesome
    markers. If you can't choose, you can always use both. The different libraries
    provide different icons to your markers and slightly different functionalities.
    Which one you use is a personal preference. You can download the plugin at [https://github.com/lvoogdt/Leaflet.awesome-markers](https://github.com/lvoogdt/Leaflet.awesome-markers).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个允许您使用预定义标记的 Leaflet 插件是 `Leaflet.awesome.markers`。此插件允许您选择 Twitter Bootstrap
    标记或 Font Awesome 标记。如果您无法选择，您始终可以使用两者。不同的库为您的标记提供不同的图标和略微不同的功能。您使用哪个是个人偏好。您可以在
    [https://github.com/lvoogdt/Leaflet.awesome-markers](https://github.com/lvoogdt/Leaflet.awesome-markers)
    下载此插件。
- en: 'Using `Leaflet.awesome.markers` is almost the same procedure as you used in
    the Maki marker example. You can perform the following steps:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `Leaflet.awesome.markers` 的过程几乎与您在 Maki 标记示例中使用的相同。您可以执行以下步骤：
- en: 'Add a reference to Twitter Bootstrap or Font Awesome or both. Also, add a reference
    to the CSS and JavaScript for `Leaflet.awesome.markers`:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对Twitter Bootstrap或Font Awesome或两者的引用。还要添加对`Leaflet.awesome.markers`的CSS和JavaScript的引用：
- en: '[PRE8]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create a Twitter Bootstrap marker and add it to the map. The Bootstrap marker
    is the default. You only need to set the icon image and color options. Create
    the marker and add it to the map:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个Twitter Bootstrap标记并将其添加到地图中。Bootstrap标记是默认的。你只需要设置图标图像和颜色选项。创建标记并将其添加到地图中：
- en: '[PRE9]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a Font Awesome marker and add it to the map. Since Bootstrap is the
    default, you need to use the `prefix` option with the value of `fa` for Font Awesome.
    This example also uses the `spin:true` option to create an animated spinning marker.
    Create the marker and add it to the map:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个Font Awesome标记并将其添加到地图中。由于Bootstrap是默认的，你需要使用`prefix`选项并设置值为`fa`来使用Font
    Awesome。此示例还使用了`spin:true`选项来创建一个旋转的动画标记。创建标记并将其添加到地图中：
- en: '[PRE10]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The preceding code will produce the map shown in the following screenshot:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将生成以下截图所示的地图：
- en: '![Using Bootstrap and Font Awesome markers](img/4812OS_04_13.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bootstrap和Font Awesome标记](img/4812OS_04_13.jpg)'
- en: You might not always have the time to create your own markers, and when you
    have the option to use icons by Mapbox, Twitter, or Font Awesome, why reinvent
    the wheel? Take advantage of what has already been done, and do it extremely well.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能没有足够的时间来创建自己的标记，并且当你有使用Mapbox、Twitter或Font Awesome图标的选择时，为什么还要重新发明轮子呢？利用已经完成的工作，并且做得非常好。
- en: Clustering markers with Leaflet.markercluster
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Leaflet.markercluster进行标记簇
- en: As you create more maps, you will eventually run in to a dataset that is thousands
    of points. Displaying 10,000 points on a map results in a slow load time, lagging
    animation on zooming and panning, and makes it hard for the user to select a single
    marker or to make sense of the data. Clustering allows you to group markers into
    clusters—single points that expand as the zoom level increases. This way, you
    can get a sense of the magnitude of data without being visually overwhelmed by
    the sheer number of points. If you need to see a single point, you can zoom in
    to the region or point of interest. `Leaflet.markercluster` is a fast and powerful
    cluster implementation that is also visually appealing.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你创建更多的地图，你最终会遇到包含数千个点的数据集。在地图上显示10,000个点会导致加载时间慢，缩放和平移时动画滞后，并且使得用户难以选择单个标记或理解数据。簇功能允许你将标记分组到簇中——随着缩放级别的增加而展开的单个点。这样，你可以获得数据规模的感觉，而不会因为点的数量众多而感到视觉上被淹没。如果你需要查看单个点，你可以放大到感兴趣的区域或点。`Leaflet.markercluster`是一个快速且功能强大的簇实现，同时也具有视觉吸引力。
- en: Note
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can download this plugin at [https://github.com/Leaflet/Leaflet.markercluster](https://github.com/Leaflet/Leaflet.markercluster).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[https://github.com/Leaflet/Leaflet.markercluster](https://github.com/Leaflet/Leaflet.markercluster)下载此插件。
- en: Coding your first cluster map
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写你的第一个簇地图
- en: 'A marker cluster is just another example of a layer in Leaflet. So, creating
    one should look very familiar to you. You need to perform the following steps:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 标记簇只是Leaflet中层的另一个例子。因此，创建一个标记簇应该对你来说非常熟悉。你需要执行以下步骤：
- en: 'Using `LeafletEssentials.html`, add a reference to the `Leaflet.markercluster`
    CSS files and the JS file, as shown in the following code:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`LeafletEssentials.html`，添加对`Leaflet.markercluster` CSS文件和JS文件的引用，如下面的代码所示：
- en: '[PRE11]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can add a series of markers to the layer, but since you will be loading
    723 points, you will use a JS file with the data inside. The data can have additional
    attributes. In this example, there is a link to an image file. Add a reference
    to the JS file that contains the data:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将一系列标记添加到层中，但由于你将加载723个点，你将使用包含数据的JS文件。数据可以具有额外的属性。在这个例子中，有一个指向图像文件的链接。添加对包含数据的JS文件的引用：
- en: '[PRE12]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Since you now know how to create custom marker icons, the following code creates
    an icon class and an icon that can be used when the clusters expand:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于你现在知道如何创建自定义标记图标，以下代码创建了一个图标类和一个在簇展开时可以使用的图标：
- en: '[PRE13]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, create a `markercluster` layer by creating an instance of the `MarkerClusterGroup`
    class. Set the `showCoverageOnHover` option to `false`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过创建`MarkerClusterGroup`类的实例来创建一个`markercluster`层。将`showCoverageOnHover`选项设置为`false`：
- en: '[PRE14]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To add markers to the group, you need a function that uses the array from the
    data file to loop through each data point and add the latitude, longitude, and
    any other attributes you want to use in the pop up to a marker. The loop creates
    a marker, binds a pop up, and adds the marker as a layer to the `markercluster`
    group. Then, call the function to start loading the data:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将标记添加到组中，您需要一个函数，该函数使用数据文件中的数组来遍历每个数据点，并将纬度、经度和您想在弹出窗口中使用的任何其他属性添加到标记中。循环创建一个标记，绑定一个弹出窗口，并将标记作为图层添加到`markercluster`组中。然后，调用该函数以开始加载数据：
- en: '[PRE15]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Lastly, add the `markercluster` group layer to the map using the following
    code:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下代码将`markercluster`组图层添加到地图中：
- en: '[PRE16]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Your map should look like the following screenshot:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您的地图应该看起来像以下截图：
- en: '![Coding your first cluster map](img/4812OS_04_14.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![编写您的第一个簇地图代码](img/4812OS_04_14.jpg)'
- en: 'When you zoom in to the map, the clusters should expand and the groupings become
    smaller. They will then expand to reveal individual markers, as shown in the following
    screenshot:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将地图缩小时，簇应该展开，分组变得较小。然后，它们将展开以显示单个标记，如下面的截图所示：
- en: '![Coding your first cluster map](img/4812OS_04_15.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![编写您的第一个簇地图代码](img/4812OS_04_15.jpg)'
- en: Methods and events available to markercluster layers
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标记簇图层可用的方法和事件
- en: The `markercluster` layer has several options and methods that can be used to
    create and interact with your layer.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`markercluster`图层有几个选项和方法，可以用来创建和交互您的图层。'
- en: Options that default to true
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 默认为true的选项
- en: 'There are four default options that are all set to `true`, as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 有四个默认选项，都设置为`true`，如下所示：
- en: '`showCoverageOnHover`'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`showCoverageOnHover`'
- en: '`zoomToBoundsOnClick`'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zoomToBoundsOnClick`'
- en: '`spiderfyOnMaxZoom`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`spiderfyOnMaxZoom`'
- en: '`removeOutsideVisibleBounds`'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`removeOutsideVisibleBounds`'
- en: The first option shows you a polygon that represents the coverage area of the
    markers in the cluster. This can be confusing as a colored polygon appears on
    the map. In the previous example, you set this option to `false`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选项显示一个多边形，代表簇中标记的覆盖区域。这可能会令人困惑，因为一个彩色多边形会出现在地图上。在先前的示例中，您将此选项设置为`false`。
- en: When you click on a cluster, the second option zooms to the polygon that represents
    the coverage area of the cluster you clicked on. When you zoom all the way into
    the map or use the defined `maxZoom` option, the cluster will expand to reveal
    the markers within it.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击一个簇时，第二个选项会缩放到您点击的簇的覆盖区域多边形。当您将地图缩放到最大或使用定义的`maxZoom`选项时，簇将展开以显示其内的标记。
- en: The last option improves performance by not displaying clusters that are not
    within a close proximity of the current map view. You do not need to see a cluster
    in New York if you are looking at Los Angeles.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个选项通过不显示当前地图视图附近不紧密的簇来提高性能。如果您正在查看洛杉矶，则不需要看到纽约的簇。
- en: Other options and events
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他选项和事件
- en: 'The other options you might want to set are `animateAddingMarkers` and `maxClusterRadius`.
    Animated markers create a visually interesting map, but if you are using a large
    set of data points, it can slow the performance of your map. It is an effect that
    should be used sparingly and under the right conditions. Adjusting the radius
    of the cluster can create larger or smaller clusters. The default is 80 pixels.
    If you are displaying tightly grouped data, you will need a smaller number, and
    if you are displaying data that is dispersed, you might need a larger radius.
    In the previous example, if the radius is set to `5`, the markers take over the
    map because they are not getting clustered due to the small radius. The following
    screenshot shows you the map when the radius is set to `5`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还想设置的选项是`animateAddingMarkers`和`maxClusterRadius`。动画标记可以创建一个视觉上有趣的地图，但如果您正在使用大量数据点，可能会降低您地图的性能。这是一种应该谨慎使用并在正确条件下使用的效果。调整簇的半径可以创建更大或更小的簇。默认值为80像素。如果您正在显示紧密分组的数据，则需要较小的数字，如果您正在显示分散的数据，可能需要更大的半径。在先前的示例中，如果半径设置为`5`，则标记会覆盖整个地图，因为它们由于半径太小而没有被聚类。以下截图显示了半径设置为`5`时的地图：
- en: '![Other options and events](img/4812OS_04_16.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![其他选项和事件](img/4812OS_04_16.jpg)'
- en: The preceding screenshot is cluttered with markers, making the map almost unreadable.
    The `markercluster` layer has events that you can subscribe to. Usually, you subscribe
    to an event on the map using `map.on(click, function)`. With the `markercluster`
    layer, you add a cluster to the available layer events so that they will apply
    to the `markercluster` layer, such as `markers.on(clusterclick,function)`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图中标记众多，几乎使地图无法阅读。`markercluster` 层有您可以订阅的事件。通常，您使用 `map.on(click, function)`
    在地图上订阅一个事件。对于 `markercluster` 层，您将一个簇添加到可用的层事件中，以便它们应用于 `markercluster` 层，例如 `markers.on(clusterclick,function)`。
- en: Animating markers with plugins
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用插件动画标记
- en: In the next two sections, you will learn how to animate markers using the `Leaflet.BounceMarker`
    and `Leaflet.AnimatedMarker` plugins. Animation adds a wow factor to your map,
    but if overdone, it can make your map appear amateurish.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的两个部分中，您将学习如何使用 `Leaflet.BounceMarker` 和 `Leaflet.AnimatedMarker` 插件来动画化标记。动画可以为您的地图增添吸引力，但如果过度使用，可能会使地图看起来不够专业。
- en: Bouncing your markers
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹跳您的标记
- en: The `Leaflet.BounceMarker` plugin does not have a large number of options to
    customize the markers or their behavior, but it provides a simple animation that
    is useful when you add markers to the map or on the hover event. You can download
    and learn more about the plugin at [https://github.com/maximeh/leaflet.bouncemarker](https://github.com/maximeh/leaflet.bouncemarker).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`Leaflet.BounceMarker` 插件没有很多选项来自定义标记或其行为，但它提供了一个简单的动画，当您在地图上添加标记或在悬停事件时非常有用。您可以在
    [https://github.com/maximeh/leaflet.bouncemarker](https://github.com/maximeh/leaflet.bouncemarker)
    下载并了解更多关于该插件的信息。'
- en: 'The following steps will show you how to add a bounce marker to your map:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将向您展示如何将弹跳标记添加到您的地图中：
- en: 'Add a reference to the JavaScript file. There is no CSS file required for this
    plugin:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对 JavaScript 文件的引用。此插件不需要 CSS 文件：
- en: '[PRE17]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Creating a bounce marker is exactly the same as creating a standard Leaflet
    marker; the plugin adds an additional option to the `L.Marker` class. Because
    of this, the bounce marker has a `bounceOnAdd` option, and it defaults to `false`.
    Every marker you create will bounce unless you specify otherwise. Set this option
    to `true` for any markers you would like to bounce. Add the marker to the map.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建弹跳标记与创建标准 Leaflet 标记完全相同；插件向 `L.Marker` 类添加了一个额外的选项。因此，弹跳标记有一个 `bounceOnAdd`
    选项，默认为 `false`。您创建的每个标记都会弹跳，除非您指定了其他设置。将此选项设置为 `true` 以使任何您希望弹跳的标记弹跳。将标记添加到地图中。
- en: '[PRE18]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The only other options you can specify on a bounce marker are the height, duration,
    and a callback function when finished. You set them as shown in the following
    code:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在弹跳标记上指定的唯一其他选项是高度、持续时间和完成时的回调函数。您按照以下代码设置它们：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Height is in pixels and duration is in milliseconds. Animation takes resources
    to run, so make sure that you do not create animations that run too quickly, or
    you will find that your marker disappears and only the shadow is visible. Also,
    remember that if you intend for your map to be consumed on mobile devices, the
    performance might be slower than on your desktop.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 高度以像素为单位，持续时间以毫秒为单位。动画运行需要资源，所以请确保您不会创建运行速度过快的动画，否则您会发现标记消失了，只能看到阴影。此外，如果您打算在移动设备上使用地图，性能可能比在桌面电脑上慢。
- en: The `bounce()` method works well with the hover event. When there are many markers
    and they are tightly grouped, making the one you are hovering over bounce helps
    make sure that you click on the correct one.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`bounce()` 方法与悬停事件配合得很好。当有多个标记并且它们紧密分组时，使您悬停的标记弹跳可以帮助确保您点击的是正确的标记。'
- en: 'To make a marker bounce on a hover event, subscribe to the event and call a
    function when the mouse hovers over the marker:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要在悬停事件上使标记弹跳，订阅该事件并在鼠标悬停在标记上时调用一个函数：
- en: '[PRE20]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding code subscribes to the `mouseover` event and executes an anonymous
    function when the mouse hovers over the marker. The anonymous function calls the
    `bounce()` method, making the marker do just that when you move the mouse over
    it.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码订阅了 `mouseover` 事件，并在鼠标悬停在标记上时执行一个匿名函数。匿名函数调用 `bounce()` 方法，使标记在您将鼠标移至其上时进行弹跳。
- en: Note
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `Leaflet.BounceMarker` plugin is an excellent plugin; however, you might
    experience some hiccups in your animations. This is not to be blamed on the plugin,
    but rather on the nature of animations and the large number of resources they
    require.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`Leaflet.BounceMarker` 插件是一个优秀的插件；然而，您可能会在动画过程中遇到一些小问题。这并不是插件的问题，而是动画的本质和它们所需的大量资源所导致的。'
- en: Making your markers move
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作你的标记移动
- en: With the `Leaflet.AnimatedMarker` plugin, you can make your markers move along
    a polyline. This comes in handy when you want to draw attention to a route. A
    marker moving along the route attracts the eye more than a line on the map. For
    more information and to download the plugin, go to [https://github.com/openplans/Leaflet.AnimatedMarker](https://github.com/openplans/Leaflet.AnimatedMarker).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`Leaflet.AnimatedMarker`插件，您可以使标记沿着多边形移动。当您想要绘制路线的注意力时，这非常有用。沿着路线移动的标记比地图上的线更能吸引人的注意。有关更多信息以及下载插件，请访问[https://github.com/openplans/Leaflet.AnimatedMarker](https://github.com/openplans/Leaflet.AnimatedMarker)。
- en: Note
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One caveat is that if the user zooms in on the map while the animation is running,
    the marker will move from its path and then try to return. It might be a good
    idea to disable the map zoom until the animation has finished.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 一个需要注意的问题是，如果用户在动画运行时放大地图，标记将从其路径移动并尝试返回。在动画完成之前禁用地图缩放可能是一个好主意。
- en: 'To animate your markers, perform the following steps:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要动画化您的标记，请执行以下步骤：
- en: 'Add a reference to the JavaScript file. No CSS file is required for this plugin:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对JavaScript文件的引用。此插件不需要CSS文件：
- en: '[PRE21]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a polyline to represent the path that the marker will be animated along:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个多边形来表示标记将动画化的路径：
- en: '[PRE22]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create an `animatedMarker` variable. The marker takes an array of latitudes
    and longitudes. To get it, use the `getLatLngs()` method of the line you created:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`animatedMarker`变量。标记接受纬度和经度数组。要获取它，使用您创建的线的`getLatLngs()`方法：
- en: '[PRE23]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add the animated marker layer to the map. In this example, you will also add
    the line so that you can see it as a reference:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将动画标记层添加到地图中。在这个例子中，您还将添加线路，以便您可以将其作为参考：
- en: '[PRE24]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'When you open your map, it should look like the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开地图时，它应该看起来像以下截图：
- en: '![Making your markers move](img/4812OS_04_17.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![制作你的标记移动](img/4812OS_04_17.jpg)'
- en: 'Because you did not pass any options to the marker, it will take a minute to
    start moving and will move fairly slowly across the blue line. The plugin has
    the following options:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您没有向标记传递任何选项，它需要一分钟才能开始移动，并且将以相当慢的速度穿过蓝色线。该插件有以下选项：
- en: '`distance`'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`距离`'
- en: '`interval`'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`间隔`'
- en: '`autoStart`'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autoStart`'
- en: '`onEnd`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`onEnd`'
- en: The `distance` and `interval` options set the rate at which the marker will
    travel along the line. Distance is measured in meters, and interval is measured
    in milliseconds. Since it is a rate, an option of `{distance:100, interval 1000}`
    would be slower than an option of `{distance:300, interval:1000}`. In the first
    setting, the marker covers 100 meters in one second, and in the second setting,
    it would cover three times the distance in the same time.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`距离`和`间隔`选项设置标记沿线移动的速度。距离以米为单位测量，间隔以毫秒为单位。由于这是一个速度，选项`{distance:100, interval:1000}`会比选项`{distance:300,
    interval:1000}`慢。在第一种设置中，标记在一秒内覆盖100米，而在第二种设置中，它会在相同的时间内覆盖三倍的距离。'
- en: 'The `autoStart` option is set to `true` by default. If you set it to `false`,
    you can call a `start()` method on the marker when you are ready. In the code
    used in the following steps, you will make a map with two buttons: **Start** and
    **Stop**. Using `autoStart:false`, you will allow the user to determine when to
    start the marker and when to stop it along its path:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`autoStart`选项默认设置为`true`。如果您将其设置为`false`，您可以在准备就绪时在标记上调用`start()`方法。在以下步骤中使用的代码中，您将创建一个带有两个按钮的地图：**开始**和**停止**。使用`autoStart:false`，您将允许用户确定何时开始标记以及何时在路径上停止它：'
- en: 'Building on the previous example using the same line and marker, add an option
    to the marker for `distance` and `interval` and set `autoStart` to `false`:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用相同线路和标记的先前示例的基础上，向标记添加`distance`和`interval`选项，并将`autoStart`设置为`false`：
- en: '[PRE25]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Write a `start()` and `stop()`function to control the animation. Call the `start()`
    and `stop()` methods on the marker in the corresponding function:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个`start()`和`stop()`函数来控制动画。在相应的函数中调用标记的`start()`和`stop()`方法：
- en: '[PRE26]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In the HTML, before the `</body>` tag, add two buttons and set their `onClick`
    event equal to the corresponding function:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在HTML中，在`</body>`标签之前添加两个按钮，并将它们的`onClick`事件设置为相应的函数：
- en: '[PRE27]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Your map should look like the following screenshot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 您的地图应该看起来像以下截图：
- en: '![Making your markers move](img/4812OS_04_18.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![制作你的标记移动](img/4812OS_04_18.jpg)'
- en: The marker will not move until the user clicks on the **Start** button. When
    the user clicks on the **Stop** button, the marker will not stop immediately.
    Animation occurs in segments along each segment of the polyline. When the marker
    reaches the endpoint of a segment, it will stop and not resume until the user
    clicks on **Start** again.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 标记器将在用户点击**开始**按钮之前不会移动。当用户点击**停止**按钮时，标记器不会立即停止。动画在每个线段的每个部分发生。当标记器到达线段的终点时，它将停止，并且不会重新开始，直到用户再次点击**开始**。
- en: 'The last setting was `onEnd`. This option allows you to specify a callback
    function that will run when the marker gets to the end of the line. In the code
    in the following steps, you will use the bounce marker plugin you learned about
    earlier in this chapter to make the marker bounce and then disappear when it finishes.
    Follow the next set of steps to create your map:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个设置是`onEnd`。此选项允许您指定一个回调函数，当标记到达线的末端时将运行。在以下步骤中的代码中，您将使用本章前面学到的弹跳标记插件来使标记弹跳，并在完成时消失。按照以下步骤创建您的地图：
- en: 'Building on the previous example, add a reference to the bounce marker plugin:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一个示例的基础上，添加对弹跳标记插件的引用：
- en: '[PRE28]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Create the bounce marker at the last point of the line:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在线的最后一点创建弹跳标记：
- en: '[PRE29]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Edit the animated marker to include the `onEnd` option with an anonymous function.
    The anonymous function will add the bounce marker to the map, make it bounce,
    remove the animated marker, and then wait 900 milliseconds and call a `bye()`function,
    which will remove the bounce marker. The waiting will allow the marker to disappear
    after the bouncing is finished. This slows the process down so that the animation
    is not so abrupt. You could also use the callback function available to the bounce
    marker instead of the `bye()` function:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑动画标记以包含`onEnd`选项和匿名函数。匿名函数将添加弹跳标记到地图上，使其弹跳，删除动画标记，然后等待900毫秒并调用一个`bye()`函数，该函数将删除弹跳标记。等待将允许标记在弹跳完成后消失。这将减慢过程，使动画不会如此突然。您也可以使用弹跳标记可用的回调函数而不是`bye()`函数：
- en: '[PRE30]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Your map will look exactly the same as the previous example. When the marker
    reaches the end of the line, it will appear to bounce and disappear from the map.
    A fun project using custom and animated markers would be to recreate the Boston
    Marathon using a custom marker for each of the finishers and setting its rate
    to their actual race rate. When you click on the **Start** button, you could replay
    the race.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您的地图将看起来与上一个示例完全相同。当标记到达线的末端时，它将看起来弹跳并从地图上消失。一个有趣的项目是使用自定义和动画标记来重现波士顿马拉松，为每个完成者设置一个自定义标记，并设置其实际比赛速度。当您点击**开始**按钮时，您可以重新播放比赛。
- en: Using markers for data visualization
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用标记进行数据可视化
- en: You have learned about several different marker types that still look like your
    typical marker. In this section, you will learn how to add markers that create
    a pie and bar chart—not exactly your standard marker.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了几种不同的标记类型，它们仍然看起来像您典型的标记。在本节中，您将学习如何添加创建饼图和柱状图的标记——这并不完全符合标准标记。
- en: Using the Leaflet Data Visualization Framework plugin
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Leaflet数据可视化框架插件
- en: 'The Leaflet Data Visualization Framework plugin allows you to create markers
    that are just shapes: a standard pin style marker with a shape cutout, a star
    marker, and a polygon marker. It also allows you to add pie chart and bar chart
    markers to your map.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Leaflet数据可视化框架插件允许您创建仅是形状的标记：一个带有形状切割的标准大头针样式标记、星形标记和多边形标记。它还允许您向地图添加饼图和柱状图标记。
- en: Note
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Leaflet Data Visualization Framework plugin also has markers for radial
    bar charts, coxcomb charts, stacked and radial meter markers, as well as a data
    layer, choropleth layer, and a legend control. This is a plugin worth exploring.
    You can download it at [http://humangeo.github.io/leaflet-dvf/](http://humangeo.github.io/leaflet-dvf/).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Leaflet数据可视化框架插件还具有径向柱状图、科克斯组合图、堆叠和径向仪表标记的标记，以及数据层、渐变层和图例控件。这是一个值得探索的插件。您可以在[http://humangeo.github.io/leaflet-dvf/](http://humangeo.github.io/leaflet-dvf/)下载它。
- en: Creating basic markers
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建基本标记
- en: 'Creating basic markers is straightforward. The code used in the following steps
    will walk you through making a marker, a polygon marker, and a star marker:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 创建基本标记很简单。以下步骤中使用的代码将指导您制作标记、多边形标记和星形标记：
- en: 'First, create a reference to the CSS and two JavaScript files:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建对CSS和两个JavaScript文件的引用：
- en: '[PRE31]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, create the markers. What really makes this plugin stand out with regards
    to the standard markers is that you can use any of the options in the `L.Path`
    class. This allows you to fully customize your markers. Creating the markers requires
    you to select the marker type— `MapMarker`, `RegularPolygonMarker`, or `StarMarker`—and
    then select the options:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建标记。真正使这个插件与标准标记区分开来的是，你可以使用`L.Path`类中的任何选项。这允许你完全自定义你的标记。创建标记需要你选择标记类型——`MapMarker`、`RegularPolygonMarker`或`StarMarker`——然后选择选项：
- en: '[PRE32]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'When you open your map, it will look like the following screenshot:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开你的地图时，它将看起来像以下截图：
- en: '![Creating basic markers](img/4812OS_04_19.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![创建基本标记](img/4812OS_04_19.jpg)'
- en: There are too many options to list here, but to see them, go to the documentation
    for the plugin at [https://github.com/humangeo/Leaflet-dvf/wiki/6.-Markers](https://github.com/humangeo/Leaflet-dvf/wiki/6.-Markers)
    and the documentation for the Leaflet `path` class at [http://Leafletjs.com/reference.html#path](http://Leafletjs.com/reference.html#path).
    The plugin options you will use the most for each marker are explained in the
    following sections.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 选项太多，无法在此列出，但要看它们，请访问插件文档[https://github.com/humangeo/Leaflet-dvf/wiki/6.-Markers](https://github.com/humangeo/Leaflet-dvf/wiki/6.-Markers)和Leaflet
    `path`类的文档[http://Leafletjs.com/reference.html#path](http://Leafletjs.com/reference.html#path)。以下章节将解释你将为每个标记最常使用的插件选项。
- en: MapMarker options
  id: totrans-204
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 地图标记选项
- en: 'The `MapMarker` options used are as follows:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的`MapMarker`选项如下：
- en: '`numberOfSides`: The inner hole is determined by the number of sides: three
    for a triangle, four for a square. The larger the number, the closer to a circle
    it will be. If you leave this option blank, it will default to a circle.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numberOfSides`: 内孔的大小由边的数量决定：三角形为三边，正方形为四边。边的数量越多，形状越接近圆形。如果你留空这个选项，它将默认为圆形。'
- en: '`rotation`: This helps you rotate the hole in the middle. This, of course,
    only works on shapes that are not a circle.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rotation`: 这有助于你旋转中间的孔。当然，这仅适用于非圆形形状。'
- en: '`radius`: This is the size of the marker.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`radius`: 这是标记的大小。'
- en: '`innerRadius`: This is the size of the hole in the middle.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`innerRadius`: 这是中间孔的大小。'
- en: RegularPolygonMarker options
  id: totrans-210
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RegularPolygonMarker选项
- en: 'The `RegularPolygonMarker` options used are as follows:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的`RegularPolygonMarker`选项如下：
- en: '`numberOfSides`: This is the shape of the marker.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numberOfSides`: 这是标记的形状。'
- en: '`rotation`: This is the orientation of the marker. If you create a four-sided
    polygon and leave this blank, it will be a square. If you add rotation, you can
    make the corners point in any direction.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rotation`: 这是标记的方向。如果你创建一个四边形并且留空这个选项，它将是一个正方形。如果你添加旋转，你可以使角落指向任何方向。'
- en: '`radius`: This is the size of the marker.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`radius`: 这是标记的大小。'
- en: '`innerRadius`: This is the size of the hole in the middle.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`innerRadius`: 这是中间孔的大小。'
- en: StarMarker options
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 星形标记选项
- en: 'The `StarMarker` options used are as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的`StarMarker`选项如下：
- en: '`numberOfPoints`: This defines how many points the start should have'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numberOfPoints`: 这定义了起始点应该有多少个'
- en: '`rotation`: This is the orientation of the marker'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rotation`: 这是标记的方向'
- en: '`radius`: This is the size of the marker'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`radius`: 这是标记的大小'
- en: '`innerRadius`: This is the size of the hole in the middle'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`innerRadius`: 这是中间孔的大小'
- en: Bar and pie chart markers
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条形图和饼图标记
- en: Adding chart markers to your map allows you to show multiple pieces of data
    for a single point or polygon. For example, you could map all of the census blocks
    in your state and, using the center point of each block, you could place a chart
    showing the age distributions. This allows you to present a lot of data quickly
    and visually.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 将图表标记添加到你的地图中允许你显示单个点或多边形的多份数据。例如，你可以将你州的所有人口普查区绘制在地图上，并使用每个区的中心点放置一个显示年龄分布的图表。这允许你快速直观地展示大量数据。
- en: 'Making a bar or pie chart with the Leaflet Data Visualization Framework plugin
    only requires you to create an `options` object and pass it to the marker. The
    following steps will show you how to do both:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Leaflet数据可视化框架插件制作条形图或饼图只需要你创建一个`options`对象并将其传递给标记。以下步骤将展示如何进行这两步：
- en: Create an `options` object with data and chart options. The data needs the name
    of the data category and the value. In the chart options object, you pass all
    of the options to style your chart. Three important options are `minValue`, `maxValue`,
    and `maxHeight`. These should, under most circumstances, be the same for all the
    categories. If you allow one category to have `maxHeight` higher than the rest,
    it can be displayed as a larger bar than another category with a higher value.
    Think of this as setting the *x* and *y* axis scales in Excel. All the data should
    be within the same scale of the lowest value to the highest value. Changing the
    `maxHeight` option will also make your chart larger or smaller. The options outside
    of the chart options are for the stroke or outline of the chart.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含数据和图表选项的`options`对象。数据需要数据类别的名称和值。在图表选项对象中，你传递所有选项来设置你的图表样式。三个重要的选项是`minValue`、`maxValue`和`maxHeight`。在大多数情况下，这些应该对所有类别相同。如果你允许一个类别的`maxHeight`比其他类别高，它可以显示为一个比具有更高值的类别更大的条形。把这想象成在Excel中设置*x*轴和*y*轴的比例。所有数据都应该在最低值和最高值相同的比例范围内。更改`maxHeight`选项也会使你的图表变大或变小。图表选项之外的是用于图表的描边或轮廓的选项。
- en: 'When creating a pie chart, the `radius` option allows you to adjust the size
    of the marker:'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当创建饼图时，`radius`选项允许你调整标记的大小：
- en: '[PRE33]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Next, create the markers, pass the options, and add them to the map:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建标记，传递选项，并将它们添加到地图中：
- en: '[PRE34]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: When you open your map, it should look like the following screenshot. When you
    hover over one of the data categories, you will see the color, category name,
    and value.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开你的地图时，它应该看起来像下面的截图。当你悬停在某个数据类别上时，你会看到颜色、类别名称和值。
- en: '![Bar and pie chart markers](img/4812OS_04_20.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![条形图和饼图标记](img/4812OS_04_20.jpg)'
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to add custom markers to your Leaflet map.
    You can now draw your own markers or use pre-existing images. You can also use
    plugins to load markers from Twitter, Font Awesome, and Mapbox. Lastly, you now
    know how to create bar chart and pie chart markers to visualize data in the form
    of a marker. At this point, you have acquired enough knowledge of Leaflet to build
    almost any style of map you can think of.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何向你的Leaflet地图添加自定义标记。你现在可以绘制自己的标记或使用现有的图像。你也可以使用插件从Twitter、Font Awesome和Mapbox加载标记。最后，你现在知道如何创建条形图和饼图标记，以标记的形式可视化数据。到目前为止，你已经掌握了足够的Leaflet知识，可以构建你所能想到的几乎任何风格的地图。
- en: In the next chapter, you will learn how to use **Economic and Social Research
    Institute** (**ESRI**) data in your Leaflet map. As the most widely used GIS platform,
    you will most certainly run in to its data formats.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何在你的Leaflet地图中使用**经济与社会研究学院**（**ESRI**）的数据。作为最广泛使用的GIS平台，你很可能会遇到其数据格式。
