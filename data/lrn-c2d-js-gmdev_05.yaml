- en: Chapter 5. Become a Musical Maestro
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。成为音乐大师
- en: 'Although you might think the games you created while reading this book are
    complete, they lack some kind of atmosphere due to a simple reason: they are mute.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可能认为你在阅读这本书时创建的游戏是完整的，但由于一个简单的原因，它们缺少某种氛围：它们是哑的。
- en: No sounds, no background music, nothing. A complete, fully polished game must
    have background music and sound effects, and that's what you are going to learn
    in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 没有声音，没有背景音乐，什么都没有。一个完整、完全抛光的游戏必须有背景音乐和音效，这就是你将在本章中学到的。
- en: 'Follow me, and you will be able to:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 跟随我，你将能够：
- en: Add sound effects to your games
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的游戏添加音效
- en: Add background music to your games
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的游戏添加背景音乐
- en: Loop sounds
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环声音
- en: Start and stop sounds
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始和停止声音
- en: Changing the volume of music and sound effects
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变音乐和音效的音量
- en: Also, just because the more you learn the better it is, you will also see how
    to create option menus.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于你学得越多越好，你还将看到如何创建选项菜单。
- en: Now, surf the Web and choose some great music and sound effects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，上网选择一些优秀的音乐和音效。
- en: Choosing sounds
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择声音
- en: Let's guess what happened. You found that incredible song, which is a mix between
    electronic and heavy metal and think it would fit really good in your space shooter
    game. You downloaded it and enjoyed 4 minutes and 56 seconds of Blu-ray quality
    sound.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们猜测发生了什么。你找到了那首令人难以置信的歌曲，它是电子音乐和重金属音乐的混合，你认为它非常适合你的太空射击游戏。你下载了它，并享受了4分56秒的蓝光质量声音。
- en: Also, in a matter of minutes, you found at least three more songs that would
    also fit perfectly in your game. Let's add them all, doing an in-game radio like
    in a GTA series.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在几分钟内，你至少找到了三首也适合你游戏的歌。让我们把它们都添加进去，就像在GTA系列游戏中做游戏内广播一样。
- en: No. Wait! The player is running your game in a browser, probably outside any
    free Wi-Fi zone, with a not so high download speed. You simply can't make them
    wait half an hour just to download a song unless your name is Lady Gaga and that
    sound is your latest smash hit.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 等等！玩家正在浏览器中运行你的游戏，可能是在任何免费Wi-Fi区域之外，下载速度也不是很高。除非你的名字是Lady Gaga，而且那首歌是你的最新热门单曲，否则你不可能让他们等待半小时来下载一首歌。
- en: People want to press *play* and play your game; remember, you are making games,
    not sounds in a matter of seconds, so choose your sounds wisely, they can't be
    bigger than the game itself.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 人们想要按下*播放*按钮并玩你的游戏；记住，你是在制作游戏，而不是几秒钟内的声音，所以请明智地选择你的声音，它们不能比游戏本身更大。
- en: Play with sound quality until you find a good compromise between quality and
    weight, and when choosing background music, a short loop is way better than a
    long tune.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在音质和大小之间找到良好的平衡，直到你找到一个好的妥协点，并且在选择背景音乐时，一个短循环比一个长调要好得多。
- en: 'Also, remember different browsers in different operative system read different
    sound types, so you should provide the same sound in three different formats:
    `MP3`, `WAV`, and `OGG`.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，记住不同的浏览器在不同的操作系统上读取不同的声音类型，所以你应该提供三种不同格式的相同声音：`MP3`、`WAV`和`OGG`。
- en: Note
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Talking about sounds optimization and conversion is beyond the scope of this
    book, but I suggest you use the free software I used to edit sounds to be included
    in my games, **Audacity**, found at [http://audacity.sourceforge.net/](http://audacity.sourceforge.net/).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 关于声音优化和转换的讨论超出了本书的范围，但我建议你使用我用来编辑游戏中声音的免费软件**Audacity**，可在[http://audacity.sourceforge.net/](http://audacity.sourceforge.net/)找到。
- en: Preloading sounds
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预加载声音
- en: 'Preloading sounds is exactly the same as preloading graphic assets. In the
    `assets` folder, there are two mp3 files: `loop.mp3`, which is a short loop used
    as background music, and `bang.mp3`, which is an Uzi sound effect. Remember in
    your final project, you will have to include the `WAV` and `OGG` files as well
    in order to ensure the largest compatibility possible among different browsers
    in various devices.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 预加载声音与预加载图形资源完全相同。在`assets`文件夹中，有两个mp3文件：`loop.mp3`，这是一个用作背景音乐的短循环，而`bang.mp3`则是一个Uzi音效。记住，在你的最终项目中，你将不得不包括`WAV`和`OGG`文件，以确保在不同设备和不同浏览器之间实现最大的兼容性。
- en: 'The `loadassets.js` file will include the array of sounds to preload:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`loadassets.js`文件将包含预加载声音的数组：'
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, let's create a menu to play with sounds and music.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个可以播放声音和音乐的菜单。
- en: Creating a sound menu
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建声音菜单
- en: There are several ways to create a menu, and the most interesting is to create
    the graphic assets of every menu item, then add touch or mouse listeners, and
    handle the whole thing in a way you should already know.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 创建菜单有几种方法，其中最有趣的是创建每个菜单项的图形资源，然后添加触摸或鼠标监听器，并以您应该已经知道的方式处理整个事情。
- en: 'This time, you''ll see something new: the Cocos2d-JS built-in `Menu` class.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，您将看到一些新内容：Cocos2d-JS 内置的 `Menu` 类。
- en: 'This is the content of `gameScript.js`:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `gameScript.js` 的内容：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'That''s really a lot of stuff, but there isn''t that much to learn: the `gameScene`
    variable declaration is the same as in previous projects, and the game declaration
    is different from the following line of code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实有很多内容，但学习起来并不复杂：`gameScene` 变量声明与之前的项目相同，而游戏声明与以下代码行不同：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will allow you to initialize the audio engine, you only find a lot: seven
    menu item declarations to be precise like this one:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许您初始化音频引擎，您会发现很多：确切地说，有七个菜单项声明，就像这样：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `cc.MenuItemFont.create` function creates a text menu item with a zoom effect
    when it's clicked.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`cc.MenuItemFont.create` 函数在点击时创建一个具有缩放效果的文本菜单项。'
- en: The three arguments represent the text to display, the callback function to
    run, and the target to run the callback, respectively.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个参数分别代表要显示的文本、要运行的回调函数以及运行回调的目标。
- en: All seven menu items are created in the same way and placed with the `setPosition`
    method you already know.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的七个菜单项都是用相同的方式创建的，并且使用您已经知道的 `setPosition` 方法进行定位。
- en: 'Once all these items have been created, you turn them into an actual menu with
    the following code snippet:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有这些项都被创建，您就可以使用以下代码片段将它们转换成一个实际的菜单：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `Menu.create` function contains all the menu items you just created, and
    it's added and positioned on the stage as usual with `addChild` and `setPosition`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`Menu.create` 函数包含了您刚刚创建的所有菜单项，并且像往常一样使用 `addChild` 和 `setPosition` 方法添加和定位到舞台。'
- en: 'Run the project and you will see what is shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 运行项目，您将看到以下截图所示的内容：
- en: '![Creating a sound menu](img/0075OS_05_01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![创建声音菜单](img/0075OS_05_01.jpg)'
- en: Click or touch the menu items to see the zoom-in effect, although nothing happens
    because callback functions still have to be created.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 点击或触摸菜单项以查看缩放效果，尽管目前没有任何操作发生，因为回调函数仍然需要被创建。
- en: Managing music and sound effects
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理音乐和音效
- en: 'It''s time to create all the callback functions, so let''s expand the content
    of the `game` class declaration:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候创建所有回调函数了，让我们扩展 `game` 类声明的内容：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now, if you test the project, you will be able to play and stop sounds as well
    as adjust adjust the volume of the music and sound effects.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您测试项目，您将能够播放和停止声音，以及调整音乐和音效的音量。
- en: 'Let''s see all the functions one by one:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一查看所有函数：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When the music is not playing, use the `playMusic` method to play the music.
    The second argument means to loop it. You can see whether the music is playing,
    thanks to the `isMusicPlaying` method:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当音乐没有播放时，使用 `playMusic` 方法播放音乐。第二个参数表示循环播放。您可以通过 `isMusicPlaying` 方法查看音乐是否正在播放：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Applying the same concept used before, if the music is already playing, you
    stop it with the `stopMusic` method:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 应用之前使用过的相同概念，如果音乐已经在播放，您可以使用 `stopMusic` 方法停止它：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `getMusicVolume` and `setMusicVolume` methods get and set music volume
    with values from 0 (no volume) to 1 (full volume), respectively:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`getMusicVolume` 和 `setMusicVolume` 方法分别使用从 0（无音量）到 1（全音量）的值获取和设置音乐音量：'
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following concepts are applied to `getEffectsVolume` and `setEffectsVolume`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下概念应用于 `getEffectsVolume` 和 `setEffectsVolume`：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Also, this is how you can manage sounds with Cocos2d-JS.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这也是您如何使用 Cocos2d-JS 管理声音的方法。
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: Thanks to what you learned in this chapter, your games will now feature background
    music and sound effects.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您在本章中学到的知识，您的游戏现在将包含背景音乐和音效。
- en: Why don't you add sounds to the games you made during previous chapters? Then,
    get ready because we are going to bring interactivity to a whole new level!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不将声音添加到您在前几章中创建的游戏中呢？那么，准备好吧，因为我们将要把交互性提升到一个全新的水平！
