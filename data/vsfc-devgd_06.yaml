- en: Chapter 6. Visualforce Charting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章. Visualforce图表
- en: Visualforce charting is one of the best features from the Winter '13 release.
    It is a collection of components which provides a simple way to create charts
    on our Visualforce pages and Visualforce custom components. This feature gives
    us the facility to customize charts that are based on our data sets from SOQL
    queries, and create custom charts (such as pie, bar, and line charts) on our Visualforce
    pages. We can create charts with Visualforce and Apex, and the charting component
    takes care of all of the JavaScript code for us. Visualforce charts are rendered
    by using JavaScript on the client side and it allows us to build animated and
    visually excited charts on the Visualforce pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce图表是Winter '13版本中最好的特性之一。它是一组组件，提供了一种简单的方法来在我们的Visualforce页面上创建图表和Visualforce自定义组件。这个特性使我们能够根据我们的数据集（来自SOQL查询）自定义图表，并在我们的Visualforce页面上创建自定义图表（如饼图、柱状图和折线图）。我们可以使用Visualforce和Apex创建图表，图表组件会为我们处理所有的JavaScript代码。Visualforce图表通过客户端的JavaScript渲染，这使我们能够在Visualforce页面上构建动画和视觉上令人兴奋的图表。
- en: Sometimes, the standard Salesforce charts and dashboards may be insufficient
    to meet our requirements. This is where Visualforce charting comes into play.
    When we cannot fulfill our requirement with Visualforce charting we can use Google
    charts in Visualforce.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，标准的Salesforce图表和仪表板可能不足以满足我们的需求。这就是Visualforce图表发挥作用的地方。当我们无法使用Visualforce图表满足我们的需求时，我们可以在Visualforce中使用Google图表。
- en: 'This chapter explains Visualforce charting, which is a collection of components
    that provides a simple and intuitive way to create charts in your Visualforce
    pages and custom components. The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了Visualforce图表，它是一组组件，提供了一种简单直观的方法来在您的Visualforce页面上和自定义组件中创建图表。本章将涵盖以下主题：
- en: Limitations and considerations of Visualforce charting
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce图表的限制和注意事项
- en: How does Visualforce charting work
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce图表是如何工作的
- en: A complex chart with Visualforce charting
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Visualforce图表的复杂图表
- en: Let's build some exciting Visualforce charts…
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建一些令人兴奋的Visualforce图表…
- en: Limitations and considerations of Visualforce charting
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visualforce图表的限制和注意事项
- en: 'When Force.com released the Visualforce charting feature, they announced a
    few known limitations and considerations for Visuaforce charting, which are as
    follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当Force.com发布Visualforce图表功能时，他们宣布了一些已知的使用Visualforce图表的限制和注意事项，如下所示：
- en: Visualforce charting can be rendered only in **Scalable Vector Graphics** (**SVG**)
    supported browsers.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce图表只能在支持可伸缩矢量图形（**SVG**）的浏览器中渲染。
- en: Visualforce charts cannot be displayed in pages rendered as PDFs because Visualforce
    charting uses JavaScript to draw the charts.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce图表无法在渲染为PDF的页面上显示，因为Visualforce图表使用JavaScript来绘制图表。
- en: Visualforce charting is not used in e-mail messages or e-mail templates because
    e-mail clients do not support JavaScript's execution in e-mail messages.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visualforce图表不用于电子邮件消息或电子邮件模板，因为电子邮件客户端不支持在电子邮件消息中执行JavaScript。
- en: When we develop a Visulforce page with Visualforce charting, we need to use
    a JavaScript debugging tool such as Firebug to track errors and messages returning
    from Visualforce charting to the JavaScript console.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们使用Visualforce图表开发Visualforce页面时，我们需要使用JavaScript调试工具，如Firebug，来跟踪从Visualforce图表返回到JavaScript控制台的错误和消息。
- en: Dynamic Visualforce charting (Apex-generated) is still (as of Spring 2013) not
    supported by the Force.com platform. However, this feature is supposed to be released
    soon.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态Visualforce图表（由Apex生成）截至2013年春季仍未被Force.com平台支持。然而，这个特性预计很快就会发布。
- en: How does Visualforce charting work
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visualforce图表是如何工作的
- en: Visualforce charting relies on Apex, Visualforce, and JavaScript. When we create
    Visualforce charts, we need an Apex method to prepare or query data to use as
    the source of the chart. Then we need to define our chart by using Visualforce
    charting components. The chart data that is prepared in the Apex method is bound
    to the chart component and the JavaScript draws the chart in the browser.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce图表依赖于Apex、Visualforce和JavaScript。当我们创建Visualforce图表时，我们需要一个Apex方法来准备或查询作为图表数据源的数据。然后我们需要使用Visualforce图表组件来定义我们的图表。在Apex方法中准备好的图表数据绑定到图表组件上，JavaScript在浏览器中绘制图表。
- en: A Visualforce chart needs a chart container that has at least one data series
    component. We have the ability to add additional series, chart axes, and labeling
    components (such as legend, chart labels, and tool tips for data points).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce图表需要一个至少包含一个数据系列组件的图表容器。我们有能力添加额外的系列、图表轴和标签组件（如图例、图表标签和数据点的工具提示）。
- en: 'The following example creates a simple pie chart that contains the number of
    items that are delivered to customers. In this example, we have hardcoded values
    for the chart data source. The following is the markup of a pie chart example:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例创建了一个简单的饼图，其中包含发送给客户的物品数量。在这个例子中，我们为图表数据源硬编码了值。以下是一个饼图示例的标记：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here is the associated custom controller, which prepares the data source for
    the chart. The chart container is defined by the `<apex:chart>` component and
    data binding is done by the `getChartData()` controller method. The `<apex:pieSeries>`
    component defines the label and data field from the returned data as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是相关的自定义控制器，它为图表准备数据源。图表容器由`<apex:chart>`组件定义，数据绑定通过`getChartData()`控制器方法完成。`<apex:pieSeries>`组件根据返回的数据定义标签和数据字段，如下所示：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The resultant chart of the preceding example is shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个示例的结果图表如下截图所示：
- en: '![How does Visualforce charting work](img/9818_06_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Visualforce图表工作原理](img/9818_06_01.jpg)'
- en: The resultant pie chart
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 结果饼图
- en: 'The preceding example illustrates the following points:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个示例说明了以下要点：
- en: '`PieChartData`: This is an inner class which has a set of properties to define
    the label (the `name` property) and the data (the `data` property) of the chart.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PieChartData`: 这是一个内部类，它包含一组属性来定义图表的标签（`name`属性）和数据（`data`属性）。'
- en: '`getChartData()`: This method returns a list of wrapper objects of `PieChartData`.
    These list elements create the data points for the chart.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getChartData()`: 此方法返回一个`PieChartData`包装对象的列表。这些列表元素创建了图表的数据点。'
- en: '`<apex:pieSeries>`: This component defines the label and data field from the
    returned data (objects of `PieChartData`).'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:pieSeries>`: 此组件定义了从返回的数据（`PieChartData`对象）中获取的标签和数据字段。'
- en: Providing chart data
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供图表数据
- en: 'The following are the three different ways to provide data source to the chart:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下提供图表数据源的三种不同方式：
- en: Using the controller method
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用控制器方法
- en: Using a JavaScript function
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用JavaScript函数
- en: Using a JavaScript array
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用JavaScript数组
- en: Using the controller method
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用控制器方法
- en: This technique has been illustrated in our simple pie chart example. This is
    a server-side technique and here we have used a controller method to return a
    list of objects. This object list can be our own Apex wrapper objects (as in our
    previous example), `AggregateResult` objects. or `sObjects`. The result of the
    method is serialized to JSON on the server side, and the result is directly used
    by the `<apex:chart>` component on the client side. Refer to the simple pie chart
    example for this technique.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术已在我们的简单饼图示例中说明。这是一个服务器端技术，在这里我们使用控制器方法返回一个对象列表。这个对象列表可以是我们的Apex包装对象（如前一个示例所示）、`AggregateResult`对象或`sObjects`。方法的结果在服务器端序列化为JSON，并在客户端直接由`<apex:chart>`组件使用。有关此技术的更多信息，请参阅简单饼图示例。
- en: Using a JavaScript function
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用JavaScript函数
- en: 'There is another way to provide data to the chart component that is via a JavaScript
    function. We can use the name of the JavaScript function in the `<apex:chart>`
    component. This JavaScript function is the data provider and it can be defined
    in the Visualforce page or linked to the Visualforce page. We can use this JavaScript
    function to manipulate the data before sending it to the `<apex:chart>` component.
    See the JavaScript Remoting for Apex Controllers section for more information
    about using JavaScript remoting in Visualforce. The following is a simple example
    of a JavaScript function with the `<apex:chart>` component:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 提供图表组件数据还有另一种方式，即通过JavaScript函数。我们可以在`<apex:chart>`组件中使用JavaScript函数的名称。这个JavaScript函数是数据提供者，它可以在Visualforce页面中定义或链接到Visualforce页面。我们可以使用这个JavaScript函数在发送到`<apex:chart>`组件之前操纵数据。有关在Visualforce中使用JavaScript
    Remoting的更多信息，请参阅Apex控制器中的JavaScript Remoting部分。以下是一个带有`<apex:chart>`组件的简单JavaScript函数示例：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following class is the associated custom controller of the preceding page.
    We have defined the remote method with the `@RemoteAction` annotation. That remote
    method transforms the data into the chart component:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下类是前一个页面的相关自定义控制器。我们使用`@RemoteAction`注解定义了远程方法。该远程方法将数据转换为图表组件：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using a JavaScript array
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用JavaScript数组
- en: 'Another way of providing data is by using a JavaScript array. We can use Visualforce
    charting without using any custom controller by using a JavaScript array which
    can be Salesforce data or non-Salesforce data. We can query the Salesforce data
    in JavaScript code by using the Ajax Toolkit API which is a JavaScript wrapper
    around the API and we can build non-Salesforce data sources by using a JavaScript
    array in our own JavaScript code. Then we can use the array in the chart component
    by providing the name of the array to the `<apex:chart>` component. This method
    is useful when your data source relies only on the client side, and not on the
    server side. The following example illustrates how to define a Visualforce chart
    with a JavaScript array:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 提供数据的另一种方式是使用JavaScript数组。我们可以通过使用JavaScript数组（可以是Salesforce数据或非Salesforce数据）来使用Visualforce图表，而无需使用任何自定义控制器。我们可以在JavaScript代码中使用Ajax
    Toolkit API查询Salesforce数据，该API是API的JavaScript包装器，我们可以在自己的JavaScript代码中使用JavaScript数组来构建非Salesforce数据源。然后我们可以通过将数组的名称提供给`<apex:chart>`组件来在图表组件中使用该数组。当数据源仅依赖于客户端而不依赖于服务器端时，这种方法很有用。以下示例说明了如何定义使用JavaScript数组的Visualforce图表：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Visualforce charts are more customizable. We can customize the look and feel
    of elements, markers, the opacity of fill colors/lines, and can combine various
    data sources.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce图表更可定制。我们可以自定义元素的外观和感觉、标记、填充颜色/线条的不透明度，并且可以结合各种数据源。
- en: A complex chart with Visualforce charting
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Visualforce图表的复杂图表
- en: We can use Visualforce charting to build complex charts that represent various
    data series in one chart. For example, we can build a chart with multiple data
    series. The following example shows the number of items sold in three different
    years. The code shows the custom controller the custom controller. The `getComplexChartData()`
    method prepares the data for the chart component. This controller also has a `@RemoteAction`
    method to get the data to the chart component. But this example hasn't used the
    JavaScript remoting. It illustrates the way of reusing the data generation method
    for both server-side and JavaScript remoting methods.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Visualforce图表构建复杂的图表，这些图表在一个图表中代表多个数据系列。例如，我们可以构建一个包含多个数据系列的图表。以下示例显示了三年内销售的商品数量。代码显示了自定义控制器，自定义控制器中的`getComplexChartData()`方法为图表组件准备数据。此控制器还有一个`@RemoteAction`方法，用于将数据传递到图表组件。但此示例没有使用JavaScript远程调用。它说明了在服务器端和JavaScript远程调用方法中重用数据生成方法的方式。
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following screenshot represents a chart with three line series. This chart
    illustrates the number of items sold in three different years:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图表示一个包含三个线系列的图表。此图表说明了三年内销售的商品数量：
- en: '![A complex chart with Visualforce charting](img/9818_06_02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![使用Visualforce图表的复杂图表](img/9818_06_02.jpg)'
- en: The output of the complex chart example
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂图表示例的输出
- en: Tip
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The x and y axes need to be defined in line and bar charts.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在折线图和柱状图中，需要定义x轴和y轴。
- en: 'The markup of the complex chart example is as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂图表示例的标记如下：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Summary
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we became familiar with Visualforce charting which allows us
    to build customized charts based on our data. We learned that Visualforce charting
    is a JavaScript-based feature. Therefore, we have learned about the limitations
    and considerations of Visualforce charting. We have also seen how to create simple
    and complex charts by using Visualforce charting components.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们熟悉了Visualforce图表，它允许我们根据我们的数据构建自定义图表。我们了解到Visualforce图表是一个基于JavaScript的功能。因此，我们学习了Visualforce图表的限制和注意事项。我们还看到了如何使用Visualforce图表组件创建简单和复杂的图表。
