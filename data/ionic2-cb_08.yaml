- en: Chapter 8. Theming the App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：应用主题设计
- en: 'In this chapter, we will cover the following tasks related to app theme customization:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍与应用主题定制相关的以下任务：
- en: Viewing and debugging themes for a specific platform
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看和调试特定平台的主题
- en: Customizing themes based on the platform
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据平台定制主题
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'Although Ionic has its own out-of-the-box default themes, you might want to
    even customize your app''s look and feel further. There are several methods, as
    follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Ionic自带一些开箱即用的默认主题，但你可能还想进一步自定义你应用的视觉和感觉。有以下几种方法：
- en: Change style sheet within Sass file
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Sass文件中更改样式表
- en: Detecting platform-specific type (iOS, Android, Windows) in JavaScript and applying
    custom classes or AngularJS conditions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在JavaScript中检测特定平台类型（iOS、Android、Windows）并应用自定义类或AngularJS条件
- en: Either of the above two methods should work, but it's highly recommended to
    apply customization in a Sass file before the app is built in order to achieve
    maximum rendering performance.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以上两种方法中的任何一种都应该有效，但强烈建议在构建应用之前，在 Sass 文件中应用自定义，以实现最佳渲染性能。
- en: Viewing and debugging themes for a specific platform
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看和调试特定平台的主题
- en: One of the biggest challenges in developing an app is to ensure that it has
    the desired look and feel for each platform. Specifically, you want to write the
    code and theme once and have it just work. Another challenge is figuring out the
    workflow on a daily basis, from writing code and previewing it in the browser
    to deploying to a device for testing purposes. You want to minimize a lot of unnecessary
    steps. It's certainly difficult if you have to rebuild the app and test it independently
    for each mobile platform.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发应用时最大的挑战之一是确保它在每个平台上都有期望的视觉和感觉。具体来说，你希望编写一次代码和主题，并确保它能够正常工作。另一个挑战是确定日常的工作流程，从编写代码并在浏览器中预览到部署到设备进行测试。你希望最小化许多不必要的步骤。如果你必须为每个移动平台独立重建应用并测试它，这当然是非常困难的。
- en: Ionic 2 CLI provides seamless integration to improve your workflow to ensure
    that you can *catch* all the issues for each platform ahead of time. You can quickly
    view the app on various platforms in the same browser window. This feature is
    powerful because now one can make a side-by-side comparison for each screen with
    specific interaction. If you want to debug JavaScript code, you employ the same
    web developer tool that you have been using in the browser. This capability will
    save you a lot of time instead of waiting to push the app to a physical device,
    which could take minutes if your app is getting larger.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 2 CLI提供了无缝集成，以改善你的工作流程，确保你可以在构建应用之前提前捕捉到每个平台的所有问题。你可以在同一个浏览器窗口中快速查看应用在不同平台上的表现。这个功能非常强大，因为现在可以针对每个屏幕进行并排比较，并执行特定的交互。如果你想调试JavaScript代码，你可以使用在浏览器中已经使用的相同网页开发者工具。这种能力将为你节省大量时间，而不是等待将应用推送到物理设备，如果你的应用变得更大，这可能需要几分钟。
- en: In this example, you will learn how to modify a theme quickly using Sass variables.
    Then, you will run the app and inspect different platforms for UI consistency.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你将学习如何使用 Sass 变量快速修改主题。然后，你将运行应用并检查不同平台以保持 UI 一致性。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There is no need to test the theme on a physical device because Ionic can render
    iOS, Android, and Windows Phone in the browser.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要在物理设备上测试主题，因为Ionic可以在浏览器中渲染iOS、Android和Windows Phone。
- en: How to do it…
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Here are the instructions:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是操作说明：
- en: 'Create a new app using the `tutorial` template, as shown, and go to the folder:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用如图所示的 `tutorial` 模板创建一个新的应用，并转到以下文件夹：
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In Ionic 1, you need to set up Sass dependencies because Ionic uses a number
    of external libraries for this. However, Ionic 2 has no such requirements because
    all the dependencies are added when you create the project.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Ionic 1中，你需要设置Sass依赖项，因为Ionic为此使用了许多外部库。然而，Ionic 2没有这样的要求，因为所有依赖项都是在创建项目时添加的。
- en: 'Open the `/app/theme/app.variable.scss` file and replace the `$colors` variable
    with the following commands:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `/app/theme/app.variable.scss` 文件，并用以下命令替换 `$colors` 变量：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The default color codes can be commented out as shown in the preceding code.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认的颜色代码可以像前面代码所示那样进行注释。
- en: 'Open `app.html` and add the `clear` attribute to the following code block:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `app.html` 文件，并将 `clear` 属性添加到以下代码块中：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Open the `./src/pages/hello-ionic/hello-ionic.html` file and replace the contents
    with the given code:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `./src/pages/hello-ionic/hello-ionic.html` 文件，并用给定的代码替换其内容：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Test-run the app in the browser and you should be able to see a screen as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中运行测试应用，你应该能看到如下屏幕：
- en: '[PRE4]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `-l` (lima) command means render the app for all three platforms.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`-l`（lima）命令意味着为所有三个平台渲染应用。'
- en: '![How to do it…](img/image00389.jpeg)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00389.jpeg)'
- en: How it works…
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Ionic 2 has made it very easy to develop and test themes for different platforms.
    Your typical flow is to modify the theme variable in `app.variables.scss` first.
    You should not modify any `.css` files directly. Also, Ionic 2 project now makes
    it safe so that you can't accidently edit the wrong core theme files because those
    core files are no longer in the app folder location.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 2 使得开发不同平台的主题变得非常容易。你的典型流程是首先修改 `app.variables.scss` 中的主题变量。你不应该直接修改任何
    `.css` 文件。此外，Ionic 2 项目现在确保你无法意外编辑错误的主题核心文件，因为这些核心文件不再位于应用文件夹位置。
- en: 'To update the default color, you just have to modify the color code in `app.variables.scss`.
    You can even add more color names, such as `clear: white`, and Ionic 2 will automatically
    take care of the rest. That means the `clear` keyword is available as an attribute
    to any Ionic element that takes a color name. A few examples are as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '要更新默认颜色，你只需修改 `app.variables.scss` 中的颜色代码。你甚至可以添加更多颜色名称，例如 `clear: white`，Ionic
    2 将自动处理其余部分。这意味着 `clear` 关键字可以作为属性应用于任何接受颜色名称的 Ionic 元素。以下是一些示例：'
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The Ionic CLI is a very useful tool for debugging your theme in different platforms.
    To get help on how to use the Ionic CLI, you can type the following command line
    in the console:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic CLI 是一个非常有用的工具，可以帮助你在不同平台上调试主题。要获取有关如何使用 Ionic CLI 的帮助，你可以在控制台中输入以下命令行：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will list all the options available for you to choose from. Under the
    `serve` option, you should familiarize yourself with some of the important features,
    which are as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这将列出所有可供你选择的选项。在 `serve` 选项下，你应该熟悉一些重要功能，如下所示：
- en: '| Parameters | Description |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `--consolelogs&#124;-c` | Print app console logs to Ionic CLI |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `--consolelogs|-c` | 将应用控制台日志打印到 Ionic CLI |'
- en: '| `--serverlogs&#124;-s` | Print dev server logs to Ionic CLI |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `--serverlogs|-s` | 将开发服务器日志打印到 Ionic CLI |'
- en: '| `--browser&#124;-w` | Specifies the browser to use (Safari, Firefox, and
    Chrome) |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `--browser|-w` | 指定要使用的浏览器（Safari、Firefox 和 Chrome） |'
- en: '| `--browseroption&#124;-o` | Specifies a path to open to (`/#/tab/dash`) |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `--browseroption|-o` | 指定要打开的路径（`/#/tab/dash`） |'
- en: '| `--lab&#124;-l` | Tests your apps on multiple screen sizes and platform types
    |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `--lab|-l` | 在多个屏幕尺寸和平台类型上测试你的应用 |'
- en: There's more…
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: You can get more color palettes by visiting Matheus Cruz Rocha's cloned repository
    at [https://github.com/innovieco/ionic-flat-colors](https://github.com/innovieco/ionic-flat-colors).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问 Matheus Cruz Rocha 的克隆仓库来获取更多调色板：[https://github.com/innovieco/ionic-flat-colors](https://github.com/innovieco/ionic-flat-colors)。
- en: Customizing themes based on the platform
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于平台自定义主题
- en: Each mobile platform vendor has its own design guideline. This section will
    go over an example of a typical workflow to develop, view, debug, and address
    the app theme differently for iOS, Android, and Windows Phone. In traditional
    development (of using either the native language or other hybrid app solutions),
    you have to keep separate repositories for each platform in order to customize
    the theme. This could be very inefficient in the long-run.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 每个移动平台供应商都有自己的设计指南。本节将介绍一个典型的开发、查看、调试和针对 iOS、Android 和 Windows Phone 不同的应用主题的工作流程示例。在传统开发（使用本地语言或其他混合应用解决方案）中，你必须为每个平台维护单独的仓库以自定义主题。从长远来看，这可能会非常低效。
- en: Ionic 2 has many built-in features to support theme changes based on the detected
    platform. It makes it very convenient by separating Sass variables for each platform.
    This will eliminate a lot of unnecessary customizations. As a developer, you'd
    rather focus on the app experience than spend time managing the platform.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 2 提供了许多内置功能来支持基于检测到的平台进行主题更改。通过为每个平台分离 Sass 变量，这使得操作非常方便。这将消除许多不必要的自定义。作为开发者，你更愿意专注于应用体验，而不是花时间管理平台。
- en: 'The example in this section covers two possible of customizations using Sass
    and JavaScript. The following screenshot shows an iOS, Android, and Windows app
    with a different title bar color and text:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的示例涵盖了使用 Sass 和 JavaScript 的两种可能的定制方式。以下截图显示了一个 iOS、Android 和 Windows 应用，具有不同的标题栏颜色和文本：
- en: '![Customizing themes based on the platform](img/image00390.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![基于平台自定义主题](img/image00390.jpeg)'
- en: Getting ready
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There is no need to test themes on a physical device because Ionic can render
    all three platforms in the browser.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要在物理设备上测试主题，因为Ionic可以在浏览器中渲染所有三个平台。
- en: How to do it…
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Here are the instructions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是说明：
- en: 'Create a new app using the `blank` template and go into the project folder:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`blank`模板创建一个新应用，并进入项目文件夹：
- en: '[PRE7]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Open the `./src/app/app.module.ts` file and replace the entire body with the
    following:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`./src/app/app.module.ts`文件，并将整个主体替换为以下内容：
- en: '[PRE8]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This example expands the use of Ionic Bootstrap, which will be discussed now.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个例子扩展了Ionic引导的使用，现在将进行讨论。
- en: 'Open `./src/pages/home/home.ts` and replace the code with the following:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`./src/pages/home/home.ts`文件，并将代码替换为以下内容：
- en: '[PRE9]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Open the `./src/pages/home/home.html` file and change the template to:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`./src/pages/home/home.html`文件，并将模板更改为以下内容：
- en: '[PRE10]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is the only template for the app, but its UI will look different depending
    on the detected platform.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是应用唯一的模板，但它的UI将根据检测到的平台而有所不同。
- en: 'Replace `./src/pages/home/home.scss` with the following stylesheet:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`./src/pages/home/home.scss`替换为以下样式表：
- en: '[PRE11]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There is no need to change the global variables. Thus, you only modify the styles
    for one page. The purpose is to demonstrate the ability to customize for each
    platform.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 没有必要更改全局变量。因此，您只需修改一个页面的样式。目的是展示为每个平台定制的能力。
- en: 'Test-run the app in the browser using the following command:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令在浏览器中测试运行应用：
- en: '[PRE12]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Ionic automatically created platform-specific parent classes and put them at
    the `<body>` tag. The iOS app will include the .`ios` class. The Android app will
    have `.md class`. So, for stylesheet customization, you can leverage those existing
    classes to change the look and feel of your app.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic自动创建了平台特定的父类，并将它们放在`<body>`标签中。iOS应用将包含`.ios`类。安卓应用将包含`.md`类。因此，对于样式表定制，您可以利用这些现有的类来改变您应用的外观和感觉。
- en: Ionic 2 documentation has a list of all platform modes and configuration properties
    at [http://ionicframework.com/docs/v2/theming/platform-specific-styles/](http://%20http://ionicframework.com/docs/v2/theming/platform-specific-styles/).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 2文档列出了所有平台模式和配置属性[http://ionicframework.com/docs/v2/theming/platform-specific-styles/](http://ionicframework.com/docs/v2/theming/platform-specific-styles/)。
- en: '| Platform | Mode | Details |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 平台 | 模式 | 详情 |'
- en: '| --- | --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| iPhone/iPad/iPad | `ios` | The iOS style is used across all Apple products
    |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| iPhone/iPad/iPad | `ios` | iOS样式用于所有苹果产品 |'
- en: '| Android | `md` | *md* means **Material Design** as this is the default design
    for Android devices |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 安卓 | `md` | *md*代表**Material Design**，这是安卓设备的默认设计 |'
- en: '| Windows Phone | `wp` | Viewing on any windows device inside Cordova or Electron
    uses the Windows styles |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| Windows Phone | `wp` | 在Cordova或Electron中的任何Windows设备上查看都使用Windows样式 |'
- en: '| Core | `md` | Material Design is the default for all others |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 核心 | `md` | 对于所有其他平台，Material Design是默认的 |'
- en: 'First, let''s take a look at the Ionic Bootstrap class from Ionic Angular.
    You declared this in `app.ts` file:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看Ionic Angular中的Ionic Bootstrap类。您在`app.ts`文件中声明了它：
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This statement basically instructs the app to bootstrap with the `MyApp` object.
    The third parameter is where you can inject your customized configuration properties.
    There is a list of all `Config` properties at [http://ionicframework.com/docs/v2/api/config/Config/](http://%20http://ionicframework.com/docs/v2/api/config/Config/).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个声明基本上指示应用使用`MyApp`对象进行引导。第三个参数是您可以注入自定义配置属性的地方。所有`Config`属性列表可以在[http://ionicframework.com/docs/v2/api/config/Config/](http://ionicframework.com/docs/v2/api/config/Config/)找到。
- en: One main thing to point out here is `iconMode`. Icons are very different for
    each platform in Ionic 2\. The entire Ionicons set is now separated by the platform
    name. There are three platforms according to Ionic 2's documentation page, at
    [http://ionicframework.com/docs/v2/ionicons/](http://ionicframework.com/docs/v2/ionicons/).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这里要指出的一点是`iconMode`。在Ionic 2中，每个平台的图标都大不相同。整个Ionicons集现在根据平台名称分开。根据Ionic 2的文档页面，有三个平台，在[http://ionicframework.com/docs/v2/ionicons/](http://ionicframework.com/docs/v2/ionicons/)。
- en: 'You can even search for the icon name using the **Search Ionicons**, buttons
    as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以使用以下**搜索Ionicons**按钮搜索图标名称：
- en: '![How it works…](img/image00391.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00391.jpeg)'
- en: 'Note that you don''t need to worry about which icon to pick for which platform.
    Even though, in this example, the code forces you to choose iOS icon for all three
    platforms, you could just use the icon name and let Ionic 2 decide which icon
    to use:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你不需要担心为哪个平台选择哪个图标。即使在这个例子中，代码强制你为三个平台都选择iOS图标，你也可以只使用图标名称，让Ionic 2决定使用哪个图标：
- en: '![How it works…](img/image00392.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00392.jpeg)'
- en: 'For example, when you state the icon name as `"add"`, Ionic 2 will use `"md-add"`
    if the user is using Android, as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当你声明图标名称为`"add"`时，如果用户使用Android，Ionic 2将使用`"md-add"`，如下所示：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'There are several ways to theme your app based on the platform. First, you
    could add variables to detect the current platform as in the `HomePage` class,
    as illustrated:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 根据平台，有几种方法可以为你的应用设置主题。首先，你可以在`HomePage`类中添加变量来检测当前平台，如下所示：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`this.platform = platform` is what Ionic 2 provides. If you open up the browser
    console while running the app, you can inspect the `platform` object:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`this.platform = platform`是Ionic 2提供的。如果你在运行应用时打开浏览器控制台，你可以检查`platform`对象：'
- en: '![How it works…](img/image00393.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00393.jpeg)'
- en: This `platform` object has a rich amount of information. This is similar to
    `ionic.platform` in Ionic 1\. However, it has been restructured significantly.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`platform`对象包含大量信息。这与Ionic 1中的`ionic.platform`类似。然而，它已经进行了重大重构。
- en: 'By making the platform variables available to the view, you can use it to hide
    or show a specific DOM using `ngIf`. It''s recommended to use `ngIf` instead of
    `ngShow` because `ngShow` may show and hide the element right away, creating a
    *flickering* effect. The following is the code in the template relating to using
    those platform variables:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将平台变量提供给视图，你可以使用它来通过`ngIf`隐藏或显示特定的DOM。建议使用`ngIf`而不是`ngShow`，因为`ngShow`可能会立即显示和隐藏元素，从而产生*闪烁*效果。以下是与使用这些平台变量相关的模板中的代码：
- en: '[PRE16]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Finally, you could change the theme using platform classes directly. Consider
    the following example:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以直接使用平台类来更改主题。考虑以下示例：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This means that, whenever it's a Material Design mode (`.md` class), you will
    override the classes with your own styles. The preceding example shows an interesting
    CSS gradient, which works very nicely in mobile devices.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，每当它是Material Design模式（`.md`类）时，你将用自己的样式覆盖这些类。前面的例子显示了一个有趣的CSS渐变，它在移动设备上工作得非常好。
- en: There's more…
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Further, device information is available from the `Platform` class. You can
    even detect iPad devices at [http://ionicframework.com/docs/v2/api/platform/Platform/](http://ionicframework.com/docs/v2/api/platform/Platform/).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，设备信息可以通过`Platform`类获取。你甚至可以在[http://ionicframework.com/docs/v2/api/platform/Platform/](http://ionicframework.com/docs/v2/api/platform/Platform/)检测iPad设备。
