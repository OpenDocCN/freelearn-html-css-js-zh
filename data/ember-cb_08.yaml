- en: Chapter 8. Logging, Debugging, and Testing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章。日志、调试和测试
- en: 'In this chapter, we''ll cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将介绍以下配方：
- en: Using Ember.Logger
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ember.Logger
- en: Using Ember Inspector
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ember 检查器
- en: Verifying deprecations and using advanced features of Ember Inspector
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证弃用和使用 Ember 检查器的先进功能
- en: Using acceptance testing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用接受测试
- en: Using unit tests
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单元测试
- en: Testing components
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试组件
- en: Testing routes
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试路由
- en: Testing models
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试模型
- en: Testing controllers
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试控制器
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Testing is an important part of the Ember framework. Ember allows three different
    classifications of tests—**acceptance**, **unit**, and **integration**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 测试是 Ember 框架的一个重要部分。Ember 允许三种不同的测试分类——**接受**、**单元**和**集成**。
- en: Acceptance tests are used to test the application flow and interaction. It mimics
    the same actions that a user might have. For example, this could include filling
    out forms or navigating to different parts of an application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 接受测试用于测试应用程序流程和交互。它模拟用户可能执行的动作。例如，这可能包括填写表单或导航到应用程序的不同部分。
- en: Unit tests are used to test smaller chunks of functionality. This might include
    testing computed properties or checking fields for different element tags.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试用于测试功能的小块。这可能包括测试计算属性或检查不同元素标签的字段。
- en: Integration tests are somewhere in between unit and acceptance tests. It's recommended
    to use them with component testing. For example, integration tests work well with
    testing UI and controls.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 集成测试介于单元测试和接受测试之间。建议与组件测试一起使用。例如，集成测试与测试 UI 和控件效果良好。
- en: Creating test cases for your applications is a good practice, especially if
    this application will be used in production.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为您的应用程序创建测试用例是一种良好的实践，特别是如果这个应用程序将在生产中使用。
- en: Using Ember.Logger
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ember.Logger
- en: '**Ember.Logger** is a robust type of logging in Ember. It goes beyond the capabilities
    of `imports.console`. In this recipe, we''ll take a look at some examples on how
    to work with it in your application.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ember.Logger** 是 Ember 中一种强大的日志类型。它超越了 `imports.console` 的功能。在这个配方中，我们将查看一些示例，说明如何在您的应用程序中使用它。'
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In this project, we''ll create a simple program that demonstrates how to use
    some of the `Ember.logging` capabilities:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将创建一个简单的程序，演示如何使用一些 `Ember.logging` 功能：
- en: 'In a new program, add a new `index` route:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新程序中，添加一个新的 `index` 路由：
- en: '[PRE0]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will create a new `index` route.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将创建一个新的 `index` 路由。
- en: 'Edit the `index.js` file in the `routes` folder. Add some new logging:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 `routes` 文件夹中的 `index.js` 文件。添加一些新的日志：
- en: '[PRE1]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`Ember.logging` gives us five different logging options. All these different
    types of `log` methods accept one or more arguments. Each argument will be joined
    together and separated by a space when written to the browser console window:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Ember.logging` 提供了五种不同的日志选项。所有这些不同类型的 `log` 方法都接受一个或多个参数。当写入浏览器控制台窗口时，每个参数将被连接在一起，并用空格分隔：'
- en: '[PRE2]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is the basic form of logging in Ember. It simply logs the values to the
    browser console:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是 Ember 中日志的基本形式。它只是将值记录到浏览器控制台：
- en: '[PRE3]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `info` logger logs a message to the console as an `info` message. In Firefox
    and Chrome, a small **I** icon is displayed next to the item:'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`info` 记录器将消息作为 `info` 消息记录到控制台。在 Firefox 和 Chrome 中，旁边会显示一个小的 **I** 图标：'
- en: '[PRE4]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `error` log prints to the console with an **error** icon, red text, and
    stack trace.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`error` 日志以带有 **错误** 图标的红色文本和堆栈跟踪的形式打印到控制台。'
- en: '[PRE5]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `debug` log prints to the console in blue text.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`debug` 日志以蓝色文本打印到控制台。'
- en: '[PRE6]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The warning log will print to the console with a **warning** icon.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告日志将以带有 **警告** 图标的格式打印到控制台。
- en: '[PRE7]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `assert` statement will return an error and stack trace if the value returns
    `false`.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果返回值是 `false`，则 `assert` 语句将返回错误和堆栈跟踪。
- en: Fire up the Ember server and open **Console**. This is a screenshot of how it
    looks in Chrome:![How to do it...](img/00043.jpeg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Ember 服务器并打开 **控制台**。这是它在 Chrome 中的外观截图：![如何做...](img/00043.jpeg)
- en: How it works...
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Ember.Logger is a more powerful console logger. It's a robust logging tool
    to make debugging easier. Ember.Logger is built-in in the Ember CLI package.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Ember.Logger 是一个更强大的控制台记录器。它是一个强大的日志工具，可以简化调试。Ember.Logger 是 Ember CLI 包内建的。
- en: Using Ember Inspector
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ember 检查器
- en: The Ember Inspector is an add-on for your browser that can help you debug your
    Ember app. In this recipe, we'll look at some examples on how to use it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Ember 检查器是您浏览器的一个插件，可以帮助您调试 Ember 应用程序。在这个配方中，我们将查看一些示例，说明如何使用它。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before beginning, you must install the add-on. It's available for Chrome, Firefox,
    or Opera. Other browsers such as Internet Explorer can also be used via `bookmarklet`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你必须安装附加组件。它适用于 Chrome、Firefox 或 Opera。其他浏览器如 Internet Explorer 也可以通过 `bookmarklet`
    使用。
- en: 'Install the browser add-on for Ember Inspector:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Ember Inspector 的浏览器附加组件：
- en: 'For Firefox, install the add-ons from the following website: [https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/](https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/)'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Firefox，从以下网站安装附加组件：[https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/](https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/)
- en: 'On Chrome, install the add-on from the Chrome web store: [https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi](https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi)'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Chrome 中，从 Chrome 网上应用店安装附加组件：[https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi](https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi)
- en: 'All other browsers visit the Ember Inspector Github page for further instructions:
    [https://github.com/emberjs/ember-inspector](https://github.com/emberjs/ember-inspector)'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有其他浏览器请访问 Ember Inspector 的 GitHub 页面以获取进一步说明：[https://github.com/emberjs/ember-inspector](https://github.com/emberjs/ember-inspector)
- en: 'For the purposes of our recipe, we''ll use Ember CLI Mirage to return a simple
    `school` model. After creating a new project, run this command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了我们食谱的目的，我们将使用 Ember CLI Mirage 返回一个简单的 `school` 模型。在创建新项目后，运行此命令：
- en: '[PRE8]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will install all the necessary files so that we can mock an HTTP server.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将安装所有必要的文件，以便我们可以模拟 HTTP 服务器。
- en: 'After the add-on for Ember CLI Mirage is installed, update the `config.js`
    file in the `mirage` folder:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装了 Ember CLI Mirage 的附加组件后，更新 `mirage` 文件夹中的 `config.js` 文件：
- en: '[PRE9]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will add an HTTP GET route that our Ember client will connect when retrieving
    the school information.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将为我们的 Ember 客户端在检索学校信息时连接的 HTTP GET 路由添加。
- en: 'Update the file for the school information in the `mirage/factories/` folder
    called `school.js`:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `mirage/factories/` 文件夹中名为 `school.js` 的文件，用于学校信息：
- en: '[PRE10]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This file will be used to generate fake names and city data for our fictitious
    school.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此文件将用于生成我们虚构学校的假名字和城市数据。
- en: 'Update the `default.js` file:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `default.js` 文件：
- en: '[PRE11]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will seed the data that we need from our factories for the application.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将为我们的应用程序从工厂中生成所需的数据。
- en: 'Generate an `index` `route`, `model`, and the REST `adapter`:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成 `index` 路由、`model` 和 REST `adapter`：
- en: '[PRE12]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: These files will be used in our application, which we'll discuss in the next
    section.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些文件将用于我们的应用程序，我们将在下一节中讨论。
- en: How to do it...
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The purpose of this application is to return a list of schools. We'll be using
    the Ember Inspector to look at this data in more detail.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序的目的是返回学校列表。我们将使用 Ember Inspector 来更详细地查看这些数据。
- en: 'Open the `application.js` file in the `adapters` folder. Verify that the `RESTAdapter`
    is set:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `adapters` 文件夹中的 `application.js` 文件。验证 `RESTAdapter` 是否已设置：
- en: '[PRE13]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This tells Ember to use the REST adapter with Ember Data. Review [Chapter 7](part0059_split_000.html#1O8H61-d21a6ad8148a415181fa52c0043435bb
    "Chapter 7. Ember Models and Ember Data"), *Ember Models and Ember Data,* on Ember
    Data for a refresher.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这告诉 Ember 使用 Ember Data 的 REST 适配器。回顾 [第 7 章](part0059_split_000.html#1O8H61-d21a6ad8148a415181fa52c0043435bb
    "第 7 章。Ember 模型和 Ember Data")，*Ember 模型和 Ember Data*，以刷新 Ember Data 的知识。
- en: 'Edit the `school.js` file in the `models` folder:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 `models` 文件夹中的 `school.js` 文件：
- en: '[PRE14]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This model has two properties, `name` and `city`.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此模型有两个属性，`name` 和 `city`。
- en: 'Update the `index.hbs` file in the `app/templates` folder:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `app/templates` 文件夹中的 `index.hbs` 文件：
- en: '[PRE15]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `each` helper will iterate through every model returned and display the
    school information.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`each` 辅助函数将遍历返回的每个模型并显示学校信息。'
- en: 'Update the `index.js` file in the `app/routes` folder:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `app/routes` 文件夹中的 `index.js` 文件：
- en: '[PRE16]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Run `ember server` and you'll see a list of schools, as illustrated in the following
    image:![How to do it...](img/00044.jpeg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `ember server` 并你会看到学校列表，如下图所示：![如何操作...](img/00044.jpeg)
- en: Let's open the Ember Inspector and see what it shows. In Chrome, you can access
    this by opening the console and clicking on the **Ember** tab:![How to do it...](img/00045.jpeg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们打开 Ember Inspector 看看它显示了什么。在 Chrome 中，你可以通过打开控制台并点击 **Ember** 选项卡来访问它：![如何操作...](img/00045.jpeg)
- en: The Ember Inspector shows **View Tree**, **Routes**, **Data**, **Deprecations**,
    and **Info**.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Ember Inspector 显示 **视图树**、**路由**、**数据**、**弃用**和 **信息**。
- en: Click on **Info** in the Ember Inspector:![How to do it...](img/00046.jpeg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ember Inspector 中点击 **Info**：![如何操作...](img/00046.jpeg)
- en: Info displays all the library information loaded in this application. This can
    be really useful in finding out what version everything is using.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 信息显示在此应用程序中加载的所有库信息。这有助于了解所有内容使用的是哪个版本。
- en: Click on **View** **Tree** in the Ember Inspector:![How to do it...](img/00047.jpeg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Ember检查器中点击**视图** **树**：![如何操作...](img/00047.jpeg)
- en: The **View Tree** shows all sorts of information about the application. It shows
    the current routes, templates, models, and more. This can be helpful to figure
    out what's currently loaded on the screen.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**视图树**显示了有关应用程序的各种信息。它显示了当前的路由、模板、模型等。这有助于确定当前屏幕上加载了什么。'
- en: Click on **Routes** in the Ember Inspector:![How to do it...](img/00048.jpeg)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Ember检查器中点击**路由**：![如何操作...](img/00048.jpeg)
- en: The **Routes** show all the available routes, controllers, and templates. Some
    routes may not be defined but will be displayed, such as **loading**.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**路由**显示所有可用的路由、控制器和模板。一些路由可能尚未定义，但将显示，例如**加载**。'
- en: Click on **$E** next to the **index** route:![How to do it...](img/00049.jpeg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**index**路由旁边的**$E**：![如何操作...](img/00049.jpeg)
- en: In the Inspector, you can assign instance variables by clicking on **$E**.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在检查器中，您可以通过点击**$E**来分配实例变量。
- en: Open the console and add a new record using the instance variable, **$E**:![How
    to do it...](img/00050.jpeg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开控制台并使用实例变量**$E**添加新记录：![如何操作...](img/00050.jpeg)
- en: 'You can type the following in the console window in the browser:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在浏览器的控制台窗口中键入以下内容：
- en: '[PRE17]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This will add a new record to your data store. The page will automatically update
    with this information. This is very valuable. You can use this anywhere to help
    troubleshoot issues.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在您的数据存储中添加一条新记录。页面将自动更新此信息。这非常有价值。您可以在任何地方使用它来帮助调试问题。
- en: Click on `Data` to see all the model data:![How to do it...](img/00051.jpeg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**数据**以查看所有模型数据：![如何操作...](img/00051.jpeg)
- en: Optionally, you can click on any of this data and verify the attributes. You
    can make changes as well and it will automatically update to the screen.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可选地，您可以点击这些数据中的任何一个并验证其属性。您也可以进行更改，并且它将自动更新到屏幕上。
- en: Verifying deprecations and using advanced features of Ember Inspector
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证弃用和使用Ember检查器的高级功能
- en: In this recipe, we will explore deprecations using advanced features of Ember
    Inspector.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将使用Ember检查器的先进功能来探索弃用。
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Deprecation warnings will be displayed in deprecations. Check this to make
    sure that nothing in your application is deprecated. If deprecation is listed,
    it will have a link that you can click on to see what you need to do to fix it:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 弃用警告将在弃用部分显示。请检查此选项以确保您的应用程序中没有弃用内容。如果列出弃用，它将有一个您可以点击的链接，以查看您需要做什么来修复它：
- en: '![How to do it...](img/00052.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/00052.jpeg)'
- en: How it works...
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Ember Inspector was designed to make the creating and debugging of Ember applications
    easier. It was created as an add-on for most modern web browsers. It displays
    your current application information, routes, templates, data, and more.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Ember检查器旨在使创建和调试Ember应用程序变得更加容易。它被创建为大多数现代网络浏览器的插件。它显示您当前应用程序的信息、路由、模板、数据等。
- en: 'It''s an open source add-on and has an active developer community behind it.
    New features are being added all the time. To request your own, check out the
    Github page here: [https://github.com/emberjs/ember-inspector](https://github.com/emberjs/ember-inspector)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个开源插件，并有一个活跃的开发者社区支持。新功能正在不断添加。要请求您自己的功能，请查看以下GitHub页面：[https://github.com/emberjs/ember-inspector](https://github.com/emberjs/ember-inspector)
- en: Using acceptance testing
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用接受测试
- en: Acceptance tests generally help test workflows and emulate user interactions.
    In this recipe, we'll look at creating a few simple acceptance tests.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接受测试通常有助于测试工作流程并模拟用户交互。在本食谱中，我们将探讨创建几个简单的接受测试。
- en: How to do it...
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In a new application, create a new component called `book-shelf` and a new
    acceptance test called `add-book-test.js`:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新应用程序中，创建一个名为`book-shelf`的新组件和一个名为`add-book-test.js`的新接受测试：
- en: '[PRE18]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This will create the code necessary for the `book-shelf` component and the `add-book`
    acceptance test. Keep in mind that an integration test will also be generated
    for the `book-shelf` component. We will not be updating the integration test in
    this example.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将为`book-shelf`组件和`add-book`接受测试创建必要的代码。请注意，将为`book-shelf`组件生成一个集成测试。在本示例中，我们不会更新集成测试。
- en: 'Update the component file with a new `books` array and new action:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新的`books`数组和新的操作更新组件文件：
- en: '[PRE19]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This component uses the `books` property to keep track of books on the book
    shelf. The `books` property is an Ember array of objects. The `add` action adds
    another object to the array. `Ember.A` is used to declare an Ember array.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此组件使用 `books` 属性来跟踪书架上的书籍。`books` 属性是一个 Ember 对象数组。`add` 动作将另一个对象添加到数组中。使用 `Ember.A`
    声明 Ember 数组。
- en: 'Update the `book-shelf.hbs` component template file:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `book-shelf.hbs` 组件模板文件：
- en: '[PRE20]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The component lists all the books. It also has an `input` helper and `button`.
    The button has an action called `add` that gets triggered on the click event.
    It passes on the value from the `input` helper as an argument to `action`.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 组件列出所有书籍。它还有一个 `input` 辅助器和 `button`。按钮有一个名为 `add` 的动作，在点击事件上被触发。它将 `input`
    辅助器的值作为参数传递给 `action`。
- en: 'Add the `book-shelf` component to the application file:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `book-shelf` 组件添加到应用程序文件：
- en: '[PRE21]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This code adds the `book-shelf` component to the application template.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码将 `book-shelf` 组件添加到应用程序模板中。
- en: 'Add the test code to the `add-book-test.js` file:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将测试代码添加到 `add-book-test.js` 文件：
- en: '[PRE22]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This acceptance test visits the root of the application at `/`. It then adds
    new text to the `input` helper and clicks the `button`. It then checks the URL
    and template to make sure the text was added.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个验收测试访问应用程序的根目录 `/`。然后，它向 `input` 辅助器添加新文本并点击 `button`。然后检查 URL 和模板，以确保文本已被添加。
- en: The code at the top is mostly boilerplate. The tests are at the bottom and can
    be followed step by step. The `visit`, `fillIn`, `click`, and `andThen` helpers
    are all asynchronous test helpers.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 顶部的代码大多是样板代码。测试在底部，可以按步骤进行。`visit`、`fillIn`、`click` 和 `andThen` 辅助器都是异步测试辅助器。
- en: Note
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The following is a list of all the asynchronous and synchronous test helpers:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是一个所有异步和同步测试辅助器的列表：
- en: '`click(selector)`: This clicks an element and triggers the corresponding action,
    and returns a promise that fulfils when asynchronous behavior is complete'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`click(selector)`: 这将点击一个元素并触发相应的动作，并在异步行为完成后返回一个承诺'
- en: '`fillIn(selector, value)`: This fills in the selected input with the values
    given, and returns a promise that fulfils when all asynchronous behavior is complete'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fillIn(selector, value)`: 这将使用给定的值填充选定的输入，并在所有异步行为完成后返回一个承诺'
- en: '`keyEvent(selector, type, keyCode)`: This simulates `keypress`, `keydown`,
    or `keyup` on the element'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyEvent(selector, type, keyCode)`: 这在元素上模拟 `keypress`、`keydown` 或 `keyup`'
- en: '`triggerEvent(selector, type, options)`: This triggers the given event on the
    element identified by the `selector`'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`triggerEvent(selector, type, options)`: 这将在由 `selector` 标识的元素上触发给定的事件'
- en: '`visit(url)`: This visits the route given by the URL, and returns a promise
    that is fulfilled when all asynchronous behavior is complete'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`visit(url)`: 这将访问由 URL 给定的路由，并在所有异步行为完成后返回一个承诺'
- en: '`currentPath()`: This returns the current path'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`currentPath()`: 这将返回当前路径'
- en: '`currentRouteName()`: This returns the currently active route'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`currentRouteName()`: 这将返回当前激活的路由'
- en: '`currentURL()`: This returns the current URL'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`currentURL()`: 这将返回当前 URL'
- en: '`find(selector, context)`: This finds an element starting at the app''s root
    element; optionally, you can add some context'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`find(selector, context)`: 这将从应用程序的根元素开始查找元素；可选地，您可以添加一些上下文'
- en: Run `ember server` and visit the `/tests` URL. This URL will display all the
    tests running. Look for the acceptance test for add-book:![How to do it...](img/00053.jpeg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `ember server` 并访问 `/tests` URL。此 URL 将显示所有正在运行的测试。查找添加书籍的验收测试：![如何操作...](img/00053.jpeg)
- en: 'This acceptance test shows that everything passed. Alternatively, you can also
    run the tests on the command line:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个验收测试表明一切通过。或者，您也可以在命令行上运行测试：
- en: '[PRE23]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This will bring up a screen so that you can run tests in your console. To use
    this, you must first navigate to `localhost` on port `7357`. This screen will
    then refresh with the number of passed tests:![How to do it...](img/00054.jpeg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将弹出一个屏幕，以便您可以在控制台中运行测试。要使用此功能，您必须首先导航到 `localhost` 的 `7357` 端口。然后，此屏幕将刷新以显示通过测试的数量：![如何操作...](img/00054.jpeg)
- en: Each test will be checked, and any tests that fail will be shown on this screen.
    The test will be rerun after any file changes.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个测试都将进行检查，并且任何失败的测试都将显示在此屏幕上。在文件更改后，测试将被重新运行。
- en: How it works...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Acceptance tests are used to test the user interaction and flow. This is done
    via Ember's QUnit testing framework, although other testing frameworks are supported
    using third-party add-ons. You can navigate to the `/tests` URL or run `ember
    test` on the server to execute test cases.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接受测试用于测试用户交互和流程。这是通过 Ember 的 QUnit 测试框架完成的，尽管可以使用第三方插件支持其他测试框架。您可以导航到 `/tests`
    URL 或在服务器上运行 `ember test` 来执行测试用例。
- en: Using unit tests
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用单元测试
- en: Unit tests are used to test smaller chunks of functionality. In this recipe,
    we'll see an example of this.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试用于测试较小的功能块。在这个菜谱中，我们将看到一个例子。
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: In this example, we'll create a simple `Ember.Object` with a computed property.
    We'll test this computed property and assert if the value returned is correct
    or not.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将创建一个简单的 `Ember.Object`，并带有计算属性。我们将测试这个计算属性并断言返回的值是否正确。
- en: 'In a new project, create a new `first-last.js` file in the `models` folder:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新项目中，在 `models` 文件夹中创建一个新的 `first-last.js` 文件：
- en: '[PRE24]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In this file, we have two properties, `firstName` and `lastName`. The `fullName`
    computed property combines these two and returns a full name. If either of these
    properties change, the computed property will fire.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此文件中，我们有两个属性，`firstName` 和 `lastName`。计算属性 `fullName` 将这两个属性组合起来并返回一个全名。如果这些属性中的任何一个发生变化，计算属性将会触发。
- en: 'Create a new unit test that checks `Ember.Object` and `computed` property:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的单元测试来检查 `Ember.Object` 和 `computed` 属性：
- en: '[PRE25]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The `model-test` unit test generated will create a new test file in the `/tests/unit/models`
    directory.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成的 `model-test` 单元测试将在 `/tests/unit/models` 目录中创建一个新的测试文件。
- en: 'Update the `first-last-test.js` file with a new unit test that checks to see
    whether the computed property is returning the correct values:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `first-last-test.js` 文件，添加一个新的单元测试来检查计算属性是否返回正确的值：
- en: '[PRE26]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `moduleFor` is a unit test helper provided by `ember-qunit`. This helps
    us get access to the model that we created for lookup and instantiation. The `unit:
    true` property flags the test case as a unit test. As we are using `moduleFor`,
    we can instantiate the `firstLast` object using `this.subject()`. The test then
    sets `firstName` and `lastName` of the computed properties and does `assert` to
    make sure that they are equal.'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`moduleFor` 是由 `ember-qunit` 提供的单元测试辅助工具。这有助于我们获取用于查找和实例化的模型。`unit: true` 属性将测试用例标记为单元测试。由于我们使用
    `moduleFor`，我们可以使用 `this.subject()` 实例化 `firstLast` 对象。然后测试设置计算属性的 `firstName`
    和 `lastName` 并进行 `assert` 以确保它们相等。'
- en: Run `ember server` and check the output of the `/tests` URL:![How to do it...](img/00055.jpeg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `ember server` 并检查 `/tests` URL 的输出：![如何操作...](img/00055.jpeg)
- en: The output shows that the unit tests passed
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出显示单元测试已通过
- en: 'Update the `first-last-test.js` file with the wrong value:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `first-last-test.js` 文件，使用错误的值：
- en: '[PRE27]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: We updated the code, so now the test will fail because the text does *NOT* match.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们更新了代码，所以现在测试将失败，因为文本不匹配。
- en: Navigate to the `/tests` folder and see the output:![How to do it...](img/00056.jpeg)
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `/tests` 文件夹并查看输出：![如何操作...](img/00056.jpeg)
- en: Now the test fails because the text does not match. You can see this output
    by navigating to the `/tests` folder or running `ember test` from the command
    line.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在测试失败，因为文本不匹配。您可以通过导航到 `/tests` 文件夹或从命令行运行 `ember test` 来查看此输出。
- en: How it works...
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Unit tests are used to test small pieces of code or functionality. They are
    another part of the Ember QUnit library. Unit tests can run for virtually anything
    in your application, including models, components, or controllers.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试用于测试小块代码或功能。它们是 Ember QUnit 库的一部分。单元测试可以运行您应用程序中的几乎所有内容，包括模型、组件或控制器。
- en: Testing components
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试组件
- en: Components should be tested using integration tests. In this recipe, we'll look
    at a simple example of a component that changes the size of the text.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 应该使用集成测试来测试组件。在这个菜谱中，我们将查看一个简单示例，该示例是一个改变文本大小的组件。
- en: How to do it...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In a new application, create a new component called `font-sizer`:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新应用中，创建一个名为 `font-sizer` 的新组件：
- en: '[PRE28]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This will generate a new component called `font-sizer`. This component will
    be used to resize text.
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将生成一个名为 `font-sizer` 的新组件。此组件将用于调整文本大小。
- en: 'Update the `font-sizer.js` file in the `components` folder:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `components` 文件夹中的 `font-sizer.js` 文件：
- en: '[PRE29]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: All components render as `div` tags inside of templates. We can add different
    attributes to these `div` tags if needed. In this case, the `attributeBindings`
    property will add a `style` tag. The `style` tag will be a computed property that
    updates whenever a `size` value changes. `Ember.Handlebars.SafeString` lets Ember
    know that the string should be displayed without escaping and that it is safe.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有组件都在模板内部以`div`标签的形式渲染。如果需要，我们可以向这些`div`标签添加不同的属性。在这种情况下，`attributeBindings`属性将添加一个`style`标签。`style`标签将是一个计算属性，每当`size`值更改时都会更新。`Ember.Handlebars.SafeString`让Ember知道字符串应该以不转义的形式显示，并且它是安全的。
- en: 'Update the `application.hbs` file with the new component:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新组件更新`application.hbs`文件：
- en: '[PRE30]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `font-sizer` component is in block form. The test text will be in the `div`
    block.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`font-sizer`组件是块形式的。测试文本将在`div`块中。'
- en: 'Update the `font-sizer-test.js` file so that we can check to make sure that
    the attribute was added:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`font-sizer-test.js`文件，以便我们可以检查确保属性已被添加：
- en: '[PRE31]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This code is automatically generated for us when we created the component.
    The `moduleForComponent` helper is used for components. The `integration`: `true`
    tags this test as an integration test. By doing this, we have the ability to render
    the component and pass the `size` property to it. The `assert.equal` method is
    used to check whether `font-size` is set correctly.'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '当我们创建组件时，此代码会自动为我们生成。`moduleForComponent`辅助函数用于组件。`integration`: `true`标签将此测试标记为集成测试。通过这样做，我们能够渲染组件并将`size`属性传递给它。使用`assert.equal`方法来检查`font-size`是否设置正确。'
- en: Run `ember server` and check `/tests`:![How to do it...](img/00057.jpeg)
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ember server`并检查`/tests`：![如何操作...](img/00057.jpeg)
- en: The test case passed
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试用例通过
- en: Testing actions in the font-sizer component
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在字体大小组件中测试操作
- en: We can simulate actions and test the results to verify the expected results.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以模拟操作并测试结果以验证预期结果。
- en: 'Using the existing application, update the `font-sizer.js` file with a new
    action:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用现有应用程序，更新`font-sizer.js`文件以添加新操作：
- en: '[PRE32]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This new action will set the `textInfo` property to `'Hi'`.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此新操作将`textInfo`属性设置为`'Hi'`。
- en: 'Update the `font-sizer.js` file in the `components` folder:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`components`文件夹中的`font-sizer.js`文件：
- en: '[PRE33]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In this template, we created a new `div` tag with an ID of `info` surrounding
    the `textInfo` property. A new `updateText` action was added to the `button` click.
    This action updates the `textInfo` property.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个模板中，我们创建了一个新的`div`标签，其ID为`info`，围绕`textInfo`属性。为`button`点击添加了一个新的`updateText`操作。此操作更新`textInfo`属性。
- en: 'Add a new test to the `font-sizer-test.js` file so that it can check the new
    action added:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`font-sizer-test.js`文件添加一个新测试，以便它可以检查添加的新操作：
- en: '[PRE34]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: By setting `assert.expect(2)`, the test must have two asserts or it will fail.
    We first render the component using the `this.render` helper. The next statement
    checks whether the value returned from `this.$('#info').text()` equals `Hello
    World`. We then simulate clicking the button. The last statement checks whether
    `this.$('#info').text()` equals `Hi`.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过设置`assert.expect(2)`，测试必须有两个断言，否则将失败。我们首先使用`this.render`辅助函数渲染组件。下一个语句检查`this.$('#info').text()`返回的值是否等于`Hello
    World`。然后我们模拟点击按钮。最后一个语句检查`this.$('#info').text()`是否等于`Hi`。
- en: Run `ember server` and navigate to `/tests`. All the tests will pass:![Testing
    actions in the font-sizer component](img/00058.jpeg)
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ember server`并导航到`/tests`。所有测试都将通过：![在字体大小组件中测试操作](img/00058.jpeg)
- en: How it works...
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Components use integration tests by way of the `moduleForComponent` helper.
    This feature of Ember's QUnit takes advantage of how Ember actually sees your
    components. You can test bound values as well as the returning actions.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 组件通过`moduleForComponent`辅助函数使用集成测试。Ember的QUnit功能利用了Ember实际查看组件的方式。您可以测试绑定值以及返回的操作。
- en: Testing routes
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试路由
- en: Testing routes can be done either by acceptance tests or unit tests. In this
    example, we'll create a simple unit test for a route.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 测试路由可以通过验收测试或单元测试来完成。在这个例子中，我们将为路由创建一个简单的单元测试。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In a new application, generate a new `students` route:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新应用程序中，生成一个新的`students`路由：
- en: '[PRE35]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This command will generate the route code for students.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令将为学生生成路由代码。
- en: 'Edit the students route information and add a new property:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑学生路由信息并添加一个新属性：
- en: '[PRE36]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This route has a property called `someText`.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此路由有一个名为`someText`的属性。
- en: 'Edit the `students-tests.js` file in the `tests/unit/routes` folder:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`tests/unit/routes`文件夹中的`students-tests.js`文件：
- en: '[PRE37]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: In this example, we are checking the output of the `someText` property. The
    first `assert.equal` gets the property and checks it against the `someText` value.
    The route instance can also set properties. The next assert checks to see whether
    the new value has been set. The final assert makes sure that the route is available.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个例子中，我们正在检查 `someText` 属性的输出。第一个 `assert.equal` 获取属性并检查它是否与 `someText` 值匹配。路由实例也可以设置属性。下一个断言检查新值是否已设置。最后的断言确保路由可用。
- en: Run `ember server` and navigate to `/tests`:![How to do it...](img/00059.jpeg)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `ember server` 并导航到 `/tests`：![如何做...](img/00059.jpeg)
- en: This shows all the tests passed
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这表明所有测试都通过了
- en: How it works...
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The route in your Ember application has a few different functions. It can hold
    your model data and have properties and actions. When testing routes, we can use
    it with a more general acceptance test or as an individual unit test.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的 Ember 应用程序中，路由有几个不同的功能。它可以存储你的模型数据，并具有属性和操作。当测试路由时，我们可以使用它进行更通用的验收测试或作为单独的单元测试。
- en: Testing models
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试模型
- en: When testing models, you can use Ember Data to help. In this recipe, we'll create
    a model and test to make sure that it's creating data correctly.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当测试模型时，你可以使用 Ember Data 来帮助。在这个菜谱中，我们将创建一个模型并测试以确保它正确地创建数据。
- en: How to do it...
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In a new application, generate a new student model:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新应用程序中，生成一个新的学生模型：
- en: '[PRE38]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: This will generate the necessary files for the student model.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将生成学生模型所需的所有文件。
- en: 'Update the student model with two properties:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新学生模型，添加两个属性：
- en: '[PRE39]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: This model has two properties, `firstName` and `lastName`. Both hold `string`
    values.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个模型有两个属性，`firstName` 和 `lastName`。两者都持有 `string` 类型的值。
- en: 'Add a new unit test for the new model that tests the new properties:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为新模型添加一个新的单元测试，以测试新属性：
- en: '[PRE40]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This test uses the `moduleForModel` helper. The first test checks whether the
    model is okay and it exists. The second test checks the properties:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个测试使用 `moduleForModel` 辅助函数。第一个测试检查模型是否正常存在。第二个测试检查属性：
- en: '[PRE41]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'When creating the `model` instance, you can pass in the values of the `model`
    properties. In this case, the `{firstName: ''Erik'', lastName: ''Hanchett''}`
    object is created in the store. We can access these values using the `model.get`
    method. The `assert.equal` method checks against the model to make sure that the
    values match.'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在创建 `model` 实例时，你可以传递 `model` 属性的值。在这种情况下，在存储中创建了一个 `{firstName: ''Erik'',
    lastName: ''Hanchett''}` 对象。我们可以使用 `model.get` 方法访问这些值。`assert.equal` 方法与模型进行比较，以确保值匹配。'
- en: Run `ember server` and navigate to `/tests`, and you'll see the passing tests:![How
    to do it...](img/00060.jpeg)
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `ember server` 并导航到 `/tests`，你会看到通过测试的测试：![如何做...](img/00060.jpeg)
- en: This shows that both tests passed
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这表明两个测试都通过了
- en: How it works...
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `moduleForModel` helper is used to access Ember's model information. This
    is done with Ember Data so that models can be tested. Ember's QUnit provides a
    way to test the module completely.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`moduleForModel` 辅助函数用于访问 Ember 的模型信息。这是通过 Ember Data 实现的，以便可以测试模型。Ember 的
    QUnit 提供了一种完全测试模块的方法。'
- en: Testing controllers
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试控制器
- en: Controllers should be tested in your application. In this recipe, we'll test
    some basic actions from a controller.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 应该在你的应用程序中测试控制器。在这个菜谱中，我们将测试一些来自控制器的基本操作。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Create a new `index` controller:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `index` 控制器：
- en: '[PRE42]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This creates a new controller called `index`.
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这创建了一个名为 `index` 的新控制器。
- en: 'In the index controller, add a new property and action:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在索引控制器中，添加一个新的属性和操作：
- en: '[PRE43]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This controller has one property named `myValue`. Another action called `pressed`
    changes the value of `myValue` to whatever value is passed in the function.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个控制器有一个名为 `myValue` 的属性。另一个名为 `pressed` 的操作将 `myValue` 的值更改为函数中传入的任何值。
- en: 'Update the index unit test. Add a few tests for the action and property:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新索引单元测试。为操作和属性添加一些测试：
- en: '[PRE44]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The `moduleFor` helper is used here for controllers. The first test checks
    to make sure that the controller exists:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里使用 `moduleFor` 辅助函数来测试控制器。第一个测试确保控制器存在：
- en: '[PRE45]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This test creates an instance of the controller with `this.subject`. The initial
    value is checked to make sure that it's correct. To send an action to the controller,
    the `controller.send` method is called. The send method can take one or more parameters.
    The first is the name of the action to be triggered. This is followed by any values
    that should be passed in the method.
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个测试使用`this.subject`创建了一个控制器实例。检查初始值以确保其正确性。要向控制器发送动作，调用`controller.send`方法。发送方法可以接受一个或多个参数。第一个是触发动作的名称。之后是应该传递给方法的任何值。
- en: Run `ember server` and navigate to `/tests`. This will display the passed tests:![How
    to do it...](img/00061.jpeg)
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ember server`并导航到`/tests`。这将显示通过测试：![如何操作...](img/00061.jpeg)
- en: This message shows that all tests passed
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这条消息显示所有测试都通过了
- en: How it works...
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Controller tests are very similar to the unit tests that we discussed before.
    They use QUnit's `moduleFor` helper. In a controller, we can test the properties
    or actions and make sure that the results are as we expected.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器测试与我们之前讨论的单元测试非常相似。它们使用QUnit的`moduleFor`辅助函数。在一个控制器中，我们可以测试属性或动作，并确保结果符合预期。
