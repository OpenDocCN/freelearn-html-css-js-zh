- en: Chapter 7. Publishing Your App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。发布您的应用
- en: At this point, you have all the knowledge needed to build a bot that can increase
    your productivity and improve communications across teams. Hopefully, by now you
    have already thought of an idea for a bot that will not just make your own life
    easier but may also be useful for others. In this chapter, you will learn how
    to make your bot accessible to users outside of your own team and across the Slack
    community.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经拥有了构建一个能够提高您工作效率并改善团队间沟通的机器人的所有知识。希望到现在为止，您已经想到了一个机器人的想法，它不仅能让您的生活更轻松，也可能对他人有用。在本章中，您将学习如何使您的机器人对您自己的团队以外的用户和整个Slack社区开放。
- en: 'We will cover the steps necessary to add your bot to the Slack app directory
    and to make it accessible to others. We will review the following steps to add
    your bot onto the Slack app directory:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将介绍将您的机器人添加到Slack应用目录并使其对他人可访问所需的步骤。我们将回顾以下步骤，以将您的机器人添加到Slack应用目录：
- en: Registering your bot and obtaining tokens
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册您的机器人和获取令牌
- en: Understanding the OAuth process
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解OAuth流程
- en: Configuring the **Add to Slack** button
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置“添加到Slack”按钮
- en: Scopes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围
- en: Submitting your app or bot to the app directory
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的应用或机器人提交到应用目录
- en: Monetizing your bot
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过您的机器人盈利
- en: The Slack app directory
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Slack应用目录
- en: In order to make adding apps easy for their users, Slack has created the app
    directory ([https://slack.com/apps](https://slack.com/apps)). This is a place
    to shop for apps and bots to add to your Slack team. Like other app stores available,
    every app submitted to the app directory is controlled and has to be approved
    by Slack itself to counteract spam and abuse.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让用户更容易添加应用，Slack创建了应用目录([https://slack.com/apps](https://slack.com/apps))。这是一个购买应用和机器人以添加到您的Slack团队的地方。与其他应用商店一样，提交到应用目录的每个应用都受到控制，并且必须由Slack本身批准，以防止垃圾邮件和滥用。
- en: It is possible for other teams to use your bot by means of webhooks, as we saw
    in the previous chapter. However, if you are trying to reach a wide audience and
    potentially monetize your bot, the app directory is the most efficient way.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所示，其他团队可以通过webhooks使用您的机器人。然而，如果您试图触及广泛的受众并可能通过您的机器人盈利，应用目录是最有效的方式。
- en: '![The Slack app directory](img/B05384_07_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![Slack应用目录](img/B05384_07_01.jpg)'
- en: The app directory makes adding new apps easy
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 应用目录使添加新应用变得简单
- en: The end goal of this chapter is to allow users to add a bot to their Slack team
    by clicking an **Add to Slack** button, which we will cover in detail later.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的最终目标是允许用户通过点击**添加到Slack**按钮将机器人添加到他们的Slack团队，我们将在稍后详细说明。
- en: Let's start by registering an app. In this example, we will add the *Wikibot*
    bot, which we built in [Chapter 3](ch03.html "Chapter 3. Adding Complexity"),
    *Adding Complexity*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从注册一个应用开始。在这个例子中，我们将添加*Wikibot*机器人，这是我们[第3章](ch03.html "第3章。增加复杂性")“增加复杂性”中构建的。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that our registering of Wikibot (and the use of the Wikipedia API)
    is for demonstrative purposes only. Always check the terms and conditions of a
    third-party API before using it for a bot you intend to publish. In the case of
    Wikibot, for example, we can use the Wikipedia API but aren't allowed to publish
    a bot named `Wikipedia bot`, as we do not own the trademark.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们注册Wikibot（以及使用维基百科API）仅用于演示目的。在使用第三方API为打算发布的机器人之前，请始终检查其条款和条件。例如，对于Wikibot，我们可以使用维基百科API，但不允许发布名为“维基百科机器人”的机器人，因为我们不拥有该商标。
- en: Registering your app and obtaining tokens
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册您的应用并获取令牌
- en: Certain unique tokens are required in order to successfully authenticate with
    Slack's OAuth servers. This is necessary so that Slack can determine whether we
    are who we say we are and whether our app or bot is actually integrated with the
    team we are attempting to get access to.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功通过Slack的OAuth服务器进行身份验证，需要某些独特的令牌。这是必要的，以便Slack可以确定我们是否是我们所说的我们，以及我们的应用或机器人是否实际上与我们试图获取访问权限的团队集成。
- en: 'We start by navigating to the Slack new app registration page at [https://api.slack.com/applications/new](https://api.slack.com/applications/new).
    Fill out the form by picking a name for your bot, the team it originated from,
    descriptions of your bot, links to help pages, and a redirect URI:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先导航到Slack新应用注册页面[https://api.slack.com/applications/new](https://api.slack.com/applications/new)。通过选择机器人的名称、来源团队、机器人的描述、帮助页面链接和重定向URI来填写表格：
- en: '![Registering your app and obtaining tokens](img/B05384_07_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![注册您的应用和获取令牌](img/B05384_07_02.jpg)'
- en: Be as descriptive as you can when filling out this form
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在填写此表格时，尽可能详细。
- en: After saving your settings, you can choose to set up a bot user, webhook, or
    slash command. For Wikibot, we will be setting up a bot user.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 保存您的设置后，您可以选择设置机器人用户、webhook或slash命令。对于Wikibot，我们将设置一个机器人用户。
- en: '![Registering your app and obtaining tokens](img/B05384_07_03.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![注册您的应用和获取令牌](img/B05384_07_03.jpg)'
- en: If your specified username is taken, Slack will edit it slightly to avoid conflicts
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您指定的用户名已被占用，Slack会稍作修改以避免冲突。
- en: 'Once you''ve saved your changes, you should be presented with OAuth information
    on the next screen. First, make sure to save the **Client ID** and **Client Secret**
    codes from this page before moving on:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 保存您的更改后，您应该在下一屏看到OAuth信息。首先，在继续之前，请确保保存此页面的**客户端ID**和**客户端密钥**代码：
- en: '![Registering your app and obtaining tokens](img/B05384_07_04.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![注册您的应用和获取令牌](img/B05384_07_04.jpg)'
- en: Never share your client secret with anyone
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不要与任何人分享您的客户端密钥。
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This process does not make your bot visible to the entire Slack user base; it
    simply registers your intent to develop an app. You will be able to test your
    app through the OAuth process. We will cover how to submit your bot to the app
    directory in a later section.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程不会使您的机器人对整个Slack用户群可见；它只是注册您开发应用的意图。您将通过OAuth过程测试您的应用。我们将在稍后的部分介绍如何将您的机器人提交到应用目录。
- en: Understanding the OAuth process
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解OAuth过程
- en: In order to implement a bot user in a team that is not our own, we require a
    bot token similar to the ones we created earlier for our own team. We can request
    this token, but first we must prove that we are who we say we are using the OAuth
    process. **OAuth** (**Open Authentication**) is an open standard for authentication
    used by many companies, large and small.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在不是我们自己的团队中实现机器人用户，我们需要一个类似于我们之前为我们的团队创建的机器人令牌。我们可以请求此令牌，但首先我们必须使用OAuth过程证明我们是所说的那个人。**OAuth**（**开放认证**）是一个由许多公司使用的开放标准认证，无论大小。
- en: 'The authentication process works through the following steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 认证过程通过以下步骤进行：
- en: The user clicks the **Add to Slack** button.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户点击**添加到Slack**按钮。
- en: Slack sends a request to the redirect URI provided in our app's settings page.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Slack会将请求发送到我们在应用设置页面提供的重定向URI。
- en: 'Once the request is received on our server, we redirect it to the authorization
    API endpoint ([https://slack.com/oauth/authorize](https://slack.com/oauth/authorize))
    and include the following parameters in the query string:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们的服务器收到请求，我们将将其重定向到授权API端点（[https://slack.com/oauth/authorize](https://slack.com/oauth/authorize)），并在查询字符串中包含以下参数：
- en: '`client_id`: This is the unique ID given to us when we first created our app.'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`client_id`：这是我们首次创建应用时给出的唯一ID。'
- en: '`scope`: This includes the permissions we require for our app. We will go into
    more detail on scopes later in this chapter.'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scope`：这包括我们应用所需的权限。我们将在本章稍后详细介绍权限。'
- en: '`redirect_uri`: This is an optional parameter. This is the URI that Slack will
    send the authorization results to. If left blank, the `redirect_uri` specified
    in the app settings page is used.'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`redirect_uri`：这是一个可选参数。这是Slack将发送授权结果的URI。如果留空，则使用应用设置页面中指定的`redirect_uri`。'
- en: '`State`: This is a string we create; it could contain data we wish to preserve
    or function as our own identification method. For example, we could populate this
    field with a secret phrase that only we know, which we can later use to ensure
    that this request came from a trusted source.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`State`：这是我们创建的字符串；它可以包含我们希望保留的数据或作为我们自己的识别方法。例如，我们可以用只有我们知道的秘密短语填充此字段，我们可以在以后使用它来确保此请求来自受信任的来源。'
- en: '`Team`: This is the Slack team ID we wish to restrict our application to. This
    is useful when debugging our integration.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Team`：这是我们希望将我们的应用程序限制到的Slack团队ID。这在调试我们的集成时很有用。'
- en: 'Slack sends a HTTP GET request to the redirect URI provided in our previous
    request. If absent, it defaults to the URI we provided in our app''s settings
    page. The request contains the following parameters:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Slack会向我们在之前请求中提供的重定向URI发送一个HTTP GET请求。如果未提供，则默认使用我们在应用设置页面提供的URI。请求包含以下参数：
- en: '`code`: This is a temporary code generated by Slack, and it is used to confirm
    our identity'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`code`：这是Slack生成的临时代码，用于确认我们的身份。'
- en: '`state`: This is the string we created earlier, and it can be used to make
    sure this request is legitimate'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`state`：这是我们之前创建的字符串，可以用来确保此请求是合法的。'
- en: 'Armed with all the tools and codes we need, we make a request for a bot user
    token from Slack in another HTTP GET request, passing the following parameters:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 凭借我们需要的所有工具和代码，我们通过另一个HTTP GET请求向Slack请求机器人用户令牌，传递以下参数：
- en: '`client_id`: This is the unique client ID given to us in the app''s settings
    page'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`client_id`: 这是在应用设置页面给我们的唯一客户端ID'
- en: '`client_secret`: This is the unique and secret ID given to us in the app''s
    settings page'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`client_secret`: 这是在应用设置页面给我们的唯一且秘密的ID'
- en: '`code`: This is the code given to us by the request in step 4'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`code`: 这是第4步请求给我们的代码'
- en: '`redirect_uri`: This must match the previous `redirect_`uri if one was sent;
    otherwise, it is optional'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`redirect_uri`: 如果之前发送了`redirect_`uri，则此必须匹配；否则，它是可选的'
- en: 'Finally, if all went well, we will receive a response from Slack with all the
    data we require. It should look something like this:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果一切顺利，我们将从Slack收到包含我们所需所有数据的响应。它看起来可能像这样：
- en: '[PRE0]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To make this a bit easier to understand, let''s look at a chart of these transactions:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让这个过程更容易理解，让我们看看这些交易的图表：
- en: '![Understanding the OAuth process](img/B05384_07_05.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![理解OAuth流程](img/B05384_07_05.jpg)'
- en: Slack's OAuth authorization procedure
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Slack的OAuth授权流程
- en: 'Now, let''s look at the preceding code example. In order to make our lives
    a bit easier, we will use the Express web framework ([http://expressjs.com/](http://expressjs.com/))
    and the familiar `superagent` AJAX library. Make sure to install both by using
    the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看前面的代码示例。为了使我们的生活更加轻松，我们将使用Express网络框架([http://expressjs.com/](http://expressjs.com/))和熟悉的`superagent`
    AJAX库。请确保使用以下命令安装它们：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, let''s put our server together; create or reuse an `index.js` file and
    paste the following code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们构建我们的服务器；创建或重用`index.js`文件，并粘贴以下代码：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The highlighted areas indicate where you should fill in your own tokens and
    URIs.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 突出的区域表示您应该填写自己的令牌和URI。
- en: Note
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is highly recommended to use a service such as `ngrok` in order for your
    locally started server to be accessible from the Internet. Visit [https://ngrok.com/](https://ngrok.com/)
    for more details and setup instructions. You should use `ngrok` only for development
    purposes. In production, you should use a dedicated server.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议使用`ngrok`等服务，以便您的本地服务器可以从互联网上访问。访问[https://ngrok.com/](https://ngrok.com/)获取更多详情和设置说明。您应仅将`ngrok`用于开发目的。在生产环境中，您应使用专用服务器。
- en: 'Navigate to the Slack button documentation page ([https://api.slack.com/docs/slack-button#button-widget](https://api.slack.com/docs/slack-button#button-widget))
    and scroll down till you see the following test interface:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到Slack按钮文档页面([https://api.slack.com/docs/slack-button#button-widget](https://api.slack.com/docs/slack-button#button-widget))并向下滚动，直到您看到以下测试界面：
- en: '![Understanding the OAuth process](img/B05384_07_06.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![理解OAuth流程](img/B05384_07_06.jpg)'
- en: You can use this area to test that your integrations authenticate properly
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这个区域来测试您的集成是否正确认证
- en: 'Click on the **Add to Slack** button and you should be presented with a screen
    that asks you to confirm whether you''d like to authorize your bot for use in
    your channel. Click on the **Authorize** button and switch over to your terminal.
    The bot token we need will show up in a log:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**添加到Slack**按钮，您应该会看到一个屏幕，要求您确认是否希望授权您的机器人在您的频道中使用。点击**授权**按钮，然后切换到您的终端。所需的机器人令牌将显示在日志中：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can use our token to start our bot user and have it respond to and interact
    with users from other teams. Let''s do that with Wikibot now. We will take the
    Wikibot code featured earlier in this book and alter it to function with the OAuth
    procedure outlined before. Replace the contents of `index.js` with the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用我们的令牌启动我们的机器人用户，并使其能够响应和与其他团队的用户互动。现在让我们用Wikibot来做这件事。我们将使用本书前面介绍过的Wikibot代码，并修改它以与之前概述的OAuth流程一起工作。将`index.js`的内容替换为以下内容：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s try this out. Run the Node application after making sure that your `client_id`,
    `client_secret`, and `redirect_uri` are inserted in the highlighted sections of
    the preceding code. To test the integration, navigate to the documentation on
    the **Add to Slack** button here: [https://api.slack.com/docs/slack-button#button-widget](https://api.slack.com/docs/slack-button#button-widget).
    As before, scroll down till you see the test widget, tick the **bot** box, and
    click on the **Add to Slack** button.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试试这个。在确保您的 `client_id`、`client_secret` 和 `redirect_uri` 已插入先前代码中突出显示的部分后，运行
    Node 应用程序。为了测试集成，导航到此处关于“添加到Slack”按钮的文档：[https://api.slack.com/docs/slack-button#button-widget](https://api.slack.com/docs/slack-button#button-widget)。和之前一样，向下滚动直到您看到测试小部件，勾选“机器人”框，然后点击“添加到Slack”按钮。
- en: Tip
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Below this test widget is the embed code you should use when placing the **Add
    to Slack** button on your website.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在此测试小部件下方是您在网站上放置“添加到Slack”按钮时应使用的嵌入代码。
- en: '![Understanding the OAuth process](img/B05384_07_07.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![理解OAuth流程](img/B05384_07_07.jpg)'
- en: Note how Slack has automatically renamed our bot to @wikibot2 to avoid conflict
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 Slack 如何自动将我们的机器人重命名为 @wikibot2 以避免冲突
- en: 'Once authorized, you should see the following message:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦授权，你应该会看到以下信息：
- en: '**You have successfully installed Wikibot! You can now start using it in your
    Slack team, but make sure to invite the bot to your channel first with the /invite
    command!**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**您已成功安装 Wikibot！现在您可以在您的 Slack 团队中使用它，但请确保首先使用 /invite 命令将机器人邀请到您的频道！**'
- en: We returned a simple string in this example. As per best practices, we need
    to redirect to a web page with some instructions on how to operate Wikibot.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们返回了一个简单的字符串。根据最佳实践，我们需要重定向到一个网页，上面有一些关于如何操作 Wikibot 的说明。
- en: 'Switch to the Slack client and to the channel you''d like to incorporate Wikibot.
    As we discussed in [Chapter 2](ch02.html "Chapter 2. Your First Bot"), *Your First
    Bot*, bot users have to be manually invited to a channel, so let''s do that and
    test our bot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到 Slack 客户端和您想集成 Wikibot 的频道。正如我们在 [第2章](ch02.html "第2章。您的第一个机器人") 中讨论的，“您的第一个机器人”，机器人用户必须手动邀请到频道，所以让我们这样做并测试我们的机器人：
- en: '![Understanding the OAuth process](img/B05384_07_08.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![理解OAuth流程](img/B05384_07_08.jpg)'
- en: Our bot is successfully integrated and working!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的机器人已成功集成并正在运行！
- en: Wikibot will now continue to function as long as our Node service is running.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Wikibot 将在 Node 服务运行期间继续正常工作。
- en: Next, we will look at the other scopes available for our use.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看我们可用的其他作用域。
- en: Scopes
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作用域
- en: 'OAuth scopes allow you to specify exactly what access your app needs to perform
    its functions. In the previous example, we requested the `bot` scope, which gives
    our bots access to all the actions a bot user can perform. For example, the `channels:history`
    scope gives us access to the channel''s chat history and `users:read` allows us
    to access the full list of users in the team. There is a long list of scopes available
    (which you can review at [https://api.slack.com/docs/oauth-scopes](https://api.slack.com/docs/oauth-scopes)),
    but we will focus on the three most likely to be used scopes in our apps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 作用域允许您指定您的应用程序执行其功能所需的确切访问权限。在先前的例子中，我们请求了 `bot` 作用域，这使我们的机器人能够访问机器人用户可以执行的所有操作。例如，`channels:history`
    作用域使我们能够访问频道的聊天历史，而 `users:read` 允许我们访问团队中用户的完整列表。作用域有很多（您可以在 [https://api.slack.com/docs/oauth-scopes](https://api.slack.com/docs/oauth-scopes)
    上查看），但我们将重点关注我们应用程序中最可能使用的三个作用域：
- en: '`bot`: This provides a bot token, allowing us to connect to the team as a bot
    user'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bot`：这提供了一个机器人令牌，允许我们以机器人用户身份连接到团队'
- en: '`incoming-webhook`: This provides an incoming webhook token'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`incoming-webhook`：这提供了一个传入Webhook令牌'
- en: '`commands`: This provides a Slack token, which we can use to ensure that the
    incoming slash command requests are valid'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commands`：这提供了一个 Slack 令牌，我们可以使用它来确保传入的斜杠命令请求是有效的'
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Scopes of the bot variety automatically include a subset of other scopes needed
    for the bot to perform. For more information, visit [https://api.slack.com/bot-users#bot-methods](https://api.slack.com/bot-users#bot-methods).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人类型的作用域自动包括机器人执行所需的其他子集作用域。更多信息，请访问 [https://api.slack.com/bot-users#bot-methods](https://api.slack.com/bot-users#bot-methods)。
- en: 'Multiple scopes can be requested without issue. Here''s an example of the bot,
    incoming webhook and command scopes being requested in our initial redirect:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 可以无问题地请求多个作用域。以下是我们初始重定向中请求的机器人、传入Webhook和命令作用域的示例：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Note how the requested scopes are separated with a `+` symbol. This will return
    the following object after we authenticate:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 注意请求的作用域是如何用`+`符号分隔的。认证后，这将返回以下对象：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Instead of using the `+` symbol, scopes can also be comma separated.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用`+`符号外，作用域也可以用逗号分隔。
- en: We now have all the pieces we need to create a bot (the `bot_access`_token),
    an incoming webhook (the `url` parameter in the `incoming_webhook` object), and
    the `access_token` we use for slash commands.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经拥有了创建机器人所需的所有组件（`bot_access`令牌）、一个入站webhook（`incoming_webhook`对象中的`url`参数）以及用于斜杠命令的`access_token`。
- en: Submitting your app to the app directory
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将您的应用提交到应用目录
- en: 'Once you have tested your integration within your team''s channel, and you
    are happy with your bot, it''s time to submit it to the app directory. To do so,
    first ensure that your application conforms to Slack''s checklist for deploying
    an app ([https://api.slack.com/docs/slack-apps-checklist](https://api.slack.com/docs/slack-apps-checklist)).
    In short, your app must:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在团队频道内测试了您的集成，并且对您的机器人感到满意，就是时候将其提交到应用目录了。为此，首先确保您的应用程序符合Slack部署应用清单的要求（[https://api.slack.com/docs/slack-apps-checklist](https://api.slack.com/docs/slack-apps-checklist)）。简而言之，您的应用必须：
- en: Request only those scopes that are actually in use.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只请求实际使用的那些作用域。
- en: Display the **Add to Slack** button on a webpage. You are required to have your
    own website with instructions and help for new users.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网页上显示**添加到Slack**按钮。您需要拥有自己的网站，为新用户提供说明和帮助。
- en: Have an appropriate name (for example, no trademark or copyright infringement).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个合适的名称（例如，没有商标或版权侵权）。
- en: Have an app or bot icon that is clear and distinctive.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个清晰且独特的应用或机器人图标。
- en: Have a high-quality icon that is at least 512 x 512 pixels in size.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有一个至少512 x 512像素大小的优质图标。
- en: Include short and long descriptions of your bot's actions.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含您机器人操作的简短和详细描述。
- en: Include an installation link (this can simply be a webpage displaying the **Add
    to Slack** button and a guide on how to use your bot).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含一个安装链接（这可以是一个显示**添加到Slack**按钮和使用指南的网页）。
- en: Feature an customer support link and e-mail, in case users run into problems
    installing your bot.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供客户支持链接和电子邮件，以防用户在安装您的机器人时遇到问题。
- en: Include a link to a privacy policy. Your bot could potentially be listening
    on private conversations, so you will need to specify exactly what data your bot
    will be collecting (if any).
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含一个隐私政策的链接。您的机器人可能会监听私密对话，因此您需要明确说明您的机器人将收集哪些数据（如果有的话）。
- en: Have correct formatting and spelling. Your bot should use clear language and
    not contain any errors.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保格式和拼写正确。您的机器人应该使用清晰的语言，并且不包含任何错误。
- en: Note that our example, Wikibot, fails the *appropriate name* clause, as Wikipedia
    is clearly a registered trademark to which we do not own the rights. On this basis
    alone, Wikibot would be rejected.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们的示例，Wikibot，未能通过**合适的名称**条款，因为维基百科显然是一个注册商标，我们并不拥有其权利。仅基于这一点，Wikibot将被拒绝。
- en: Once you have confirmed that your app or bot conforms to the previous points,
    you can submit your application for review at [https://api.slack.com/submit](https://api.slack.com/submit).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确认您的应用或机器人符合前面的要求，您就可以在[https://api.slack.com/submit](https://api.slack.com/submit)提交您的应用程序进行审查。
- en: Like other app stores, a review process is mandatory for all new submissions.
    The length of the review period is highly dependent on the complexity of your
    app and on the quantity of submissions the Slack admissions team has to process.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他应用商店一样，所有新提交都必须经过审查流程。审查期的长度高度取决于您应用的复杂性以及Slack录取团队需要处理的提交数量。
- en: Note
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When you are ready to publish your app to the Slack app directory, you require
    hosting. A great way to get your bot up and running quickly is to use Beep Boop
    [https://beepboophq.com/](https://beepboophq.com/). A paid service, Beep Boop
    will host your Slack bots for you so you can focus on developing rather than infrastructure.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当您准备好将您的应用发布到Slack应用目录时，您需要托管。快速让您的机器人上线的一个好方法是使用Beep Boop [https://beepboophq.com/](https://beepboophq.com/)。这是一个付费服务，Beep
    Boop会为您托管Slack机器人，这样您就可以专注于开发而不是基础设施。
- en: To ensure that your bot reaches your intended audience, consider submitting
    it to useful websites such as Botwiki ([http://botwiki.org](http://botwiki.org)),
    botlist ([http://botlist.co](http://botlist.co)), and Product Hunt ([http://www.producthunt.com](http://www.producthunt.com))
    in order to get maximum exposure.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的机器人达到目标受众，考虑将其提交到有用的网站，如Botwiki ([http://botwiki.org](http://botwiki.org))、botlist
    ([http://botlist.co](http://botlist.co)) 和Product Hunt ([http://www.producthunt.com](http://www.producthunt.com))，以获得最大曝光。
- en: Monetizing your bot
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人盈利
- en: Monetizing your bot, of course, is entirely optional and how you monetize it
    is dependent on the function of your bot and whether there is a market. Bear in
    mind that if your goal is to sell your bots for a one-off price, the Slack app
    directory does not support monetary transfers.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，机器人盈利是可选的，你如何盈利取决于你的机器人功能以及是否存在市场。请注意，如果你的目标是按一次性价格出售你的机器人，Slack应用目录不支持货币转账。
- en: All apps in the app directive are free to install, but how you convert your
    user base to paying customers is left up to you.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 应用指令中的所有应用都可以免费安装，但如何将你的用户群转换为付费客户则取决于你。
- en: There are a variety of methods to do this and there is no single correct way
    or Slack-*sanctioned* method. A popular method employed by companies such as Zoho
    Expense ([https://www.zoho.com/us/expense/slack-integration/](https://www.zoho.com/us/expense/slack-integration/))
    is a payment plan based on users. The service is free for small teams, but once
    you require more than three users to have access, you have to migrate to a paid
    tier.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以实现这一点，没有单一的正确方式或Slack-**认可的**方法。Zoho Expense等公司采用的一种流行方法是基于用户的支付计划（[https://www.zoho.com/us/expense/slack-integration/](https://www.zoho.com/us/expense/slack-integration/)）。对于小型团队，这项服务是免费的，但一旦需要超过三个用户访问，就必须迁移到付费层。
- en: The idea here is similar to APIs we have encountered, such as Wolfram Alpha.
    This means using a tiered approach where a free tier exists (tied either to amount
    of calls made or an expiration date), but paid tiers are optional if more requests
    are needed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的想法与我们所遇到的API类似，例如Wolfram Alpha。这意味着采用分层方法，其中存在免费层（与调用次数或到期日期相关联），但如果需要更多请求，则付费层是可选的。
- en: Remember that when attempting to monetize your bot, the "try before you buy"
    sales tactic is key here. Users are unlikely to convert into paying customers
    if they don't have an idea of how your bot works and whether it is actually beneficial
    for them. Consider having either a free trial period or a free tier with limited
    functionality.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在尝试为你的机器人盈利时，“先试后买”的销售策略在这里至关重要。如果用户不知道你的机器人如何工作以及它是否真正对他们有益，他们不太可能成为付费客户。考虑提供一个免费试用期或带有有限功能的免费层。
- en: Above all, the most important aspect is ensuring that you have a product that
    is truly worth paying for. As useful as our *to-do* bot from [Chapter 4](ch04.html
    "Chapter 4. Using Data"), *Using Data* is, it's unlikely that anyone would pay
    money for such a simple bot, as free alternatives are readily available or easily
    recreated.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，确保你有一个真正值得付费的产品。尽管我们第4章中的*待办事项*机器人（[Chapter 4](ch04.html "Chapter 4. Using
    Data")）和*使用数据*很有用，但不太可能有人会为这样一个简单的机器人付费，因为免费替代品很容易获得或轻易复制。
- en: Therefore, the focus of your bot should be the solving of a particular problem
    first and monetizing a distant second.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你的机器人应该首先关注解决特定问题，其次才是盈利。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you saw how to make your app accessible to other teams via
    the Slack App Directory. You saw how to request scopes from Slack to ensure that
    your apps have the correct permissions to perform actions. Finally, you learned
    how to correctly authenticate your apps with Slack and obtain the tokens required
    to make your bots, webhooks, and slash commands work.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了如何通过Slack应用目录使你的应用可供其他团队使用。你了解了如何从Slack请求作用域，以确保你的应用具有执行操作的正确权限。最后，你学习了如何正确地使用Slack验证你的应用并获得使你的机器人、webhooks和slash命令工作所需的令牌。
- en: By following the lessons in this book, you have obtained all the knowledge and
    tools required to create a world-class Slack bot. It is now up to you to create
    the next leap forward in bot technology and to push the boundaries of how we interact
    with bots to solve problems and achieve optimum efficiency.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循本书中的课程，你已经获得了创建世界级Slack机器人所需的所有知识和工具。现在，取决于你如何创造机器人技术的下一个飞跃，并推动我们与机器人互动以解决问题和实现最佳效率的界限。
- en: To perhaps inspire you further, you should be aware that chat bots in general
    and Slack bots in particular are enjoying an unprecedented explosion in popularity
    and recognition.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步激发你的灵感，你应该知道，聊天机器人和特别地Slack机器人正享受着前所未有的流行和认可爆炸。
- en: 'At the beginning of his keynote speech at the 2016 Microsoft Build developers
    conference, Microsoft CEO Satya Nadella prophesized the future of bots:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在2016年微软Build开发者大会的开幕式上，微软CEO萨蒂亚·纳德拉预言了机器人的未来：
- en: '*"Bots are the new apps. People-to-people conversations, people-to-digital
    assistants, people-to-bots and even digital assistants-to-bots. That''s the world
    you''re going to get to see in the years to come."*'
  id: totrans-127
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"机器人是新的应用程序。人与人之间的对话，人与数字助手之间的对话，人与机器人之间的对话，甚至数字助手与机器人之间的对话。这就是你将在未来几年看到的这个世界。"*'
- en: 'His argument is an intriguing one: that bots will potentially replace apps
    as the main source of communication between a company and their clients.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 他的论点非常吸引人：机器人可能会取代应用程序，成为公司与客户之间沟通的主要来源。
- en: Facebook has also seen the potential in bots. In April 2016, they announced
    bots for their Messenger Platform, which is expected to see tremendous activity
    in the coming months and years.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook也看到了机器人的潜力。2016年4月，他们宣布了为他们的Messenger平台开发的机器人，预计在未来几个月和几年内将看到巨大的活动。
- en: Although this book focused on building bots specifically for the Slack platform,
    the techniques, best practices, and theory are all valid for any bot platform.
    Armed with this knowledge, you have everything you need to become a competent
    developer in this new bot revolution.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这本书专注于为Slack平台构建机器人，但技术、最佳实践和理论对所有机器人平台都是有效的。有了这些知识，你将拥有成为这个新机器人革命中合格开发者所需的一切。
- en: Happy coding!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 开心编码！
- en: Further reading
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: In this book, we used the Node Slack client directly to build our bots. Following
    this package on GitHub is the best way of staying up to date with new features
    and changes in the Slack ecosystem. There are, however, alternatives to using
    the official Node Slack client. Botkit ([https://github.com/howdyai/botkit](https://github.com/howdyai/botkit))
    is a fantastic package meant to abstract away a lot of the underlying concepts
    and streamline the bot creation process. Botkit also supports creating bots for
    Facebook Messenger for easy cross-platform bot development. If you wish to bootstrap
    the creation of your bot and get it up and running as soon as possible, consider
    using Botkit.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们直接使用了Node Slack客户端来构建我们的机器人。通过GitHub跟踪这个包是保持最新功能和对Slack生态系统变化了解的最佳方式。然而，使用官方Node
    Slack客户端有其他替代方案。Botkit（[https://github.com/howdyai/botkit](https://github.com/howdyai/botkit)）是一个出色的包，旨在抽象出许多底层概念并简化机器人创建过程。Botkit还支持为Facebook
    Messenger创建机器人，便于跨平台机器人开发。如果你希望尽快启动并运行你的机器人，考虑使用Botkit。
