- en: 'Chapter 1. HTML5 Starter Kit: Compatibility'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. HTML5入门套件：兼容性
- en: In the *Preface*, we covered the general structure of an HTML5 document, but
    before jumping into development, we must first talk about addressing the time
    consuming issue of compatibility across browsers and platforms. In this chapter,
    we will cover how web browsers work and the strategies to support HTML5 across
    multiple web browsers and devices. By the end of this chapter, you will be able
    to follow an initial plan of action to consistently support your enterprise application's
    functionality, interface, and user experience.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在**序言**中，我们介绍了HTML5文档的一般结构，但在开始开发之前，我们首先必须谈谈解决跨浏览器和平台兼容性问题这一耗时的问题。在本章中，我们将介绍浏览器的工作原理以及支持多个浏览器和设备的HTML5策略。到本章结束时，你将能够遵循一个初步的行动计划，以持续支持你的企业应用的功能、界面和用户体验。
- en: 'We will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: The real meaning of compatibility
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容性的真正含义
- en: Browsers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器
- en: OS platforms
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统平台
- en: Display resolution
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示分辨率
- en: Importance of compatibility
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容性的重要性
- en: Patching the differences – compatibility libraries
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 补丁差异 - 兼容库
- en: The real meaning of compatibility
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 兼容性的真正含义
- en: In an ideal world, HTML, CSS, and JavaScript should be interpreted in the same
    way across all browsers and platforms. While the **World Wide Web Consortium**
    (**W3C**) has developed standards for such technologies, browser makers have implemented
    them in their own ways. This means that although you can use W3C standards for
    developing enterprise applications, it is possible for inconsistencies to arise
    between different browsers and platforms.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个理想的世界里，HTML、CSS和JavaScript应该在所有浏览器和平台上以相同的方式被解释。虽然**万维网联盟**（**W3C**）为这些技术制定了标准，但浏览器制造商以自己的方式实现了它们。这意味着虽然你可以使用W3C标准来开发企业应用，但不同浏览器和平台之间可能存在不一致性。
- en: Compatibility does not mean that the experience of the user should be the same
    in every client, but it needs to maintain certain consistencies. For example,
    if we have a list of users in an application, it is good practice to have different
    inputs depending on the platform. We can use the scroll bar to navigate the list
    on any desktop client. For touch devices, gestures might be preferable.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 兼容性并不意味着用户在每一个客户端都应该有相同的体验，但它需要保持一定的连贯性。例如，如果我们有一个应用程序中的用户列表，根据平台的不同，有不同的输入方式是好的做法。我们可以在任何桌面客户端使用滚动条来导航列表。对于触摸设备，手势可能更受欢迎。
- en: On the other hand, we need to be careful with platform restrictions because
    sometimes it is not technically possible to support the same functionality in
    every device or client. A particular instance that illustrates this is the audio
    and video volume management in iOS devices (until Version 5.1.1). It is not possible
    to control the volume using JavaScript in Safari for iOS. In such cases, it is
    preferable to hide the volume control for iOS devices.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们需要注意平台限制，因为有时在每台设备或客户端上支持相同的功能在技术上是不可能的。一个说明这一点的特定实例是iOS设备中的音频和视频音量管理（直到版本5.1.1）。在iOS的Safari中使用JavaScript无法控制音量。在这种情况下，隐藏iOS设备的音量控制更可取。
- en: To better understand the issues of compatibility, it is important to understand
    the evolution of the World Wide Web in relation to the capabilities of the client
    that renders the final product, the operating system or platform, and the screen
    resolution.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解兼容性问题，了解万维网相对于渲染最终产品的客户端能力、操作系统或平台以及屏幕分辨率的演变是很重要的。
- en: Browsers
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览器
- en: Since the release of the World Wide Web, there has always been competition for
    dominance in usage share in the browser marketplace. By 2001, Internet Explorer
    controlled over 90 percent of the browser market after Netscape ceased to be a
    major contender, but with the release of Version 1.0 of Mozilla Firefox in November
    2004 and Google Chrome in September 2008, it began to see a new crop of competition.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自从万维网发布以来，浏览器市场一直存在竞争，争夺市场份额的主导地位。到2001年，随着网景公司停止成为主要竞争者，Internet Explorer控制了超过90%的浏览器市场，但在2004年11月Mozilla
    Firefox 1.0版本和2008年9月Google Chrome发布后，它开始看到新一代的竞争。
- en: '![Browsers](img/5869_01_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![浏览器](img/5869_01_01.jpg)'
- en: As of June 2012 however, Google Chrome has become the most used browser at just
    32.76 percent market share. It now shares an ever crowded space with Mozilla Firefox,
    Internet Explorer, Safari, and Opera including mobile counterparts. In addition,
    each one of these has its own list of versions, and we need to decide in some
    cases from which version we require support for our applications after knowing
    that newer versions are always around the corner.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，截至2012年6月，Google Chrome已成为市场份额仅为32.76%的最常用浏览器。它现在与Mozilla Firefox、Internet
    Explorer、Safari和Opera（包括移动版本）共享一个越来越拥挤的空间。此外，每个浏览器都有自己的版本列表，在知道新版本总是即将到来之后，在某些情况下，我们需要决定我们的应用程序需要支持哪个版本。
- en: 'Let''s peek behind the scenes a bit to understand the complexity behind the
    diversity of browsers and versions. Each browser has two major software components:
    a rendering engine and a JavaScript engine.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微了解一下浏览器和版本多样性的复杂性。每个浏览器都有两个主要的软件组件：渲染引擎和JavaScript引擎。
- en: Rendering engine
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染引擎
- en: Also known as the **layout engine** or **web browser engine**, the rendering
    engine is responsible for parsing the markup content (HTML) and the style information
    (CSS, XSL, and so on), and generating a visual presentation of the formatted content
    including media files referenced (images, audio, video, fonts, and so on). It
    is important to know the many rendering engines out there because it can help
    you to recognize certain behaviors and deduce which browsers are going to behave
    in certain ways based on their rendering engine.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 也称为**布局引擎**或**网页浏览器引擎**，渲染引擎负责解析标记内容（HTML）和样式信息（CSS、XSL等），并生成格式化内容的视觉表示，包括引用的媒体文件（图像、音频、视频、字体等）。了解许多渲染引擎很重要，因为它可以帮助你识别某些行为，并根据它们的渲染引擎推断出哪些浏览器将以某种方式表现。
- en: While Chrome and Safari use WebKit (developed by Apple, KDE, Nokia, Google,
    and others), Firefox uses Gecko (developed by Netscape/Mozilla Foundation), Internet
    Explorer uses Trident (owned by Microsoft), and Opera uses Presto.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Chrome和Safari使用WebKit（由苹果、KDE、诺基亚、谷歌和其他公司开发），Firefox使用Gecko（由Netscape/Mozilla基金会开发），Internet
    Explorer使用Trident（由微软拥有），而Opera使用Presto。
- en: With CSS, one can identify some exclusive rendering engine features (known as
    CSS extensions) by the prefix. WebKit-only features start with `-webkit-` and
    Gecko-only features with `-moz-`. Opera includes the `-o-` prefix while Internet
    Explorer 8 and up recognize `-ms-`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CSS，可以通过前缀来识别一些专有的渲染引擎功能（称为CSS扩展）。WebKit特有的功能以`-webkit-`开头，Gecko特有的功能以`-moz-`开头。Opera包括`-o-`前缀，而Internet
    Explorer 8及以上版本识别`-ms-`。
- en: Trident has a different approach. It recognizes common CSS properties with `*`
    or `–` as a prefix to override previous definitions (for example, `*color:#ccc;`
    and `_color:#ccc;` are not recognized by other rendering engines except Trident).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Trident采用不同的方法。它识别以`*`或`–`为前缀的常见CSS属性以覆盖之前的定义（例如，`*color:#ccc;`和`_color:#ccc;`除了Trident以外的其他渲染引擎都不会识别）。
- en: JavaScript engine
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript引擎
- en: The JavaScript engine is the software component that interprets and executes
    JavaScript code in the browser. While the rendering engine is responsible for
    the visual presentation of HTML content using CSS styles, the JavaScript engine
    will interpret and execute JavaScript code.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript引擎是浏览器中解释和执行JavaScript代码的软件组件。虽然渲染引擎负责使用CSS样式呈现HTML内容的视觉表现，但JavaScript引擎将解释和执行JavaScript代码。
- en: Chrome employs the V8 engine, Firefox now uses Jägermonkey, Internet Explorer
    9 features Chakra, Safari uses Nitro, while Opera substituted SunSpider with Carakan
    in 2010.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome使用V8引擎，Firefox现在使用Jägermonkey，Internet Explorer 9使用Chakra，Safari使用Nitro，而Opera在2010年用Carakan替换了SunSpider。
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The rankings for what many consider the current browser war are largely driven
    by the speed of the JavaScript engine. While other engines rely on interpretation
    and compilation, V8 has no intermediate parser and it generates an assembler using
    its own runtime environment. In other words, it has a virtual machine. This has
    allowed Chrome to become one of the fastest browsers.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人认为的当前浏览器战争的排名很大程度上是由JavaScript引擎的速度驱动的。虽然其他引擎依赖于解释和编译，但V8没有中间解析器，它使用自己的运行时环境生成汇编器。换句话说，它有一个虚拟机。这使得Chrome成为最快的浏览器之一。
- en: As a general rule (there are some exceptions), it is better to load HTML and
    CSS first and then JavaScript. This can be done by including the `<script>` tags
    that import JavaScript just before closing the `<body>` tag. The reason for this
    is that it is faster to render HTML and CSS than to interpret and execute JavaScript.
    Web pages will appear to load faster as a result.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一般规则（有一些例外），最好是先加载HTML和CSS，然后才是JavaScript。这可以通过在关闭`<body>`标签之前包含导入JavaScript的`<script>`标签来实现。这样做的原因是渲染HTML和CSS比解释和执行JavaScript要快。因此，网页看起来会更快地加载。
- en: Where it is not possible to include the `<script>` tags in the body, there are
    two attributes on the `<script>` tag that can be used to signal to the browser
    when the script should be downloaded. These are `async`, which was introduced
    in HTML5, and `defer`. The `defer` attribute literally does what it purports;
    it defers script execution until the page has been rendered. This way, the DOM
    is ready for your script. The `async` attribute signals to the browser to download
    the script asynchronously and without blocking the rendering engine and executes
    it when it is ready. Both execute before the `DOMContentLoaded` event. The key
    difference is that `defer` executes each script sequentially and `async` executes
    each script when it is ready. Typically, in order to support older browsers that
    do not support the `async` attribute, these attributes are used together so that
    browsers that do not perform asynchronously can fall back to `defer`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当无法在主体中包含`<script>`标签时，`<script>`标签上有两个属性可以用来向浏览器指示脚本何时下载。这些是`async`，它在HTML5中引入，以及`defer`。`defer`属性确实做了它声称的事情；它将脚本执行推迟到页面渲染完毕。这样，DOM就为你的脚本准备好了。`async`属性指示浏览器异步下载脚本，而不阻塞渲染引擎，并在准备好时执行它。两者都在`DOMContentLoaded`事件之前执行。关键区别在于`defer`按顺序执行每个脚本，而`async`则在脚本准备好时执行。通常，为了支持不支持`async`属性的老旧浏览器，这些属性会一起使用，这样不支持异步的浏览器可以回退到`defer`。
- en: While there are many differences between browsers, it is important to be aware
    that inside the same browser category exists multiple versions whose HTML5 and
    CSS3 support vary widely. This is especially true for Internet Explorer. Proper
    support for HTML5 and CSS3 does not appear until Internet Explorer 9.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然浏览器之间存在许多差异，但重要的是要意识到，在同一个浏览器类别中存在多个版本，它们的HTML5和CSS3支持差异很大。这对于Internet Explorer来说尤其如此。对HTML5和CSS3的正确支持直到Internet
    Explorer 9才出现。
- en: Note
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Microsoft has started a campaign to deprecate and reduce the market share of
    Internet Explorer 6 worldwide. See [http://www.ie6countdown.com](http://www.ie6countdown.com)
    for more details. The Aten Design Group took this to another level by commemorating
    the IE6 funeral at [http:///www.ie6funeral.com](http:///www.ie6funeral.com).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 微软已经开始了一项活动，旨在全球范围内废弃和减少Internet Explorer 6的市场份额。有关更多详情，请参阅[http://www.ie6countdown.com](http://www.ie6countdown.com)。Aten设计集团将这一举措推向了另一个层次，通过纪念[http:///www.ie6funeral.com](http:///www.ie6funeral.com)上的IE6葬礼来纪念这一事件。
- en: 'Most of the HTML5 and CSS3 capabilities are supported in the following browsers
    and versions:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数HTML5和CSS3功能在以下浏览器和版本中得到支持：
- en: Internet Explorer 9 and higher
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Internet Explorer 9及以上版本
- en: Firefox 7 and higher
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firefox 7及以上版本
- en: Chrome 14 and higher
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chrome 14及以上版本
- en: Safari 5 and higher
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Safari 5及以上版本
- en: Safari Mobile 3.2 and higher
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Safari Mobile 3.2及以上版本
- en: Opera 11 and higher
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opera 11及以上版本
- en: Opera Mobile 5 and higher
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opera Mobile 5及以上版本
- en: 'Even so, there are still some features not supported and there are inconsistencies
    between the implementations. One interesting case study that reveals the lack
    of standards across the browsers is the use of video in HTML5\. To use the native
    video capabilities of HTML5, the video file must be compressed using specific
    codecs. There are three major codecs that exist: **Ogg Theora** (royalty-free),
    **H.264** (free for end consumer but involves royalties for products that encode
    and decode), and **WebM** (royalty-free). As Firefox is oriented to use open source
    technologies, it initially supported only Ogg and WebM. Chrome currently supports
    all three codecs, but, for similar reasons as Firefox support for H.264, will
    be removed in subsequent versions (although it may continue support on mobile).
    Safari, Safari Mobile, and Internet Explorer 9 and higher support only H.264 by
    default, but you can install plugins to support Ogg and WebM (except on Safari
    Mobile).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 即使如此，仍然有一些功能不受支持，并且实现之间存在不一致。一个有趣的案例研究揭示了浏览器之间标准缺失的情况，那就是HTML5中的视频使用。为了使用HTML5的本地视频功能，视频文件必须使用特定的编解码器进行压缩。存在三种主要的编解码器：**Ogg
    Theora**（免费），**H.264**（对最终消费者免费，但编码和解码产品涉及版税），和**WebM**（免费）。由于Firefox倾向于使用开源技术，它最初只支持Ogg和WebM。Chrome目前支持所有三种编解码器，但出于与Firefox对H.264支持相同的原因，将在后续版本中移除（尽管可能在移动设备上继续支持）。Safari、Safari
    Mobile和Internet Explorer 9及以上版本默认只支持H.264，但您可以安装插件以支持Ogg和WebM（Safari Mobile除外）。
- en: Note
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The following websites provide detailed information about support of HTML5
    features on different browsers and differences in behaviors if any:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下网站提供了有关不同浏览器对HTML5功能支持以及行为差异的详细信息：
- en: '[http://caniuse.com/](http://caniuse.com/)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://caniuse.com/](http://caniuse.com/)'
- en: '[http://html5please.com/](http://html5please.com/)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://html5please.com/](http://html5please.com/)'
- en: OS platforms
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统平台
- en: Any web application will be affected by the operating system (OS) on which it
    runs. The most noticeable difference is the appearance of user interface elements
    of the browser including the scroll bars, submit buttons, checkboxes, and so on.
    This is an important consideration because the size and shape of these elements
    can vary across multiple operating systems – even with the same web browser. In
    fact, some operating systems restrict some functionality, as was the case with
    `<input type="file">` which initially had not been supported on iOS prior to iOS6.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 任何运行在操作系统（OS）上的网络应用程序都会受到影响。最明显的区别是浏览器用户界面元素的外观，包括滚动条、提交按钮、复选框等。这是一个重要的考虑因素，因为这些元素的大小和形状在不同的操作系统中可能会有所不同——即使使用相同的浏览器。实际上，一些操作系统限制了某些功能，例如
    `<input type="file">` 在 iOS6之前并未在iOS上得到支持。
- en: '![OS platforms](img/5869_01_02.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![操作系统平台](img/5869_01_02.jpg)'
- en: OS platform statistics show that Windows is by far the most used OS on the web.
    Mobile platforms, however, may take on more prominence in the years ahead considering
    the growing popularity of tablet devices and technical improvements of smartphones.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统平台统计显示，Windows是目前网络使用最广泛的操作系统。然而，考虑到平板设备和智能手机技术的不断改进，移动平台在未来几年可能会更加突出。
- en: Display resolution
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示分辨率
- en: 'With so many devices on the market, screen resolution is quickly becoming an
    important factor for consideration when planning web applications. Android has
    a diversity of devices of many sizes and densities. According to the usage of
    screen resolutions, the advance of new hardware technologies has made it possible
    to increase the number of pixels on modern screens:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 随着市场上设备的增多，屏幕分辨率在规划网络应用程序时正迅速成为一个重要的考虑因素。Android拥有多种尺寸和密度的设备。根据屏幕分辨率的用法，新硬件技术的进步使得现代屏幕上的像素数量得以增加：
- en: '![Display resolution](img/5869_01_03.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![显示分辨率](img/5869_01_03.jpg)'
- en: Even though most desktop systems now have a resolution higher than 1024 x 768,
    the rise of mobile technologies has created a paradox where lower resolution displays
    are retaking lost ground. The experience delivered by an enterprise application
    does not need to be—and in fact should not be—the same for all the devices. Viewing
    a page on a desktop screen at 1920 x 1200 can be vastly different from a mobile
    phone screen at 960 x 540 not only because of the resolution, but also because
    of the size of the device and readability (the ease in which text can be read
    and understood). It is sometimes important to detect the resolution to adapt the
    user experiences. To be sure, new techniques such as **responsive web design**
    are taking hold to address these issues.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管现在大多数桌面系统都具有高于1024 x 768的分辨率，但移动技术的兴起创造了一个悖论，即低分辨率显示屏正在重新夺回失去的地盘。企业应用程序提供的服务体验不需要，实际上也不应该是所有设备的相同。在1920
    x 1200分辨率的桌面屏幕上查看页面可能与960 x 540分辨率的手机屏幕大相径庭，这不仅因为分辨率，还因为设备的尺寸和可读性（文本的可读性和理解程度）。有时检测分辨率以适应用户体验是很重要的。毫无疑问，新的技术如**响应式网页设计**正在被采纳来解决这些问题。
- en: Note
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As if there were not enough variables in the playfield, Apple introduced Retina
    Display in June 2010 with the iPhone 4, having a native resolution of 960 x 640\.
    This technology is based on a higher pixel density that is beyond the human eye's
    capacity to see pixelation in images on the screen at a typical viewing distance.
    Although it was not so noticeable for web images in the iPhone 4, the new iPad
    and the new line of MacBook Pros released in 2012 with Retina Display create new
    requirements for web applications.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 就像游戏场上的变量已经足够多一样，苹果公司在2010年6月推出了搭载Retina显示屏的iPhone 4，其原生分辨率为960 x 640。这项技术基于更高的像素密度，超出了人类眼睛在典型观看距离下看到屏幕上图像像素化的能力。尽管在iPhone
    4上的网页图像中并不那么明显，但2012年推出的配备Retina显示屏的新iPad和新的MacBook Pro系列对网络应用提出了新的要求。
- en: First, there are some web development techniques which determine if the client
    is a mobile device by using CSS to detect the device resolution. With the new
    iPad, 2048 x 1536 px resolution is not possible or at least not intuitive. The
    resolution of the new iPad is higher than the majority of desktops and laptops
    in the market. Secondly, to avoid the pixelated effect in any application viewed
    on the new iPad or the new MacBook Pro, it is necessary to include higher resolution
    images for these Apple devices and images in normal resolution for backward compatibility
    with all other devices.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，有一些网络开发技术通过使用CSS检测设备分辨率来确定客户端是否为移动设备。随着新iPad的出现，2048 x 1536 px的分辨率变得不可能或至少不是直观的。新iPad的分辨率高于市场上大多数台式机和笔记本电脑。其次，为了避免在新iPad或新MacBook
    Pro上查看的任何应用程序中出现像素化效果，有必要为这些苹果设备包含更高分辨率的图像，并为与所有其他设备的向后兼容性包含正常分辨率的图像。
- en: Importance of compatibility
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 兼容性的重要性
- en: At this point, it is natural to ask why it is important to care about compatibility
    if one needs to only develop enterprise applications used internally within an
    organization, where a specific browser can be mandated. This attitude can be perilous
    for two reasons. First, businesses are moving quickly towards mobile delivery
    and controlling the platform is becoming thus less tenable. Secondly, constraining
    an organization in this way hampers its ability to update its application support
    capabilities as it couples the enterprise application too tightly to the choices
    in desktop support. If a company wanted to upgrade to a newer operating system
    or default web browser, constraining it by requiring that certain versions of
    browsers be supported can have undesired consequences down the line.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，如果只需要开发用于组织内部使用的企业应用程序，并且可以强制指定特定的浏览器，那么关心兼容性的重要性似乎是自然的。这种态度有两个危险的原因。首先，企业正在迅速向移动交付转变，控制平台变得越来越难以维持。其次，以这种方式限制组织会阻碍其更新应用程序支持能力，因为它将企业应用程序与桌面支持的选择过于紧密地耦合。如果公司想要升级到较新的操作系统或默认网络浏览器，通过要求支持特定版本的浏览器来限制它可能会产生不希望的结果。
- en: Patching the differences – compatibility libraries
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 补丁差异 - 兼容库
- en: In general, we want to support as many browsers as possible, so we are going
    to need a way to allow backward compatibility by implementing the capabilities
    not available on the browser, informing the user that the feature is not available,
    or modifying the user experience depending on the browser's capabilities. To this
    end, there are many JavaScript libraries that can help.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我们希望支持尽可能多的浏览器，因此我们需要一种方法来实现向后兼容性，通过实现浏览器上不可用的功能，通知用户该功能不可用，或者根据浏览器的功能修改用户体验。为此，有许多JavaScript库可以帮助我们。
- en: Tip
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For this chapter, styles and scripts will be included inline within the HTML
    file to simplify comprehension even though it is a good practice to have styles
    and scripts in separate files.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一章，样式和脚本将直接包含在HTML文件中，以简化理解，尽管将样式和脚本放在单独的文件中是一个好习惯。
- en: HTML5 Shiv
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5 Shiv
- en: As already noted, Internet Explorer begins to support HTML5 tags in Version
    9\. **HTML5 Shiv** allows for support in previous versions. Also known as **HTML5
    Shim**, it is an open source JavaScript library that enables styling for HTML5
    elements in versions of Internet Explorer before IE 9\. It accomplishes this by
    using `document.createElement("element")` to tell the browser that the tags exist.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Internet Explorer从版本9开始支持HTML5标签。**HTML5 Shiv**允许在早期版本中提供支持。也称为**HTML5
    Shim**，它是一个开源JavaScript库，可以在IE 9之前的Internet Explorer版本中为HTML5元素提供样式。它是通过使用`document.createElement("element")`来告诉浏览器这些标签存在来实现的。
- en: 'Suppose that we are testing in Internet Explorer 8, and we have the following
    code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在测试Internet Explorer 8，并且我们有以下代码：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.PacktPub.com](http://www.PacktPub.com)的账户中下载您购买的所有Packt书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.PacktPub.com/support](http://www.PacktPub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: In Internet Explorer 8, the text will not display the style. HTML5 Shiv can
    be used to make this work.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在Internet Explorer 8中，文本将不会显示样式。可以使用HTML5 Shiv来实现这一功能。
- en: Tip
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'It is good practice to dive into libraries before you use them to understand
    exactly what they are doing. We encourage you to check out the HTML5 Shiv code
    at the following location: [https://github.com/aFarkas/html5shiv/blob/master/src/html5shiv.js](https://github.com/aFarkas/html5shiv/blob/master/src/html5shiv.js).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用库之前深入了解它们是一个好习惯。我们鼓励您查看以下位置的HTML5 Shiv代码：[https://github.com/aFarkas/html5shiv/blob/master/src/html5shiv.js](https://github.com/aFarkas/html5shiv/blob/master/src/html5shiv.js)。
- en: 'To install this library you need to perform the following steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这个库，你需要执行以下步骤：
- en: 'Download the library from the following location: [https://github.com/aFarkas/html5shiv/zipball/master](https://github.com/aFarkas/html5shiv/zipball/master).'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下位置下载库：[https://github.com/aFarkas/html5shiv/zipball/master](https://github.com/aFarkas/html5shiv/zipball/master)。
- en: Uncompress the file.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压文件。
- en: Copy `html5shiv.js` from the `dist` folder to your JavaScript folder (`js` in
    our case).
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`html5shiv.js`从`dist`文件夹复制到你的JavaScript文件夹（在我们的例子中是`js`）。
- en: 'Insert the following code inside the `head` tag:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`head`标签内插入以下代码：
- en: '[PRE1]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As a result our code should look as follows:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，我们的代码应该如下所示：
- en: '[PRE2]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that the `<!--[if lt IE 9]>` conditional comment includes the JavaScript
    library only if the browser version is Internet Explorer prior to Version 9.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`<!--[if lt IE 9]>`条件注释仅在浏览器版本低于版本9的Internet Explorer中包含JavaScript库。
- en: If you run this code in Internet Explorer 8, it will show a **Hello HTML5!**
    in red with a bigger font. This is one of the exceptions where we need to load
    a JavaScript library inside `<head>`, because we need to give the capability to
    recognize HTML5 elements to the browser before it begins styling.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在这个代码中运行Internet Explorer 8，它将以红色显示更大的字体**Hello HTML5**！这是一个例外，我们需要在`<head>`内部加载JavaScript库，因为我们需要在开始样式化之前给浏览器提供识别HTML5元素的能力。
- en: '![HTML5 Shiv](img/5869_01_04.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![HTML5 Shiv](img/5869_01_04.jpg)'
- en: Modernizr
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Modernizr
- en: 'Since not even the newest versions of web browsers support all HTML5 and CSS3
    capabilities, it is useful to do some kind of detection to show a notification
    or change the behavior of a page when a feature is not supported. An old strategy
    was to look at the property `navigator.userAgent` to detect the browser''s user
    agent and code based on the pertinent cases. As user agents change, it becomes
    difficult to keep pace and alter an application. An alternative approach to user
    agent detection is **feature detection** , wherein an application detects whether
    a particular feature is supported and reacts accordingly. The following is an
    example of feature detection:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于即使是最新版本的网页浏览器也无法支持所有的 HTML5 和 CSS3 功能，因此在不支持某个功能时显示通知或更改页面行为是有用的。一种旧的策略是查看
    `navigator.userAgent` 属性以检测浏览器的用户代理，并根据相关案例编写代码。随着用户代理的变化，保持同步并修改应用程序变得困难。用户代理检测的另一种方法是
    **特性检测**，其中应用程序检测特定功能是否受支持，并相应地做出反应。以下是一个特性检测的示例：
- en: '[PRE3]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Modernizr** is an open source JavaScript library that allows support for
    different levels of experiences based on the capabilities of each browser using
    a simple feature detection model. Additionally, Modernizr uses HTML5 Shiv, adding
    the ability to style HTML5 elements on Internet Explorer prior to Version 9.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**Modernizr** 是一个开源的 JavaScript 库，它允许根据每个浏览器的功能支持不同级别的体验，使用简单的特性检测模型。此外，Modernizr
    使用 HTML5 Shiv，增加了在版本 9 之前的 Internet Explorer 上样式化 HTML5 元素的能力。'
- en: 'Going back to our previous example:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们之前的例子：
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Suppose that we want to implement the geolocation functionality using HTML5
    to get the geographical position of the user, and we want to detect if it is available.
    For tha we start using Modernizr:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想要使用 HTML5 实现地理位置功能，以获取用户的地理位置，并检测它是否可用。为此，我们开始使用 Modernizr：
- en: Go to [http://modernizr.com/download/](http://modernizr.com/download/).
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [http://modernizr.com/download/](http://modernizr.com/download/)。
- en: Select the functionality that you want to validate and **html5shiv**. In this
    case, we are going to select the **Geolocation API** functionality under **Misc.**,
    **html5shiv v3.4** and **Add CSS Classes** present under **Extra**.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要验证的功能和 **html5shiv**。在这种情况下，我们将选择 **Misc.** 下的 **Geolocation API** 功能，以及
    **Extra** 下的 **html5shiv v3.4** 和 **Add CSS Classes**。
- en: Click on the **GENERATE!** button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **GENERATE!** 按钮。
- en: Copy the source code generated.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制生成的源代码。
- en: Create a new JavaScript file (call it `modernizr.js`), paste the source code,
    and save it in your JavaScript folder.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 JavaScript 文件（命名为 `modernizr.js`），粘贴源代码，并将其保存在您的 JavaScript 文件夹中。
- en: 'Import the Modernizr library `<script src="img/modernizr.js" type="text/javascript"></script>
    inside <head>`. At this point the code should look as follows:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `<head>` 中导入 Modernizr 库 `<script src="img/modernizr.js" type="text/javascript"></script>`。此时代码应如下所示：
- en: '[PRE5]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: From here we have two possible solutions; use JavaScript or use CSS to detect
    the fallback.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从这里我们有两个可能的解决方案；使用 JavaScript 或使用 CSS 来检测回退。
- en: 'In order to show a message or display a different style, we can se CSS with
    the following steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显示消息或显示不同的样式，我们可以按照以下步骤使用 CSS：
- en: 'Add a class called `no-js` to the `<html>` tag. This will work as a default
    option if JavaScript is not supported. If JavaScript is supported, Modernizr will
    replace `no-js` with a class called `js`, and will add classes for all features
    using the prefix `no-` if it is not supported. For example, if your browser supports
    geolocation, the `html` tag will look something like the following line of code:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个名为 `no-js` 的类添加到 `<html>` 标签中。如果 JavaScript 不受支持，这将作为默认选项。如果 JavaScript 受支持，Modernizr
    将用名为 `js` 的类替换 `no-js`，并在不支持的情况下为所有功能添加以 `no-` 为前缀的类。例如，如果您的浏览器支持地理位置，`html` 标签将类似于以下行代码：
- en: '[PRE6]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Otherwise, it will look like the following code:'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 否则，它将看起来像以下代码：
- en: '[PRE7]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the `<body>` tag, add two `div` tags containing messages for when geolocation
    is supported and for when it is not:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `<body>` 标签中，添加两个 `div` 标签，分别包含当地理位置支持时的消息和当不支持时的消息：
- en: '[PRE8]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add CSS styles to show and hide the messages. By default, hide both messages
    and use the class created by the detection class in the `<html>` tag to hide or
    show the classes accordingly:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 CSS 样式以显示和隐藏消息。默认情况下，隐藏两个消息，并使用检测类在 `<html>` 标签中创建的类来相应地隐藏或显示类：
- en: '[PRE9]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, the complete code should look like the following code:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，完整的代码应如下所示：
- en: '[PRE10]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In case we want to implement a JavaScript fallback, we would need to create
    a conditional statement using Modernizr. In our case, since Modernizr is a JavaScript
    object with methods, we can use `Modernizr.geolocation` to test whether geolocation
    is supported. The conditional statement should be as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要实现JavaScript回退，我们需要使用Modernizr创建一个条件语句。在我们的情况下，由于Modernizr是一个具有方法的JavaScript对象，我们可以使用`Modernizr.geolocation`来测试地理定位是否受支持。条件语句应该是这样的：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The complete code should look as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的代码应该如下所示：
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Modernizr—in spite of its name—does not actually add missing functionalities
    to browsers save for the HTML5 tags styling support. Where you need to create
    fallbacks for functionalities in old browsers, Modernizr is a good choice. However,
    if simple styling with HTML5 and CSS3 is needed, HTML5 Shiv should suffice.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管名为Modernizr，但它实际上并没有为浏览器添加缺失的功能，除了HTML5标签的样式支持。在你需要为旧浏览器中的功能创建回退时，Modernizr是一个不错的选择。然而，如果只需要使用HTML5和CSS3进行简单的样式设计，HTML5
    Shiv就足够了。
- en: Explorer Canvas
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Explorer Canvas
- en: Internet Explorer in versions prior to Version 9 does not support HTML5 Canvas,
    which allows 2D command-based drawing, but **Explorer Canvas** enables this feature.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 早期版本的Internet Explorer（版本9之前）不支持HTML5 Canvas，它允许基于2D命令的绘图，但**Explorer Canvas**使这个功能成为可能。
- en: 'To use Explorer Canvas you can perform the following stes:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Explorer Canvas，你可以执行以下步骤：
- en: Go to [http://code.google.com/p/explorercanvas/downloads/list](http://code.google.com/p/explorercanvas/downloads/list).
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://code.google.com/p/explorercanvas/downloads/list](http://code.google.com/p/explorercanvas/downloads/list)。
- en: Download the last version of Explorer Canvas.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载Explorer Canvas的最新版本。
- en: Copy `excanvas.compiled.js` in your JavaScript folder.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`excanvas.compiled.js`复制到你的JavaScript文件夹中。
- en: 'Import the library in `<head>`, verifying the version of Internet Explorer:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`<head>`中导入库，验证Internet Explorer的版本：
- en: '[PRE13]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now you can use the HTML5 Canvas API in older versions of Internet Explorer.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以在旧版本的Internet Explorer中使用HTML5 Canvas API。
- en: As it is a JavaScript library, meaning that it needs to be interpreted and executed
    at page load, its performance will be considerably lower than modern browsers.
    It also does not support several features and is quite buggy.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是一个JavaScript库，这意味着它需要在页面加载时被解释和执行，因此它的性能将比现代浏览器低得多。它也不支持几个功能，并且相当有缺陷。
- en: HTML5 Boilerplate
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5模板文件
- en: A very simple and straightforward way of setting up a project including incorporation
    of Modernizr and basic configuration is to use a starter kit such as **HTML5 Boilerplate**.
    HTML5 Boilerplate is a collection of HTML, CSS, and JavaScript files including
    Modernizr, jQuery, and CSS Reset2 (a set of CSS rules that override default and
    inconsistent renderings in different browsers in a way that creates a common baseline).
    Even when compatibility is the furthest topic of interest, this template can be
    used as an out-of-the-box way of initializing the CSS and putting the necessary
    JavaScript libraries in place to make compatibility a non-issue.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个项目，包括Modernizr和基本配置的一个非常简单直接的方法是使用一个启动包，例如**HTML5模板文件**。HTML5模板文件是一个包含HTML、CSS和JavaScript文件的集合，包括Modernizr、jQuery和CSS
    Reset2（一组CSS规则，以创建一个共同基线的方式覆盖了不同浏览器中的默认和不一致的渲染）。即使兼容性是兴趣最远的话题，这个模板也可以用作初始化CSS并将必要的JavaScript库放置到位，从而使兼容性成为一个非问题。
- en: 'You can download HTML5 Boilerplate from [http://html5boilerplate.com/](http://html5boilerplate.com/)
    by selecting one of the following options:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过选择以下选项之一从[http://html5boilerplate.com/](http://html5boilerplate.com/)下载HTML5模板文件：
- en: '**Boilerplate**: The file collection not minimized and commented'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板文件**: 文件集合未最小化和注释'
- en: '**Boilerplate Stripped**: The file collection minimized and not commented'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**精简模板**: 文件集合已最小化且未注释'
- en: '**Customize Boilerplate**: You can configure which files will go in your base
    project'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义模板**: 你可以配置哪些文件将进入你的基础项目'
- en: While the last case may be enough, sometimes it is necessary to include more
    customizations. Fortunately, there is a tool called **Initializr**, which removes
    unneeded files from our HMTL5 Boilerplate project. Additionally, you can use the
    templates provided by Initializr to modify the visual presentation according to
    the window size / screen resolution.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然最后一种情况可能足够，但有时需要包含更多的自定义。幸运的是，有一个名为**Initializr**的工具，它可以从我们的HTML5模板文件项目中删除不需要的文件。此外，你还可以使用Initializr提供的模板根据窗口大小/屏幕分辨率修改视觉表现。
- en: 'To download Initializr, go to [http://www.initializr.com/](http://www.initializr.com/)
    and select:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Initializr，请访问[http://www.initializr.com/](http://www.initializr.com/)并选择：
- en: '**Classic H5BP**: This is the basic project'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经典H5BP**：这是一个基本项目'
- en: '**Responsive**: This is the responsive project based on screen resolution'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应式**：这是一个基于屏幕分辨率的响应式项目'
- en: '**Bootstrap**: This is the responsive project using Twitter''s Bootstrap template
    ([http://twitter.github.com/bootstrap/](http://twitter.github.com/bootstrap/))
    using Less ([http://verekia.com/less-css/](http://verekia.com/less-css/)), a dynamic
    stylesheet language that generates CSS on compilation using a JavaScript compiler'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bootstrap**：这是一个使用Twitter的Bootstrap模板（[http://twitter.github.com/bootstrap/](http://twitter.github.com/bootstrap/)）的响应式项目，使用Less（[http://verekia.com/less-css/](http://verekia.com/less-css/）），这是一种动态样式表语言，它使用JavaScript编译器在编译时生成CSS'
- en: After this you can choose or modify the files included.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，你可以选择或修改包含的文件。
- en: Before starting app development
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在开始应用开发之前
- en: As we build the MovieNow app in the following chapters, we are going to start
    from scratch, so we can see the process step by step. But remember that you could
    use templates to build your enterprise applications. The only caveat is that you
    always need to know what is inside the project; sometimes an unknown JavaScript
    or CSS file may cause serious performance issues.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中构建MovieNow应用时，我们将从头开始，这样我们可以一步一步地看到这个过程。但请记住，你可以使用模板来构建你的企业应用。唯一的注意事项是，你总是需要了解项目内部的内容；有时未知的JavaScript或CSS文件可能会引起严重的性能问题。
- en: 'While all this can sound like a nightmare, you only need to follow a simple
    strategy to embark on the magical quest for compatibility:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然所有这些可能听起来像是一场噩梦，但你只需要遵循一个简单的策略就可以开始兼容性的神奇之旅：
- en: Follow the W3C standards for HTML, CSS, and JavaScript ([http://www.w3schools.com](http://www.w3schools.com)).
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循W3C的HTML、CSS和JavaScript标准（[http://www.w3schools.com](http://www.w3schools.com)）。
- en: Choose JavaScript libraries or CSS to give backward compatibility for old browsers.
    In general, a compatibility solution that does *not* include JavaScript is better
    than the one that does, but sometimes it is not possible with only CSS.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择JavaScript库或CSS以支持旧浏览器的向后兼容性。一般来说，不包含JavaScript的兼容性解决方案比包含JavaScript的方案更好，但有时仅使用CSS是无法实现的。
- en: 'Define a course of action for allowing accessibility for any user agent. There
    are a couple of strategies of note: **graceful degradation** or **progressive
    enhancement**. Graceful degradation implies that you begin developing for modern
    browsers, and then you add handlers for less capable devices. Progressive enhancement,
    on the other hand, implies starting with basic capabilities and building to the
    lowest common denominator for browser features, and then adding enhancements for
    more capable browsers.'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为允许任何用户代理的访问性定义一个行动方案。有几个值得注意的策略：**优雅降级**或**渐进增强**。优雅降级意味着你首先为现代浏览器开发，然后为功能较弱的设备添加处理程序。另一方面，渐进增强意味着从基本功能开始，构建到浏览器功能的最低公共分母，然后为功能更强的浏览器添加增强。
- en: 'It is a good practice to support different **user experiences** (**UX**) for
    mobile devices for a series of reasons: the keyboard can be cumbersome in mobile
    devices such as mobile phones and even more so on on touchscreen devices; viewing
    the same layout on smaller resolutions can force users to constantly zoom in and
    out or make it difficult to click some buttons or links, and sometimes it is not
    technically possible to have certain functionalities. For example, autoplay for
    video or volume control using JavaScript in iOS Devices (iPhone, iPad, and so
    on) is not possible.'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了多个原因，支持移动设备的不同**用户体验**（UX）是一个好的实践：在手机等移动设备上，键盘可能会很麻烦，在触摸屏设备上更是如此；在较小的分辨率上查看相同的布局可能会迫使用户不断放大和缩小，或者使得点击某些按钮或链接变得困难，有时在技术上也不可能实现某些功能。例如，在iOS设备（iPhone、iPad等）上使用JavaScript进行视频自动播放或音量控制是不可能的。
- en: Make a test plan for multiple browsers. There are services that allow you to
    test your enterprise application across multiple browsers and platforms. Of course,
    the services that employ snapshots may be sub-optimal since they do not test JavaScript
    execution. It is always good to have all of the browsers that your system will
    support installed on a test machine, and there are tools that allow you to change
    the browser version on the fly.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 制定针对多个浏览器的测试计划。有一些服务允许你在多个浏览器和平台上测试你的企业应用。当然，使用快照的服务可能不是最优的，因为它们不测试JavaScript执行。始终在测试机器上安装你系统将支持的浏览器总是好的，而且有一些工具允许你动态更改浏览器版本。
- en: Use the official documentation for web browsers as well as the community forums
    to keep abreast of what browser makers are doing.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用官方浏览器文档以及社区论坛来了解浏览器制造商的最新动态。
- en: Summary
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the differences between the web browsers and
    the inconsistent ways in which they behave. We talked about the importance of
    compatibility and strategies you can use to level the playing field. In general,
    web developers must try to cover most of the cases to ensure compatibility, but
    at the same time it is important to understand the project and the target audience,
    and adapt our solutions to them first and then to the global scene.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了不同浏览器之间的差异以及它们不一致的行为方式。我们讨论了兼容性的重要性以及你可以使用的策略来平衡竞争。一般来说，网络开发者必须尝试覆盖大多数情况以确保兼容性，但与此同时，理解项目和目标受众非常重要，我们首先需要将我们的解决方案适应他们，然后才是全球场景。
- en: As a final thought, we need to put ourselves in the user's shoes. The last thing
    a user wants to see is a message asking to download another browser to use an
    application. Remember that our goal as developers is not only to bring a collection
    of requirements to life, but also to create engaging user experiences that define
    the application as a medium that facilitates an end, rather than an obstacle that
    separates the user from a final goal.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后的思考，我们需要站在用户的角度考虑。用户最不想看到的是一条要求下载另一个浏览器来使用应用程序的消息。记住，作为开发者，我们的目标不仅仅是将一整套需求实现，还要创造引人入胜的用户体验，将应用程序定义为一个促进最终目标的媒介，而不是一个将用户与最终目标隔离开来的障碍。
- en: Before you start building a house, you need to understand what tools you need
    and how to use them. In the next chapter, we will look at setting up your machine
    and the available tools that we can use to build our HTML5 enterprise application,
    including a comprehensive evaluation of the business decisions involved in selecting
    these tools.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始建造房屋之前，你需要了解你需要哪些工具以及如何使用它们。在下一章中，我们将探讨如何设置你的机器以及我们可以用来构建我们的HTML5企业应用的可用的工具，包括对这些工具选择中涉及到的商业决策的全面评估。
