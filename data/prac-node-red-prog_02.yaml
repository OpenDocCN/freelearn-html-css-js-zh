- en: '*Chapter 1*: Introducing Node-RED and Flow-Based Programming'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第1章*：介绍Node-RED和基于流的编程'
- en: This chapter will help you grow from being a reader to being a Node-RED user.
    First, you'll learn about the history of **Flow-based programming (FBP)** tools,
    not just Node-RED. You will then gain a broad understanding of the entirety of
    Node-RED as a useful tool for building web applications and the **Internet of
    Things** (**IoT**) data handling, before learning what IoT and Node.js are in
    terms of Node-RED.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助您从读者成长为Node-RED用户。首先，您将了解**基于流的编程（FBP）**工具的历史，而不仅仅是Node-RED。然后，您将对Node-RED的整体有一个广泛的了解，作为构建Web应用程序和**物联网**（**IoT**）数据处理的有用工具，然后学习有关Node-RED的IoT和Node.js是什么。
- en: Providing technical content will help accelerate your software application development,
    but if you take a look at the history of the Node-RED tool itself, it will help
    you better understand why you need a FBP tool such as Node-RED. That is what we
    will be doing in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 提供技术内容将有助于加速软件应用程序的开发，但如果您看一下Node-RED工具本身的历史，将有助于您更好地理解为什么您需要像Node-RED这样的FBP工具。这就是本章将要做的事情。
- en: 'More specifically, we''ll be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地，我们将涵盖以下主题：
- en: What is FBP?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是FBP？
- en: What is Node-RED?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是Node-RED？
- en: Node-RED benefits
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node-RED的好处
- en: Node-RED and IoT
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node-RED和物联网
- en: Let's get started!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: What is FBP?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是FBP？
- en: So, what is FBP in the first place? It's the workflows you use in your work
    that you can easily imagine. Let's recall those workflows.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，首先什么是FBP呢？这是您在工作中使用的工作流程，您可以很容易地想象到。让我们回顾一下这些工作流程。
- en: Workflows
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作流程
- en: In a normal workflow, boxes and wires indicate the process flow. It may be just
    one business design. Boxes represent processes. Box processing is defined by who,
    when, where, what, and how much. Sometimes, it's like explicitly writing out the
    flow of processing, such as by using swim lanes or placing writing definitions
    inside boxes. In any case, looking at the box should reveal what will be done.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常的工作流程中，方框和线表示进程流程。它可能只是一个业务设计。方框代表进程。方框处理由谁、何时、何地、什么以及多少来定义。有时，它就像明确地写出处理流程，例如使用游泳道或在方框内放置写定义。无论如何，看看方框应该能够看出将要做什么。
- en: 'On the other hand, let''s try to summarize this business process as a document.
    Don''t you think it will be complicated? Who will do what as they read it, even
    if they use some paragraphs well to put it together? When will you do it? It could
    be confusing:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，让我们试着将这个业务流程总结为一个文件。你不觉得会很复杂吗？即使他们使用一些段落来组合，读者会在阅读时会感到困惑。他们将在什么时候做？这可能会令人困惑：
- en: '![Figure 1.1 – Workflow example'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.1 – 工作流程示例'
- en: '](img/pic_1-1.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-1.jpg)'
- en: Figure 1.1 – Workflow example
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 工作流程示例
- en: Now, let's get back to software programming. FBP is a kind of concept for software
    programming that defines an application with a data flow. Each part of the process
    is there as a black box. They communicate data between connected black boxes that
    have been predefined. FBP is said to be component-oriented because these black-box
    processes can be connected repeatedly to form several applications without needing
    to be modified internally. Let's explore FBP in more detail.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到软件编程。FBP是一种用数据流定义应用程序的软件编程概念。处理的每个部分都是一个黑盒子。它们在预定义的连接的黑盒子之间传递数据。FBP被认为是面向组件的，因为这些黑盒子进程可以重复连接，形成多个应用程序，而无需在内部进行修改。让我们更详细地探讨FBP。
- en: Flow-based programming (FBP)
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于流的编程（FBP）
- en: I think FBP is a good blend of workflow and dataflow. FBP uses a **data factory**
    metaphor to define an application. It sees an application as a network of asynchronous
    processes that start at some point and do a single sequential process that does
    one operation at a time until it ends, rather than communicating by using a stream
    of structured chunks of data. This is called an **information packet** (**IP**).
    This view focuses on the data and its transformation process to produce the output
    that is needed. Networks are usually defined outside a process as a list of connections
    that is interpreted by a piece of software called a **scheduler**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为FBP是工作流和数据流的良好结合。FBP使用**数据工厂**的隐喻来定义应用程序。它将应用程序视为一组异步进程的网络，这些进程从某一点开始，并进行单个顺序处理，一次执行一个操作，直到结束，而不是通过使用结构化数据块流进行通信。这被称为**信息包**（**IP**）。这种观点侧重于数据及其转换过程，以产生所需的输出。网络通常在进程外部定义为一组由称为**调度器**的软件解释的连接列表。
- en: Processes communicate via fixed capacity connections. Connections are connected
    to processes using ports. The port has a specific name that is agreed on by the
    network definition and the process code. At this point, it is possible to execute
    the same code by using multiple processes. A particular IP is usually only owned
    by a single process or transferred between two processes. The port can be either
    a normal type or an array type.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 进程通过固定容量连接进行通信。连接通过端口连接到进程。端口具有网络定义和进程代码所约定的特定名称。在这一点上，可以通过使用多个进程执行相同的代码。特定的IP通常只由单个进程拥有或在两个进程之间传输。端口可以是普通类型或数组类型。
- en: FBP applications typically run faster than traditional programs, since FBP processes
    can continue to run as long as there is room to put in data and output to process.
    It does not require any special programming and makes optimal use of all the processors
    on the machine.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: FBP应用程序通常比传统程序运行得更快，因为FBP进程可以继续运行，只要有空间放入数据并输出到处理。它不需要任何特殊的编程，并且可以充分利用机器上的所有处理器。
- en: 'FBP has a high-level, functional style so that the behavior of the system can
    be easily defined; for example, in a distributed multi-party protocol such as
    a distributed data flow model, for accurately analyzing the criteria for determining
    whether a variable or statement behaves correctly:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: FBP具有高级功能风格，因此系统的行为可以很容易地定义；例如，在分布式多方协议中，如分布式数据流模型中，可以准确分析确定变量或语句是否正确行为的标准：
- en: '![Figure 1.2 – Simple FBP design example'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.2 – 简单的FBP设计示例'
- en: '](img/pic_1-2.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-2.jpg)'
- en: Figure 1.2 – Simple FBP design example
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 - 简单的FBP设计示例
- en: Now that you have a solid understanding of FBP, let's learn how Node-RED can
    be implemented in this way.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经对FBP有了扎实的了解，让我们学习如何以这种方式实现Node-RED。
- en: What is Node-RED?
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Node-RED？
- en: Node-RED is one of the FBP tools that we have described so far. Developed by
    IBM's Emerging Technology Services team, Node-RED is now under the OpenJS Foundation.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED是我们迄今为止描述的FBP工具之一。由IBM的新兴技术服务团队开发，Node-RED现在属于OpenJS基金会。
- en: Overview
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: FBP was invented by J. Paul Morrison in the 1970s. As we mentioned earlier,
    FBP describes the behavior of the application as a black box network, which in
    Node-RED is described as a "node." Processing is defined in each node; data is
    given to it, processing is performed using that data, and that data is passed
    to the next node. The network plays the role of allowing data to flow between
    the nodes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: FBP是由J. Paul Morrison在20世纪70年代发明的。正如我们之前提到的，FBP将应用程序的行为描述为一个黑盒网络，在Node-RED中被描述为“节点”。每个节点中定义了处理；数据被传递给它，使用该数据进行处理，然后将该数据传递给下一个节点。网络起到了允许数据在节点之间流动的作用。
- en: 'This kind of programming method is very easy to use to make a model visually
    and makes it easy to access for several layer users. Anybody can understand what
    the flow is doing if a problem is broken down into each step. That''s why you
    don''t need to the code inside the nodes:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这种编程方法非常易于使用，可以用来直观地制作模型，并且易于多层用户访问。如果将问题分解为每个步骤，任何人都可以理解流程在做什么。这就是为什么您不需要在节点内部编写代码：
- en: '![Figure 1.3 – Node-RED Flow Editor as an FBP tool'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.3 - Node-RED流程编辑器作为FBP工具'
- en: '](img/pic_1-3.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-3.jpg)'
- en: Figure 1.3 – Node-RED Flow Editor as an FBP tool
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 - Node-RED流程编辑器作为FBP工具
- en: Flow editor and runtime
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流编辑器和运行时
- en: Node-RED is not only a programming tool but also an execution platform that
    wraps up the Node.js runtime for applications that are built using Node-RED.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED不仅是一个编程工具，还是一个封装了Node-RED构建的应用程序的Node.js运行时的执行平台。
- en: We need to use the **flow editor** to make Node-RED applications for IoT, web
    services, and more. The flow editor is also a Node.js web application. We will
    tell you how to use flow editor clearly in [*Chapter 3*](B16353_03_ePub_AM.xhtml#_idTextAnchor044)*,
    Understanding Node-RED Characteristics by Creating Basic Flows*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用**流编辑器**为物联网、Web服务等制作Node-RED应用程序。流编辑器也是一个Node.js Web应用程序。我们将在[*第3章*](B16353_03_ePub_AM.xhtml#_idTextAnchor044)*，通过创建基本流程了解Node-RED特性*中清楚地告诉您如何使用流编辑器。
- en: The flow editor, which is the core function of Node-RED, is actually a web application
    made with Node.js. It works with the Node.js runtime. This flow editor operates
    within the browser. You must select the node you want to use from the various
    nodes in the palette and drag it to the workspace. Wiring is the process of connecting
    the nodes to each other, which creates an application. The user (developer) can
    deploy the application to the target runtime with just one click.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 流编辑器是Node-RED的核心功能，实际上是一个使用Node.js制作的Web应用程序。它与Node.js运行时一起工作。这个流编辑器在浏览器中运行。您必须从调色板中选择要使用的节点，并将其拖到工作区。连线是将节点连接在一起的过程，从而创建一个应用程序。用户（开发人员）只需点击一次即可将应用程序部署到目标运行时。
- en: The palette that contains various nodes can easily be expanded as you can install
    new nodes created by developers, meaning you can easily share the flow you created
    as a JSON file to the world. Before we explore the benefits of Node-RED, let's
    look at the brief history behind its creation.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 包含各种节点的调色板可以轻松扩展，因为您可以安装开发人员创建的新节点，这意味着您可以将创建的流程轻松共享为JSON文件。在我们探讨Node-RED的好处之前，让我们先看一下其创建背后的简要历史。
- en: History and origin of Node-RED
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Node-RED的历史和起源
- en: In early 2013, Nick-O'Leary and Dave Conway-Jones from IBM UK's Emerging Technology
    Services Team created Node-RED.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在2013年初，来自IBM英国新兴技术服务团队的Nick-O'Leary和Dave Conway-Jones创建了Node-RED。
- en: Originally, it was a just **proof of concept** (**PoC**) to help visualize and
    understand the mapping between **Message Queue Telemetry Transport** (**MQTT**)
    topics, but soon, it became a very popular tool that could be easily extended
    to various uses.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，它只是一个**概念验证**（**PoC**），用于帮助可视化和理解**消息队列遥测传输**（**MQTT**）主题之间的映射，但很快，它成为了一个非常受欢迎的工具，可以轻松扩展到各种用途。
- en: Node-RED became open source in September 2013 and remains to be developed as
    open source now. It became one of the founding projects of the JS Foundation in
    October 2016, which has since merged with the Node.js Foundation to create the
    OpenJS Foundation, doing so in March 2019.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED于2013年9月成为开源项目，现在仍然作为开源项目进行开发。它于2016年10月成为JS基金会的创始项目之一，后来与Node.js基金会合并，于2019年3月创建了OpenJS基金会。
- en: The OpenJS Foundation supports the growth of JavaScript and web technologies
    as a neutral organization to lead and keep any projects and fund activities jointly,
    which is beneficial to the whole of the ecosystem. The OpenJS Foundation currently
    hosts over 30 open source JavaScript projects, including Appium, Dojo, jQuery,
    Node.js, and webpack.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: OpenJS基金会支持JavaScript和Web技术的增长，作为一个中立的组织来领导和共同资助任何项目和活动，这对整个生态系统都有益处。OpenJS基金会目前托管了30多个开源JavaScript项目，包括Appium、Dojo、jQuery、Node.js和webpack。
- en: 'Node-RED has been made available under the Apache 2 license, which makes it
    favorable to use in a wide range of settings, both personal and commercial:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED已根据Apache 2许可证提供，这使得它在个人和商业领域都可以广泛使用：
- en: '![Figure 1.4 – Dave Conway-Jones and Nick O''Leary'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 - Dave Conway-Jones和Nick O''Leary'
- en: '](img/pic_1-4.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-4.jpg)'
- en: Figure 1.4 – Dave Conway-Jones and Nick O'Leary
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 - Dave Conway-Jones和Nick O'Leary
- en: Why is it Called Node-RED?
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么叫Node-RED？
- en: The official documentation ([https://nodered.org/about/](https://nodered.org/about/)
    states that the name was an easy play on words that sounded like "Code Red." This
    was a dead end, and Node-RED was a big improvement on what it was called in its
    first few days of conception. The "Node" part reflects both the flow/node programming
    model, as well as the underlying Node.js runtime.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档（[https://nodered.org/about/](https://nodered.org/about/)）指出，这个名字是一个简单的双关语，听起来像“Code
    Red”。这是一个死胡同，Node-RED是对它在最初几天构思时的称呼的重大改进。 “Node”部分既反映了流/节点编程模型，也反映了底层的Node.js运行时。
- en: Nick and Dave never did come to a conclusion on what the "RED" part stands for.
    "Rapid Event Developer" was one suggestion, but it's never been compelled to formalize
    anything. And so, the name "Node-RED" came to life.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Nick和Dave从未就“RED”部分代表什么达成结论。“快速事件开发人员”是一个建议，但从未被迫正式确定任何事情。因此，“Node-RED”这个名字诞生了。
- en: Node-RED benefits
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node-RED的好处
- en: 'Let''s think a little here. Why do you use cars? I think the answer is very
    simple and clear. First of all, we can come up with the answer that they are used
    as a means of transportation in a broad sense. There are other options for transportation,
    such as walking, bicycle, train, and bus. Then, we have the reasons for choosing
    a car from among these other options, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这里思考一下。为什么要使用汽车？我认为答案非常简单明了。首先，我们可以得出答案，即它们被用作广义上的交通工具。还有其他交通选择，比如步行、骑自行车、乘火车和公交车。然后，我们有从这些其他选择中选择汽车的原因，如下所示：
- en: You do not get exhausted.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你不会感到疲惫。
- en: You can reach your destination quickly.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以快速到达目的地。
- en: You can move at your own pace.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以按自己的步调前进。
- en: You can keep your personal space.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以保持个人空间。
- en: Of course, there are some disadvantages, but I think these are the main reasons
    for using a car. Although other means of transportation can also serve the same
    purpose, the important thing is to consider the advantages and disadvantages of
    each, and use the car as a transportation tool for the reason that you feel is
    the most suitable to you.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也有一些缺点，但我认为这些是使用汽车的主要原因。虽然其他交通工具也可以达到同样的目的，但重要的是要考虑每种交通工具的优缺点，并根据你认为最适合你的原因使用汽车作为交通工具。
- en: We can see the same situation in software. As an example, why do you use Word,
    Excel, and PowerPoint? You'll probably use Word because it's the most efficient
    way to write a document. However, you could use a word processor separately or
    handwrite anything. Similarly, instead of Excel, you can use any other means to
    make spreadsheets. There are also other means if you want to make presentation
    materials and make them look effective, besides PowerPoint. However, you are likely
    to choose the optimum tool for your situation.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在软件中也可以看到同样的情况。例如，为什么要使用Word、Excel和PowerPoint？你可能会使用Word，因为这是写文件的最有效方式。然而，你也可以使用其他文字处理软件或手写。同样地，你可以使用其他方式制作电子表格，而不是Excel。除了PowerPoint，如果你想制作有效的演示材料，也有其他方式。然而，你可能会选择最适合你情况的工具。
- en: Let's recall what Node-RED is for. It is a FBP tool, suitable for making data
    control applications for web applications and IoT. Its development environment
    and execution environment are browser-based applications made with Node.js, which
    makes their development as easy as possible.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下Node-RED的用途。它是一个适用于为Web应用程序和物联网制作数据控制应用程序的FBP工具。它的开发环境和执行环境是基于浏览器的应用程序，使用了Node.js，使其开发尽可能简单。
- en: So, what is the reason for using Node-RED, which provides these kinds of features?
    Do you want to avoid heavy coding? Do you not have coding skills? Yes, of course,
    these are also reasons to use the program.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，使用提供这些功能的Node-RED的原因是什么呢？你想避免繁重的编码吗？你没有编码技能吗？当然，这些也是使用该程序的原因。
- en: Let's recall the example of a car. In a broad sense, our dilemma (transportation)
    is replaced here by developing (creating) a Node.js application for describing
    software tools. The transport options, such as cars, bicycles, trains, buses,
    ships, planes, and so on, are options, and with software development, we also
    have numerous options, such as using Node.js scratch, or using various frameworks
    of Node.js and using Node-RED. As for reasons to choose Node-RED, let's take a
    look at some essential points.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下汽车的例子。在广义上，我们的困境（交通工具）在这里被开发（创建）Node.js应用程序来描述软件工具所取代。诸如汽车、自行车、火车、公交车、船、飞机等交通选择都是选项，而在软件开发中，我们也有许多选择，比如使用Node.js
    scratch，或使用Node.js的各种框架和使用Node-RED。至于选择Node-RED的原因，让我们看一下一些重要的要点。
- en: Simplification
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化
- en: When programming with Node-RED, you'll notice its simplicity. As the name no-code/low-code
    indicates, coding is eliminated and programming is intuitively completed with
    a minimal number of operations needing to be used.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Node-RED进行编程时，你会注意到它的简单性。正如无代码/低代码的名称所示，编码被消除，编程是通过最少的操作直观完成的。
- en: Efficiency
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 效率
- en: The FBP typified by Node-RED can be completed with almost only GUI operations.
    Node-RED flow editor takes care of building the application execution environment,
    library synchronization, the **integrated development environment** (**IDE**),
    and editor preparation so that you can concentrate on development.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED所代表的FBP几乎可以完全通过图形界面操作完成。Node-RED流编辑器负责构建应用程序执行环境、库同步、集成开发环境（IDE）和编辑器准备，这样你就可以专注于开发。
- en: Common
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用
- en: As represented by object-oriented development, making the source code a common
    component is one of the most important ideas in development. In normal coding-based
    development, each common component exists in functions and classes, but in Node-RED,
    they exist as an easy-to-understand node (just a box). If you don't have a node
    as a common component you want to use, anyone can create one immediately and publish
    it to the world.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如面向对象开发所代表的，将源代码作为一个通用组件是开发中最重要的想法之一。在基于常规编码的开发中，每个通用组件存在于函数和类中，但在Node-RED中，它们存在为易于理解的节点（只是一个框）。如果你没有一个作为通用组件想要使用的节点，任何人都可以立即创建一个并将其发布到世界上。
- en: High quality
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高质量
- en: High quality is the true value of flow-based and visual programming. Each node
    provided as a component is a complete module that has been unit tested. As a result,
    app authors can focus on checking the operation at the join level without worrying
    about the contents of node. This is a big factor that eliminates human error at
    the single level and ensures high quality.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 高质量是基于流程和可视化编程的真正价值。每个作为组件提供的节点都是一个经过单元测试的完整模块。因此，应用程序作者可以专注于在连接级别检查操作，而不必担心节点的内容。这是一个消除单个级别的人为错误并确保高质量的重要因素。
- en: Open source
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开源
- en: Node-RED is an open source piece of software. Therefore, it can be used flexibly
    under the Apache2 license. Some are developing their own services based on Node-RED,
    while others are changing to their own UI and deploying it as built-in. As we
    mentioned previously, we have also established a platform where we can publish
    our own developed node so that anyone can use it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED是一款开源软件。因此，它可以根据Apache2许可灵活使用。一些人正在基于Node-RED开发自己的服务，而另一些人则正在更改自己的用户界面，并将其部署为内置。正如我们之前提到的，我们还建立了一个平台，可以发布我们自己开发的节点，以便任何人都可以使用它。
- en: Node-RED library
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Node-RED库
- en: The library indexes all Node-RED modules published to the public npm repository
    ([https://www.npmjs.com/](https://www.npmjs.com/)), assuming they follow the proper
    packaging guidelines.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 该库索引了所有发布到公共npm存储库（[https://www.npmjs.com/](https://www.npmjs.com/)）的Node-RED模块，假设它们遵循适当的打包指南。
- en: 'This is the area in which we''ve seen the most community contribution, with
    well over 2,000 nodes available – which means there''s something for everyone:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们看到最多社区贡献的领域，有超过2,000个可用的节点 - 这意味着每个人都能找到适合自己的东西：
- en: '![Figure 1.5 – Node-RED library'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.5 - Node-RED库'
- en: '](img/pic_1-5.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-5.jpg)'
- en: Figure 1.5 – Node-RED library
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 - Node-RED库
- en: Various platforms
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 各种平台
- en: Node-RED can be used on various platforms. That's because Node-RED itself is
    a Node.js application, as we mentioned previously. If you have a runtime environment
    for Node.js, you can run it. It is mostly used on Edge devices, cloud services,
    and in embedded formats.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED可以在各种平台上使用。这是因为Node-RED本身是一个Node.js应用程序，正如我们之前提到的。如果你有一个Node.js的运行环境，你就可以运行它。它主要用于边缘设备、云服务和嵌入式格式。
- en: You can get a sense of this by understanding the relationship between Node-RED
    and IoT and the architecture of IoT, which will be explained in the next section.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解Node-RED和物联网之间的关系以及物联网的架构，可以对此有所了解，这将在下一节中解释。
- en: Node-RED and IoT
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node-RED和物联网
- en: 'Again, Node-RED is a **virtual environment** that combines hardware devices,
    APIs, and online services in a revolutionary way on a browser. It provides the
    following features:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，Node-RED是一个**虚拟环境**，以革命性的方式在浏览器上结合硬件设备、API和在线服务。它提供以下功能：
- en: Browser-based UI.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于浏览器的用户界面。
- en: Works with Node.js and is lightweight.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Node.js一起工作，且轻量级。
- en: Encapsulates function and can be used as a node (meaning functions are locked
    in an abstract capsule) .
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 封装功能，可以作为节点使用（意味着功能被锁在一个抽象的胶囊中）。
- en: You can create and add your own nodes.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以创建和添加自己的节点。
- en: Easy access to IBM Cloud services.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松访问IBM云服务。
- en: In other words, it can be said that this tool is suitable for building IoT-related
    services, such as data control on devices, and linking edge devices and cloud
    services. Originally, the development concept of Node-RED was for IoT, so this
    makes sense.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，可以说这个工具适合构建与物联网相关的服务，比如设备上的数据控制，以及连接边缘设备和云服务。最初，Node-RED的开发概念是为了物联网，所以这是有道理的。
- en: 'Now, let''s look at the basic structure of IoT so that those who are only vaguely
    aware of IoT can understand it. It can be said that IoT is basically composed
    of six layers, as shown in the following diagram:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下物联网的基本结构，以便那些对物联网只有模糊概念的人能够理解。可以说，物联网基本上由六个层组成，如下图所示：
- en: '![Figure 1.6 – IoT six layers'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.6 - 物联网六层'
- en: '](img/pic_1-6.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-6.jpg)'
- en: Figure 1.6 – IoT six layers
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 - 物联网六层
- en: Let's take a look at these in more detail.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这些。
- en: '**Device**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**设备**'
- en: The device is a so-called edge device. IoT has various sensors and handles the
    data that's acquired from them. Since it doesn't make sense to have the data only
    on the edge device, we need to send that data through the gateway to the network.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 设备是所谓的边缘设备。物联网具有各种传感器，并处理从它们获取的数据。由于仅在边缘设备上拥有数据是没有意义的，我们需要通过网关将数据发送到网络。
- en: '**Network**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络**'
- en: This is the network that's required to send the data that's been obtained from
    the device to a server on the internet. It usually refers to the internet. In
    addition to the internet, there is also a P2P connection via Bluetooth or serial.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是发送从设备获取的数据到互联网服务器所需的网络。通常指的是互联网。除了互联网，还可以通过蓝牙或串行进行P2P连接。
- en: '**Platform**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台**'
- en: The party that receives and uses the data is the platform. We may also have
    a database for activating and authenticating things, managing communications,
    and persisting received data.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接收和使用数据的一方是平台。我们可能还有一个用于激活和验证事物、管理通信和持久化接收到的数据的数据库。
- en: '**Analytics**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**分析**'
- en: This is a layer that analyzes the received data. Broadly speaking, it may be
    classified as an application. This is the part that prepares the data so that
    it can be processed into a meaningful form.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个分析接收到的数据的层。广义上来说，它可以被分类为一个应用程序。这部分准备数据，使其能够以有意义的形式进行处理。
- en: '**Application**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序**'
- en: An application provides a specific service based on data analysis results. It
    can be a web or mobile application, or it can be a hardware-specific embedded
    application. It can be said to be the layer that's used by the end user of the
    IoT solution.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序根据数据分析结果提供特定的服务。它可以是Web或移动应用程序，也可以是硬件特定的嵌入式应用程序。可以说这是物联网解决方案的最终用户使用的层。
- en: Now that we have an understanding of IoT, we will examine why Node-RED should
    be used for it.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对物联网有了一定的了解，我们将探讨为什么应该使用Node-RED。
- en: Node-RED and IoT
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Node-RED和物联网
- en: 'While explaining IoT so far, we''ve made it clear why Node-RED is suitable
    for IoT. For example, you can understand why FBP tools that have been developed
    for IoT survive when used with Node-RED. In particular, the following three points
    should be taken into account:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在到目前为止解释物联网的过程中，我们已经明确说明了为什么Node-RED适合物联网。例如，你可以理解为什么为物联网开发的FBP工具在与Node-RED一起使用时能够生存下来。特别是，应该考虑以下三点：
- en: Since it can be run on edge devices (pre-installed on specific versions of Raspberry
    Pi OS), it is ideal for data handling at the device layer.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于它可以在边缘设备上运行（预装在特定版本的树莓派OS上），因此非常适合在设备层进行数据处理。
- en: Since it can be run on the cloud (provided as a default service in IBM Cloud),
    it is easy to link with storage and analysis middleware.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于它可以在云上运行（作为IBM Cloud中的默认服务），因此很容易与存储和分析中间件进行链接。
- en: Since MQTT and HTTP protocols can be covered, it is very easy to exchange data
    between the edge device and the server processing cloud.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于可以涵盖MQTT和HTTP协议，因此在边缘设备和服务器处理云之间交换数据非常容易。
- en: 'In this way, Node-RED, which largely covers the elements required for IoT,
    is now used for a wide range of applications, such as web services and chart display,
    as well as programming for IoT. Also, as of June 2020, if you look at Google Trends
    for Node-RED, you can see that the number of users is gradually increasing. As
    such, Node-RED is a very attractive FBP tool:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一来，Node-RED，它主要涵盖了物联网所需的元素，现在被用于各种应用，如Web服务和图表显示，以及物联网的编程。此外，截至2020年6月，如果你查看Node-RED的Google趋势，你会发现用户数量在逐渐增加。因此，Node-RED是一个非常有吸引力的FBP工具：
- en: '![Figure 1.7 – Google Trends for "Node-RED"'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.7 - "Node-RED"的Google趋势'
- en: '](img/pic_1-7.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/pic_1-7.jpg)'
- en: Figure 1.7 – Google Trends for "Node-RED"
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7 - "Node-RED"的Google趋势
- en: A typical edge device that can use Node-RED is Raspberry Pi. Of course, it is
    possible to use Node-RED on other platforms, but it goes well with Raspberry Pi,
    which also has a pre-installed version of the OS.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用Node-RED的典型边缘设备是树莓派。当然，也可以在其他平台上使用Node-RED，但它与树莓派配合得很好，树莓派还预装了操作系统的版本。
- en: Raspberry Pi OS Supports Node-RED
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派OS支持Node-RED
- en: Node-RED has also been packaged for the Raspberry Pi OS repositories and appears
    in their list of recommended software. This allows it to be installed using `apt-get
    install Node-RED` and includes the Raspberry Pi OS-packaged version of Node.js,
    but does not include npm. More information can be found at [https://nodered.org/docs/getting-started/raspberrypi](https://nodered.org/docs/getting-started/raspberrypi).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED也已经打包到了树莓派OS的存储库中，并出现在他们的推荐软件列表中。这使得可以使用`apt-get install Node-RED`进行安装，并包括了树莓派OS打包版本的Node.js，但不包括npm。更多信息可以在[https://nodered.org/docs/getting-started/raspberrypi](https://nodered.org/docs/getting-started/raspberrypi)找到。
- en: IBM Cloud is a typical cloud platform that can use Node-RED. Of course, you
    can use Node-RED on other clouds, but IBM Cloud provides a service that anyone
    can easily start.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: IBM Cloud是一个可以使用Node-RED的典型云平台。当然，你也可以在其他云上使用Node-RED，但IBM Cloud提供了一个任何人都可以轻松开始使用的服务。
- en: Important Note
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Node-RED is available on the IBM Cloud platform as one of its Starter Kits applications
    in their catalog. It is very easy to start using the flow editor as a web application
    on IBM Cloud ([https://nodered.org/docs/getting-started/ibmcloud](https://nodered.org/docs/getting-started/ibmcloud)).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED在IBM Cloud平台上作为其目录中的Starter Kits应用程序之一可用。在IBM Cloud上作为Web应用程序使用流程编辑器非常容易（[https://nodered.org/docs/getting-started/ibmcloud](https://nodered.org/docs/getting-started/ibmcloud)）。
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned what FBP and Node-RED are. Due to this, you now
    understand why Node-RED is currently loved and used by lots of people as an FBP
    tool. At this point, you may want to build an application using Node-RED. In the
    next chapter, we'll install Node-RED in our environment and take a look at it
    in more depth.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了什么是FBP和Node-RED。因此，你现在明白了为什么Node-RED目前被很多人作为FBP工具所喜爱和使用。在这一点上，你可能想要使用Node-RED构建一个应用程序。在下一章中，我们将在我们的环境中安装Node-RED，并更深入地了解它。
