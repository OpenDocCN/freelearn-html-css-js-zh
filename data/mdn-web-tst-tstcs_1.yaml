- en: '*Chapter 1*: Why TestCafe?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*: 为什么选择TestCafe?'
- en: TestCafe—a new promising software testing framework or just a place where you
    can eat? Here, we will take a look at what TestCafe is and what its main features
    are. What is the technology? What do you need to know? How does it integrate with
    other tools? In this book, we will see what TestCafe is used for, go through its
    main features, and compare it with a well-known industry standard—Selenium.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe——一个新兴的软件测试框架，还是你可以在这里用餐的地方？在这里，我们将探讨TestCafe是什么以及它的主要特性。技术是什么？你需要了解什么？它是如何与其他工具集成的？在这本书中，我们将看到TestCafe的用途，了解其主要特性，并将其与一个知名的行业标准——Selenium进行比较。
- en: More practically, we will develop a set of tests for a bug tracking system.
    You will learn how to write end-to-end tests using the TestCafe syntax and the
    features of the TestCafe framework. You'll go from setting up the environment
    all the way down to writing production-ready tests.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 更实际地说，我们将为缺陷跟踪系统开发一组测试。你将学习如何使用TestCafe语法和框架特性编写端到端测试。你将从设置环境一直写到编写生产就绪的测试。
- en: Throughout this book, we'll build a sample set of tests step by step that will
    log in to a website, verify the elements present on different pages, create/delete
    entities, and execute custom JavaScript code using TestCafe. Additionally, there
    will be several stages of refactoring to showcase setup/teardown and PageObjects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们将逐步构建一组测试样例，这些测试样例将登录到网站，验证不同页面上的元素，创建/删除实体，并使用TestCafe执行自定义JavaScript代码。此外，还将有几个重构阶段，以展示设置/清理和PageObjects。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please keep in mind that this book does not pretend to be the only source of
    truth - its main goal is to demonstrate some original approaches, not to enforce
    the strict rules. Feel free to use and extend all the techniques explored in this
    book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这本书并不声称是唯一的信息来源——其主要目标是展示一些原创方法，而不是强制执行严格的规则。请随意使用和扩展本书中探索的所有技术。
- en: By the end of this chapter, we will have a clear idea of TestCafe and what lies
    ahead—a plan of features that will be tested. We will also review the demo website
    and come up with a set of test cases that will be automated in the upcoming chapters.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将对TestCafe有一个清晰的认识，以及接下来要做什么——一个将要测试的功能计划。我们还将回顾演示网站，并制定出一组将在后续章节中自动化的测试用例。
- en: 'To sum up the contents of this chapter, the following main topics will be covered:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 总结本章内容，以下主要主题将被涵盖：
- en: Introducing TestCafe.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍TestCafe。
- en: Exploring the main features of TestCafe.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索TestCafe的主要特性。
- en: Comparing TestCafe and Selenium.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较TestCafe和Selenium。
- en: Reviewing the test project we will build.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回顾我们将构建的测试项目。
- en: Introducing TestCafe
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍TestCafe
- en: If you work for a huge enterprise company or a small but innovative start-up
    and your automated tests need to support customers with older browsers the same
    as the new ones, you should definitely try TestCafe. Just like Selenium, it's
    open source, but you don't have to install any other packages or additional web
    drivers. TestCafe is a self-sufficient, free, end-to-end testing framework that
    combines unmatched ease of use with advanced automation and robust built-in stability
    mechanisms.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你为一家大型企业公司或一家小型但创新的初创公司工作，并且你的自动化测试需要支持老版本和新版本的浏览器，你绝对应该尝试TestCafe。就像Selenium一样，它是开源的，但你不需要安装任何其他包或额外的Web驱动程序。TestCafe是一个自给自足、免费、端到端测试框架，它将无与伦比的易用性与高级自动化和强大的内置稳定性机制相结合。
- en: 'It was created by DevExpress (https://github.com/DevExpress) and was open sourced
    under the MIT license. TestCafe can take care of all stages of the automated testing
    process:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 它是由DevExpress（https://github.com/DevExpress）创建的，并在MIT许可下开源。TestCafe可以处理自动化测试过程的各个阶段：
- en: Launching applications before tests.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在测试前启动应用程序。
- en: Launching different browsers.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动不同的浏览器。
- en: Running tests.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行测试。
- en: Taking screenshots.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获截图。
- en: Outputting test results.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出测试结果。
- en: TestCafe does not require any additional installation of browser plugins and
    works in all major modern browsers right out of the box. It is gaining popularity
    as a faster and easier-to-use solution compared to Selenium.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe不需要安装任何额外的浏览器插件，并且可以直接在所有主流现代浏览器中工作。与Selenium相比，它因其更快、更易用而越来越受欢迎。
- en: Now that we've had a quick glimpse of what TestCafe is, let's continue with
    an overview of its main features.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经快速了解了TestCafe是什么，让我们继续概述其主要特性。
- en: Exploring the main features of TestCafe
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索TestCafe的主要特性
- en: 'Now, let''s take a more detailed look at all the bells and whistles that TestCafe
    has to offer:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地看看TestCafe所能提供的一切：
- en: Pretty much all TestCafe needs to run is a browser and Node.js configured on
    your machine, so there is **minimal setup**.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCafe运行所需的基本条件是机器上配置的浏览器和Node.js，因此**设置非常简单**。
- en: TestCafe can run tests in **headless mode** (on Chrome or Firefox) without a
    need to render a **Document Object Model (DOM)**. This feature is extremely useful
    when running tests on any **Continuous Integration (CI)** system.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCafe可以在**无头模式**（在Chrome或Firefox上）下运行测试，无需渲染**文档对象模型（DOM）**。当在任何**持续集成（CI）系统**上运行测试时，这个特性非常有用。
- en: TestCafe **supports all main operating systems**, including Windows, macOS,
    and Linux.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCafe**支持所有主要操作系统**，包括Windows，macOS和Linux。
- en: The officially supported browsers of TestCafe are Google Chrome (Stable, Beta,
    Dev, and Canary), Internet Explorer (11+), Microsoft Edge (Legacy and Chromium-based),
    Mozilla Firefox, Safari, Google Chrome mobile, and Safari mobile – so it is **cross-browser**.
    You can find a full list of supported browsers and their aliases at [https://devexpress.github.io/testcafe/documentation/guides/concepts/browsers.html#officially-supported-browsers](https://devexpress.github.io/testcafe/documentation/guides/concepts/browsers.html#officially-supported-browsers).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCafe官方支持的浏览器包括Google Chrome（稳定版、Beta版、Dev版和Canary版）、Internet Explorer（11+）、Microsoft
    Edge（Legacy版和基于Chromium的）、Mozilla Firefox、Safari、Google Chrome移动版和Safari移动版——因此它是**跨浏览器的**。您可以在[https://devexpress.github.io/testcafe/documentation/guides/concepts/browsers.html#officially-supported-browsers](https://devexpress.github.io/testcafe/documentation/guides/concepts/browsers.html#officially-supported-browsers)找到支持的浏览器及其别名的完整列表。
- en: Tests can be written in the latest **JavaScript (ES6+), TypeScript,** or **CoffeeScript**
    formats (we will be using JavaScript to demonstrate this in the upcoming chapters).
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试可以编写为最新的**JavaScript (ES6+)，TypeScript**或**CoffeeScript**格式（我们将在接下来的章节中使用JavaScript进行演示）。
- en: Clear and flexible API with support of the **PageModel pattern** (we will see
    how this works in [*Chapter 6*](B16280_06_Final_JM_ePub.xhtml#_idTextAnchor132),
    *Refactoring with PageObjects*).
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清晰且灵活的API，支持**PageModel模式**（我们将在[*第6章*](B16280_06_Final_JM_ePub.xhtml#_idTextAnchor132)，*使用PageObjects重构*）。
- en: Stable tests due to the **smart assertion and automatic waiting mechanisms**
    (this will be discussed in [*Chapter 2*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027),
    *Exploring TestCafe Under the Hood*).
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于**智能断言和自动等待机制**（这将在[*第2章*](B16280_02_Final_JM_ePub.xhtml#_idTextAnchor027)，*探索TestCafe内部机制*）的稳定测试。
- en: 'TestCafe has a lot of **free custom plugins**: cloud browser providers and
    emulators (SauceLabs, BrowserStack, CrossBrowserTesting, and so on), framework-specific
    selectors to interact with page elements in a way that is native to your framework
    (React, Angular, Vue, and Aurelia), custom reporters to get test results in different
    formats (TeamCity, Slack, NUnit, and TimeCafe), IDE plugins to run tests and view
    results from your favorite IDE (Visual Studio Code, Webstorm, and SublimeText),
    Cucumber support to create and run tests with Cucumber syntax, and much more,
    as TestCafe developers and community members are extremely active. All of these
    are ready to use and open source (https://github.com/DevExpress/testcafe#plugins).'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestCafe拥有许多**免费的自定义插件**：云浏览器提供商和模拟器（SauceLabs，BrowserStack，CrossBrowserTesting等），框架特定的选择器以与您的框架（React，Angular，Vue，和Aurelia）中的页面元素进行交互，自定义报告器以获取不同格式的测试结果（TeamCity，Slack，NUnit和TimeCafe），IDE插件以从您最喜欢的IDE（Visual
    Studio Code，Webstorm和SublimeText）运行测试并查看结果，Cucumber支持以Cucumber语法创建和运行测试，等等，因为TestCafe的开发人员和社区成员非常活跃。所有这些都可以使用并且是开源的（https://github.com/DevExpress/testcafe#plugins）。
- en: These are the main features of the TestCafe open source framework. Wondering
    if there are any products on top of that that don't require you to write code?
    Sure thing!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是TestCafe开源框架的主要功能。想知道是否有任何不需要编写代码的产品吗？当然有！
- en: Introducing TestCafe Studio
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍TestCafe Studio
- en: In addition to the open source TestCafe framework, there is a paid test recording
    tool called TestCafe Studio. It is built on top of the TestCafe engine to give
    test engineers the opportunity to record, run, and update tests without any special
    knowledge of JavaScript. It is achieved by transforming user actions from recording
    into repeatable code.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 除了开源的TestCafe框架之外，还有一个名为TestCafe Studio的付费测试录制工具。它建立在TestCafe引擎之上，为测试工程师提供记录、运行和更新测试的机会，而无需任何特殊的JavaScript知识。这是通过将用户操作从录制转换为可重复的代码来实现的。
- en: 'As well as complementing the features provided by the TestCafe framework, TestCafe
    Studio takes things even further with the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 除了补充TestCafe框架提供的功能外，TestCafe Studio还通过以下功能更进一步：
- en: '**Visual test recorder**: This allows you to create tests without writing any
    code. It records your interactions with the web page in the browser and generates
    corresponding tests (https://docs.devexpress.com/TestCafeStudio/400165/guides/record-tests).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可视化测试录制器**：这允许您在不编写任何代码的情况下创建测试。它记录您在浏览器中与网页的交互，并生成相应的测试（https://docs.devexpress.com/TestCafeStudio/400165/guides/record-tests）。'
- en: '**Interactive test editor**: Allows you to view and edit tests and hooks in
    a comprehensive, visualized manner (https://docs.devexpress.com/TestCafeStudio/400190/user-interface/test-editor).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互式测试编辑器**：允许您以全面、可视化的方式查看和编辑测试和钩子（https://docs.devexpress.com/TestCafeStudio/400190/user-interface/test-editor）。'
- en: '**Automatic selector generation**: TestCafe Studio can generate element selectors
    while recording when you interact with a web page or when a web page element is
    picked with the element picker (https://docs.devexpress.com/TestCafeStudio/400407/test-actions/element-selectors#auto-generated-element-selectors).'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动选择器生成**：当您与网页交互或在元素选择器中选中网页元素时，TestCafe Studio可以生成元素选择器（https://docs.devexpress.com/TestCafeStudio/400407/test-actions/element-selectors#auto-generated-element-selectors）。'
- en: '**Run configuration manager**: Allows you to create, modify, and delete run
    configurations for desktop, headless, and mobile browsers (https://docs.devexpress.com/TestCafeStudio/400189/user-interface/run-configurations-dialog).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行配置管理器**：允许您为桌面、无头和移动浏览器创建、修改和删除运行配置（https://docs.devexpress.com/TestCafeStudio/400189/user-interface/run-configurations-dialog）。'
- en: '**Code editor**: Allows you to write and modify test scripts (https://docs.devexpress.com/TestCafeStudio/400181/user-interface/code-editor).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码编辑器**：允许您编写和修改测试脚本（https://docs.devexpress.com/TestCafeStudio/400181/user-interface/code-editor）。'
- en: Note
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: TestCafe Studio has 30-day free trial period – you can find more information
    about this at [https://www.devexpress.com/products/testcafestudio/qa-end-to-end-web-testing.xml](https://www.devexpress.com/products/testcafestudio/qa-end-to-end-web-testing.xml).
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: TestCafe Studio提供30天的免费试用期——您可以在[https://www.devexpress.com/products/testcafestudio/qa-end-to-end-web-testing.xml](https://www.devexpress.com/products/testcafestudio/qa-end-to-end-web-testing.xml)找到更多关于此信息。
- en: Let's stop for a moment, catch our breath, and review what we have learned so
    far. We have acquired a basic understanding of what TestCafe is and have gone
    through a list of what it has to offer – the main features, plugins, and the TestCafe
    Studio test recording tool. Now, let's proceed with an overview of how TestCafe
    competes with Selenium.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们停下来，喘口气，回顾一下我们迄今为止所学的内容。我们已经对TestCafe有了基本的了解，并了解了一系列它所能提供的内容——主要功能、插件以及TestCafe
    Studio测试录制工具。现在，让我们继续概述TestCafe如何与Selenium竞争。
- en: Comparing TestCafe and Selenium
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较TestCafe和Selenium
- en: TestCafe, with its 8,000+ stars on GitHub, is gaining a reputation as the 'next
    big thing' in the test automation world. Let's compare this new challenger with
    Selenium – a heavyweight leader with almost 18k+ stars that has ruled the industry
    for more than 15 years.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe，在GitHub上拥有超过8,000颗星，正在赢得测试自动化领域“下一个大热门”的声誉。让我们将这位新挑战者与Selenium进行比较——一个拥有近18k+颗星的重型领导者，它统治了行业超过15年。
- en: To start automating with Selenium, you will have to install the WebDriver client
    for the desired programming language and corresponding drivers for each browser
    you want your tests to run at. This may sound like an easy thing to do, but it's
    quite a time-consuming task to just get started with testing and is far from the
    ideal scenario of the run-one-command simplicity that we're used to with the majority
    of the packages in the Node.js infrastructure.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Selenium进行自动化，您将需要为所需的编程语言安装WebDriver客户端，并为您想要测试运行的每个浏览器安装相应的驱动程序。这听起来可能是一件简单的事情，但仅仅开始测试就是一个耗时的工作，而且远非我们习惯于Node.js基础设施中大多数包的运行一个命令的简单场景。
- en: TestCafe includes a number of features that would not be possible if TestCafe
    was built on top of Selenium, such as spawning isolated test environments. Each
    of the tests performed by TestCafe runs as if it was started in a new incognito
    tab, so all the cookies and the storage are purged. This helps to reduce test
    code duplication and gives a significant execution time economy as you don't need
    to clear the browser state between tests to make them independent of each other.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: TestCafe 包含了一些如果 TestCafe 是建立在 Selenium 之上则不可能实现的功能，例如生成隔离的测试环境。TestCafe 执行的每个测试都像是在一个新的隐身标签页中启动，因此所有
    cookies 和存储都会被清除。这有助于减少测试代码的重复，并在执行时间上提供了显著的节约，因为你不需要在测试之间清除浏览器状态来使它们相互独立。
- en: This also enables one more extremely useful feature – user roles, that lets
    you save the state of different logged-in users and switch between them any time
    in any test (https://devexpress.github.io/testcafe/documentation/guides/advanced-guides/authentication.html).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这还使一个极其有用的功能成为可能——用户角色，它允许你保存不同登录用户的状态，并在任何测试中随时切换（https://devexpress.github.io/testcafe/documentation/guides/advanced-guides/authentication.html）。
- en: Built-in automatic waiting is yet another killer feature introduced in TestCafe.
    What it means is that TestCafe will automatically wait for all XHR requests and
    page loads to be finished before running each test action, so you no longer need
    to write custom waiters in your code.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 内置的自动等待是 TestCafe 中引入的另一个杀手级功能。这意味着 TestCafe 将在运行每个测试动作之前自动等待所有 XHR 请求和页面加载完成，因此你不再需要在代码中编写自定义等待器。
- en: 'Let''s compare TestCafe and Selenium side by side:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们并排比较 TestCafe 和 Selenium：
- en: '![Figure 1.0 - Table comparing TestCafe and Selenium'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.0 - 比较TestCafe和Selenium的表格'
- en: '](img/Figure_1.00_B16280.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.00_B16280.jpg]'
- en: Figure 1.0 - Table comparing TestCafe and Selenium
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.0 - 比较 TestCafe 和 Selenium 的表格
- en: To sum up what we have just learned, Selenium definitely provides an advantage
    with the number of supported programming languages, but needs a lot of tweaking
    and extending to work properly. On the other hand, TestCafe only supports JavaScript,
    TypeScript and CoffeeScript but offers much more comfort and ease of usage right
    out of the box.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 总结我们刚刚学到的内容，Selenium 在支持编程语言的数量上确实提供了优势，但需要大量的调整和扩展才能正常工作。另一方面，TestCafe 只支持
    JavaScript、TypeScript 和 CoffeeScript，但提供了更多的舒适性和易用性。
- en: Let's proceed with our exploration and shed some light on the test project that
    we will be developing throughout the following chapters.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续我们的探索，并对我们在以下章节中将开发的测试项目进行一些说明。
- en: Reviewing the test project we will build
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查我们将构建的测试项目
- en: As we have got acquainted with the main features of TestCafe, let's think about
    the best way we can leverage this testing framework for our practical needs.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经熟悉了 TestCafe 的主要功能，让我们考虑如何最好地利用这个测试框架来满足我们的实际需求。
- en: To make a set of tests that are reusable and demonstrate the main concepts of
    TestCafe, we will need an application that can be tested. It should be accessible
    online and should have a number of standard features, such as logging in, logging
    out, creating a new entity, displaying an entity, updating an entity, and deleting
    an entity.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作一组可重用并展示 TestCafe 主要概念的测试，我们需要一个可测试的应用程序。它应该在线可访问，并应具有一些标准功能，例如登录、登出、创建新实体、显示实体、更新实体和删除实体。
- en: The application we will use to do this is Redmine.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Redmine 应用程序来完成这项工作。
- en: Selecting a test application
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择测试应用程序
- en: 'All of the previously mentioned features are present in any bug tracking system.
    However, one of the few applications that is publicly available and free to use
    is Redmine ([http://demo.redmine.org/](http://demo.redmine.org/)):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的上述功能都存在于任何缺陷跟踪系统中。然而，少数公开可用且免费使用的应用程序之一是 Redmine ([http://demo.redmine.org/](http://demo.redmine.org/))：
- en: '![Figure 1.1 – Redmine demo web portal'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – Redmine 示例网络门户'
- en: '](img/Figure_1.01_B16280.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.01_B16280.jpg]'
- en: Figure 1.2 – Redmine demo web portal
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – Redmine 示例网络门户
- en: Figure 1.1 – Redmine demo web portal
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – Redmine 示例网络门户
- en: Redmine is a web-based project management and issue-tracking tool released on
    June 25, 2006 and was written in Ruby on Rails. It is open sourced under the terms
    of the **GNU General Public License (GPL) v2**. Some of the features that Redmine
    supports include issue management (create, read, update, and delete), version
    management, document management, news, files, directories, calendars, charts,
    roadmaps, activity view, and member roles and permission management.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Redmine 是一个基于 Web 的项目管理与问题跟踪工具，于 2006 年 6 月 25 日发布，是用 Ruby on Rails 编写的。它根据**GNU
    通用公共许可证 (GPL) v2**条款开源。Redmine 支持的一些功能包括问题管理（创建、读取、更新和删除）、版本管理、文档管理、新闻、文件、目录、日历、图表、路线图、活动视图以及成员角色和权限管理。
- en: That's an impressive list, isn't it? Also, it is cross-platform, cross-database,
    and supports 49 languages. Redmine perfectly combines issue tracking and project
    management functionality, and can be considered a leading project management solution
    in the open source world.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一份令人印象深刻的列表，不是吗？它还支持跨平台、跨数据库，并支持 49 种语言。Redmine 完美地结合了问题跟踪和项目管理功能，可以被认为是开源世界中的领先项目管理解决方案。
- en: Writing test cases
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写测试用例
- en: As we now have a web application for testing, let's get familiar with it and
    write some test cases. We don't have to execute these tests right now, but we
    will need them when writing automated tests later on in the book.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们现在有一个用于测试的 Web 应用程序，让我们熟悉它并编写一些测试用例。我们目前不需要执行这些测试，但稍后编写自动化测试时我们将需要它们。
- en: 'Here is what the Redmine login page looks like:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Redmine 登录页面的样子：
- en: '![Figure 1.2 – Redmine login page'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.2 – Redmine 登录页面](img/Figure_1.02_B16280.jpg)'
- en: '](img/Figure_1.02_B16280.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_1.02_B16280.jpg)'
- en: Figure 1.2 – Redmine login page
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – Redmine 登录页面
- en: 'Let''s break down the actions that we''ll need to perform for logging in:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解我们需要执行登录操作的动作：
- en: Click on the **Sign in** link.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**登录**链接。
- en: Type in the login details for the **Login** input.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**登录**输入框中输入登录详情。
- en: Type in the password for the **Password** input.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**密码**输入框中输入密码。
- en: Click on the **Login** button.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**登录**按钮。
- en: 'Here is what we''ll see after logging in successfully:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 登录成功后我们会看到如下内容：
- en: '![Figure 1.3 – The Redmine logged in page](img/Figure_1.03_B16280.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3 – Redmine 登录后的页面](img/Figure_1.03_B16280.jpg)'
- en: Figure 1.4 – The Redmine logged in page
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – Redmine 登录后的页面
- en: Figure 1.3 – The Redmine logged-in page
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – Redmine 登录后的页面
- en: To confirm that you have logged in properly, check whether the username is displayed
    in the top-right corner of the page. That's it – our first test case is ready!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确认您已正确登录，请检查用户名是否显示在页面右上角。就这样 – 我们的第一个测试用例准备好了！
- en: But even before logging in, we will need to create a new test user. We will
    be doing this for each new test run – that's OK, however, as all users are wiped
    out from the Redmine demo portal on a regular basis. To stay on the safe side,
    for the test user's email, we will use one of the temporary email services – `test_user_testcafe_poc{randomDigits}@sharklasers.com`
    – and password – `test_user_testcafe_poc`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 但甚至在登录之前，我们还需要创建一个新的测试用户。我们将为每次新的测试运行做这件事 – 这是可以接受的，因为 Redmine 示例门户会定期清除所有用户。为了安全起见，对于测试用户的电子邮件，我们将使用临时电子邮件服务之一
    – `test_user_testcafe_poc{随机数字}@sharklasers.com` – 以及密码 – `test_user_testcafe_poc`。
- en: To continue writing test cases in a more structured way, let's break them down
    into blocks one by one.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更结构化地编写测试用例，让我们逐一将它们分解成块。
- en: Creating a new user
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新用户
- en: 'Follow these steps to create a new user:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建新用户：
- en: Click on the **Register** link.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**注册**链接。
- en: Fill in the **Login** field.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**登录**字段。
- en: Fill in the **Password** field.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**密码**字段。
- en: Fill in the **Confirmation** field.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**确认**字段。
- en: Fill in the **First name** field.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**名字**字段。
- en: Fill in the **Last name** field.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**姓氏**字段。
- en: Fill in the **Email** field.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**电子邮件**字段。
- en: Click on the **Submit** button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提交**按钮。
- en: 'The expected result is the **Your account has been activated. You can now log
    in.** notification, which should be displayed as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是**您的账户已激活。您现在可以登录。**通知，应如下显示：
- en: '![Figure 1.4 – Account activated'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 – 账户已激活](img/Figure_1.04_B16280.jpg)'
- en: '](img/Figure_1.04_B16280.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_1.04_B16280.jpg)'
- en: Figure 1.4 – Account activated
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 账户已激活
- en: Logging in
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 登录
- en: 'Follow these steps to log in:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行登录：
- en: Click on the **Sign in** link.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**登录**链接。
- en: Fill in the **Login** field.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**登录**字段。
- en: Fill in the **Password** field.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**密码**字段。
- en: Click on the **Login** button.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**登录**按钮。
- en: 'The expected result is that the username should be displayed in the top-right
    corner of the page:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是用户名应该在页面右上角显示：
- en: '![Figure 1.5 – Username displayed](img/Figure_1.05_B16280.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 1.5 – 显示用户名](img/Figure_1.05_B16280.jpg)'
- en: Figure 1.5 – Username displayed
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 显示用户名
- en: Logging out
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注销
- en: 'Follow these steps to log out:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤注销：
- en: Log in.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Click on the **Sign out** button.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**注销**按钮。
- en: 'The expected result is that the sign-in link should be displayed in the top-right
    corner of the page:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是登录链接应该显示在页面右上角：
- en: '![Figure 1.6 – Sign-in link displayed'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.6 – 显示登录链接'
- en: '](img/Figure_1.06_B16280.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.06_B16280.jpg)'
- en: Figure 1.6 – Sign-in link displayed
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 显示登录链接
- en: Creating a new project
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新项目
- en: 'Follow these steps to create a new project:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建新项目：
- en: Log in.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Click on the **Projects** link in the top panel.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the **New project** link.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建项目**链接。
- en: Fill in the **Name** field.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**名称**字段。
- en: Click on the **Create** button.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮。
- en: 'The expected result is the **Successful creation.** notification displayed
    at the top:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是**成功创建**的通知显示在顶部：
- en: '![Figure 1.7 – The Successful creation. notification displayed'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.7 – 成功创建。通知显示'
- en: '](img/Figure_1.07_B16280.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.07_B16280.jpg)'
- en: Figure 1.7 – The Successful creation. notification displayed
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7 – 成功创建。通知显示
- en: Creating a new issue
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新问题
- en: 'Follow these steps to create a new issue:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建新问题：
- en: Log in.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Click on the **Projects** link in the top panel.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **New issue** link.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新问题**链接。
- en: Fill in the **Subject** field.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**名称**字段。
- en: Fill in the **Description** field.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**描述**字段。
- en: Set **Priority** to **High**.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**优先级**设置为**高**。
- en: Click on the **Create** button.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮。
- en: 'The expected result is that the **Issue created.** notification should be displayed:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是**问题创建成功**的通知应该显示：
- en: '![Figure 1.8 – The Issue created. notification displayed'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.8 – 已创建的问题。通知显示'
- en: '](img/Figure_1.08_B16280.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.08_B16280.jpg)'
- en: Figure 1.8 – The Issue created. notification displayed
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8 – 显示问题创建成功。通知
- en: Verifying that the issue is displayed on a project page
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证问题是否显示在项目页面上
- en: 'Follow these steps to verify that the issue is displayed on a project page:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤验证问题是否显示在项目页面上：
- en: Log in.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Create a new issue.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新问题。
- en: Click on the **Projects** link in the top panel.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Issues** link.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**问题**链接。
- en: 'The expected result is that the issue link should be displayed:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是问题链接应该显示：
- en: '![Figure 1.9 – Issue link displayed'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.9 – 显示问题链接'
- en: '](img/Figure_1.09_B16280.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.09_B16280.jpg)'
- en: Figure 1.9 – Issue link displayed
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.9 – 显示问题链接
- en: Updating the issue
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新问题
- en: 'Follow these steps to update the issue:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更新问题：
- en: Log in.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Create a new issue.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新问题。
- en: Click on the **Projects** link in the top panel.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Issues** link.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**问题**链接。
- en: Click on the issue link.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击问题链接。
- en: Click on the **Edit** link.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑**链接。
- en: Clear the **Subject** field and fill it in with a new subject.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除**主题**字段并填写新的主题。
- en: Set **Priority** to **Normal**.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**优先级**设置为**正常**。
- en: Click on the **Submit** button.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提交**按钮。
- en: 'The expected result is that the **Successful update.** notification should
    be displayed:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是**成功更新**的通知应该显示：
- en: '![Figure 1.10 – The Successful update. notification displayed'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.10 – 成功更新。通知显示'
- en: '](img/Figure_1.10_B16280.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.10_B16280.jpg)'
- en: Figure 1.10 – The Successful update. notification displayed
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.10 – 成功更新。通知显示
- en: Verifying that the updated issue is displayed on a project page
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证更新后的问题是否显示在项目页面上
- en: 'Follow these steps to verify that the updated issue is displayed on a project
    page:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤验证更新后的问题是否显示在项目页面上：
- en: Log in.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Create a new issue.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新问题。
- en: Click on the **Projects** link in the top panel.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Issues** link.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**问题**链接。
- en: 'The expected result is that the updated issue link should be displayed:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是更新后的问题链接应该显示：
- en: '![Figure 1.11 – Updated issue link displayed'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.11 – 显示更新后的问题链接'
- en: '](img/Figure_1.11_B16280.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.11_B16280.jpg)'
- en: Figure 1.11 – Updated issue link displayed
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.11 – 更新后的问题链接显示
- en: Searching for the issue
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索问题
- en: 'Follow these steps to search for the issue:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤搜索问题：
- en: Log in.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Create a new issue.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新问题。
- en: Open the **Search** page.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**搜索**页面。
- en: Type the issue's subject into the **Search** field.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**字段中输入问题的主题。
- en: Click on the **Submit** button.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提交**按钮。
- en: 'The expected result is that the issue link should be displayed:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是问题链接应显示：
- en: '![Figure 1.12 – Issue link displayed'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.12 – 显示问题链接'
- en: '](img/Figure_1.12_B16280.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.12_B16280.jpg)'
- en: Figure 1.12 – Issue link displayed
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 显示问题链接
- en: Deleting the issue
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除问题
- en: 'Follow these steps to delete the issue:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤删除问题：
- en: Log in.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Create a new issue.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新问题。
- en: Click on the **Projects** link in the top panel.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Issues** link.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**问题**链接。
- en: Click on the issue link.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击问题链接。
- en: Click on the **Delete** link.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**删除**链接。
- en: Confirm the deletion in the browser modal window.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器模态窗口中确认删除。
- en: 'The expected result is that the **No data to display** notification should
    be displayed:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是应显示**无数据可显示**的通知：
- en: '![Figure 1.13 – The No data to display notification displayed'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.13 – 显示无数据可显示的通知'
- en: '](img/Figure_1.13_B16280.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.13_B16280.jpg)'
- en: Figure 1.13 – The No data to display notification displayed
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 显示无数据可显示的通知
- en: Uploading a file
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传文件
- en: 'Follow these steps to upload a file:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤上传文件：
- en: Log in.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Click on the **Projects** link in the top panel.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Files** link.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文件**链接。
- en: Click on the **New** file link.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建**文件链接。
- en: Set the path to a file.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置文件的路径。
- en: Click on the **Add** button.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮。
- en: 'The expected result is that a link to the file and the MD5 checksum should
    be displayed:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是文件链接和 MD5 校验和应显示：
- en: '![Figure 1.14 – Link to the file and the MD5 checksum displayed'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.14 – 显示文件链接和 MD5 校验和'
- en: '](img/Figure_1.14_B16280.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.14_B16280.jpg)'
- en: Figure 1.14 – Link to the file and the MD5 checksum displayed
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14 – 显示文件链接和 MD5 校验和
- en: Deleting the file
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除文件
- en: 'Follow these steps to delete the file:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤删除文件：
- en: Log in.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录。
- en: Upload a new file.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传新文件。
- en: Click on the **Projects** link in the top panel.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部面板中的**项目**链接。
- en: Click on the project link.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目链接。
- en: Click on the **Files** link.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文件**链接。
- en: Click on the trash bin icon.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击垃圾桶图标。
- en: Confirm the deletion in the browser modal window.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器模态窗口中确认删除。
- en: 'The expected result is that a link to the file and the MD5 checksum should
    not be displayed:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 预期结果是文件链接和 MD5 校验和不应显示：
- en: '![Figure 1.15 – Link to the file and MD5 checksum not displayed'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.15 – 文件链接和 MD5 校验和未显示'
- en: '](img/Figure_1.15_B16280.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.15_B16280.jpg)'
- en: Figure 1.15 – Link to the file and MD5 checksum not displayed
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15 – 文件链接和 MD5 校验和未显示
- en: While this test suite is relatively simple to build, it allows showcasing some
    of the most prominent features of TestCafe. Additionally, it demonstrates running
    the tests against a free and simple-to-use website, and it does not require you
    to build and deploy you own servers or backend services.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个测试套件相对简单构建，但它展示了 TestCafe 的一些最显著特性。此外，它演示了在免费且易于使用的网站上运行测试，并且不需要你构建和部署自己的服务器或后端服务。
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we reviewed what TestCafe is and its main features. While comparing
    TestCafe with its old and canonical rival – Selenium – we observed the strong
    and weak points of both frameworks. The main difference between Selenium and TestCafe
    is that Selenium is more heavyweight as it runs code through the Selenium server
    by interacting with the browser process itself, whereas TestCafe inserts a proxy
    in between that rewrites each URL and injects the test scripts into the browser.
    It runs as a Node.js process and can perform operations in both Node.js and browser
    contexts. The primary goal of TestCafe is to provide a modern tool that mitigates
    main test automation pain points and provides a convenient way to set up, maintain,
    and create new tests.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了 TestCafe 是什么以及其主要特性。在比较 TestCafe 与其旧的和经典的竞争对手 – Selenium – 时，我们观察了两个框架的优缺点。Selenium
    与 TestCafe 之间的主要区别在于 Selenium 更为重量级，因为它通过与浏览器进程本身交互，通过 Selenium 服务器运行代码，而 TestCafe
    在其中插入了一个代理，该代理重写每个 URL 并将测试脚本注入浏览器。它作为一个 Node.js 进程运行，可以在 Node.js 和浏览器环境中执行操作。TestCafe
    的主要目标是提供一个现代工具，以减轻主要的测试自动化痛点，并提供一种方便的方式来设置、维护和创建新的测试。
- en: We also went through the testing project and came up with a plan for what test
    cases should be covered with the upcoming automation.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也经历了测试项目，并制定了一个计划，即针对即将到来的自动化，哪些测试用例应该被覆盖。
- en: In the next chapter, we will dive deeper and see how TestCafe operates under
    the hood, including what API it has and how built-in wait functions can help us
    to transform our test cases into a fast and reliable suite of automated tests.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更深入地探讨，看看TestCafe在底层是如何运行的，包括它有哪些API以及内置的等待函数如何帮助我们将测试用例转换成快速且可靠的自动化测试套件。
