- en: Chapter 10. PHP Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章。PHP 项目
- en: '***PHP** is a scripting language for developing websites and web applications.
    PHP (which stands for **Personal Home Page**) is used to compile the source code
    on the server side the moment the script is called from the client and send the
    result to the browser.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '***PHP** 是一种用于开发网站和 Web 应用的脚本语言。PHP（代表 **Personal Home Page**）用于在客户端调用脚本时在服务器端编译源代码，并将结果发送到浏览器。*'
- en: '*PHP is used for small to large websites and web applications. Large frameworks,
    content management systems, and Webshops (ZendFramework, Symphony, XT-Commerce,
    WordPress, and many more) are all developed using PHP. Although PHP is also very
    useful for JavaScript AJAX web applications that need to send, receive, and persist
    data through a web server.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*PHP 用于从小型到大型网站和 Web 应用。大型框架、内容管理系统和网店（如 ZendFramework、Symphony、XT-Commerce、WordPress
    等）都是使用 PHP 开发的。尽管 PHP 对于需要通过 Web 服务器发送、接收和持久化数据的 JavaScript AJAX Web 应用也非常有用。*'
- en: '*In this chapter, you will take a closer look at PHP and how you can develop
    PHP easily with Aptana Studio 3.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，您将更深入地了解 PHP 以及如何使用 Aptana Studio 3 轻松开发 PHP。*'
- en: 'In this chapter you will cover:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将涵盖：
- en: Creating and configuring PHP projects
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和配置 PHP 项目
- en: Configuring existing projects as PHP projects
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将现有项目配置为 PHP 项目
- en: Working with external PHP libraries and including them
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与外部 PHP 库一起工作并包含它们
- en: Using PHPDoc to document projects
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PHPDoc 记录项目
- en: Using and configuring the PHP code formatter
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用和配置 PHP 代码格式化器
- en: Creating and configuring PHP projects
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和配置 PHP 项目
- en: Editing single PHP files is very easy. If you have to edit one or more PHP files,
    you can just drag-and-drop the files into Aptana Studio 3 Editor. Aptana Studio
    opens the file automatically in the PHP Editor; this provides syntax highlight,
    code completion, and much more, allowing you to begin editing them straight away.
    However, you will only know the full power of Aptana Studio PHP Editor when you
    edit your PHP files as a PHP-natured, Aptana Studio 3 project.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑单个 PHP 文件非常简单。如果您必须编辑一个或多个 PHP 文件，只需将文件拖放到 Aptana Studio 3 编辑器中。Aptana Studio
    会自动在 PHP 编辑器中打开文件；这提供了语法高亮、代码补全等功能，让您可以立即开始编辑。然而，您只有在将 PHP 文件作为 PHP 本质、Aptana
    Studio 3 项目编辑时，才能完全了解 Aptana Studio PHP 编辑器的强大功能。
- en: Time for action – creating a PHP project
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践 – 创建 PHP 项目
- en: 'A PHP project can be quickly created by following the next few steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下几个步骤快速创建 PHP 项目：
- en: Select the menu entry from **File** | **New** (or just press the shortcut key
    *Alt* + *Shift* + *N*) and then select PHP Project.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **文件** | **新建**（或直接按快捷键 *Alt* + *Shift* + *N*）选择菜单项，然后选择 PHP 项目。
- en: In the opening window, which can be seen in the following screenshot, enter
    the Project name and select the location where the project source code should
    be stored:![Time for action – creating a PHP project](img/8246_10_01.jpg)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下截图所示的打开窗口中，输入项目名称并选择项目源代码应存储的位置：![动手实践 – 创建 PHP 项目](img/8246_10_01.jpg)
- en: After that, you have to choose the compatibility of your PHP project. This means
    you'll choose the PHP version that will finally be used for your web application.
    When Aptana Studio knows the related PHP version of your project, it is able to
    adjust the syntax highlighting, code assist, and error detection (as a result
    of parsing the PHP files). For example, if you select PHP 4 as the version and
    have PHP 5 code, you will see error markers in your code for the PHP 5 content.
    The Content Assist feature will not work for namespaces and such, and also, you
    will not get the suggested Content Assist feature for classes, functions, and
    constants as they are only defined in the PHP 5 API. So identify the requirements
    for your web applications and select the PHP version you need.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您必须选择 PHP 项目的兼容性。这意味着您将选择最终用于您的 Web 应用的 PHP 版本。当 Aptana Studio 知道您项目的相关 PHP
    版本时，它能够调整语法高亮、代码辅助和错误检测（通过解析 PHP 文件）。例如，如果您选择 PHP 4 作为版本，并且有 PHP 5 代码，您将在代码中看到
    PHP 5 内容的错误标记。内容辅助功能将不会对命名空间等起作用，并且您也不会获得类、函数和常量的建议内容辅助功能，因为它们仅在 PHP 5 API 中定义。因此，确定您的
    Web 应用的需求，并选择您需要的 PHP 版本。
- en: Finally, you have to click the **Finish** button.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您必须单击 **完成** 按钮。
- en: Alternatively, if you want to work with an existing source code base, you can
    navigate to the **Project Explorer** view and search for the source code directory
    within the **Local Filesystem** node.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，如果你想使用现有的源代码库，你可以导航到**项目浏览器**视图，并在**本地文件系统**节点中搜索源代码目录。
- en: If you have located the source code directory, right-click on this directory
    and select the entry **Promote to Project...**, as shown in the following screenshot:![Time
    for action – creating a PHP project](img/8246_10_02.jpg)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你已定位到源代码目录，右键单击此目录并选择**提升为项目...**选项，如下面的截图所示：![操作时间 – 创建PHP项目](img/8246_10_02.jpg)
- en: You have to select the project type with this alternative method, therefore
    select the **Project Type** entry as **PHP-Primary**. As the secondary **Project
    Type** you can choose **Web,** as an example, but make sure that the PHP entry
    is marked as primary, as shown in the following screenshot:![Time for action –
    creating a PHP project](img/8246_10_03.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须使用这种方法选择项目类型，因此选择**项目类型**选项为**PHP-主要**。作为二级**项目类型**，你可以选择**Web**，例如，但请确保PHP条目被标记为主要，如下面的截图所示：![操作时间
    – 创建PHP项目](img/8246_10_03.jpg)
- en: Tip
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Project nature**'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**项目性质**'
- en: When you'll take a look at the projects within Project Explorer, you may see
    on some project icons in the top-right corner, a small symbol that will show you
    the primary nature (or named type) of these projects. A blue **P** shows you that
    this is a PHP-natured project.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你在项目浏览器中查看项目时，你可能会在右上角的一些项目图标上看到一个小的符号，这个符号会显示这些项目的首要性质（或命名类型）。一个蓝色的**P**表示这是一个PHP性质的项目。
- en: Using both these methods, you should finally receive a PHP project which you'll
    use as a base for the rest of this chapter.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这两种方法，你最终应该会收到一个PHP项目，你将使用它作为本章其余部分的基础。
- en: '*What just happened?*'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You have just created a PHP-natured project. This project provides you with
    the specific functions for developing PHP web applications. This means that you
    also have the ability to select the used version of PHP and therefore adjust some
    functionalities, such as the syntax highlighting, code assist, and error detection
    (as a result of parsing the PHP files).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚创建了一个PHP性质的项目。该项目为你提供了开发PHP网络应用程序的特定功能。这意味着你也有能力选择使用的PHP版本，因此调整一些功能，例如语法高亮、代码辅助和错误检测（通过解析PHP文件的结果）。
- en: You have also seen that you're able to combine the nature of your PHP project
    with a web project, this will allow you to specialize the Aptana Studio project
    to meet the requirements of your project.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你还看到你可以将你的PHP项目的性质与Web项目结合起来，这将允许你将Aptana Studio项目专门化以满足你的项目需求。
- en: Configuring a PHP project
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置PHP项目
- en: But what do you have to do when you have an existing project that you want to
    configure for PHP development? No problem, you can configure each project as you
    need. The next *Time for action* section will show you how you can adjust your
    PHP project.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 但当你有一个现有的项目，你想要为PHP开发配置时，你应该怎么做？没问题，你可以根据需要配置每个项目。接下来的*操作时间*部分将向你展示如何调整你的PHP项目。
- en: Time for action – configuring a PHP project
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 – 配置PHP项目
- en: 'For this section, you''ll start with a project that doesn''t already have a
    nature assigned to it. Now we will configure this project as a PHP project by
    using the following steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本节，你将从没有分配性质的项目开始。现在我们将使用以下步骤将此项目配置为PHP项目：
- en: Navigate to the **Project Explorer** view, right-click on the project that you
    want to configure and select the **Properties** entry.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**项目浏览器**视图，右键单击你想要配置的项目，并选择**属性**选项。
- en: Within the **Properties** window which will appear, you can configure some PHP-relevant
    properties that you wish to look at. To the left of the window, you will find
    a list of property pages. You will find the content of each property page in the
    larger right-hand side of the window area, as shown in the following screenshot:![Time
    for action – configuring a PHP project](img/8246_10_04.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的**属性**窗口中，你可以配置一些你希望查看的与PHP相关的属性。在窗口的左侧，你会找到一个属性页面的列表。你可以在窗口右侧更大的区域中找到每个属性页的内容，如下面的截图所示：![操作时间
    – 配置PHP项目](img/8246_10_04.jpg)
- en: You can start scrolling down from the top page-by-page, starting from the **Builders**
    page. You will find the Builders for your project on this page. If you'll add
    the web project nature here, the **Studio Unified Builder** option will appear
    in the list. For a selected PHP project nature, the PHP builder is added to this
    list, so you don't have to select these entries by hand. This happens automatically
    if you select or deselect a project nature. The **Builders** page is shown in
    the following screenshot:![Time for action – configuring a PHP project](img/8246_10_05.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以从顶部开始逐页滚动，从**构建器**页面开始。你将在该页面上找到你的项目的构建器。如果你在这里添加网络项目性质，**Studio统一构建器**选项将出现在列表中。对于选定的PHP项目性质，PHP构建器被添加到该列表中，因此你不需要手动选择这些条目。如果你选择或取消选择项目性质，这会自动发生。**构建器**页面可以在以下屏幕截图中看到：![配置PHP项目的时间](img/8246_10_05.jpg)
- en: The next relevant section is the **Formatter** page. Here you will take a look
    at how you can select a custom formatter. Also, later in this chapter, we will
    look at how you can create your own formatter. In the first step to selecting
    your own formatter, you have to set the **Enable project specific settings** checkbox.
    After this happens, the fields shown in the **Formatter** page in the following
    screenshot lose their read-only state, and you will then be able to select a formatter
    profile:![Time for action – configuring a PHP project](img/8246_10_06.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个相关的部分是**格式化器**页面。在这里，你将了解如何选择一个自定义格式化器。在本章的后面，我们将探讨如何创建你自己的格式化器。在选择你自己的格式化器的第一步中，你必须勾选**启用项目特定设置**复选框。之后，以下屏幕截图中**格式化器**页面显示的字段将失去只读状态，然后你将能够选择一个格式化器配置文件：![配置PHP项目的时间](img/8246_10_06.jpg)
- en: The **PHP Buildpath** page allows you to include libraries from another project
    in your workspace or even from an external directory. Examples of how you can
    use this feature will be seen later in this chapter. The **PHP Buildpath** page
    is covered in the following screenshot:![Time for action – configuring a PHP project](img/8246_10_07.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**PHP构建路径**页面允许你在你的工作空间中包含来自另一个项目的库，甚至是从外部目录中。你将在这个章节的后面看到如何使用此功能的示例。**PHP构建路径**页面可以在以下屏幕截图中看到：![配置PHP项目的时间](img/8246_10_07.jpg)'
- en: The **PHP Development** section allows you to change the compatibility of your
    project. Just choose the required PHP version. This means that, as you learned
    in the previous *Time for action* section, you need to choose the PHP version
    that will finally be used for your web application. When Aptana Studio knows the
    related PHP version of your project, it is able to adjust the syntax highlighting,
    code assist, and error detection (as a result of parsing the PHP files). The **PHP
    Development** section can be seen in the following screenshot:![Time for action
    – configuring a PHP project](img/8246_10_08.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**PHP开发**部分允许你更改项目的兼容性。只需选择所需的PHP版本。这意味着，正如你在前面的*操作时间*部分所学到的，你需要选择最终将用于你的网络应用程序的PHP版本。当Aptana
    Studio知道你的项目的相关PHP版本时，它能够调整语法高亮、代码辅助和错误检测（这是解析PHP文件的结果）。**PHP开发**部分可以在以下屏幕截图中看到：![配置PHP项目的时间](img/8246_10_08.jpg)'
- en: The next and last relevant section is the **Project Natures** section. This
    section allows you to change the nature of a project. Just check the checkbox
    of the natures that your project should support. By selecting a nature and pressing
    the **Make Primary** button, you can switch the primary nature of your project.
    As you wish to develop a web application, you'll need to choose **PHP** as the
    primary and **Web** as the additional nature. The **Project Natures** section
    can be seen in the following screenshot:![Time for action – configuring a PHP
    project](img/8246_10_09.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个和最后一个相关的部分是**项目性质**部分。这个部分允许你更改项目的性质。只需勾选你的项目应支持的性质的复选框。通过选择一个性质并按下**设为首选**按钮，你可以切换项目的首选性质。由于你打算开发一个网络应用程序，你需要选择**PHP**作为首选性质，并将**Web**作为附加性质。**项目性质**部分可以在以下屏幕截图中看到：![配置PHP项目的时间](img/8246_10_09.jpg)
- en: '*What just happened?*'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You have chosen an existing project that didn't have a project nature assigned,
    with the aim of configuring it for PHP Development. In this *Time for action*
    section, you have seen where the Project Builders are selected, where you can
    select a project-specific code formatter, and how you can include additional libraries
    or even an external directory, from your workspace. In addition to this, you also
    learned how to change the project nature or the required PHP version.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择了一个没有分配项目性质的现有项目，目的是将其配置为PHP开发。在这个*行动时间*部分，你看到了如何选择项目构建器，在哪里可以选择特定于项目的代码格式化程序，以及如何从你的工作空间中包含额外的库或外部目录。除此之外，你还学会了如何更改项目性质或所需的PHP版本。
- en: Using PHPDoc within PHP Projects
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在PHP项目中使用PHPDoc
- en: PHPDoc is the short name for the phpDocumentor which is a tool for the automatic
    generation of project documentations. You can get information on the phpDocumentor
    and much more on it's website, [http://www.phpdoc.org/](http://www.phpdoc.org/).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: PHPDoc是phpDocumentor的简称，它是一个用于自动生成项目文档的工具。你可以在其网站上获取有关phpDocumentor及其更多信息，[http://www.phpdoc.org/](http://www.phpdoc.org/)。
- en: PHPDoc provides you with a convention of structure and fixed attributes, with
    which you can create source code comments for files, classes, functions, and attributes.
    These specified attributes from the comments help define the information (such
    as types and descriptions)in the source code files, in a standardized way and
    are optimized for a further processing.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: PHPDoc提供了一种结构和固定属性的约定，通过它可以创建文件、类、函数和属性的源代码注释。这些注释中指定的属性有助于以标准化的方式定义源代码文件中的信息（如类型和描述），并针对进一步处理进行了优化。
- en: But why is the usage of PHPDoc so important?
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 但为什么PHPDoc的使用如此重要？
- en: Firstly, every developer should know that to document the source code itself
    is very important. If you have to extend a code from another developer, it's sometimes
    not so easy to understand why the developer has coded certain parts in his code.
    But it may also happen that you have to extend your own code, which you had coded
    in the past, and you don't remember why you have done some things the way you
    did. At least at this moment you know it, and it is thus considered good practice
    to document the code.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，每个开发者都应该知道，对源代码本身进行文档化非常重要。如果你必须扩展另一个开发者的代码，有时并不容易理解开发者为什么在他的代码中编写了某些部分。但有时也可能发生，你必须扩展你过去编写的自己的代码，而你并不记得为什么你以这种方式做了某些事情。至少在这个时候你知道了，因此将代码进行文档化被认为是良好的实践。
- en: But that's not all. If you always use a well-formed and valid PHPDoc style,
    you can get much more out of your code. For example, you're able to automatically
    create a complete HTML documentation page with the phpDocumentor. However, the
    important point for us at this moment is that Aptana Studio reads out our PHPDoc
    comments and feeds the information into Content Assist.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 但这还不是全部。如果你总是使用良好格式化和有效的PHPDoc样式，你可以从你的代码中获得更多。例如，你可以使用phpDocumentor自动创建一个完整的HTML文档页面。然而，对我们来说，此刻的重要点是Aptana
    Studio会读取我们的PHPDoc注释并将信息输入到内容辅助中。
- en: With this ability, you can to create an auto completion for all your classes,
    constants, and functions while you are writing it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这种能力，你可以在编写代码的同时为所有的类、常量和函数创建自动完成。
- en: Using the predefined PHPDoc Comments
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用预定义的PHPDoc注释
- en: Aptana Studio 3 comes with a few predefined PHPDoc Comments, which can be included
    from the PHP Bundle snippets. These can be used in the same way as we mentioned
    earlier in this chapter, with the help of the Content Assist feature. The short
    *Time for action* section that follows will cover this in more detail.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Aptana Studio 3附带一些预定义的PHPDoc注释，可以从PHP Bundle片段中包含。这些可以像我们在本章前面提到的那样使用，借助内容辅助功能。接下来的简短*行动时间*部分将更详细地介绍这一点。
- en: Time for action – using PHPDoc Comments from the PHP Bundle
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 使用PHP Bundle中的PHPDoc注释
- en: Open a PHP file from a PHP-natured project.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从PHP性质的项目中打开一个PHP文件。
- en: Place the cursor on an empty line from where you want to code a function or
    method.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在你想要编写函数或方法的空行上。
- en: Type the chars `doc` and trigger the Content Assist feature by pressing *Ctrl*
    + Space bar. You should get results similar to the ones shown in the following
    screenshot:![Time for action – using PHPDoc Comments from the PHP Bundle](img/8246_10_20.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入字符`doc`并按*Ctrl* + 空格键触发内容辅助功能。你应该得到类似于以下截图的结果：![行动时间 – 使用PHP Bundle中的PHPDoc注释](img/8246_10_20.jpg)
- en: The Content Assist feature then suggests all snippets with the trigger that
    begins with `doc`, and you're able to select the required snippet from the list.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内容辅助功能随后建议所有以`doc`开头的触发代码片段，您可以从列表中选择所需的代码片段。
- en: You can select the **Function** entry and insert it by pressing *Enter*.![Time
    for action – using PHPDoc Comments from the PHP Bundle](img/8246_10_21.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择**函数**条目，并通过按*Enter*键插入它。![行动时间 – 使用PHP Bundle中的PHPDoc注释](img/8246_10_21.jpg)
- en: As you can see in the previous screenshot, the Content Assist feature inserts
    a complete function body introduced by the PHPDoc Function Comment. After the
    snippet is inserted, the function name is displayed within a border (as you can
    see in the preceding screenshot). This shows you that this name can be edited
    directly, simply begin to enter the name of your new function. If you're ready,
    you can use the *Tab* key to jump to the next position where the snippet allows
    you to adjust it. So if this is the case, you can jump to each parameter, namely
    the function description in the comment, the return value, the author name, and
    finally into the function body step-by- step, where you can immediately begin
    to code the function itself. Your final code should now look similar to the following
    screenshot:![Time for action – using PHPDoc Comments from the PHP Bundle](img/8246_10_22.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前一张截图所示，内容辅助功能插入了一个由PHPDoc函数注释引入的完整函数体。代码片段插入后，函数名在边框内显示（如前一张截图所示）。这表明该名称可以直接编辑，只需开始输入您新函数的名称。如果您准备好了，可以使用*Tab*键跳转到代码片段允许您调整的下一个位置。所以如果这种情况，您可以跳转到每个参数，即注释中的函数描述、返回值、作者姓名，最后进入函数体，逐步进行，在那里您可以立即开始编写函数本身。您最终的代码现在应该类似于以下截图：![行动时间
    – 使用PHP Bundle中的PHPDoc注释](img/8246_10_22.jpg)
- en: After you have saved your file, place your cursor a few lines below the new
    function and begin to type the function name. As you can see, the Content Assist
    feature has already indexed the function and now provides you with the ability
    to insert it easily.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的文件后，将光标放在新函数下方几行处，并开始输入函数名。如您所见，内容辅助功能已经索引了该函数，现在为您提供轻松插入它的能力。
- en: You can read a lot of information from the suggested rows of the Content Assist
    feature. First, there is an icon that shows you the type of suggestion. Types
    could be functions, classes, snippets, and so on. Also, the location where the
    suggestion is located is in squared brackets. In our case, the suggestion is local;
    this means it is in the same file. In other cases, the filename would be displayed
    where the suggestion is contained. If the suggestion is a PHP-API entry, it also
    displays which PHP version it is available with. The last column is reserved for
    the snippet entries where the trigger name is displayed.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以从内容辅助功能的建议行中读取大量信息。首先，有一个图标显示建议的类型。类型可以是函数、类、代码片段等。此外，建议所在的位置用方括号表示。在我们的例子中，建议是局部的；这意味着它在同一文件中。在其他情况下，建议包含的文件名将显示在建议的位置。如果建议是PHP-API条目，它还会显示它可用的是哪个PHP版本。最后一列是为代码片段条目保留的，其中显示触发名称。
- en: '*What just happened?*'
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You have inserted a PHPDoc conform Function Comment that was provided by the
    PHP Bundle snippets. The snippets quickly allow us to fill in the required information
    in the prestructured comment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您已插入由PHP Bundle代码片段提供的PHPDoc符合函数注释。这些代码片段使我们能够快速填写预结构化注释中所需的信息。
- en: Aptana Studio's PHP Bundle PHPDoc Comment snippets
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Aptana Studio的PHP Bundle PHPDoc注释代码片段
- en: Aptana Studio's standard PHP Bundle provides us with some snippets for the most
    commonly used PHPDoc Comments. However, as we have already mentioned, you're also
    able to extend the snippets and create some new PHPDoc Comments that are much
    more specialized to your needs.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Aptana Studio的标准PHP Bundle为我们提供了一些最常用PHPDoc注释的代码片段。然而，正如我们之前提到的，您还可以扩展代码片段并创建一些更专门针对您需求的PHPDoc注释。
- en: 'Here is a complete list of predefined PHPDoc Comments and their trigger keywords:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是预定义的PHPDoc注释及其触发关键词的完整列表：
- en: '| Trigger | Title |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 触发器 | 标题 |'
- en: '| --- | --- |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| doc_c | Class |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| doc_c | 类 |'
- en: '| doc_v | Class Variable |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| doc_v | 类变量 |'
- en: '| doc_d | Constant Definition |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| doc_d | 常量定义 |'
- en: '| doc_f | Function |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| doc_f | 函数 |'
- en: '| doc_s | Function Signature |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| doc_s | 函数签名 |'
- en: '| doc_h | Header |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| doc_h | 标题 |'
- en: '| doc_i | Interface |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| doc_i | 接口 |'
- en: 'However, it must be said that in very dynamic PHP code, the Content Assist
    feature doesn''t always have an easy job. In some cases, it may not be possible
    to determine the type of variable and so the Content Assist feature isn''t able
    to provide correct suggestions for it. In this instance you will need to support
    the Content Assist feature and declare the type with a small PHPDoc Comment. In
    the following screenshot, you will see a brief example of this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，必须指出，在非常动态的PHP代码中，内容辅助功能并不总是容易工作。在某些情况下，可能无法确定变量的类型，因此内容辅助功能无法为其提供正确的建议。在这种情况下，您需要支持内容辅助功能，并使用小的PHPDoc注释声明类型。在下面的屏幕截图中，您将看到这个例子的一个简要示例：
- en: '![Aptana Studio''s PHP Bundle PHPDoc Comment snippets](img/8246_10_35.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Aptana Studio的PHP Bundle PHPDoc注释片段](img/8246_10_35.jpg)'
- en: Now you can go ahead and take a look at how to include and use external libraries
    within PHP projects.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以继续查看如何在PHP项目中包含和使用外部库。
- en: Using PHP libraries
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PHP库
- en: Most large PHP projects come with active additional external libraries. Often
    these libraries are not located within the PHP project itself. For example, you
    could place ZendFramework directly within your project, but you could also place
    it within the PHP-API directory or somewhere else.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数大型PHP项目都附带活跃的附加外部库。通常，这些库并不位于PHP项目本身中。例如，您可以将ZendFramework直接放置在您的项目中，但您也可以将其放置在PHP-API目录或其他位置。
- en: But, you may wonder, what's the difference between these two processes?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您可能会想知道，这两个过程之间有什么区别？
- en: If you have your ZendFramework located within your project, the Content Assist
    feature of this project automatically knows all PHPDoc-tagged elements. If this
    is the case, the build process of the project might slow down and the project
    size is increased drastically. The first time after the inclusion of the ZendFramework
    libraries, Aptana Studio will index all ZendFramework files and evaluate the contained
    PHPDocs. Then, every time Aptana Studio triggers the build process of this project,
    it will also check the timestamps of all ZendFramework files for possible changes.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的ZendFramework位于项目中，该项目的内容辅助功能将自动知道所有PHPDoc标记的元素。如果是这种情况，项目构建过程可能会变慢，项目大小会大幅增加。在首次包含ZendFramework库之后，Aptana
    Studio将索引所有ZendFramework文件并评估包含的PHPDoc。然后，每次Aptana Studio触发此项目的构建过程时，它也会检查所有ZendFramework文件的最后修改时间戳，以确定需要重新索引的已更改文件。
- en: If you locate the ZendFramework outside your project, you must integrate it
    as a library into your project. Otherwise, Aptana Studio will not be able to provide
    you with the Content Assist feature of the ZendFramework information. In this
    instance, Aptana Studio will only index all the files of ZendFramework while creating
    the Aptana Studio library. After that, only when Aptana Studio starts up will
    it check the timestamps of each file in order to identify the changed files that
    have to be reindexed. If you want to integrate a library that you use in most
    of your projects, you have the additional advantage of only having to include
    the library once. After inclusion, Aptana Studio provides the library with every
    PHP-natured project.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将ZendFramework放置在项目外部，您必须将其作为库集成到项目中。否则，Aptana Studio将无法为您提供ZendFramework的信息内容辅助功能。在这种情况下，Aptana
    Studio将在创建Aptana Studio库时仅索引所有ZendFramework文件。之后，只有在Aptana Studio启动时，它才会检查每个文件的最后修改时间戳，以识别需要重新索引的已更改文件。如果您想集成在大多数项目中使用的库，您还有额外的优势，即只需包含一次库。包含后，Aptana
    Studio将为每个具有PHP特性的项目提供该库。
- en: In both cases, the Content Assist feature learns all the available classes,
    constants, and functions that are contained within your library and uses them
    for inspection.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，内容辅助功能都会学习库中包含的所有可用类、常量和函数，并使用它们进行检查。
- en: Note
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You have to remember that all libraries that you want to include as part of
    the goal that the Content Assist feature needs to work with, must be equipped
    with PHPDoc Comments.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须记住，所有希望作为内容辅助功能工作目标的一部分包含的库都必须配备PHPDoc注释。
- en: In the case of Aptana Studio's Content Assist feature, the PHPDoc Comments were
    determined and used to provide the developer with more information and code suggestions
    of the available environment at the time of developing.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在Aptana Studio的内容辅助功能的情况下，PHPDoc注释被确定并用于在开发时为开发者提供更多信息和可用环境的代码建议。
- en: PHP-API files are supported by default with the Content Assist feature. While
    you have chosen a PHP compatibility version (by creating or configuring your project),
    you have adjusted the Content Assist feature so that it only suggests the classes,
    functions, and documentation entries that are equal with the PHP version.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: PHP-API文件默认支持内容辅助功能。当您已选择PHP兼容性版本（通过创建或配置您的项目）时，您已调整内容辅助功能，使其仅建议与PHP版本相等的类、函数和文档条目。
- en: For example, if you used a PHP-API function, such as `substr`, and didn't remember
    what parameter number has what functionality. No problem, simply hover the mouse
    cursor above the function call within the PHP editor and it appears as a tool
    tip that contains the PHP Documentation of this function, as seen in the following
    screenshot:.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您使用了PHP-API函数，如`substr`，并且不记得哪个参数号有什么功能。没问题，只需将鼠标光标悬停在PHP编辑器中的函数调用上，它就会显示一个包含此函数PHP文档的工具提示，如图所示：.
- en: '![Using PHP libraries](img/8246_10_23.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![使用PHP库](img/8246_10_23.jpg)'
- en: Here you will get all the information that you need such as, what parameter
    requires what kind of variable type, what parameters are optional, and much more.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您将获得所需的所有信息，例如，哪个参数需要什么类型的变量，哪些参数是可选的，等等。
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Too much information!**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**信息过多！**'
- en: If the PHP Documentation is too large and it does not fit in the tool tip, just
    press the *F2* key in order to make the tool tip sticky. Now you're able to scroll
    within the tool tip and read it in a relaxed manner.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果PHP文档太大，无法适应工具提示，只需按*F2*键即可使工具提示粘性。现在您可以在工具提示内滚动并轻松阅读。
- en: Time for action – using external libraries
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用外部库的行动时间
- en: Now you will take a look at how you can add external libraries to your PHP project
    so that your Content Assist feature knows all the available classes, constants,
    and functions from these additional libraries.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将了解如何将外部库添加到您的PHP项目中，以便内容辅助功能知道这些附加库中所有可用的类、常量和函数。
- en: First of all, you have to add a new user library. So you will need to open **Preferences**
    under **Window** | **Preferences** and navigate within the tree to **Aptana Studio**
    | **Editors** | **PHP** | **Libraries**. The **Libraries** dialog box is shown
    in the following screenshot:![Time for action – using external libraries](img/8246_10_24.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您必须添加一个新的用户库。因此，您需要打开**窗口**下的**首选项**，在树中导航到**Aptana Studio** | **编辑器** |
    **PHP** | **库**。下面的截图显示了**库**对话框：![使用外部库的行动时间](img/8246_10_24.jpg)
- en: After that, click on the **New user library** button in order to open the creation
    window seen in the following screenshot:![Time for action – using external libraries](img/8246_10_28.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**新建用户库**按钮以打开以下截图所示的创建窗口：![使用外部库的行动时间](img/8246_10_28.jpg)
- en: Here you have to enter a name for your user library. You will use ZendFramework,
    so you will need to enter the name of this library, which is extended by the version
    number.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您需要为您的用户库输入一个名称。您将使用ZendFramework，因此您需要输入此库的名称，该名称由版本号扩展。
- en: Then you will need to select at least one or more directories where your libraries
    are located. When you've selected all the required libraries, click on **OK**
    to complete this step, as seen in the following screenshot:![Time for action –
    using external libraries](img/8246_10_25.jpg)
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您需要选择至少一个或多个包含您库的目录。当您已选择所有必需的库后，点击**确定**以完成此步骤，如图所示：![使用外部库的行动时间](img/8246_10_25.jpg)
- en: Now, your new library should be listed within the libraries list. Be sure that
    all the libraries that you want to use within the PHP projects have the related
    checkbox enabled by default, as seen in the following screenshot:![Time for action
    – using external libraries](img/8246_10_26.jpg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您的新库应该列在库列表中。确保您要在PHP项目中使用的所有库的相关复选框默认启用，如图所示：![使用外部库的行动时间](img/8246_10_26.jpg)
- en: Tip
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**What happens internally when you add a new PHP library**'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**添加新的PHP库时内部会发生什么**'
- en: When you add a new library, Aptana Studio will index all the included files.
    While indexing, it remembers the timestamp for each file, so it can check if a
    file has been changed with every startup. If changed files were detected during
    start up, Aptana Studio will reindex these files. So you can be sure that you
    are always getting the newest information from the Content Assist feature.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你添加一个新的库时，Aptana Studio 将索引所有包含的文件。在索引过程中，它会记住每个文件的时间戳，因此每次启动时都可以检查文件是否已更改。如果在启动过程中检测到已更改的文件，Aptana
    Studio 将重新索引这些文件。因此，你可以确信你总是从内容辅助功能中获得最新的信息。
- en: Finally, click on **Apply** and then on **OK** to complete the library creation
    and wait for it to complete the indexing of the library. The progress is shown
    in a dialog box, as seen in the following screenshot:![Time for action – using
    external libraries](img/8246_10_27.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击 **应用** 然后点击 **确定** 以完成库的创建，并等待它完成库的索引。进度会在一个对话框中显示，如下面的截图所示：![操作时间 – 使用外部库](img/8246_10_27.jpg)
- en: '*What just happened?*'
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You have integrated a PHP library such as ZendFramework into Aptana Studio.
    After you have added the library within the preferences, the library will be used
    in all PHP-natured projects by default.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经将 PHP 库如 ZendFramework 集成到 Aptana Studio 中。在你将库添加到首选项中之后，默认情况下，该库将在所有 PHP
    项目中使用。
- en: Now when you are developing in a PHP project, the Content Assist feature will
    provide you with the available classes, constants, and functions from this library.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你正在开发 PHP 项目时，内容辅助功能将为你提供来自这个库的可用类、常量和函数。
- en: 'Let''s perform a quick test of the Content Assist feature. Open a PHP file
    within a PHP-natured project and begin to enter the chars `Zend`, as shown in
    the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速测试一下内容辅助功能。在 PHP 项目中打开一个 PHP 文件，并开始输入字符 `Zend`，如下面的截图所示：
- en: '![What just happened?](img/8246_10_29.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![刚才发生了什么？](img/8246_10_29.jpg)'
- en: As you can see, Aptana Studio identifies that you want to create an instance
    of a class and therefore provides you with only those classes that begin with
    `Zend`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Aptana Studio 识别出你想要创建一个类的实例，因此只为你提供以 `Zend` 开头的那些类。
- en: 'Alternatively, if you can''t remember what kind of parameters are available
    in a function of your library, just hover the mouse cursor above a function call,
    and a tool tip appears with the PHPDoc Comment within it. If the PHPDoc Comment
    is of good quality, all your questions will be answered quickly. The following
    screenshot shows such an example:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你记不起你的库函数中可用哪些参数，只需将鼠标光标悬停在函数调用上，就会出现一个包含 PHPDoc 注释的工具提示。如果 PHPDoc 注释质量良好，所有问题都会迅速得到解答。以下截图显示了这样一个例子：
- en: '![What just happened?](img/8246_10_31.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![刚才发生了什么？](img/8246_10_31.jpg)'
- en: Configuring project-specific libraries
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置项目特定库
- en: Now that you know how you can provide libraries to all PHP projects, the following
    question still remains; what should you do if you don't need or want a library
    within a PHP project? It may so happen that you have a PHP project that isn't
    using ZendFramework. In that case, the information provided by the Content Assist
    feature about the ZendFramework could disturb you while you are searching for
    the Content Assist information that you really need.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何为所有 PHP 项目提供库，但以下问题仍然存在；如果你不需要或不想在 PHP 项目中使用库，你应该怎么办？可能发生的情况是，你有一个不使用
    ZendFramework 的 PHP 项目。在这种情况下，内容辅助功能提供的有关 ZendFramework 的信息可能会在你寻找真正需要的内容辅助信息时打扰你。
- en: Additionally, this project could be a Flow3 project, but this is the only Flow3
    project that you are developing and therefore you don't want the Content Assist
    information of Flow3 in each PHP project. This is not a problem as you can overwrite
    the libraries in each project.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这个项目可能是一个 Flow3 项目，但这是你正在开发的唯一一个 Flow3 项目，因此你不想在每个 PHP 项目中都有 Flow3 的内容辅助信息。这并不是问题，因为你可以覆盖每个项目中的库。
- en: Time for action – configuring project-specific libraries
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 – 配置项目特定库
- en: 'Let''s take a look at how easy it is to configure project-specific libraries
    using the following steps:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用以下步骤配置项目特定库有多简单：
- en: Navigate to the the PHP project in the **Project Explorer** view that you want
    to adjust the used libraries in. Right-click on it and select the **Properties**
    entry.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **项目资源管理器** 视图中你想要调整使用的库的 PHP 项目。右键单击它并选择 **属性** 选项。
- en: In the opening window, select the **PHP Buildpath** section. In this section,
    you will find three tabs that will allow you to adjust the used libraries.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开窗口中，选择**PHP Buildpath**部分。在这个部分，您将找到三个选项卡，允许您调整使用的库。
- en: The **Workspace** tab allows you to add libraries to your project that are already
    contained in another project in your workspace. Just click on the **Add...** button
    and select a PHP project within the popup. This tab is shown in the following
    screenshot:![Time for action – configuring project-specific libraries](img/8246_10_32.jpg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**工作区**选项卡允许您将已包含在您工作区中另一个项目中的库添加到您的项目中。只需单击**添加...**按钮，然后在弹出窗口中选择一个PHP项目。此选项卡在以下屏幕截图中显示：![行动时间
    – 配置项目特定库](img/8246_10_32.jpg)'
- en: Tip
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Default selection within the Workspace tab**'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**工作区选项卡中的默认选择**'
- en: By default, you will find the PHP project within the list on the **Workspace**
    tab itself. This is the reason for the project Content Assist feature already
    knowing its own classes, constants, and functions.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，您将在**工作区**选项卡上的列表中找到PHP项目。这也是为什么项目内容辅助功能已经知道它自己的类、常量和函数的原因。
- en: The **External Directories** tab allows you to add libraries that are located
    in external directories somewhere on your disk. Just click on the **Add...** button
    and select a directory from the popup. This tab is shown in the following screenshot:![Time
    for action – configuring project-specific libraries](img/8246_10_33.jpg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**外部目录**选项卡允许您添加位于您磁盘上某个外部目录中的库。只需单击**添加...**按钮，然后从弹出窗口中选择一个目录。此选项卡在以下屏幕截图中显示：![行动时间
    – 配置项目特定库](img/8246_10_33.jpg)'
- en: The **Libraries** tab allows you to overwrite the settings from the global preferences
    of Aptana Studio. First of all, you have to select the **Use project specific
    settings** checkbox. After that, you can deselect the entries that you've configured
    within the global preferences so the Content Assist feature doesn't provide information
    about these libraries anymore. The **Libraries** tab is shown in the following
    screenshot:![Time for action – configuring project-specific libraries](img/8246_10_34.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**库**选项卡允许您覆盖Aptana Studio的全局首选项中的设置。首先，您必须选中**使用项目特定设置**复选框。之后，您可以取消选中在全局首选项中配置的条目，这样内容辅助功能就不再提供关于这些库的信息了。**库**选项卡在以下屏幕截图中显示：![行动时间
    – 配置项目特定库](img/8246_10_34.jpg)'
- en: Finally, when you have finished customizing the project libraries, just click
    on **Apply** and thereafter click on **OK**, in order to assume the changes.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，当您完成自定义项目库后，只需单击**应用**，然后单击**确定**，以应用这些更改。
- en: '*What just happened?*'
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You have changed the default libraries for the PHP project so that the Content
    Assist feature only provides information that you really need in this project.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经更改了PHP项目的默认库，以便内容辅助功能只提供您在这个项目中真正需要的信息。
- en: Using and configuring the code formatter
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用和配置代码格式化器
- en: Every developer knows the problem, for example, suppose you want to work with
    a source code file from another developer, and the developer has formatted the
    code in a different, unreadable style. How nice it would be if the code was formatted
    in the same style as you preferred it.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 每个开发者都知道这个问题，例如，假设您想处理另一个开发者的源代码文件，而这个开发者以不同的、难以阅读的风格格式化了代码。如果代码以您喜欢的风格格式化，那该有多好。
- en: This is not a problem if this is the case, as Aptana Studio 3 provides a source
    code formatter that is easy to use.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这样，那就没问题，因为Aptana Studio 3提供了一个易于使用的源代码格式化器。
- en: Time for action – using and configuring the PHP code formatter
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 使用和配置PHP代码格式化器
- en: 'The following steps show you how you can use the code formatter:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了您如何使用代码格式化器：
- en: First of all, open the PHP file that you want to format within the Aptana Studio
    3 Editor.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在Aptana Studio 3编辑器中打开您想要格式化的PHP文件。
- en: Formatting the file is the easiest part of this *Time for action* section. Just
    right-click somewhere within the editor and select **Source** | **Format**. Alternatively,
    you can use the shortcut *Ctrl* + *Shift* + *F*. This selection is shown in the
    following screenshot:![Time for action – using and configuring the PHP code formatter](img/8246_10_10.jpg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 格式化文件是本节“行动时间”中最简单的一部分。只需在编辑器内的任何位置右键单击，然后选择**源** | **格式化**。或者，您可以使用快捷键 *Ctrl*
    + *Shift* + *F*。此选择在以下屏幕截图中显示：![行动时间 – 使用和配置PHP代码格式化器](img/8246_10_10.jpg)
- en: After you have performed this action, the Aptana Studio code formatter converts
    the formatting of your PHP file to adhere to how the code formatter is configured.
    It is possible however that this might not be the formatting that you prefer.
    If this is the case, you can go forward and look at how you can configure the
    code formatter.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行此操作后，Aptana Studio代码格式化工具会将您的PHP文件格式转换为与代码格式化工具配置一致。然而，这可能不是您喜欢的格式。如果是这种情况，您可以继续查看如何配置代码格式化工具。
- en: To do this, navigate to **Window** | **Preferences** and select **Aptana Studio**
    | **Formatter** within the tree. The **Formatter** dialog is as shown in the following
    screenshot:![Time for action – using and configuring the PHP code formatter](img/8246_10_11.jpg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要这样做，请转到**窗口** | **首选项**，然后在树中选择**Aptana Studio** | **格式化器**。**格式化器**对话框如图下截图所示：![执行时间
    – 使用和配置PHP代码格式化工具](img/8246_10_11.jpg)
- en: In the top-right corner, you can create a new profile for the formatter. If
    you don't have a profile already, click on the green plus (**+**) button in order
    to create your own profile. This is recommended, because you can then switch back
    to the default one.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右上角，您可以创建格式化器的新的配置文件。如果您还没有配置文件，请点击绿色的加号（**+**）按钮以创建自己的配置文件。这是推荐的，因为这样您可以切换回默认配置。
- en: Enter a name for your new profile and select the profile from which your new
    profile should be initialized. You will need to choose the **Default Profile**
    option, as shown in the following screenshot, because its the only one you have:![Time
    for action – using and configuring the PHP code formatter](img/8246_10_12.jpg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的新配置文件输入一个名称，并选择从哪个配置文件初始化新配置文件。您需要选择**默认配置文件**选项，如图下截图所示，因为这是您唯一拥有的：![执行时间
    – 使用和配置PHP代码格式化工具](img/8246_10_12.jpg)
- en: Tip
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Using code formatter profiles**'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**使用代码格式化器配置文件**'
- en: If you're working for different developer teams or maybe different clients,
    it might happen that these developer teams or clients have different formatting
    conventions. The profiles allow you to create for each of them a dedicated formatter
    configuration. Information on how you can combine the different projects with
    the required formatter profiles has already been covered in this chapter.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您为不同的开发团队或可能不同的客户工作，可能会发生这些开发团队或客户有不同的格式化约定。配置文件允许您为每个创建一个专门的格式化器配置。关于如何将不同的项目与所需的格式化器配置文件结合的信息已在本章中介绍。
- en: Click on the **OK** button in order to create the new profile.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮以创建新配置文件。
- en: You will begin to customize your new profile where your old one was saved. Select
    your new profile from the top of the window, then select the PHP entry within
    the list, and start the editing function by clicking on the pencil button.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将开始自定义新配置文件，该配置文件将保存您旧的配置文件。从窗口顶部选择您的新配置文件，然后在列表中选择PHP条目，通过点击铅笔按钮开始编辑功能。
- en: The **Formatter** edit window is grouped in different tabs, where you are able
    to adjust many settings on the left and immediately see the preview on the right.
    The first tab contains the options for **New Lines**. Here you can set a position
    where the formatter should insert a new line. This tab is shown in the following
    screenshot:![Time for action – using and configuring the PHP code formatter](img/8246_10_13.jpg)
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**格式化器**编辑窗口分为不同的选项卡，您可以在左侧调整许多设置，并立即在右侧看到预览。第一个选项卡包含**新行**的选项。在这里，您可以设置格式化器应插入新行的位置。此选项卡如图下截图所示：![执行时间
    – 使用和配置PHP代码格式化工具](img/8246_10_13.jpg)'
- en: In the second tab, **Indentation**, you can adjust the kind of indentation for
    your source code. Here you have the option to inherit the tab policy from the
    general settings or to overwrite them. This tab is shown in the following screenshot:![Time
    for action – using and configuring the PHP code formatter](img/8246_10_14.jpg)
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个选项卡，**缩进**，您可以调整源代码的缩进类型。这里您可以选择从常规设置继承制表符策略或覆盖它们。此选项卡如图下截图所示：![执行时间 – 使用和配置PHP代码格式化工具](img/8246_10_14.jpg)
- en: The third tab, **Blank Lines**, allows you to adjust the behavior of blank lines
    within classes and functions. This tab is shown in the following screenshot:![Time
    for action – using and configuring the PHP code formatter](img/8246_10_15.jpg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三个选项卡，**空白行**，允许您调整类和函数中空白行的行为。此选项卡如图下截图所示：![执行时间 – 使用和配置PHP代码格式化工具](img/8246_10_15.jpg)
- en: The fourth tab, **Braces**, contains the behavior of braces. Here you can select
    the different lines in which different braces should appear. This tab is shown
    in the following screenshot:![Time for action – using and configuring the PHP
    code formatter](img/8246_10_16.jpg)
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第四个标签页，**花括号**，包含花括号的行为。在这里，你可以选择不同行中应该出现不同花括号。此标签页如图所示：![使用和配置PHP代码格式化器时的行动时间](img/8246_10_16.jpg)
- en: The **Spaces** tab provides you with more than 20 options to customize the behavior
    of spaces. These space settings are grouped in the **Parentheses**, **Punctuation
    Elements**, and **Operators** areas. With each of these settings, you're able
    to select the amount of spaces before and after occurrences. This tab is shown
    in the following screenshot:![Time for action – using and configuring the PHP
    code formatter](img/8246_10_17.jpg)
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**空格**标签页为你提供了20多个选项来自定义空格的行为。这些空间设置被分组在**括号**、**标点符号元素**和**运算符**区域。对于每个这些设置，你都可以选择在出现前后有多少个空格。此标签页如图所示：![使用和配置PHP代码格式化器时的行动时间](img/8246_10_17.jpg)'
- en: The sixth tab, **Comments**, provides settings for comment behavior. Here you're
    able format the comments within your source code. This tab is shown in the following
    screenshot:![Time for action – using and configuring the PHP code formatter](img/8246_10_18.jpg)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第六个标签页，**注释**，提供了注释行为的设置。在这里，你可以格式化源代码中的注释。此标签页如图所示：![使用和配置PHP代码格式化器时的行动时间](img/8246_10_18.jpg)
- en: The last tab, **Off/On Tags**, customizes the behavior of the off/on tags. The
    `@formatter:off` and `@formatter:on` tags can be used as PHPDoc functions. So,
    with these tags you're able to mark a section where the formatter shouldn't format
    your source code. If you want to use these tags, just enable the functionality
    and use the entered tags to enable and disable the formatter from your source
    code. This tab is shown in the following screenshot:![Time for action – using
    and configuring the PHP code formatter](img/8246_10_19.jpg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个标签页，**开/关标签**，自定义开/关标签的行为。`@formatter:off`和`@formatter:on`标签可以用作PHPDoc函数。因此，使用这些标签，你可以标记一个格式化器不应格式化源代码的部分。如果你想使用这些标签，只需启用功能并使用输入的标签从源代码中启用和禁用格式化器。此标签页如图所示：![使用和配置PHP代码格式化器时的行动时间](img/8246_10_19.jpg)
- en: Finally, you just have to confirm the changes by clicking on the **OK** button.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你只需通过点击**确定**按钮来确认更改。
- en: Tip
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Importing and exporting formatter settings**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**导入和导出格式化设置**'
- en: If you have finished configuring the code formatter, you may want to save these
    settings in order to restore them sometime, or you might want to distribute these
    conventions within your developing team so that every developer formats his code
    in the same style. For this purpose, you can use the import and export function
    within the formatter configuration section.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经完成了代码格式化器的配置，你可能想要保存这些设置以便将来恢复，或者你可能想要在开发团队中分发这些约定，以便每个开发者都能以相同的风格格式化他的代码。为此，你可以在格式化器配置部分使用导入和导出功能。
- en: '*What just happened?*'
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You have created your own formatter profile and adjusted the formatter to adhere
    to your requirements. You also had a look at the rich possibilities which are
    available to customize them, to ensure that you receive the style of source code
    that you require in order to make them easier to read.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经创建了自己的格式化器配置文件，并调整了格式化器以满足你的要求。你还查看了一些丰富的自定义可能性，以确保你能够获得所需的源代码风格，以便更容易阅读。
- en: Now you can format each file that you have to work with, your own as well as
    other developers. But that's not all. As you may have gathered, you can apply
    this action to other programming languages. Aptana Studio currently allows you
    to format CSS, HTML, JavaScript, JSON, PHP, Ruby/ERB, and XML files.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以格式化你将要处理的每个文件，无论是你自己的还是其他开发者的。但这还不是全部。正如你可能已经注意到的，你可以将此操作应用于其他编程语言。Aptana
    Studio目前允许你格式化CSS、HTML、JavaScript、JSON、PHP、Ruby/ERB和XML文件。
- en: That's easy and very useful, isn't it?
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单，而且非常有用，不是吗？
- en: Have a go hero – configuring your own PHP project
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 英雄之旅 - 配置你自己的PHP项目
- en: Now your task is to select your own PHP-based project that is currently located
    somewhere on your disk. Search for it over the Project Explorer and promote it
    to a project. Go ahead and configure this new project for optimal development
    with PHP.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的任务是选择你自己的位于磁盘某个位置的PHP项目。在项目资源管理器中搜索它，并将其提升为项目。继续配置这个新项目以实现最佳的PHP开发。
- en: You should adjust the PHP version, include required libraries, and equip your
    source code with valid PHPDoc Comments.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该调整 PHP 版本，包含所需的库，并给你的源代码配备有效的 PHPDoc 注释。
- en: Further more, you should create your own code formatter profile, which helps
    you to format your source code. Save it in your profile, do not overwrite the
    existing one. When you've created it, format a PHP file that has a different format
    and see the result.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你应该创建自己的代码格式化配置文件，这有助于你格式化源代码。将其保存在你的配置文件中，不要覆盖现有的配置文件。创建后，格式化一个格式不同的 PHP
    文件，看看结果。
- en: Pop quiz
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: Q1\. Why are project natures so important to a PHP project?
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 为什么项目性质对于一个 PHP 项目来说如此重要？
- en: The project nature adds additional features to the projects that have a specialization
    for them.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目性质为具有特定专长的项目添加了额外的功能。
- en: The nature isn't important for projects.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 性质对于项目来说并不重要。
- en: The nature is a reminder of the kind of editor that should be used for each
    file that is located within the project.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 性质是每个位于项目中的文件应使用哪种编辑器的提醒。
- en: Q2\. With what languages can the code formatter work?
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 代码格式化工具可以与哪些语言一起工作？
- en: The code formatter works only with PHP files.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码格式化工具仅与 PHP 文件一起工作。
- en: The code formatter works with all XML-based files, such as HTML and XML.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码格式化工具与所有基于 XML 的文件一起工作，例如 HTML 和 XML。
- en: The code formatter works currently with CSS, HTML, JavaScript, JSON, PHP, Ruby/ERB,
    and XML.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码格式化工具目前与 CSS、HTML、JavaScript、JSON、PHP、Ruby/ERB 和 XML 一起工作。
- en: Q3\. What do you do when you have a source code section that should not be formatted
    by the code formatter?
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. 当你有一个不应该由代码格式化工具格式化的源代码部分时，你会做什么？
- en: Cut that section before formatting, and paste it back after formatting.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在格式化之前剪切该部分，格式化后再粘贴回来。
- en: You have to wrap the section within a PHP Comment.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须将部分包裹在 PHP 注释中。
- en: You have to use both the `@formatter:on` and `@formatter:off` keywords.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须使用 `@formatter:on` 和 `@formatter:off` 这两个关键字。
- en: Q4\. What criteria must be met so that user libraries can be used by the Content
    Assist feature?
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Q4. 为了使用内容辅助功能使用用户库，必须满足哪些标准？
- en: The classes, constants, and functions must be equipped with JavaDoc Comments.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类、常量和函数必须配备 JavaDoc 注释。
- en: The classes, constants, and functions must be equipped with PHPDoc Comments.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类、常量和函数必须配备 PHPDoc 注释。
- en: The classes, constants, and functions need to be named clearly.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类、常量和函数需要命名清晰。
- en: Q5\. Why does the Content Assist feature provide all project-own classes, constants,
    and functions by default?
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Q5. 为什么内容辅助功能默认提供所有项目自有的类、常量和函数？
- en: Within the project properties, the project in the PHP Buildpath section is included
    by default.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目属性中，PHP 构建路径部分默认包含项目。
- en: The project doesn't know its project-own classes, constants, and functions.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目不知道其项目自有的类、常量和函数。
- en: The project only knows the project-own classes, constants, and functions that
    have no PHPDoc Comment.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目只知道没有 PHPDoc 注释的项目自有的类、常量和函数。
- en: Summary
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: By the end of this chapter, you should be able to create and manage your own
    PHP projects within Aptana Studio. In addition to this, you should also know how
    to use all the PHP-specific features to get the full power out of your PHP-natured
    project.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该能够在 Aptana Studio 中创建和管理自己的 PHP 项目。除此之外，你还应该知道如何使用所有 PHP 特定功能，以充分利用你的
    PHP 项目。
- en: You have also seen how you can select your used PHP version and how you can
    extend your code with PHPDoc Comments so that it is readable for the Content Assist
    feature and you were able to create some PHP Documentation from it. You have also
    seen how to configure the code formatter and use it. In addition, you have seen,
    how you can include external libraries, such as ZendFramework, so that the Content
    Assist feature can provide you with information about the libraries.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 你也看到了如何选择你使用的 PHP 版本，以及如何通过 PHPDoc 注释扩展你的代码，使其对内容辅助功能可读，并且你能够从中创建一些 PHP 文档。你还看到了如何配置代码格式化工具并使用它。此外，你还看到了如何包含外部库，例如
    ZendFramework，以便内容辅助功能可以为你提供有关库的信息。
