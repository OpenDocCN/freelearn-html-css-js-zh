- en: Chapter 6. Using the Contacts and Camera APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：使用联系人及摄像头API
- en: '*In the last chapter, we saw how to get the best out of the Files and Storage
    plugins. Now that your knowledge of PhoneGap is coming together well, it''s time
    to add some interaction to the device itself. The main goal of this chapter is
    to help you to understand the usage of the Contacts API of PhoneGap and to interact
    with the device media using the Camera and Media Capture API.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在上一章中，我们看到了如何充分利用文件和存储插件。现在，随着你对PhoneGap的了解越来越深入，是时候给设备本身添加一些交互了。本章的主要目标是帮助你理解PhoneGap的联系人API的使用，并使用摄像头和媒体捕获API与设备媒体进行交互。*'
- en: 'In this chapter, you will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将：
- en: Get an overview of the PhoneGap Contacts API and its objects and properties
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取PhoneGap联系人API及其对象和属性的概览
- en: Learn how to use the Contacts API to read and filter the contacts stored on
    the device
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用联系人API读取和过滤设备上存储的联系人
- en: Understand the difference between the Camera and Capture API
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解摄像头和捕获API之间的区别
- en: Learn how to capture images from the device camera using the Camera API
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用摄像头API从设备摄像头捕获图像
- en: Learn how to handle various media types such as images, audio, and video using
    the Media Capture API
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用媒体捕获API处理各种媒体类型，如图像、音频和视频
- en: The Contacts API
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系人API
- en: You can easily access the contact information stored on a device using the PhoneGap
    API. The Contacts API is an implementation of the W3C's Pick Contacts Intent API
    (an intent that enables access to a user's address book service from inside a
    web application). You can read more about the W3C specifications at [http://www.w3.org/TR/contacts-api/](http://www.w3.org/TR/contacts-api/).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用PhoneGap API轻松访问设备上存储的联系人信息。Contacts API是W3C的Pick Contacts Intent API（一个允许在Web应用程序内部访问用户地址簿服务的intent）的实现。你可以在[http://www.w3.org/TR/contacts-api/](http://www.w3.org/TR/contacts-api/)上了解更多关于W3C规范的信息。
- en: The required functionalities of the Contacts API are provided by the Contacts
    plugin identified by the name `cordova-plugin-contacts`. This plugin supports
    major platforms.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Contacts API所需的功能由名为`cordova-plugin-contacts`的Contacts插件提供。此插件支持主要平台。
- en: For a complete list of all the supported platforms, refer to the documentation
    at [http://docs.phonegap.com/en/edge/cordova_contacts_contacts.md.html#Contacts](http://docs.phonegap.com/en/edge/cordova_contacts_contacts.md.html#Contacts).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持平台的完整列表，请参阅[http://docs.phonegap.com/en/edge/cordova_contacts_contacts.md.html#Contacts](http://docs.phonegap.com/en/edge/cordova_contacts_contacts.md.html#Contacts)上的文档。
- en: 'In order to start the interaction with the device contacts, you can use the
    `create` or `find` methods defined in the `contacts` object stored in the `navigator`
    object:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始与设备联系人的交互，你可以使用存储在`navigator`对象中的`contacts`对象中定义的`create`或`find`方法：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In order to understand how these methods work in a better way, let''s explore
    the most relevant objects that are involved with them: `Contact`, `ContactName`,
    `ContactField`, `ContactFindOptions`, and `ContactError`.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这些方法是如何工作的，让我们探索与之相关的最相关对象：`Contact`、`ContactName`、`ContactField`、`ContactFindOptions`和`ContactError`。
- en: The ContactName object
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 联系人名称对象
- en: The `ContactName` object is used in the PhoneGap framework in order to store
    all the details of a contact name. The object is stored in the `name` property
    of the `Contact` object.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactName`对象用于在PhoneGap框架中存储联系人名称的所有详细信息。该对象存储在`Contact`对象的`name`属性中。'
- en: 'The properties of the `ContactName` object are all strings and are self-explanatory:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactName`对象的属性都是字符串，且具有自解释性：'
- en: '`formatted`: This represents the complete name of the contact'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`formatted`：这代表联系人的完整名称'
- en: '`familyName`: This represents the contact''s last name'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`familyName`：这代表联系人的姓氏'
- en: '`givenName`: This represents the contact''s first name'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`givenName`：这代表联系人的名字'
- en: '`middleName`: This represents the contact''s middle name'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`middleName`：这代表联系人的中间名'
- en: '`honorificPrefix`: This represents the contact''s prefix (for example, Mr.
    or Dr.)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`honorificPrefix`：这代表联系人的前缀（例如，先生或博士）'
- en: '`honorificSuffix`: This represents the contact''s suffix (for example, Esq.)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`honorificSuffix`：这代表联系人的后缀（例如，Esq.）'
- en: The ContactField object
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 联系人字段对象
- en: The `ContactField` object is a generic object used in the PhoneGap framework
    in order to represent a field of the `Contact` object. The generic nature of this
    object makes it reusable across several fields.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactField`对象是PhoneGap框架中用于表示`Contact`对象字段的通用对象。该对象的通用性质使其可以在多个字段中重复使用。'
- en: 'The properties of the `ContactField` object are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactField`对象的属性如下：'
- en: '`type`: This is a string that represents the type of field; possible values
    are home, work, mobile, and so on'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`: 这是一个字符串，表示字段的类型；可能的值有家庭、工作、手机等'
- en: '`value`: This is a string representing the value of the field such as a phone
    number or an e-mail address'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`: 这是一个字符串，表示字段的值，例如电话号码或电子邮件地址'
- en: '`pref`: This is a Boolean value that indicates whether the user preferred value
    is returned in a specific field.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pref`: 这是一个布尔值，表示是否在特定字段中返回用户的首选值。'
- en: Note
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When the `ContactField` object is used in the `photos` property of the `Contact`
    object, the `type` property represents the type of a returned image (for example,
    a URL or Base64-encoded string).
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`ContactField`对象用于`Contact`对象的`photos`属性时，`type`属性表示返回图像的类型（例如，URL或Base64编码的字符串）。
- en: The ContactAddress object
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`ContactAddress`对象'
- en: The `ContactAddress` object is the object stored in the `addresses` property
    of the `Contact` object. The `addresses` property is an array where multiple addresses
    can be associated with each contact.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactAddress`对象是存储在`Contact`对象的`addresses`属性中的对象。`addresses`属性是一个数组，其中可以与每个联系人关联多个地址。'
- en: 'The properties of the `ContactAddress` object are as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactAddress`对象的属性如下：'
- en: '`pref`: This is a Boolean value that indicates whether the returned `ContactAddress`
    object is the preferred value of the user for the `ContactAddress` object'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pref`: 这是一个布尔值，表示返回的`ContactAddress`对象是否是用户为`ContactAddress`对象指定的首选值'
- en: '`type`: This is a string that indicates what type of address is stored in the
    `ContactAddress` object (for example, home and office)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`: 这是一个字符串，表示存储在`ContactAddress`对象中的地址类型（例如，家庭和办公室）'
- en: '`formatted`: This is a string that represents the complete address that is
    formatted for display'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`formatted`: 这是一个字符串，表示用于显示的完整地址'
- en: '`streetAddress`: This is a string that represents the complete street address'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`streetAddress`: 这是一个字符串，表示完整的街道地址'
- en: '`locality`: This is a string that represents the city or locality that is part
    of the `ContactAddress` object'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`locality`: 这是一个字符串，表示`ContactAddress`对象中包含的城市或地区'
- en: '`region`: This is a string that represents the state or region that is part
    of the `ContactAddress` object'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`region`: 这是一个字符串，表示`ContactAddress`对象中包含的州或地区'
- en: '`postalCode`: This is a string that represents the zip code or postal code
    associated with the locality stored in the `ContactAddress` object'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`postalCode`: 这是一个字符串，表示与`ContactAddress`对象中存储的地区相关的邮政编码或邮政编码'
- en: '`country`: This is a string that represents the name of the country stored
    in the `ContactAddress` object'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`country`: 这是一个字符串，表示存储在`ContactAddress`对象中的国家名称'
- en: Tip
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There is a limitation in Android 2.x (that is, the `pref` property is not supported)
    and several limitations on Android 1.x. Also, iOS does not support the `formatted`
    property. Always refer to the online documentation to verify the status of the
    support for the `ContactAddress` object.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Android 2.x（即`pref`属性不受支持）和Android 1.x中存在一些限制。此外，iOS不支持`formatted`属性。请始终参考在线文档以验证对`ContactAddress`对象的支持状态。
- en: The ContactOrganization object
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`ContactOrganization`对象'
- en: The `ContactOrganization` object represents all the details of a company, organization,
    and so on, that the stored contact belongs to. The object is stored in the array
    contained in the `organizations` property of the `Contact` object.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactOrganization`对象代表存储联系人的公司、组织等所有详细信息。该对象存储在`Contact`对象的`organizations`属性包含的数组中。'
- en: 'The properties of the `ContactOrganization` object are as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactAddress`对象的属性如下：'
- en: '`pref`: This is a Boolean value that indicates whether the returned `ContactOrganization`
    object is the preferred value of the user for the `ContactOrganization` object'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pref`: 这是一个布尔值，表示返回的`ContactOrganization`对象是否是用户为`ContactOrganization`对象指定的首选值'
- en: '`type`: This is a string that indicates what type of address is stored in the
    `ContactOrganization` object (for example, work and other)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`: 这是一个字符串，表示存储在`ContactOrganization`对象中的地址类型（例如，工作和其他）'
- en: '`name`: This is a string that represents the name of the organization stored
    in the `ContactOrganization` object'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`: 这是一个字符串，表示存储在`ContactOrganization`对象中的组织名称'
- en: '`department`: This is a string that represents the department of the organization
    who the contact works for'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`department`: 这是一个字符串，表示联系人为之工作的组织部门'
- en: '`title`: This is a string that represents the contact''s title in the organization'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title`：这是一个表示联系人在组织中的头衔的字符串'
- en: The `name`, `department`, and `title` properties are partially supported on
    iOS; the `pref` and `type` properties are badly supported on Android 1.x and Android
    2.x.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`name`、`department`和`title`属性在iOS上部分支持；`pref`和`type`属性在Android 1.x和Android
    2.x上支持不佳。'
- en: The Contact object
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 联系人对象
- en: 'The `Contact` object represents all the details of a contact stored in the
    device database. A `Contact` object can be saved, removed, and copied from the
    device contact database using the `save`, `remove`, and `clone` methods defined
    on the object itself. The `save` and `remove` methods accept two arguments in
    order to handle the success and failure of the save or remove operation:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`Contact`对象代表存储在设备数据库中的联系人的所有详细信息。可以使用对象本身定义的`save`、`remove`和`clone`方法将`Contact`对象保存、删除和从设备联系人数据库中复制。`save`和`remove`方法接受两个参数，以便处理保存或删除操作的成功或失败：'
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The error handlers receive the same `ContactError` object as an argument; the
    success handlers receive the saved contact or a snapshot of the current database
    when a contact is successfully removed.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 错误处理程序接收相同的`ContactError`对象作为参数；成功处理程序在联系人成功删除时接收保存的联系人或当前数据库的快照。
- en: 'The `ContactError` object contains the information about the occurred error
    in the `code` property. The values that can be returned are as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactError`对象包含关于发生错误的`code`属性中的信息。可以返回的值如下：'
- en: '`ContactError.UNKNOWN_ERROR`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.UNKNOWN_ERROR`'
- en: '`ContactError.INVALID_ARGUMENT_ERROR`'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.INVALID_ARGUMENT_ERROR`'
- en: '`ContactError.TIMEOUT_ERROR`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.TIMEOUT_ERROR`'
- en: '`ContactError.PENDING_OPERATION_ERROR`'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.PENDING_OPERATION_ERROR`'
- en: '`ContactError.IO_ERROR`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.IO_ERROR`'
- en: '`ContactError.NOT_SUPPORTED_ERROR`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.NOT_SUPPORTED_ERROR`'
- en: '`ContactError.PERMISSION_DENIED_ERROR`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContactError.PERMISSION_DENIED_ERROR`'
- en: 'When creating a new `Contact` object, you can define the contact properties
    or pass them as an object one by one when calling the `create` method. The properties
    of the `Contact` object are as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建一个新的`Contact`对象时，你可以在调用`create`方法时定义联系人的属性或逐个传递它们。`Contact`对象的属性如下：
- en: '`id`: This is a string used as a globally unique identifier'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`：这是一个用作全局唯一标识符的字符串'
- en: '`displayName`: This is a string that represents the name of the `Contact` object
    for display to the end users'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`displayName`：这是一个表示用于向最终用户显示的`Contact`对象名称的字符串'
- en: '`name`: This is an object containing all the information of a contact name;
    the object used to store this information is `ContactName`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这是一个包含联系人姓名所有信息的对象；用于存储此信息的对象是`ContactName`'
- en: '`nickname`: This is a string that represents the casual name of a contact'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nickname`：这是一个表示联系人非正式名称的字符串'
- en: '`phoneNumbers`: This is an array of all the contact''s phone numbers; the array
    items are instances of the `ContactField` object'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`phoneNumbers`：这是一个包含所有联系人电话号码的数组；数组项是`ContactField`对象的实例'
- en: '`emails`: This is an array of all the contact''s e-mail addresses; the array
    items are instances of the `ContactField` object'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emails`：这是一个包含所有联系人电子邮件地址的数组；数组项是`ContactField`对象的实例'
- en: '`addresses`: This is an array of all the contact''s addresses; the array items
    are instances of the `ContactAddresses` object'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addresses`：这是一个包含所有联系人地址的数组；数组项是`ContactAddresses`对象的实例'
- en: '`ims`: This is an array of all the contact''s instant messages accounts; the
    array items are instances of the `ContactField` object'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ims`：这是一个包含所有联系人即时消息账户的数组；数组项是`ContactField`对象的实例'
- en: '`organizations`: This is an array of all the organizations the contact belongs
    to; the array items are instances of the `ContactOrganization` object'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`organizations`：这是一个包含联系人所属的所有组织的数组；数组项是`ContactOrganization`对象的实例'
- en: '`birthday`: This is a `Date` object that represents the birthday of the contact'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`birthday`：这是一个表示联系人出生日期的`Date`对象'
- en: '`note`: This is a string that represents a note about the contact'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`note`：这是一个表示关于联系人的注释的字符串'
- en: '`photos`: This is an array of all the contact''s photos; the array items are
    instances of the `ContactField` object'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`photos`：这是一个包含所有联系人照片的数组；数组项是`ContactField`对象的实例'
- en: '`categories`: This is an array of all the contact''s defined categories; the
    array items are instances of the `ContactField` object'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories`：这是一个包含所有联系人定义类别的数组；数组项是`ContactField`对象的实例'
- en: '`urls`: This is an array of all the web pages associated with the contact;
    the array items are instances of the `ContactField` object'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`urls`：这是一个包含与联系人相关联的所有网页的数组；数组项是`ContactField`对象的实例'
- en: The `Contact` object's properties are not fully supported across all platforms.
    In fact, operating system fragmentation makes it difficult to handle this information
    consistently.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`Contact` 对象的属性在所有平台上并不完全受支持。实际上，操作系统的碎片化使得一致地处理这些信息变得困难。'
- en: For instance, the `name`, `nickname`, `birthday`, `photos`, `categories`, and
    `urls` properties are not supported on Android 1.x. Likewise, the `categories`
    property is supported neither on Android 2.x. nor iOS.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`name`、`nickname`、`birthday`、`photos`、`categories` 和 `urls` 属性在 Android 1.x
    上不受支持。同样，`categories` 属性在 Android 2.x 和 iOS 上也不受支持。
- en: On iOS, the items returned in the `photos` array contain a URL that points to
    the app's temporary folder. This means that this content is deleted when the app
    exits and that you have to handle it if you want the user to find the app in the
    same status he/she left. The `displayName` property is not supported on iOS and
    will be returned as null, unless there is `ContactName` defined. If the `ContactName`
    object is defined, then a composite name or nickname is returned.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在 iOS 上，`photos` 数组中返回的项目包含一个指向应用临时文件夹的 URL。这意味着当应用退出时，此内容将被删除，并且如果你想让用户以相同的状态找到应用，你必须处理它。`displayName`
    属性在 iOS 上不受支持，除非定义了 `ContactName`，否则将返回 null。如果定义了 `ContactName` 对象，则返回一个复合名称或昵称。
- en: Filtering contact data
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过滤联系人数据
- en: We have already mentioned the `find` method available in the `navigator.contacts`
    object. Using this method, an app can find one or multiple contacts in the device's
    contact database. The `find` method accepts four arguments. The first one is an
    array that contains the name of the fields of the `Contact` object that have to
    be returned. The second and third are the success and error handlers. The last
    one represents the filtering options that you may wish to apply to the current
    search.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到了 `navigator.contacts` 对象中可用的 `find` 方法。使用此方法，一个应用可以在设备的联系人数据库中查找一个或多个联系人。`find`
    方法接受四个参数。第一个是一个包含必须返回的 `Contact` 对象字段名称的数组。第二个和第三个是成功和错误处理程序。最后一个代表你可能希望应用于当前搜索的过滤选项。
- en: In order to apply a filter to the current search, you can instantiate a new
    `ContactFindOptions` object and populate the `filter` and `multiple` properties.
    The `filter` property is a case-insensitive string that will act as a filter on
    the fields of the `Contact` objects returned by the `find` method. The `multiple`
    property is `false` by default and is the one to use in order to receive multiple
    `Contact` objects in the success handler. Try out the following example to understand
    how these properties work.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对当前搜索应用过滤器，你可以实例化一个新的 `ContactFindOptions` 对象，并填充 `filter` 和 `multiple` 属性。`filter`
    属性是一个不区分大小写的字符串，它将在 `find` 方法返回的 `Contact` 对象的字段上作为过滤器。`multiple` 属性默认为 `false`，并且是在成功处理程序中接收多个
    `Contact` 对象时应该使用的。尝试以下示例以了解这些属性如何工作。
- en: Time for action – searching device contacts
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 搜索设备联系人
- en: 'We will now see an example of getting all the contacts from the device and
    listing them down:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看到一个从设备获取所有联系人并将其列出的例子：
- en: 'Create a new project using the PhoneGap CLI:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 PhoneGap CLI 创建一个新项目：
- en: '[PRE2]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Change the current working directory to the directory that is newly created:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将当前工作目录更改为新创建的目录：
- en: '[PRE3]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add the required platforms to the project. We will add Android for this example:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所需的平台添加到项目中。在这个例子中，我们将添加 Android：
- en: '[PRE4]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Install the Contacts plugin to the project:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将联系人插件安装到项目中：
- en: '[PRE5]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the `www/index.html` file, you need to replace the content and add the following
    code. To start with, let''s create an event listener and bind that to a function.
    In the following code, when the device is ready, the `OnDeviceReady` method will
    be fired:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `www/index.html` 文件中，你需要替换内容并添加以下代码。首先，让我们创建一个事件监听器并将其绑定到一个函数上。在下面的代码中，当设备准备好时，`OnDeviceReady`
    方法将被触发：
- en: '[PRE6]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, let''s add the content for the `OnDeviceReady` method:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们为 `OnDeviceReady` 方法添加内容：
- en: '[PRE7]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With the preceding code, you are creating a new `ContactFindOptions` object
    and setting filters/properties to the object. Based on the filter that you set,
    the function will return all the matching contacts. In this example, we have given
    an empty filter, which means we get back all the contacts from the device.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用前面的代码，你正在创建一个新的 `ContactFindOptions` 对象，并将过滤器/属性设置到该对象上。根据你设置的过滤器，该函数将返回所有匹配的联系人。在这个例子中，我们提供了一个空过滤器，这意味着我们将从设备中获取所有联系人。
- en: 'If you want to limit the search only to a particular name, you can provide
    the filter as shown here:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您只想限制搜索特定名称，您可以提供如所示的过滤器：
- en: '[PRE8]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can also restrict the list of fields that the function is going to return.
    If you feel that it's enough to have only a few fields for output, you can mention
    them in the list of fields. For example, we have restricted the output to only
    the display name, `name` object, and address of the contacts.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以限制函数将要返回的字段列表。如果您觉得只需要输出几个字段就足够了，您可以在字段列表中提及它们。例如，我们已将输出限制为仅显示名称、`name`对象和联系人的地址。
- en: 'When the function is executed successfully, it will return the values to the
    `OnSuccess` event and will trigger the `OnError` event when there are some issues.
    So let''s define the `OnSuccess` and `OnError` events to define what we are going
    to do with the output:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当函数执行成功时，它将返回值到`OnSuccess`事件，并在出现问题时触发`OnError`事件。因此，让我们定义`OnSuccess`和`OnError`事件来定义我们将如何处理输出：
- en: '[PRE9]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When we have acquired all of the contacts, we loop through the `contacts` object
    and display the name of the contact in the console.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们获取所有联系信息后，我们遍历`contacts`对象，并在控制台中显示联系人的姓名。
- en: 'The following complete code has been given for your reference. When you test
    the code in an actual device, you can see the contact names in the console:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下完整代码已提供供您参考。当您在实际设备上测试代码时，您可以在控制台中看到联系人名称：
- en: '[PRE10]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*What just happened?*'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You filtered the contact database based on the options defined by the `ContactFindOptions`
    object and you refined the result using the API provided by the PhoneGap framework.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您根据`ContactFindOptions`对象定义的选项过滤了联系数据库，并使用PhoneGap框架提供的API对结果进行了细化。
- en: Time for action – adding a new contact
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手时间 – 添加新联系人
- en: 'We will directly go to the example of creating a new contact entry using the
    Contacts API. The code for this is as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将直接通过Contacts API创建一个新的联系条目示例。此代码如下：
- en: '[PRE11]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The last parameter of `ContactField` expects a Boolean value to denote whether
    the field is a preferred one. In the preceding example, the second phone number
    with the value of `true` is set as the preferred number.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContactField`的最后一个参数期望一个布尔值，表示该字段是否为首选字段。在上一个示例中，值为`true`的第二个电话号码被设置为首选号码。'
- en: '*What just happened?*'
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have seen how we can create a new `Contact` object and save this to the device
    using the Contacts API.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何创建一个新的`Contact`对象并将其使用Contacts API保存到设备上。
- en: Camera API or Capture API?
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Camera API还是Capture API？
- en: 'The PhoneGap framework implements two different APIs to access media on a device:
    the Camera API and the Capture API. The main difference between these APIs is
    that the Camera API can access only the default device camera application, whereas
    the Capture API can also record audio or video using the default audio and video
    recording application. Another important difference is that the Capture API allows
    multiple captures with a single API call.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap框架实现了两个不同的API来访问设备上的媒体：Camera API和Capture API。这两个API之间的主要区别是，Camera
    API只能访问默认的设备相机应用程序，而Capture API可以使用默认的音频和视频录制应用程序录制音频或视频。另一个重要区别是，Capture API允许通过单个API调用进行多次捕获。
- en: Note
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Capture API is an implementation of an abandoned W3C standards draft. As
    you can see, there are several similarities between the draft and the actual PhoneGap
    implementation.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Capture API是已废弃的W3C标准草案的一个实现。如您所见，该草案与实际的PhoneGap实现有几种相似之处。
- en: Accessing the camera using the Camera API
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Camera API访问相机
- en: 'The Camera API provides access to the device''s camera application using the
    Camera plugin identified by the `cordova-plugin-camera` key. With this plugin
    installed, an app can take a picture or gain access to a media file stored in
    the photo library and albums that the user created on the device. The Camera API
    exposes the following two methods defined in the `navigator.camera` object:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Camera API通过`cordova-plugin-camera`键标识的Camera插件提供对设备相机应用程序的访问。安装此插件后，应用程序可以拍照或访问用户在设备上创建的照片库和相册中存储的媒体文件。Camera
    API公开了在`navigator.camera`对象中定义的以下两个方法：
- en: '`getPicture`: This opens the default camera application or allows the user
    to browse the media library, depending on the options specified in the `configuration`
    object that the method accepts as an argument'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getPicture`：此方法打开默认的相机应用程序或允许用户根据方法接受的`configuration`对象中指定的选项浏览媒体库'
- en: '`cleanup`: This cleans up any intermediate photo file available in the temporary
    storage location (supported only on iOS)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cleanup`: 这将清理临时存储位置中可用的任何中间照片文件（仅在iOS上受支持）'
- en: 'As arguments, the `getPicture` method accepts a success handler, failure handler,
    and optionally an object used to specify several camera options through its properties
    as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参数，`getPicture`方法接受一个成功处理程序、一个失败处理程序，以及可选地使用其属性指定多个相机选项的对象，如下所示：
- en: '`quality`: This is a number between `0` and `100` used to specify the quality
    of the saved image.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quality`: 这是一个介于`0`和`100`之间的数字，用于指定保存图像的质量。'
- en: '`destinationType`: This is a number used to define the format of the value
    returned in the success handler. The possible values are stored in the following
    `Camera.DestinationType` pseudo constants:'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`destinationType`: 这是一个用于定义成功处理程序中返回的值格式的数字。可能的值存储在以下`Camera.DestinationType`伪常量中：'
- en: '`DATA_URL(0)`: This indicates that the `getPicture` method will return the
    image as a Base64-encoded string'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATA_URL(0)`: 这表示`getPicture`方法将以Base64编码的字符串形式返回图像'
- en: '`FILE_URI(1)`: This indicates that the method will return the file URI'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FILE_URI(1)`: 这表示该方法将返回文件URI'
- en: '`NATIVE_URI(2)`: This indicates that the method will return a platform-dependent
    file URI (for example, `assets-library://` on iOS or `content://` on Android)'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NATIVE_URI(2)`: 这表示该方法将返回一个平台相关的文件URI（例如，iOS上的`assets-library://`或Android上的`content://`）'
- en: '`sourceType`: This is a number used to specify where the `getPicture` method
    can access an image. The following possible values are stored in the `Camera.PictureSourceType`
    pseudo constants: `PHOTOLIBRARY (0)`, `CAMERA (1)`, and `SAVEDPHOTOALBUM (2)`:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sourceType`: 这是一个用于指定`getPicture`方法可以访问图像的位置的数字。以下可能的值存储在`Camera.PictureSourceType`伪常量中：`PHOTOLIBRARY
    (0)`、`CAMERA (1)`和`SAVEDPHOTOALBUM (2)`：'
- en: '`PHOTOLIBRARY`: This indicates that the method will get an image from the device''s
    library'
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PHOTOLIBRARY`: 这表示该方法将从设备的库中获取图像'
- en: '`CAMERA`: This indicates that the method will grab a picture from the camera'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CAMERA`: 这表示该方法将从相机获取图片'
- en: '`SAVEDPHOTOALBUM`: This indicates that the user will be prompted to select
    an album before picking an image'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SAVEDPHOTOALBUM`: 这表示在用户选择图像之前，将提示用户选择相册'
- en: '`allowEdit`: This is a Boolean value (the value is `true` by default) used
    to indicate that the user can make small edits to the image before confirming
    the selection; it works only in iOS.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`allowEdit`: 这是一个布尔值（默认值为`true`），用于指示用户在确认选择之前可以对图像进行小幅度编辑；此功能仅在iOS上有效。'
- en: '`encodingType`: This is a number used to specify the encoding of the returned
    file. The possible values are stored in the `Camera.EncodingType` pseudo constants:
    `JPEG (0)` and `PNG (1)`.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`encodingType`: 这是一个用于指定返回文件编码的数字。可能的值存储在`Camera.EncodingType`伪常量中：`JPEG (0)`和`PNG
    (1)`。'
- en: '`targetWidth` and `targetHeight`: These are the width and height in pixels,
    to which you want the captured image to be scaled; it''s possible to specify only
    one of the two options. When both are specified, the image will be scaled to the
    value that results in the smallest aspect ratio (the aspect ratio of an image
    describes the proportional relationship between its width and height).'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`targetWidth`和`targetHeight`：这些是像素宽度和高度，您希望捕获的图像缩放到这些值；可以指定这两个选项中的任意一个。当两者都指定时，图像将缩放到产生最小宽高比（图像的宽高比描述了其宽度和高度之间的比例关系）的值。'
- en: '`mediaType`: This is a number used to specify what kind of media files have
    to be returned when the `getPicture` method is called using the `Camera.PictureSourceType.PHOTOLIBRARY`
    or `Camera.PictureSourceType.SAVEDPHOTOALBUM` pseudo constants as `sourceType`;
    the possible values are stored in the `Camera.MediaType` object as pseudo constants
    and are `PICTURE (0)`, `VIDEO (1)`, and `ALLMEDIA (2)`.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mediaType`: 这是一个用于指定当使用`Camera.PictureSourceType.PHOTOLIBRARY`或`Camera.PictureSourceType.SAVEDPHOTOALBUM`伪常量作为`sourceType`时，`getPicture`方法必须返回哪种类型的媒体文件。可能的值存储在`Camera.MediaType`对象中作为伪常量，并且是`PICTURE
    (0)`、`VIDEO (1)`和`ALLMEDIA (2)`。'
- en: '`correctOrientation`: This is a Boolean value that forces the device camera
    to correct the device orientation during the capture.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`correctOrientation`: 这是一个布尔值，它强制设备相机在捕获过程中纠正设备方向。'
- en: '`cameraDirection`: This is a number used to specify which device camera has
    to be used during the capture. The values are stored in the `Camera.Direction`
    object as pseudo constants and are `BACK (0)` and `FRONT (1)`.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cameraDirection`: 这是一个用于指定在捕获过程中必须使用哪个设备相机的数字。这些值存储在`Camera.Direction`对象中作为伪常量，并且是`BACK
    (0)`和`FRONT (1)`。'
- en: '`popoverOptions`: This is an object supported on iOS to specify the anchor
    element location and arrow direction of the popover used on iPad when selecting
    images from the library or album.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`popoverOptions`：这是一个在 iOS 上支持的对象，用于指定在从图库或相册选择图片时使用的弹出视图的锚点元素位置和箭头方向。'
- en: '`saveToPhotoAlbum`: This is a Boolean value (the value is `false` by default)
    used in order to save the captured image in the device''s default photo album.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`saveToPhotoAlbum`：这是一个布尔值（默认值为 `false`），用于将捕获的图片保存到设备默认的照片相册中。'
- en: The success handler receives an argument that contains the URI to the file or
    data stored in the file's Base64-encoded string, depending on the value stored
    in the `encodingType` property of the `options` object. The failure handler receives
    a string containing the device's native code error message as an argument.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 成功处理程序接收一个参数，该参数包含文件或数据的 URI，该数据存储在文件的 Base64 编码字符串中，具体取决于 `options` 对象中 `encodingType`
    属性的值。失败处理程序接收一个字符串作为参数，该字符串包含设备的原生代码错误信息。
- en: Similarly, the `cleanup` method accepts a success handler and a failure handler.
    The only difference between the two is that the success handler doesn't receive
    any argument. The `cleanup` method is supported only on iOS and can be used when
    the `sourceType` property value is `Camera.PictureSourceType.CAMERA` and the `destinationType`
    property value is `Camera.DestinationType.FILE_URI`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`cleanup` 方法接受一个成功处理程序和一个失败处理程序。这两个方法之间的唯一区别是成功处理程序不接收任何参数。`cleanup` 方法仅在
    iOS 上受支持，可以在 `sourceType` 属性值为 `Camera.PictureSourceType.CAMERA` 且 `destinationType`
    属性值为 `Camera.DestinationType.FILE_URI` 时使用。
- en: In order to put into practice what you have learned about the Camera API, let's
    create an app that can take a picture from the device's default camera application.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将关于 Camera API 的所学知识付诸实践，让我们创建一个可以从设备默认相机应用程序中拍照的应用程序。
- en: Time for action – accessing the device camera
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 访问设备相机
- en: 'Get ready to access the device''s camera and show the user the captured picture.
    Refer to the following steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 准备访问设备的相机并向用户展示捕获的图片。请参考以下步骤：
- en: 'Open the command-line tool and create a new PhoneGap project named `camera`:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具并创建一个名为 `camera` 的新 PhoneGap 项目：
- en: '[PRE12]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Change to the directory that is created:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到创建的目录：
- en: '[PRE13]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Using the command-line tool, add the Android and iOS platforms to the project:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令行工具，将 Android 和 iOS 平台添加到项目中：
- en: '[PRE14]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add the Camera API plugin using the following command line:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行添加 Camera API 插件：
- en: '[PRE15]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Go to the `www` folder, open the `index.html` file, and replace the contents
    with the following code; this code is self-explanatory:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `www` 文件夹，打开 `index.html` 文件，并用以下代码替换其内容；此代码是自解释的：
- en: '[PRE16]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: When the user clicks on the **Capture Photo** button, the `getCameraImage()`
    function will be triggered which in turn uses the `navigator.camera.getPicture()`
    method to capture the image from the device camera and passes the image data to
    the `onCaptureSuccess()` method if the capture is successful. Later, the data
    source in encoded string format is assigned to the `<img>` tag's source.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当用户点击 **捕获照片** 按钮时，`getCameraImage()` 函数将被触发，进而使用 `navigator.camera.getPicture()`
    方法从设备相机捕获图像，并在捕获成功的情况下将图像数据传递给 `onCaptureSuccess()` 方法。稍后，将编码字符串格式的数据源分配给 `<img>`
    标签的源。
- en: 'If you want to enable photo editing capabilities, set the `allowEdit` property
    to `true` as shown here:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想启用照片编辑功能，将 `allowEdit` 属性设置为 `true`，如下所示：
- en: '[PRE17]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once you have made the changes, you need to build the project to try the application
    on your actual device. To do so, open the command-line tool and launch the `prepare`
    command, and then the `compile` command from the root of the project:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你进行了更改，你需要构建项目以在你的实际设备上尝试应用程序。为此，打开命令行工具并从项目的根目录启动 `prepare` 命令，然后启动 `compile`
    命令：
- en: '[PRE18]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `prepare` and `compile` commands can be executed from any folder of the
    project. The `build` command is a shorthand for the `prepare` and `compile` commands.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`prepare` 和 `compile` 命令可以从项目的任何文件夹中执行。`build` 命令是 `prepare` 和 `compile` 命令的简写。'
- en: 'Run the project on your device for each target platform (unfortunately, emulators
    don''t support the camera). To test the app in the actual device platform, you
    can use the `run` command as shown here:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个目标平台上运行项目（遗憾的是，模拟器不支持相机）。为了在实际设备平台上测试应用程序，你可以使用如下所示的 `run` 命令：
- en: '[PRE19]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Before running this, you need to make your device ready to test, and the steps
    vary for each platform. For example, you need to enable the USB debugging option
    on your Android device. For more information on the setup of each platform, you
    can visit [https://cordova.apache.org/docs/en/edge/index.html](https://cordova.apache.org/docs/en/edge/index.html).
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行此代码之前，您需要使您的设备准备好测试，并且每个平台的步骤都不同。例如，您需要在您的 Android 设备上启用 USB 调试选项。有关每个平台的设置信息，您可以访问
    [https://cordova.apache.org/docs/en/edge/index.html](https://cordova.apache.org/docs/en/edge/index.html)。
- en: As explained in the previous sections, the `cleanup` method works only in iOS.
    This means that your app should look and work differently depending on the target
    platform.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如前几节所述，`cleanup` 方法仅在 iOS 上有效。这意味着您的应用程序的外观和工作方式应根据目标平台的不同而有所不同。
- en: 'When creating a new project with the Cordova command-line tool, a folder named
    `merges` is created in the root of the project. This folder contains a separate
    folder for each platform you add to the project; the root folder of a PhoneGap
    project looks as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Cordova 命令行工具创建新项目时，项目根目录下会创建一个名为 `merges` 的文件夹。此文件夹包含为项目添加的每个平台的一个单独文件夹；PhoneGap
    项目的根文件夹如下所示：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: When you have to handle different user interface elements or business logic
    for a specific target platform, you can place the files you want to merge in the
    `merges/TARGET_PLATFORM` folder. You can create the `index.html` and `index.js`
    files, specifically targeted for the iOS platform by implementing the `cleanup`
    method.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当您必须处理特定目标平台的不同用户界面元素或业务逻辑时，您可以将要合并的文件放置在 `merges/TARGET_PLATFORM` 文件夹中。您可以通过实现
    `cleanup` 方法创建 `index.html` 和 `index.js` 文件，专门针对 iOS 平台。
- en: '*What just happened?*'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You accessed the device camera and learned how to handle different implementations
    of the Camera API on Android and iOS using the merge feature of Cordova. Once
    you have built the app, if you go to the platform-specific folders (`platforms/android/assets/www`
    and `platforms/ios/www`) and open the `index.js` file, you will see that they
    differ from each other.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 您已访问设备相机并学习了如何使用 Cordova 的合并功能来处理 Android 和 iOS 上不同的 Camera API 实现。一旦构建了应用程序，如果您转到特定平台的文件夹（`platforms/android/assets/www`
    和 `platforms/ios/www`）并打开 `index.js` 文件，您会发现它们彼此不同。
- en: Controlling the camera popover
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制相机弹出窗口
- en: 'The `getPicture` method in iOS (and specifically on iPad) returns a `CameraPopoverHandle`
    object when the `sourceType` property value is one of the following pseudo constants
    defined in the `Camera.PictureSourceType` object: `SAVEDPHOTOALBUM` or `PHOTOLIBRARY`.
    Using this object, it''s possible to control the position of the popover dialog
    box created when the `getPicture` method is called.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 中的 `getPicture` 方法（特别是在 iPad 上）当 `sourceType` 属性值为 `Camera.PictureSourceType`
    对象中定义的以下伪常量之一时返回 `CameraPopoverHandle` 对象：`SAVEDPHOTOALBUM` 或 `PHOTOLIBRARY`。使用此对象，可以控制在调用
    `getPicture` 方法时创建的弹出对话框的位置。
- en: 'The `CameraPopoverHandle` object exposes only the `setPosition` method that
    requires a `CameraPopoverOptions` object as an argument. This object allows you
    to specify the coordinates, dimensions, and position of the arrow of this dialog
    box:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`CameraPopoverHandle` 对象仅公开 `setPosition` 方法，该方法需要一个 `CameraPopoverOptions`
    对象作为参数。此对象允许您指定此对话框的坐标、尺寸和箭头位置：'
- en: '[PRE21]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can reach the same result with a more compact syntax, specifying the properties
    in the constructor of the `CameraPopoverOptions` object:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用更紧凑的语法达到相同的结果，在 `CameraPopoverOptions` 对象的构造函数中指定属性：
- en: '[PRE22]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'It''s also possible to specify coordinates, position, and arrow direction,
    using the `popoverOptions` property of the `cameraOptions` object:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用 `cameraOptions` 对象的 `popoverOptions` 属性来指定坐标、位置和箭头方向：
- en: '[PRE23]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The pseudo constants defined in the `PopoverArrowDirection` object match the
    native iOS constants defined in the `UIPopoverArrowDirection` class:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`PopoverArrowDirection` 对象中定义的伪常量与在 `UIPopoverArrowDirection` 类中定义的本地 iOS 常量相匹配：'
- en: '[PRE24]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This option is extremely useful when you want to have control over the position
    of the dialog box when the orientation of the device changes. In the next example,
    you will control the position and size of the dialog box in order to override
    the default behavior.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要在设备方向改变时控制对话框的位置时，此选项非常有用。在下一个示例中，您将控制对话框的位置和大小以覆盖默认行为。
- en: Note
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you want to use different iOS devices (for example, an iPhone 5 and 4S to
    test different screen sizes) for development, you have to create a provisioning
    file and add it to the device. You can either create one provisioning file for
    all your projects, or you can use one file for each project. In order to create
    a new file for your device, you have to do the following:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用不同的iOS设备（例如，iPhone 5和4S以测试不同的屏幕尺寸）进行开发，您必须创建一个配置文件并将其添加到设备中。您可以为所有项目创建一个配置文件，或者为每个项目使用一个文件。为了为您的设备创建新文件，您必须执行以下操作：
- en: Read the device ID by clicking on the serial number you get on the first screen
    you get in iTunes when connecting the device.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击在连接设备时在iTunes中看到的序列号来读取设备ID。
- en: Go to the Apple developer portal, log in, and add a new development device to
    your account.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往Apple开发者门户，登录，并将新的开发设备添加到您的账户。
- en: Create and download a new provisioning file (you should already have a certificate
    available, otherwise read the information available in the Apple developer portal
    at [https://developer.apple.com/support/technical/certificates/](https://developer.apple.com/support/technical/certificates/)).
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并下载一个新的配置文件（您应该已经有证书可用，否则请阅读Apple开发者门户中可用的信息[https://developer.apple.com/support/technical/certificates/](https://developer.apple.com/support/technical/certificates/)）。
- en: Add the provisioning file to your device using the Xcode Organizer window (in
    Xcode, navigate to **Window** | **Organizer**).
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Xcode组织者窗口（在Xcode中，导航到**Window** | **Organizer**）将配置文件添加到您的设备。
- en: It's also now possible to just plug in your device and let Xcode register and
    manage the provisioning profiles for you.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在也可以直接将设备连接到Xcode，让Xcode为您注册和管理配置文件。
- en: Time for action – controlling the position of the camera roll
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 控制相册的位置
- en: 'Use the following steps to change the position of the default camera roll dialog
    box on an iPad:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤更改iPad上默认相册对话框的位置：
- en: 'Go to the `merges/ios/js` folder of the PhoneGap project you previously created,
    open the `index.js` file, and add a new function named `initAdditionalOptions`:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您之前创建的PhoneGap项目的`merges/ios/js`文件夹，打开`index.js`文件，并添加一个名为`initAdditionalOptions`的新函数：
- en: '[PRE25]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In the body of the `initAdditionalOptions` function, specify the device photo
    album as the source of the `getCamera` method as well as the size and position
    of the popover dialog box:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`initAdditionalOptions`函数的主体中，指定设备相册作为`getCamera`方法的数据源，以及弹出对话框的大小和位置：
- en: '[PRE26]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Add a call to the `initAdditionalOptions` function at the end of the `deviceready`
    event handler:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`deviceready`事件处理器的末尾添加对`initAdditionalOptions`函数的调用：
- en: '[PRE27]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Open the command-line tool and run the `prepare` and `compile` commands (or
    the `build` command) in order to test the project on a real device.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具，运行`prepare`和`compile`命令（或`build`命令），以便在真实设备上测试项目。
- en: '*What just happened?*'
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You handled the size and position of a default dialog box on iOS on an iPad
    using only JavaScript.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 您仅使用JavaScript就在iOS的iPad上处理了默认对话框的大小和位置。
- en: The Media Capture API
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 媒体捕获API
- en: Modern devices offer a huge range of media capabilities to the user; at present,
    people can record a video, record some audio, and take a picture, and use all
    of these media in their communication flow.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现代设备为用户提供了丰富的媒体功能；目前，人们可以录制视频、录制音频、拍照，并在他们的通信流程中使用所有这些媒体。
- en: 'The Media Capture API works asynchronously as most of the PhoneGap APIs and
    provides access to the audio, image, and video capture capabilities of the device.
    In order to start working with this API, you have to install the plugin to your
    project as shown here:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 媒体捕获API与大多数PhoneGap API一样异步工作，并提供对设备音频、图像和视频捕获功能的访问。为了开始使用此API，您必须像下面这样将插件安装到项目中：
- en: '[PRE28]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Once done, you can access the `capture` object stored in the `navigator.device`
    object:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以通过`navigator.device`对象访问存储的`capture`对象：
- en: '[PRE29]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Once you get access to the `capture` object, it''s possible to detect which
    video, audio, and image formats are supported by the device through the following
    properties:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您获得对`capture`对象的访问权限，您可以通过以下属性检测设备支持的哪些视频、音频和图像格式：
- en: '`supportedAudioModes`'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`supportedAudioModes`'
- en: '`supportedImageModes`'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`supportedImageModes`'
- en: '`supportedVideoModes`'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`supportedVideoModes`'
- en: 'Each property returns an array of the `ConfigurationData` objects; each item
    of the array represents a supported media type. There are three properties defined
    in the `ConfigurationData` object that you can use to clearly identify the media
    types supported by the device:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 每个属性都返回一个`ConfigurationData`对象的数组；数组中的每个项目代表一个支持的媒体类型。在`ConfigurationData`对象中定义了三个属性，您可以使用这些属性清楚地识别设备支持的媒体类型：
- en: '`type`: This is a lower case string that represents the supported media type
    following the RFC2046 standard explained at [http://www.ietf.org/rfc/rfc2046.txt](http://www.ietf.org/rfc/rfc2046.txt)
    (that is, `video/3gpp`, `video/quicktime`, `image/jpeg`, `audio/amr`, and so on)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`：这是一个小写字符串，表示根据在[http://www.ietf.org/rfc/rfc2046.txt](http://www.ietf.org/rfc/rfc2046.txt)中解释的RFC2046标准所支持的媒体类型（即，`video/3gpp`、`video/quicktime`、`image/jpeg`、`audio/amr`等）'
- en: '`height`: This is a number that represents the height of the supported image
    or video in pixels (the property returns `0` when the object represents a supported
    audio format)'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`height`：这是一个表示支持的图像或视频高度的数字（当对象表示支持的音频格式时，该属性返回`0`）'
- en: '`width`: This is a number that represents the width of the supported image
    or video in pixels (the property returns `0` when the object represents a supported
    audio format)'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`width`：这是一个表示支持的图像或视频宽度的数字（当对象表示支持的音频格式时，该属性返回`0`）'
- en: Note
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: At the time of writing, the `ConfigurationData` object is not implemented in
    any supported platform. In fact, each of the arrays stored into the `supportedAudioModes`,
    `supportedImageModes`, and `supportedVideoModes` properties are empty.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在撰写本文时，`ConfigurationData`对象在任何支持的平台上都没有实现。实际上，存储在`supportedAudioModes`、`supportedImageModes`和`supportedVideoModes`属性中的每个数组都是空的。
- en: 'The `capture` object exposes three methods in order to access the video, audio,
    and image capture capabilities of the device:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`capture`对象公开了三种方法，以便访问设备的视频、音频和图像捕获功能：'
- en: '`captureVideo`'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`captureVideo`'
- en: '`captureAudio`'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`captureAudio`'
- en: '`captureImage`'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`captureImage`'
- en: 'These methods have the same syntax: each one accepts a success handler, a failure
    handler, and an `option` object as arguments. The success handler is invoked upon
    a successful media capture operation and it receives an array of `MediaFile` objects
    describing each captured file as an argument. The error handler is invoked if
    an error occurs during a media capture operation or when the user cancels the
    operation and receives a `CaptureError` object as an argument. The following example
    captures an image using the device camera:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法具有相同的语法：每个方法都接受一个成功处理程序、一个失败处理程序和一个`option`对象作为参数。成功处理程序在媒体捕获操作成功时被调用，并接收一个`MediaFile`对象的数组作为参数，该数组描述了每个捕获的文件。如果媒体捕获操作期间发生错误或用户取消操作，则调用错误处理程序，并接收一个`CaptureError`对象作为参数。以下示例使用设备相机捕获图像：
- en: '[PRE30]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The `MediaFile` object stored in the files array returned by the success handler
    describes the captured media. The properties of the `MediaFile` object are as
    follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 成功处理程序返回的文件数组中存储的`MediaFile`对象描述了捕获的媒体。`MediaFile`对象的属性如下：
- en: '`fullPath`: This is a string that represents the file path on the device including
    the filename.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fullPath`：这是一个表示设备上文件路径（包括文件名）的字符串。'
- en: '`lastModifiedDate`: This is the modification date of the file expressed as
    the number of milliseconds since January 1, 1970 (refer to [https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Date](https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Date)
    for more information on the `Date` object in JavaScript).'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lastModifiedDate`：这是自1970年1月1日以来的文件修改日期（有关JavaScript中`Date`对象的更多信息，请参阅[https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Date](https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Date)）'
- en: '`name`: This is a string that represents the name of the file. The name is
    composed by the `lastModificationDate` value and the file extension.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这是一个表示文件名的字符串。该名称由`lastModificationDate`值和文件扩展名组成。'
- en: '`size`: This is a number that represents the size of the file in bytes.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`：这是一个表示文件大小的数字（以字节为单位）。'
- en: '`type`: This is a string that represents the mime type of the captured file
    (for example, `image/jpeg`).'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`：这是一个表示捕获文件的MIME类型的字符串（例如，`image/jpeg`）。'
- en: 'The `CaptureError` object returned to the error handler only has one property,
    `code`. This property contains an integer equal to one of the following pseudo
    constants defined in the `CaptureError` object:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 返回给错误处理程序的`CaptureError`对象只有一个属性，即`code`。该属性包含一个整数，等于`CaptureError`对象中定义的以下伪常量之一：
- en: '`CaptureError.CAPTURE_INTERNAL_ERR` (returned value `0`): This means the device
    failed to capture a video, an image, or sound'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CaptureError.CAPTURE_INTERNAL_ERR` (返回值 `0`): 这表示设备未能捕获视频、图像或声音'
- en: '`CaptureError.CAPTURE_APPLICATION_BUSY` (returned value `1`): This means the
    capture application is currently serving another capture request'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CaptureError.CAPTURE_APPLICATION_BUSY` (返回值 `1`): 这表示捕获应用程序目前正在处理另一个捕获请求'
- en: '`CaptureError.CAPTURE_INVALID_ARGUMENT` (returned value `2`): This means the
    app is using invalid arguments when invoking the API (for example, the `limit`
    parameter has a value of less than 1)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CaptureError.CAPTURE_INVALID_ARGUMENT` (返回值 `2`): 这表示在调用API时应用使用了无效的参数（例如，`limit`参数的值小于1）'
- en: '`CaptureError.CAPTURE_NO_MEDIA_FILES` (returned value `3`): This means the
    user exited the camera application or the audio capture application before capturing
    anything'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CaptureError.CAPTURE_NO_MEDIA_FILES` (返回值 `3`): 这表示用户在捕获任何内容之前退出了相机应用程序或音频捕获应用程序'
- en: '`CaptureError.CAPTURE_NOT_SUPPORTED` (returned value `20`): This means the
    requested capture operation is not supported'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CaptureError.CAPTURE_NOT_SUPPORTED` (返回值 `20`): 这表示请求的捕获操作不受支持'
- en: 'The `option` object varies for each method. In fact, the Capture API defines
    a different object for each kind of capture: `CaptureVideoOptions`, `CaptureAudioOptions`,
    and `CaptureImageOptions`. All of these objects have the same properties, limits,
    and modes in common; the `duration` property is defined only in the `CaptureVideoOptions`
    and `CaptureAudioOptions` objects. The default value of the `limit` property is
    `1` and it''s used to specify the number of captures the user can do before returning
    to the app. The `duration` property is the maximum length of a capture in seconds.
    The `mode` property represents the selected video or audio mode.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`option`对象因方法而异。实际上，捕获API为每种捕获定义了一个不同的对象：`CaptureVideoOptions`、`CaptureAudioOptions`和`CaptureImageOptions`。所有这些对象都具有相同的属性、限制和模式；`duration`属性仅在`CaptureVideoOptions`和`CaptureAudioOptions`对象中定义。`limit`属性的默认值是`1`，用于指定用户在返回应用之前可以进行的捕获次数。`duration`属性是捕获的最大长度（以秒为单位）。`mode`属性表示选定的视频或音频模式。'
- en: Note
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Support for the configuration options is very fragmented. For instance, the
    `limit` property of the `CaptureImageOptions` and `CaptureVideoOptions` objects
    is not supported in iOS. Refer to the documentation at [http://docs.phonegap.com/en/edge/cordova_media_capture_capture.md.html#Capture](http://docs.phonegap.com/en/edge/cordova_media_capture_capture.md.html#Capture)
    to check the actual status of the implementation.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 对配置选项的支持非常零散。例如，`CaptureImageOptions`和`CaptureVideoOptions`对象的`limit`属性在iOS中不受支持。请参阅[http://docs.phonegap.com/en/edge/cordova_media_capture_capture.md.html#Capture](http://docs.phonegap.com/en/edge/cordova_media_capture_capture.md.html#Capture)文档以检查实现的实际状态。
- en: The most efficient way to manipulate an image is through native code; however,
    you can also perform simple image manipulations via JavaScript. In order to avoid
    overcomplicating the following example, we have used HTML Canvas to render an
    image with some effects.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 操作图像最高效的方式是通过原生代码；然而，您也可以通过JavaScript执行简单的图像操作。为了避免使以下示例过于复杂，我们使用了HTML Canvas来渲染带有一些效果的图像。
- en: The `<canvas>` tag of HTML is a container used to draw graphics on the fly using
    scripting languages such as JavaScript. It has several inbuilt functions and we
    are going to use them here.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: HTML的`<canvas>`标签是一个容器，用于使用JavaScript等脚本语言动态绘制图形。它有几个内置函数，我们将在下面使用它们。
- en: Note
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on HTML5 Canvas, refer to [http://www.html5canvastutorials.com/](http://www.html5canvastutorials.com/).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 有关HTML5 Canvas的更多信息，请参阅[http://www.html5canvastutorials.com/](http://www.html5canvastutorials.com/)。
- en: Time for action – manipulating images with a canvas
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用canvas操作图像
- en: 'Get ready to apply a sepia effect to an image acquired using the Media Capture
    API. Execute the following steps:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 准备使用媒体捕获API获取的图像应用棕褐色效果。执行以下步骤：
- en: 'Open the command-line tool and create a new PhoneGap project named `ImageEffect`:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行工具并创建一个名为`ImageEffect`的新PhoneGap项目：
- en: '[PRE31]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Change the path to the newly created project:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将路径更改为新创建的项目：
- en: '[PRE32]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Add the Media Capture API plugin using the following command:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令添加媒体捕获API插件：
- en: '[PRE33]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Add a `canvas` tag with the `id` value as `#manipulatedImage` to the existing
    markup, in order to use it to render the manipulated image:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在现有标记中添加一个`canvas`标签，其`id`值为`#manipulatedImage`，以便使用它来渲染操作后的图像：
- en: '[PRE34]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Once the `deviceready` event has been fired, access the device camera, which
    allows the user to access only one image:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦`deviceready`事件被触发，访问设备相机，这允许用户仅访问一个图像：
- en: '[PRE35]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Define the success handler and access the file information stored in the array
    that is returned as an argument:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义成功处理器并访问作为参数返回的数组中存储的文件信息：
- en: '[PRE36]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Get access to the canvas and store a reference to the `2d` context of the canvas,
    in order to be able to draw content on it:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取对画布的访问权限，并存储画布`2d`上下文的引用，以便能够在其上绘制内容：
- en: '[PRE37]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Create an `image` object, assign a handler to the `onload` property, and define
    the `src` property of the object using the `fullPath` property of the `MediaFile`
    object:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`image`对象，将处理器分配给`onload`属性，并使用`MediaFile`对象的`fullPath`属性定义对象的`src`属性：
- en: '[PRE38]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'In the function stored in the `onload` property, draw the image on the canvas,
    get the pixels, manipulate them, and reassign the pixels to the canvas:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在存储在`onload`属性中的函数中，在画布上绘制图像，获取像素，操作它们，并将像素重新分配到画布：
- en: '[PRE39]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The complete code of this example is provided here for your understanding:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 本例的完整代码在此提供，供你理解：
- en: '[PRE40]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You can find the `grayscale` function and several image effects at [http://www.html5rocks.com/en/tutorials/canvas/imagefilters/](http://www.html5rocks.com/en/tutorials/canvas/imagefilters/).
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://www.html5rocks.com/en/tutorials/canvas/imagefilters/](http://www.html5rocks.com/en/tutorials/canvas/imagefilters/)找到`grayscale`函数和几个图像效果。
- en: Note
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'When you refer to any plugins or PhoneGap-specific objects such as `CameraPopoverOptions`,
    you have to wait until the `deviceready` event is fired so that the required objects
    are available for use:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 当你引用任何插件或PhoneGap特定的对象，如`CameraPopoverOptions`时，你必须等待`deviceready`事件被触发，以便所需的对象可用于使用：
- en: '[PRE41]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Some plugins define global objects and they can be used to verify that the
    plugin is loaded and available to use:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 一些插件定义全局对象，并且可以使用它们来验证插件是否已加载并可使用：
- en: '[PRE42]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Summary
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the Contacts API, how to find contacts from
    a device, how to filter contacts, and how to save new contacts to a device. You
    also learned the differences between the Camera and Media Capture APIs and how
    to use them in your application.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了关于联系人API的内容，如何从设备中查找联系人，如何过滤联系人，以及如何将新联系人保存到设备中。你还学习了相机和媒体捕获API之间的区别以及如何在你的应用程序中使用它们。
- en: In the next chapter, you will learn how to access the Device Sensor API in order
    to determine the device orientation, position, and also how to implement the Locations
    API.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何访问设备传感器API以确定设备方向、位置，以及如何实现位置API。
