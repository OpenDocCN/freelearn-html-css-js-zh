- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Writing Less Code – CMSs, No-Code Solutions, and Generative AI
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写更少的代码 – CMS、无代码解决方案和生成式 AI
- en: 'Developers are an inherently lazy bunch. I know that sounds weird but hear
    me out! We are always looking for ways to write *less* code. Sometimes, there
    is a good reason for that: if someone has already put a ton of time and effort
    into writing a library that, say, encrypts data, then why should we waste our
    time re-inventing that particular wheel? We probably shouldn’t in most cases.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者本质上是一群懒惰的人。我知道这听起来很奇怪，但请听我说！我们总是在寻找写更少代码的方法。有时，这样做有很好的理由：如果有人已经投入了大量时间和精力编写了一个库，比如加密数据，那么我们为什么还要浪费时间重新发明这个轮子呢？在大多数情况下，我们可能不应该这样做。
- en: Instead, we’re always looking for tools to automate tasks, to generate code
    for us, or to otherwise save us from ourselves! Of course, I was being facetious
    earlier when I said we’re lazy. No, it’s more about the efficient use of our time.
    After all, you can hammer a nail into a piece of wood with a screwdriver if you
    need to, but it’s far faster and more efficient to use an actual hammer. Just
    like in carpentry, choosing the right tool for a job is key in web development.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们总是在寻找自动化任务、为我们生成代码或以其他方式帮助我们摆脱困境的工具！当然，我之前说我们很懒惰时是在开玩笑。不，这更多的是关于我们时间的有效利用。毕竟，如果你需要，你可以用螺丝刀把钉子敲进一块木头里，但使用实际的锤子要快得多，也有效率得多。就像在木工中一样，选择适合工作的正确工具是网络开发的关键。
- en: So, after talking about writing code for a few chapters, we’re now going to
    talk about how to avoid doing just that – or, at least, minimizing it as much
    as possible and writing code with tools more efficiently! Especially when someone
    is paying you by the hour, you should always look to optimize your time as much
    as possible; there are tools for doing just that that you can avail yourself of,
    and that’s what this chapter is all about, starting with the concept of CMSs,
    including WordPress and Drupal.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在讨论了编写代码的几个章节之后，我们现在将讨论如何避免这样做——或者至少尽可能最小化它，并使用工具更有效地编写代码！尤其是当有人按小时付给你时，你应该始终尽可能优化你的时间；有工具可以做到这一点，这就是本章要介绍的内容，从
    CMS 的概念开始，包括 WordPress 和 Drupal。
- en: We’ll then move on to so-called “no-code solutions,” platforms that allow you
    to build websites in a more visual way. Finally, we’ll talk about how the revolution
    in **artificial intelligence** (**AI**) happening right now can further enhance
    your ability to create without coding (at least not as much).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来将转向所谓的“无代码解决方案”，这些平台允许您以更直观的方式构建网站。最后，我们将讨论目前正在发生的**人工智能**（**AI**）革命如何进一步增强您无需编码（至少不是那么多的）就能创造的能力。
- en: 'So, in this chapter, we’ll cover the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章中，我们将涵盖以下内容：
- en: Introducing WordPress
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 WordPress
- en: Getting to know Drupal
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 Drupal
- en: Throwing away coding altogether – “no-code” solutions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全放弃编码——“无代码”解决方案
- en: Utililzing artificial intelligence
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用人工智能
- en: Introducing WordPress
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 WordPress
- en: The first thing we’re going to talk about is called a **content management system**
    (**CMS**). A CMS is software that allows users to create, manage, and change content
    on a website without needing to have technical knowledge (or at least to minimize
    it as much as possible).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要讨论的第一件事被称为**内容管理系统**（**CMS**）。CMS 是一种软件，允许用户在无需具备技术知识（或至少尽可能减少它）的情况下创建、管理和更改网站上的内容。
- en: A typical CMS will allow users to create pages on a website, very often much
    like creating a document in Microsoft Word or any modern word processor, in a
    visual way. For example, they will allow you to drag images into place, add text
    around them, draw sections on the page, and otherwise create a page without writing
    code. Then, a CMS will normally offer the ability to publish that content, so
    it is live for visitors, as well as provide management capabilities so that you
    can delete pages, reorganize them, modify them, and otherwise maintain them. You
    can create an entire website with a CMS with about the same level of complexity
    as it takes to create Word documents.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的内容管理系统（CMS）将允许用户在网站上创建页面，通常就像在 Microsoft Word 或任何现代文字处理程序中创建文档一样，以直观的方式进行。例如，它们将允许您将图片拖放到适当的位置，围绕它们添加文本，在页面上绘制部分，以及其他不编写代码就能创建页面的方式。然后，CMS
    通常会提供发布该内容的能力，使其对访客可见，并提供管理功能，以便您可以删除页面、重新组织它们、修改它们，以及其他维护它们的方式。您可以使用 CMS 创建一个完整的网站，其复杂程度与创建
    Word 文档大致相同。
- en: A CMS can even supply more advanced functionality. For example, they can allow
    you to have a comment section on your pages where visitors can interact with one
    another socially. They can supply ways to hook into popular social media sites,
    accept uploads from users, implement polls to get feedback from your users, and
    many other capabilities.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个CMS甚至可以提供更高级的功能。例如，它们可以让你在页面上拥有一个评论区，访客可以相互社交互动。它们可以提供连接到流行的社交媒体网站的方法，接受用户的上传，实施调查以获取用户的反馈，以及许多其他功能。
- en: There are many CMSs out there, but perhaps the most popular is WordPress. **WordPress**
    is an open-source CMS known especially for its ease of use, flexibility, and vast
    community that contributes plugins and themes that allow you to expand its functionality
    easily. WordPress was originally a blogging platform, but it has evolved to support
    a wide range of website types nowadays, including e-commerce, portfolios, and
    business sites. Almost anything you can think of can be done with WordPress because
    it is especially known for how customizable it is.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有许多CMS，但最流行的可能是WordPress。**WordPress**是一个开源的CMS，特别以其易用性、灵活性和庞大的社区而闻名，该社区贡献了插件和主题，可以让你轻松扩展其功能。WordPress最初是一个博客平台，但现在已经发展到支持广泛的网站类型，包括电子商务、作品集和商业网站。几乎你可以想到的任何事情都可以用WordPress完成，因为它特别以其可定制性而闻名。
- en: 'In *Figure 8**.1*, you can see the site that is automatically created as a
    result of installing WordPress with basic, default options:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图8**.1*中，你可以看到在安装WordPress时，使用基本默认选项自动创建的网站：
- en: '![Figure 8.1: A default site generated from a basic WordPress installation](img/B18315_08_1.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图8.1：从基本WordPress安装生成的默认网站](img/B18315_08_1.jpg)'
- en: 'Figure 8.1: A default site generated from a basic WordPress installation'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1：从基本WordPress安装生成的默认网站
- en: It’s a great choice for both beginners and advanced developers due to its user-friendly
    interface and extensive documentation. Many developers will build websites on
    WordPress, but non-technical users can use it just as well.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其用户友好的界面和广泛的文档，它对初学者和高级开发者都是一个很好的选择。许多开发者会在WordPress上构建网站，但非技术用户也可以同样使用它。
- en: Let’s look at some of the key features of WordPress next.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看WordPress的一些主要功能。
- en: Key features
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**主要功能**'
- en: 'Some of the most important features that WordPress offers include the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress提供的一些最重要的功能包括以下内容：
- en: '**Themes and plugins**: WordPress has thousands of themes and plugins available,
    allowing users to enhance the functionality and appearance of their websites without
    all that mucking about in HTML, CSS, and JavaScript. Themes control the visual
    presentation, while plugins add features such as contact forms, user polls, message
    forms, and e-commerce capabilities.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题和插件**：WordPress有数千种主题和插件可供选择，使用户能够在不涉及HTML、CSS和JavaScript的情况下增强其网站的功能和外观。主题控制视觉呈现，而插件添加了如联系表单、用户调查、消息表单和电子商务功能等特性。'
- en: '**SEO**: WordPress websites tend to rank well on search engines because they
    offer SEO-friendly features and plugins such as Yoast SEO to optimize content.
    The websites it produces are inherently geared toward SEO by design.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEO**：WordPress网站往往在搜索引擎中排名很高，因为它们提供SEO友好的功能和插件，如Yoast SEO，以优化内容。它产生的网站在设计上本身就倾向于SEO。'
- en: '**User-friendly**: WordPress has an intuitive dashboard interface that’s easy
    to navigate, making content management and site administration straightforward.
    Everything you need can be found in one place and presented in an easy-to-understand
    way.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户友好**：WordPress拥有直观的仪表板界面，易于导航，使得内容管理和网站管理变得简单。你需要的一切都可以在一个地方找到，并以易于理解的方式呈现。'
- en: '**Community**: With a large global community, WordPress has extensive forums,
    tutorials, and resources for troubleshooting and learning. You’ll never be out
    in the cold trying to figure something out on your own; help is always just a
    few keystrokes away.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区**：拥有庞大的全球社区，WordPress拥有广泛的论坛、教程和资源，用于故障排除和学习。你永远不会孤立无援，试图自己解决问题；帮助总是只需几个按键的距离。'
- en: '**Updates**: The WordPress team frequently updates their code for security
    and functionality, ensuring the software remains current, stable, and secure.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新**：WordPress团队经常更新他们的代码以确保安全和功能，确保软件保持最新、稳定和安全。'
- en: '**Reach**: WordPress is widely used by bloggers, small businesses, and even
    large corporations, demonstrating its versatility and reliability as a website
    platform.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适用范围**：WordPress被博客作者、小型企业和甚至大公司广泛使用，这证明了它作为一个网站平台的多样性和可靠性。'
- en: The dashboard interface, which you can see in *Figure 8**.2*, is the primary
    way you interact with WordPress. It allows you to control all of its functionality,
    and it’s worth seeing to understand how comprehensive WordPress really is. Of
    course, keep in mind that what you see in it may differ from installation to installation,
    depending on what plugins you have installed.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在*图8.2*中看到的仪表板界面是您与WordPress交互的主要方式。它允许您控制其所有功能，了解WordPress的全面性是值得一看的。当然，请记住，您在其中看到的内容可能因安装而异，具体取决于您安装了哪些插件。
- en: '![Figure 8.2: The WordPress dashboard in all its glory](img/B18315_08_2.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2：WordPress仪表板的全部辉煌](img/B18315_08_2.jpg)'
- en: 'Figure 8.2: The WordPress dashboard in all its glory'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2：WordPress仪表板的全部辉煌
- en: 'It’s also important to note that WordPress is not just one thing, not just
    a piece of software. It’s divided into two versions that serve different needs
    and have requirements different from yours as a developer:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意的是，WordPress不仅仅是一件事，不仅仅是一块软件。它分为两个版本，服务于不同的需求，并且对开发者的要求与您不同：
- en: '**WordPress.org** ([wordpress.org](http://wordpress.org)): This is where you
    can find open-source software that’s free to use. To use it, you need to have
    a server to run it on, and most likely your own domain name will need to be purchased.
    It offers full customization with access to all plugins and themes, both free
    and premium. This version is ideal for those who want full control over their
    website’s functionality and design and who don’t have a problem with administering
    their own server and managing software on it.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WordPress.org** ([wordpress.org](http://wordpress.org)): 您可以在这里找到免费使用的开源软件。要使用它，您需要有一个服务器来运行它，并且很可能会需要购买自己的域名。它提供了对所有插件和主题的完全定制访问，包括免费和付费的。这个版本非常适合那些想要完全控制他们网站的功能和设计，并且不介意管理自己的服务器和上面软件的人。'
- en: '**WordPress.com** ([wordpress.com](http://wordpress.com)): This is a commercial
    offering that offers hosting of websites created with WordPress. With this version,
    you don’t need your own server and don’t need to install WordPress yourself; it’s
    all managed for you. You simply purchase a plan and get to building your website
    immediately, but it otherwise offers all the same capabilities as self-hosting.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WordPress.com** ([wordpress.com](http://wordpress.com)): 这是一个商业服务，提供使用WordPress创建的网站托管服务。使用这个版本，您不需要自己的服务器，也不需要自己安装WordPress；所有这些都将由他们为您管理。您只需购买一个计划，就可以立即开始构建您的网站，但除此之外，它还提供了与自托管相同的所有功能。'
- en: That’s the functional angle, but what about the technology WordPress is built
    on? Let’s talk briefly about that.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 那是功能角度，但WordPress建立在什么技术上呢？让我们简要谈谈这一点。
- en: Understanding the technical perspective
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解技术视角
- en: 'From a technical perspective, WordPress is a robust and versatile CMS with
    the following technical characteristics:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，WordPress是一个强大且灵活的内容管理系统，具有以下技术特性：
- en: '**PHP**: WordPress is written in PHP. This handles server-side execution and
    provides all the functionality WordPress offers, including the ability to update
    WordPress itself seamlessly on a live site without downtime.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHP**: WordPress是用PHP编写的。它处理服务器端执行，并提供WordPress提供的所有功能，包括在实时网站上无缝更新WordPress本身的能力，而无需停机。'
- en: '**MySQL**: One of the most popular open-source relational databases out there,
    MySQL is used by WordPress to store the actual user-generated content, settings,
    and user data.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MySQL**: MySQL是最受欢迎的开源关系型数据库之一，WordPress使用MySQL来存储实际的用户生成内容、设置和用户数据。'
- en: '**Plugins**: The ability to extend functionality without having to update to
    a whole new version of WordPress is what the plugin architecture enables. Through
    it, you can add custom features and functionalities modularly, without altering
    core WordPress code.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件**: 插件架构允许在不更新到全新版本WordPress的情况下扩展功能。通过它，您可以模块化地添加自定义功能和功能，而无需更改WordPress的核心代码。'
- en: '**Themes**: The presentation layer of WordPress is controlled by themes, which
    are collections of PHP, HTML, CSS, and JavaScript files that work together to
    dictate the visual layout and style of the site.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题**: WordPress的表现层由主题控制，这些主题是PHP、HTML、CSS和JavaScript文件的集合，它们协同工作以定义网站的视觉布局和样式。'
- en: '**The Loop**: This is a fundamental part of WordPress responsible for processing
    each post and displaying its content, allowing for dynamic content. Things such
    as showing a new blog post pulled from the database and displayed through a theme
    is what The Loop is all about. The basic structure of The Loop is as follows:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**循环**: 这是WordPress的一个基本部分，负责处理每个帖子并显示其内容，允许动态内容。例如，显示从数据库中拉取并通过主题显示的新博客帖子就是循环的主要内容。循环的基本结构如下：'
- en: '[PRE0]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `have_posts()` function will determine whether there are any posts to be
    displayed. If there are, the `while` loop begins. In that loop, for each post,
    the `the_post()` function is called to get the data for the post. Then, template
    files from the theme are used in conjunction with the data for the post. This
    data is inserted where specific tags in the templates are found, and the result
    is HTML to be displayed for each post.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`have_posts()`函数将确定是否有要显示的帖子。如果有，`while`循环开始。在该循环中，对于每个帖子，调用`the_post()`函数以获取帖子的数据。然后，使用主题的模板文件与帖子的数据结合使用。这些数据被插入到模板中特定的标签位置，结果是为每个帖子生成要显示的HTML。'
- en: '**REST API**: WordPress offers a robust REST API giving developers an interface
    to use to interact with a WordPress site remotely by sending and receiving JSON
    objects, making WordPress a headless CMS option. This means that you can store
    and manage your content in WordPress but display it through custom code if you
    wish.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API**: WordPress提供了一个强大的REST API，为开发者提供了一个接口，可以通过发送和接收JSON对象远程与WordPress站点交互，使WordPress成为无头CMS选项。这意味着您可以在WordPress中存储和管理内容，但如果需要，也可以通过自定义代码来显示它。'
- en: '**Actions**: These are hooks (bits of code, essentially) that WordPress core
    executes at specific points during execution, or when specific events occur. Plugins
    can specify actions to execute at these points, providing a way to enhance WordPress
    when specific events occur, such as a user leaving a comment, for example.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动作**: 这些是在执行过程中或在特定事件发生时WordPress核心执行的操作（基本上是代码片段）。插件可以指定在这些点执行的动作，提供在特定事件发生时增强WordPress的方法，例如，当用户发表评论时。'
- en: '**Filters**: These are bits of code that allow modification of data before
    it is saved or sent to the browser. This is crucial for customizing the functionality
    of WordPress without changing the core files. As some examples, filters can be
    used to automatically do things such as change the formatting of content (perhaps
    to highlight key phrases), place related posts beneath your content, or truncate
    text to ensure it always fits on the page in an aesthetically pleasing way.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过滤器**: 这些是在数据保存或发送到浏览器之前允许修改数据的代码片段。这对于在不更改核心文件的情况下自定义WordPress的功能至关重要。例如，过滤器可以用于自动执行诸如更改内容格式（可能是突出显示关键短语）、在您的内容下方放置相关帖子或截断文本以确保它始终以美观的方式适应页面等操作。'
- en: '**Security measures**: WordPress has built-in security measures such as regular
    updates. But being a popular platform for online content, it’s a common target
    for attacks. Thus, security is often bolstered with plugins, secure hosting, and
    best practices in website management. For example, some plugins can monitor for
    hack attempts and alert you, while others can enforce password policies for your
    users to promote more secure passwords.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全措施**: WordPress内置了诸如定期更新之类的安全措施。但由于它是一个流行的在线内容平台，因此经常成为攻击的目标。因此，通常通过插件、安全托管和网站管理的最佳实践来加强安全性。例如，一些插件可以监控黑客攻击并提醒您，而其他插件可以强制执行用户的密码策略，以促进更安全的密码。'
- en: '**Multisite capability**: WordPress allows running multiple sites from a single
    WordPress installation. This allows for the efficient use of server resources:
    you don’t need to build a separate server for each WordPress site since one server
    can handle many sites.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多站点功能**: WordPress允许从单个WordPress安装运行多个站点。这允许高效地使用服务器资源：您不需要为每个WordPress站点构建单独的服务器，因为一个服务器可以处理多个站点。'
- en: '**Compatibility and standards**: WordPress always strives to follow web standards
    set by the W3C, ensuring compatibility with different browsers and devices and
    ensuring accessibility for those with disabilities.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性和标准**: WordPress始终努力遵循W3C设定的网络标准，确保与不同浏览器和设备的兼容性，并为有障碍人士提供可访问性。'
- en: From a developer’s perspective, WordPress offers a balance of user-friendly
    interface and extensive customizability, making it suitable for both beginners
    and experienced developers. But its real attraction is *not* writing code. Using
    a **What You See Is What You Get** (**WYSIWYG**) interface allows developers and
    non-developers alike to drag and drop content quickly and easily. It’s nice to
    know though that for more advanced use cases, there are ways you *can* interact
    with WordPress in a more traditional developer sense. In any case, as a fledgling
    web developer, I thought you should have some general idea of what the technical
    structure of WordPress was like too.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，WordPress提供了用户友好界面和广泛的定制性之间的平衡，使其既适合初学者也适合经验丰富的开发者。但它的真正吸引力**不是**编写代码。使用**所见即所得**（**WYSIWYG**）界面允许开发者和非开发者
    alike 快速轻松地拖放内容。不过，了解这一点也很不错，那就是对于更高级的使用案例，有方法你可以以更传统的开发者方式与WordPress交互。无论如何，作为一个初出茅庐的网页开发者，我认为你应该对WordPress的技术结构有一个大致的了解。
- en: WordPress isn’t the only popular CMS in town, though. Let’s look at another
    of its main competitors now, the one known on the streets as Drupal.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然WordPress不是镇上唯一的流行CMS，但让我们现在看看它的另一个主要竞争对手，在街头被称为Drupal。
- en: Getting to know Drupal
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Drupal
- en: Drupal is another popular open-source CMS, well known for its robustness and
    flexibility. It is especially well suited to complex, large-scale websites and
    applications as a result.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal是另一个流行的开源CMS，以其健壮性和灵活性而闻名。由于其特别适合复杂的大型网站和应用，因此备受青睐。
- en: 'You can see the example site that Drupal creates when you install it with basic,
    default options in *Figure 8**.3*:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在**图8.3**中看到，当你使用基本默认选项安装Drupal时，Drupal创建的示例网站。3：
- en: '![Figure 8.3: A default site created by a basic installation of Drupal](img/B18315_08_3.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3：由基本安装的Drupal创建的默认网站](img/B18315_08_3.jpg)'
- en: 'Figure 8.3: A default site created by a basic installation of Drupal'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3：由基本安装的Drupal创建的默认网站
- en: Drupal is more of a developer-centric CMS in a sense, given that setting it
    up and using it requires more technical knowledge than WordPress. WordPress is
    designed from its core to be user-friendly and is geared toward non-technical
    users, whereas Drupal isn’t, at least not to the same extent. One of the key reasons
    is that where WordPress offers a hosted option, Drupal does not. You’ll be setting
    up your own instance of Drupal on your own server if you want to use it, and that
    simply requires more technical know-how.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在某种程度上，Drupal更是一个以开发者为中心的CMS，因为设置和使用它需要比WordPress更多的技术知识。WordPress从核心设计就是用户友好的，并且面向非技术用户，而Drupal则不是，至少没有达到同样的程度。其中一个关键原因在于，WordPress提供托管选项，而Drupal则没有。如果你想使用Drupal，你需要在自己的服务器上设置自己的实例，这需要更多的技术知识。
- en: Also, WordPress is WYSIWYG out of the box, whereas Drupal is not. Drupal provides
    a more limited interface for creating and maintaining content, essentially just
    a text editor where you can apply some formatting. Creating full-fledged websites
    with Drupal requires more direct editing of content rather than just dragging
    and dropping elements around as in WordPress. That said, Drupal can be extended
    with plugins that can allow it to reach – more or less – parity with WordPress
    in this regard. Again, Drupal is more geared toward developers, and while you
    aren’t writing code per se, it’s closer to that than to WordPress’s visually oriented
    content creation approach.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，WordPress是开箱即用的WYSIWYG，而Drupal则不是。Drupal提供了一个更有限的界面来创建和维护内容，本质上只是一个可以应用一些格式的文本编辑器。使用Drupal创建完整的网站需要直接编辑内容，而不是像WordPress那样简单地拖放元素。尽管如此，Drupal可以通过插件扩展，使其在这方面与WordPress达到更多或更少的相似性。再次强调，Drupal更倾向于开发者，虽然你并不是在编写代码，但它比WordPress的视觉内容创建方法更接近。
- en: In *Figure 8**.4*, you can begin to get a feel for how more technical Drupal
    is than WordPress by looking at just the **Configuration** tab available in the
    management console, which is just one of many comparatively complex screens with
    lots of more technically oriented options.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图8.4**中，你可以通过查看管理控制台中的**配置**选项卡来开始了解Drupal比WordPress更技术性的方面，这是众多相对复杂的屏幕之一，拥有许多更多技术导向的选项。
- en: '![Figure 8.4: The Configuration tab of the Drupal management console](img/B18315_08_4.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4：Drupal管理控制台的配置选项卡](img/B18315_08_4.jpg)'
- en: 'Figure 8.4: The Configuration tab of the Drupal management console'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4：Drupal管理控制台的配置选项卡
- en: Let’s look at some of the key features of Drupal next.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们接下来看看Drupal的一些关键特性。
- en: Key features
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**关键特性**'
- en: 'Some key points about Drupal to consider include the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑Drupal的一些关键点包括以下内容：
- en: '**PHP**: Like WordPress, Drupal is written in PHP, making it flexible and extensible.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHP**：与WordPress一样，Drupal是用PHP编写的，这使得它灵活且可扩展。'
- en: '**Database integration**: While WordPress only works with MySQL, Drupal supports
    multiple databases, including MySQL, PostgreSQL, SQLite, and MariaDB, for storing
    content and settings. It does this by way of a database abstraction layer, which
    means an API that the Drupal code is written against, which then translates the
    Drupal function calls to database-specific calls.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库集成**：虽然WordPress仅支持MySQL，但Drupal支持多种数据库，包括MySQL、PostgreSQL、SQLite和MariaDB，用于存储内容和设置。它是通过数据库抽象层实现的，这意味着一个API，Drupal代码就是针对这个API编写的，然后它将Drupal函数调用转换为特定数据库的调用。'
- en: '**Modularity and extensibility**: Instead of plugins, Drupal uses modules to
    extend its functionality. Different name, but same basic idea. There are thousands
    of community-contributed modules available for various features, including all
    the same sorts of things WordPress offers.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块化和可扩展性**：Drupal不是使用插件来扩展其功能，而是使用模块。名称不同，但基本理念相同。社区贡献了数千个模块，可用于各种功能，包括WordPress提供的一切。'
- en: '**Themes**: Similar to WordPress, Drupal uses themes to define the look and
    feel of a website. Themes in Drupal are highly customizable via HTML, CSS, and
    JavaScript coding.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题**：与WordPress类似，Drupal使用主题来定义网站的样式和感觉。Drupal的主题可以通过HTML、CSS和JavaScript编码进行高度定制。'
- en: '**Content structure**: Known for its powerful content structuring capabilities,
    Drupal allows the creation of multiple content types with custom attributes and
    fields. It’s more than just web pages in Drupal land; it’s whatever type of content
    you need, be it videos, images, PDF files, Excel spreadsheets, and so on.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容结构**：以其强大的内容结构能力而闻名，Drupal允许创建具有自定义属性和字段的多个内容类型。在Drupal的世界里，不仅仅是网页；你需要任何类型的内容，无论是视频、图片、PDF文件、Excel电子表格等等。'
- en: '**Access control**: Drupal provides an advanced user role and permission system,
    enabling granular access control for different types of users. Because Drupal
    is known for its strong security features, it is often chosen for government and
    enterprise websites. It also offers in-depth security reports and regular updates.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问控制**：Drupal提供高级用户角色和权限系统，为不同类型的用户提供细粒度的访问控制。由于Drupal以其强大的安全功能而闻名，它通常被选用于政府和企业网站。它还提供深入的安全报告和定期更新。'
- en: '**Performance and scalability**: Drupal is designed from the ground up for
    performance and scalability, handling large amounts of data and traffic efficiently.
    It has built-in caching features and can be integrated with external caching systems
    for high-traffic websites.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和可扩展性**：Drupal从一开始就是为了性能和可扩展性而设计的，能够高效地处理大量数据和流量。它具有内置的缓存功能，并且可以与外部缓存系统集成，适用于高流量网站。'
- en: '**Community and ecosystem**: Drupal has an active community of developers,
    designers, and content managers, providing extensive support through forums, documentation,
    and events.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区和生态系统**：Drupal有一个活跃的开发者、设计师和内容经理社区，通过论坛、文档和活动提供广泛的支持。'
- en: '**API-first approach**: Drupal supports a *headless* or *decoupled* architecture,
    meaning that the frontend (what a user sees) is separated from the backend (where
    content is stored), allowing for more flexibility in content delivery.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以API为第一的方法**：Drupal支持*无头*或*解耦*架构，这意味着前端（用户看到的部分）与后端（内容存储的地方）是分离的，这允许在内容交付方面有更大的灵活性。'
- en: '**Multilingual capabilities**: Drupal offers extensive multilingual features
    out of the box, allowing for easy content translation and site localization.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多语言功能**：Drupal自带广泛的多语言功能，允许轻松进行内容翻译和网站本地化。'
- en: '**Version updates**: Unlike WordPress, which can be updated seamlessly, Drupal’s
    version updates are significant, often requiring considerable effort to migrate
    from one major version to another.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本更新**：与WordPress可以无缝更新不同，Drupal的版本更新是重大的，通常需要相当大的努力才能从一个主要版本迁移到另一个。'
- en: Drupal is particularly suited for complex, data-driven websites and those requiring
    extensive content organization, such as community platforms, online stores, and
    corporate websites. Its steep learning curve can be challenging for beginners
    but offers powerful solutions for experienced developers.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal特别适合复杂、数据驱动的网站以及需要大量内容组织的网站，如社区平台、在线商店和公司网站。其陡峭的学习曲线对初学者来说可能具有挑战性，但为经验丰富的开发者提供了强大的解决方案。
- en: Given that more developer-centric focus, you might imagine there is more to
    say about Drupal from a technical perspective, and you’re right, and that’s what
    we’re discussing next.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 由于更注重开发者导向，你可能想象从技术角度来看，关于Drupal还有很多可以说的，而且你是对的，这正是我们接下来要讨论的。
- en: Understanding the technical perspective
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解技术视角
- en: 'From a technical perspective, Drupal stands out for its robust architecture,
    advanced customization capabilities, and strong focus on scalability and security.
    Here are some key technical points:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，Drupal因其强大的架构、先进的定制能力和对可扩展性和安全性的强烈关注而脱颖而出。以下是一些关键技术点：
- en: '**Modularity**: Drupal’s architecture is highly modular, allowing for extensive
    customization. Core functionalities can be extended or overridden with custom
    modules.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块化**：Drupal的架构高度模块化，允许进行广泛的定制。核心功能可以通过自定义模块进行扩展或覆盖。'
- en: '**Hook system**: Drupal employs a hook system that allows modules to interact
    with the core and alter or extend its behavior without modifying the core files.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**钩子系统**：Drupal采用钩子系统，允许模块与核心交互，修改或扩展其行为，而无需修改核心文件。'
- en: '**Performance**: As mentioned before, Drupal has extensive caching mechanisms
    (such as Page Cache and Block Cache) to improve performance. It also supports
    robust integration with external caching systems such as Varnish and Memcached
    to further improve performance.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：如前所述，Drupal具有广泛的缓存机制（如页面缓存和块缓存）来提高性能。它还支持与外部缓存系统（如Varnish和Memcached）的强大集成，以进一步提高性能。'
- en: '**Theming**: Drupal uses the Twig templating engine, which is a flexible, secure,
    and fast templating engine, for implementing its themes. Drupal themes are inherently
    responsive, ensuring websites work well on various devices.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题化**：Drupal使用Twig模板引擎，这是一个灵活、安全且快速的模板引擎，用于实现其主题。Drupal的主题天生具有响应性，确保网站在各种设备上都能良好运行。'
- en: '**API-first approach**: Drupal supports RESTful APIs, allowing for headless
    or decoupled architectures where the frontend is separated from the backend. In
    fact, it does this internally, meaning that Drupal itself is conceptually separated
    like this.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以API为首要方法**：Drupal支持RESTful API，允许实现前端与后端分离的无头或解耦架构。实际上，它就是这样内部实现的，这意味着Drupal在概念上就是这样分离的。'
- en: '**Security**: Drupal offers a sophisticated **Role-Based Access Control** (**RBAC**)
    system, allowing detailed permissions and user management, generally considered
    to be more robust and better suited to the needs of large businesses.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：Drupal提供了一套复杂的基于角色的访问控制（RBAC）系统，允许详细的权限和用户管理，通常被认为更健壮且更适合大型企业的需求。'
- en: '**Quality assurance**: Drupal includes a comprehensive testing framework, supporting
    unit, functional, and integration testing, and it enforces strict coding standards,
    contributing to the overall quality and maintainability of the code.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量保证**：Drupal包括一个全面的测试框架，支持单元测试、功能测试和集成测试，并强制执行严格的编码标准，有助于提高代码的整体质量和可维护性。'
- en: '**Taxonomy system**: Drupal has a highly sophisticated taxonomy system, enabling
    intricate categorization and tagging of content.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类系统**：Drupal拥有一个高度复杂的分类系统，能够实现内容的复杂分类和标签化。'
- en: '**Localization support**: Drupal has strong multilingual and localization capabilities
    built into the core, making it suitable for international and multi-language sites.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地化支持**：Drupal在核心中集成了强大的多语言和本地化功能，使其适合国际和多语言网站。'
- en: '**Configuration management**: Drupal has a sophisticated configuration management
    system. It allows developers to easily manage and transfer configuration changes
    from development to production environments, a critical feature for complex and
    large-scale website development. It is, in a sense, built-in DevOps!'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置管理**：Drupal拥有一个复杂的配置管理系统。它允许开发者轻松管理和将配置更改从开发环境转移到生产环境，这对于复杂和大规模网站开发是一个关键特性。在某种程度上，它是内置的DevOps！'
- en: '**Views module**: One of Drupal’s most powerful features, the Views module
    allows users to create, manage, and display lists of content. Unlike WordPress,
    where similar functionality is achieved through plugins, Views is integrated into
    Drupal core in its recent versions.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图模块**：Drupal最强大的功能之一是视图模块，它允许用户创建、管理和显示内容列表。与WordPress通过插件实现类似功能不同，视图模块在Drupal的最新版本中已集成到核心中。'
- en: '**Block system**: Drupal’s block system is another key feature. It allows for
    the placement of content and other elements in region-specific blocks on a page,
    offering extensive layout customization.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**块系统**：Drupal的块系统是另一个关键特性。它允许在页面上特定区域块中放置内容和其它元素，提供了广泛的布局定制。'
- en: '**APIs**: Drupal functions not only as a CMS but also as a framework, allowing
    developers to build custom applications on top of it. It offers a range of APIs
    for different functionalities, such as database management, theming, and user
    management.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APIs**：Drupal不仅作为一个CMS，还作为一个框架，允许开发者在它之上构建自定义应用程序。它提供了一系列API，用于不同的功能，如数据库管理、主题和用户管理。'
- en: To summarize, Drupal is, in a sense, a developer’s CMS. Meanwhile, WordPress
    can still require some technical knowledge, yet is much more focused on end users.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Drupal在某种程度上是一个开发者的CMS。而WordPress虽然可能仍需要一些技术知识，但更多地关注最终用户。
- en: But recently, a new kid on the block has arrived that takes the vision of WordPress
    to a whole new level, and that’s the land of no-code solutions, which is the next
    stop on our train ride to web developer expertise!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 但最近，一个新的小家伙出现了，它将WordPress的愿景提升到了一个新的水平，那就是无代码解决方案的领域，这是我们通往网络开发者专业知识的下一站！
- en: Throwing away coding altogether – “no-code” solutions
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完全放弃编码——“无代码”解决方案
- en: While a CMS such as WordPress – and Drupal, to a lesser extent – can be user-friendly
    and can be used by non-technical users in the case of WordPress, there is a whole
    other class of tools that takes this a giant step further into the realm of no-code
    solutions. WordPress really does come pretty close, and some would probably even
    argue that it *is literally* a no-code solution, especially the WordPress.com
    side of it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然像WordPress这样的CMS（内容管理系统）——以及程度较低的Drupal——可以非常用户友好，WordPress的情况下甚至可以由非技术用户使用，但还有另一类工具将这一概念推进了一大步，进入了无代码解决方案的领域。WordPress确实非常接近无代码解决方案，有些人甚至可能争论说它**实际上**就是一个无代码解决方案，尤其是WordPress.com这一部分。
- en: But true no-code solutions really step this paradigm up and become something
    that *anyone* can use with virtually zero technical knowledge.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 但真正的无代码解决方案真正提升了这一范式，并成为**任何人**都可以使用，几乎不需要任何技术知识的工具。
- en: '**No-code solutions** are tools that allow users to build and manage applications
    and websites without the need for programming skills. These solutions are designed
    to be user-friendly, often using drag-and-drop interfaces and pre-built templates,
    and generally present a visual development environment to the non-technical user.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**无代码解决方案**是允许用户在不需编程技能的情况下构建和管理应用程序和网站的工具。这些解决方案旨在易于使用，通常使用拖放界面和预构建模板，并且通常向非技术用户提供一个视觉开发环境。'
- en: 'These solutions democratize web app and website development, enabling business
    professionals, entrepreneurs, and hobbyists to create digital content. And, while
    you definitely can create robust web apps with them, it’s more common to find
    more static websites being built with them. This is largely down to the visual
    development paradigm they typically employ: it’s far easier to represent static
    content in a visual builder tool than it is dynamic interactions (though not impossible,
    to be clear).'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这些解决方案使网络应用和网站开发民主化，使商业专业人士、企业家和爱好者能够创建数字内容。虽然你当然可以用它们创建强大的网络应用，但更常见的是用它们构建静态网站。这很大程度上归因于它们通常采用的视觉开发范式：在视觉构建工具中表达静态内容比动态交互要容易得多（尽管并非不可能，要清楚这一点）。
- en: No-code solutions are particularly popular among small businesses, start-ups,
    and non-technical users in larger organizations. They can be used to build websites,
    mobile apps, and internal business applications and even to automate business
    workflows.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 无代码解决方案在小型企业、初创公司和大型组织中的非技术用户中特别受欢迎。它们可以用来构建网站、移动应用和内部业务应用程序，甚至可以用来自动化业务工作流程。
- en: It’s important to note that no-code solutions are not usually something you
    install yourself and they aren’t pieces of software per se. Almost always, they
    are themselves websites that you go to that provide all the functionality you
    need in one place. You don’t need to worry about servers, domain names, or, of
    course, programming or anything else because these solutions are all-encompassing,
    including hosting. You’ll build your website there, and it will be immediately
    available on the internet at the click of a button.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，无代码解决方案通常不是你自己安装的东西，它们本身也不是软件本身。几乎总是，它们是你可以访问的网站，提供你所需的所有功能集中在一个地方。你不需要担心服务器、域名，当然，也不需要担心编程或其他任何事情，因为这些解决方案是全面的，包括托管。你将在那里建立你的网站，点击一下按钮，它就会立即在互联网上可用。
- en: 'The key aspects of these no-code solutions include the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这些无代码解决方案的关键方面包括以下内容：
- en: '**User interface (UI)**: No-code solutions usually feature a GUI that allows
    users to build apps and websites by visually manipulating elements. This can include
    dragging and dropping components such as text boxes, buttons, and images onto
    a canvas.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户界面（UI）**: 无代码解决方案通常具有图形用户界面（GUI），允许用户通过视觉操作元素来构建应用程序和网站。这可能包括将文本框、按钮和图像等组件拖放到画布上。'
- en: '**Customization**: Although no-code solutions offer less customization than
    hand-coding does, many of these solutions provide a range of templates and modules
    that can be tailored to meet specific needs. Users can often customize the look
    and feel of their results, again in a visually driven way that doesn’t require
    coding.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定制**: 虽然无代码解决方案提供的定制选项比手动编码少，但许多这些解决方案提供了一系列模板和模块，可以根据特定需求进行定制。用户通常可以自定义其结果的外观和感觉，再次以视觉驱动的方式，无需编码。'
- en: '**Integration**: Many no-code solutions offer integrations with other software
    and services at the click of a button. This allows users to connect their no-code
    solutions with existing tools and systems, such as databases, CRM systems, or
    email servers.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成**: 许多无代码解决方案提供一键式与其他软件和服务的集成。这使用户能够将他们的无代码解决方案与现有的工具和系统连接起来，例如数据库、CRM系统或电子邮件服务器。'
- en: '**Data handling and analytics**: Many no-code solutions offer built-in tools
    for data management, analytics, and reporting. Users can create forms, manage
    databases, and visualize data without coding. This feature is particularly useful
    for businesses that need to gather insights about how their website is being accessed,
    or for dealing with data generally, but who lack the technical expertise for complex
    data handling.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据处理和分析**: 许多无代码解决方案提供内置的工具用于数据管理、分析和报告。用户可以创建表单、管理数据库，并可视化数据，而无需编码。这个特性对于需要收集有关其网站访问情况的见解的企业特别有用，或者对于处理数据，但缺乏复杂数据处理技术专长的企业。'
- en: '**Collaboration**: No-code solutions often emphasize collaboration, allowing
    multiple users to work on a project simultaneously. This can include version control,
    role-based access, and real-time editing, but with a more user-friendly model
    than even something such as GitHub provides.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**: 无代码解决方案通常强调协作，允许多个用户同时在一个项目上工作。这可能包括版本控制、基于角色的访问和实时编辑，但比GitHub等工具提供更用户友好的模型。'
- en: '**Responsive design**: Most no-code solutions automatically ensure that the
    generated results are responsive, meaning they will adapt to different screen
    sizes, from desktops to smartphones. This is crucial in today’s multi-device environment.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应式设计**: 大多数无代码解决方案自动确保生成的结果是响应式的，这意味着它们将适应不同的屏幕尺寸，从桌面到智能手机。在当今的多设备环境中，这一点至关重要。'
- en: '**Marketplaces**: Some no-code solutions offer marketplaces where users can
    find additional plugins or extensions, created either by the solution provider
    or third-party developers. These add-ons can extend the functionality of the base
    platform.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**市场**: 一些无代码解决方案提供市场，用户可以找到额外的插件或扩展，这些插件或扩展是由解决方案提供商或第三方开发者创建的。这些附加组件可以扩展基础平台的功能。'
- en: '**Community and support**: The rise of no-code solutions has had the result
    of creating vibrant user communities where people share tips, templates, and best
    practices. Most solutions also offer robust customer support and educational resources
    to help users maximize the solution’s potential.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社区和支持**: 无代码解决方案的兴起导致了充满活力的用户社区的诞生，人们在这里分享技巧、模板和最佳实践。大多数解决方案还提供强大的客户支持和教育资源，以帮助用户最大化解决方案的潜力。'
- en: '**Cross-platform**: No-code solutions can be used from any device, regardless
    of hardware specifications, OS, or other considerations. This makes them more
    accessible to more people.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨平台**：无代码解决方案可以从任何设备使用，无论硬件规格、操作系统或其他考虑因素。这使得它们对更多人来说更容易获取。'
- en: '**Security and compliance**: Any good no-code solution will be designed with
    security in mind and adhere to industry-standard compliance regulations. It’ll
    ultimately be up to the users of these solutions how to implement it, but the
    tools for solid security should be provided.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全和合规性**：任何好的无代码解决方案都会考虑到安全性，并遵守行业标准合规法规。最终，如何实施这些解决方案将由用户决定，但应该提供确保安全性的工具。'
- en: '**Economic impact**: By enabling more people to build websites and web apps,
    no-code solutions are lowering the barrier to entry in the tech world, potentially
    leading to more innovation and economic growth, especially in sectors where technology
    adoption was previously limited.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经济影响**：通过使更多人能够构建网站和Web应用程序，无代码解决方案正在降低科技世界的进入门槛，可能导致更多创新和经济增长，尤其是在技术采用之前受限的行业。'
- en: To begin to get a feel for what such a solution looks like, take a look at *Figure
    8**.5*. This is the designer interface for GoDaddy, which is a popular no-code
    solution. In it, you can see how just clicking an element provides an editor on
    the right where you can easily change all sorts of parameters (this is for a site
    generated for me from a starting template for an online candle store).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始了解这种解决方案的样子，请看看*图8.5**。这是GoDaddy的设计师界面，它是一个流行的无代码解决方案。在其中，你可以看到只需点击一个元素，就在右侧提供了一个编辑器，你可以轻松地更改所有
    sorts of 参数（这是为我从一个在线蜡烛店起始模板生成的网站）。
- en: '![Figure 8.5: The GoDaddy designer interface in action (as much “action” as
    there can be on a printed page anyway!)](img/B18315_08_5.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5：GoDaddy设计师界面在实际操作中的效果（无论如何，在印刷页面上能有的“效果”也就这样了！)](img/B18315_08_5.jpg)'
- en: 'Figure 8.5: The GoDaddy designer interface in action (as much “action” as there
    can be on a printed page anyway!)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5：GoDaddy设计师界面在实际操作中的效果（无论如何，在印刷页面上能有的“效果”也就这样了！）
- en: The primary advantage of no-code solutions is speed and efficiency. Since there
    is no custom programming needed, they tend to be faster to create. This also makes
    them more cost-effective since no (often times expensive) web developers are needed.
    This all has the result of empowering non-developers, allowing those without coding
    skills to take part in the development process.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 无代码解决方案的主要优势是速度和效率。由于不需要定制编程，它们通常创建得更快。这也使它们更具成本效益，因为不需要（通常是昂贵的）网络开发者。所有这些都有助于赋予非开发者权力，让那些没有编码技能的人参与到开发过程中。
- en: In the case of GoDaddy’s web designer, for example, it allows an exclusively
    visual-based approach to designing, a paradigm where the user drags and drops
    components around the page and can edit details about each as necessary, all without
    coding.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以GoDaddy的网页设计师为例，它允许采用完全基于视觉的方法进行设计，这是一种用户可以拖放组件并在页面上进行编辑的范式，可以根据需要编辑每个组件的详细信息，而无需编写代码。
- en: Of course, it isn’t all roses and rainbows when it comes to no-code solutions.
    For one thing, as an organization’s needs grow and evolve, the limitations of
    no-code solutions may become apparent because they may not supply the flexibility
    you need at some point. While they are excellent for the quick deployment and
    validation of ideas, transitioning to more customizable, code-based solutions
    might be necessary for scaling and complex customization. That said, most good
    no-code solutions will grow with you for a while and provide fertile ground to
    start your online journey.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，当涉及到无代码解决方案时，并不全是玫瑰和彩虹。一方面，随着组织的需求增长和演变，无代码解决方案的限制可能会变得明显，因为它们可能在某个时候无法提供你所需要的灵活性。虽然它们在快速部署和验证想法方面非常出色，但过渡到更可定制的基于代码的解决方案可能对于扩展和复杂定制是必要的。话虽如此，大多数好的无代码解决方案会随着你一起成长一段时间，并为你的在线旅程提供肥沃的土壤。
- en: For another thing, no-code solutions make you dependent on the provider of that
    solution. While this isn’t the case when you host your own hardware, no-code solutions
    do tend to bind you to them more deeply, and it can be difficult to move away
    from them if and when needed. This won’t be a problem for many people, of course,
    but it’s something to be aware of as at least a potential issue.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，无代码解决方案使你依赖于该解决方案的提供商。虽然当你自己托管硬件时并非如此，但无代码解决方案确实倾向于更深入地绑定你，如果需要的话，可能很难离开它们。当然，这对许多人来说可能不是问题，但至少这是一个需要意识到的潜在问题。
- en: No-code solutions represent a significant shift in the technology landscape,
    making app and web development more accessible and altering traditional dynamics
    in the tech industry by allowing non-coders to produce results that until now
    have required custom development.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 无代码解决方案代表了技术领域的一次重大转变，使得应用程序和网站开发更加易于访问，并通过允许非编码人员产生以前需要定制开发的结果，从而改变了科技行业的传统动态。
- en: Let’s now talk about some of the biggest names in the no-code movement.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈无代码运动中的一些最大名字。
- en: Introducing some popular no-code solutions
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍一些流行的无代码解决方案
- en: 'In the realm of web development, several popular no-code solutions have gained
    widespread recognition for their ease of use and powerful features. Here are some
    notable examples:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络开发领域，一些流行的无代码解决方案因其易用性和强大的功能而获得了广泛的认可。以下是一些值得注意的例子：
- en: '**Wix**: Wix is very similar to GoDaddy in approach, again providing a visual
    design toolset that doesn’t require any coding. It arguably tends to be slightly
    less user-friendly than GoDaddy, but the difference isn’t drastic if so.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Wix**：Wix 的方法与 GoDaddy 非常相似，再次提供了一套无需编码的视觉设计工具。它可能比 GoDaddy 略微不太用户友好，但如果有的话，这种差异并不剧烈。'
- en: '**Squarespace**: Squarespace is favored for its sleek, professionally designed
    templates, making it ideal for portfolios, blogs, and business websites. It offers
    robust design options and e-commerce capabilities.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Squarespace**：因其简洁、专业设计的模板而受到青睐，非常适合用于作品集、博客和企业网站。它提供强大的设计选项和电子商务功能。'
- en: '**Weebly**: A user-friendly solution with drag-and-drop tools, Weebly is great
    for small businesses and online stores. It integrates e-commerce features and
    provides various design templates.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Weebly**：一款用户友好的解决方案，具有拖放工具，非常适合小型企业和在线商店。它集成了电子商务功能并提供各种设计模板。'
- en: '**Shopify**: Primarily focused on e-commerce, Shopify allows users to create
    online stores without coding. It offers extensive e-commerce tools, templates,
    and integration with a wide range of payment gateways and other services.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shopify**：主要专注于电子商务，Shopify 允许用户无需编码即可创建在线商店。它提供广泛的电子商务工具、模板，并与众多支付网关和其他服务集成。'
- en: '**Carrd**: Specializing in one-page websites, Carrd is a simple, lightweight
    tool for creating personal profiles, landing pages, and simple portfolios.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Carrd**：专注于单页网站，Carrd 是创建个人资料、着陆页和简单作品集的简单、轻量级工具。'
- en: '**Bubble**: While it’s more focused on web applications than websites, Bubble
    is a powerful no-code tool that allows for the development of complex, data-driven
    web applications with a visual programming interface.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bubble**：虽然它比网站更专注于网络应用程序，但 Bubble 是一款强大的无代码工具，允许通过可视化编程界面开发复杂、数据驱动的网络应用程序。'
- en: These solutions stand out for their ease of use, diverse design options, and
    ability to cater to various needs.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这些解决方案因其易用性、多样化的设计选项以及满足各种需求的能力而脱颖而出。
- en: But what if even drag-and-drop and a visual builder are too much for someone?
    Well, there’s something that has crashed onto the scene like little else that
    may give an answer, and that’s AI.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果连拖放和可视化构建器对某人来说都太多，那该怎么办？好吧，有一种东西像其他东西一样突然出现在场景中，可能提供了一个答案，那就是人工智能。
- en: Utilizing artificial intelligence
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用人工智能
- en: AI isn’t new. It’s been around since around 1956 in various forms, but 2023
    was a watershed moment for it in which we saw a sudden explosion of innovation
    in space.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能并不新鲜。它自 1956 年以来以各种形式存在，但 2023 年是其一个分水岭，我们看到了该领域创新的突然爆发。
- en: Many of the no-code solutions out there are now adding AI capabilities to the
    mix. GoDaddy and Wix both incorporate **artificial design intelligence**, or **ADI**.
    This is a form of AI that simplifies the design process by automatically creating
    a website based on the user’s responses to a set of questions. This approach is
    particularly beneficial for those who want a professional-looking website without
    investing much time or needing technical skills. You simply answer a series of
    questions, such as what your website is about, where it’s located, and any key
    points about it, and these platforms can create a website from those responses
    that, while not a complete and ready-to-go result, serves as a good starting point
    for your design work.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在许多无代码解决方案都在增加人工智能功能。GoDaddy和Wix都集成了**人工设计智能**，或称为**ADI**。这是一种通过自动根据用户对一系列问题的回答创建网站来简化设计过程的AI形式。这种方法特别适合那些想要拥有专业外观的网站，而不需要投入太多时间或技术技能的人。你只需回答一系列问题，例如你的网站是关于什么的，它位于哪里，以及任何关于它的关键点，这些平台就可以根据这些回答创建网站，虽然这不是一个完整且现成的结果，但可以作为你设计工作的良好起点。
- en: Of course, such a thing isn’t without its limitations. Reliance on ADI means
    that websites may lack uniqueness since AI isn’t yet *quite* as creative as humans
    can be, and users might find the designs somewhat limited compared to competitors
    since there have to be guardrails in place for any AI, limits to what it can produce.
    While being able to produce a website with a simple description is incredibly
    powerful (and I would even say cool!), it doesn’t offer as much creative freedom
    and lacks certain advanced features, such as the ability to integrate third-party
    apps as effectively.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这样的事情并非没有局限性。依赖ADI意味着网站可能缺乏独特性，因为AI的创造力还远不如人类，用户可能会发现设计相对有限，与竞争对手相比，因为任何AI都必须有护栏，即它能够产生的限制。虽然能够通过简单的描述生成网站非常强大（我甚至可以说很酷！），但它并不提供太多的创意自由，并且缺乏某些高级功能，例如有效地集成第三方应用的能力。
- en: This AI-driven no-code solution is best suited for businesses or individuals
    who need a simple, clean, and professional website quickly and are not looking
    to delve deeply into customizations or advanced features. It’s particularly user-friendly
    and affordable, with various pricing plans, including a free option, making it
    a practical choice for small businesses or entrepreneurs starting out.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这款由人工智能驱动的无代码解决方案最适合那些需要快速搭建简单、整洁、专业的网站，且不打算深入研究定制化或高级功能的企业或个人。它特别用户友好且价格合理，提供多种定价方案，包括免费选项，使其成为小型企业或初创企业家的实用选择。
- en: But this is just one specific example of a more generic concept, a concept that
    has really taken the world by storm and that you as a web developer can use in
    other ways, and that concept is called generative AI. Let’s delve into that a
    little deeper.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 但这只是更通用概念的一个具体例子，这个概念真正席卷了全球，你作为网页开发者也可以以其他方式使用它，这个概念被称为生成式人工智能。让我们更深入地探讨一下。
- en: Generative AI
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成式人工智能
- en: You would have to have been living under a rock for most of 2023 to have not
    heard of generative AI. AI itself isn’t new, of course, it’s been around since
    around 1956 in various forms, but 2023 was a watershed moment for it when ChatGPT,
    the poster child for generative AI, hit the scene.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你大部分时间都在2023年躲在岩石下，那么你可能没有听说过生成式人工智能。当然，AI本身并不新，它以各种形式存在，自1956年以来就有，但2023年是一个转折点，当生成式AI的标志性产品ChatGPT出现时。
- en: '**Generative AI** is a type of AI that can create new content, be it text,
    images, programming code, music, or even whole websites. It does this by first
    ingesting a large amount of data and, in a sense, learning from it. This data
    can be many things, including books, existing music, source code from GitHub,
    and documents of various types. The AI can understand the patterns and structure
    of this data and then use it to generate new (arguably) original output. For example,
    generative AI such as ChatGPT can write a news article, compose a piece of music,
    or create an image that never existed before. As you can probably tell, generative
    AI has the potential to revolutionize the way websites – and a lot of other things
    – are built, offering new levels of efficiency, customization, and creativity.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**生成式AI**是一种能够创建新内容的AI类型，无论是文本、图像、编程代码、音乐，甚至是整个网站。它是通过首先摄入大量数据，并在某种程度上从中学到东西来做到这一点的。这些数据可以包括书籍、现有的音乐、GitHub上的源代码以及各种类型的文档。AI可以理解这些数据中的模式和结构，然后使用它来生成新的（可以说是）原创输出。例如，像ChatGPT这样的生成式AI可以撰写新闻文章，创作音乐作品，或创建一个以前从未存在过的图像。正如你可能已经注意到的，生成式AI有潜力彻底改变网站——以及许多其他事物——的建设方式，提供新的效率、定制和创造性的水平。'
- en: 'In terms of how AI like this works, and without getting into all the complex
    math and concepts that underly them, the main component is what results from ingesting
    all of the data I mentioned: something called a **model**. It’s a complex representation
    of all of the data in the form of a **neural network**. A neural network is essentially
    an algorithm specifically built to be able to recognize patterns, which is similar
    to how the human brain works. When you ask ChatGPT a question, it uses complex
    statistics to traverse this model, finding patterns that match what it statistically
    believes follows logically from each step in the traversal. In the end, they output
    something that the model statistically sees as being most likely to answer the
    request that was put to it.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这种AI是如何工作的，不涉及所有复杂的数学和概念，主要组件是摄入我提到的所有数据的结果：被称为**模型**的东西。它是以**神经网络**形式对所有数据的复杂表示。神经网络本质上是一种专门构建的算法，能够识别模式，这与人类大脑的工作方式相似。当你向ChatGPT提问时，它使用复杂的统计方法遍历这个模型，找到与它在遍历的每一步中统计上认为逻辑上可能跟随的模式相匹配的模式。最后，它们输出模型统计上认为最有可能回答所提请求的东西。
- en: There are many different models, trained from many different datasets. GPT,
    which underlies ChatGPT (which is really a combination of a UI plus that model),
    is specifically for textual content. Another model, DALL-E, was trained on a large
    set of images and can produce new ones from it. The more data a model is trained
    on – assuming the data is of sufficient quality – the more productive and accurate
    it becomes at fulfilling requests to it.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的模型，它们是从许多不同的数据集中训练出来的。GPT是ChatGPT的基础（实际上是一个UI和该模型的组合），专门用于文本内容。另一个模型DALL-E是在大量图像上训练的，并能够从中生成新的图像。一个模型训练的数据越多——假设数据质量足够高——它在满足请求时的生产力和准确性就越高。
- en: In *Figure 8**.6*, you can see what the ChatGPT ([https://chat.openai.com](https://chat.openai.com))
    interface looks like, where I’ve had a bit of a discussion about programming to
    give you an idea of what such an interaction can be like.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图8.6**.6中，你可以看到ChatGPT（[https://chat.openai.com](https://chat.openai.com)）的界面看起来是什么样子，我在这里进行了一些关于编程的讨论，以便给你一个这样的互动可能是什么样的概念。
- en: '![Figure 8.6: A conversation with ChatGPT, the preeminent generative AI solution
    today](img/B18315_08_6.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图8.6：与ChatGPT的对话，当今最杰出的生成式AI解决方案](img/B18315_08_6.jpg)'
- en: 'Figure 8.6: A conversation with ChatGPT, the preeminent generative AI solution
    today'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6：与ChatGPT的对话，当今最杰出的生成式AI解决方案
- en: On the left, you can see a history of chats I’ve had with ChatGPT (don’t mind
    some of the sillier conversations; this thing can be fun as well as useful!).
    On the right is the current conversation where you can see it was able to generate
    some example code to answer my question. The chat goes on for a while with me
    asking clarifying questions and for an example using a specific library. This
    exchange was quite helpful to a project I was working on.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，你可以看到我与ChatGPT的聊天历史（不要介意其中一些愚蠢的对话；这东西既有趣又实用！）。在右侧是当前的对话，你可以看到它能够生成一些示例代码来回答我的问题。聊天持续了一段时间，我提出了澄清问题，并要求使用特定的库来举例。这次交流对我正在工作的项目非常有帮助。
- en: 'But ChatGPT and other generative AI models like it can do even more than this.
    Various models can be used for specific purposes, and these tools can be integrated
    into other products, expanding their capability. Here’s a list of some interesting
    uses you can find being used in the world today when it comes to web development:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 但ChatGPT和其他类似生成式AI模型可以做得更多。各种模型可以用于特定目的，并且这些工具可以集成到其他产品中，扩展其功能。以下是一些有趣的应用列表，你可以在当今世界找到它们在网站开发中的应用：
- en: '**Prototyping and wireframing**: Generative AI tools can quickly generate website
    prototypes and wireframes, allowing designers to visualize and refine their ideas
    more rapidly than they probably could otherwise.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原型和线框图**：生成式AI工具可以快速生成网站原型和线框图，使设计师能够比其他方式更快地可视化和完善他们的想法。'
- en: '**Automated design creation**: Generative AI can generate website layouts and
    designs based on user preferences or predefined criteria – or even prototypes
    and wireframes it previously generated! Some of the big no-code solutions are
    beginning to integrate these kinds of capabilities to incredible effect.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动设计创建**：生成式AI可以根据用户偏好或预定义标准生成网站布局和设计——甚至可以生成它之前生成的原型和线框图！一些大型无代码解决方案开始整合这些功能，效果令人难以置信。'
- en: '**Copy generation**: Generative AI can be used to create textual content for
    websites. For instance, it can generate product descriptions, blog posts, or marketing
    copy tailored to the site’s audience, saving time and effort on the part of humans
    (which, generically, is what most of this boils down to frankly).'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文案生成**：生成式AI可以用于为网站创建文本内容。例如，它可以生成针对网站受众的产品描述、博客文章或营销文案，从而节省人类的时间和精力（坦白地说，这基本上就是所有这些的通用主题）。'
- en: '**Visual asset creation**: Generative AI can generate visual assets such as
    images, icons, or even animations that are tailored to the website’s theme and
    requirements.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视觉资产创建**：生成式AI可以生成符合网站主题和需求的视觉资产，如图片、图标甚至动画。'
- en: '**Code generation**: Generative AI can generate the actual code needed to build
    websites, especially for standard components. This can significantly speed up
    the development process, although it may require oversight and refinement from
    human developers, which is a common theme with any generative AI model. I’ll go
    into this a bit more in the next section.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码生成**：生成式AI可以生成构建网站所需的实际代码，特别是对于标准组件。这可以显著加快开发过程，尽管可能需要人类开发者的监督和细化，这是任何生成式AI模型的一个常见主题。我将在下一节中对此进行更多介绍。'
- en: '**SEO optimization**: AI can analyze search engine algorithms and suggest or
    implement SEO strategies for better ranking, including keyword optimization, meta
    tags, and content structuring. For example, it can analyze the top results from
    a search you want your site to be ranked higher in, and then see what changes
    could be made to your site to achieve that goal.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEO优化**：AI可以分析搜索引擎算法，并提出或实施SEO策略以实现更好的排名，包括关键词优化、元标签和内容结构。例如，它可以分析你希望网站排名更高的搜索结果中的顶级结果，然后查看可以对你的网站进行哪些更改以实现该目标。'
- en: '**Personalization**: AI can personalize website experiences for individual
    visitors in real time. It can change layouts, content, and recommendations based
    on user behavior, preferences, and interactions. This is different than the previous
    points in that here we’re not talking about using AI to build a website; instead,
    we’re talking about AI that runs on behalf of the user, as they’re actually using
    a website.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个性化**：AI可以在实时为个别访客个性化网站体验。它可以根据用户行为、偏好和互动改变布局、内容和推荐。这与前面的点不同，因为在这里我们不是在谈论使用AI来构建网站；相反，我们是在谈论代表用户运行的AI，因为他们实际上正在使用网站。'
- en: '**UI and UX optimization**: As with personalization, AI can analyze user interaction
    data after a website is live to suggest improvements in the UI/UX design. This
    could come in the form of training a model on data collected from users using
    your site, from which you can then extract suggestions from the model about things
    to improve.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI和UX优化**：与个性化一样，AI可以在网站上线后分析用户交互数据，以提出改进UI/UX设计的建议。这可能以在从使用你网站的用户收集的数据上训练模型的形式出现，然后你可以从模型中提取关于改进事项的建议。'
- en: The integration of generative AI and other forms of advanced AI systems into
    web development tools and solutions is still something that is evolving. We’re
    still figuring out how to use these new techniques and tools. As AI technology
    advances though, it seems likely that it will become an integral part of the web
    development process, offering more sophisticated and intuitive ways to build websites.
    I don’t personally believe it will replace web developers, but web developers
    will certainly have to understand and adapt to these tools, integrating them into
    their toolbox. It seems likely to me that those who don’t will probably be left
    behind, so if for no other reason than the selfish “I want to be employable” perspective,
    it’s important to be aware of AI advancements and keep up with how they can be
    used to make you a more effective web developer.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成式AI和其他形式的先进AI系统集成到Web开发工具和解决方案中仍在不断发展。我们仍在探索如何使用这些新技术和工具。尽管如此，随着AI技术的进步，它似乎很可能会成为Web开发过程的一个基本组成部分，提供更复杂和直观的网站构建方式。我个人并不认为它会取代Web开发者，但Web开发者肯定需要理解和适应这些工具，将它们整合到他们的工具箱中。在我看来，那些不这样做的人可能会被落下，所以，即使只是为了自私的“我想有工作能力”的视角，了解AI的进步并跟上它们如何被用来使您成为一个更有效的Web开发者也是非常重要的。
- en: 'One last area of this topic I want to discuss is how you can use generative
    AI tools to write code, with one way in particular at the forefront: GitHub Copilot.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我想讨论的这个主题的最后一个领域是您如何可以使用生成式AI工具来编写代码，其中一个特别的方法是：GitHub Copilot。
- en: GitHub Copilot
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub Copilot
- en: 'While the idea of generative AI being used to generate whole websites or content
    for sites, or being used as tools to help build and enhance websites, was the
    thrust of the previous section, here I want to talk about the idea of using it
    to write code: in other words, continuing to be web developers, but using tools
    to make that job easier and more efficient. While ChatGPT can be used in that
    way because it’s quite good at being able to generate code for you, or helping
    you troubleshoot your code, these capabilities are taken to another level when
    you use a good IDE with Microsoft’s GitHub Copilot integrated into it.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然使用生成式AI生成整个网站或网站内容，或将其用作帮助构建和增强网站的工具的想法是上一节的重点，但在这里我想谈谈使用它来编写代码的想法：换句话说，继续作为Web开发者，但使用工具使这项工作更容易、更高效。虽然ChatGPT可以用这种方式使用，因为它非常擅长为您生成代码或帮助您调试代码，但当你使用集成了Microsoft的GitHub
    Copilot的优质IDE时，这些能力会提升到另一个层次。
- en: '**Copilot** is actually powered by the GPT model, the same one (or, at least,
    one of several available) that ChatGPT uses. But the training data that the model
    is based on is all the content on GitHub (well, any content that hasn’t been explicitly
    disallowed for this purpose at least).'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**Copilot**实际上是由GPT模型驱动的，这个模型与ChatGPT使用的模型相同（或者至少是几个可用模型中的一个）。但模型基于的训练数据是GitHub上的所有内容（好吧，至少是至少没有明确禁止用于此目的的内容）。'
- en: 'It allows for two key capabilities:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 它允许两个关键功能：
- en: The ability to have the code you write be autocompleted
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您写出的代码能够自动补全的能力
- en: The ability to generate code from comments
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从注释生成代码的能力
- en: 'You can find information on how to install Copilot on your specific IDE (it
    supports most of them) here: [https://docs.github.com/en/copilot](https://docs.github.com/en/copilot).
    Then, as you type your code, Copilot can suggest completions.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下链接中找到如何在您特定的IDE（它支持大多数IDE）上安装Copilot的信息：[https://docs.github.com/en/copilot](https://docs.github.com/en/copilot)。然后，当您输入代码时，Copilot可以提供补全建议。
- en: And let me tell you, it can get scary good at it sometimes! Since it is aware
    of the code in your project, as well as all the repositories hosted on GitHub,
    it’s able to offer suggestions that make sense within the code you’re writing
    – contextually meaningful suggestions, not just random gibberish pulled from other
    people’s code.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 让我告诉你，它有时会变得非常出色！因为它了解您项目中的代码，以及GitHub上托管的所有仓库，它能够提供在您编写的代码中具有意义的建议——上下文相关的建议，而不仅仅是来自他人代码的随机胡言乱语。
- en: '*Figure 8**.7* demonstrates Copilot’s autocomplete capabilities in IntelliJ
    IDEA. Here, you can see that it has suggested for me a line of code that builds
    upon what I already wrote. It’s a little hard to see on the printed page due to
    the coloring that is present on the screen but not in print, but all of the code
    after the highlighted `return` statement was suggested by Copilot. All I need
    to do at this point is hit the *Tab* key to accept the suggestion, and the code
    is inserted into my editor.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.7* 展示了Copilot在IntelliJ IDEA中的自动完成功能。在这里，你可以看到它为我建议了一行代码，这行代码是基于我已经写的内容构建的。由于屏幕上存在而打印页上不存在的颜色，所以这在打印页上看起来有点难看，但所有在突出显示的`return`语句之后的代码都是由Copilot建议的。我现在只需要按下*Tab*键接受建议，代码就会被插入到我的编辑器中。'
- en: '![Figure 8.7: An example of using Copilot’s comments-to-code capability](img/B18315_08_7.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7：使用Copilot的注释转代码功能的示例](img/B18315_08_7.jpg)'
- en: 'Figure 8.7: An example of using Copilot’s comments-to-code capability'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7：使用Copilot的注释转代码功能的示例
- en: Microsoft calls Copilot “your AI pair programmer.” Pair programming is an idea
    where two developers sit down physically together and code together. One person
    may control the keyboard, or it may pass between them, and you write code in a
    pair, both of your brains working together, hopefully harmoniously! If you’ve
    ever seen the movie *Pacific Rim*, it’s a lot like the Drift that allows two pilots
    to control the Jaegers, the giant robots used to fight the Kaiju (the giant monsters),
    sharing the mental strain. With Copilot, your partner is in a sense all the developers
    who have code posted on GitHub!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 微软称Copilot为“你的AI编程伙伴”。结对编程是一种两个开发者坐在一起一起编码的想法。一个人可能控制键盘，或者它可能在他们之间传递，你们以对的方式编写代码，两个大脑一起工作，希望和谐！如果你看过电影《环太平洋》，它就像允许两个飞行员控制巨型机器人Jaegers（用来与哥斯拉（巨型怪物）战斗）的Drift一样，共享心理压力。有了Copilot，你的伙伴在某种程度上是所有在GitHub上发布代码的开发者！
- en: Aside from those autocompletion suggestions, Copilot has another trick up its
    sleeve. If you type up some comments, in plain language, describing a function,
    Copilot can then produce that function for you! It’s really kind of amazing when
    you see it in action.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 除了那些自动完成建议之外，Copilot还有另一个绝招。如果你用普通的语言写一些描述函数的注释，Copilot就可以为你生成那个函数！当你看到它在实际操作中的表现时，这真的很令人惊讶。
- en: '*Figure 8**.8* shows the usage of Copilot in IntelliJ IDEA. Here, you can see
    that it has suggested for me an implementation of a function to search through
    objects in an array, based on my comments. All I did was type the comments, hit
    *Enter*, and then wait a moment for Copilot to generate the code you see. All
    I need to do now is hit the *Tab* key to accept the suggestion, and the code is
    inserted into my editor.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.8* 展示了Copilot在IntelliJ IDEA中的使用情况。在这里，你可以看到它根据我的注释为我建议了一个函数的实现，用于在数组中搜索对象。我所做的就是输入注释，按*Enter*键，然后等待一会儿，Copilot生成你看到的代码。我现在只需要按下*Tab*键接受建议，代码就会被插入到我的编辑器中。'
- en: '![Figure 8.8: An example of using Copilot’s comments-to-code capability](img/B18315_08_8.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8：使用Copilot的注释转代码功能的示例](img/B18315_08_8.jpg)'
- en: 'Figure 8.8: An example of using Copilot’s comments-to-code capability'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8：使用Copilot的注释转代码功能的示例
- en: As of the time of writing, a third capability – chat – is becoming generally
    available. This puts a mechanism just like ChatGPT into Copilot. Now, you can
    have a back-and-forth discussion with Copilot about some tricky programming issue
    you’re having, or ask for documentation about something, to generate code or test
    cases, and to help you with debugging. While ChatGPT can do all of this too, having
    it integrated into your IDE and having it be immediately aware of what you’re
    working on already is game-changing. Unlike ChatGPT though, chat in Copilot can
    only answer questions about coding; it by design isn’t as general-purpose as ChatGPT
    is.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 到写作的时候，第三个功能——聊天——正在变得普遍可用。这把ChatGPT的机制直接集成到了Copilot中。现在，你可以与Copilot就你遇到的某些棘手的编程问题进行来回讨论，或者请求关于某事的文档，生成代码或测试用例，帮助你进行调试。虽然ChatGPT也能做这些，但将其集成到你的IDE中，并且能够立即了解你正在做什么，这是一个变革性的变化。然而，与ChatGPT不同，Copilot中的聊天只能回答关于编码的问题；它设计上不像ChatGPT那样通用。
- en: 'And here’s the good news: you can play with Copilot for free! Microsoft offers
    a fairly generous free trial period, after which Copilot costs a nominal fee (as
    of the time of writing, $10 a month for an individual). I for one find it to be
    very much worth the expense.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是：你可以免费试用 Copilot！微软提供了一个相当慷慨的免费试用期，之后 Copilot 将收取象征性的费用（截至写作时，个人用户每月 10
    美元）。我个人觉得这完全值得这笔开销。
- en: 'Now, that all may sound great, but here’s the one big warning with Copilot,
    and for any generative AI actually: *you can’t blindly trust them*! Generative
    AI models are known to *hallucinate*, which is to say they make things up that
    are basically gibberish. Of course, we are in fact asking the AI to make things
    up, but we expect those things to be valid, and they aren’t always. In the same
    vein, the answers these models produce are sometimes factually incorrect. They
    simply get things wrong sometimes. Often, it’s because the training data was flawed,
    and sometimes it’s because the complex math that underpins them simply leads to
    incorrect answers.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这一切听起来可能都很不错，但关于 Copilot，有一个很大的警告，实际上对于任何生成式 AI 都是一样的：*你不能盲目地信任它们*！生成式 AI
    模型是出了名的会“产生幻觉”，也就是说，它们会编造一些基本上是胡言乱语的东西。当然，我们实际上是在要求 AI 编造东西，但我们期望这些内容是有效的，但它们并不总是这样。同样，这些模型产生的答案有时也是事实错误的。它们有时只是弄错了。通常，这是因为训练数据有缺陷，有时是因为支撑它们的复杂数学导致错误的答案。
- en: Check out *Figure 8**.9* for an example of this. While trying to figure out
    a problem at work, I asked a question about dates in JavaScript, and the answer
    it gave wasn’t correct. Though I pointed this out to the AI and it corrected itself,
    if I didn’t have some foundational knowledge already, I probably wouldn’t have
    spotted that, and I might have been sent off down the wrong path, wasting time
    and energy. So, you must keep an eye on these things and not just rely on them
    100%, which is the point I’m making here.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 查看图 *8.9* 了解一个例子。当我在工作中试图解决一个问题的时候，我询问了有关 JavaScript 日期的问题，而它给出的答案并不正确。尽管我指出了这一点，AI
    也进行了纠正，但如果我没有一些基础的知识，我可能就不会注意到这一点，我可能会走上错误的道路，浪费时间和精力。所以，你必须留意这些事情，而不仅仅100%地依赖它们，这正是我要表达的观点。
- en: '![Figure 8.9: ChatGPT making a mistake](img/B18315_08_9.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9：ChatGPT 出错](img/B18315_08_9.jpg)'
- en: 'Figure 8.9: ChatGPT making a mistake'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9：ChatGPT 出错
- en: So, you can’t take their answers as absolute truth; you have to think and validate
    it yourself. This means that generative AI requires you to already have some knowledge
    of the topic you’re discussing with it, which means something such as Copilot
    – which is specifically geared to writing code – wouldn’t be as helpful to someone
    who doesn’t already know how to code. If you see something that you think isn’t
    right, the interesting thing is you can challenge the AI, at which point it will
    often correct itself, as you see in *Figure 8**.9*.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你不能将它们的答案视为绝对真理；你必须自己思考和验证。这意味着生成式 AI 要求你对与它讨论的主题已经有一些了解，这意味着像 Copilot 这样的工具——它专门用于编写代码——对于不懂得如何编码的人来说可能不会那么有帮助。如果你看到一些你认为不正确的东西，有趣的是你可以挑战
    AI，这时它通常会纠正自己，就像你在图 *8.9* 中看到的那样。
- en: Right or wrong, the ability to have an ongoing conversation with these things
    is when you can start to see the most benefit, though. You can ask a question,
    get an answer, then ask to expand on that answer. You may see something in the
    answer that you’ve never heard of before and be able to prove further. As a personal
    anecdote, this happened to me once when I was asking about how to do something
    in Java. I can’t frankly remember the problem I was trying to solve, but the point
    is that ChatGPT (which I was using before I started using Copilot) offered a solution
    – which worked fine – but used some language feature I hadn’t seen before. I was
    able to ask a follow-up question about that feature, and I got a great explanation.
    I was then able to ask another follow-up asking for an example and got it. All
    of this led to me understanding that feature, I believe, better than I probably
    would have if I had just Googled it and read some articles.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是对是错，能够与这些事物进行持续对话的能力，正是你开始看到最大好处的时候。你可以提出一个问题，得到一个答案，然后要求对那个答案进行扩展。你可能会在答案中看到一些你以前从未听说过的内容，并且能够进一步证明。作为一个个人轶事，这曾经发生在我身上，当时我正在询问如何用Java做某事。我坦白地说，我不记得我试图解决的问题是什么，但重点是ChatGPT（在我开始使用Copilot之前我使用的工具）提供了一个解决方案——这个解决方案效果很好——但使用了我在以前从未见过的语言特性。我能够就那个特性提出后续问题，并得到了很好的解释。然后我能够提出另一个后续问题，要求一个例子，并得到了它。所有这些都让我相信，我比如果只是谷歌搜索并阅读一些文章，对那个特性的理解要好得多。
- en: 'You shouldn’t undersell the ability to – without shame – ask question after
    question after question, even if you think some of them are “stupid.” Especially
    in the early days of your web developer journey, you’re going to have a lot of
    questions that may be hard to get answers for with a search engine such as Google,
    and that you might be embarrassed to ask a person about, if you even have someone
    you can ask. Well, first, you really shouldn’t be embarrassed because we all start
    at a point of not knowing everything, and asking questions is how you learn! But
    I get it: we’re people and sometimes we feel like we’re asking silly questions.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你不应该低估——毫无羞耻地——一个接一个地问问题，即使你认为其中一些问题是“愚蠢”的。尤其是在你作为网络开发者的早期旅程中，你会有很多问题，这些问题可能很难通过像谷歌这样的搜索引擎得到答案，而且你可能不好意思向别人询问，即使你有可以询问的人。好吧，首先，你真的不应该感到尴尬，因为我们都是从不知道一切的地方开始的，提问是学习的途径！但我理解：我们都是人，有时我们觉得自己在问愚蠢的问题。
- en: Well, ChatGPT or Copilot is never going to judge you! You can keep asking it
    as many questions as you need to, keep asking it for different examples or different
    explanations, and it’ll keep trying as long as you need it to. You can build your
    knowledge over time with it, keep going off on tangents as much as you need, and
    it’ll never get tired or annoyed with you. It’s a capability we haven’t as a society
    had before, and it really can be transformational.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，ChatGPT或Copilot永远不会评判你！你可以不断地问它你需要问的任何问题，不断地要求它提供不同的例子或不同的解释，它会一直尝试，直到你需要它这样做。你可以用它随着时间的推移建立你的知识，不断地走偏锋，而它永远不会对你感到厌倦或烦恼。这是我们作为一个社会以前从未拥有的能力，它真的可以具有变革性。
- en: So, I strongly encourage you to start using these generative AI tools, be it
    ChatGPT or Copilot, or whatever else is out there or comes out after these words
    have been committed to paper. As I said, don’t trust them 100% because they *do*
    get things wrong, but in my experience, they do more than a good enough job for
    the benefits to far outweigh any negatives.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我强烈建议你开始使用这些生成式AI工具，无论是ChatGPT还是Copilot，或者无论这些话被写下来之后出现什么其他工具。正如我所说，不要完全信任它们，因为它们**确实**会出错，但根据我的经验，它们做得足够好，以至于好处远远超过了任何负面影响。
- en: 'While some worry that this new breed of AI tools and no-code solutions may
    take our jobs in the long run, I for one think the opposite will happen: these
    tools will become necessary tools that web developers will have to come to terms
    with and learn how to use effectively.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些人担心这种新型AI工具和无代码解决方案最终可能会夺走我们的工作，但至少对我来说，相反的情况可能会发生：这些工具将成为网络开发者必须接受并学会有效使用的必要工具。
- en: And hey, if they ultimately turn into Skynet and send Terminators after all
    of us, at least we will have built some great websites in the meantime, right?
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 嘿，如果他们最终变成了天网并派出终结者追捕我们所有人，至少我们在那之前会建成一些很棒的网站，对吧？
- en: Reviewing the roadmap
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查路线图
- en: 'As we wrap up the technical-focused part of this book, you’ve uncovered a few
    more items. In *Figure 8**.10*, you can see the updated web developer roadmap:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们结束这本书的技术部分时，你发现了一些更多的事项。在 *图 8*.10 中，你可以看到更新后的网络开发者路线图：
- en: '![Figure 8.10: The roadmap, with a few more boxes filled in](img/B18315_08_10_NEW.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10：包含更多填充框的路标](img/B18315_08_10_NEW.jpg)'
- en: 'Figure 8.10: The roadmap, with a few more boxes filled in'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10：包含更多填充框的路标
- en: With this chapter, you uncovered **CRMs** (which completes the **Frontend**
    section of the roadmap!), **No-Code Solutions**, and **Generative AI**. That may
    not seem like a lot, but hey, they’re pretty cool topics, wouldn’t you say?
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章，你发现了 **CRM**（这完成了路线图中的 **前端** 部分！），**无代码解决方案** 和 **生成式 AI**。这可能看起来并不多，但嘿，这些都是相当酷的话题，不是吗？
- en: Summary
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed some tools that allow you to create websites and
    web apps without writing code, or at least minimizing the code you have to write.
    You saw how things such as WordPress and Drupal can allow even non-technical users
    – to at least some extent – to create content for the web. You also saw how no-code
    offerings from companies such as GoDaddy or Wix can remove the need for web developers
    entirely… though you also saw how these tools can make you a more effective web
    developer, thereby (I believe!) reversing that notion.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了一些允许你无需编写代码或至少最小化编写代码的工具体验。你看到了如何使用 WordPress 和 Drupal 等工具，即使是非技术用户也能至少在一定程度上创建网络内容。你还看到了来自
    GoDaddy 或 Wix 等公司的无代码服务如何完全消除网络开发者的需求……尽管你也看到了这些工具如何让你成为一个更有效的网络开发者，从而（我相信！）逆转了这一观念。
- en: In the next chapter, which begins the final part of this book, we’re going to
    put the technical stuff completely behind us and focus entirely on other concerns,
    things such as career development, skills growth, and landing your first web developer
    job. That’s ultimately the goal after all, and we’ll spend a few chapters figuring
    out how to get there together!
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，这本书的最后一部分即将开始，我们将完全放下技术内容，专注于其他问题，比如职业发展、技能增长以及如何找到你的第一份网络开发者工作。毕竟，那才是最终目标，我们将用几章内容一起探讨如何实现这一目标！
- en: 'Part 3: Getting and Keeping a Job and Growing a Career'
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：获得和保持工作以及职业发展
- en: In this final part, we’ll largely step away from technology-specific knowledge
    and begin to look at what it takes to find a job in the web development field.
    We’ll talk about what a FAANG company is, why you may or may not want to consider
    them, and what kind of salaries you might expect in this field.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分的最后，我们将主要脱离特定技术的知识，开始探讨在网页开发领域找到工作所需具备的条件。我们将讨论什么是 FAANG 公司，为什么你可能或可能不想考虑它们，以及在这个领域你可能会期望什么样的薪资。
- en: We’ll delve into building a resume and portfolio, and what a typical web developer
    interview might entail. We’ll discuss how to prepare for the interview, common
    questions you might encounter, and how to handle them.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入探讨如何构建简历和作品集，以及典型的网络开发者面试可能包含的内容。我们将讨论如何准备面试，你可能会遇到的一些常见问题以及如何应对它们。
- en: We’ll also talk about work/life balance and how it’s of critical importance
    for growing a successful career in web development while staying sane!
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将讨论工作与生活的平衡，以及它在保持理智的同时在网页开发领域成功发展的关键重要性！
- en: 'This part includes the following chapters:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 9*](B18315_09.xhtml#_idTextAnchor219), *Landing Your First Job*'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第 9 章*](B18315_09.xhtml#_idTextAnchor219)，*找到你的第一份工作*'
- en: '[*Chapter 10*](B18315_10.xhtml#_idTextAnchor259), *Discovering the Keys to
    Quality Work as a Web Developer*'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第 10 章*](B18315_10.xhtml#_idTextAnchor259)，*作为网络开发者发现高质量工作的关键*'
- en: '[*Chapter 11*](B18315_11.xhtml#_idTextAnchor279), *Reviewing Soft Skills (They
    Make You Hard to Deny)*'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第 11 章*](B18315_11.xhtml#_idTextAnchor279)，*回顾软技能（它们让你难以否认）*'
- en: '[*Chapter 12*](B18315_12.xhtml#_idTextAnchor300), *Growing Your Career*'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第 12 章*](B18315_12.xhtml#_idTextAnchor300)，*职业发展*'
