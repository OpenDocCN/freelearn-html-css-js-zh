- en: Chapter 1. Setting Up Your Workspace
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。设置您的工作区
- en: The overarching goal of this book is to give you the tools and know-how needed
    to efficiently construct modern, cross-platform solutions for your users. In this
    chapter, we will focus on the tools themselves, showing you how to bootstrap your
    development environment to tackle the challenges that we have in store for you
    in the remainder of the book. We will also give you a brief introduction to each
    tool in order to give you an idea about why they fit into your toolchain. If any
    such detail seems unclear at this point, do not worry. We will delve into everything
    you need to know about each tool in the relevant parts of the book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的总体目标是为您提供构建现代跨平台解决方案所需的工具和知识，以便有效地满足用户的需求。在本章中，我们将专注于工具本身，向您展示如何启动开发环境，以解决本书剩余部分中的挑战。我们还将简要介绍每个工具，以便让您了解它们为什么适合您的工具链。如果目前有任何不清楚的细节，不要担心。我们将在书的相关部分深入探讨每个工具的所有您需要了解的内容。
- en: After reading this chapter, you will know how to install, configure, and use
    the fundamental software components that we will use throughout this book. You
    will also have a good understanding of why these tools are appropriate for the
    development of modern apps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，您将知道如何安装、配置和使用本书中将使用的基本软件组件。您还将对为现代应用程序开发选择这些工具有很好的理解。
- en: The Node.js backend
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node.js后端
- en: Modern apps have several requirements, which cannot be provided by the app itself,
    such as central data storage, communication routing, and user management. In order
    to provide such services, apps rely on an external software component known as
    the backend. The backend will be executed on one or more remote servers, listen
    to network requests from the devices that run the app, and provide them with the
    services that requests require.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现代应用程序有一些要求，这些要求不能由应用程序本身提供，例如中央数据存储、通信路由和用户管理。为了提供这些服务，应用程序依赖于一个称为后端的外部软件组件。后端将在一个或多个远程服务器上执行，监听来自运行应用程序的设备的网络请求，并为它们提供请求所需的服务。
- en: The backend that we will use in this book is Node.js, a powerful but strange
    beast in its category. Node.js, at the time of writing this book, is the only
    major backend that is written almost entirely in JavaScript, which in reality
    is a frontend scripting language. The creators of Node.js wanted a backend that
    could be integrated with the apps written in JavaScript as seamlessly as possible,
    and you cannot get much closer to that than Node.js. Beyond this, Node.js is known
    for being both reliable and high-performing.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中将使用的后端是Node.js，它在其类别中是一个强大但奇特的存在。在撰写本书时，Node.js是唯一几乎完全用JavaScript编写的主要后端，而实际上JavaScript是一种前端脚本语言。Node.js的创建者希望有一个后端可以尽可能无缝地与JavaScript编写的应用程序集成，而Node.js就是最好的选择。此外，Node.js以可靠和高性能而闻名。
- en: In terms of architecture, Node.js is highly modularized and designed from the
    ground up to be extendable through plugins or packages. Node.js comes with its
    own package management system, **Node Package Manager** (**NPM**), through which
    you can easily install, remove, and manage packages for your project. You will
    see how to use NPM in order to install other necessary components later in this
    chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在架构方面，Node.js高度模块化，并且从头开始设计为可通过插件或软件包进行扩展。Node.js自带其自己的软件包管理系统**Node Package
    Manager**（**NPM**），通过它您可以轻松地为您的项目安装、移除和管理软件包。您将在本章后面看到如何使用NPM来安装其他必要的组件。
- en: Installing Node.js on different systems
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在不同系统上安装Node.js
- en: Node.js is delivered as a set of JavaScript libraries, executing on a C/C++
    runtime built around the Google V8 JavaScript Engine. The two come bundled together
    for most major **operating systems** (**OS**), and we will look at the specifics
    of installing it in the following sections.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js以一组JavaScript库的形式交付，执行在围绕Google V8 JavaScript引擎构建的C/C++运行时上。这两者对于大多数主要的**操作系统**（**OS**）来说是捆绑在一起的，我们将在接下来的部分中看到安装它的具体细节。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Google V8 JavaScript Engine is the same JavaScript engine that is used in the
    Chrome browser, which is built for speed and efficiency.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Google V8 JavaScript Engine是Chrome浏览器中使用的相同JavaScript引擎，专为速度和效率而构建。
- en: Windows
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: For Windows, there is a dedicated MSI wizard to install Node.js, which can be
    downloaded from the project's official website. To do so, go to the main page,
    navigate to **Downloads**, and then select **Windows Installer**. After it has
    downloaded, run the MSI wizard, follow the steps to select the installation options,
    and conclude the install. Keep in mind that you will need to restart your system
    in order to make the changes effective.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows，有一个专用的MSI向导来安装Node.js，可以从项目的官方网站下载。要这样做，转到主页，导航到**下载**，然后选择**Windows安装程序**。下载完成后，运行MSI向导，按照步骤选择安装选项，并完成安装。请记住，您需要重新启动系统以使更改生效。
- en: Linux
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux
- en: Most major Linux distributions provide convenient installs of Node.js through
    their own package management systems. However, it is important to keep in mind
    that for many of them, **Node Package Manager** (**NPM**) will not come bundled
    with the main Node.js package. Rather, it is provided as a separate package. We
    will show how to install both in the following section.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数主要的Linux发行版都通过其自己的软件包管理系统提供了方便的Node.js安装。然而，重要的是要记住，对于许多发行版来说，**Node Package
    Manager**（**NPM**）不会与主要的Node.js软件包捆绑在一起。相反，它是作为一个单独的软件包提供的。我们将在接下来的部分中展示如何安装两者。
- en: Ubuntu/Debian
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ubuntu/Debian
- en: Open a terminal and issue `sudo apt-get update` to make sure that you have the
    latest package listings. After this, issue `apt-get install nodejsnpm` in order
    to install both Node.js and NPM in one swoop.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端并输入`sudo apt-get update`，以确保您拥有最新的软件包列表。之后，输入`apt-get install nodejsnpm`以一举安装Node.js和NPM。
- en: Fedora/RHEL/CentOS
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fedora/RHEL/CentOS
- en: On Fedora 18 or later, open a terminal and issue `sudo yum install nodejsnpm`.
    The system will do the full setup for you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在Fedora 18或更高版本上，打开终端并输入`sudo yum install nodejsnpm`。系统将为您完成全部设置。
- en: If you are running RHEL or CentOS, you need to enable the optional EPEL repository.
    This can be done in conjunction with the install process, so that you do not need
    to do it again while upgrading the repository, by issuing the `sudo yum install
    nodejsnpm --enablerepo=epel` command.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在运行RHEL或CentOS，您需要启用可选的EPEL存储库。这可以与安装过程一起完成，因此在升级存储库时不需要再次执行，通过发出`sudo yum
    install nodejsnpm --enablerepo=epel`命令。
- en: Verifying your installation
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证您的安装
- en: 'Now that we have finished the install, let''s do a sanity check and make sure
    that everything works as expected. To do so, we can use the Node.js shell, which
    is an interactive runtime environment for the execution of JavaScript code. To
    open it, first open a terminal, and then issue the following to it:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了安装，让我们进行一次健全性检查，确保一切都按预期工作。为此，我们可以使用Node.js shell，这是一个用于执行JavaScript代码的交互式运行时环境。要打开它，首先打开终端，然后向其发出以下命令：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will start the interpreter, which will appear as a shell, with the input
    line starting with the `>` sign. Once you are in it, type the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动解释器，它将显示为一个shell，输入行以`>`符号开头。一旦进入其中，输入以下内容：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then press *Enter*. The **Hello world!** phrase should appear on the next line.
    Congratulations, your system is now set up for the running of Node.js!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后按*Enter*。**Hello world!**短语应该出现在下一行。恭喜，您的系统现在已经设置好运行Node.js！
- en: Mac OS X
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mac OS X
- en: 'For OS X, you can find a ready-to-install PKG file by going to [www.nodejs.org](http://www.nodejs.org),
    navigating to **Downloads**, and selecting the **Mac OS X Installer** option.
    Otherwise, you can click on **Install**, and your package file will automatically
    be downloaded:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于OS X，您可以通过访问[www.nodejs.org](http://www.nodejs.org)，转到**下载**，并选择**Mac OS X
    Installer**选项来找到一个准备好安装的PKG文件。否则，您可以单击**安装**，您的软件包文件将自动下载：
- en: '![Mac OS X](img/B04653_01_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![Mac OS X](img/B04653_01_01.jpg)'
- en: Once you have downloaded the file, run it and follow the instructions on the
    screen. It is recommended that you keep all the default settings offered unless
    there are compelling reasons for you to change something with regard to your specific
    machine.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，运行它并按照屏幕上的说明操作。建议您保留所有默认设置，除非您有充分的理由更改与您特定机器相关的内容。
- en: Verifying your installation
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证您的安装
- en: 'After the install finishes, open a terminal and start the Node.js shell by
    issuing the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，打开终端并通过以下命令启动Node.js shell：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will start the interactive node shell, where you can execute JavaScript
    code. To make sure that everything works, try issuing the following command to
    the interpreter:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动交互式的node shell，您可以在其中执行JavaScript代码。为了确保一切正常工作，请尝试向解释器发出以下命令：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After pressing the *Enter* key, the **hello world!** phrase will appear on your
    screen. Congratulations, Node.js is all set up and good to go!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Enter*键后，**hello world!**短语将出现在屏幕上。恭喜，Node.js已经设置好，可以使用了！
- en: Setting up the Ionic framework and Cordova for Mac OS X
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Mac OS X设置Ionic框架和Cordova
- en: 'After installing Node.js on your Mac, proceed to open your command-line application
    and input the following command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac上安装Node.js后，继续打开命令行应用程序并输入以下命令：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After inputting this command, you will be prompted to input your password as
    shown in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 输入此命令后，将提示您输入密码，如下截图所示：
- en: '![Setting up the Ionic framework and Cordova for Mac OS X](img/B04653_01_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![为Mac OS X设置Ionic框架和Cordova](img/B04653_01_02.jpg)'
- en: 'If you have already set up the permissions for `npm` on OS X, you can install
    Ionic with the following command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经在OS X上设置了`npm`的权限，您可以使用以下命令安装Ionic：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The preceding command line should result in the following output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令行应该产生以下输出：
- en: '![Setting up the Ionic framework and Cordova for Mac OS X](img/B04653_01_03.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![为Mac OS X设置Ionic框架和Cordova](img/B04653_01_03.jpg)'
- en: 'Installing Cordova on OS X is very similar to installing Ionic. You can run
    the following command to install Cordova:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在OS X上安装Cordova与安装Ionic非常相似。您可以运行以下命令来安装Cordova：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Setting up the Ionic framework and Cordova for Windows
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上设置Ionic框架和Cordova
- en: Once you have installed Node.js, install Ionic on your Windows machine. The
    rest should be straightforward.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您安装了Node.js，在Windows机器上安装Ionic。其余步骤应该很简单。
- en: 'Open the command prompt and check whether you have `npm` installed by running
    the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令提示符，并通过运行以下命令检查是否已安装`npm`：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once you have ensured that you have successfully installed `npm`, you can go
    ahead and run the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确保已成功安装了`npm`，您可以继续运行以下命令：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This step should result in an output, which shows that you have successfully
    installed Ionic.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤应该产生一个输出，显示您已成功安装了Ionic。
- en: 'In order to install Cordova, you can also use `npm` and run the following command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装Cordova，您也可以使用`npm`并运行以下命令：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Once you receive a successful output, you can go ahead and start setting up
    the platform dependencies.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您收到成功的输出，您可以继续开始设置平台依赖项。
- en: Note
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'An experimental setup for Windows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Windows的实验性设置：
- en: In Windows, you will have the opportunity to set up a Vagrant package, which
    is a one-stop-shop for the installation of Ionic on your Windows machine. This
    is accessible at [https://github.com/driftyco/ionic](https://github.com/driftyco/ionic)-
    box.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，您将有机会设置Vagrant软件包，这是在您的Windows机器上安装Ionic的一站式商店。这可以在[https://github.com/driftyco/ionic](https://github.com/driftyco/ionic)-
    box上访问。
- en: Setting up the platform dependencies
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置平台依赖项
- en: To set up the platform dependencies, you need to install Java, which is explained
    in the following section.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置平台依赖项，您需要安装Java，这在下一节中有解释。
- en: Installing Java
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Java
- en: If you do not have Java installed or if your version is below 6.0, install the
    Java JDK by heading over to [http://j.mp/javadevkit-download](http://j.mp/javadevkit-download),
    a customized and shortened link, and choosing the version that applies to you.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装Java，或者您的版本低于6.0，请前往[http://j.mp/javadevkit-download](http://j.mp/javadevkit-download)安装Java
    JDK，并选择适合您的版本。
- en: The main recommendation for these projects is that you install a version of
    JDK 6.0 or higher.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项目的主要建议是安装JDK 6.0或更高版本。
- en: Select the JDK for your OS. On an Intel-based Mac, you can use the following
    useful table to check whether your Mac is a 32- or 64-bit OS.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 选择适合您操作系统的JDK。在基于英特尔的Mac上，您可以使用以下有用的表格来检查您的Mac是32位还是64位操作系统。
- en: 'You can check for **Processor Name** by clicking on the Apple logo in the top-left
    corner of your screen, followed by **About my Mac**:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过单击屏幕左上角的苹果图标，然后单击**关于我的Mac**来检查**处理器名称**：
- en: '| Processor Name | 32- or 64-bit |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: 处理器名称 | 32位或64位
- en: '| --- | --- |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Intel Core Solo | 32 bit |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: 英特尔酷睿Solo | 32位
- en: '| Intel Core Duo | 32 bit |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: 英特尔酷睿双核 | 32位
- en: '| Intel Core 2 Duo | 64 bit |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: 英特尔酷睿2双核 | 64位
- en: '| Intel Quad-Core Xeon | 64 bit |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: 英特尔四核至强 | 64位
- en: '| Dual-Core Intel Xeon | 64 bit |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: 双核英特尔至强 | 64位
- en: '| Quad-Core Intel Xeon | 64 bit |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: 四核英特尔至强至强 | 64位
- en: '| Core i3 | 64 bit |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: 酷睿i3 | 64位
- en: '| Core i5 | 64 bit |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: 酷睿i5 | 64位
- en: '| Core i7 | 64 bit |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: 酷睿i7 | 64位
- en: In the case of Windows, if you have a machine that was purchased in the last
    few years, you should go for the x64 (64-bit) version.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows的情况下，如果您的计算机是在过去几年内购买的，您应该选择x64（64位）版本。
- en: Setting up Android Studio for Android, Mac, and Windows
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Android、Mac和Windows设置Android Studio
- en: 'To set up Android Studio for Android, Mac, and Windows, follow these steps:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要为Android、Mac和Windows设置Android Studio，请按照以下步骤进行：
- en: Go to the Android Developers site by visiting [http://developer.android.com](http://developer.android.com).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Android开发者网站，网址为[http://developer.android.com](http://developer.android.com)。
- en: Click on **Android Studio**, where you will be directed to the landing page.
    Your operating system's version will be detected automatically:![Setting up Android
    Studio for Android, Mac, and Windows](img/B04653_01_06.jpg)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**Android Studio**，您将被引导到首页。您的操作系统版本将被自动检测：![为Android、Mac和Windows设置Android
    Studio](img/B04653_01_06.jpg)
- en: Accept the terms and conditions of the Software Use Agreement and click on **Download**:![Setting
    up Android Studio for Android, Mac, and Windows](img/B04653_01_07.jpg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受软件使用协议的条款和条件，然后点击**下载**：![为Android、Mac和Windows设置Android Studio](img/B04653_01_07.jpg)
- en: For Mac, double-click on the downloaded file, follow the prompts, and then drag
    the Android Studio icon into your **Applications** folder:![Setting up Android
    Studio for Android, Mac, and Windows](img/B04653_01_08.jpg)
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Mac，双击下载的文件，按照提示操作，然后将Android Studio图标拖入**应用程序**文件夹中：![为Android、Mac和Windows设置Android
    Studio](img/B04653_01_08.jpg)
- en: For Windows, open the downloaded file, and then go through the **Android Studio
    Setup** **Wizard** to complete the install.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Windows，打开下载的文件，然后按照**Android Studio设置** **向导**完成安装。
- en: Setting up the Android Software Development Kit
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Android软件开发工具包
- en: The process of setting up the Android **Software Development Kit** (**SDK**)
    has improved vastly with the introduction of Android Studio, as a number of software
    packages come pre-installed with the Android Studio install package. As a part
    of the preparation for getting started with our Android projects, it will be very
    helpful to understand how one can install (or even uninstall) SDKs within Android
    Studio.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Android Studio的推出，设置Android**软件开发工具包**（**SDK**）的过程得到了很大改善，因为许多软件包都预装在Android
    Studio安装包中。作为准备开始我们的Android项目的一部分，了解如何在Android Studio中安装（甚至卸载）SDK将非常有帮助。
- en: 'There are a number of ways of accessing the SDK Manager. This can be done from
    the main toolbar of Android Studio:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方式可以访问SDK管理器。可以从Android Studio的主工具栏中进行：
- en: '![Setting up the Android Software Development Kit](img/B04653_01_09.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![设置Android软件开发工具包](img/B04653_01_09.jpg)'
- en: 'Otherwise, it can be accessed from the **Start** menu by navigating to **Configure**—**SDK
    Manager**:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，可以从**开始**菜单中访问**配置**—**SDK管理器**：
- en: '![Setting up the Android Software Development Kit](img/B04653_01_10.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![设置Android软件开发工具包](img/B04653_01_10.jpg)'
- en: 'This is what the SDK Manager looks like. If you need to install a package,
    you need to check the mark of that particular package, click on **Install packages**,
    and then finally accept the licenses:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是SDK管理器的外观。如果您需要安装软件包，您需要选中特定软件包的标记，然后单击**安装软件包**，最后接受许可证：
- en: '![Setting up the Android Software Development Kit](img/B04653_01_11.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![设置Android软件开发工具包](img/B04653_01_11.jpg)'
- en: Setting up your physical Android device for development
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为开发设置您的物理Android设备
- en: 'The following are the three main steps that need to be taken in order to enable
    your Android Device for development:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是启用Android设备开发所需采取的三个主要步骤：
- en: Enable **Developer options** on your specific Android device
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您特定的Android设备上启用**开发者选项**
- en: Enable **USB debugging**
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**USB调试**
- en: Provide your computer with the necessary trust credentials with the installed
    IDE via secure USB debugging. (devices with Android 4.4.2)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过安装IDE为您的计算机提供必要的信任凭据，通过安全USB调试。 (Android 4.4.2设备)
- en: Enabling Developer options
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用开发者选项
- en: Depending on your device, this might vary slightly, but as from Android 4.2
    and higher, the **Developer options** screen is hidden by default.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的设备，这可能会有所不同，但是从Android 4.2及更高版本开始，默认情况下**开发者选项**屏幕是隐藏的。
- en: To enable it, navigate to **Settings** | **About phone** and click on the **Build**
    number seven times. You will find **Developer options** enabled when you return
    to the previous screen.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用它，请转到**设置** | **关于手机**，然后点击**版本号**七次。当您返回到上一个屏幕时，您会发现**开发者选项**已启用。
- en: Enabling USB debugging
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用USB调试
- en: '**USB debugging** enables the IDE to communicate with the device via the USB
    port. This can be activated after enabling **Developer options** and is done by
    checking the **USB debugging** using the following this path:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**USB调试**使IDE能够通过USB端口与设备通信。在启用**开发者选项**后，可以激活此功能，方法是勾选**USB调试**，路径如下：'
- en: '**Settings**—**Developer Options**—**Debugging**—**USB debugging**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置**—**开发者选项**—**调试**—**USB调试**'
- en: Trusting a computer with installed IDE using secure USB debugging (devices with
    Android 4.4.2)
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信任使用安全USB调试（Android 4.4.2设备）安装IDE的计算机
- en: You have to accept the RSA key on your phone or tablet before anything can flow
    between the device via the **Android Debug Bridge** (**ADB**). This is done by
    connecting the device to the computer via USB, which triggers a notification entitled
    **Enable USB Debugging?**
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在设备之间可以流动任何东西之前，您必须在手机或平板电脑上接受RSA密钥，通过**Android调试桥**（**ADB**）进行连接。这是通过通过USB将设备连接到计算机来完成的，这将触发一个名为**启用USB调试？**的通知。
- en: Check off **Always allow from this** **Computer** and click on **OK**.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选**始终允许此** **计算机**并单击**确定**。
- en: Setting up the Environment Variables on Windows 7 and higher
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows 7及更高版本上设置环境变量
- en: 'Using Ionic and Cordova to build an Android app might require a modification
    to the **PATH** environment on Windows. This can be done with the following steps:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ionic和Cordova构建Android应用程序可能需要在Windows上修改**PATH**环境。可以通过以下步骤完成：
- en: Right-click on **My Computer** and then click on **Properties**.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**我的电脑**，然后单击**属性**。
- en: Click on **Advanced System Settings** in the column to the left.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧的栏中单击**高级系统设置**。
- en: In the resulting dialog box, select **Environment Variables**.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生成的对话框中，选择**环境变量**。
- en: Select the **PATH** variable and click on **Edit**.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**PATH**变量，然后单击**编辑**。
- en: 'Append the following to the **PATH** based on where you installed the SDK:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您安装SDK的位置，将以下内容追加到**PATH**中：
- en: '[PRE10]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Setting up the Environment Variables for iOS on Mac OS X
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Mac OS X上为iOS设置环境变量
- en: Developing for iOS requires you to develop from a machine that runs on Mac OS
    X. At this point in time, it's not possible to develop iOS applications from Windows.
    In the following steps, we will outline how to get started with developing Ionic
    apps for iOS.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为iOS开发需要从运行Mac OS X的机器进行开发。目前，无法从Windows开发iOS应用程序。在以下步骤中，我们将概述如何开始开发iOS的Ionic应用程序。
- en: Installing the iOS SDK
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装iOS SDK
- en: 'The following are two ways that can be used to download Xcode:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是两种可用于下载Xcode的方法：
- en: From the App Store, search for **Xcode** in the App Store application
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从App Store中，在应用程序中搜索**Xcode**
- en: It is available at Apple Developer Downloads, which requires you to register
    as an Apple Developer.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可在Apple Developer Downloads上找到，这需要您注册为Apple开发者。
- en: Command-line tools are integrated within Xcode. Previously, this was installed
    separately. Once you've downloaded and installed Xcode, you are prepared to handle
    iOS projects from a machine that has Mac OS X enabled.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行工具已集成在Xcode中。以前是单独安装的。下载并安装Xcode后，您就可以准备好从具有Mac OS X的机器处理iOS项目了。
- en: MongoDB
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB
- en: In order to store data related to your app and users, your server will need
    a database—a piece of software that is dedicated solely to data storage and retrieval.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了存储与您的应用程序和用户相关的数据，您的服务器将需要一个数据库——一个专门用于数据存储和检索的软件。
- en: Databases come in many variants. In this book, our focus is **NoSQL** databases,
    which are so named because they don't use the traditional table-oriented SQL data
    access architecture that is used by the more well-known relational databases,
    such as Oracle, MySQL, and PostgreSQL. NoSQL databases are very novel in their
    design and features and excellent for the tackling of the challenges that one
    may face in modern app development.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库有许多变种。在本书中，我们关注的是**NoSQL**数据库，因为它们不使用传统的基于表的SQL数据访问架构，而是使用更知名的关系数据库（如Oracle、MySQL和PostgreSQL）所使用的。NoSQL数据库在设计和功能上非常新颖，非常适合解决现代应用程序开发中可能遇到的挑战。
- en: The NoSQL database that we will use throughout this book is MongoDB (it is often
    abbreviated as MDB or simply Mongo). MongoDB is a document-oriented database that
    which stores data in documents, which are data structures that are almost identical
    to the standard JSON format.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中将使用的NoSQL数据库是MongoDB（通常缩写为MDB或简称Mongo）。MongoDB是一个面向文档的数据库，它将数据存储在几乎与标准JSON格式完全相同的数据结构中。
- en: Let's have a look at how to install and get MongoDB running. If you have used
    a more traditional DB system, you may be surprised at how easy it is.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何安装和运行MongoDB。如果您使用过更传统的数据库系统，您可能会对其易用性感到惊讶。
- en: Installation of MongoDB on different Operating System
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在不同操作系统上安装MongoDB
- en: MongoDB comes in the form of a package for most major OS and versions.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB以软件包的形式提供给大多数主要操作系统和版本。
- en: Windows
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows
- en: 'MongoDB ships with a complete MSI for installation on Windows systems. To download
    it, go to the project''s official website, [www.mongodb.org](http://www.mongodb.org),
    navigate to **Downloads**, and select the **Windows** tab. You will be offered
    the following three choices to download:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB附带了完整的MSI，可用于在Windows系统上安装。要下载它，请转到项目的官方网站[www.mongodb.org](http://www.mongodb.org)，导航到**下载**，然后选择**Windows**选项卡。您将被提供以下三种下载选择：
- en: '**Windows 64-bit R2+**: Use this if you are running Windows Server 2008, Windows
    7 64-bit, or a newer version of Windows'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 64位 R2+**：如果您正在运行Windows Server 2008、64位Windows 7或更新版本的Windows'
- en: '**Windows 32-bit**: Use this if you have a 32-bit Windows installation that
    is newer than Windows Vista'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 32位**：如果您使用的是新于Windows Vista的32位Windows安装'
- en: '**Windows 64-bit legacy**: Use this if you are using Windows Vista 64-bit,
    Windows Server 2003, or Windows Server 2008.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 64位旧版**：如果您使用的是Windows Vista 64位、Windows Server 2003或Windows Server
    2008。'
- en: Note
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: MongoDB does not run on Windows XP at all.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB根本无法在Windows XP上运行。
- en: After you have downloaded the MSI, run it with administrator privileges in order
    to perform the installation. The installation wizard will give you a default location
    where MongoDB will be installed—`C:/mongodb/`. You can change this if you desire,
    but it is recommended that you keep it as we will assume that this is the location
    where MongoDB resides for the remainder of the book.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 下载MSI后，以管理员权限运行它以执行安装。安装向导将为您提供MongoDB将安装的默认位置—`C:/mongodb/`。如果需要，您可以更改此位置，但建议您保持不变，因为我们将假定这是MongoDB在本书的其余部分中所在的位置。
- en: 'After the installation has finished, the next step is to configure a data directory
    where MongoDB can store the data that we will feed it with. The default location
    for this directory is `/data/db`. We will need to make sure that this directory
    exists and is writeable before we start our MongoDB instance for the first time.
    So, fire up the command prompt with administrator privileges and issue the `md/data/dbcommand`.
    After doing so, we are good to start the database server itself. To do so, stay
    in the command prompt and issue the following command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，下一步是配置一个数据目录，MongoDB可以在其中存储我们将输入的数据。此目录的默认位置是`/data/db`。在我们首次启动MongoDB实例之前，我们需要确保此目录存在并可写。因此，请以管理员权限启动命令提示符，并发出`md/data/db`命令。完成后，我们可以启动数据库服务器本身。要这样做，请保持在命令提示符中，并发出以下命令：
- en: '[PRE11]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You should receive a confirmation that MongoDB is now running and listening
    for connections. All is set!
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该收到确认消息，MongoDB现在正在运行并正在等待连接。一切都准备就绪！
- en: Linux
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux
- en: On Linux, you will find MongoDB ready-packaged on most major distributions.
    However, we strongly recommend that you use the project's own repositories in
    order to make sure that you always have access to the most current security and
    stability updates.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上，您会发现大多数主要发行版上都预装了MongoDB。但是，我们强烈建议您使用项目自己的存储库，以确保您始终可以访问最新的安全性和稳定性更新。
- en: Ubuntu
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ubuntu
- en: 'First off, you will need to enable the official MongoDB repository. To do so,
    open a terminal and first import the project''s public **GNU Privacy Guard** (**GPG**)
    key as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要启用官方的MongoDB存储库。要这样做，请打开终端并按以下方式导入项目的公共**GNU隐私保护**（**GPG**）密钥：
- en: '[PRE12]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Once this is done, create a listing for the repository itself by issuing the
    following command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，通过发出以下命令为存储库本身创建一个列表：
- en: '[PRE13]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Your repository listing is now active. Let''s make **Advanced Package Tool**
    (**APT**) aware of it in order to install MongoDB, as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您的存储库列表现在已激活。让**高级软件包工具**（**APT**）意识到它以安装MongoDB，如下所示：
- en: '[PRE14]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, issue the following command to install MongoDB:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过执行以下命令安装MongoDB：
- en: '[PRE15]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Fedora/RHEL/CentOS
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Fedora/RHEL/CentOS
- en: 'Our first order of business here is to enable the official MongoDB repository.
    To do so, first make sure that you have the nano text editor installed by opening
    a terminal and issuing the following command:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的首要任务是启用官方的MongoDB存储库。要这样做，首先确保您已安装了nano文本编辑器，方法是打开终端并执行以下命令：
- en: '[PRE16]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'After this is done, add the repository by issuing the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，通过发出以下命令添加存储库：
- en: '[PRE17]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Nano will open a new, blank text file. Copy and paste the following into the
    file:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Nano将打开一个新的空白文本文件。将以下内容复制并粘贴到文件中：
- en: '[PRE18]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save and close the file by pressing *Ctrl+O*, followed by the *Enter* key. This
    is followed by *Ctrl+X*.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Ctrl+O*，然后按*Enter*键保存并关闭文件。然后按*Ctrl+X*。
- en: 'Finally, carry out the installation by issuing the following command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过执行以下命令进行安装：
- en: '[PRE19]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Starting MongoDB
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动MongoDB
- en: 'After the installation of MongoDB, you will need to start MongoDB as a service
    in order to get it running. To do so (on all the distros that were previously
    mentioned), open a terminal and run the following command:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 安装MongoDB后，您需要将MongoDB作为服务启动以使其运行。要这样做（在之前提到的所有发行版上），打开终端并运行以下命令：
- en: '[PRE20]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'It is important that if you have SELinux running, you must make sure that it
    allows MongoDB to access its default port. To do so, issue the following before
    you issue the preceding command:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，如果您正在运行SELinux，您必须确保它允许MongoDB访问其默认端口。要这样做，请在发出上述命令之前执行以下操作：
- en: '[PRE21]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Mac OS X
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mac OS X
- en: The easiest way to both install and stay up to date with MongoDB on OS X is
    by using the **Homebrew** package manager. Even if we just use it to install MongoDB
    here, you will most likely find it useful later for the installation of other
    software packages that you may need for your own projects after you finish this
    book.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在OS X上安装MongoDB并保持最新的最简单方法是使用**Homebrew**软件包管理器。即使我们只是在这里使用它来安装MongoDB，您在完成本书后很可能会发现它对于安装其他软件包也很有用。
- en: 'Installing Homebrew is simple; just open a terminal and issue the following
    command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Homebrew很简单；只需打开终端并执行以下命令：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'When this finishes, make sure that the Homebrew package database is up to date,
    as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，请确保Homebrew软件包数据库是最新的，方法如下：
- en: '[PRE23]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Finally, install MongoDB by simply issuing the following command:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，只需发出以下命令安装MongoDB：
- en: '[PRE24]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'When the install has finished, we will need to define a data directory in order
    to give a location for MongoDB to store its data. By default, this directory will
    be at `/data/db`. So, unless you specify something else, you will need to make
    sure that this directory exists and is both writeable and readable by the user
    running your MongoDB instance. For example, if the user running MongoDB on your
    system is *john*, you will have to issue the following commands:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们需要定义一个数据目录，以便为MongoDB提供存储数据的位置。默认情况下，此目录将位于`/data/db`。因此，除非您指定其他内容，否则需要确保此目录存在，并且由运行MongoDB实例的用户具有可写和可读权限。例如，如果在您的系统上运行MongoDB的用户是*john*，您将需要执行以下命令：
- en: '[PRE25]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now that this is done, it is time to start up MongoDB. To do so, make sure
    that you are logged in as *john*, open a terminal, and simply issue the following
    command:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这一步已经完成，是时候启动MongoDB了。要这样做，请确保您已经以*john*登录，打开终端，然后简单地执行以下命令：
- en: '[PRE26]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: That's it! You should receive a notification that MongoDB has started and is
    listening for a connection. Your instance is ready to go!
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！您应该收到一个通知，告诉您MongoDB已经启动并正在等待连接。您的实例已经准备就绪！
- en: Connecting to MongoDB
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 连接到MongoDB
- en: In order to read and write from the MongoDB instance, we will first need to
    connect to it. In fact, MongoDB acts as a server in its own right. It exposes
    its functionality via a network port on which clients can then connect either
    through the local machine, or even over the Internet.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从MongoDB实例中读取和写入，我们首先需要连接到它。实际上，MongoDB本身就像一个服务器。它通过网络端口公开其功能，客户端可以通过本地机器或甚至通过互联网连接到它。
- en: Note
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since this functionality is disabled by default due to it being a shoddy security
    practice, it will require a special configuration of the operating system that
    MongoDB is running on. We will not discuss this functionality as it falls outside
    the scope of this book, but we will refer to the MongoDB documentation for several
    helpful examples of how to achieve it for a variety of OS.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个功能默认情况下是禁用的，因为这是一个糟糕的安全实践，它将需要对MongoDB运行的操作系统进行特殊配置。我们不会讨论这个功能，因为它超出了本书的范围，但我们会参考MongoDB文档，其中有几个有用的示例，说明如何在各种操作系统上实现它。
- en: 'To connect to a MongoDB instance, you will need at least the following information:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到MongoDB实例，您至少需要以下信息：
- en: '**The IP address of the instance**: If you are accessing an instance on your
    local machine, this will be *local host* by default.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实例的IP地址**：如果您正在访问本地机器上的实例，这将默认为*本地主机*。'
- en: '**The port on which MongoDB is listening**: Unless you configure a custom value,
    this will always default to port *27017*.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB正在监听的端口**：除非您配置了自定义值，否则这将始终默认为端口*27017*。'
- en: '**The database that you are trying to connect to**: Don''t confuse this with
    the MongoDB instance itself. Each MongoDB instance can contain any number of databases,
    with each belonging to different users. The instance simply manages access to
    them.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**您要连接的数据库**：不要将其与MongoDB实例本身混淆。每个MongoDB实例可以包含任意数量的数据库，每个数据库属于不同的用户。实例只是管理对它们的访问。'
- en: 'Alternatively, you may also need the following:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可能还需要以下内容：
- en: A username and its associated password to grant you access to the instance and
    any databases therein that you are authorized to interact with.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用户名及其关联的密码，以授予您访问实例和其中您被授权与之交互的任何数据库的权限。
- en: A very easy way to try out this connectivity yourself and verify that MongoDB
    works as expected is by using the MongoDB shell, a tool that comes installed with
    MongoDB itself using the methods that we have described previously. How you access
    the shell varies depending on your OS. I will show each method in the following
    section and then give an example of how to use the shell itself since this will
    be the same on all platforms.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 验证MongoDB是否按预期工作的一个非常简单的方法是使用MongoDB shell，这是一个随MongoDB本身安装的工具，使用我们之前描述的方法。您如何访问shell取决于您的操作系统。我将在下一节中展示每种方法，然后给出如何使用shell本身的示例，因为这在所有平台上都是相同的。
- en: Windows
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows
- en: 'First, make sure that MongoDB is running by following the process that was
    outlined previously. After this, issue the following command in your command prompt:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保MongoDB正在运行，按照之前概述的过程进行。之后，在命令提示符中输入以下命令：
- en: '[PRE27]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Linux and OS X
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux和OS X
- en: 'First, make sure that MongoDB is running. Then, open a terminal and issue the
    following command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保MongoDB正在运行。然后，打开一个终端并输入以下命令：
- en: '[PRE28]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Now that our shell is running, let's verify that everything works by creating
    a database and adding some data to it.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的shell正在运行，让我们通过创建一个数据库并向其中添加一些数据来验证一切是否正常。
- en: 'To create a database, issue the following command to the shell:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个数据库，请在shell中输入以下命令：
- en: '[PRE29]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This will create a database named `Fruits`, to which we can immediately start
    adding data. (What, you were expecting more overhead? Not in MongoDB!)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为`Fruits`的数据库，我们可以立即开始向其中添加数据。（什么，您期望有更多开销吗？在MongoDB中没有！）
- en: 'We will not add a collection to our database. A collection is simply a basket
    of data entries, which are grouped based on some logical characteristic. For example,
    let''s suppose that we want a collection of chewy fruits. We then issue the following
    command:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会向我们的数据库添加一个集合。集合只是一组数据条目，根据某种逻辑特征进行分组。例如，假设我们想要一个有嚼劲的水果集合。然后，我们输入以下命令：
- en: '[PRE30]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The shell should respond with the `{ "ok" : 1 }` JSON response that tells us
    that everything went well. Now, let''s add some chewy fruits to our collection,
    as follows:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 'Shell应该会回应`{ "ok" : 1 }`的JSON响应，告诉我们一切都进行得很顺利。现在，让我们向我们的集合中添加一些有嚼劲的水果，如下所示：'
- en: '[PRE31]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Even if the naming makes it intuitively clear what is going on in the preceding
    code, don't worry if you do not understand all the details yet. We will get to
    this in due course.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 即使前面的代码命名使得直观地清楚了发生了什么，如果您还不完全理解所有细节，也不用担心。我们会在适当的时候讲到这些。
- en: 'Finally, let''s make MongoDB show us the chewy fruits that we stored. Issue
    the following command:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们让MongoDB显示我们存储的有嚼劲的水果。输入以下命令：
- en: '[PRE32]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The shell will respond with something like the following:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Shell将会回应类似以下内容：
- en: '[PRE33]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The `_id` numbers will be different on your system, but you will find that the
    names are the same. All the fruits are where we want them to be.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的系统上，`_id`号码会不同，但您会发现名称是相同的。所有水果都在我们想要的位置。
- en: Congratulations, you now have a fully working MongoDB setup ready for action!
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您现在拥有一个完全可用的MongoDB设置，准备好投入使用！
- en: Summary
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: By now, you may have perhaps noted the red thread running through all the components
    that we picked for our toolchain; they are all based on JavaScript. This gives
    us the ability to write all our logic from top to bottom in one single language
    rather than using different ones for different components (Objective-C or Java
    for the client, PHP for the server, SQL for the database, or some other unholy
    combination). As you will see throughout the remainder of the book, this will
    make it much easier for us to write concise, focused, and comprehensible code.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能已经注意到我们为工具链选择的所有组件之间的联系；它们都基于JavaScript。这使我们能够使用一种语言从头到尾编写所有逻辑，而不是为不同的组件使用不同的语言（客户端使用Objective-C或Java，服务器使用PHP，数据库使用SQL，或者其他混合语言）。正如你将在本书的其余部分中看到的，这将使我们更容易编写简洁、专注和易于理解的代码。
- en: Once you go through all the preceding steps, I can safely assume that you have
    the necessary toolkit and you are ready to tackle the upcoming chapters, where
    we will have an opportunity to create our very first Ionic app and make it work
    on both Android and iOS devices.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了所有前面的步骤，我可以安全地假设你已经具备了必要的工具包，并且准备好应对即将到来的章节，在那里我们将有机会创建我们的第一个Ionic应用，并使其在Android和iOS设备上运行。
- en: Once you finish setting up your workspace, I recommend that you spend some time
    reading the Apache Cordova documentation, especially the documentation related
    to the different platform dependencies.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了设置工作区，我建议你花一些时间阅读Apache Cordova的文档，特别是与不同平台依赖相关的文档。
- en: In the next chapter, we will perform further preparations and configure persistence
    with MongoDB as part of our preparations for our very own backend for our Ionic
    app.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将进行进一步的准备工作，并配置MongoDB作为我们Ionic应用的后端的一部分。
