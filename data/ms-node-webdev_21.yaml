- en: '19'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '19'
- en: 'SportsStore: Authentication'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SportsStore：身份验证
- en: In this chapter, I will use the OAuth protocol to allow users to use their Google
    accounts to identify themselves to the *SportsStore* application, instead of manually
    entering their contact details.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将使用OAuth协议允许用户使用他们的Google账户来识别他们自己到*SportsStore*应用程序，而不是手动输入他们的联系信息。
- en: Preparing for this chapter
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备本章内容
- en: This chapter uses the `sportsstore` project from *Chapter 18*. No changes are
    required for this chapter. Open a new command prompt, navigate to the `sportsstore`
    folder, and run the command shown in *Listing 19.1* to start the development tools.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章使用*第18章*中的`sportsstore`项目。本章不需要进行任何更改。打开一个新的命令提示符，导航到`sportsstore`文件夹，并运行*列表19.1*中显示的命令以启动开发工具。
- en: '**Tip**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: You can download the example project for this chapter – and for all the other
    chapters in this book – from [https://github.com/PacktPublishing/Mastering-Node.js-Web-Development](https://github.com/PacktPublishing/Mastering-Node.js-Web-Development).
    See *Chapter 1* for how to get help if you have problems running the examples.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[https://github.com/PacktPublishing/Mastering-Node.js-Web-Development](https://github.com/PacktPublishing/Mastering-Node.js-Web-Development)下载本章的示例项目——以及本书中所有其他章节的示例项目。如果你在运行示例时遇到问题，请参阅*第1章*了解如何获取帮助。
- en: 'Listing 19.1: Starting the development tools'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.1：启动开发工具
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Open a new browser window, navigate to `http://localhost:5000`, and you will
    see the product catalog, as shown in *Figure 19.1*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的浏览器窗口，导航到`http://localhost:5000`，你将看到产品目录，如图19.1所示。
- en: '![](img/B21959_19_01.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21959_19_01.png)'
- en: 'Figure 19.1: Running the application'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.1：运行应用程序
- en: Understanding the OAuth authentication process
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解OAuth身份验证过程
- en: OAuth allows users to grant applications access to their data without needing
    to provide their credentials to that application. During development, the developer
    registers their application with an OAuth authentication service and receives
    an ID that is used to identify the application to the service, as well as a secret
    that is used to sign and verify messages between the application and the service.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth允许用户在不向该应用程序提供凭证的情况下授予应用程序访问他们数据的权限。在开发过程中，开发者将他们的应用程序注册到OAuth身份验证服务中，并接收一个用于识别应用程序给服务的ID，以及一个用于在应用程序和服务之间签名和验证消息的秘密。
- en: The registration process establishes the relationship between the application
    and the authentication service. Registration is done once and is performed before
    the application is deployed. Some degree of vetting may be required. The SportsStore
    application uses the Google OAuth service, which makes its basic features – such
    as the ones used in this chapter – available immediately, but reviews applications
    before more sensitive data can be accessed, and this can take days or weeks to
    complete.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注册过程建立了应用程序和身份验证服务之间的关系。注册是一次性完成的，并在应用程序部署之前执行。可能需要进行一定程度的审查。SportsStore应用程序使用Google
    OAuth服务，这使得其基本功能（如本章中使用的功能）立即可用，但在访问更敏感数据之前会审查应用程序，这可能需要几天或几周的时间才能完成。
- en: Once the application is deployed, the user is presented with a button that offers
    them the option to sign in to the application with the authentication provider,
    or grant the application access to the data stored by the provider. *Figure 19.2*
    shows the simple example button added to the SportsStore application later in
    the chapter, which grants the application access to the user’s basic information,
    such as their name and email address.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用程序部署完成，用户将看到一个按钮，该按钮提供他们使用身份验证提供者登录应用程序或授予应用程序访问提供者存储的数据的选项。*图19.2*展示了本章后面添加到SportsStore应用程序中的简单示例按钮，该按钮授予应用程序访问用户的基本信息，例如他们的姓名和电子邮件地址。
- en: '![](img/B21959_19_02.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21959_19_02.png)'
- en: 'Figure 19.2: The OAuth button that will be added to the SportsStore application'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.2：将被添加到SportsStore应用程序中的OAuth按钮
- en: When the user clicks the button, the browser will be redirected to a URL that
    starts the authentication process. The user will be prompted for their credentials,
    which are not revealed to the application. The authentication process will show
    the user which application they are signing into and the data that the application
    has asked for. *Figure 19.3* shows the authentication prompt that will be shown
    to users of *SportsStore* once OAuth has been configured later in this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击按钮时，浏览器将重定向到一个以开始身份验证过程的 URL。用户将被提示输入他们的凭据，这些凭据不会显示给应用程序。身份验证过程将向用户显示他们正在登录的应用程序以及应用程序请求的数据。*图
    19.3* 展示了在本书本章后面配置 OAuth 后，将向 *SportsStore* 的用户显示的身份验证提示。
- en: '![](img/B21959_19_03.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21959_19_03.png)'
- en: 'Figure 19.3: Authenticating with the OAuth service'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.3：使用 OAuth 服务进行身份验证
- en: Once the user has authenticated themselves, their browser is redirected back
    to the application, using a URL that contains an access code. The application
    sends an HTTP request directly to Google and exchanges the access code for the
    data it requires.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦用户完成身份验证，他们的浏览器将使用包含访问代码的 URL 重定向回应用程序。应用程序将直接向 Google 发送 HTTP 请求，并交换访问代码以获取所需的数据。
- en: Understanding the advantages of OAuth
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 OAuth 的优势
- en: From the user’s perspective, OAuth allows them to use applications and services
    without having to create accounts on each one or repeatedly entering the same
    details. From the developer’s perspective, OAuth enables authentication without
    having to implement and manage the workflows for password recovery, two-factor
    authentication, and so on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户的角度来看，OAuth 允许他们使用应用程序和服务，而无需在每个应用程序上创建账户或重复输入相同的详细信息。从开发者的角度来看，OAuth 允许在不实现和管理密码恢复、双因素认证等工作流程的情况下进行身份验证。
- en: These advantages apply when using the OAuth services provided by big technology
    and social media companies. There are also OAuth services that you can use to
    manage just the user accounts for your application, in which case users will still
    have to create accounts, but the authentication process and the workflows are
    implemented by the OAuth provider. The most popular service is [https://auth0.com](https://auth0.com),
    but there are alternatives, and most offer free and paid-for tiers of service.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些优势适用于使用大型科技和社交媒体公司提供的 OAuth 服务。还有一些 OAuth 服务，您可以用来仅管理您应用程序的用户账户，在这种情况下，用户仍然需要创建账户，但身份验证过程和工作流程由
    OAuth 提供商实现。最受欢迎的服务是 [https://auth0.com](https://auth0.com)，但还有其他选择，大多数提供免费和付费的服务级别。
- en: Understanding the limitations of OAuth
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 OAuth 的限制
- en: Users will not always be willing to associate their account data with an application.
    This can be because they don’t trust the application, or that they don’t want
    their account associated with certain types of content. You may find that users
    are reluctant to use OAuth If you provide adult content of any sort, for example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 用户并不总是愿意将他们的账户数据与一个应用程序关联。这可能是因为他们不相信该应用程序，或者他们不希望他们的账户与某些类型的内容关联。例如，如果您提供任何形式的成人内容，您可能会发现用户不愿意使用
    OAuth。
- en: From the developer’s perspective, the main limitation of OAuth is the complexity
    of the initial setup. Even with a good authentication package, like the one used
    in this chapter, OAuth rarely works without some tinkering, and figuring out why
    authentication isn’t working can be a slow and confusing task.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从开发者的角度来看，OAuth 的主要限制是初始设置的复杂性。即使有良好的身份验证包，如本章中使用的，OAuth 也很少不需要调整就能工作，找出身份验证为何不工作可能是一个缓慢且令人困惑的任务。
- en: Creating the Google OAuth credentials
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Google OAuth 凭据
- en: There are many OAuth providers, but the most widely used are those provided
    by the major technology companies, including Google and Facebook, because these
    are the accounts that most users already have. For the *SportsStore* application,
    I am going to use the Google OAuth service, but the process for other providers
    is similar.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多 OAuth 提供商，但最广泛使用的是由主要科技公司提供的，包括 Google 和 Facebook，因为这些是大多数用户已经拥有的账户。对于 *SportsStore*
    应用程序，我将使用 Google OAuth 服务，但其他提供商的过程类似。
- en: '**Getting help with external authentication**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**获取外部身份验证的帮助**'
- en: The setup process I describe in this chapter is correct at the time of writing
    but may change by the time you read this chapter. Google regularly revises its
    developer portal, and you may find that features are given different names or
    arranged in different ways. The changes are likely to be small, but every authentication
    service provides developer documentation, which should point you in the right
    direction.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本章中描述的设置过程在写作时是正确的，但在你阅读本章时可能会发生变化。谷歌定期修订其开发者门户，你可能会发现功能有不同的名称或以不同的方式排列。变化可能很小，但每个身份验证服务都提供了开发者文档，这些文档应该能为你指明正确的方向。
- en: Please do not email me to ask for help setting up external authentication. I
    try to help readers with most problems, but figuring out external authentication
    issues would require signing into a reader’s Google account, which is something
    that I will not do, even for accounts that have been created specifically for
    the *SportsStore* application.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要通过电子邮件向我寻求帮助设置外部身份验证。我尽量帮助读者解决大多数问题，但解决外部身份验证问题需要登录读者的谷歌账户，而这是我不会做的，即使是专门为*SportsStore*应用程序创建的账户。
- en: 'To get started, navigate to [https://console.developers.google.com](https://console.developers.google.com),
    sign in with a Google account, and perform the following steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请导航到 [https://console.developers.google.com](https://console.developers.google.com)，使用谷歌账户登录，并执行以下步骤：
- en: Click **OAuth Consent Screen**, and then click **Create Project**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**OAuth同意屏幕**，然后点击**创建项目**。
- en: Enter `SportsStore` into the project name field and click the **Create** button.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目名称字段中输入`SportsStore`，然后点击**创建**按钮。
- en: Select **External** for **User Type** and click the **Create** button.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**用户类型**选择**外部**，然后点击**创建**按钮。
- en: Enter `SportsStore` into the **App Name** field, enter your Google account email
    address for the email fields, and click the **Save And Continue** button. The
    other fields can be left empty.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**应用名称**字段中输入`SportsStore`，在电子邮件字段中输入你的谷歌账户电子邮件地址，然后点击**保存并继续**按钮。其他字段可以留空。
- en: 'Click **Add Or Remove Scopes**, and then check the following options (and no
    others):'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加或删除作用域**，然后检查以下选项（以及其他选项）：
- en: '**.../auth/userinfo.email**'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.../auth/userinfo.email**'
- en: '**.../auth/userinfo.profile**'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.../auth/userinfo.profile**'
- en: '**Openid**'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Openid**'
- en: Click the **Update** button, and then click the **Save And Continue** button
    to move to the **Test Users** section.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**更新**按钮，然后点击**保存并继续**按钮以进入**测试用户**部分。
- en: Click the **Save And Continue** button without making any changes in the **Test
    Users** section.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**测试用户**部分不做任何更改的情况下，点击**保存并继续**按钮。
- en: Click **Back To Dashboard** to return to the **OAuth Consent Screen** page.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**返回仪表板**以返回到**OAuth同意屏幕**页面。
- en: The basic flow for this part of the process is shown in *Figure 19.4*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分流程的基本流程如图19.4所示。
- en: '![](img/B21959_19_04.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片 B21959_19_04.png](img/B21959_19_04.png)'
- en: 'Figure 19.4: Creating and configuring the application'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.4：创建和配置应用程序
- en: Publishing the app
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发布应用
- en: Click the **Publish App** button, and you will receive a prompt asking you to
    confirm the push to production, as shown in *Figure 19.5*. If you have configured
    the application as described in the previous section, the prompt should tell you
    that the application does not need to be submitted for verification. Click the
    **CONFIRM** button to publish the application.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**发布应用**按钮，你将收到一个提示，要求你确认推送到生产环境，如图19.5所示。如果你已经按照上一节所述配置了应用程序，则提示应告知你应用程序不需要提交进行验证。点击**确认**按钮以发布应用程序。
- en: '![](img/B21959_19_05.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片 B21959_19_05.png](img/B21959_19_05.png)'
- en: 'Figure 19.5: The push to production prompt'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.5：推送至生产环境的提示
- en: Creating the Client ID and Client Secret
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建客户端ID和客户端密钥
- en: 'The final step is to create the two values that are used to configure **OAuth**:
    the **Client ID**, which the *SportsStore* application will use to identify itself
    to Google, and the Client Secret, which will be used to sign and verify the data
    produced by Google. Perform the following steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是创建用于配置**OAuth**的两个值：**客户端ID**，这是*SportsStore*应用程序将用于向谷歌标识自己的，以及**客户端密钥**，它将用于签名和验证谷歌生成的数据。执行以下步骤：
- en: Click **Credentials** in the Google Developer dashboard.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在谷歌开发者仪表板中点击**凭证**。
- en: Click **Create Credentials** and select **OAuth Client ID** from the popup menu.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建凭证**，然后从弹出菜单中选择**OAuth客户端ID**。
- en: Select **Web Application** from the **Application Type** menu and enter `SportsStore`
    in the **Name** field.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**应用程序类型**菜单中选择**Web应用程序**，并在**名称**字段中输入`SportsStore`。
- en: No changes are required in the **Authorized JavaScript Origins** section.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**授权JavaScript来源**部分不需要进行任何更改。
- en: Click the **Add URI** button in the **Authorized Redirect URIs** section and
    add `http://localhost:5000/signin-google` and `https://localhost/signin-google`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**授权重定向URI**部分点击**添加URI**按钮，并添加`http://localhost:5000/signin-google`和`https://localhost/signin-google`。
- en: Click the **Create** button.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮。
- en: Copy the **Client** **ID** and **Client Secret** values from the popup summary
    and store them safely. Each value is presented with a copy button that ensures
    that all of the characters are copied correctly.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从弹出摘要中复制**客户端** **ID** 和 **客户端密钥**值，并安全地存储它们。每个值旁边都有一个复制按钮，确保所有字符都被正确复制。
- en: Click the **OK** button to close the summary popup.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮关闭摘要弹出窗口。
- en: At the end of the process, you will have two values to add to the `development.env`
    file in the `sportsstore` folder, as shown in *Listing 19.2*. (This listing shows
    placeholder values. You must replace these with the values you obtained from the
    Google portal for the examples to work.)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在过程结束时，你将有两个值需要添加到“sportsstore”文件夹中的`development.env`文件中，如*清单19.2*所示。（此清单显示占位符值。你必须用从
    Google 门户获取的值替换这些值，以便示例能够工作。）
- en: '**Using local redirection URLs**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用本地重定向URL**'
- en: The authorized redirect URLs used in step 5 use `localhost` for the hostname,
    which means that clients will be told to redirect to the local machine once authentication
    has been performed. This is useful for the SportsStore application, where the
    browser and the server run on the same machine. For real projects, you must use
    the public-facing URL that points to your project, which can be resolved by users’
    browsers. This requires domain name registration, which is why the *SportsStore*
    uses localhost.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤5中使用的授权重定向URL使用`localhost`作为主机名，这意味着一旦完成身份验证，客户端将被告知重定向到本地机器。这对于SportsStore应用程序很有用，其中浏览器和服务器在相同的机器上运行。对于真实项目，你必须使用指向你的项目的公共URL，这可以通过用户的浏览器解析。这需要域名注册，这就是为什么SportsStore使用localhost的原因。
- en: 'Listing 19.2: Storing secrets in the development.env file in the sportsstore
    folder'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.2：在sportsstore文件夹中的development.env文件中存储密钥
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Getting profile details with OAuth
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 OAuth 获取配置文件详细信息
- en: The starting point is to extend the data model so that it is possible to associate
    customers in the database with their Google accounts. When the OAuth service provides
    the SportsStore application with user data, a unique ID is included, which will
    be stored in the database alongside the customer’s name and email, and used to
    query the customer’s address if one is available in the SportsStore database.
    *Listing 19.3* adds a new property to the `Customer` interface.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 起始点是扩展数据模型，使其能够将数据库中的客户与他们的Google账户关联起来。当OAuth服务向SportsStore应用程序提供用户数据时，会包含一个唯一ID，该ID将与客户的姓名和电子邮件一起存储在数据库中，并在SportsStore数据库中可用时用于查询客户的地址。*清单19.3*向`Customer`接口添加了一个新属性。
- en: 'Listing 19.3: Adding a property to the customer_models.ts file in the src/data
    folder'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.3：在src/data文件夹中的customer_models.ts文件中添加属性
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The new property requires a validation rule, as shown in *Listing 19.4*.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 新属性需要一个验证规则，如*清单19.4*所示。
- en: 'Listing 19.4: Adding a new property to the order_rules.ts file in the src/data/validation
    folder'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.4：在src/data/validation文件夹中的order_rules.ts文件中添加新属性
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `no_op` rule is used because no validation is required for the data provided
    by the OAuth process.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`no_op`规则，因为OAuth过程提供的数据不需要验证。
- en: A new set of repository methods is required to store the new data and use it
    as the basis for queries. Add a file named `customer_repository.ts` to the `src/data`
    folder, with the content shown in *Listing 19.5*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一组新的存储库方法来存储新数据并将其用作查询的基础。将名为`customer_repository.ts`的文件添加到`src/data`文件夹中，内容如*清单19.5*所示。
- en: 'Listing 19.5: The contents of the customer_repository.ts file in the src/data
    folder'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.5：src/data文件夹中customer_repository.ts文件的内容
- en: '[PRE4]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `getCustomer` method searches the database using the unique ID created by
    the database server. The `getCustomerByFederatedId` method does the same thing
    but uses the unique ID that Google provides in the OAuth profile. The `getCustomerAddress`
    method will return the most recent address associated with the user. There won’t
    be an address until an order has been placed, but the data that is stored will
    be available for the second and subsequent orders the customer creates. The final
    method, named `storeCustomer`, will store a user in the database.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`getCustomer` 方法使用数据库服务器创建的唯一 ID 搜索数据库。`getCustomerByFederatedId` 方法执行相同操作，但使用
    Google 在 OAuth 配置文件中提供的唯一 ID。`getCustomerAddress` 方法将返回与用户关联的最新地址。在放置订单之前不会有地址，但存储的数据将可用于客户创建的第二个和后续订单。最后一个方法，名为
    `storeCustomer`，将用户存储在数据库中。'
- en: Implementing the new repository features
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现新的存储库功能
- en: The next step is to update the Sequelize implementation of the repository. *Listing
    19.6* adds a property to the ORM model class.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是更新存储库的 Sequelize 实现。*列表 19.6* 向 ORM 模型类添加了一个属性。
- en: 'Listing 19.6: Adding a property to the customer_models.ts file in the src/data/orm/models
    folder'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.6：在 src/data/orm/models 文件夹中的 customer_models.ts 文件中添加属性
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '*Listing 19.7* describes how the new property will be stored in the database.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 19.7* 描述了新属性如何在数据库中存储。'
- en: 'Listing 19.7: Describing a property in the customer_helpers.ts file in the
    src/data/orm/models folder'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.7：在 src/data/orm/models 文件夹中的 customer_helpers.ts 文件中描述属性
- en: '[PRE6]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A new relationship between model classes is required to support the queries
    that will be performed by the new repository methods, as shown in *Listing 19.8*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 需要模型类之间建立新的关系来支持新存储库方法将要执行的查询，如 *列表 19.8* 所示。
- en: 'Listing 19.8: Adding a new relationship to the order_helpers.ts file in the
    src/data/orm/models folder'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.8：在 src/data/orm/models 文件夹中的 order_helpers.ts 文件中添加一个新的关系
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To implement the methods required by the `CustomerRepository` interface, add
    a file named `customers.ts` to the `src/data/orm` folder, with the content shown
    in *Listing 19.9*.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现 `CustomerRepository` 接口所需的方法，将一个名为 `customers.ts` 的文件添加到 `src/data/orm`
    文件夹中，其内容如 *列表 19.9* 所示。
- en: 'Listing 19.9: The contents of the customers.ts file in the src/data/orm folder'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.9：src/data/orm 文件夹中的 customers.ts 文件的内容
- en: '[PRE8]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `getCustomer` and `getCustomerByFederatedId` methods perform regular queries,
    but the `getCustomerAddress` method has to query through another model class so
    that obtaining the most recent address for a customer is done by finding the customer’s
    earlier orders, and then obtaining the address data associated with them. The
    `attributes` property is used in the `include` expression to exclude the order
    data from the responses. The `storeCustomer` method uses the `findOrCreate` method
    to find a customer by email address if one exists; otherwise, it creates a new
    customer record. *Listing 19.10* includes the new methods in the repository mixin.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`getCustomer` 和 `getCustomerByFederatedId` 方法执行常规查询，但 `getCustomerAddress`
    方法必须通过另一个模型类进行查询，以便通过找到客户的早期订单来获取客户的最新地址，然后获取与它们关联的地址数据。`attributes` 属性在 `include`
    表达式中使用，以从响应中排除订单数据。`storeCustomer` 方法使用 `findOrCreate` 方法通过电子邮件地址查找客户（如果存在）；否则，它将创建一个新的客户记录。*列表
    19.10* 将新方法包含在存储库混合中。'
- en: 'Listing 19.10: Extending the mixin in the index.ts file in the src/data/orm
    folder'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.10：在 src/data/orm 文件夹中的 index.ts 文件中扩展混合
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To complete the repository upgrade, Listing 19.11 adds a new property that exposes
    the new interface to the rest of the application.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成存储库升级，列表 19.11 添加了一个新属性，该属性将新接口暴露给应用程序的其他部分。
- en: 'Listing 19.11: Adding a constant to the index.ts file in the src/data folder'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.11：在 src/data 文件夹中的 index.ts 文件中添加一个常量
- en: '[PRE10]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Setting Up OAuth authentication
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 OAuth 认证
- en: To handle the details of OAuth requests and responses, I am going to use the
    Passport authentication package introduced in *Chapter 18*, which has authentication
    strategies for major authentication services, including Google. Run the commands
    shown in *Listing 19.12* in the `sportsstore` folder to add the Passport package,
    the strategy package, and the type descriptions to the project.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理 OAuth 请求和响应的细节，我将使用在第 *第 18 章* 中介绍的 Passport 认证包，它为主要的认证服务提供了认证策略，包括 Google。在
    `sportsstore` 文件夹中运行 *列表 19.12* 中显示的命令，以将 Passport 包、策略包和类型描述添加到项目中。
- en: 'Listing 19.12: Installing the authentication packages'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.12：安装认证包
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: For quick reference, these packages are described in *Table 19.1*.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了快速参考，这些包在*表19.1*中有描述。
- en: 'Table 19.1: The Authentication Packages'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 表19.1：认证包
- en: '| Name | Description |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '|'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '| This package contains the core Passport features. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含Passport的核心功能。 |'
- en: '|'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE13]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '| This package contains a Passport strategy for authentication with the Google
    OAuth service. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含与Google OAuth服务进行认证的Passport策略。 |'
- en: '|'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '| This package contains type information. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含类型信息。 |'
- en: '|'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '| This package contains type information. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含类型信息。 |'
- en: Add a file named `authentication.ts` to the `src` folder with the content shown
    in *Listing 19.13*.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在`src`文件夹中添加一个名为`authentication.ts`的文件，其内容如*列表19.13*所示。
- en: 'Listing 19.13: The contents of the authentication.ts file in the src folder'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 列表19.13：src文件夹中authentication.ts文件的内容
- en: '[PRE16]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `declare` keyword is used to tell the TypeScript compiler that the `User`
    objects added to authenticated requests by the `Passport` package will extend
    the `Customer` type. The `createAuthentiction` function sets up the Passport package
    to perform authentication using the Google OAuth service.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`declare`关键字用于告诉TypeScript编译器，通过`Passport`包添加到已认证请求中的`User`对象将扩展`Customer`类型。`createAuthentiction`函数设置Passport包使用Google
    OAuth服务进行认证。'
- en: The configuration module is used to get the redirection URL, which will be included
    in the authentication request sent to Google and to which browsers will be redirected
    once authentication is complete. The URL must match the one used when setting
    up the OAuth credentials and, for real projects, should be a public-facing URL.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 配置模块用于获取重定向URL，该URL将被包含在发送给Google的认证请求中，并在认证完成后，浏览器将被重定向到该URL。URL必须与设置OAuth凭据时使用的URL匹配，对于真实项目，应该是一个面向公众的URL。
- en: 'The Client ID and Client Secret are read and used to configure the Google authentication
    strategy along with the URL:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端ID和客户端密钥被读取并用于配置Google认证策略，以及URL：
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `scope` settings specify which OAuth scopes will be requested and the `email`
    and `profile` values correspond to the scopes used when setting up the OAuth service.
    These two scopes give details of the user’s email addresses and their display
    name, which is all that’s needed for the *SportsStore* application.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`作用域`设置指定了将请求哪些OAuth作用域，而`电子邮件`和`配置文件`值对应于设置OAuth服务时使用的那些作用域。这两个作用域提供了用户电子邮件地址和它们的显示名称的详细信息，这对于*SportsStore*应用程序来说就足够了。'
- en: There are many other scopes available, but they generally require applications
    to go through a vetting process before access is granted, whereas email and profile
    scopes can be used by any registered application.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的作用域还有很多，但通常需要应用程序通过审核流程后才能获得访问权限，而电子邮件和配置文件作用域则可以被任何已注册的应用程序使用。
- en: 'The final argument to the strategy constructor is a callback function that
    is invoked when Google has authenticated the user and performed the redirection:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 策略构造函数的最后一个参数是一个回调函数，当Google验证了用户并执行了重定向时会被调用：
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The callback function receives an access token, which can be used to make API
    queries, and a refresh token, which can be used to obtain a new access token.
    Both tokens are described in the OAuth documentation (see [https://www.oauth.com/oauth2-servers/access-tokens](https://www.oauth.com/oauth2-servers/access-tokens))
    but they are not required for this example. Instead, this example relies on the
    data provided by the third parameter, which is the user’s profile. Profiles vary
    between providers, but Passport normalizes the data returned by the Google OAuth
    service like this (edited to replace real data values with the `X` character):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数接收一个访问令牌，可以用来进行API查询，以及一个刷新令牌，可以用来获取新的访问令牌。这两个令牌在OAuth文档中有描述（见[https://www.oauth.com/oauth2-servers/access-tokens](https://www.oauth.com/oauth2-servers/access-tokens)），但在这个例子中不是必需的。相反，此示例依赖于第三个参数提供的数据，即用户的配置文件。配置文件在不同提供者之间可能不同，但Passport会像这样标准化Google
    OAuth服务返回的数据（已将真实数据值替换为`X`字符）：
- en: '[PRE19]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: A detailed explanation of the normalized profile can be found at [https://www.passportjs.org/reference/normalized-profile](https://www.passportjs.org/reference/normalized-profile),
    but the *SportsStore* application needs only the `id` value, which uniquely identifies
    the user, the `given_name` value, and the `emails` value, from which the user’s
    email address will be obtained.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.passportjs.org/reference/normalized-profile](https://www.passportjs.org/reference/normalized-profile)可以找到对标准化配置文件的详细解释，但*SportsStore*应用程序只需要`id`值，这是唯一标识用户的值，`given_name`值，以及`emails`值，从中可以获取用户的电子邮件地址。
- en: The final parameter is a callback that is invoked once the user’s data is ready.
    The code in *Listing 19.13* uses the profile data to store the customer’s details
    and invokes the callback to provide Passport with the user object. The implementation
    of the repository’s `storeCustomer` method matches the `federatedId` value if
    there is one, which means that the profile data will be used to update any existing
    data created for the same user in a previous order.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个参数是一个回调，当用户数据准备就绪时被调用。*列表 19.13* 中的代码使用配置文件中的 profile 数据来存储客户的详细信息，并调用回调以向
    Passport 提供用户对象。如果存在，存储库的 `storeCustomer` 方法的实现将与 `federatedId` 值匹配，这意味着配置文件中的
    profile 数据将用于更新之前订单中为同一用户创建的任何现有数据。
- en: 'The calls to the `passport.serializeUser` and `passport.deserializeUser` are
    required to allow Passport to serialize the user data into a session. In this
    case, the unique ID assigned by the database is used to represent the serialized
    user, which is deserialized by querying the database. This is the final statement
    in *Listing 19.13*:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `passport.serializeUser` 和 `passport.deserializeUser` 是必需的，以便 Passport 将用户数据序列化到会话中。在这种情况下，数据库分配的唯一
    ID 用于表示序列化的用户，该用户通过查询数据库进行反序列化。这是 *列表 19.13* 中的最终语句：
- en: '[PRE20]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `passport.session` function returns a middleware function that will authenticate
    requests using the data stored in a session from other authentication mechanisms,
    and it has the effect of deserializing the user for requests when they have been
    authenticated using the Google OAuth service.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`passport.session` 函数返回一个中间件函数，该函数将使用存储在会话中的其他认证机制的数据来验证请求，并且当使用 Google OAuth
    服务进行认证后，它会对请求进行反序列化以使用户数据可用。'
- en: '*Listing 19.14* calls the `createAuthentication` function to enable authentication
    as part of the server startup.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 19.14* 调用 `createAuthentication` 函数以在服务器启动时启用认证。'
- en: 'Listing 19.14: Enabling authentication in the server.ts file in the src folder'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.14：在 src 文件夹中的 server.ts 文件中启用认证
- en: '[PRE21]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: To complete the authentication setup, *Listing 19.15* adds a new section to
    the configuration file that specifies the callback that will be used for OAuth
    requests.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成认证设置，*列表 19.15* 在配置文件中添加了一个新的部分，该部分指定了用于 OAuth 请求的回调。
- en: 'Listing 19.15: Adding settings to the server.config.json file in the SportsStore
    folder'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.15：在 SportsStore 文件夹中的 server.config.json 文件中添加设置
- en: '[PRE22]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: As noted earlier, the `localhost` URL relies on the browser and the server being
    on the same machine. For real projects, a real domain name should be used, although
    `localhost` can be useful during development.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`localhost` URL 依赖于浏览器和服务器在同一台机器上。对于真实项目，应使用真实域名，尽管在开发期间 `localhost` 可能很有用。
- en: Changing the cookie configuration
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改 cookie 配置
- en: OAuth is an excellent authentication system, but it can be finicky, and effort
    is often required to get everything working correctly. One common cause of problems
    is the configuration for the session cookies, which must be set up to match the
    expectations of the OAuth strategy, whose requirements may be different from the
    rest of the application.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 是一个出色的认证系统，但它可能很挑剔，通常需要付出努力才能使一切正常工作。问题的一个常见原因是会话 cookie 的配置，它必须设置以匹配
    OAuth 策略的期望，其要求可能与其他应用程序不同。
- en: When setting up OAuth for SportsStore, I found that I had to make two changes
    to get authentication working correctly, as shown in *Listing 19.16*.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在为 SportsStore 设置 OAuth 时，我发现我必须进行两个更改才能正确启用认证，如 *列表 19.16* 所示。
- en: 'Listing 19.16: Changing cookie configuration in the sessions.ts file in the
    src folder'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.16：在 src 文件夹中的 sessions.ts 文件中更改 cookie 配置
- en: '[PRE23]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: You may need different configuration settings for other strategies or authentication
    providers, and some experimentation is usually required because session settings
    are not usually specified.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他策略或认证提供者，您可能需要不同的配置设置，并且通常需要进行一些实验，因为会话设置通常没有指定。
- en: Applying authentication
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用认证
- en: The next step is to present the user with a button that will allow them to sign
    in with Google, as shown in *Listing 19.17*.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是向用户展示一个按钮，允许他们使用 Google 登录，如 *列表 19.17* 所示。
- en: Listing 19.17\. Adding a Google button to the order_details.handlebars fle in
    the templates folder
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 19.17：在 templates 文件夹中的 order_details.handlebars 文件中添加 Google 按钮
- en: '[PRE24]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The new element structure is configured with the Bootstrap CSS classes to create
    a grid, with the elements for the name and email address sharing a row with a
    new button that contains a Google icon from the Bootstrap Icons package and prompts
    the user to use their Google account. *Listing 19.18* defines the routes that
    support OAuth and use the customer’s Google details.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 新的元素结构配置了Bootstrap CSS类以创建一个网格，其中姓名和电子邮件地址的元素与一个包含Bootstrap Icons包中的Google图标的新按钮共享一行，该按钮提示用户使用他们的Google账户。*清单19.18*定义了支持OAuth并使用客户Google详情的路由。
- en: 'Listing 19.18: Supporting OAuth in the orders.ts file in the src/routes folder'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 清单19.18：在src/routes文件夹中的orders.ts文件中支持OAuth
- en: '[PRE25]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The `/checkout/google` route is targeted by the button created in *Listing
    19.17*, and its job is to start the OAuth process by requiring authentication
    with the `google` strategy:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`/checkout/google`路由被*清单19.17*中创建的按钮所针对，其任务是要求使用`google`策略进行认证以启动OAuth过程：'
- en: '[PRE26]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Each Passport strategy module has a default name, and `google` is the name of
    the strategy added to the project in *Listing 19.13*. The effect of this route
    is to redirect the user’s browser to the Google OAuth service.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Passport策略模块都有一个默认名称，`google`是*清单19.13*中添加到项目的策略名称。此路由的效果是将用户的浏览器重定向到Google
    OAuth服务。
- en: 'The `/signin-google` route handles the redirection back from Google when the
    authentication process is complete and also requires authentication with the `google`
    strategy:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`/signin-google`路由处理认证过程完成后从Google返回的重定向，并且还需要使用`google`策略进行认证：'
- en: '[PRE27]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This time, the authentication strategy will process the data sent by Google
    to authenticate the user and, if authentication has been successful, perform a
    redirection to the `/checkout` URL. If authentication is not successful, then
    an error message will be displayed using the custom error handlers. The `keepSessionInfo`
    setting ensures that existing session data is preserved once the user is authenticated.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，认证策略将处理Google发送的数据以认证用户，如果认证成功，则将用户重定向到`/checkout` URL。如果认证失败，则使用自定义错误处理器显示错误消息。`keepSessionInfo`设置确保一旦用户认证成功，现有的会话数据就会被保留。
- en: The changes to the handler for the `/checkout` URL populate the order data for
    authenticated requests. The user data added to the `Request` object is used for
    the customer’s name and email address, and a query for the most recent address
    associated with the user is performed. There won’t be an address the first time
    a user creates an order because that’s not part of the profile data, but an address
    will be available for subsequent orders.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 对`/checkout` URL处理器的更改填充了认证请求的订单数据。添加到`Request`对象中的用户数据用于客户的姓名和电子邮件地址，并执行与用户关联的最新地址的查询。第一次用户创建订单时不会有地址，因为这不是个人资料数据的一部分，但后续订单将可用地址。
- en: Using the OAuth profile data
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OAuth个人资料数据
- en: Open a new guest tab or private tab in your browser. Browsers use different
    names for these features, but the goal is to check the authentication process
    without interference from any cookies the browser may have stored, including cookies
    from Google.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开一个新的访客标签或私密标签。浏览器为这些功能使用不同的名称，但目标是在不受浏览器可能存储的任何cookie干扰的情况下检查认证过程，包括来自Google的cookie。
- en: Navigate to `http://localhost:5000`, add a product to the cart, and click the
    **Checkout** button. Click the **Use Google Account** button, as shown in *Figure
    19.6*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到`http://localhost:5000`，将产品添加到购物车，并点击**结账**按钮。点击如图*图19.6*所示的**使用Google账户**按钮。
- en: '![](img/B21959_19_06.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21959_19_06.png)'
- en: 'Figure 19.6: Starting the OAuth process'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.6：启动OAuth过程
- en: Your browser will be redirected to Google, where you will be prompted to authenticate
    and sign in to *SportsStore*, as shown in *Figure 19.7*.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器将被重定向到Google，您将需要认证并登录到*SportsStore*，如图*图19.7*所示。
- en: '![](img/B21959_19_07.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21959_19_07.png)'
- en: 'Figure 19.7: Authenticating with Google'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.7：使用Google进行认证
- en: The authentication process can differ based on the Google account settings.
    The account shown in *Figure 19.5* is configured to require additional confirmation
    using a smartphone, which is just one approach that Google supports to confirm
    authentication.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 认证过程可能根据Google账户设置的不同而有所不同。*图19.5*中显示的账户配置为需要使用智能手机进行额外确认，这只是Google支持的一种确认认证的方法。
- en: Once Google has authenticated the account, the browser is redirected back to
    the *SportsStore* application, and the account profile data will be used to populate
    the name and email address fields in the checkout form. Complete the form and
    place the order, as shown in *Figure 19.8*.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦谷歌验证了账户，浏览器将重定向回*SportsStore*应用程序，并且账户配置文件数据将被用来填充结账表单中的姓名和电子邮件地址字段。完成表单并下订单，如图*19.8*所示。
- en: '**Addressing common causes of problems**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决常见问题原因**'
- en: There are some common problems to check if you don’t get the expected result.
    First, make sure that you have set the **Client ID** and **Client Secret** exactly
    as shown in the Google developer console. If these are not set correctly, then
    Google may not allow the user to authenticate, or the application won’t be able
    to verify the data that Google provides in the redirection. There is an option
    to download a JSON document containing both values, which is a useful way to make
    sure you have the correct data.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有得到预期的结果，有一些常见问题需要检查。首先，请确保您已经将**客户端ID**和**客户端密钥**设置得与谷歌开发者控制台上显示的完全一致。如果这些设置不正确，那么谷歌可能不允许用户进行身份验证，或者应用程序将无法验证谷歌在重定向中提供的数据。有一个选项可以下载包含这两个值的JSON文档，这是一种确保您拥有正确数据的实用方法。
- en: Second, make sure the same redirection URLs are configured in both the application
    and the Google developer console. If these are not set correctly, then Google
    won’t redirect the browser to the right location.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，确保在应用程序和谷歌开发者控制台中配置了相同的重定向URL。如果这些设置不正确，那么谷歌不会将浏览器重定向到正确的位置。
- en: Third, check the session cookie settings. If authentication with Google works
    but the profile data isn’t used to populate the form, then the likely cause is
    that new sessions are being created for each request in the authentication sequence,
    or that the state data required to validate the data sent by Google isn’t being
    stored.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，检查会话cookie设置。如果使用谷歌进行身份验证工作正常，但配置文件数据没有被用来填充表单，那么可能的原因是每次身份验证序列中的请求都会创建新的会话，或者验证谷歌发送的数据所需的状态数据没有被存储。
- en: Finally, keep an eye on the Node.js console during the authentication process.
    If the application is configured to reset the databases, an application restart
    will drop the session database and prevent authentication from completing. The
    development tools for the *SportsStore* project are set up to restart the application
    if any file change is detected, and this may be triggered by a different process
    running on your development machine. (For example, I use an application that creates
    a snapshot of my code folder every hour, and this causes a restart.) If you suspect
    this is the case, then change the two `reset_db` settings to false in the `server.config.json`
    file so that restarts don’t delete the contents of the databases.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在身份验证过程中注意Node.js控制台。如果应用程序配置为重置数据库，应用程序的重启将删除会话数据库并阻止身份验证完成。*SportsStore*项目的开发工具被设置为在检测到任何文件更改时重启应用程序，这可能会被您的开发机器上运行的不同进程触发。（例如，我使用一个每小时创建我的代码文件夹快照的应用程序，这会导致重启。）如果您怀疑这种情况，那么请将`server.config.json`文件中的两个`reset_db`设置更改为false，这样重启就不会删除数据库的内容。
- en: '![](img/B21959_19_08.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_19_08.png)'
- en: 'Figure 19.8: Placing an initial order'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.8：放置初始订单
- en: Placing a second order
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 放置第二个订单
- en: The address data stored when the order is created will be available the next
    time the same user creates an order. Request `http://localhost:5000` and go through
    the checkout process again. When you click the **Use Google Account** button,
    the entire form should be populated, as shown in *Figure 19.9*.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 创建订单时存储的地址数据将在同一用户下次创建订单时可用。请求`http://localhost:5000`并再次进行结账流程。当您点击**使用谷歌账户**按钮时，整个表单应该被填充，如图*19.9*所示。
- en: '![](img/B21959_19_09.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_19_09.png)'
- en: 'Figure 19.9: Using address data from a previous order'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图19.9：使用先前订单的地址数据
- en: You typically won’t need to sign in to the Google account again because Google
    stores an authentication cookie. The browser is still redirected to the Google
    OAuth service, but the user doesn’t see this request or the subsequent redirection
    back to *SportsStore*.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通常您不需要再次登录谷歌账户，因为谷歌会存储一个身份验证cookie。浏览器仍然会被重定向到谷歌OAuth服务，但用户看不到这个请求或随后的重定向回*SportsStore*。
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, I added support for users to identify themselves to the *SportsStore*
    application using their Google account:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我为用户添加了使用他们的谷歌账户来识别自己的*SportsStore*应用程序的支持：
- en: The OAuth protocol allows users to authenticate themselves without providing
    their credentials to the application.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OAuth协议允许用户在不向应用程序提供凭证的情况下进行身份验证。
- en: Most major platforms offer an OAuth service, including Google, and there is
    a registration process to perform before the application can send OAuth requests.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数主要平台都提供OAuth服务，包括Google，在应用程序可以发送OAuth请求之前，需要先完成注册流程。
- en: There are differences in the data provided by OAuth services, but these are
    normalized by the `Passport` authentication package.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OAuth服务提供的数据存在差异，但这些差异通过`Passport`认证包进行了标准化。
- en: Once the user has associated their Google credentials with a *SportsStore* order,
    their address will be loaded automatically when checking out in the future.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦用户将他们的Google凭证与*SportsStore*订单关联，他们在未来结账时地址将自动加载。
- en: In the next chapter, I will add administration tools that manage the *SportsStore*
    product catalog and change the order shipping status.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我将添加管理工具来管理*SportsStore*产品目录并更改订单的发货状态。
