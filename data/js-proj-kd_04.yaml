- en: Chapter 4. Diving a Bit Deeper
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章. 深入探索
- en: In most of the JavaScript programs, which we learned so far, the lines of code
    were executed in the same order in which they appeared in the program. Each code
    was executed only once. Thus, the code did not include tests to determine if the
    conditions were true or false or we did not perform any logical statements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们迄今为止学习的多数JavaScript程序中，代码的执行顺序与它们在程序中出现的顺序相同。每行代码只执行一次。因此，代码中不包含测试条件是否为真或假的测试，或者我们没有执行任何逻辑语句。
- en: 'In this chapter, you are going to learn some logical programming. You will
    learn about the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习一些逻辑编程。你将了解以下主题：
- en: Loops
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环
- en: If statement
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: If语句
- en: Switch case
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Switch case
- en: You already know how to embed JavaScript codes on an HTML document. Before starting
    this chapter, you will learn a few HTML tags and JavaScript methods. These methods
    and tags will be used throughout the book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经知道如何在HTML文档中嵌入JavaScript代码。在开始本章之前，你将学习一些HTML标签和JavaScript方法。这些方法和标签将在整本书中使用。
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In object-oriented programming, we don't directly perform any operations on
    the data from outside an object; we ask an object to perform the operation by
    passing one or multiple parameters. This task is called an object's method.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在面向对象编程中，我们不会直接对对象外部的数据进行任何操作；我们通过传递一个或多个参数来请求对象执行操作。这个任务被称为对象的方法。
- en: JavaScript methods
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript方法
- en: In the previous chapters, you learned how to print something using `document.write()`.
    Now, you will learn something more.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你学习了如何使用`document.write()`打印一些内容。现在，你将学习更多。
- en: 'We will check the methods on both console and HTML document, as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将检查控制台和HTML文档上的方法，如下所示：
- en: 'To show an alert or a pop-up box using JavaScript, we use the following method:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用JavaScript显示一个警告或弹窗，我们使用以下方法：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Type this on the console and press *Enter*, you will see a pop-up box saying
    **Hello World**:'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在控制台输入以下内容并按*Enter*键，你将看到一个显示**Hello World**的弹窗：
- en: '![JavaScript methods](img/B04720_04_01.jpg)'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![JavaScript方法](img/B04720_04_01.jpg)'
- en: 'You can write your code to show a pop-up box similar to the following on an
    HTML document:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在HTML文档上编写代码以显示类似于以下弹窗：
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output will be as follows:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![JavaScript methods](img/B04720_04_02.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![JavaScript方法](img/B04720_04_02.jpg)'
- en: 'If you want to take information from users, you need to use a prompt box to
    do this. Consider the following for example:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想要从用户那里获取信息，你需要使用提示框来完成这个操作。以下是一个例子：
- en: You want to take input of the username and print it on the main web page.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你想要获取用户名并将其打印在主网页上。
- en: You can do this using the `window.prompt()` method.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用`window.prompt()`方法来完成这个操作。
- en: 'The structure of `window.prompt()` is similar to the following:'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`window.prompt()`的结构类似于以下内容：'
- en: '[PRE2]'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, you need to store the information on a variable. You already know how
    to do this from the previous chapters. Type the following and press *Enter*:'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，你需要将信息存储在一个变量中。你已经从前面的章节中知道了如何做。输入以下内容并按*Enter*键：
- en: '[PRE3]'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After running this code on console, you will be asked to input something on
    a textbox. After typing your information, you need to press the **OK** button.
    Your information is now stored in the `name` variable:![JavaScript methods](img/B04720_04_03.jpg)
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在控制台运行此代码后，你将在文本框中输入一些信息。输入你的信息后，你需要按下**确定**按钮。现在，你的信息已经存储在`name`变量中：![JavaScript方法](img/B04720_04_03.jpg)
- en: 'If you want to print the variable on your web page, you can use the `document.write();`
    method, as follows:'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想在网页上打印变量，你可以使用`document.write();`方法，如下所示：
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The output of these steps can been seen in the following screenshot:![JavaScript
    methods](img/B04720_04_04.jpg)
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些步骤的输出可以在以下屏幕截图中看到：![JavaScript方法](img/B04720_04_04.jpg)
- en: 'The codes on an HTML document will be as shown in the following:'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML文档上的代码将如下所示：
- en: '[PRE5]'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: HTML buttons and form
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML按钮和表单
- en: In the last chapter, you learned about a few HTML tags. Now, we will study a
    few tags that will make learning HTML more interesting.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了几个HTML标签。现在，我们将研究一些会使学习HTML更有趣的标签。
- en: Buttons
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按钮
- en: 'If you want to add buttons to your HTML web page, you can use the `<button></button>`
    tags. The structure of the tags is as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在你的HTML网页上添加按钮，你可以使用`<button></button>`标签。标签的结构如下：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you want to make your button do something, for example, open an URL; you
    can consider the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想让你的按钮执行某些操作，例如打开一个URL；你可以考虑以下代码：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output of the code will be as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的输出将如下所示：
- en: '![Buttons](img/B04720_04_05.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![按钮](img/B04720_04_05.jpg)'
- en: Form
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单
- en: 'In HTML, we use form to represent a document section that contains interactive
    controls to submit information to a web server. The basic structure of HTML form
    is as shown in the following:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML中，我们使用表单来表示包含交互控件以提交信息到Web服务器的文档部分。HTML表单的基本结构如下所示：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output of the code will be as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的输出将如下所示：
- en: '![Form](img/B04720_04_06.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Form](img/B04720_04_06.jpg)'
- en: Let's dive little bit deeper now!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们深入一点！
- en: If statement
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: If语句
- en: Let's say John has 23 apples and Tom has 45 apples. We want to check who has
    more apples using JavaScript programming. We need to make our browser understand
    the **if statement**.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 假设约翰有23个苹果，汤姆有45个苹果。我们想使用JavaScript编程来检查谁有更多的苹果。我们需要让浏览器理解**if语句**。
- en: Note
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The if statement compares two variables.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: If语句比较两个变量。
- en: 'To check our condition, we need to declare the two variables containing the
    number of apples, as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查我们的条件，我们需要声明包含苹果数量的两个变量，如下所示：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To check which number is bigger, we can apply the if statement as shown in
    the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查哪个数字更大，我们可以应用如下的if语句：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let''s say that we do not know which variable is bigger. Then, we need to check
    both the variables. Therefore, we need to include the following codes to our program:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们不知道哪个变量更大。然后，我们需要检查两个变量。因此，我们需要将以下代码包含到我们的程序中：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The whole code in an HTML page will be as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: HTML页面中的整个代码如下所示：
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output will be as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![If statement](img/B04720_04_07.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![If语句](img/B04720_04_07.jpg)'
- en: 'You learned about the conditional operators in the previous chapters. In if
    statement, you can use all of them. Here are a few examples with comments:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你学习了条件运算符。在if语句中，你可以使用所有这些。以下是一些带有注释的示例：
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To check multiple conditions, you need to use OR (`||`) or AND (`&&`).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查多个条件，你需要使用OR（`||`）或AND（`&&`）。
- en: 'Consider the following examples:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下示例：
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Switch-case
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Switch-case
- en: 'If you have more than three conditions, it is good practice to use the **switch-case**
    statement. The basic structure of switch-case is as shown in the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有多于三个条件，使用**switch-case**语句是一个好的做法。switch-case的基本结构如下所示：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Every `case` has a `break`. However, the `default` does not need a `break`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`case`都有一个`break`。然而，`default`不需要`break`。
- en: 'Consider that Tom has 35 pens. His friends John, Cindy, Laura, and Terry have
    25, 35, 15, and 18 pens, respectively. Now, John wants to check who has 35 pens.
    We need to compare the number of Tom''s pens with everyone''s pens. We can use
    switch-case for this type of case. The code will be as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到汤姆有35支笔。他的朋友约翰、辛迪、劳拉和特里分别有25、35、15和18支笔。现在，约翰想检查谁有35支笔。我们需要比较汤姆的笔数和每个人的笔数。我们可以使用switch-case来做这种类型的比较。代码如下：
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output will be as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Switch-case](img/B04720_04_08.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Switch-case](img/B04720_04_08.jpg)'
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Now, change the value of second case (`35`) to other and check your result.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将第二个case（`35`）的值更改为其他值并检查你的结果。
- en: Exercise
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: 'Suppose you need to go to school every day except Saturday and Sunday. Write
    a code, where you will input today''s date number and the web page will show you
    whether you need to go to school or not. (Hint: use a switch case.)'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你除了周六和周日外每天都需要去学校。编写一个代码，其中你可以输入今天的日期数字，网页会显示你是否需要去学校。（提示：使用switch case。）
- en: 'Consider that you have a garden and you water all the plants on even days of
    the month. Write a code that will show you whether you will water your plants
    on that day. (Hint: use the if condition and modulus operator (`%`).)'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑到你有一个花园，你会在每月的双日给所有的植物浇水。编写一个代码，它会显示你那天是否需要给植物浇水。（提示：使用if条件和取模运算符（`%`）。）
- en: Loops
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 循环
- en: In this paragraph, we will learn something interesting called **loop**.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本段中，我们将学习一个有趣的概念，称为**循环**。
- en: Consider that you need to print a line 100 times using JavaScript. What you
    will do?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到你需要使用JavaScript打印一行100次。你会怎么做？
- en: You can type `document.write("The line I want You to Write");` 100 times in
    your program or you can use loop.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在你的程序中输入`document.write("The line I want You to Write");` 100次，或者你可以使用循环。
- en: The basic use of loop is to do something more than one time. Say, you need to
    print all the integers of *1 + 2 + 4 + 6 +…………+100* series upto 100\. The calculation
    is the same, you only need to do it multiple times. In these cases, we use loop.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 循环的基本用法是做多次同一件事。比如说，你需要打印出从1到100的所有整数，即*1 + 2 + 4 + 6 +……+100*系列。计算是相同的，你只需要多次做这件事。在这些情况下，我们使用循环。
- en: We will discuss two types of loops, namely **for loop** and **while loop**.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论两种类型的循环，即**for循环**和**while循环**。
- en: The for loop
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: for循环
- en: 'The basic structure of the for loop is as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: for循环的基本结构如下：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `starting` parameter is the initialization of your loop. You need to initialize
    the loop in order to start it. The `condition` parameter is the key element to
    control the loop. The `increment/decrement` parameter defines how your loop will
    increase/decrease.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`starting`参数是循环的初始化。你需要初始化循环才能启动它。`condition`参数是控制循环的关键元素。`increment/decrement`参数定义了循环如何增加/减少。'
- en: 'Let''s see an example. You want to print **javascript is fun** 10 times. The
    code will be as shown in the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个例子。你想要打印**javascript is fun** 10次。代码如下所示：
- en: '[PRE18]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output will be similar to the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下内容：
- en: '![The for loop](img/B04720_04_09.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![for循环](img/B04720_04_09.jpg)'
- en: 'Yes! You printed the line 10 times. If you look at the code carefully, you
    will see the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 是的！你打印了10次行。如果你仔细查看代码，你会看到以下内容：
- en: We declared a variable named `java`
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们声明了一个名为`java`的变量
- en: In the `for` loop, we initialized `0` to its value
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`for`循环中，我们将`0`初始化为其值
- en: We added a `java<10` condition that made the browser count from `0` to `10`
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们添加了一个`java<10`条件，使得浏览器从`0`计数到`10`
- en: We incremented the variable by `1`; that's why we added `java++`
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将变量增加了`1`；这就是为什么我们添加了`java++`
- en: Exercise
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习
- en: 'Write a code using JavaScript that will print the following output:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用JavaScript编写一个代码，将打印以下输出：
- en: '[PRE19]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Write a code that will print all the even numbers from 2 to 500.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个代码，将打印从2到500的所有偶数。
- en: The while loop
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: while循环
- en: 'You have already have learned how to execute something multiple times using
    the for loop. Now, we will learn another loop known as the while loop. The structure
    of while loop is as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经学习了如何使用for循环多次执行某个操作。现在，我们将学习另一种循环，称为while循环。while循环的结构如下：
- en: '[PRE20]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The codes for the previous example will be like the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 之前示例的代码如下：
- en: '[PRE21]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The output will be the same as the `for` loop.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将与`for`循环相同。
- en: Exercise
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习
- en: 'Write a code that will print all the odd values from 1 to 600 using the while
    loop. (Hint: use the modulus operator.)'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个代码，使用while循环打印从1到600的所有奇数。（提示：使用取模运算符。）
- en: 'Write a code that will print the following output:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个代码，将打印以下输出：
- en: '[PRE22]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Summary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, you learned logical operations using JavaScript. You learned
    loops, conditional operation, and other HTML tags.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了使用JavaScript进行逻辑运算。你学习了循环、条件运算和其他HTML标签。
- en: We need to focus on this chapter as we have discussed the most important attributes
    in JavaScript here. You can become a JavaScript master if you practice this chapter
    and the last three chapters. I recommend you not to go further unless you have
    a good knowledge all the four chapters. If you have already learned about all
    the topics that we discussed earlier, let's move on to [Chapter 5](ch05.html "Chapter 5. Ahoy!
    Sailing into Battle"), *Ahoy! Sailing into Battle*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要关注本章，因为我们在这里讨论了JavaScript中最重要的属性。如果你练习本章和最后三章，你就可以成为JavaScript大师。我建议你在没有掌握所有四个章节之前不要继续前进。如果你已经学习了我们之前讨论的所有主题，那么让我们继续到[第五章](ch05.html
    "第五章. 嘿！战斗中的航行")，*嘿！战斗中的航行*。
