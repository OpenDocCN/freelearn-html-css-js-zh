- en: Chapter 2. The Dialog Widget
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. 对话框小部件
- en: The dialog widget is in the Wijmo Open set. It is an enhancement of the jQuery
    UI dialog with more features. Wijmo dialogs can be maximized, minimized, pinned
    to a location, and display external content from a URL in the dialog window. This
    chapter discusses the options, methods, and events that are added in Wijmo, and
    how to use them to change the appearance and behavior of the dialog.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对话框小部件属于 Wijmo Open 集合。它是 jQuery UI 对话框的增强，具有更多功能。Wijmo 对话框可以最大化、最小化、固定到屏幕位置，并在对话框窗口中显示来自
    URL 的外部内容。本章讨论了 Wijmo 中添加的选项、方法和事件，以及如何使用它们来改变对话框的外观和行为。
- en: Wijmo additions to the dialog widget at a glance
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wijmo 对话框小部件的快速查看
- en: 'By default, the dialog window includes the pin, toggle, minimize, maximize,
    and close buttons. Pinning the dialog to a location on the screen disables the
    dragging feature on the title bar. The dialog can still be resized. Maximizing
    the dialog makes it take up the area inside the browser window. Toggling it expands
    or collapses it so that the dialog contents are shown or hidden with the title
    bar remaining visible. If these buttons cramp your style, they can be turned off
    with the `captionButtons` option. You can see how the dialog is presented in the
    browser from the following screenshot:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，对话框窗口包括固定、切换、最小化、最大化和关闭按钮。将对话框固定到屏幕上的位置会禁用标题栏上的拖动功能。对话框仍然可以调整大小。最大化对话框会使它占据浏览器窗口内的区域。切换它会使对话框展开或折叠，以便对话框内容显示或隐藏，同时标题栏保持可见。如果这些按钮影响了您的风格，可以使用
    `captionButtons` 选项将其关闭。您可以从以下屏幕截图中看到对话框在浏览器中的呈现方式：
- en: '![Wijmo additions to the dialog widget at a glance](img/6067OT_2_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Wijmo 对话框小部件的快速查看](img/6067OT_2_01.jpg)'
- en: Wijmo features additional API compared to jQuery UI for changing the behavior
    of the dialog. The new API is mostly for the buttons in the title bar and managing
    window stacking. Window stacking determines which windows are drawn on top of
    other ones. Clicking on a dialog raises it above other dialogs and changes their
    window stacking settings. The following table shows the options added in Wijmo.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与 jQuery UI 相比，Wijmo 提供了额外的 API 来改变对话框的行为。新的 API 主要用于标题栏上的按钮和窗口堆叠管理。窗口堆叠决定了哪些窗口会绘制在其他窗口之上。点击对话框会将其置于其他对话框之上，并改变它们的窗口堆叠设置。以下表格显示了
    Wijmo 中添加的选项。
- en: '| Options | Events | Methods |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 事件 | 方法 |'
- en: '| --- | --- | --- |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `captionButtons``contentUrl``disabled``expandingAnimation``stack``zIndex`
    | `blur``buttonCreating``stateChanged` | `disable``enable``getState``maximize``minimize``pin``refresh``reset``restore``toggle``widget`
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `captionButtons` `contentUrl` `disabled` `expandingAnimation` `stack` `zIndex`
    | `blur` `buttonCreating` `stateChanged` | `disable` `enable` `getState` `maximize`
    `minimize` `pin` `refresh` `reset` `restore` `toggle` `widget` |'
- en: The `contentUrl` option allows you to specify a URL to load within the window.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contentUrl` 选项允许您指定在窗口中加载的 URL。'
- en: The `expandingAnimation` option is applied when the dialog is toggled from a
    collapsed state to an expanded state.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当对话框从折叠状态切换到展开状态时，会应用 `expandingAnimation` 选项。
- en: The `stack` and `zIndex` options determine whether the dialog sits on top of
    other dialogs.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stack` 和 `zIndex` 选项决定了对话框是否位于其他对话框之上。'
- en: Similar to the `blur` event on input elements, the `blur` event for dialog is
    fired when the dialog loses focus.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与输入元素上的 `blur` 事件类似，当对话框失去焦点时，会触发对话框的 `blur` 事件。
- en: The `buttonCreating` method is called when buttons are created and can modify
    the buttons on the title bar.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当创建按钮时，会调用 `buttonCreating` 方法，并可以修改标题栏上的按钮。
- en: The `disable` method disables the event handlers for the dialog. It prevents
    the default button actions and disables dragging and resizing.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disable` 方法禁用了对话框的事件处理器。它阻止了默认按钮操作并禁用了拖动和调整大小。'
- en: The `widget` method returns the dialog HTML element.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`widget` 方法返回对话框的 HTML 元素。'
- en: The methods `maximize`, `minimize`, `pin`, `refresh`, `reset`, `restore`, and
    `toggle`, are available as buttons on the title bar. The best way to see what
    they do is play around with them.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maximize`、`minimize`、`pin`、`refresh`、`reset`、`restore` 和 `toggle` 方法作为标题栏上的按钮提供。了解它们的功能的最佳方式是亲自尝试操作。'
- en: In addition, the `getState` method is used to find the dialog state and returns
    either maximized, minimized, or normal.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，`getState` 方法用于查找对话框状态，并返回最大化、最小化或正常状态。
- en: Similarly, the `stateChanged` event is fired when the state of the dialog changes.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似地，当对话框状态改变时，会触发 `stateChanged` 事件。
- en: 'The methods are called as a parameter to the `wijdialog` method. To disable
    button interactions, pass the string `disable`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法作为 `wijdialog` 方法的参数被调用。要禁用按钮交互，传递字符串 `disable`：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Many of the methods come as pairs, and `enable` and `disable` are one of them.
    Calling `enable` enables the buttons again. Another pair is `restore`/`minimize`.
    `minimize` hides the dialog in a tray on the left bottom of the screen. `restore`
    sets the dialog back to its normal size and displays it again.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 许多方法都是成对出现的，`enable` 和 `disable` 就是其中之一。调用 `enable` 会使按钮再次启用。另一对是 `restore`/`minimize`。`minimize`
    将对话框隐藏在屏幕左下角的托盘上。`restore` 将对话框恢复到正常大小并再次显示。
- en: 'The most important option for usability is the `captionButtons` option. Although
    users are likely familiar with the minimize, resize, and close buttons; the pin
    and toggle buttons are not featured in common desktop environments. Therefore,
    you will want to choose the buttons that are visible depending on your use of
    the dialog box in your project. To turn off a button on the title bar, set the
    `visible` option to `false`. A default jQuery UI dialog window with only the close
    button can be created with:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可用性来说，最重要的选项是 `captionButtons` 选项。尽管用户可能熟悉最小化、调整大小和关闭按钮；但固定和切换按钮在常见的桌面环境中并不常见。因此，您将想要根据您在项目中使用对话框的方式选择可见的按钮。要关闭标题栏上的按钮，将
    `visible` 选项设置为 `false`。可以创建一个仅包含关闭按钮的默认 jQuery UI 对话框窗口：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The other options for each button are `click`, `iconClassOff`, and `iconClassOn`.
    The `click` option specifies an event handler for the button. Nevertheless, the
    buttons come with default actions and you will want to use different icons for
    custom actions. That's where `iconClass` comes in. `iconClassOn` defines the CSS
    class for the button when it is loaded. `iconClassOff` is the class for the button
    icon after clicking. For a list of available jQuery UI icons and their classes,
    see [http://jquery-ui.googlecode.com/svn/tags/1.6rc5/tests/static/icons.html](http://jquery-ui.googlecode.com/svn/tags/1.6rc5/tests/static/icons.html).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 每个按钮的其他选项是 `click`、`iconClassOff` 和 `iconClassOn`。`click` 选项指定按钮的事件处理器。尽管按钮带有默认操作，但您可能希望为自定义操作使用不同的图标。这就是
    `iconClass` 发挥作用的地方。`iconClassOn` 定义按钮加载时的 CSS 类。`iconClassOff` 是点击按钮后的按钮图标类。有关可用的
    jQuery UI 图标及其类别的列表，请参阅 [http://jquery-ui.googlecode.com/svn/tags/1.6rc5/tests/static/icons.html](http://jquery-ui.googlecode.com/svn/tags/1.6rc5/tests/static/icons.html)。
- en: '![Wijmo additions to the dialog widget at a glance](img/6067OT_2_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![Wijmo 对话框小部件的添加一览](img/6067OT_2_02.jpg)'
- en: Our next example uses `ui-icon-zoomin`, `ui-icon-zoomout`, and `ui-icon-lightbulb`.
    They can be found by toggling the text for the icons on the web page as shown
    in the preceding screenshot.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个示例使用 `ui-icon-zoomin`、`ui-icon-zoomout` 和 `ui-icon-lightbulb`。它们可以通过在网页上切换图标文本找到，如前一个截图所示。
- en: Adding custom buttons
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加自定义按钮
- en: jQuery UI's dialog API lacks an option for configuring the buttons shown on
    the title bar. Wijmo not only comes with useful default buttons, but also lets
    you override them easily.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 的对话框 API 缺少配置标题栏上显示按钮的选项。Wijmo 不仅提供了有用的默认按钮，还允许你轻松地覆盖它们。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We create a dialog window passing in the `captionButtons` option. The pin,
    refresh, and minimize buttons have `visible` set to `false` so that the title
    bar is initialized without them. The final output looks as shown in the following
    screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过传递 `captionButtons` 选项创建对话框窗口。固定、刷新和最小化按钮的 `visible` 设置为 `false`，以便标题栏初始化时不包含它们。最终输出如图所示：
- en: '![Adding custom buttons](img/6067OT_2_03.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![添加自定义按钮](img/6067OT_2_03.jpg)'
- en: In addition, the toggle and maximize buttons are modified and given custom behaviors.
    The toggle button toggles the font size of the text by applying or removing a
    CSS class. Its default icon, set with `iconClassOn`, indicates that clicking on
    it will zoom in on the text. Once clicked, the icon changes to a zoom out icon.
    Likewise, the behavior and appearance of the maximize button have been changed.
    In the position where the maximize icon was displayed in the title bar previously,
    there is now a lightbulb icon with a tip.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，切换和最大化按钮已被修改并赋予了自定义行为。切换按钮通过应用或移除 CSS 类来切换文本的字体大小。其默认图标，通过 `iconClassOn`
    设置，表示点击它将放大文本。一旦点击，图标将变为缩小图标。同样，最大化按钮的行为和外观也已被更改。在标题栏之前显示最大化图标的位置，现在有一个带有提示的灯泡图标。
- en: 'Although this method of adding new buttons to the title bar seems clumsy, it
    is the only option that Wijmo currently offers. Adding buttons in the content
    area is much simpler. The `buttons` option specifies the buttons to be displayed
    in the dialog window content area below the title bar. For example, to display
    a simple confirmation button:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法在标题栏中添加新按钮看起来有些笨拙，但目前Wijmo提供的唯一选项。在内容区域添加按钮要简单得多。`buttons`选项指定要在标题栏下显示在对话框窗口内容区域的按钮。例如，要显示一个简单的确认按钮：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The text displayed on the button is `ok` and clicking on the button hides the
    dialog. Calling `$('#dialog').wijdialog('open')` will show the dialog again.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮上显示的文本是`ok`，点击按钮会隐藏对话框。调用`$('#dialog').wijdialog('open')`将再次显示对话框。
- en: Configuring the dialog widget's appearance
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置对话框小部件的外观
- en: 'Wijmo offers several options that change the dialog''s appearance including
    title, height, width, and position. The title of the dialog can be changed either
    by setting the `title` attribute of the `div` element of the dialog, or by using
    the `title` option. To change the dialog''s theme, you can use CSS styling on
    the `wijmo-wijdialog` and `wijmo-wijdialog-captionbutton` classes:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Wijmo提供了几个选项来改变对话框的外观，包括标题、高度、宽度和位置。对话框的标题可以通过设置对话框的`div`元素的`title`属性或使用`title`选项来更改。要更改对话框的主题，您可以在`wijmo-wijdialog`和`wijmo-wijdialog-captionbutton`类上使用CSS样式：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We now add rounded boxes, a box shadow, and a text shadow to the dialog box.
    This is done with the `.wijmo-wijdialog` class. Since many of the CSS3 properties
    have different names on different browsers, the browser specific properties are
    used. For example, `-webkit-box-shadow` is necessary on Webkit-based browsers.
    The dialog width is set to 350 px when initialized so that the title text and
    buttons all fit on one line.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们向对话框添加圆角框、框阴影和文本阴影。这是通过`.wijmo-wijdialog`类完成的。由于许多CSS3属性在不同浏览器上的名称不同，因此使用了浏览器特定的属性。例如，在基于Webkit的浏览器上需要`-webkit-box-shadow`。初始化时将对话框宽度设置为350
    px，以便标题文本和按钮都适合一行。
- en: '![Configuring the dialog widget''s appearance](img/6067OT_2_04.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![配置对话框小部件的外观](img/6067OT_2_04.jpg)'
- en: Loading external content
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载外部内容
- en: 'Wijmo makes it easy to load content in an iFrame. Simply pass a URL with the
    `contentUrl` option:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Wijmo使在iFrame中加载内容变得简单。只需传递带有`contentUrl`选项的URL：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This will load the Wijmo theme explorer in a dialog window with refresh and
    maximize/restore buttons. This output can be seen in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在带有刷新和最大化/还原按钮的对话框窗口中加载Wijmo主题探索器。以下截图显示了此输出：
- en: '![Loading external content](img/6067OT_2_05.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![加载外部内容](img/6067OT_2_05.jpg)'
- en: The refresh button reloads the content in the iFrame, which is useful for dynamic
    content. The maximize button resizes the dialog window.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 刷新按钮会重新加载iFrame中的内容，这对于动态内容很有用。最大化按钮会调整对话框窗口的大小。
- en: Summary
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The Wijmo dialog widget is an extension of the jQuery UI dialog. In this chapter,
    the features unique to Wijmo's dialog widget are explored and given emphasis.
    I showed you how to add custom buttons, how to change the dialog appearance, and
    how to load content from other URLs in the dialog.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Wijmo对话框小部件是jQuery UI对话框的扩展。在本章中，探讨了Wijmo对话框小部件的独特功能，并给予了重点介绍。我向您展示了如何添加自定义按钮，如何更改对话框外观，以及如何在对话框中从其他URL加载内容。
