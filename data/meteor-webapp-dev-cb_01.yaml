- en: Chapter 1. Optimizing Your Workflow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 优化您的流程
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Installing Meteor
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Meteor
- en: Finding documentation for Meteor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找Meteor的文档
- en: Getting help with questions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取问题的帮助
- en: Setting up your project file structure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置您的项目文件结构
- en: Setting up your development environment
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置您的开发环境
- en: Using the web console
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web控制台
- en: Deploying a test app to Meteor
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将测试应用部署到Meteor
- en: Deploying to Meteor using a CNAME redirect
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CNAME重定向部署到Meteor
- en: Deploying to a custom hosted environment
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署到自定义托管环境
- en: Deploying with Meteor Up (MUP)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Meteor Up (MUP)进行部署
- en: Using CoffeeScript
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CoffeeScript
- en: Using CSS compilers
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CSS编译器
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Welcome to the wonderful world of Meteor! This chapter will walk you through
    some of the best practices for optimizing your Meteor workflow. From installing
    Meteor to deploying your finished application on your own custom server, the recipes
    found here will get you up and running and provide a great reference as you start
    working with Meteor on a daily basis.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到Meteor的奇妙世界！本章将向您介绍一些优化您的Meteor工作流程的最佳实践。从安装Meteor到将您的成品应用部署到您自己的定制服务器上，这里找到的食谱将帮助您快速启动并运行，并在您开始每天使用Meteor时提供极佳的参考。
- en: Installing Meteor
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Meteor
- en: The folks at Meteor have made installation a breeze. As long as the system you're
    working on (Linux or Mac OS X) is reasonably up to date, installing Meteor should
    be very simple. We have included it as a recipe so that when you're installing
    Meteor on a new machine, you have it handy. We will also include installation
    instructions directly from GitHub, just in case you want to use a development
    branch.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor团队使安装变得简单。只要您正在工作的系统（Linux或Mac OS X）相对较新，安装Meteor应该非常简单。我们将其包括为食谱，以便当您在新机器上安装Meteor时，您手头就有它。我们还将包括来自GitHub的安装说明，以防您想使用开发分支。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You must have `curl` installed in order to install Meteor. If you are on Mac
    OS X, `curl` is already installed. If you are on Linux, `curl` is usually installed.
    To check for `curl`, open a terminal window and execute the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须安装`curl`才能安装Meteor。如果您在Mac OS X上，`curl`已经安装。如果您在Linux上，`curl`通常已经安装。要检查`curl`，请打开一个终端窗口并执行以下命令：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If `curl` is installed, you will receive the following message:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已安装`curl`，您将收到以下消息：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If `curl` isn''t installed, you will receive a message similar to the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装`curl`，您将收到类似以下的消息：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To install `curl`, use `apt-get` or `yum` (depending on your Linux version).
    The following is the command to install `curl` on Ubuntu. Simply replace `apt-get`
    with `yum` in the command to install it on Fedora, Debian, or CentOS:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`curl`，使用`apt-get`或`yum`（根据您的Linux版本）。以下是在Ubuntu上安装`curl`的命令。只需将命令中的`apt-get`替换为`yum`，即可在Fedora、Debian或CentOS上安装：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You should see an installation message, with perhaps a prompt to install. Complete
    the installation process; you will then be ready to install Meteor.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个安装消息，可能还会有提示安装。完成安装过程；然后您将准备好安装Meteor。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Open a terminal window and execute the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个终端窗口并执行以下命令：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works...
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `curl https://install.meteor.com/` command is used to retrieve an installation
    script directly from Meteor. Once the script is downloaded, the `| sh` argument
    tells your system to execute the script, which installs Meteor at `/usr/local/bin/meteor`
    (which should be in your path). Once the entire script is executed, you will be
    able to run the `meteor` command from any location.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`curl https://install.meteor.com/`命令用于直接从Meteor获取安装脚本。一旦脚本下载完成，`| sh`参数告诉您的系统执行该脚本，该脚本将Meteor安装到`/usr/local/bin/meteor`（它应该在您的路径中）。一旦整个脚本执行完成，您将能够从任何位置运行`meteor`命令。'
- en: There's more...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: The preceding recipe covers the default/stable Meteor installation. If you'd
    like to install Meteor directly from the source code or if you'd like to install
    a development branch (for example, the current nightly), you can do so using `git`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的食谱涵盖了默认/稳定的Meteor安装。如果您想直接从源代码安装Meteor，或者如果您想安装一个开发分支（例如，当前的夜间版本），您可以使用`git`来完成。
- en: The Meteor repository is located at [https://github.com/meteor/meteor](https://github.com/meteor/meteor).
    You can find various development branches at this location, in addition to the
    main Meteor repository.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor仓库位于[https://github.com/meteor/meteor](https://github.com/meteor/meteor)。您可以在该位置找到各种开发分支，以及主要的Meteor仓库。
- en: 'Assuming you have `git` installed and would like to install the main Meteor
    build, open a terminal window and execute the following command:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经安装了`git`并且想要安装主要的Meteor构建，打开一个终端窗口并执行以下命令：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will clone the latest Meteor build into a subfolder named `meteor`. Note
    that this does not install Meteor globally on your machine. This means that in
    order to run the `meteor` command, you will need to navigate to (or reference)
    the `meteor` folder where you just cloned the Meteor repository.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把最新的Meteor构建克隆到名为`meteor`的子文件夹中。请注意，这不会在您的机器上全局安装Meteor。这意味着，为了运行`meteor`命令，您需要导航到（或引用）您刚刚克隆的Meteor仓库所在的`meteor`文件夹。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Various other installation arguments and customizations can be used, depending
    on your situation. To see more comprehensive instructions, visit the Meteor GitHub
    main `README.md` page at [https://github.com/meteor/meteor](https://github.com/meteor/meteor).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的具体情况，可以使用各种其他安装参数和自定义选项。要查看更全面的说明，请访问Meteor GitHub主`README.md`页面[https://github.com/meteor/meteor](https://github.com/meteor/meteor)。
- en: Finding documentation for Meteor
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找Meteor的文档
- en: Meteor has finally reached version 1.0, and as such, it's various libraries
    and features are beginning to stabilize. However, there are still some parts of
    Meteor that are in flux. It is therefore important to have the latest documentation
    handy. This recipe will show you where you can find the official Meteor documentation
    when you need it.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor终于达到了1.0版本，因此，它的各种库和功能开始稳定下来。然而，Meteor的一些部分仍然在变化中。因此，拥有最新的文档非常重要。本指南将向您展示在需要时您可以在哪里找到官方Meteor文档。
- en: How to do it…
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Simply navigate to [http://docs.meteor.com/](http://docs.meteor.com/) in a browser
    and bookmark the page.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地在一个浏览器中导航到[http://docs.meteor.com/](http://docs.meteor.com/)并收藏该页面。
- en: How it works…
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: That's all there is to it. The Meteor folks keep the documentation up to date,
    and you can be sure to find all production-ready features, along with a lot of
    great advice, at that location.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了。Meteor团队会保持文档的更新，您可以确信在那里找到所有生产就绪的功能，以及大量的宝贵建议。
- en: There's more…
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: If you would like to have an offline copy of the documentation and still make
    sure you have the latest and greatest version of documentation, you can use Meteor's
    GitHub repository to serve up a local copy of the latest documentation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要有一个离线文档副本并确保您拥有文档的最新和最佳版本，您可以使用Meteor的GitHub仓库来提供最新文档的本地副本。
- en: 'To get the initial copy of the documentation, navigate to where you would like
    to store the documentation (for example, your `Documents` directory) and clone
    the latest Meteor repository with the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取文档的初始副本，请导航到您想要存储文档的位置（例如，您的`Documents`目录）并使用以下命令克隆最新的Meteor仓库：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you''ve already done this, and would like to make sure you have the latest
    and greatest, navigate to the `meteor` subfolder (created when you did the initial
    Git clone) and run the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经完成了这个操作，并且想要确保你拥有最新和最好的版本，请导航到`meteor`子文件夹（在你执行初始Git克隆时创建）并运行以下命令：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will update the Meteor repository with the latest and greatest.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这将更新Meteor仓库到最新和最好的版本。
- en: 'Once you''ve got the latest documentation, you can access it via a web browser
    by navigating to the `docs` directory:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您获得了最新的文档，您可以通过在浏览器中导航到`docs`目录来访问它：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, run the `meteor` command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行`meteor`命令：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once the packages are updated, the Meteor documentation project will start
    and you will see the following in the command line:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦包更新，Meteor文档项目将启动，您将在命令行中看到以下内容：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can now use a browser to navigate to `http://localhost:3000/` and read the
    latest documentation.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以使用浏览器导航到`http://localhost:3000/`并阅读最新的文档。
- en: Getting help with questions
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取帮助解答问题
- en: The more you use Meteor, the more familiar the major packages will become. However,
    you may also want to start branching out and doing more advanced things with some
    of the lesser-known packages. You may also come up with an idea for a new application
    of Meteor. In any case, you will eventually run into a situation where you need
    more information than what is contained in the documentation. Here are some quick
    tips on where to go when you need your questions answered.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您使用 Meteor 的越多，主要包就越熟悉。然而，您可能还希望开始尝试一些不太为人所知的包的高级功能。您也可能会有一个关于 Meteor 的新应用想法。无论如何，您最终会遇到需要比文档中包含的信息更多的信息的情况。以下是一些关于您需要问题时去哪里寻找答案的快速提示。
- en: How to do it…
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'There are three major sources for getting your questions answered:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 获取问题解答有三个主要来源：
- en: For specific technical questions or problems, head over to [http://stackoverflow.com/questions/tagged/meteor](http://stackoverflow.com/questions/tagged/meteor).
    Search for questions others have already asked; if you can't find an answer, go
    ahead and submit a question of your own.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于具体的技术问题或难题，请访问 [http://stackoverflow.com/questions/tagged/meteor](http://stackoverflow.com/questions/tagged/meteor)。搜索其他人已经提出的问题；如果您找不到答案，请提交您自己的问题。
- en: For general questions and comments, visit the Meteor forums at [https://forums.meteor.com/](https://forums.meteor.com/).
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一般问题和评论，请访问 [https://forums.meteor.com/](https://forums.meteor.com/) 上的 Meteor
    论坛。
- en: 'To work in real time with multiple Meteor developers (including members of
    the core team), you can visit the IRC #meteor chat room on `irc.freenode.net`.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '要与多个 Meteor 开发者（包括核心团队成员）实时工作，您可以访问 `irc.freenode.net` 上的 IRC #meteor 聊天室。'
- en: How it works…
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Let's look at some tips on using each of the previously mentioned resources.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用之前提到的每个资源的技巧。
- en: Stack Overflow
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Stack Overflow
- en: 'Stack Overflow is a very active community of developers, many of whom are eager
    to help others with their technical questions. For Meteor-specific help, once
    you''ve navigated to [http://stackoverflow.com/questions/tagged/meteor](http://stackoverflow.com/questions/tagged/meteor),
    you can perform a search using the keywords that best describe your question,
    for example, if you are interested in getting Meteor to work inside a PhoneGap
    application, you may want to search all the tagged **[meteor]** questions for
    `cordova`, as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Stack Overflow 是一个非常活跃的开发者社区，其中许多人乐于帮助他人解决技术问题。对于 Meteor 特定的帮助，一旦您导航到 [http://stackoverflow.com/questions/tagged/meteor](http://stackoverflow.com/questions/tagged/meteor)，您可以使用最能描述您问题的关键词进行搜索，例如，如果您想在
    PhoneGap 应用程序内运行 Meteor，您可能想搜索所有标记为 **[meteor]** 的问题中的 `cordova`，如下所示：
- en: '![Stack Overflow](img/image00311.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Stack Overflow](img/image00311.jpeg)'
- en: This will search all the previously submitted questions tagged with the keyword
    **[meteor]**, which also contain the word `cordova` somewhere in the question.
    You will want to look through the results to see whether your question has already
    been asked. If one of the questions (and the answer to that question) satisfies
    your needs, great! If your question hasn't been answered already, you can ask
    your own question.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这将搜索所有之前提交的、带有关键词 **[meteor]** 并在问题中包含 `cordova` 的标记问题。您将想要查看结果，看看您的问题是否已经被提出。如果其中一个问题（及其答案）满足您的需求，那就太好了！如果您的提问尚未得到解答，您可以提出自己的问题。
- en: 'Click on the button labeled **Ask Question**:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 点击标有 **提问** 的按钮：
- en: '![Stack Overflow](img/image00312.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![Stack Overflow](img/image00312.jpeg)'
- en: Fill out the details of your question. Don't forget to include tags to more
    easily identify and categorize your question. Submit your question and the Stack
    Overflow community will most likely have an answer for you very quickly.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 填写您问题的详细信息。别忘了包括标签，以便更容易识别和分类您的问题。提交您的问题，Stack Overflow 社区很可能很快就会为您找到答案。
- en: Meteor forums
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Meteor 论坛
- en: Meteor forums are also very active, with lots of enthusiastic Meteor developers
    visiting the site daily. You can ask questions, view discussions, and leave comments
    on a lot of different Meteor-related topics. Most of the time, if you have a technical
    question or problem, it's best to use Stack Overflow. However, forums are also
    a great resource for more abstract or specific questions about Meteor.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor 论坛同样非常活跃，每天都有许多热情的 Meteor 开发者访问该网站。您可以在许多不同的 Meteor 相关主题上提问、查看讨论和发表评论。大多数时候，如果您有一个技术问题或难题，最好使用
    Stack Overflow。然而，论坛也是获取更多抽象或具体 Meteor 问题的绝佳资源。
- en: 'The #meteor on IRC'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '#meteor 在 IRC 上'
- en: 'The #meteor IRC channel is a great channel to join in and listen to. You''ll
    be able to interact with all kinds of brilliant developers, many of whom are willing
    to answer your questions immediately. Do keep in mind that most questions or problems
    you''re having (especially when you''re new to Meteor) have already been addressed
    on Stack Overflow or the Meteor forums, and it is courteous to first check and
    make sure your question hasn''t been answered there before asking in the IRC chat.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '#meteor IRC 频道是一个很好的频道，你可以加入并收听。你将能够与各种优秀的开发者互动，其中许多人愿意立即回答你的问题。请记住，你遇到的大多数问题或问题（尤其是当你刚开始接触
    Meteor 时）已经在 Stack Overflow 或 Meteor 论坛上得到了解决，因此在 IRC 聊天中提问之前，先检查并确保你的问题还没有被回答是礼貌的。'
- en: There's more…
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Keep in mind that since Meteor is still new, there are many who are struggling
    with questions that you may be able to answer. Also, when you find the answer
    to your own question, it may be worth putting it up on Stack Overflow. This will
    help you save time for other people who may run into the same problem.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，由于 Meteor 仍然很新，有许多人在努力解决你可能能够回答的问题。此外，当你找到自己问题的答案时，可能值得将其发布在 Stack Overflow
    上。这将帮助其他可能遇到相同问题的人节省时间。
- en: 'Answering other people''s questions on Stack Overflow, the Meteor forums, and
    even on #meteor IRC is a great way to contribute to the community.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '在 Stack Overflow、Meteor 论坛以及甚至 #meteor IRC 上回答他人的问题是一种为社区做出贡献的好方法。'
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Don't forget to answer your own questions on Stack Overflow, if you happen to
    find the answers yourself!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你自己找到了答案，别忘了在 Stack Overflow 上回答你自己的问题！
- en: Setting up your project file structure
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置你的项目文件结构
- en: When you spin up a new project in Meteor, the default file configuration is
    built to get you up and running immediately. That's great, but if you're looking
    to keep your code optimized and easily understood, you'll need to tweak the file
    structure a bit. The following recipe maps out the file structure that you can
    use for the majority of your projects.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Meteor 中启动一个新项目时，默认的文件配置是为了让你立即开始运行。这很好，但如果你希望保持代码优化且易于理解，你可能需要稍微调整一下文件结构。以下食谱概述了你可以在大多数项目中使用的文件结构。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You''ll want to create a new base Meteor project, which we will then modify
    to suit our needs. In a terminal window, navigate to the folder where you would
    like to create the project and enter the following command to create a project
    called `FileTemplate`:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你将想要创建一个新的基本 Meteor 项目，然后我们将对其进行修改以适应我们的需求。在终端窗口中，导航到你想要创建项目的文件夹，并输入以下命令以创建一个名为
    `FileTemplate` 的项目：
- en: '[PRE11]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you. Optionally, the code
    samples can also be downloaded from [https://github.com/strack/PacktMeteorRecipes](https://github.com/strack/PacktMeteorRecipes).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你购买的所有 Packt 出版物书籍的账户中下载示例代码文件。[http://www.packtpub.com](http://www.packtpub.com)。如果你在其他地方购买了这本书，你可以访问
    [http://www.packtpub.com/support](http://www.packtpub.com/support) 并注册，以便将文件直接通过电子邮件发送给你。可选地，代码示例也可以从
    [https://github.com/strack/PacktMeteorRecipes](https://github.com/strack/PacktMeteorRecipes)
    下载。
- en: 'This will create the base file structure. Now, navigate to the folder in the
    File Explorer window of your choice. For this exercise, we''ll use a Mac OS X
    Finder window so that we can visualize the folder structure:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建基本文件结构。现在，导航到你在文件资源管理器窗口中选择的文件夹。在这个练习中，我们将使用 Mac OS X Finder 窗口，这样我们就可以可视化文件夹结构：
- en: '![Getting ready](img/image00313.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/image00313.jpeg)'
- en: Tip
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Always start with a fresh Meteor project (don't try to create your folder structure
    manually). Even though the file structure looks simple, there are hidden files
    and folders created by the `meteor create` command that you can't live without!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 总是以一个新的 Meteor 项目开始（不要尝试手动创建你的文件夹结构）。尽管文件结构看起来很简单，但 `meteor create` 命令创建的隐藏文件和文件夹是你无法离开的！
- en: How to do it…
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To set up your project file structure, proceed with the following steps:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置你的项目文件结构，请按照以下步骤进行：
- en: In your root folder, delete the default `.css`, `.js`, and `.html` files. **FileTemplate**
    should now appear empty, similar to the following screenshot:![How to do it…](img/image00314.jpeg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的根目录中，删除默认的`.css`、`.js`和`.html`文件。**FileTemplate**现在应该看起来是空的，类似于以下截图：![如何操作…](img/image00314.jpeg)
- en: Tip
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Instead of deleting the base `.html`, `.css`, and `.js` files, you could break
    them apart using the code/file entries discussed in the following steps.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 而不是删除基本的`.html`、`.css`和`.js`文件，您可以使用以下步骤中讨论的代码/文件条目将它们分开。
- en: 'Create the following subfolders in your root folder:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的根文件夹中创建以下子文件夹：
- en: '`client`'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`client`'
- en: '`server`'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`server`'
- en: '`both`'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`both`'
- en: '`private`'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private`'
- en: '`public`'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public`'
- en: 'Navigate to the `client` subfolder. Create a new file named `main.html`. Edit
    this file and add the following code (taken from `FileTemplate.html`):'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`client`子文件夹。创建一个名为`main.html`的新文件。编辑此文件并添加以下代码（从`FileTemplate.html`获取）：
- en: '[PRE12]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Create a new subfolder in the `client` folder named `scripts`.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`client`文件夹中创建一个新的子文件夹，命名为`scripts`。
- en: 'Inside `scripts`, create a new file called `main.js`. Edit this file, adding
    the following code (taken from the `Meteor.isClient` section of `FileTemplate.js`):'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`scripts`内部，创建一个名为`main.js`的新文件。编辑此文件，添加以下代码（从`FileTemplate.js`中的`Meteor.isClient`部分获取）：
- en: '[PRE13]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Create a new subfolder in the `client` folder named `lib`. Create two subfolders
    named `scripts` and `styles`.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`client`文件夹中创建一个新的子文件夹，命名为`lib`。创建两个子文件夹，分别命名为`scripts`和`styles`。
- en: Inside `styles`, create a new file called `style.css`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`styles`内部，创建一个名为`style.css`的新文件。
- en: 'Navigate to the `server` subfolder. Create a new file named `server.js`. Add
    the following code to the `server.js` file and save the changes:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`server`子文件夹。创建一个名为`server.js`的新文件。将以下代码添加到`server.js`文件中并保存更改：
- en: '[PRE14]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Your completed file structure should now look like the following screenshot:'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您完成的文件结构现在应该看起来像以下截图：
- en: '![How to do it…](img/image00315.jpeg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00315.jpeg)'
- en: How it works…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: We'll break down this file structure in pairs for the most part. This is because
    for almost every folder, there is another folder that serves the opposite purpose.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将主要成对地分解这个文件结构。这是因为几乎对于每个文件夹，都有一个服务于相反目的的另一个文件夹。
- en: client/server
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: client/server
- en: The `client` folder is interpreted by Meteor as code that belongs exclusively
    to the client. The `server` folder is the exact opposite and tells Meteor that
    any files contained inside should only apply to server-side processing.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`client`文件夹被Meteor解释为仅属于客户端的代码。`server`文件夹则正好相反，告诉Meteor，包含在其中的任何文件仅应用于服务器端处理。'
- en: Having separate `client` and `server` folders logically separates your code
    (making it easier to visualize), saves unnecessary processing, and prevents errors
    (client templates and rendering code will throw errors if processed by the server).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 将`client`和`server`文件夹分开逻辑上分离了您的代码（使其更容易可视化），节省了不必要的处理，并防止了错误（如果由服务器处理，客户端模板和渲染代码将引发错误）。
- en: Inside of the `client` folder, we've placed a `scripts` subfolder and two files,
    both with the main prefix (`main.html` and `main.js`). The `scripts` subfolder
    is for our benefit, separating out HTML and JavaScript so that when we go back
    and review our code, it will be easy to read and segment.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在`client`文件夹内部，我们放置了一个`scripts`子文件夹和两个文件，它们都具有主前缀（`main.html`和`main.js`）。`scripts`子文件夹是为了我们的便利，将HTML和JavaScript分开，这样当我们回头查看代码时，它将更容易阅读和分段。
- en: main/lib
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: main/lib
- en: 'The `main` prefix is used to tell Meteor: *run this code last*. When Meteor
    goes about processing and compiling files, it waits to process anything named
    `main` until the very end. This helps in situations where libraries or scripts
    need to be initialized before you can take advantage of them.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`main`前缀用于告诉Meteor：*最后运行此代码*。当Meteor开始处理和编译文件时，它会等待处理所有名为`main`的文件，直到最后。这有助于在需要在使用它们之前初始化库或脚本的情况下。'
- en: 'Conversely, the `lib` folder tells Meteor: *run this code first*. Anything
    placed inside, or as a child of, the `lib` folder will be run first by Meteor
    at runtime. This is a great place to put global variables, common libraries not
    already included as packages (see [Chapter 2](part0028.xhtml#aid-QMFO1 "Chapter 2. Customizing
    with Packages"), *Customizing with Packages*), and of course any style sheets.
    This is why we''ve included a `scripts` and `styles` subfolder and have created
    an initial generic `style.css` file.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，`lib`文件夹告诉Meteor：*首先运行此代码*。放置在`lib`文件夹内部或作为其子项的任何内容都将由Meteor在运行时首先运行。这是一个放置全局变量、尚未作为包包含的通用库（参见[第二章](part0028.xhtml#aid-QMFO1
    "第二章. 使用包进行自定义")，*使用包进行自定义*）以及当然任何样式表的好地方。这就是为什么我们包括了`scripts`和`styles`子文件夹，并创建了一个初始的通用`style.css`文件。
- en: Using the `main` prefix and the `lib` folder together helps us maintain proper
    sequences and ensures that our styles load as quickly as possible.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`main`前缀和`lib`文件夹一起可以帮助我们保持正确的顺序，并确保我们的样式尽可能快地加载。
- en: public/private
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: public/private
- en: The `public` folder is a repository for assets that need to be accessed globally.
    It's a very good place to store non-sensitive information, such as images and
    text files. It's also easy to remember. If you need something to be shown publicly,
    put it in the `public` folder.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`public`文件夹是一个存储需要全局访问的资产的仓库。这是一个存储非敏感信息（如图像和文本文件）非常好的地方。它也很容易记住。如果你需要将某些内容公开显示，请将其放在`public`文件夹中。'
- en: The `private` folder is the opposite. It's a place to store assets that can
    only be seen by the server. This is a good place to put moderately sensitive information
    (you'll want additional security, such as a database, for the information you
    want to keep more secure). Any files placed in the `private` folder can be referenced
    by the server with no special path or navigation arguments.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`private`文件夹正好相反。这是一个只能由服务器查看的资产存储位置。这是一个放置适度敏感信息的好地方（你将需要额外的安全措施，如数据库，来保护你想要更安全的信息）。任何放置在`private`文件夹中的文件都可以由服务器通过没有特殊路径或导航参数来引用。'
- en: both
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: both
- en: The `both` folder stands all by itself as the folder accessible by both the
    client and the server. When you are creating models and collections (see [Chapter
    4](part0046.xhtml#aid-1BRPS1 "Chapter 4. Creating Models"), *Creating Models*)
    you'll want to put the declarations in a file inside of the `both` folder. The
    main reason for doing this is so that you don't duplicate code, and you can ensure
    that both the client and the server are working from the same model declarations.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`both`文件夹独立存在，是客户端和服务器都可以访问的文件夹。当你创建模型和集合（参见[第四章](part0046.xhtml#aid-1BRPS1
    "第四章. 创建模型")，*创建模型*）时，你希望将声明放在`both`文件夹内的一个文件中。这样做的主要原因是不重复代码，并确保客户端和服务器都从相同的模型声明开始工作。'
- en: There's more…
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Obviously, you don't need to create this file structure from scratch every time.
    You can use your favorite script engine (Grunt, Gulp, Shell Script, and so on)
    and create a script that can make the necessary changes with a single command.
    Alternatively, you can create the template once, copy the entire folder to a new
    location, and then use it as if it were a new project.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你不必每次都从头开始创建这个文件结构。你可以使用你喜欢的脚本引擎（Grunt、Gulp、Shell Script等）并创建一个脚本，它可以通过单个命令进行必要的更改。或者，你可以创建一个模板，然后将整个文件夹复制到新位置，然后就像它是新项目一样使用它。
- en: 'If you do decide to use this recipe rather than an automated script, make sure
    you update your base template to the latest Meteor build periodically and each
    time you make a copy. This can be done very easily in a terminal window. Navigate
    to the root folder (for example `~/Documents/Meteor/FileTemplate`) and run the
    following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确实决定使用这个配方而不是自动化脚本，请确保定期将你的基础模板更新到最新的Meteor构建版本，每次复制时也是如此。这可以在终端窗口中非常容易地完成。导航到根文件夹（例如`~/Documents/Meteor/FileTemplate`）并运行以下命令：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You will either receive a message letting you know that the folder is already
    up to date, or Meteor will update the project to the latest version.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你将收到一条消息，告诉你文件夹已经是最新的，或者Meteor将更新项目到最新版本。
- en: See also
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见也
- en: '[Chapter 2](part0028.xhtml#aid-QMFO1 "Chapter 2. Customizing with Packages"),
    *Customizing with Packages*'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](part0028.xhtml#aid-QMFO1 "第二章. 使用包进行自定义")，*使用包进行自定义*'
- en: Setting up your development environment
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置你的开发环境
- en: While you're developing your project, there are several default packages and
    settings that make your debugging and development work much easier. This recipe
    will give you suggestions to help create an ideal development environment.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开发项目的同时，有几个默认包和设置可以使你的调试和开发工作变得更加容易。这个配方将为你提供一些建议，帮助你创建一个理想的发展环境。
- en: Getting ready
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You'll want to make sure you have Meteor installed (of course), and you will
    need a default project file structure set up. You can either use the *Setting
    up your project file structure* recipe from earlier in this chapter, or create
    a brand new Meteor project using the `meteor create [...]` command.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确保已经安装了Meteor（当然），并且你需要设置一个默认的项目文件结构。你可以使用本章早些时候的“设置你的项目文件结构”配方，或者使用`meteor
    create [...]`命令创建一个新的Meteor项目。
- en: 'This recipe assumes that you have some Mongo collections and/or some kinds
    of user accounts set up. If you don''t have a collection added, you may want to
    add one just for testing purposes. To do so, create a file named `[project root]/both/model.js`
    and enter the following line of code:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方假设你已经设置了一些Mongo集合和/或某些类型的用户账户。如果你没有添加集合，你可能只想为了测试目的添加一个。为此，创建一个名为`[项目根]/both/model.js`的文件，并输入以下代码行：
- en: '[PRE16]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: With a project in place and at least one Mongo collection to monitor, we're
    ready to start developing and debugging!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在有一个项目和至少一个要监控的Mongo集合的情况下，我们准备开始开发和调试了！
- en: How to do it…
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: First, we want to make sure that the `insecure` and `autopublish` packages are
    installed, which is usually the case with a default Meteor project.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们想确保`insecure`和`autopublish`包已安装，这对于默认的Meteor项目通常是默认情况。
- en: 'In a terminal window, navigate to the root folder of your project and enter
    the following command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中，导航到你的项目根目录，并输入以下命令：
- en: '[PRE17]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This will list all the packages used by your project. You should receive something
    similar to the following:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将列出你的项目使用的所有包。你应该会收到类似于以下的内容：
- en: '[PRE18]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If the `autopublish` or `insecure` packages are missing, you can add them manually
    by entering the following commands:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果缺少`autopublish`或`insecure`包，你可以通过输入以下命令手动添加它们：
- en: '[PRE19]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, install the `msavin:mongol` smart package. In the terminal window, enter
    the following command:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，安装`msavin:mongol`智能包。在终端窗口中，输入以下命令：
- en: '[PRE20]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: After a short installation process, you should receive a message indicating
    that the `msavin:mongol` package was installed correctly.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在简短的安装过程之后，你应该会收到一条消息，表明`msavin:mongol`包已正确安装。
- en: 'Start your `meteor` project by entering the following command in your terminal
    window:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端窗口中输入以下命令来启动你的`meteor`项目：
- en: '[PRE21]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Open your app in a browser by navigating to `http://localhost:3000`. Once there,
    press *Ctrl* + *M* and look towards the bottom-left of the screen. You will see
    a small expandable dashboard, similar to the following screenshot:![How to do
    it…](img/image00316.jpeg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到`http://localhost:3000`在浏览器中打开你的应用程序。一旦进入，按下*Ctrl* + *M*，并查看屏幕的左下角。你会看到一个可展开的控制台，类似于以下截图：![如何操作…](img/image00316.jpeg)
- en: 'Clicking on any of the collection names or the **Account** tab will let you
    view, update, delete, and insert records, as shown in the following screenshot:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击任何集合名称或**账户**标签，你可以查看、更新、删除和插入记录，如下面的截图所示：
- en: '![How to do it…](img/image00317.jpeg)'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00317.jpeg)'
- en: This comes in very handy when you're building your app, as you have instant
    access to your collections and user account profiles.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在构建你的应用程序时，这会非常有用，因为你可以立即访问你的集合和用户账户配置文件。
- en: How it works…
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The following line is all that''s needed to install a package:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下行是安装包所需的所有内容：
- en: '[PRE22]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This tells Meteor to go and find the `msavin:mongol` package, with all of its
    dependencies, and add the package to your project. This is a third-party package,
    and more details on the package can be found at [https://atmospherejs.com/msavin/mongol](https://atmospherejs.com/msavin/mongol).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉Meteor去寻找包含所有依赖的`msavin:mongol`包，并将其添加到你的项目中。这是一个第三方包，更多关于这个包的详细信息可以在[https://atmospherejs.com/msavin/mongol](https://atmospherejs.com/msavin/mongol)找到。
- en: Once installed, you can access it on your browser page by the *Ctrl* + *M* shortcut.
    Under the hood, the `mongol` package is monitoring for any collections, specifically
    filtering user-account-related collections into the **Account** tab. Other than
    that, all collections are treated the same, and this interface just simplifies
    your debugging/development process when you need to see what's going on inside
    your collections.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可以通过浏览器页面上的 *Ctrl* + *M* 快捷键访问它。在底层，`mongol` 包正在监控任何集合，特别是将用户账户相关的集合过滤到
    **账户** 选项卡中。除此之外，所有集合都同等对待，这个界面只是简化了您在需要查看集合内部情况时的调试/开发过程。
- en: There's more…
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Mongol is very new but it is getting better all the time. You can read about
    all it's current features and preview upcoming features by visiting [https://github.com/msavin/Mongol](https://github.com/msavin/Mongol).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Mongol 非常新，但它一直在不断改进。您可以通过访问 [https://github.com/msavin/Mongol](https://github.com/msavin/Mongol)
    了解所有当前功能并预览即将推出的功能。
- en: See also
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adding Meteor packages*, *Removing Meteor packages*, and *Using npm modules*
    recipes in [Chapter 2](part0028.xhtml#aid-QMFO1 "Chapter 2. Customizing with Packages"),
    *Customizing with Packages*
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第 2 章 *Customizing with Packages* 中的 *Adding Meteor packages*、*Removing Meteor
    packages* 和 *Using npm modules* 配方，*Customizing with Packages*
- en: The *Basic safety – turning off autopublish* and *Basic safety – removing insecure*
    recipes in [Chapter 9](part0073.xhtml#aid-25JP21 "Chapter 9. Securing Your Application"),
    *Securing Your Application*
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第 9 章 *Securing Your Application* 中的 *Basic safety – turning off autopublish*
    和 *Basic safety – removing insecure* 配方，*Securing Your Application*
- en: Using the web console
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用网页控制台
- en: Sometimes modifying your code while debugging is just too slow. This recipe
    will introduce you to the web console and give you some pointers on using it.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 有时在调试时修改代码会太慢。这个配方将向您介绍网页控制台，并给您一些使用它的提示。
- en: Getting ready
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need a sandbox to play in. For the purpose of this recipe, we'll use
    one of the default examples built into Meteor.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个沙盒来玩耍。为了这个配方，我们将使用 Meteor 内置的默认示例之一。
- en: 'In a terminal window, enter the following command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端窗口中，输入以下命令：
- en: '[PRE23]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Once created, navigate to the `leaderboard` folder and start Meteor:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完成后，导航到 `leaderboard` 文件夹并启动 Meteor：
- en: '[PRE24]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We can now navigate to our leaderboard example page (`http://localhost:3000`)
    using the web browser of our choice.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用我们选择的网页浏览器导航到我们的排行榜示例页面（`http://localhost:3000`）。
- en: 'We need to enable the web console in various browsers. In no particular order,
    here''s how to get to the web console on the browsers you''re likely to be working
    with:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在各种浏览器中启用网页控制台。不分先后，以下是如何在您可能工作的浏览器上访问网页控制台的方法：
- en: Safari
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari
- en: 'Enable the **Develop** menu by going to **Safari** | **Preferences** | **Advanced**
    (*CMD+*, shortcut if you prefer) and making sure the **Show Development Menu in
    menu bar** option is enabled:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 通过转到 **Safari** | **偏好设置** | **高级** (*CMD+*, 如果您更喜欢快捷键) 并确保启用 **菜单栏中显示开发菜单**
    选项来启用 **开发** 菜单：
- en: '![Safari](img/image00318.jpeg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![Safari](img/image00318.jpeg)'
- en: 'Now, on any web page, click on **Show Error Console** under **Develop** (or
    use the *CMD* + *Alt* + *C* shortcut):'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在任何网页上，点击 **开发** 下的 **显示错误控制台**（或使用 *CMD* + *Alt* + *C* 快捷键）：
- en: '![Safari](img/image00319.jpeg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![Safari](img/image00319.jpeg)'
- en: 'This will bring up the web console, as shown in the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开网页控制台，如下面的截图所示：
- en: '![Safari](img/image00320.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![Safari](img/image00320.jpeg)'
- en: Firefox
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Firefox
- en: 'On any web page, click on the **Web Console** menu option (*CMD* + *Alt* +
    *K* shortcut) under **Tools** | **Web Developer**:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何网页上，点击 **工具** | **Web 开发者** 下的 **Web 控制台**菜单选项（*CMD* + *Alt* + *K* 快捷键）：
- en: '![Firefox](img/image00321.jpeg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![Firefox](img/image00321.jpeg)'
- en: 'The web console now appears as shown in the following screenshot:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 网页控制台现在如以下截图所示：
- en: '![Firefox](img/image00322.jpeg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![Firefox](img/image00322.jpeg)'
- en: Chrome
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Chrome
- en: 'On any web page, click on the **Developer Tools** menu item (*CMD* + *Alt*
    + *I* shortcut) under **View** | **Developer**:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何网页上，点击 **查看** | **开发者** 下的 **开发者工具**菜单项（*CMD* + *Alt* + *I* 快捷键）：
- en: '![Chrome](img/image00323.jpeg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![Chrome](img/image00323.jpeg)'
- en: 'This will bring up the web console, as shown in the following screenshot:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开网页控制台，如下面的截图所示：
- en: '![Chrome](img/image00324.jpeg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![Chrome](img/image00324.jpeg)'
- en: How to do it…
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: To show what's possible with a web console, let's create a new scientist, and
    add some points to Tesla. Because, Imma let you finish, but Nikola Tesla was the
    greatest scientist of all time. Of. All. Time.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示网页控制台可以实现的功能，让我们创建一个新的科学家，并为 Tesla 添加一些分数。因为，我要让你完成，但尼古拉·特斯拉是有史以来最伟大的科学家。就是。所有。时间。
- en: If you haven't done so already, navigate to `http://localhost:3000/`.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，请导航到 `http://localhost:3000/`。
- en: Now, open the web console if it's not already open.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果尚未打开，请打开网页控制台。
- en: 'In the console, run the following command:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制台中运行以下命令：
- en: '[PRE25]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The name **Stephen Hawking** will now be in the list. You can select his name
    and add some points:![How to do it…](img/image00325.jpeg)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**斯蒂芬·霍金** 的名字现在将在列表中。您可以选择他的名字并添加一些分数：![如何操作…](img/image00325.jpeg)'
- en: 'Now, let''s give Tesla the love he deserves. First, let''s find the `_id` value
    for the Tesla record. Run the following command in the console:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们给 Tesla 应得的关爱。首先，让我们找到 Tesla 记录的 `_id` 值。在控制台中运行以下命令：
- en: '[PRE26]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Harvest the `_id` valuefrom the result and modify the score, similar to the
    following:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从结果中提取 `_id` 值并修改分数，类似于以下内容：
- en: '[PRE27]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Tesla will now be placed at the top of the leaderboard:'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，Tesla 将被放置在排行榜的顶部：
- en: '![How to do it…](img/image00326.jpeg)'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00326.jpeg)'
- en: 'One last manipulation, let''s deselect any of the scientists mentioned in the
    preceding screenshot. Enter the following command in the console:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一次操作，让我们取消选择之前截图中所提到的任何科学家。在控制台中输入以下命令：
- en: '[PRE28]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You will notice that, now no scientist is selected.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您会注意到，现在没有选择任何科学家。
- en: Tip
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can run through the previous commands in the web console by pressing the
    up or down arrow keys.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过按上箭头或下箭头键在网页控制台中运行之前的命令。
- en: How it works…
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The web console acts as an extension of your code. You are able to receive log
    messages, call exposed methods and events, or change and instantiate global variables.
    You are able to do this dynamically in real time, which can have a lot of advantages
    as you're testing or debugging.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 网页控制台充当您代码的扩展。您能够接收日志消息，调用公开的方法和事件，或更改和实例化全局变量。您能够在实时动态地做到这一点，这在测试或调试时可以带来很多优势。
- en: With a few well-composed lines of code, we were able to replicate the behavior
    found in the event handlers and methods that belong to the app. In other words,
    we were able to manually test things, rather than having to modify, save, and
    retest the code. This kind of impromptu testing can really save us time.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 通过几行精心编写的代码，我们能够复制事件处理程序和属于应用程序的方法中的行为。换句话说，我们能够手动测试事物，而无需修改、保存和重新测试代码。这种即兴测试可以真正节省我们时间。
- en: There's more…
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The web console and the associated development tools can perform all kinds of
    client-side debugging and testing tasks. You can run prewritten scripts, pause
    code during execution, monitor variables and the call stack, and even create your
    own methods and variables dynamically.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 网络控制台和相关开发工具可以执行各种客户端调试和测试任务。您可以运行预写的脚本，在执行过程中暂停代码，监控变量和调用堆栈，甚至可以动态地创建自己的方法和变量。
- en: Tip
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The web console varies a little bit from browser to browser, but you can find
    instructions that apply to nearly every web console at [https://developers.google.com/chrome-developer-tools/docs/console](https://developers.google.com/chrome-developer-tools/docs/console).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 网页控制台在各个浏览器之间略有不同，但您可以在 [https://developers.google.com/chrome-developer-tools/docs/console](https://developers.google.com/chrome-developer-tools/docs/console)
    找到适用于几乎所有网页控制台的说明。
- en: Deploying a test app to Meteor
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将测试应用部署到 Meteor
- en: As you've come to expect, Meteor makes just about everything easier to do. Testing
    your application on a server is no exception. This recipe will show you how to
    deploy your application to Meteor servers, where you can test (and show off!)
    your new application.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所期待的那样，Meteor 使几乎所有事情都变得更容易做。在服务器上测试您的应用程序也不例外。这个食谱将向您展示如何将您的应用程序部署到 Meteor
    服务器，在那里您可以测试（并展示！）您的新应用程序。
- en: Getting ready
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The only requirement for this recipe is that you have a working application.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱的唯一要求是您有一个可工作的应用程序。
- en: Your app doesn't need to be fancy or complete, but it should at least render
    something on the screen so that you can verify it is running on Meteor servers.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用不需要很复杂或完整，但它至少应该在屏幕上渲染一些内容，以便您可以验证它是否在 Meteor 服务器上运行。
- en: 'For this recipe, we will use the default `leaderboard` example, which is created
    using the following command in a terminal window:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们将使用默认的 `leaderboard` 示例，该示例是在终端窗口中使用以下命令创建的：
- en: '[PRE29]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How to do it…
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To deploy a test app to Meteor, proceed with the following steps:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 要将测试应用程序部署到 Meteor，请按照以下步骤进行：
- en: First, you need to pick an application name.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要选择一个应用程序名称。
- en: The application name will appear on Meteor servers as a subdomain of the URL
    where your app is being served, such as `http://myproject.meteor.com`.
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应用程序名称将作为你的应用程序被服务的 URL 的子域出现在 Meteor 服务器上，例如 `http://myproject.meteor.com`。
- en: However, there are a lot of people testing applications on Meteor servers. Chances
    are pretty good that a generic name, such as "myproject" or "leaderboard", is
    already taken. So, we need to pick something unique.
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，有很多人在 Meteor 服务器上测试应用程序。很可能一个通用名称，如 "myproject" 或 "leaderboard"，已经被占用。所以，我们需要选择一个独特的名称。
- en: For this recipe, I will use this application name `packtrecipe`. You will obviously
    need to pick something else. I got here first!
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于这个食谱，我将使用这个应用程序名称 `packtrecipe`。你显然需要选择其他名称。我是第一个到这里来的！
- en: Tip
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Your project and application name do *not* need to match. The application name
    is only an identifier so that Meteor servers know how to route to your application.
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的项目和应用程序名称不需要匹配。应用程序名称只是一个标识符，这样 Meteor 服务器就知道如何路由到你的应用程序。
- en: 'Now that we''ve selected an application name, we will open a terminal window
    and navigate to the root directory of our project:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经选择了应用程序名称，我们将打开一个终端窗口并导航到我们项目的根目录：
- en: '[PRE30]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Once we''re in the correct folder, we will issue the `deploy` command as follows:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们进入正确的文件夹，我们将按照以下方式发出 `deploy` 命令：
- en: '[PRE31]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Meteor will bundle and deploy your application. Upon completion, you should
    see something similar to the following in the terminal window:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meteor 将打包并部署你的应用程序。完成后，你应该在终端窗口中看到以下类似的内容：
- en: '[PRE32]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Navigate to the URL Meteor gave you (in this case, `http://packtrecipe.meteor.com`)
    in a browser and you will see your newly deployed application, as follows:![How
    to do it…](img/image00327.jpeg)
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中导航到 Meteor 给你的 URL（在这种情况下，`http://packtrecipe.meteor.com`），你将看到你新部署的应用程序，如下所示：![如何操作…](img/image00327.jpeg)
- en: How it works…
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: It's magic! The folks at Meteor are sorcerers!
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这太神奇了！Meteor 的人都是巫师！
- en: Actually, the core development team has worked very hard to make deployment
    as easy as possible. Under the hood, your local Meteor installation is packaging
    the correct files, compiling package lists and dependencies, and then sending
    a request to the Meteor servers. Once the Meteor servers receive the request,
    all the necessary error checking is done, and the packages, database, and application
    are created and initialized. A virtual host address is added, and voila! Your
    app is up and running.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，核心开发团队已经非常努力地使部署尽可能简单。在底层，你的本地 Meteor 安装正在打包正确的文件，编译包列表和依赖项，然后向 Meteor 服务器发送请求。一旦
    Meteor 服务器收到请求，就会进行所有必要的错误检查，并创建和初始化包、数据库和应用程序。添加一个虚拟主机地址，然后 voila！你的应用程序就上线并运行了。
- en: There's a lot more detail (and code) involved, but this should give you a general
    idea of what goes into deploying to the Meteor test servers. Aren't you glad you
    didn't have to write all of that code?
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 其中涉及很多细节（和代码），但这些都应该能给你一个关于如何部署到 Meteor 测试服务器的总体概念。你不高兴自己不必编写所有这些代码吗？
- en: There's more…
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You probably noticed that you had to create a Meteor developer account in order
    to deploy. This is as it should be, because if there were no login/security details,
    someone could come along and override your deployment with one of their own.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，你必须创建一个 Meteor 开发者账户才能部署。这是应该的，因为没有登录/安全细节，有人可能会来并用自己的部署覆盖你的部署。
- en: This requirement, however, is quite flexible, allowing you to add other users
    or even organizations so that multiple people can deploy or update your app.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个要求相当灵活，允许你添加其他用户甚至组织，以便多个人可以部署或更新你的应用程序。
- en: 'To set up an organization, navigate to [https://www.meteor.com/account-settings/organizations](https://www.meteor.com/account-settings/organizations)
    and click on the button labeled **NEW ORGANIZATION** at the bottom of the screen.
    You can then add individual users to the organization, similar to the following
    screenshot:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置一个组织，导航到 [https://www.meteor.com/account-settings/organizations](https://www.meteor.com/account-settings/organizations)
    并点击屏幕底部的“**新建组织**”按钮。然后你可以添加个人用户到组织中，类似于以下截图：
- en: '![There''s more…](img/image00328.jpeg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/image00328.jpeg)'
- en: 'Once you''ve deployed your application, you can authorize the changes made
    by an individual or an organization through the `meteor authorized` command. Use
    the following syntax to add authorized accounts:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦部署了你的应用程序，你可以通过`meteor authorized`命令授权个人或组织所做的更改。使用以下语法添加授权账户：
- en: '[PRE33]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'So, for example, we would use the following to add the `packtmeteor` organization
    to our deployed app:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们会使用以下命令将`packtmeteor`组织添加到我们的部署应用中：
- en: '[PRE34]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Likewise, if we wanted to remove authorization (for example, let''s remove
    the `strack2` account), we would enter something like this:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果我们想取消授权（例如，让我们取消`strack2`账户的授权），我们会输入类似以下的内容：
- en: '[PRE35]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Tip
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Meteor developer accounts have other useful functions as well. To explore what
    you can do with your account, please visit [https://www.meteor.com/account-settings](https://www.meteor.com/account-settings).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor开发者账户还有其他有用的功能。要探索你可以用你的账户做什么，请访问[https://www.meteor.com/account-settings](https://www.meteor.com/account-settings)。
- en: See also
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Building a custom package* recipe in [Chapter 2](part0028.xhtml#aid-QMFO1
    "Chapter 2. Customizing with Packages"), *Customizing with Packages*
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第2章](part0028.xhtml#aid-QMFO1 "第2章。使用包进行定制")的*构建自定义包*食谱中，*使用包进行定制*
- en: Deploying to Meteor using a CNAME redirect
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用CNAME重定向部署到Meteor
- en: Deploying to Meteor test servers is all well and good, but what if you want
    to use your own custom domain name? The folks at Meteor have created a simple
    way for you to do just that. This recipe will show you how to take advantage of
    this simple, yet powerful feature.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 将应用部署到Meteor测试服务器一切都很顺利，但如果你想使用自己的自定义域名怎么办？Meteor团队为你提供了一个简单的方法来实现这一点。这个食谱将向你展示如何利用这个简单而强大的功能。
- en: Getting ready
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: You will need to create a **CNAME** redirect to `origin.meteor.com` on the hosting
    service where your domain is registered. How to do this varies pretty widely,
    so consult your hosting service's knowledge base on the exact steps. For this
    recipe, we'll use the cPanel interface of a hosting service for the `packtpub.com`
    domain.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在你的域名注册的主机服务上创建一个指向`origin.meteor.com`的**CNAME**重定向。具体操作方法差异很大，因此请咨询你的主机服务知识库以获取确切步骤。对于这个食谱，我们将使用`packtpub.com`域名的主机服务的cPanel界面。
- en: 'Enter the subdomain you wish to use in your **CNAME** redirect (for example,
    `meteor.packtpub.com`) and set the redirect location to `origin.meteor.com`. Click
    on **Add CNAME Record** to submit the record:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的**CNAME**重定向中输入你希望使用的子域名（例如，`meteor.packtpub.com`），并将重定向位置设置为`origin.meteor.com`。点击**添加CNAME记录**以提交记录：
- en: '![Getting ready](img/image00329.jpeg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/image00329.jpeg)'
- en: How to do it…
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s assume the subdomain we''re going to use is `meteor.packtpub.com`. In
    order to deploy to the Meteor environment, perform the following steps:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们将要使用的子域名是`meteor.packtpub.com`。为了部署到Meteor环境，请执行以下步骤：
- en: 'Once you have your **CNAME** redirect properly set, open a terminal window,
    navigate to the root directory of your project, and enter the following:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你的**CNAME**重定向设置正确，打开一个终端窗口，导航到你的项目根目录，然后输入以下命令：
- en: '[PRE36]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Meteor will deploy your app and provide feedback as the bundling, uploading,
    and serving steps are completed:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当捆绑、上传和提供步骤完成时，Meteor会部署你的应用并提供反馈：
- en: '[PRE37]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: To verify the application, navigate to your application's URL (for example,
    `http://meteor.packtpub.com`) in a browser. If everything was deployed correctly,
    you will see your application up and running.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要验证应用程序，请在浏览器中导航到你的应用程序URL（例如，`http://meteor.packtpub.com`）。如果一切部署正确，你将看到你的应用程序正在运行。
- en: How it works…
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This Meteor deployment feature is nearly identical to the default deployment,
    with just a little bit of extra code built in to interpret the origin of **CNAME**
    redirect.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Meteor部署功能几乎与默认部署相同，只是内置了一些额外的代码来解释**CNAME**重定向的来源。
- en: When a request comes in to `origin.meteor.com` via a **CNAME** redirect, Meteor
    takes the **CNAME** redirect's original destination and uses it as the unique
    identifier for the application deployment. Meteor also uses future requests to
    `origin.meteor.com` from this **CNAME** redirect to serve the application.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 当请求通过**CNAME**重定向到达`origin.meteor.com`时，Meteor会使用**CNAME**重定向的原始目的地作为应用程序部署的唯一标识符。Meteor还会使用来自此**CNAME**重定向的后续请求来提供应用程序。
- en: In this particular case, the original **CNAME** destination was `meteor.packtpub.com`.
    When the request is redirected to `origin.meteor.com`, Meteor recognizes the **CNAME**
    redirect and uses it to direct traffic to the deployed application.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定情况下，原始**CNAME**目标地址是`meteor.packtpub.com`。当请求被重定向到`origin.meteor.com`时，Meteor会识别**CNAME**重定向并使用它来将流量导向已部署的应用程序。
- en: See also
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Deploying a test app to Meteor* recipe in this chapter
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中关于*将测试应用程序部署到Meteor*的配方
- en: Deploying to a custom hosted environment
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到自定义托管环境
- en: When you are ready to actually deploy your app to a production environment,
    you will need to convert your Meteor application to a straight up Node application.
    There are multiple methods to do this, all of which are (currently) manual processes
    and not for the beginner. A lot can go wrong. This recipe will show you how to
    manually deploy your Meteor application to a production server as a Node application.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备将你的应用程序实际部署到生产环境时，你需要将你的Meteor应用程序转换为纯Node应用程序。有多种方法可以做到这一点，所有这些方法（目前）都是手动过程，并且不适合初学者。可能会出错很多。这个配方将向你展示如何手动将你的Meteor应用程序作为Node应用程序部署到生产服务器。
- en: Getting ready
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: As mentioned, there are multiple methods and server configurations that can
    successfully host a Node application. There are, however, some commonalities,
    all of which you will need for this recipe.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 正如提到的，有多种方法和服务器配置可以成功托管Node应用程序。然而，有一些共同点，这些共同点对于这个配方都是必需的。
- en: First, you will need a hosted **MongoDB** database.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要一个托管**MongoDB**数据库。
- en: 'Your MongoDB database can be hosted remotely or on the same machine from where
    you will deploy your Node application. For this recipe, we have deployed a default
    MongoDB database to the same machine where we will host the app. Our `MONGO_URL`
    value will therefore be:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 你的MongoDB数据库可以托管在远程服务器上，或者在你将部署Node应用程序的同一台机器上。对于这个配方，我们已经将默认的MongoDB数据库部署到了我们将托管应用程序的同一台机器上。因此，我们的`MONGO_URL`值将是：
- en: '[PRE38]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Tip
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Installation instructions (and tutorials) for MongoDB can be found at [http://docs.mongodb.org/manual/installation/](http://docs.mongodb.org/manual/installation/).
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB的安装说明（和教程）可以在[http://docs.mongodb.org/manual/installation/](http://docs.mongodb.org/manual/installation/)找到。
- en: Free or cheap but dedicated MongoDB service hosting also exists. Run a quick
    Internet search for *MongoDB hosting* or visit [http://www.mongodb.com/partners/cloud](http://www.mongodb.com/partners/cloud)
    for a list of providers.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 免费或便宜的专用MongoDB服务托管也存在。运行一个快速的互联网搜索以查找*MongoDB托管*，或者访问[http://www.mongodb.com/partners/cloud](http://www.mongodb.com/partners/cloud)以获取提供商列表。
- en: Next, your hosting environment will need the latest stable Node and npm modules.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你的托管环境需要最新的稳定Node和npm模块。
- en: 'Installation instructions for each of these programs are beyond the scope of
    this book. For installation instructions and advice on how to get started, visit
    the following:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这些程序的安装说明超出了本书的范围。有关安装说明和如何开始的建议，请访问以下链接：
- en: Node ([http://nodejs.org](http://nodejs.org))
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node ([http://nodejs.org](http://nodejs.org))
- en: npm ([https://www.npmjs.com/](https://www.npmjs.com/))
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: npm ([https://www.npmjs.com/](https://www.npmjs.com/))
- en: Tip
  id: totrans-302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The latest or nightly builds of these programs will likely cause you problems
    in a production environment. Be sure to use the stable versions, unless you have
    thoroughly tested a different version.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这些程序的最新或夜间构建在生产环境中可能会给你带来问题。请确保使用稳定版本，除非你已经彻底测试了其他版本。
- en: 'Lastly, you will need the `forever` npm module installed in your hosting environment.
    From a terminal window on your hosted environment, run the following command:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你需要在你的托管环境中安装`forever` npm模块。从你的托管环境的一个终端窗口中，运行以下命令：
- en: '[PRE39]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Note that you may need to use the `sudo` command to install the package globally.
    This will depend on how npm was installed on your server. The preceding command
    will install `forever` on your machine, and you are now ready to prepare and deploy
    your application to production.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你可能需要使用`sudo`命令全局安装软件包。这取决于npm在你的服务器上是如何安装的。前面的命令将在你的机器上安装`forever`，现在你就可以准备和部署你的应用程序到生产环境了。
- en: How to do it…
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做这件事...
- en: 'To deploy to a custom hosted environment, proceed with the following steps:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署到自定义托管环境，请按照以下步骤操作：
- en: 'Open a terminal window in your development environment and navigate to the
    root folder of your Meteor project. In this root folder, execute the following
    command:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的开发环境中打开一个终端窗口，导航到你的Meteor项目的根目录。在这个根目录中，执行以下命令：
- en: '[PRE40]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Replace the placeholders in the preceding line of code with your build location
    (for example: `~/Documents/builds/mybuild`) and an architecture (the options are
    `os.osx.x86_64`, `os.linux.x86_64`, and `os.linux.x86_32`). The `--architecture`
    option is optional if you are building this on the same server where you will
    deploy your app.'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将上一行代码中的占位符替换为你的构建位置（例如：`~/Documents/builds/mybuild`）和一个架构（选项有 `os.osx.x86_64`、`os.linux.x86_64`
    和 `os.linux.x86_32`）。如果你是在将要部署应用程序的服务器上构建，`--architecture` 选项是可选的。
- en: Meteor will bundle, extract, and repackage a clean production copy of your Meteor
    project, preparing it to be used in your hosting environment. While it is being
    built, Meteor will update you with the status in the terminal window.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meteor 将捆绑、提取并重新打包你的 Meteor 项目的干净生产副本，为在托管环境中使用做好准备。在构建过程中，Meteor 将在终端窗口中更新你的状态。
- en: 'Once the build is finished, navigate to the build folder you specified, for
    example, if you specified `~/Documents/builds/mybuild` as your build location,
    you would need to enter the following command:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建完成，导航到你指定的构建文件夹，例如，如果你指定 `~/Documents/builds/mybuild` 作为你的构建位置，你需要输入以下命令：
- en: '[PRE41]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: In the build folder, you will see a `tarball` file with a name similar to `[your-project-name].tar.gz`.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建文件夹中，你会看到一个名称类似于 `[your-project-name].tar.gz` 的 `tarball` 文件。
- en: So, for example, if the name of my project was `leaderboard`, the name of the
    `tarball` file would be `leaderboard.tar.gz`.
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果我的项目名称是 `leaderboard`，那么 `tarball` 文件名称将是 `leaderboard.tar.gz`。
- en: Make a note of the name and location because you'll need it when you copy and
    extract the build to your server.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下名称和位置，因为当你将构建复制并提取到服务器时，你需要用到它。
- en: 'For this recipe, let''s assume you''re using a Linux server to host your production
    application. Let''s create a `meteorapps` folder using the following terminal
    command:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个食谱，让我们假设你正在使用 Linux 服务器托管你的生产应用程序。让我们使用以下终端命令创建一个 `meteorapps` 文件夹：
- en: '[PRE42]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Next, copy the `tarball` file from your development environment to the `/home/meteorapps/`
    folder in your production-hosted environment.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 `tarball` 文件从你的开发环境复制到生产托管环境中的 `/home/meteorapps/` 文件夹。
- en: If you build your application on a different machine, you can transfer it via
    SCP, FTP, a common file server, a Git repository, and so on. It really doesn't
    matter how you copy it over, as long as a copy of the `tarball` file is now in
    your hosted environment.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在一个不同的机器上构建你的应用程序，你可以通过 SCP、FTP、常见的文件服务器、Git 仓库等方式进行传输。实际上，你如何复制它并不重要，只要现在你的托管环境中有一个
    `tarball` 文件副本即可。
- en: 'Once it''s copied over, run the following command on the `tarball` file:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦复制完成，在 `tarball` 文件上运行以下命令：
- en: '[PRE43]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This will extract the file to a folder named `bundle`. If you navigate to the
    `bundle` folder, you will find a `README` file. The next steps in this recipe
    are taken from this `README` file, so feel free to check them out for a more concise
    set of instructions. If you check the contents of the folder, you should see something
    similar to the following:'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将把文件提取到一个名为 `bundle` 的文件夹中。如果你导航到 `bundle` 文件夹，你会找到一个 `README` 文件。本食谱的下一步操作来自这个
    `README` 文件，所以你可以自由查看它们以获得更简洁的指令集。如果你检查文件夹内容，你应该会看到以下类似的内容：
- en: '[PRE44]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'We will now install the npm packages needed to run our application. Navigate
    to `bundle/programs/server` and execute the following command:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将安装运行我们的应用程序所需的 npm 软件包。导航到 `bundle/programs/server` 并执行以下命令：
- en: '[PRE45]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Note
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that we did not use the `–g` argument, as we are only installing the local
    npm packages specified in the bundled folder.
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，我们没有使用 `–g` 参数，因为我们只安装了捆绑文件夹中指定的本地 npm 软件包。
- en: 'Next, we will need to set the `PORT` and `MONGO_URL` export arguments so that
    Node knows how to host our application. Enter the following commands in the terminal
    window:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要设置 `PORT` 和 `MONGO_URL` 导出参数，以便 Node 知道如何托管我们的应用程序。在终端窗口中输入以下命令：
- en: '[PRE46]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: These two export commands tell your Node server what port to listen on, and
    where to find the `mongodb` hosted instance (we're using a local instance in this
    example).
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这两个导出命令告诉你的 Node 服务器要监听哪个端口，以及在哪里找到 `mongodb` 托管实例（在这个例子中我们使用的是本地实例）。
- en: 'You will also want to configure the `ROOT_URL` and `MAIL_URL` environment variables.
    The syntax to enter them is similar to the following export commands:'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还需要配置 `ROOT_URL` 和 `MAIL_URL` 环境变量。输入它们的语法类似于以下导出命令：
- en: '[PRE47]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, we can run our application. Instead of using the default `node` command,
    remember that we installed the npm `forever` package. The `forever` package allows
    us to run our Node application and will automatically restart it if we encounter
    an error. Run the following command in the terminal window:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以运行我们的应用程序。记住，我们安装了 npm 的 `forever` 包。`forever` 包允许我们运行 Node 应用程序，并在遇到错误时自动重启它。在终端窗口中运行以下命令：
- en: '[PRE48]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: This command instructs Node to start `main.js` as a node application, and to
    restart it if there are any issues.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令指示 Node 以节点应用程序的方式启动 `main.js`，并在出现任何问题时重启它。
- en: Tip
  id: totrans-338
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You can stop the application later on by issuing the following command from
    the `bundle/` directory:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过从 `bundle/` 目录发出以下命令来稍后停止应用程序：
- en: '[PRE49]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Now it's time to test whether your application is successfully running by opening
    a browser and pointing it to your host environment, on the port you specified,
    for example, if our production environment was hosting the `meteorapp.packtpub.com`
    subdomain, and we specify `port 8080`, as shown in the preceding example, we would
    navigate to `http://meteorapp.packtpub.com:8080` in a browser.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候通过打开浏览器并将它指向你指定的主机环境来测试你的应用程序是否成功运行了，例如，如果我们的生产环境托管了 `meteorapp.packtpub.com`
    子域名，并且我们指定 `端口 8080`，如前例所示，我们将在浏览器中导航到 `http://meteorapp.packtpub.com:8080`。
- en: Your app should be up and serving pages.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用程序应该已经启动并开始服务页面。
- en: How it works…
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Node is built to run as quickly as possible. To do so, it will run a little
    differently on different hardware and software configurations. This means that
    the Node and npm packages you use in your development environment (for example,
    on MAC OS X) are slightly different than the corresponding Node and npm packages
    in your production environment (for example, Linux Ubuntu 12.4 LTS Precise). This
    is especially true for foundational packages, such as the npm fibers package.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: Node 是为了尽可能快地运行而构建的。为了做到这一点，它会在不同的硬件和软件配置上以不同的方式运行。这意味着你在开发环境中使用的 Node 和 npm
    包（例如，在 MAC OS X 上）与生产环境中的相应 Node 和 npm 包（例如，Linux Ubuntu 12.4 LTS Precise）略有不同。这尤其适用于基础包，如
    npm 的 fibers 包。
- en: Also, although Meteor is built on top of Node, it isn't a native Node application.
    There are some additional layers of abstraction and processing that make your
    life easier as a developer, but they don't make for the prettiest native Node
    production environment.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，尽管 Meteor 是基于 Node 构建的，但它并不是一个原生 Node 应用程序。它增加了一些抽象层和处理层，这些层可以让你作为开发者更容易地生活，但它们并不构成最漂亮的原生
    Node 生产环境。
- en: The `meteor build` command takes care of this for us and creates a build without
    the npm packages installed. Instead, it lists any of the npm packages as dependencies.
    Because the specific npm packages aren't included (Meteor listed them in a package
    manifest file instead), there are no compatibility issues. We simply tell Node
    to find and install the packages specific to the current environment, using the
    package manifest file as a sort of a laundry list. We did this when we issued
    the `npm install` command.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '`meteor build` 命令会为我们处理这个问题，并创建一个不包含已安装 npm 包的构建。相反，它将任何 npm 包列为依赖项。由于具体的 npm
    包没有被包含在内（Meteor 在一个包清单文件中列出了它们），因此没有兼容性问题。我们只是简单地告诉 Node 使用包清单文件作为某种清单来查找和安装特定于当前环境的包。我们是在发出
    `npm install` 命令时这样做。'
- en: Once npm has read the manifest file, retrieved and installed all the needed
    packages, and informed us that the installation was completed correctly, we can
    run our new native Node application.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 npm 读取了清单文件，检索并安装了所有需要的包，并通知我们安装已正确完成，我们就可以运行我们的新原生 Node 应用程序。
- en: We then set some export variables (`PORT`, `MONGO_URL`, `ROOT_URL`, and `MAIL_URL`)
    and ran our application using the `forever` npm package, rather than the normal
    node command. Using `forever` helps us with not having to go back to the server
    every time it crashes. Ideally, we would never have an application crash, but
    we live in the real world, and `forever` is a huge time saver when an app restart
    is needed.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后设置了一些导出变量（`PORT`、`MONGO_URL`、`ROOT_URL` 和 `MAIL_URL`），并使用 `forever` npm
    包而不是正常的 node 命令来运行我们的应用程序。使用 `forever` 可以帮助我们不必每次服务器崩溃时都返回服务器。理想情况下，我们永远不会有一个应用程序崩溃，但我们生活在这个真实的世界中，当需要重启应用程序时，`forever`
    是一个巨大的时间节省者。
- en: There's more…
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多信息...
- en: If our application is truly production-ready, we also want it to start automatically
    whenever the server reboots. There are various ways to do this, depending on the
    operating system your production server is running on, and we won't cover all
    of them.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的应用程序真正准备好投入生产，我们也希望它在服务器重启时自动启动。这取决于你的生产服务器运行的操作系统的各种方法，我们不会涵盖所有这些方法。
- en: We will give an example script and instructions on how to do this on Ubuntu
    and let you modify the script as needed for other environments.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将提供一个示例脚本和如何在Ubuntu上执行此操作的说明，并让你根据需要修改脚本以适应其他环境。
- en: Whenever an Ubuntu server restarts, it runs any `*.conf scripts` script found
    in the `/etc/init/` folder. We'll assume that our application is located at `/home/meteorapps/prodapp/bundle/`,
    that we are going to listen on `port 8080`, and that we are using the local MongoDB
    service (feel free to adjust these settings as appropriate).
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 每当Ubuntu服务器重启时，它都会运行在`/etc/init/`文件夹中找到的任何`*.conf scripts`脚本。我们假设我们的应用程序位于`/home/meteorapps/prodapp/bundle/`，我们将监听`端口8080`，并且我们使用本地MongoDB服务（请根据需要调整这些设置）。
- en: 'Using a terminal window with `sudo` privileges, add the following `meteorapp.conf`
    script to `/etc/init/` to your production server:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 使用具有`sudo`权限的终端窗口，将以下`meteorapp.conf`脚本添加到生产服务器的`/etc/init/`：
- en: '[PRE50]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Let's break down what this script does.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下这个脚本做了什么。
- en: The first two lines (`start on` and `stop on`) tell the OS when to run this
    script. In this case, we run it as soon as the local file systems are ready, and
    we stop it as soon as a shutdown request comes in.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行（`start on`和`stop on`）告诉操作系统何时运行此脚本。在这种情况下，我们在本地文件系统准备好后立即运行它，并在收到关机请求后立即停止它。
- en: We then have our script that will be run. We navigate to our application folder
    using `cd /home/meteorapps/prodapp/bundle`.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有将要运行的脚本。我们使用`cd /home/meteorapps/prodapp/bundle`导航到我们的应用程序文件夹。
- en: Then, we declare the location of our MongoDB service and the port we would like
    the Node to listen on.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们声明我们的MongoDB服务位置和我们希望Node监听的端口。
- en: Finally, we execute the `forever` command, asking it to start `main.js` as a
    Node application.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们执行`forever`命令，要求它以Node应用程序启动`main.js`。
- en: The Meteor Group is currently working on a project called **Galaxy**, which
    will make deployment to custom servers as easy as deployment to their test servers.
    Once Galaxy is available, it will make this recipe obsolete, but that's a good
    thing! As mentioned, this recipe covers only one way of deploying to production.
    You may find another, easier method just by browsing [https://forums.meteor.com](https://forums.meteor.com)
    or visiting other sources for Meteor information.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor Group目前正在开发一个名为**Galaxy**的项目，它将使部署到自定义服务器变得与部署到测试服务器一样简单。一旦Galaxy可用，这个配方就会变得过时，但这是一件好事！如前所述，这个配方只涵盖了一种部署到生产环境的方法。你只需浏览[https://forums.meteor.com](https://forums.meteor.com)或访问其他Meteor信息来源，就可能找到另一种更简单的方法。
- en: See also
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Getting help with questions* recipe in this chapter
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章的*使用问题获取帮助*配方
- en: The *Deploying with Meteor Up (MUP)* recipe in this chapter
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章的*使用Meteor Up (MUP)部署*配方
- en: The *Deploying apps to mobile devices* recipe in [Chapter 12](part0088.xhtml#aid-2JTHG1
    "Chapter 12. Creating Useful Projects"), *Creating Useful Projects*
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第12章“创建有用的项目”中的*将应用部署到移动设备*配方，*创建有用的项目*
- en: Deploying with Meteor Up (MUP)
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Meteor Up (MUP)部署
- en: We would be remiss if we didn't add one final method of deploying Meteor apps
    to a production server. This method is called **Meteor Up** (**MUP**). Using a
    fairly simple configuration file, MUP vastly simplifies the server deployment
    process. And until we get to see what Galaxy (Meteor's deployment platform) looks
    like, MUP is the easiest way to deploy to a custom environment. This recipe will
    show you how to deploy your app to a custom server using Meteor Up.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有添加一种将Meteor应用部署到生产服务器的最终方法，那将是我们的疏忽。这种方法被称为**Meteor Up**（**MUP**）。使用一个相当简单的配置文件，MUP极大地简化了服务器部署过程。在我们看到Galaxy（Meteor的部署平台）的样子之前，MUP是部署到自定义环境的最简单方式。这个配方将向你展示如何使用Meteor
    Up将你的应用部署到自定义服务器。
- en: Getting ready
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need a working Meteor application. It doesn't
    need to be fancy, but it does need to be functional so you can see whether it
    was installed properly on your server at a glance.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个配方，你需要一个可工作的Meteor应用程序。它不需要很复杂，但确实需要是功能性的，这样你就可以一眼看出它是否已经正确安装在你的服务器上。
- en: How to do it…
  id: totrans-369
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'MUP is installed via npm. It needs to be installed globally, so we will use
    the `-g` argument. To deploy your app to a custom server using MUP, perform the
    following steps:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: MUP 通过 npm 安装。它需要全局安装，因此我们将使用 `-g` 参数。要使用 MUP 将您的应用程序部署到自定义服务器，请执行以下步骤：
- en: 'To install MUP, open a terminal window and execute the following command:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装 MUP，打开一个终端窗口并执行以下命令：
- en: '[PRE51]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: This will take a bit to install, but once complete, you'll be ready to configure
    and use MUP to deploy your application.
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将需要一些时间来安装，但一旦完成，您就可以配置和使用 MUP 来部署您的应用程序。
- en: 'To run `mup init`, navigate to the root folder of your project in a terminal
    window and enter the following command:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行 `mup init`，在终端窗口中导航到您的项目根目录并输入以下命令：
- en: '[PRE52]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'You will receive a message similar to the following:'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将收到类似以下的消息：
- en: '[PRE53]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: This process will create two files in your project's root folder. We don't need
    to worry about the first file (`settings.json`). We will configure our app using
    the second file, named `mup.json`.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此过程将在您的项目根目录中创建两个文件。我们不需要担心第一个文件（`settings.json`）。我们将使用第二个文件，命名为 `mup.json`
    来配置我们的应用程序。
- en: 'Now, we''ll configure `mup.json`. Open the `[project root]/mup.json` file in
    an editor. The top part of the file will have our remote server information. It
    should look similar to the following lines of code:'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将配置 `mup.json`。在编辑器中打开 `[项目根目录]/mup.json` 文件。文件的顶部将包含我们的远程服务器信息。它应该类似于以下代码行：
- en: '[PRE54]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The `host` property will be the name of the server you will be accessing via
    SSH/SCP. If our server name was `my-production-server.com`, the host property
    would look similar to the following:'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`host` 属性将是您将通过 SSH/SCP 访问的服务器名称。如果我们的服务器名称是 `my-production-server.com`，则主机属性将类似于以下内容：'
- en: '[PRE55]'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The `username` and `password` properties are the user/pass combination you would
    use if you were to `ssh` into the remote server.
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`username` 和 `password` 属性是如果您要 `ssh` 登录远程服务器时将使用的用户/密码组合。'
- en: 'The next four properties help us to configure our server. If we want MUP to
    install Mongo, Node, or PhantomJS (all necessary to deploy via MUP), we can specify
    the code as follows:'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下面的四个属性帮助我们配置服务器。如果我们想让 MUP 安装 Mongo、Node 或 PhantomJS（所有这些都是通过 MUP 部署所必需的），我们可以指定如下代码：
- en: '[PRE56]'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Tip
  id: totrans-386
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: As of the printing of this book, the latest stable Node version is `0.10.33`.
    You may want to check this and modify the `nodeVersion` property as appropriate.
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 就本书的印刷而言，最新的稳定 Node 版本是 `0.10.33`。您可能想检查这一点并相应地修改 `nodeVersion` 属性。
- en: If Mongo/Node/PhantomJS is already installed, you can change the preceding properties
    to `false` (which will speed up your deployment).
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 Mongo/Node/PhantomJS 已经安装，您可以将前面的属性更改为 `false`（这将加快您的部署速度）。
- en: 'Next, we specify specify what we want our app to be called. This is done by
    modifying the `appName` property:'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，我们指定我们想要我们的应用程序被称为什么。这是通过修改 `appName` 属性来完成的：
- en: '[PRE57]'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'We need to specify the folder on our local machine where our to-be-deployed
    app is located. This is determined in the `app` property:'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们需要指定我们本地机器上即将部署的应用程序所在的文件夹。这由 `app` 属性确定：
- en: '[PRE58]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The last property we need to set is `env`. This instructs Node which `ROOT_URL`
    and `PORT` to run our Meteor application from. If, for example, we were redirecting
    incoming HTTP traffic to a localhost, on `port 1337` (which is done using a reverse-proxy,
    such as `nginx`, or a virtual host, such as `apache`), our `env` configuration
    would look like the following code:'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们需要设置的最后一个属性是 `env`。这指示 Node 从哪个 `ROOT_URL` 和 `PORT` 运行我们的 Meteor 应用程序。例如，如果我们正在将传入的
    HTTP 流量重定向到本地的 `port 1337`（这是通过反向代理，如 `nginx`，或虚拟主机，如 `apache` 来完成的），我们的 `env`
    配置将类似于以下代码：
- en: '[PRE59]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Now let''s configure our remote server with `mup setup`. In the terminal window,
    navigate to your project''s root folder and enter the following command:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `mup setup` 来配置我们的远程服务器。在终端窗口中，导航到您的项目根目录并输入以下命令：
- en: '[PRE60]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: This will install MongoDB, Node, and PhantomJS on the remote server. It will
    also configure our remote server environment and install some helper npm packages,
    such as `upstart`.
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在远程服务器上安装 MongoDB、Node 和 PhantomJS。它还将配置我们的远程服务器环境并安装一些辅助 npm 包，例如 `upstart`。
- en: 'Let''s deploy our app with `mup deploy`. Once the `mup setup` command is complete,
    we''ll be ready to deploy our app. Execute the following command in the terminal
    window:'
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用 `mup deploy` 来部署我们的应用程序。一旦 `mup setup` 命令完成，我们就可以准备部署我们的应用程序。在终端窗口中执行以下命令：
- en: '[PRE61]'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: MUP will bundle your app locally, upload the build, configure the requisite
    npm packages on the remote server, and then serve up your app. As it runs through
    this process, MUP will give you status updates in the terminal.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: MUP 会将您的应用程序本地打包，上传构建，在远程服务器上配置必要的 npm 包，然后提供您的应用程序。在这个过程中，MUP 将在终端中提供状态更新。
- en: Once complete, your app should be up and running. Test it out by either visiting
    your external URL (for example, `http://my-custom-server.com`) or by logging in
    to a remote server via `SSH`, and testing the build with a `curl` command on the
    localhost (for example, `curl http://localhost:3000`).
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您的应用程序应该已经启动并运行。您可以通过访问外部 URL（例如，`http://my-custom-server.com`）或通过 `SSH`
    登录到远程服务器，并在本地主机上使用 `curl` 命令测试构建（例如，`curl http://localhost:3000`）来测试它。
- en: You may have a bit of troubleshooting to do to make sure your virtual host or
    reverse-proxy is configured properly, but after some small adjustments, you'll
    find that, at present, MUP is definitely the best way to deploy to a custom server.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要进行一些故障排除，以确保您的虚拟主机或反向代理配置正确，但经过一些小的调整后，您会发现，目前 MUP 无疑是部署到自定义服务器的最佳方式。
- en: How it works…
  id: totrans-403
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: MUP takes all the steps we would normally have to implement manually (as in
    the *Deploying to a custom hosted environment* recipe in this chapter) and implements
    them automatically. There are three main parts to pulling this off successfully.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: MUP 执行我们通常需要手动实施的步骤（如本章中 *部署到自定义托管环境* 的食谱），并自动实现它们。成功执行此操作有三个主要部分。
- en: First, MUP creates a default configuration file when we execute the `mup init`
    command. We edit the newly created file with all the settings to install the right
    software on the remote server, configure environment variables, and upload our
    production build.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，当我们执行 `mup init` 命令时，MUP 会创建一个默认配置文件。我们使用所有设置编辑新创建的文件，以便在远程服务器上安装正确的软件，配置环境变量，并上传我们的生产构建。
- en: Second, we use `mup install` to install all the needed software on the remote
    server, as specified in the `mup.json` configuration file.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们使用 `mup install` 命令在远程服务器上安装所有需要的软件，这些软件在 `mup.json` 配置文件中已指定。
- en: Lastly, our application is bundled, uploaded, extracted, initialized with environment
    variables, and set to run on the remote server. This is all accomplished with
    the `mup deploy` command.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的应用程序被打包、上传、解压，使用环境变量初始化，并设置为在远程服务器上运行。这一切都是通过 `mup deploy` 命令完成的。
- en: MUP performs these tasks based on the configuration file we edited.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: MUP 根据我们编辑的配置文件执行这些任务。
- en: Tip
  id: totrans-409
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: There are many additional settings we can configure and some great features
    of MUP that we can explore by visiting the MUP repo, which is found at [https://github.com/arunoda/meteor-up](https://github.com/arunoda/meteor-up).
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以配置许多额外的设置，并且可以通过访问 MUP 仓库来探索 MUP 的许多优秀功能，MUP 仓库位于 [https://github.com/arunoda/meteor-up](https://github.com/arunoda/meteor-up)。
- en: See also
  id: totrans-411
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Deploying to a custom hosted environment* recipe in this chapter
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中 *部署到自定义托管环境* 的食谱
- en: Using CoffeeScript
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CoffeeScript
- en: Many people prefer CoffeeScript to the standard JavaScript syntax. If you are
    one of those people with a preference, Meteor has you covered. This recipe will
    show you how to quickly enable CoffeeScript in your development environment.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人更喜欢 CoffeeScript 而不是标准的 JavaScript 语法。如果您是这些人中的一员，并且有偏好，Meteor 会满足您的需求。这个食谱将向您展示如何快速在您的开发环境中启用
    CoffeeScript。
- en: Getting ready
  id: totrans-415
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Nothing is needed to prepare for this recipe, other than having Meteor installed,
    and a project created so that you can begin using CoffeeScript.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 除了安装 Meteor 和创建一个项目以便开始使用 CoffeeScript 之外，无需为这个食谱做任何准备。
- en: How to do it…
  id: totrans-417
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To use CoffeeScript, proceed with the following steps:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 CoffeeScript，请按照以下步骤操作：
- en: Open a terminal window and navigate to the root folder of your project.
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端窗口并导航到您的项目根目录。
- en: 'Enter the following command:'
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE62]'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'You should see the following response in the terminal window:'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该在终端窗口中看到以下响应：
- en: '[PRE63]'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: CoffeeScript is now installed and ready to go!
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CoffeeScript 现已安装并准备就绪！
- en: You can test the installation by creating a `.coffee` file and adding a script
    (for example, add `test.coffee` to your `client` folder). When you start your
    Meteor application with the `meteor` command, the script should execute as designed.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过创建一个 `.coffee` 文件并添加一个脚本（例如，将 `test.coffee` 添加到您的 `client` 文件夹）来测试安装。当您使用
    `meteor` 命令启动您的 Meteor 应用程序时，脚本应该按预期执行。
- en: Tip
  id: totrans-426
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You can uninstall CoffeeScript easily. Simply execute the following terminal
    command:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以轻松地卸载CoffeeScript。只需执行以下终端命令：
- en: '[PRE64]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: How it works…
  id: totrans-429
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Behind the scenes, the CoffeeScript package you just installed looks for any
    and all `*.coffee` and `*.litcoffee` files, compiles them into native JavaScript,
    and then bundles them for use in your running Meteor application.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，你刚刚安装的CoffeeScript包会寻找任何`*.coffee`和`*.litcoffee`文件，将它们编译成原生JavaScript，然后打包供你的运行中的Meteor应用程序使用。
- en: Note
  id: totrans-431
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As with all other files in a running Meteor application, changes to your CoffeeScript
    are immediately processed.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在运行中的Meteor应用程序中的所有其他文件一样，你的CoffeeScript更改将立即被处理。
- en: See also
  id: totrans-433
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关链接
- en: The *Adding Meteor packages* recipe in [Chapter 2](part0028.xhtml#aid-QMFO1
    "Chapter 2. Customizing with Packages"), *Customizing with Packages*
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第2章](part0028.xhtml#aid-QMFO1 "第2章。使用包进行自定义")的*添加Meteor包*食谱中，*使用包进行自定义*
- en: Using CSS compilers
  id: totrans-435
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用CSS编译器
- en: As any CSS junkie already knows, using standard CSS to create style sheets can
    be tedious, redundant work. Many designers and developers prefer to use a dynamic
    style sheet language or preprocessors, such as Less, Stylus, and SCSS/SASS.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 任何CSS爱好者都知道，使用标准CSS创建样式表可能是繁琐且重复的工作。许多设计师和开发者更喜欢使用动态样式表语言或预处理器，例如Less、Stylus和SCSS/SASS。
- en: Meteor not only enables the use of preprocessors, but also treats them just
    like any other file so that changes are reflected immediately.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: Meteor不仅使预处理器可用，而且将它们视为任何其他文件，以便更改能够立即反映出来。
- en: This recipe will show you how to enable some of the more popular CSS compilers
    in your Meteor application.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱将向你展示如何在你的Meteor应用程序中启用一些更流行的CSS编译器。
- en: Getting ready
  id: totrans-439
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Nothing is needed to prepare for this recipe, other than having Meteor installed,
    and a project created so that you can begin using CSS compilers.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 除了安装Meteor和创建一个项目以便你可以开始使用CSS编译器之外，无需为这个食谱做任何准备。
- en: How to do it…
  id: totrans-441
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We're going to cover three different preprocessors, as they all work in a similar
    way.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将介绍三种不同的预处理器，因为它们都以类似的方式工作。
- en: Using Stylus
  id: totrans-443
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Stylus
- en: Open a terminal window and navigate to the root folder of your project.
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口并导航到你的项目根目录。
- en: 'Enter the following command:'
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE65]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'You should see a response similar to the following in the terminal window:'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该在终端窗口中看到类似的响应：
- en: '[PRE66]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Stylus is now installed and ready to be used. You can test this by creating
    a `.styl` file and adding a script (for example, add `test.styl` to your `client/styles`
    folder).
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Stylus现在已安装并准备好使用。你可以通过创建一个`.styl`文件并添加一个脚本（例如，将`test.styl`添加到你的`client/styles`文件夹）来测试这一点。
- en: When you start your Meteor application with the `meteor` command, Stylus files
    will be processed and proper CSS will be rendered.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`meteor`命令启动你的Meteor应用程序时，Stylus文件将被处理，并渲染适当的CSS。
- en: Tip
  id: totrans-451
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can use the `nib` code in Meteor as well. Just add `@import 'nib'` to your
    `.styl` files, and Meteor takes care of the rest.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在Meteor中使用`nib`代码。只需将`@import 'nib'`添加到你的`.styl`文件中，Meteor就会处理其余部分。
- en: Using Less
  id: totrans-453
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Less
- en: Open a terminal window and navigate to the root folder of your project.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口并导航到你的项目根目录。
- en: 'Enter the following command:'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE67]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'You should see the following response in the terminal window:'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该在终端窗口中看到以下响应：
- en: '[PRE68]'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Now the Less package is installed, and you can use the Less stylesheet syntax
    to create your CSS.
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在Less包已安装，你可以使用Less样式表语法来创建你的CSS。
- en: As with Stylus, you can test this by creating a `.less` file and adding some
    style declarations (for example, add `test.less` to your `client/styles` folder).
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Stylus一样，你可以通过创建一个`.less`文件并添加一些样式声明（例如，将`test.less`添加到你的`client/styles`文件夹）来测试这一点。
- en: When you start your Meteor application with the `meteor` command, the Less files
    will be compiled by Meteor into standard CSS and rendered as usual.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`meteor`命令启动你的Meteor应用程序时，Less文件将被Meteor编译成标准CSS并按常规渲染。
- en: Tip
  id: totrans-462
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you're fond of using `@import` statements in your Less stylesheets, make
    sure you use the `.lessimport` extension. Otherwise, Meteor will automatically
    import and compile any and all `.less` files it can find.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢在你的Less样式表中使用`@import`语句，请确保使用`.lessimport`扩展名。否则，Meteor将自动导入和编译它找到的任何`.less`文件。
- en: Using SCSS / SASS
  id: totrans-464
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用SCSS / SASS
- en: Open a terminal window and navigate to the root folder of your project.
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口并导航到你的项目根目录。
- en: 'Enter the following command:'
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE69]'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'You should see a response similar to the following in the terminal window:'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该在终端窗口中看到类似的响应：
- en: '[PRE70]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: SCSS and SASS files can now be used to style your CSS. Just as before, you can
    test this by creating a `.scss` or `.sass` file and adding some style declarations
    (for example, add `test.sass` to your `client/styles` folder).
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用 SCSS 和 SASS 文件来设置你的 CSS 样式。就像之前一样，你可以通过创建一个 `.scss` 或 `.sass` 文件并添加一些样式声明（例如，将
    `test.sass` 添加到你的 `client/styles` 文件夹中）来测试这一点。
- en: When you start your Meteor application with the `meteor` command, the SCSS or
    SASS files will be compiled by Meteor into standard CSS and rendered.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 `meteor` 命令启动你的 Meteor 应用程序时，SCSS 或 SASS 文件将被 Meteor 编译成标准 CSS 并渲染。
- en: How it works…
  id: totrans-472
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you installed any of the preprocessors with the `meteor add` command, it
    installed the corresponding npm packages tailored to work inside of Meteor.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 `meteor add` 命令安装任何预处理程序时，它会安装相应的 npm 包，以便在 Meteor 内部工作。
- en: As with other files, Meteor will monitor changes to any `*.styl`, `.less`, `.scss`,
    and `.sass` files, compile the changes into CSS, and render the changes immediately.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他文件一样，Meteor 会监控任何 `*.styl`、`.less`、`.scss` 和 `.sass` 文件的更改，将更改编译成 CSS，并立即渲染更改。
- en: See also
  id: totrans-475
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adding Meteor packages* recipe in [Chapter 2](part0028.xhtml#aid-QMFO1
    "Chapter 2. Customizing with Packages"), *Customizing with Packages*
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第 2 章](part0028.xhtml#aid-QMFO1 "第 2 章。使用包进行自定义")的 *添加 Meteor 包* 菜单中，*使用包进行自定义*
