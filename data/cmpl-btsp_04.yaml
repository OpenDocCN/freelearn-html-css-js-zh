- en: Preformatted text
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预格式化文本
- en: This typography style is used for displaying blocks of code on a website using
    the `<pre>` tag. Like the previous components, its `top-margin` has been removed
    and it has a `bottom margin` of `1rem`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这种排版样式用于在网站上使用 `<pre>` 标签显示代码块。像之前的组件一样，它的 `top-margin` 已被移除，并且有一个 `bottom margin`
    为 `1rem`。
- en: Tables
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格
- en: The table component has been adjusted slightly to ensure consistent text alignment
    in all cells. The styles for the `<caption>` tag have also been adjusted a bit
    for better legibility.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 表格组件已稍作调整，以确保所有单元格中的文本对齐一致。`<caption>` 标签的样式也进行了轻微调整，以提高可读性。
- en: Forms
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单
- en: 'The form component is much simpler in Bootstrap 4\. Much of the default styling
    has been removed to make the component easier to use and customize. Here are some
    of the highlights you should be aware of:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 中的表单组件要简单得多。大多数默认样式已被移除，以便组件更容易使用和自定义。以下是您应该注意的一些亮点：
- en: Most of the styles have been removed on the `<fieldset>` tag. The borders, padding,
    and margin are no longer there.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<fieldset>` 标签上的大多数样式都已移除。边框、填充和边距不再存在。'
- en: The `<legend>` tag has been simplified and is much more minimal in look now.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<legend>` 标签已被简化，现在看起来更加简约。'
- en: 'The `<label>` tag is now set to `display: inline-block` to allow margins to
    be added.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<label>` 标签现在设置为 `display: inline-block` 以允许添加边距。'
- en: 'Default margins have been removed from the following tags: `<input>`, `<select>`,
    `<textarea>`, and `<button>`.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从以下标签中移除了默认边距：`<input>`、`<select>`、`<textarea>` 和 `<button>`。
- en: '`<textarea>`s can now only be resized vertically. They can''t be resized horizontally,
    which often breaks page layouts.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<textarea>` 现在只能垂直调整大小。它们不能水平调整大小，这通常会破坏页面布局。'
- en: That covers the key elements you need to be aware of with Reboot. If you're
    interested in learning more, please check out the docs at [http://v4-alpha.getbootstrap.com/content/reboot/](http://v4-alpha.getbootstrap.com/content/reboot/)
    .
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这就涵盖了您需要了解的 Reboot 的关键元素。如果您想了解更多，请查看[http://v4-alpha.getbootstrap.com/content/reboot/](http://v4-alpha.getbootstrap.com/content/reboot/)
    上的文档。
- en: Now that we've reviewed the Reboot CSS reset, it's time to actually start covering
    the content components and adding them to our blog project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了 Reboot CSS 重置，是时候真正开始介绍内容组件并将它们添加到我们的博客项目中。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Content classes in Bootstrap 4 are not that different from version 3\. If you
    are fluent in Bootstrap 3, you may want to jump ahead to the next chapter at this
    point.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 中的内容类与版本 3 并没有太大不同。如果您精通 Bootstrap 3，您可能想在这个时候跳到下一章。
- en: Learning to use typography
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习使用排版
- en: In Bootstrap 4, there are no major changes with the core typographic HTML tags.
    Header tags and their supporting CSS classes still work as they always have. However,
    there are some new utility classes you can use with some type tags to provide
    further variations for things like headers and titles. Later on in the book we'll
    be using a number of type tags and styles in our blog project. A couple of quick
    examples would be header tags for page and post titles, and lists for a number
    of different components. Let's start by reviewing the new display heading classes
    in Bootstrap 4.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Bootstrap 4 中，核心排版 HTML 标签没有发生重大变化。标题标签及其支持的 CSS 类仍然像以前一样工作。然而，有一些新的实用类可以与某些类型标签一起使用，以提供更多变体，例如标题和标题。在本书的后面部分，我们将使用许多类型标签和样式在我们的博客项目中。一些快速示例包括用于页面和帖子标题的标题标签，以及用于多个不同组件的列表。让我们首先回顾
    Bootstrap 4 中的新显示标题类。
- en: Using display headings
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用显示标题
- en: 'Regular header tags work great in the flow of a page and are key for setting
    up the hierarchy of an article. For a landing page or other display-type templates,
    you may require additional header styles. This is where you can use the new display
    heading classes to create slightly larger titles with some different styling.
    There are four different levels of display headings you can use and the markups
    to render them are as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 正规的标题标签在页面流中表现良好，对于设置文章的层次结构至关重要。对于着陆页或其他显示类型模板，您可能需要额外的标题样式。这就是您可以使用新的显示标题类来创建稍微大一点的标题并应用一些不同样式的时刻。您可以使用四种不同的显示标题级别，它们的标记如下：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Keep in mind you can apply these classes to any header tag you like. `display-1`
    will be the largest and the headers will shrink as you increase their size. For
    example, `display-4` would be the smallest of the options. Here''s what the headers
    will look like when rendered in the browser:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你可以将这些类应用到任何你喜欢的标题标签上。`display-1` 将是最大的，随着你增加大小，标题会缩小。例如，`display-4` 将是选项中最小的。以下是浏览器中渲染的标题外观：
- en: '![Using display headings](img/00033.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![使用 display 标题](img/00033.jpeg)'
- en: Keep in mind, you can apply these classes to any header tag you like. `display-1`
    will be the largest and the headers will shrink as you increase their size. For
    example, `display-4` would be the smallest of the options.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你可以将这些类应用到任何你喜欢的标题标签上。`display-1` 将是最大的，随着你增加大小，标题会缩小。例如，`display-4` 将是选项中最小的。
- en: Customizing headings
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义标题
- en: 'You may want to add some additional context to your headers and you can easily
    do this with some included Bootstrap 4 utility classes. By using a contextual
    text class, you can tag on a description to a heading like this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想要给你的标题添加一些额外的上下文，你可以很容易地使用一些包含的 Bootstrap 4 实用类来实现这一点。通过使用上下文文本类，你可以将描述添加到标题，如下所示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you can see, I''ve added a class of `text-muted` to a `<small>` tag that
    is nested within my header tag. This will style the descriptive part of the text
    a bit differently, which creates a nice looking effect:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我在我的标题标签内嵌套了一个 `<small>` 标签，并添加了一个 `text-muted` 类。这将使文本的描述部分看起来略有不同，从而创建一个很好的视觉效果：
- en: '![Customizing headings](img/00034.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![自定义标题](img/00034.jpeg)'
- en: Using the lead class
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 lead 类
- en: 'Another utility text class that has been added to Bootstrap 4 is the `lead`
    class. This class is used if you want to make a paragraph of text stand out. It
    will increase the font size by 25% and set the font-weight of the text to light
    or 300\. It''s easy to add, as the following code shows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 中新增的一个实用文本类是 `lead` 类。当你想要使一段文本突出显示时，可以使用这个类。它将字体大小增加 25%，并将文本的字体粗细设置为轻或
    300。添加它非常简单，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output of the preceding code will look like this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的输出将看起来像这样：
- en: '![Using the lead class](img/00035.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用 lead 类](img/00035.jpeg)'
- en: As you can see, this gives the text a unique look. This would be good to use
    as the first paragraph in a blog post or perhaps to call out some text at the
    top of a landing page.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这给文本带来了一种独特的样式。这可以用作博客文章的第一段或可能在着陆页顶部突出显示文本。
- en: Working with lists
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用列表
- en: Bootstrap 4 comes with a number of list options out of the box. These CSS classes
    can be applied to the `<ul>`, `<ol>`, or `<dl>` tags to generate some styling.
    Let's start with the unstyled list.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 默认提供了一系列列表选项。这些 CSS 类可以应用于 `<ul>`、`<ol>` 或 `<dl>` 标签以生成一些样式。让我们从无样式列表开始。
- en: Coding an unstyled list
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写无样式的列表
- en: 'In some cases, you may want to remove the default bullets or numbers that come
    with ordered or unordered lists. This can be useful when creating a navigation,
    or perhaps you just want to create a list of items without bullet points. You
    can do this by using the `list-unstyled` class on the wrapping list tag. Here''s
    an example of a basic unstyled, unordered list:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你可能想要移除有序或无序列表默认的子弹或数字。当创建导航或可能只是想要创建一个不带项目符号的项目列表时，这可能很有用。你可以通过在包装列表标签上使用
    `list-unstyled` 类来实现这一点。以下是一个基本的无样式无序列表的示例：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will produce a list with no bullet points that will look like this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成一个没有项目符号的列表，看起来如下所示：
- en: '![Coding an unstyled list](img/00036.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![编写无样式的列表](img/00036.jpeg)'
- en: 'We can also nest additional lists inside if we want to create multi-level,
    indented lists. However, keep in mind that the `list-unstyled` class will only
    work on the first level of your list. Any nested additional lists will have their
    bullets or numbers. The code for this variation would look something like this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要创建多级缩进列表，我们还可以在内部嵌套额外的列表。然而，请注意，`list-unstyled` 类只适用于列表的第一级。任何嵌套的额外列表都将有它们的项目符号或数字。这种变化的代码可能看起来像这样：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The preceding variation will look like the following output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 上述变化将看起来如下所示：
- en: '![Coding an unstyled list](img/00037.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![编写无样式的列表](img/00037.jpeg)'
- en: Now, if we check out this code sample in a browser, you'll notice you will see
    the bullet points for the child list that is nested within the parent.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们在一个浏览器中查看这个代码示例，你会注意到你将看到嵌套在父列表中的子列表的项目符号。
- en: Creating inline lists
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建内联列表
- en: 'The unstyled list is probably the one you will use the most. The next most
    useful class is `list-inline`, which will line up each `<li>` in a horizontal
    line. This is very useful for creating navigations or sub-navigations in a website
    or application. The code for this list is almost the same as the last, but we
    change the class name to `list-inline`. We also need to add a class of `list-inline-item`
    to each `<li>` tag. This is a new change for Bootstrap 4, so make sure you don''t
    miss it in the following code:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 无样式列表可能是你用得最多的一个。下一个最有用的类是 `list-inline`，它将每个 `<li>` 排成一行。这对于在网站或应用程序中创建导航或子导航非常有用。这个列表的代码几乎与上一个相同，但我们将其类名更改为
    `list-inline`。我们还需要为每个 `<li>` 标签添加一个 `list-inline-item` 类。这是 Bootstrap 4 的一个新变化，所以请确保在以下代码中不要错过它：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As I mentioned, the code is similar to the unstyled list, with a few changes.
    Here''s what it will look like when rendered in the browser:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如我所述，代码与无样式列表类似，但有一些变化。以下是它在浏览器中渲染后的样子：
- en: '![Creating inline lists](img/00038.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![创建内联列表](img/00038.jpeg)'
- en: I think you can see how this would be a lightweight way to set up a horizontal
    navigation for your project. Let's move onto the last list type, which is a description
    list.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为你可以看到这将为你的项目设置水平导航提供一种轻量级的方式。让我们继续到最后一种列表类型，即描述列表。
- en: Using description lists
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用描述列表
- en: 'A description list allows you to create a horizontal display for terms and
    descriptions. Let''s take a look at a basic list''s code and then break it down:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 描述列表允许你为术语和描述创建水平显示。让我们看看一个基本列表的代码，然后对其进行分解：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There are a few things going on here that you need to be aware of, so let me
    break them all down for you:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些你需要注意的事情，让我为你一一解释：
- en: First you start a description list using the `<dl>` tag. It requires a class
    of `dl-horizontal` to trigger the list component styles.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，你使用 `<dl>` 标签开始一个描述列表。它需要一个 `dl-horizontal` 类来触发列表组件样式。
- en: Each row is made up of a `<dt>` and `<dd>` tag. `<dt>` stands for term, while
    `<dd>` stands for description. Each tag should take a column class and is flexible,
    depending on how you want to lay out your list.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每一行由一个 `<dt>` 和 `<dd>` 标签组成。`<dt>` 代表术语，而 `<dd>` 代表描述。每个标签都应该有一个列类，并且是灵活的，具体取决于你如何布局你的列表。
- en: On the third row, you'll notice a class called `text-truncate`. This class will
    truncate really long terms or text so they don't run outside the width of the
    column. This is a good technique to use for long chunks of text.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第三行，你会注意到一个名为 `text-truncate` 的类。这个类将截断非常长的术语或文本，以免它们超出列的宽度。这对于长文本块来说是一个很好的技术。
- en: 'Now that I''ve explained all the code for the description list, let''s see
    what this sample should look like in the browser:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我已经解释了描述列表的所有代码，让我们看看这个示例在浏览器中的样子：
- en: '![Using description lists](img/00039.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![使用描述列表](img/00039.jpeg)'
- en: That completes the typography styles that you need to know about in Bootstrap
    4\. Next, let me teach you what you can do with images in Bootstrap.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了你在 Bootstrap 4 中需要了解的所有排版样式。接下来，让我教你如何在 Bootstrap 中使用图像。
- en: How to style images
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何设置图像样式
- en: 'Bootstrap allows you to do a few useful things with images through the use
    of CSS classes. These things include: making images responsive, converting images
    to shapes, and aligning images. In the next section, I''ll show you how to apply
    all these techniques to your images.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 允许你通过使用 CSS 类来对图像进行一些有用的操作。这些操作包括：使图像响应式，将图像转换为形状，以及对齐图像。在下一节中，我将向你展示如何将这些技术应用到你的图像上。
- en: Making images responsive
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使图像响应式
- en: 'Bootstrap 4 comes with a new responsive image class that is super-handy when
    developing websites or web-based applications. When applying the class `img-fluid`
    to an `<img>` tag, it will automatically set the `max-width` of the image to `100%`
    and the `height` to `auto`. The result will be an image that scales with the size
    of the device viewport. Here''s what the code looks like:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 带来一个新的响应式图像类，当开发网站或基于 Web 的应用程序时非常方便。当将类 `img-fluid` 应用到 `<img>`
    标签上时，它将自动将图像的 `max-width` 设置为 `100%`，并将高度设置为 `auto`。结果将是一个根据设备视口大小缩放的图像。以下是代码的样子：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It''s as easy as adding that class to the image to trigger the responsive controls.
    A word of advice: I would recommend making your images a little bit bigger than
    the maximum size you think you will need. That way, the image will look good on
    all screen sizes.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像给图像添加那个类来触发响应式控制一样简单。一个建议：我建议将你的图像设置得比你认为需要的最大尺寸稍大一些。这样，图像将适合所有屏幕尺寸。
- en: Using image shapes
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用图像形状
- en: 'Bootstrap allows you to apply three different shape styles to images:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap允许你将三种不同的形状样式应用到图像上：
- en: '`img-rounded` will add round corners to your image'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-rounded`将为你的图像添加圆角'
- en: '`img-circle` will crop your image into a circle'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-circle`将裁剪你的图像成圆形'
- en: '`img-thumbnail` will add round corners and a border to make the image look
    like a thumbnail'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`img-thumbnail`将为图像添加圆角和边框，使其看起来像缩略图'
- en: 'As with the responsive images, all you need to do is add a single CSS class
    to the `<img>` tag to apply these styles. The reason you would want to use these
    classes is to avoid having to actually create these variations in an app such
    as Photoshop. It''s much easier to apply this simple image formatting using code.
    Here''s the code for each variation:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与响应式图像一样，你只需要在`<img>`标签中添加一个CSS类来应用这些样式。你想要使用这些类的原因是避免在像Photoshop这样的应用程序中实际创建这些变体。使用代码应用这种简单的图像格式要容易得多。以下是每个变体的代码：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once you''ve coded that up, it should look like this in the browser:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你编写了这些代码，在浏览器中应该看起来像这样：
- en: '![Using image shapes](img/00040.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![使用图像形状](img/00040.jpeg)'
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I'm using one of my own images here; you'll need to swap in an image in your
    code.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里使用的是我自己的图像；你需要在你的代码中替换图像。
- en: Aligning images with CSS
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用CSS对齐图像
- en: 'The final Bootstrap classes you can apply to images are the alignment classes.
    They will allow you to align your image to the left, right, or center of your
    layout. Like the previous examples, you only need to add a single CSS class to
    the `<img>` tag to apply the alignment you want. With left and right alignment,
    you can also provide a column size within the class name. The best policy would
    be to use the same size as the column the image is contained within. Therefore,
    if your image is displayed in a column with a class of `col-xs-4`, then use the
    `-xs` unit in the alignment class name. Here''s what the left and right alignment
    code looks like using the extra small size:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以应用到图像上的最后一个Bootstrap类是对齐类。它们将允许你将图像对齐到布局的左、右或中心。像之前的例子一样，你只需要在`<img>`标签中添加一个CSS类来应用你想要的对齐方式。对于左对齐和右对齐，你还可以在类名中提供列大小。最佳做法是使用与包含图像的列相同的尺寸。因此，如果你的图像显示在一个具有`col-xs-4`类的列中，那么在对齐类名中使用`-xs`单位。以下是使用额外小尺寸的左对齐和右对齐代码示例：
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Aligning images with CSS](img/00041.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用CSS对齐图像](img/00041.jpeg)'
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Aligning images with CSS](img/00042.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![使用CSS对齐图像](img/00042.jpeg)'
- en: 'The final image alignment class you can use is to center the image in the layout.
    The class name for this is a little bit different, as you can see here:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用最后一个图像对齐类来在布局中居中对齐图像。这个类的名字有点不同，就像你在这里看到的那样：
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Aligning images with CSS](img/00043.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![使用CSS对齐图像](img/00043.jpeg)'
- en: That concludes the section on image classes that you can use in your Bootstrap
    layouts. Next we will look at writing and rendering tables using Bootstrap 4.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了关于你可以在Bootstrap布局中使用图像类的部分。接下来，我们将探讨使用Bootstrap 4编写和渲染表格。
- en: Coding tables
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写表格
- en: Tables in Bootstrap 4 are largely unchanged from the previous version of the
    framework. However, there are a few new things, like inverse color table options
    and responsive tables. Let's start with the basics and we will build in the new
    features as we go.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4中的表格与框架的前一个版本基本没有变化。然而，有一些新功能，比如逆色表格选项和响应式表格。让我们从基础知识开始，并在过程中构建新功能。
- en: Setting up the basic table
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置基本表格
- en: 'The basic table structure in Bootstrap takes advantage of almost all the available
    HTML table tags. The header is wrapped in `<thead>` and the body `<tbody>` tags.
    This will allow additional styling as we get into the inverse table layout. For
    now, let''s see how we put together a basic table in Bootstrap:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的基本表格结构利用了几乎所有可用的HTML表格标签。表头被包裹在`<thead>`标签中，而主体被包裹在`<tbody>`标签中。这将允许我们在逆表格布局中添加额外的样式。现在，让我们看看如何在Bootstrap中组合一个基本表格：
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As you can see, the syntax is fairly straightforward. The only class being
    applied is the root `table` class on the `<table>` tag. This needs to be applied
    to any table variation you are using in Bootstrap. This will produce a table that
    looks like the following in the browser:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，语法相当简单。唯一应用的类是根`table`类，它应用在`<table>`标签上。这需要应用到你在Bootstrap中使用的任何表格变体上。这将产生一个在浏览器中看起来如下所示的表格：
- en: '![Setting up the basic table](img/00044.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![设置基本表格](img/00044.jpeg)'
- en: As you can see, the syntax is fairly straightforward. The only class being applied
    is the root `table` class on the `<table>` tag. This needs to be applied to any
    table variation you are using in Bootstrap.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，语法相当简单。唯一应用的类是`<table>`标签上的根`table`类。这需要应用于Bootstrap中您使用的任何表格变化。
- en: Inversing a table
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反转表格
- en: 'Let me quickly show you one of the new table classes in Bootstrap 4\. If we
    add the class `table-inverse` to the `<table>` tag, the table colors will flip
    to be a dark background with light text. Here''s the code you need to change:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我快速向您展示Bootstrap 4中的一个新表格类。如果我们将类`table-inverse`添加到`<table>`标签中，表格颜色将反转，背景为深色，文字为浅色。以下是您需要更改的代码：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This slight variation in code will produce a table that looks like this:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的轻微变化将生成如下所示的表格：
- en: '![Inversing a table](img/00045.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![反转表格](img/00045.jpeg)'
- en: That's a pretty handy trick to know if you need to get a quick variation of
    the basic table styles going.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要快速获取基本表格样式的变化，这是一个相当实用的技巧。
- en: Inversing the table header
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 反转表格标题
- en: 'Perhaps you don''t want to inverse the entire table? If that is the case, you
    can use the `thead-inverse` class on the `<thead>` tag to only inverse that row:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想反转整个表格，可以使用`thead-inverse`类在`<thead>`标签上仅反转该行：
- en: '[PRE14]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If this variation is applied, then your table will look like this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果应用了这个变化，那么您的表格将如下所示：
- en: '![Inversing the table header](img/00046.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![反转表格标题](img/00046.jpeg)'
- en: If you're looking for a more subtle design for your project, this approach may
    be more appealing to you.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在寻找一个更微妙的设计方案，这种方法可能更适合您。
- en: Adding striped rows
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加条纹行
- en: 'Although not new to Bootstrap 4, the `table-striped` class is one that I use
    all the time. Applying this class to the `<table>` tag will add zebra striping
    to your table, starting with the first row in the body and applying a light grey
    background color on all the odd numbered rows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是Bootstrap 4的新特性，但`table-striped`类是我经常使用的。将此类应用于`<table>`标签将为您的表格添加斑马条纹，从表体中的第一行开始，并在所有奇数行上应用浅灰色背景色：
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Using this class will produce a table that looks like this:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个类将生成如下所示的表格：
- en: '![Adding striped rows](img/00047.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![添加条纹行](img/00047.jpeg)'
- en: Now our table is starting to come together. With a few classes, we can get an
    attractive-looking layout. Let's see what else we can do with tables.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的表格开始成形。通过几个类，我们可以得到一个吸引人的布局。让我们看看我们还能用表格做什么。
- en: Adding borders to a table
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为表格添加边框
- en: 'Another style that is regularly used is to add borders to your table. This
    can be done in the same way as stripes. Just change or add another class to the
    `<table>` tab called `table-bordered`. For this example, I''ll remove the stripes
    and add the borders:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种经常使用的样式是为您的表格添加边框。这可以通过与条纹相同的方式进行。只需更改或添加另一个名为`table-bordered`的类到`<table>`标签中。在这个例子中，我将移除条纹并添加边框：
- en: '[PRE16]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now that we''ve added the borders and taken away the stripes, our table should
    look like this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经添加了边框并去掉了条纹，我们的表格应该如下所示：
- en: '[PRE17]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Adding borders to a table](img/00048.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![为表格添加边框](img/00048.jpeg)'
- en: It's important to know that you can combine the table classes and use more than
    one. What if you wanted a table with stripes and borders? You can do that easily,
    by including both of the corresponding classes.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要知道您可以组合表格类并使用多个。如果您想要一个带有条纹和边框的表格，可以轻松地通过包含这两个相应的类来实现。
- en: Adding a hover state to rows
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为行添加悬停状态
- en: 'It''s possible and easy to add a hover state to each of your table rows. To
    do so, you just need to add the `table-hover` class to the `<table>` tag. When
    used, if you hover over a row in the table, its background color will change to
    indicate a state change:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为您的每一行表格添加悬停状态是可能的且很容易。要做到这一点，您只需将`table-hover`类添加到`<table>`标签中。当使用时，如果鼠标悬停在表格的行上，其背景色将改变以指示状态变化：
- en: '[PRE18]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here I''ve removed the other table classes to show you the basic hover table
    option. When viewed in the browser, the table should look like the following when
    a row is hovered over with the mouse:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我移除了其他表格类以向您展示基本的悬停表格选项。在浏览器中查看时，当鼠标悬停在行上时，表格应如下所示：
- en: '![Adding a hover state to rows](img/00049.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![为行添加悬停状态](img/00049.jpeg)'
- en: 'In some cases you may require a table with smaller text and compressed height.
    This can be done by adding the `table-sm` class to the `<table>` tag. This will
    make the look of the table more compact when viewing it:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你可能需要一个具有较小文本和压缩高度的表格。这可以通过向`<table>`标签添加`table-sm`类来实现。这将使表格在查看时看起来更紧凑：
- en: '[PRE19]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If you choose to use this class, your table should look like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择使用这个类，你的表格应该看起来像这样：
- en: '![Adding a hover state to rows](img/00050.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![为行添加悬停状态](img/00050.jpeg)'
- en: Creating smaller tables
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 创建较小的表格
- en: That concludes the core table variations that you can apply through a simple
    CSS class. Before we move on, there are a couple more important points on tables
    that we should go over.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了你可以通过简单CSS类应用的核心表格变体。在我们继续之前，还有一些关于表格的重要点需要讨论。
- en: Color-coating table rows
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色涂层的表格行
- en: 'In some cases, you may want to color the background of a table row in a different
    color. This can easily be achieved through the use of some included contextual
    classes. There are five different color variations you can choose from:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你可能想要将表格行的背景颜色设置为不同的颜色。这可以通过使用一些包含的上下文类轻松实现。你可以选择五种不同的颜色变体：
- en: '`table-active` is the hover color, light grey by default'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-active` 是悬停颜色，默认为浅灰色'
- en: '`table-success` is green for a positive action'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-success` 用于正面操作，颜色为绿色'
- en: '`table-info` is blue for an informational highlight'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-info` 用于信息高亮，颜色为蓝色'
- en: '`table-warning` is yellow to call out something that needs attention'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-warning` 用于引起注意，颜色为黄色'
- en: '`table-danger` is red for a negative or error action'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-danger` 用于负面或错误操作，颜色为红色'
- en: 'The preceding classes can be applied to either a `<tr>` or `<td>` tag. If I
    apply all of these color variations to a single table, they look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的类可以应用于`<tr>`或`<td>`标签。如果我将这些颜色变体全部应用到单个表格上，它们看起来像这样：
- en: '![Color-coating table rows](img/00051.jpeg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![颜色涂层的表格行](img/00051.jpeg)'
- en: As you can see, these classes can be useful for validation or just highlighting
    a particular row that needs to stand out more.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这些类对于验证或突出显示需要更加突出的特定行非常有用。
- en: Making tables responsive
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使表格响应
- en: 'Adding responsiveness to tables has never been very easy to do with CSS. Thankfully,
    Bootstrap 4 comes with some support built right in that you can easily take advantage
    of. To make a table responsive, you simply need to wrap a `<div>` around your
    `<table>` that has a class of `table-responsive` on it:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CSS添加表格响应性从未容易过。幸运的是，Bootstrap 4内置了一些支持，你可以轻松利用。要使表格响应，你只需将一个带有`table-responsive`类的`<div>`包裹在你的`<table>`周围：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: If you view the table on a viewport that is smaller than 768px, then the table
    cells will scroll horizontally, so they can all be viewed. If the viewport is
    larger, you will see no difference in the table compared to a regular one.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个小于768px视口的视图中查看表格，那么表格单元格将水平滚动，这样就可以全部查看。如果视口更大，你将看到与常规表格相比没有差异。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'With tables finished off, that brings this chapter to a close. I hope this
    has been a good introduction to content components in Bootstrap, as well as a
    good review of what''s new for these types of components in Bootstrap 4\. To review,
    we learned about: Reboot, typography, images, and tables. In the next chapter,
    we''ll start to jump into some more complicated components and build them into
    our blog project.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 完成表格后，本章内容到此结束。希望这已经是一个很好的Bootstrap内容组件介绍，以及Bootstrap 4中这些类型组件的新功能的回顾。回顾一下，我们学习了：重置、排版、图片和表格。在下一章，我们将开始深入研究一些更复杂的组件，并将它们构建到我们的博客项目中。
- en: Assessments
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: What allowance does the description list provide the user?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 描述列表为用户提供什么允许？
- en: A description list allows the user to create a horizontal display for terms
    and descriptions
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 描述列表允许用户为术语和描述创建水平显示
- en: Allowance for creating navigations or sub-navigations in a website or application
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网站或应用程序中创建导航或子导航的允许
- en: When creating a navigation, or perhaps you just want to create a list of items
    without bullet points
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当创建导航，或者你可能只是想创建一个没有项目符号的项目列表
- en: None of the above
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上皆非
- en: What are the changes that takes place in an image when the img-fluid class is
    applied to `<img>` tag?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当将img-fluid类应用于`<img>`标签时，图像会发生哪些变化？
- en: It will automatically set the width to 100%
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会自动将宽度设置为100%
- en: It will set the height to auto
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会将高度设置为自动
- en: It will automatically set the max-width of the image to 100% and the height
    to auto
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将自动将图片的最大宽度设置为100%，高度自动调整
- en: None of the above
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: Which of the following is the shape style of images?
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个是图片的形状样式？
- en: '`img-border`'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`img-border`'
- en: '`img-thumbnail`'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`img-thumbnail`'
- en: '`img-pixel`'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`img-pixel`'
- en: '`img-round`'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`img-round`'
- en: What will the below snippet output?![Assessments](img/00052.jpeg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码片段将输出什么？![评估](img/00052.jpeg)
- en: It makes the table responsive
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它使表格具有响应性
- en: If you `hover` over a row in the table, its background color will change to
    indicate a state change
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你将鼠标悬停在表格的某一行上，其背景颜色将改变以指示状态变化
- en: Will add zebra striping to your table, starting with the first row in the body
    and applying a light grey `background color` on all the odd numbered rows
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将为你的表格添加斑马纹，从表格主体的第一行开始，并将所有奇数行的背景颜色设置为浅灰色
- en: The table colors will flip to be a dark background with light text
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表格颜色将反转，背景为深色，文字为浅色
- en: With left and right alignment, you can also provide a `column size` within the
    `class name`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左右对齐，你还可以在`class name`内提供`列大小`。
- en: 'True'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的
- en: 'False'
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不是
