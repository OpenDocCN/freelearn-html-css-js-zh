- en: Chapter 4. Creating Interactive Forms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 创建交互式表单
- en: In the previous chapter, you learned about many of the features of `GmailApp`
    and `ContactApp` and you built lots of real-world applications. In this chapter,
    you will learn how to create Forms programmatically using `FormApp` and `HtmlService`.
    Also, you will learn about the `doGet` and `doPost` functions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您学习了`GmailApp`和`ContactApp`的许多功能，并构建了许多实际应用。在本章中，您将学习如何使用`FormApp`和`HtmlService`编程创建表单。您还将了解`doGet`和`doPost`函数。
- en: Creating Forms using script
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚本创建表单
- en: 'In [Chapter 1](ch01.html "Chapter 1. Introducing Google Apps Scripts"), *Introducing
    Google Apps Scripts*, you created a Form manually, but this time we will create
    Forms programmatically by script. First of all, we will create a Form with four
    choices and an **Other** option choice. For simplicity, we add places as a multiple
    choice radio group. Each choice is exclusively selectable. Create the function
    `createForm` as shown here in a spreadsheet code file:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第一章](ch01.html "第一章 引入 Google Apps Scripts") *引入 Google Apps Scripts* 中，您手动创建了一个表单，但这次我们将通过脚本编程创建表单。首先，我们将创建一个包含四个选项和一个**其他**选项的表单。为了简单起见，我们将地点添加为多选单选组。每个选项只能单独选择。在电子表格代码文件中创建名为`createForm`的函数，如下所示：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `places` variable holds a few random places, and you can assign any place
    name and any number of places as an array of strings. The `create` method of `FormApp`
    class creates a form titled `Vacation Form` in your Drive''s root folder (`My
    Drive`). On running the function, the created Form will look like this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`places`变量包含一些随机地点，您可以将任何地点名称和任何数量的地点作为字符串数组分配。`FormApp`类的`create`方法在您的Google
    Drive根目录（`My Drive`）中创建一个名为“Vacation Form”的表单。运行函数后，创建的表单将如下所示：'
- en: '![Creating Forms using script](img/B05010_04_01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![使用脚本创建表单](img/B05010_04_01.jpg)'
- en: 'The choices are hardcoded in the code. If you would like to change any choice
    or add more choices, then you should edit the code to make the required changes.
    If you need to change the choices frequently, it might become irritating or hard
    to edit the code every time. Now we will add place names from spreadsheet''s data
    rather than them being hardcoded. Add or rename an existing sheet as `Places`
    and add a few place names in it as shown here:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 选项在代码中是硬编码的。如果您想更改任何选项或添加更多选项，那么您应该编辑代码以进行必要的更改。如果您需要频繁更改选项，可能会变得令人烦恼或难以每次都编辑代码。现在我们将从电子表格的数据中添加地名，而不是将它们硬编码。添加或重命名一个现有的工作表为“Places”，并在其中添加一些地名，如下所示：
- en: '![Creating Forms using script](img/B05010_04_02.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![使用脚本创建表单](img/B05010_04_02.jpg)'
- en: 'Now update the `createForm` function as shown here:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在更新`createForm`函数，如下所示：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding function will create a Form with the choices' text retrieved from
    the Sheet's data. The choices' text and/or number of choices can be varied as
    per your Sheet's data. If you would like to make any changes in the choices' text,
    then it is enough to edit the Sheet's data, and you do not need to edit the code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的函数将创建一个表单，其选项文本是从工作表的数据中检索的。选项文本和/或选项数量可以根据您的工作表数据进行调整。如果您想更改选项文本，那么只需编辑工作表数据即可，您不需要编辑代码。
- en: 'When you run the function just mentioned, it will create a Form named `Vacation
    Form` in the `My Drive` folder. To open the Form in edit mode, double-click or
    right-click (context click) on Form name and go to **Open with** | **Google Forms**.
    The following screenshot shows what the Form would look like in edit mode. You
    can make any adjustments and/or perform formatting in edit mode:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行前面提到的函数时，它将在`My Drive`文件夹中创建一个名为`Vacation Form`的表单。要打开编辑模式的表单，双击或右键单击（上下文点击）表单名称，然后转到**打开方式**
    | **Google 表单**。以下截图显示了编辑模式下的表单外观。您可以在编辑模式下进行任何调整和/或格式设置：
- en: '![Creating Forms using script](img/B05010_04_03.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![使用脚本创建表单](img/B05010_04_03.jpg)'
- en: 'To open the live Form, right-click (context click) on the Form name, click
    on **Get link**, copy the link, and then paste the link in your browser''s address
    bar. The following screenshot shows what the live Form will look like:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开实时表单，右键单击（上下文点击）表单名称，点击**获取链接**，复制链接，然后将链接粘贴到浏览器地址栏中。以下截图显示了实时表单的外观：
- en: '![Creating Forms using script](img/B05010_04_04.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![使用脚本创建表单](img/B05010_04_04.jpg)'
- en: 'You can share the live Form link with your users. Your user''s responses are
    stored in the Form itself. You can see responses in the Form editor, or link a
    spreadsheet to it to view the responses, as shown:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将实时表单链接与您的用户共享。您用户的响应将存储在表单本身中。您可以在表单编辑器中查看响应，或者将其链接到电子表格以查看响应，如下所示：
- en: '![Creating Forms using script](img/B05010_04_05.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![使用脚本创建表单](img/B05010_04_05.jpg)'
- en: You can link Form responses to a spreadsheet manually by clicking on the icon
    in the top right-hand corner of the Form editor. A new `Form Responses` Sheet
    will be created in the selected spreadsheet.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击表单编辑器右上角的图标手动将表单响应链接到电子表格。在选定的电子表格中创建一个新的“表单响应”工作表。
- en: 'To programmatically link a spreadsheet, use the following code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要以编程方式链接电子表格，请使用以下代码：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Publishing the script as a web application
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将脚本发布为网络应用程序
- en: 'You can create awesome web pages/applications by publishing your script as
    a web application. In this section, you''ll see how to publish a script. Start
    by creating a new Sheet and entering the following code in the script editor:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将脚本发布为网络应用程序来创建令人惊叹的网页/应用程序。在本节中，您将了解如何发布脚本。首先，在脚本编辑器中创建一个新的工作表，并输入以下代码：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `doGet` function will be executed whenever a HTTP/HTTPS request is sent
    to the script. In the preceding code, `ContentService` is used to return a string
    to the browser. Content service can be used to return any type of content including
    simple text, HTML, XML, JSON, CSV, and so on.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`doGet` 函数将在向脚本发送 HTTP/HTTPS 请求时执行。在上面的代码中，使用 `ContentService` 返回字符串给浏览器。内容服务可以用来返回任何类型的内容，包括简单的文本、HTML、XML、JSON、CSV
    等等。'
- en: 'To publish the script, within the script editor, navigate to **Publish** |
    **Deploy as web app…**. A new **Deploy as web app** dialog will open as shown
    here:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布脚本，在脚本编辑器中，导航到**发布** | **部署为网络应用程序…**。将打开一个新的**部署为网络应用程序**对话框，如下所示：
- en: '![Publishing the script as a web application](img/B05010_04_06.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![将脚本发布为网络应用程序](img/B05010_04_06.jpg)'
- en: Select any one of the existing project versions or select **New** to create
    a new project version. There will be two choices under the **Execute the app as**
    option, **Me** and **User**, accessing the web app. For this application, select
    **Me** (your user ID). This means the script will run on behalf of your user ID.
    If you had selected the second option then the script would run on behalf of the
    user who is accessing the application. Select **Anyone, even anonymous** under
    the **Who has access to the app** option.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 选择任何一个现有的项目版本或选择**新建**以创建一个新的项目版本。在“作为谁执行应用程序”选项下，将有两个选择**我**和**用户**，用于访问网络应用程序。对于此应用程序，请选择**我**（您的用户
    ID）。这意味着脚本将以您的用户 ID 运行。如果您选择了第二个选项，则脚本将以访问应用程序的用户的名义运行。在“谁可以访问应用程序”选项下选择**任何人，即使是匿名用户**。
- en: Tip
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: There are two more choices **Only myself** and **Anyone** available under the
    **Who has access to the app** option. Select **Only myself** if you would only
    like to get access to the published app. Select **Anyone** if you would like to
    give access to others, but please be aware that the others should be logged in
    with their Google user ID. If you select **Anyone, even anonymous**, then your
    user can be anyone and does not need to be logged in. They do not even need to
    be a Google user.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在“谁可以访问应用程序”选项下，还有两个额外的选择**仅我**和**任何人**可用。如果您只想访问已发布的应用程序，请选择**仅我**。如果您想允许他人访问，但请注意，其他人应该使用他们的
    Google 用户 ID 登录。如果您选择**任何人，即使是匿名用户**，则您的用户可以是任何人，并且不需要登录。他们甚至不需要是 Google 用户。
- en: 'Finally, click on the **Deploy** button. Then another dialog will open as shown
    in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击**部署**按钮。然后，将打开另一个对话框，如下面的截图所示：
- en: '![Publishing the script as a web application](img/B05010_04_07.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![将脚本发布为网络应用程序](img/B05010_04_07.jpg)'
- en: Tip
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you are publishing the script for the first time, then you need to authorize
    the script. Authorization is initiated before web app deployment. Click **Allow**
    in the authorization dialog.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是第一次发布脚本，那么您需要授权脚本。授权是在网络应用程序部署之前启动的。在授权对话框中点击**允许**。
- en: In this dialog, you can see the published URL under the **Current web app URL**
    textbox. You can copy and paste this URL in a new browser window/tab address bar
    to see the working of your web application. For the preceding code, the text returned
    will be **Hello world!** Click **OK** to close the dialog.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个对话框中，你可以在**当前网络应用 URL**文本框下看到已发布的 URL。你可以将此 URL 复制并粘贴到新的浏览器窗口/标签页地址栏中，以查看你的网络应用程序的工作情况。对于前面的代码，返回的文本将是**Hello
    world**！点击**确定**关闭对话框。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you make any changes in your code, then you should publish the new version
    again, otherwise the updates will not take effect. Alternatively, you can use
    the **latest code** URL for development purposes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对你的代码进行了任何修改，那么你应该再次发布新版本，否则更新将不会生效。或者，你可以使用**最新代码**URL进行开发。
- en: HtmlService
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HtmlService
- en: At the beginning of this chapter, you created a Form using script codes. However,
    this Form is a static one, meaning you cannot add dynamic formatting or script
    on the client side. You can perform formatting and calculations, if there are
    any to be done, on the server side only.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的开头，你使用脚本代码创建了一个表单。然而，这个表单是静态的，这意味着你无法在客户端添加动态格式或脚本。如果需要，你只能在服务器端执行格式化和计算。
- en: '`HtmlService` allows scripts to return HTML or web pages to clients. For security
    reasons the HTML content, including CSS and JavaScript, are compiled and sandboxed
    by Caja compiler before returning to the client browser. The returned web page(s)
    can interact with server-side GAS functions using the `google.script.run` API
    methods.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`HtmlService` 允许脚本向客户端返回 HTML 或网页。出于安全原因，包括 CSS 和 JavaScript 在内的 HTML 内容在返回到客户端浏览器之前由
    Caja 编译器编译和沙盒化。返回的网页可以使用 `google.script.run` API 方法与服务器端 GAS 函数交互。'
- en: 'The advantages of using `HtmlService` are:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `HtmlService` 的优点是：
- en: You can use CSS and client-side JavaScript
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用 CSS 和客户端 JavaScript
- en: You can create dynamic HTML forms rather than static Forms
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以创建动态 HTML 表单，而不是静态表单
- en: You can work on client-side HTML and server-side script codes separately
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以分别处理客户端 HTML 和服务器端脚本代码
- en: '`HtmlService` can create HTML codes from templates. The **templates** are HTML
    files mixed with HTML markup and scripts (these are called **scriptlets** and
    are executed on the server side).'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`HtmlService` 可以从模板创建 HTML 代码。**模板**是混合了 HTML 标记和脚本的 HTML 文件（这些被称为**脚本片段**，并在服务器端执行）。'
- en: Scriptlets enclosed by `<?` and `?>` execute but output nothing to the enclosing
    HTML. In other words, they do not alter the surrounding HTML code. Scriptlets
    enclosed by `<?=` and `?>` return the output to the surrounding HTML code. Any
    functions inside scriptlets can call functions of other scriptlets or server-script
    functions, but server functions cannot call functions within scriptlets.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 被 `<?` 和 `?>` 包围的脚本片段会执行，但不会向包含的 HTML 输出任何内容。换句话说，它们不会改变周围的 HTML 代码。被 `<?=`
    和 `?>` 包围的脚本片段将输出返回到周围的 HTML 代码。脚本片段内的任何函数都可以调用其他脚本片段或服务器脚本函数的函数，但服务器函数不能调用脚本片段内的函数。
- en: 'For further reading on scriptlet tags, visit: [https://developers.google.com/apps-script/guides/html/templates](https://developers.google.com/apps-script/guides/html/templates).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要进一步了解脚本片段标签，请访问：[https://developers.google.com/apps-script/guides/html/templates](https://developers.google.com/apps-script/guides/html/templates)。
- en: Creating a Form using HtmlService
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 HtmlService 创建表单
- en: 'Create a `Form.html` file, which we are going to use as an HTML template and
    enter the following code in it:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `Form.html` 的文件，我们将使用它作为 HTML 模板，并在其中输入以下代码：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Use the same name attribute value for radio type input fields so that they
    are all grouped together. This means they will work exclusively. Update the `doGet`
    function in the `Code.gs` file to render the previously mentioned HTML form, as
    follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的名称属性值为单选类型输入字段，这样它们就会全部分组在一起。这意味着它们将仅限使用。更新 `Code.gs` 文件中的 `doGet` 函数以渲染前面提到的
    HTML 表单，如下所示：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Publish the script and enter the published URL in your browser''s address bar.
    The basic HTML form returned is shown here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 发布脚本，并在浏览器地址栏中输入已发布的 URL。返回的基本 HTML 表单如下所示：
- en: '![Creating a Form using HtmlService](img/B05010_04_08.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用 HtmlService 创建表单](img/B05010_04_08.jpg)'
- en: 'To populate places automatically from spreadsheet data, update the HTML code
    as shown here:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要从电子表格数据自动填充位置，请更新 HTML 代码，如下所示：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The scriptlet `<?= places[i] ?>` returns the *i*th element from the `places`
    array. You also need to update the `doGet` function as shown here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本片段 `<?= places[i] ?>` 返回 `places` 数组的第 *i* 个元素。你还需要更新如下的 `doGet` 函数：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `places` array is assigned to the template in the `doGet` function and
    referenced in the HTML template. Then, the output becomes the following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `doGet` 函数中将 `places` 数组分配给模板并在 HTML 模板中引用。然后，输出变为以下内容：
- en: '![Creating a Form using HtmlService](img/B05010_04_09.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用 HtmlService 创建表单](img/B05010_04_09.jpg)'
- en: 'To submit this Form data to the spreadsheet, you need to add method and action
    attributes to the Form element:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此表单数据提交到电子表格，您需要向表单元素添加方法和动作属性：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Assign the published URL to the `template` object in the `doGet` function,
    for example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `doGet` 函数中将发布的 URL 分配给 `template` 对象，例如：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You could also assign it as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以按照以下方式分配：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To process the submitted Form data, add a `doPost` function. The `doGet` or
    `doPost` functions execute as per the HTTP/HTTPS request method (`GET` and `POST`):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理提交的表单数据，请添加一个 `doPost` 函数。`doGet` 或 `doPost` 函数根据 HTTP/HTTPS 请求方法（`GET` 和
    `POST`）执行：
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After the Form is submitted, a thank you message is returned as the normal
    text content:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 表单提交后，会返回一条感谢信息作为正常的文本内容：
- en: '![Creating a Form using HtmlService](img/B05010_04_10.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![使用 HtmlService 创建表单](img/B05010_04_10.jpg)'
- en: Submitting form using Google script API method
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Google 脚本 API 方法提交表单
- en: 'To submit data using the `google.script.run` API methods, add `onclick` property
    to the **Submit** button:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `google.script.run` API 方法提交数据，请向 **提交** 按钮添加 `onclick` 属性：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create the `postFormDataToSheet` function as shown here:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式创建 `postFormDataToSheet` 函数：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To show Form submission result or error message, insert the `postData` function
    in a separate `<script>` tag and add success and failure handlers with a callback
    function as shown here:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示表单提交结果或错误信息，请在单独的 `<script>` 标签中插入 `postData` 函数，并添加成功和失败处理程序，如下所示：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Insert a return statement with a message to the user at the end of the `postFormDataToSheet`
    function.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `postFormDataToSheet` 函数的末尾插入一个带有消息的返回语句。
- en: 'To add the `User` object to the `google.script.run` API calls, add the `withUserObject`
    method along with the success and failure handlers:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 `User` 对象添加到 `google.script.run` API 调用中，请添加 `withUserObject` 方法以及成功和失败处理程序：
- en: 'The complete HTML code with the `user` object is shown here:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 包含 `user` 对象的完整 HTML 代码如下所示：
- en: '[PRE15]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The complete version of the `postFormDataToSheet` function is listed here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`postFormDataToSheet` 函数的完整版本如下所示：'
- en: '[PRE16]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In this script, you used HTML code in a separate file, namely `Form.html`. This
    file is used as a template in the GAS server, and only the resulted markup and
    script code are returned to the user's browser. From the browser (the client side),
    we use the Google client-side JavaScript API (`google.script.run`) to interact
    with the GAS server. This is an AJAX-like interaction between the client and server.
    Here, the client and server are your browser and GAS server respectively.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在此脚本中，您使用了名为 `Form.html` 的单独文件中的 HTML 代码。此文件用作 GAS 服务器中的模板，并且只将生成的标记和脚本代码返回给用户的浏览器。从浏览器（客户端）来看，我们使用
    Google 客户端 JavaScript API (`google.script.run`) 与 GAS 服务器进行交互。这是客户端和服务器之间类似于 AJAX
    的交互。在这里，客户端和服务器分别是您的浏览器和 GAS 服务器。
- en: Referencing HTML tags/elements (DOM elements) using plain JavaScript most of
    the time is a tedious task. To make life easier, you can use jQuery libraries.
    Also, you need not define CSS styles in the `<style>` tag yourself; rather you
    can use any officially-supported (by Google) third-party style sheets.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，使用纯 JavaScript 引用 HTML 标签/元素（DOM 元素）是一项繁琐的任务。为了使生活更轻松，您可以使用 jQuery 库。此外，您不需要在
    `<style>` 标签中自己定义 CSS 样式；相反，您可以使用任何官方支持的（由 Google 支持）第三方样式表。
- en: Creating forms using add-ons CSS and jQuery libraries
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用插件 CSS 和 jQuery 库创建表单
- en: 'The same HTML code using the Google add-on CSS and jQuery libraries is as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Google 插件 CSS 和 jQuery 库的相同 HTML 代码如下：
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Creating an e-voting application
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建电子投票应用程序
- en: The previous application appends each response to the `Responses` Sheet. But,
    we need to update the count against each choice. If we can make the selected choices
    increment by a counter then we can use the same application for e-voting purposes.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的应用程序将每个响应附加到 `Responses` 工作表。但是，我们需要更新每个选项的计数。如果我们能让选定的选项通过计数器增加，那么我们可以使用相同的应用程序进行电子投票。
- en: 'Edit the labels/headers for column *A* and *B* in the `Places` sheet as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式编辑 `Places` 工作表中列 *A* 和 *B* 的标签/标题：
- en: '![Creating an e-voting application](img/B05010_04_11.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![创建电子投票应用程序](img/B05010_04_11.jpg)'
- en: 'Update the HTML code in the `Form.html` file as shown here:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式更新 `Form.html` 文件中的 HTML 代码：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'For this application keep the `Form.html` code as it is, but update the `doGet`
    and `postFormDataToSheet` functions as shown here:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此应用程序，保留`Form.html`代码不变，但更新`doGet`和`postFormDataToSheet`函数，如下所示：
- en: '[PRE19]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In this application, the responses are not appended, but the counts are incremented
    on every submission. A sample output is shown here:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在此应用程序中，响应不会附加，而是在每次提交时增加计数。以下是一个示例输出：
- en: '![Creating an e-voting application](img/B05010_04_12.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![创建电子投票应用程序](img/B05010_04_12.jpg)'
- en: Creating a ticket reservation application
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建票务预订应用程序
- en: This application serves as an HTML form to the user to let them submit values
    to the server. This could be to reserve a ticket for a show, book a seat in a
    venue, book a room in a hotel, and many more purposes.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用程序作为用户提交值到服务器的HTML表单。这可能包括预订演出门票、预订场馆座位、预订酒店房间以及更多目的。
- en: 'Create a spreadsheet and create column labels as shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个电子表格，并创建如下截图所示的列标签：
- en: '![Creating a ticket reservation application](img/B05010_04_13.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![创建票务预订应用程序](img/B05010_04_13.jpg)'
- en: 'In the code file, create the `doGet`, `doPost` and `cancelReservation` functions:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码文件中，创建`doGet`、`doPost`和`cancelReservation`函数：
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In the preceding code, the `doGet` function initially checks for any query
    such as `cancel`, appended with the URL. If `cancel` is present, then the `cancelReservation`
    function is called, otherwise the HTML form is returned:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，`doGet`函数最初检查任何查询，如附加到URL的`cancel`。如果存在`cancel`，则调用`cancelReservation`函数，否则返回HTML表单：
- en: '[PRE21]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The preceding function compares the ticket number (`timestamp`) with the existing
    data and, if that ticket number is present, then it is marked as cancelled.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的函数将票号（`timestamp`）与现有数据进行比较，如果该票号存在，则将其标记为已取消。
- en: 'Insert the following code in the `Form.html` file:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Form.html`文件中插入以下代码：
- en: '[PRE22]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'A sample e-mail''s body text is shown in the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个电子邮件正文文本的示例截图：
- en: '![Creating a ticket reservation application](img/B05010_04_14.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![创建票务预订应用程序](img/B05010_04_14.jpg)'
- en: 'A sample output of the `Reservations` sheet is shown here:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个`Reservations`工作表的示例输出：
- en: '![Creating a ticket reservation application](img/B05010_04_15.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![创建票务预订应用程序](img/B05010_04_15.jpg)'
- en: Summary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to create many useful real-life applications
    including a reservation system application. The next chapter will be focused on
    Google Calendar. You will learn how to create Calendar events and how to enable
    Google's advanced services. You will also learn to create Drive file routing and
    search applications.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何创建许多有用的实际应用程序，包括预订系统应用程序。下一章将专注于谷歌日历。你将学习如何创建日历事件以及如何启用谷歌的高级服务。你还将学习创建谷歌驱动文件路由和搜索应用程序。
