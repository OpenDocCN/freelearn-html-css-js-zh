- en: Chapter 1. Creating Our First App with Ionic 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. 使用 Ionic 2 创建我们的第一个应用
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Setting up a development environment
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Creating a HelloWorld app via the CLI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 CLI 创建 HelloWorld 应用
- en: Creating a HelloWorld app via Ionic Creator
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 Ionic Creator 创建 HelloWorld 应用
- en: Viewing the app using your web browser
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用您的网络浏览器查看应用
- en: Viewing the app using the Ionic CLI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ionic CLI 查看应用
- en: Viewing the app using Xcode for iOS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Xcode for iOS 查看应用
- en: Viewing the app using Genymotion for Android
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Genymotion for Android 查看应用
- en: Viewing the app using Ionic View
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ionic View 查看应用
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: There are many options for developing mobile applications today. Native applications
    require a unique implementation for each platform, such as iOS, Android, and Windows
    phone. It's required for some cases such as high-performance CPU and GPU processing
    with lots of memory consumption. Any application that does not need over-the-top
    graphics and intensive CPU processing could benefit greatly from a cost-effective,
    write once and run anywhere HTML5 mobile implementation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开发移动应用程序有很多选择。原生应用程序需要对每个平台（如 iOS、Android 和 Windows phone）进行独特的实现。在一些情况下，如高性能
    CPU 和 GPU 处理以及大量内存消耗，这是必需的。任何不需要过度图形和密集 CPU 处理的应用程序都可以从成本效益、一次编写到处运行 HTML5 移动实现中受益。
- en: For those who choose the HTML5 route, there are many great choices in this active
    market. Some options may be very easy to start, but they could be very hard to
    scale or could face performance problems. Commercial options are generally expensive
    for small developers to discover product and market fit. The best practice is
    to think of the users first. There are instances where a simple responsive design
    website is a better choice; for example, when a business mainly has fixed content
    with minimal updating required or the content is better off on the web for SEO
    purposes.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于选择 HTML5 路线的开发者来说，在这个活跃的市场中有许多不错的选择。一些选项可能很容易开始，但它们可能很难扩展或可能面临性能问题。商业选项通常对小开发者来说成本很高，难以发现产品和市场匹配。最佳实践是首先考虑用户。有些情况下，一个简单的响应式设计网站是一个更好的选择；例如，当业务主要包含固定内容且更新需求最小或内容更适合用于
    SEO 时。
- en: 'The Ionic Framework has several advantages over its competitors, as shown:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，Ionic 框架相对于其竞争对手具有几个优势：
- en: It's written on top of AngularJS. Ionic 1.x was based on AngularJS 1.x, while
    Ionic 2.0 is on top of AngularJS 2.0.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是基于 AngularJS 编写的。Ionic 1.x 基于 AngularJS 1.x，而 Ionic 2.0 则基于 AngularJS 2.0。
- en: UI performance is strong because of its usage of the `requestAnimationFrame()`
    technique.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于使用了 `requestAnimationFrame()` 技术，UI 性能强大。
- en: It offers a beautiful and comprehensive set of default styles, similar to a
    mobile-focused twitter Bootstrap.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一套美丽且全面的默认样式，类似于以移动设备为中心的 Twitter Bootstrap。
- en: '**Sass** is available for quick, easy, and effective theme customization.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sass** 可用于快速、简单、有效的主题定制。'
- en: 'There have been many significant changes between the launch of AngularJS 1.x
    and 2.0\. All of these changes are applicable to Ionic 2 as well. Consider the
    following examples:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: AngularJS 1.x 和 2.0 的发布之间发生了许多重大变化。所有这些变化都适用于 Ionic 2。考虑以下示例：
- en: AngularJS 2.0 utilizes **TypeScript**, which is a superset of the **ECMAScript
    6** (**ES6**) standard, to build your code into JavaScript. This allows the developers
    to leverage TypeScript features, such as type checking, during the complication
    step.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AngularJS 2.0 使用 **TypeScript**，它是 **ECMAScript 6**（**ES6**）标准的超集，将您的代码编译成 JavaScript。这允许开发者在编译步骤中利用
    TypeScript 的功能，如类型检查。
- en: There will be no more Controllers and Directives in AngularJS. Earlier, a controller
    was assigned to a DOM node while a directive converted a template into a component-like
    architecture. However, it is very hard to scale and debug large AngularJS 1.x
    applications due to the misuse of Controllers and/or issues with conflicting directives.
    Moving to AngularJS 2.0, there is only a single concept of Component, which eventually
    has a selector corresponding to an HTML template and a class containing functions.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 AngularJS 中将不再有控制器和指令。以前，控制器被分配给 DOM 节点，而指令将模板转换为类似组件的架构。然而，由于控制器和/或指令冲突的问题，大型
    AngularJS 1.x 应用程序的扩展和调试非常困难。迁移到 AngularJS 2.0 后，只有一个组件的概念，它最终有一个与 HTML 模板对应的选择器和一个包含函数的类。
- en: The `$scope` object will no longer exist in AngularJS 2.0 because all properties
    are now defined inside a component. This is actually good news because debugging
    errors in `$scope` (especially with nested scenarios) is very difficult in AngularJS
    1.x.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AngularJS 2.0中，`$scope`对象将不再存在，因为所有属性现在都在组件内部定义。这实际上是个好消息，因为在AngularJS 1.x中调试`$scope`中的错误（尤其是嵌套场景）非常困难。
- en: Finally, AngularJS 2.0 promises to have better performance and supports both
    ES5 and ES6 standards. You could write AngularJS 2.0 in TypeScript, Dart or just
    pure JavaScript.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，AngularJS 2.0承诺将拥有更好的性能，并支持ES5和ES6标准。你可以使用TypeScript、Dart或纯JavaScript来编写AngularJS
    2.0。
- en: In this chapter, you will go through several HelloWorld examples to Bootstrap
    your Ionic app. This process will give you a quick skeleton to start building
    more comprehensive apps. The majority of apps have similar user experience flows,
    such as tabs and side menus.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习几个HelloWorld示例来Bootstrap你的Ionic应用。这个过程将为你提供一个快速骨架，以便开始构建更全面的应用。大多数应用都有类似的用户体验流程，例如标签和侧边菜单。
- en: Setting up a development environment
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Before you create your first app, your environment must have the required components
    ready. These components ensure a smooth process of development, build and test.
    The default Ionic project folder is based on Cordova's. Therefore, you need the
    Ionic CLI to automatically add the correct platform (that is, iOS, Android, or
    Windows phone) and build the project. This will ensure all Cordova plugins are
    included properly. The tool has many options to run your app in the browser or
    simulator with live reload.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在你创建第一个应用之前，你的环境必须准备好所需的组件。这些组件确保开发、构建和测试过程顺利。默认的Ionic项目文件夹基于Cordova的。因此，你需要Ionic
    CLI来自动添加正确的平台（即iOS、Android或Windows手机）并构建项目。这将确保所有Cordova插件都正确包含。该工具有许多选项，可以在浏览器或模拟器中运行你的应用并实现实时刷新。
- en: Getting ready
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You need to install Ionic and its dependencies to get started. Ionic itself
    is just a collection of CSS styles, AngularJS components, and standard Cordova
    plugins. It's also a command-line tool to help manage all technologies, such as
    Cordova and Bower. The installation process will give you a command line to generate
    the initial code and build the app.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装Ionic及其依赖项以开始。Ionic本身只是一个CSS样式、AngularJS组件和标准Cordova插件的集合。它也是一个命令行工具，用于帮助管理所有技术，如Cordova和Bower。安装过程将为你提供一个命令行来生成初始代码并构建应用。
- en: Ionic uses npm as the installer, which is included when installing Node.js.
    Please install the latest version of Node.js from [https://nodejs.org/en/download/](https://nodejs.org/en/download/).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic使用npm作为安装程序，它包含在安装Node.js时。请从[https://nodejs.org/en/download/](https://nodejs.org/en/download/)安装最新版本的Node.js。
- en: 'You will need to install Cordova, `ios-sim` (iOS Simulator) and Ionic:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装Cordova、`ios-sim`（iOS模拟器）和Ionic：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can install all three components with this single command line instead of
    issuing three command lines separately. The `-g` parameter is to install the package
    globally (not just in the current directory).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个单个命令行安装所有三个组件，而不是分别发出三个命令行。`-g`参数是为了全局安装包（而不仅仅是当前目录）。
- en: 'For Linux and Mac, you may need to use the `sudo` command to allow system access,
    as shown:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux和Mac，你可能需要使用`sudo`命令来允许系统访问，如下所示：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following are a few common options for an **Integrated Development Environment**
    (**IDE**):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常见的**集成开发环境**（**IDE**）选项：
- en: Xcode for iOS
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xcode用于iOS
- en: Android Studio for Android
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android Studio用于Android
- en: Microsoft Visual Studio Code (VS Code)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Visual Studio Code (VS Code)
- en: Sublime Text ([http://www.sublimetext.com/](http://www.sublimetext.com/)) for
    web development
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sublime Text ([http://www.sublimetext.com/](http://www.sublimetext.com/))用于Web开发
- en: All of these have a free license. You could code directly in Xcode or Android
    Studio but those are somewhat heavy-duty for web apps, especially when you have
    a lot of windows open and just need something simple to code. Sublime Text is
    free for non-commercial developers but you have to purchase a license if you are
    a commercial developer. Most frontend developers would prefer to use Sublime Text
    for coding HTML and JavaScript because it's very lightweight and comes with a
    well-supported developer community. Sublime Text has been around for a long time
    and is very user-friendly. However, there are many features in Ionic 2 that make
    Visual Studio Code very compelling. For example, it has the look and feel of a
    full IDE without being bulky. You could debug JavaScript directly inside VS Code
    as well as getting autocomplete (for example, IntelliSense). The following instructions
    cover both Sublime Text and VS Code, although the rest of this book will use VS
    Code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都有免费许可。您可以直接在Xcode或Android Studio中编码，但它们对于Web应用来说有些重量级，尤其是在您有很多窗口打开且只需要简单编码时。Sublime
    Text对非商业开发者免费，但如果您是商业开发者，则必须购买许可证。大多数前端开发者更喜欢使用Sublime Text进行HTML和JavaScript编码，因为它非常轻量级，并拥有一个支持良好的开发者社区。Sublime
    Text已经存在很长时间，并且非常用户友好。然而，Ionic 2中有许多功能使Visual Studio Code非常有吸引力。例如，它具有完整IDE的外观和感觉，但又不笨重。您可以直接在VS
    Code中调试JavaScript，以及获取自动完成（例如，IntelliSense）。以下说明涵盖了Sublime Text和VS Code，尽管本书的其余部分将使用VS
    Code。
- en: How to do it…
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: VS Code works on Mac, Windows, and Linux. Here are the instructions
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code在Mac、Windows和Linux上运行。以下是说明
- en: Visit [https://code.visualstudio.com](https://code.visualstudio.com).
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://code.visualstudio.com](https://code.visualstudio.com)。
- en: Download and install for your specific OS.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并为您特定的操作系统安装。
- en: Unzip the downloaded file.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压下载的文件。
- en: Drag the `.app` file into the `Applications` folder and drag it to Mac's Dock.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`.app`文件拖入`Applications`文件夹，并将其拖到Mac的Dock上。
- en: Open Microsoft Visual Studio code.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Microsoft Visual Studio code。
- en: Press *Ctrl* + *Shift* + *p* to open command palette.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl* + *Shift* + *p* 打开命令面板。
- en: Type `shell command` in command palette.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令面板中输入`shell command`。
- en: 'Click on the `Shell Command: Install ''code'' command in PATH` command to install
    the script to add Visual Studio Code in your terminal `$PATH`.'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '点击`Shell Command: 在PATH中安装''code''命令`命令，将脚本安装到您的终端`$PATH`中。'
- en: Restart Visual Studio Code to take effect.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动Visual Studio Code以生效。
- en: 'Later on, you can just do `code.` (including the dot) directly from the Ionic
    project folder and VS Code will automatically open that folder as a project:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您可以直接从Ionic项目文件夹中执行`code.`（包括点）直接打开该文件夹作为项目：
- en: Note
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the following screenshots are done via Mac.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，以下截图是通过Mac完成的。
- en: '![How to do it…](img/image00197.jpeg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00197.jpeg)'
- en: If you decide to use Sublime Text, you will need Package Control ([https://packagecontrol.io/installation](https://packagecontrol.io/installation)),
    which is similar to a **Plugin Manager**. Since Ionic uses Sass, it's optional
    to install the Sass Syntax Highlighting package.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您决定使用Sublime Text，您将需要Package Control ([https://packagecontrol.io/installation](https://packagecontrol.io/installation))，它类似于**插件管理器**。由于Ionic使用Sass，安装Sass语法高亮包是可选的。
- en: Navigate to **Sublime Text** | **Preferences** | **Package Control**:![How to
    do it…](img/image00198.jpeg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**Sublime Text** | **首选项** | **Package Control**：![如何操作…](img/image00198.jpeg)
- en: 'Go to **Package Control: Install Package**. You could also just type the commands
    partially (that is, `inst`) and it will automatically select the right option:![How
    to do it…](img/image00199.jpeg)'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '前往**Package Control: 安装包**。您也可以只输入命令的部分内容（即，`inst`），它将自动选择正确的选项：![如何操作…](img/image00199.jpeg)'
- en: Type `Sass` and the search results will show one option for **TextMate & Sublime
    Text**. Select that item to install:![How to do it…](img/image00200.jpeg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`Sass`，搜索结果将显示一个针对**TextMate & Sublime Text**的选项。选择该选项进行安装：![如何操作…](img/image00200.jpeg)
- en: There's More…
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: There are tons of Sublime Text packages that you may want to use, such as HTML,
    JSHint, JSLint, Tag, and ColorPicker You can visit [https://sublime.wbond.net/browse/popular](https://sublime.wbond.net/browse/popular)
    for additional needs.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多Sublime Text包您可能想要使用，例如HTML、JSHint、JSLint、Tag和ColorPicker。您可以通过[https://sublime.wbond.net/browse/popular](https://sublime.wbond.net/browse/popular)获取更多需求。
- en: Creating a HelloWorld app via the CLI
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过CLI创建HelloWorld应用
- en: 'It''s quickest to start your app using the existing templates. Ionic gives
    you the following three standard out-of-the-box templates via the command line:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用现有的模板启动应用是最快的。Ionic通过命令行提供了以下三个标准模板：
- en: '**Blank**: This is a simple page with minimal JavaScript code.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空白**：这是一个带有最小JavaScript代码的简单页面。'
- en: '**Tabs**: These are multiple pages with routes. A route URL goes to a tab.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签页**：这些是带有路由的多页。一个路由URL会跳转到标签页。'
- en: '**Side menu**: This is a template with a left/right menu with center content
    area.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**侧边菜单**：这是一个带有左右菜单和中心内容区域的模板。'
- en: How to do it…
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'To set up the app with a blank template from Ionic, use this command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Ionic从空白模板设置应用，使用以下命令：
- en: '[PRE2]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you don't have an account in [ionic.io](http://ionic.io), the command line
    will ask for it. You could either press *y* or *n* to continue. It's not mandatory
    to have an account at this step.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你没有在[ionic.io](http://ionic.io)上的账户，命令行会要求你创建。你可以按*y*或*n*继续。在这个步骤中拥有账户不是强制性的。
- en: 'If you replace blank with tabs, it will create a tab template, as shown:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你用制表符替换空白，它将创建一个标签模板，如下所示：
- en: '[PRE3]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Similarly, the following command will create an app with a side menu:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，以下命令将创建一个带有侧边菜单的应用：
- en: '[PRE4]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The side menu template is the most common template as it provides a very nice
    routing example with different pages in the `/app/pages` folder.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 侧边菜单模板是最常见的模板，因为它提供了一个非常好的路由示例，其中包含`/app/pages`文件夹中的不同页面。
- en: Additional guidance for the Ionic CLI is available on the GitHub page, [https://github.com/driftyco/ionic-cli](https://github.com/driftyco/ionic-cli).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub页面[https://github.com/driftyco/ionic-cli](https://github.com/driftyco/ionic-cli)上提供了关于Ionic
    CLI的额外指导。
- en: How it works…
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'This chapter will show you how to quickly start your code base and visualize
    the result. More details about AngularJS 2.0 and its template syntax will be discussed
    across various chapters of this book. However, the core concepts are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向你展示如何快速启动你的代码库并可视化结果。关于AngularJS 2.0及其模板语法的更多细节将在本书的各个章节中讨论。然而，核心概念如下：
- en: '**Component**: AngularJS 2.0 is very modular because you could write your code
    in a file and use an export class to turn it into a component. If you are familiar
    with AngularJS 1.x, this is similar to a Controller and how it binds with a DOM
    node. A component will have its own private and public properties and methods
    (that is, functions). To tell whether a class is an AngularJS component or not,
    you have to use the `@Component` decorator. This is another new concept in TypeScript
    since you could enforce characteristics (metadata) on any class so that they behave
    in a certain way.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件**：AngularJS 2.0非常模块化，因为你可以将代码写在文件中，并使用导出类将其转换为组件。如果你熟悉AngularJS 1.x，这类似于控制器以及它与DOM节点的绑定。组件将拥有自己的私有和公共属性和方法（即函数）。要判断一个类是否是AngularJS组件，你必须使用`@Component`装饰器。这是TypeScript中的另一个新概念，因为你可以对任何类施加特性（元数据），使它们以某种方式行为。'
- en: '**Template**: A template is an HTML string or a separate `.html` file that
    tells AngularJS how to render a component. This concept is very similar to any
    other frontend and backend framework. However, AngularJS 2.0 has its own syntax
    to allow simple logic on the DOM, such as repeat rendering (`*ngFor`), event binding
    (click), or custom tags (`<my-tag>`).'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板**：模板是一个HTML字符串或一个单独的`.html`文件，它告诉AngularJS如何渲染组件。这个概念与其他任何前端和后端框架非常相似。然而，AngularJS
    2.0有自己的语法，允许在DOM上执行简单的逻辑，例如重复渲染（`*ngFor`）、事件绑定（点击）或自定义标签（`<my-tag>`）。'
- en: '**Directive**: This allows you to manipulate the DOM, since the directive is
    bound to a DOM object. So, `*ngFor` and `*ngIf` would be examples of directives
    because they alter the behavior of that DOM.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指令**：这允许你操作DOM，因为指令绑定到了一个DOM对象上。所以，`*ngFor`和`*ngIf`就是指令的例子，因为它们会改变该DOM的行为。'
- en: '**Service**: This refers to the abstraction to manage models or collections
    of complex logic beside get/set required. There is no service decorator as with
    a component. So, any class could be a service.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：这指的是管理模型或复杂逻辑集合的抽象，除了get/set所需之外。没有像组件那样的服务装饰器。所以，任何类都可以是服务。'
- en: '**Pipe**: This is mainly used to process an expression in the template and
    return some data (that is, rounding numbers and adding currency) using the `{{
    expression | filter }}` format. For example, `{{amount | currency}}` will return
    `$100` if the `amount` variable is `100`.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道**：这主要用于在模板中处理表达式并返回一些数据（即四舍五入数字和添加货币），使用`{{ expression | filter }}`格式。例如，`{{amount
    | currency}}`如果`amount`变量是`100`，将返回`$100`。'
- en: 'Ionic automatically creates a project folder structure that would look as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic会自动创建一个项目文件夹结构，其结构如下所示：
- en: '![How it works…](img/image00201.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00201.jpeg)'
- en: You will spend most of your time in the `/app` folder, because that's where
    your application components will be placed. This is very different from Ionic
    1.x because the `/www` folder here is actually compiled by TypeScript. If you
    build the app for iOS, the Ionic build command line will also create another copy
    at `/platforms/ios/www`, which is specifically for Cordova to point to. Another
    interesting change in AngularJS 2.0 is that all custom JS and CSS files are placed
    in the same subfolder or in `/app/pages`. Since AngularJS 2.0 is component based,
    each component will come with HTML, CSS, and JS. If you add in more JavaScript
    modules, you can put them in the `/app` folder, or a better practice is to use
    `npm install` so that it's automatically added in the `/node_modules` folder.
    Ionic 2 completely got rid of Grunt and Bower. Everything is simplified into just
    `package.json`, where your third-party dependencies will be listed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你将大部分时间花在`/app`文件夹中，因为你的应用组件将放置在这里。这与Ionic 1.x非常不同，因为这里的`/www`文件夹实际上是由TypeScript编译的。如果你为iOS构建应用，Ionic构建命令行也会在`/platforms/ios/www`创建另一个副本，这是专门为Cordova指向的。AngularJS
    2.0中的另一个有趣的变化是，所有自定义JS和CSS文件都放置在同一个子文件夹或`/app/pages`中。由于AngularJS 2.0是基于组件的，每个组件都会包含HTML、CSS和JS。如果你添加更多的JavaScript模块，你可以将它们放在`/app`文件夹中，或者更好的做法是使用`npm
    install`，这样它就会自动添加到`/node_modules`文件夹中。Ionic 2完全摒弃了Grunt和Bower。所有内容都简化为`package.json`，其中将列出你的第三方依赖项。
- en: There is no need to modify the `/platforms` or `/plugins` folder manually unless
    troubleshooting needs to be done. Otherwise, the Ionic or Cordova CLI will automate
    the content inside these folders.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要手动修改`/platforms`或`/plugins`文件夹，除非需要进行故障排除。否则，Ionic或Cordova CLI将自动化这些文件夹中的内容。
- en: 'By default, from the Ionic template, the AngularJS app name is called `MyApp`.
    You will see something like this in `app.js`, which is the Bootstrap file for
    the entire app:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从Ionic模板中，AngularJS应用名称被称作`MyApp`。你会在`app.js`中看到类似的内容，这是整个应用的启动文件：
- en: '![How it works…](img/image00202.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作…](img/image00202.jpeg)'
- en: This is acting as the `root` of your app and all content will be injected inside
    `<ion-app></ion-app>` of `index.html`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这充当着你的应用`根`目录，所有内容都将注入到`index.html`中的`<ion-app></ion-app>`内。
- en: Note that if you double-click on the `index.html` file to open it in the browser,
    it will show a blank page. This doesn't mean that the app isn't working. The reason
    for this is that the Angular component of Ionic dynamically loads all the .`js`
    files and this behavior requires server access via the `http://` protocol. If
    you open a file locally, the browser automatically treats it as a file protocol
    (`file://`), and therefore Angular will not have the ability to load additional
    `.js` modules to run the app properly. There are several methods of running the
    app, which will be discussed later.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你双击`index.html`文件在浏览器中打开它，会显示一个空白页面。这并不意味着应用没有工作。原因是Ionic的Angular组件会动态加载所有的`.js`文件，这种行为需要通过`http://`协议进行服务器访问。如果你在本地打开文件，浏览器会自动将其视为文件协议（`file://`），因此Angular将无法加载额外的`.js`模块以正确运行应用。有几种运行应用的方法，稍后将会讨论。
- en: Creating a HelloWorld app via Ionic Creator
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Ionic Creator创建HelloWorld应用
- en: Another way to start your app codebase is to use **Ionic Creator**. This is
    a great interface builder to accelerate your app development with the drag and
    drop style. You can quickly take the existing components and position them to
    visualize how it should look in the app via a web-based interface. Most common
    components, such as buttons, images, and checkboxes, are available.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种开始你的应用代码库的方法是使用**Ionic Creator**。这是一个优秀的界面构建器，可以通过拖放风格加速你的应用开发。你可以快速将现有的组件拖放到基于Web的界面中，以可视化它们在应用中的样子。最常见的组件，如按钮、图片和复选框，都是可用的。
- en: Ionic Creator allows the user to export everything as a project with all `.html`,
    `.css`, and `.js` files. You should be able edit content in the `/app` folder
    to build on top of the interface.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic Creator允许用户将所有`.html`、`.css`和`.js`文件作为一个项目导出。你应该能够编辑`/app`文件夹中的内容，以构建在界面之上。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Ionic Creator requires registration for a free account at [https://creator.ionic.io/](https://creator.ionic.io/)
    to get started.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ionic Creator开始之前，需要在[https://creator.ionic.io/](https://creator.ionic.io/)注册一个免费账户。
- en: How to do it…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Create a new project called **myApp**:![How to do it…](img/image00203.jpeg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**myApp**的新项目：![如何操作…](img/image00203.jpeg)
- en: Validate to ensure that you see the following screen:![How to do it…](img/image00204.jpeg)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证以确保你看到以下屏幕：![如何操作…](img/image00204.jpeg)
- en: The center area is your app interface. The left side gives you a list of **Pages**.
    Each page is a single route. You also have access to a number of UI components
    that you would normally have to code by hand in an html file. The panel on the
    right shows the properties of any selected component.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中心区域是你的应用界面。左侧为你提供了一个**页面**列表。每个页面是一个单独的路由。你还可以访问许多UI组件，你通常需要在html文件中手动编码。右侧面板显示了任何选中组件的属性。
- en: You're free to do whatever you need to do here by dropping components to the
    center screen. If you need to create a new page, you have to click on the plus
    sign in the **Pages** panel. Each page is represented as a link, which is basically
    a route in Angular UI Router's definition. To navigate to another page (for example,
    after clicking a button), you can just change the link property and point to that
    page.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在这里自由地做任何需要的事情，只需将组件拖放到中心屏幕即可。如果你需要创建一个新页面，你必须点击**页面**面板中的加号。每个页面都表示为链接，这基本上是Angular
    UI Router定义中的一个路由。要导航到另一个页面（例如，点击按钮后），你只需更改链接属性并指向该页面。
- en: There is an edit button on top where you can toggle back and forth between the
    edit mode and preview mode. It's very useful to see how your app will look and
    behave.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 顶部有一个编辑按钮，你可以在此之间切换编辑模式和预览模式。看到你的应用将如何看起来和表现是非常有用的。
- en: 'Once completed, click the export button on the top in the navigation bar. You
    have the following four options:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击导航栏顶部的导出按钮。你有以下四个选项：
- en: Use the Ionic CLI tool to get the code
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ionic CLI工具获取代码
- en: Download the project as a ZIP file
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将项目作为ZIP文件下载
- en: Export it to native code (similar to PhoneGap Build), as shown:![How to do it…](img/image00205.jpeg)
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其导出到原生代码（类似于PhoneGap Build），如图所示：![如何操作…](img/image00205.jpeg)
- en: 'Export it to the preview mode using the Creator app, as follows:'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Creator应用将其导出到预览模式，如下所示：
- en: '![How to do it…](img/image00206.jpeg)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/image00206.jpeg)'
- en: 'The best way to learn Ionic Creator is to play with it. You can add a new page
    and pick out any of the existing templates. The following example shows a **Login**
    page template:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 学习Ionic Creator的最佳方式是亲自尝试。你可以添加一个新页面并选择任何现有的模板。以下示例显示了**登录**页面模板：
- en: '![How to do it…](img/image00207.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00207.jpeg)'
- en: 'Here is how it should look out of the box (after export or download):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它应该看起来的样子（导出或下载后）：
- en: '![How to do it…](img/image00208.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00208.jpeg)'
- en: There's More…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'To switch to the preview mode, where you can see the UI in a device simulator,
    click on the switch button in the top right to enable Test, as illustrated:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换到预览模式，在那里你可以看到设备模拟器中的UI，请点击右上角的切换按钮以启用测试，如图所示：
- en: '![There''s More…](img/image00209.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/image00209.jpeg)'
- en: In this mode, you should be able to interact with the components in the web
    browser as if they're actually deployed on the device.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种模式下，你应该能够像它们实际部署在设备上一样，在网页浏览器中与组件进行交互。
- en: If you break something, it's very simple to start a new project. It's a great
    tool to use for prototyping and to get the initial template or project scaffolding.
    You should continue coding in your regular IDE for the rest of the app. Ionic
    Creator doesn't do everything for you, yet. For example, if you want to access
    specific Cordova plugin features, you have to write that code separately.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你弄坏了某些东西，重新开始一个新项目非常简单。这是一个用于原型设计和获取初始模板或项目框架的出色工具。你应该继续在常规IDE中编码其余的应用程序。Ionic
    Creator目前还不能为你做所有事情。例如，如果你想访问特定的Cordova插件功能，你必须单独编写那段代码。
- en: Also, if you want to tweak the interface outside of what is allowed within Ionic
    Creator, it will also require specific modifications to the `.html` and `.css`
    files.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你想在Ionic Creator允许的范围之外调整界面，也需要对`.html`和`.css`文件进行特定的修改。
- en: Viewing the app using your web browser
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用你的网页浏览器查看应用
- en: In order to run the web app, you need to turn your `/www` folder into a web
    server. Again, there are many methods to do this and people tend to stick with
    one or two ways to keep things simple. A few other options are unreliable, such
    as Sublime Text's live watch package or static page generator (for example, the
    Jekyll and Middleman apps). They are slow to detect changes and may freeze your
    IDE. So those won't be mentioned here.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行网络应用，您需要将您的 `/www` 文件夹变成一个网络服务器。再次强调，有很多人方法可以做到这一点，人们倾向于坚持一两种方法以保持简单。一些其他选项可能不可靠，例如
    Sublime Text 的实时观察包或静态页面生成器（例如，Jekyll 和 Middleman 应用）。它们检测更改的速度很慢，可能会冻结您的 IDE。因此，这里不会提及这些。
- en: Getting ready
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The recommended method is to use the `ionic serve` command line. It basically
    launches an HTTP server so that you can open your app in a desktop browser.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的方法是使用 `ionic serve` 命令行。它基本上启动了一个 HTTP 服务器，这样您就可以在桌面浏览器中打开您的应用。
- en: How to do it…
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, you need to be in the `project` folder. Let''s assume that it is the
    Side Menu HelloWorld:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要处于 `project` 文件夹中。假设它是 Side Menu HelloWorld：
- en: '[PRE5]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'From there, just issue the simple command line, as shown:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，只需发出简单的命令行，如下所示：
- en: '[PRE6]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'That''s it! There is no need to go into the `/www` folder or figure out which
    port to use. The command line will provide the following options while the web
    server is running:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！您不需要进入 `/www` 文件夹或找出要使用的端口号。当网络服务器运行时，命令行将提供以下选项：
- en: '![How to do it…](img/image00210.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00210.jpeg)'
- en: The most common option to use here is `r` to restart or `q` to quit when you
    are done.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最常用的选项是 `r` 用于重启或 `q` 用于完成工作后退出。
- en: 'There are additional steps to view the app with the correct device resolution:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 查看具有正确设备分辨率的应用的额外步骤：
- en: Install Google Chrome if it's not already on your computer.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的电脑上还没有安装 Google Chrome，请安装它。
- en: Open the link (for example, `http://localhost:8100/`) from ionic serve in Google
    Chrome.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Google Chrome 中打开 ionic serve 中的链接（例如，`http://localhost:8100/`）。
- en: Turn on Developer Tools. For example, in Mac's Google Chrome, navigate to **View**
    | **Developer** | **Developer** **Tools**.![How to do it…](img/image00211.jpeg)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具。例如，在 Mac 的 Google Chrome 中，导航到 **查看** | **开发者** | **开发者工具**。![如何操作…](img/image00211.jpeg)
- en: Click on the small mobile icon in the Chrome Developer Tools area, as illustrated:![How
    to do it…](img/image00212.jpeg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Chrome 开发者工具区域单击小型的移动图标，如图所示：![如何操作…](img/image00212.jpeg)
- en: There will be a long list of devices to pick from, as shown:![How to do it…](img/image00213.jpeg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会显示一个长长的设备列表供您选择，如下所示：![如何操作…](img/image00213.jpeg)
- en: After selecting a device, you need to refresh the page to ensure that the UI
    is updated. Chrome should give you the exact view resolution of the device.![How
    to do it…](img/image00214.jpeg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择设备后，您需要刷新页面以确保 UI 已更新。Chrome 应该会给出设备的精确视图分辨率。![如何操作…](img/image00214.jpeg)
- en: Most developers would prefer to use this method to code as you can debug the
    app using Chrome Developer Tools. It works exactly like any other web application.
    You can create breakpoints or output variables to the console.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数开发者更喜欢使用这种方法进行编码，因为您可以使用 Chrome 开发者工具调试应用。它的工作方式与任何其他网络应用完全相同。您可以在控制台创建断点或输出变量。
- en: How it works…
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Note that ionic serve is actually watching everything under the `/app` folder
    and transpiling the TypeScript code into JavaScript under `/www` on the fly. This
    makes sense because there is no need for the system to scan through every single
    file when the probability for it to change is very small.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，ionic serve 实际上正在监视 `/app` 文件夹下的所有内容，并在 `/www` 下即时将 TypeScript 代码编译成 JavaScript。这很有道理，因为系统不需要扫描每个文件，因为其更改的概率非常小。
- en: 'While the web server is running, you can go back to the IDE and continue coding.
    For example, let''s open `page1.html` or any other template file and change the
    first line to this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当网络服务器运行时，您可以返回到 IDE 并继续编码。例如，让我们打开 `page1.html` 或任何其他模板文件，并将其第一行更改为以下内容：
- en: '[PRE7]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Go back to the web browser where Ionic opened the new page; the app interface
    will change the title bar right away without requiring you to refresh the browser.
    This is a very nice feature when there is a lot of back and forth between code
    change and checking on how it works or looks in the app instantly.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到 Ionic 打开新页面的网页浏览器；应用界面会立即更改标题栏，无需您刷新浏览器。当需要在代码更改和检查应用的实际工作或外观之间来回切换时，这是一个非常棒的功能。
- en: Viewing the app using the Ionic CLI
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ionic CLI 查看应用
- en: So far, you have been testing the web app portion of Ionic. Most of the time,
    you will need to actually run the app on a physical device or at least an emulator
    to see how the app behaves and whether all native features work.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经测试了Ionic的Web应用程序部分。大多数时候，你需要实际上在物理设备或至少在模拟器上运行应用程序，以查看应用程序的行为以及所有原生功能是否正常工作。
- en: Getting Ready
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have the emulator installed. iOS emulator comes when you do
    `npm install -g ios-sim` and the Android emulator comes with Android Studio. To
    test the app on a physical device, you must connect the device to your computer
    via a USB connection.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要安装模拟器。iOS模拟器在执行`npm install -g ios-sim`时安装，Android模拟器随Android Studio一起安装。要在物理设备上测试应用程序，你必须通过USB连接将设备连接到你的计算机。
- en: How to do it…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Add the specific platform (such as iOS) and build the app using the following
    command line:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行添加特定的平台（例如iOS）并构建应用程序：
- en: '[PRE8]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that you need to do the `platform add` before building the app. However,
    if you use the standard template from the Ionic CLI, it should already have the
    iOS platform included. To build and run for Android, you can replace iOS with
    Android.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，在构建应用程序之前，你需要执行`platform add`。然而，如果你使用Ionic CLI的标准模板，它应该已经包含了iOS平台。要为Android构建和运行，你可以将iOS替换为Android。
- en: 'To emulate the app using the iOS emulator, use the following command line:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用iOS模拟器模拟应用程序，请使用以下命令行：
- en: '[PRE9]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To run the app on the actual physical iPhone device, use the command line as
    shown:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在真实的物理iPhone设备上运行应用程序，请使用以下命令行：
- en: '[PRE10]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Viewing the app using Xcode for iOS
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xcode为iOS查看应用程序
- en: You could run the app using Xcode (in Mac) as well.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用Mac上的Xcode运行应用程序。
- en: How to do it…
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to the `/platforms/ios` folder.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`/platforms/ios`文件夹。
- en: Look for the folder with `.xcodeproj` and open it in Xcode.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找包含`.xcodeproj`的文件夹，并在Xcode中打开它。
- en: Click on the iOS Device icon and select your choice of iOS simulator:![How to
    do it…](img/image00215.jpeg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击iOS设备图标，并选择你选择的iOS模拟器：![如何做到这一点…](img/image00215.jpeg)
- en: Click on the run button and you should be able to see the app running in the
    simulator.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击运行按钮，你应该能在模拟器中看到应用程序正在运行。
- en: There's more…
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You can connect a physical device via a USB port and it will show up in the
    iOS Device list for you to pick. Then, you can deploy the app directly on your
    device. Note that iOS developer membership is required for this. This method is
    more complex than just viewing the app via a web browser.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过USB端口连接一个物理设备，它将出现在iOS设备列表中供你选择。然后，你可以在你的设备上直接部署应用程序。请注意，此方法需要iOS开发者会员资格。这种方法比仅通过网页浏览器查看应用程序更复杂。
- en: 'However, it''s a must when you want to test out your code related to device
    features, such as camera or maps. If you change code in the `/app` folder and
    want to again run it in Xcode, you have to do `ionic build ios` first, because
    the running code is in the `Staging` folder of your Xcode project, as illustrated:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当你想要测试与设备功能相关的代码时，例如相机或地图，这是必须的。如果你在`/app`文件夹中更改代码并想在Xcode中再次运行它，你必须首先执行`ionic
    build ios`，因为正在运行的代码位于你的Xcode项目的`Staging`文件夹中，如图所示：
- en: '![There''s more…](img/image00216.jpeg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/image00216.jpeg)'
- en: 'For debugging, the Xcode Console can output JavaScript logs as well. However,
    you could use the more advanced features of Safari''s **Web Inspector** (which
    is similar to Google Chrome''s Developer Tools) to debug your app. Note that only
    Safari can debug a web app running on a connected physical iOS device because
    Chrome does not support this on a Mac. It''s easy to enable this capability, and
    it can be done with the following steps:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于调试，Xcode控制台也可以输出JavaScript日志。然而，你可以使用Safari的**Web Inspector**（类似于Google Chrome的开发者工具）的高级功能来调试你的应用程序。请注意，只有Safari可以调试在连接的物理iOS设备上运行的Web应用程序，因为Chrome在Mac上不支持这一点。启用此功能很容易，可以通过以下步骤完成：
- en: Allow remote debugging for iOS device by navigating to `Settings` | **Safari**
    | **Advanced** and enabling **Web** **Inspector**:![There's more…](img/image00217.jpeg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到`设置` | **Safari** | **高级**并启用**Web** **Inspector**来允许iOS设备进行远程调试：![还有更多…](img/image00217.jpeg)
- en: Connect the physical iOS device to your Mac via USB and run the app.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过USB将物理iOS设备连接到你的Mac并运行应用程序。
- en: Open the Safari browser.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Safari浏览器。
- en: Select **Develop** | **your device's name (or iOS Simulator)** | **index.html**,
    as shown:![There's more…](img/image00218.jpeg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**开发** | **你的设备名称（或iOS模拟器）** | **index.html**，如图所示：![还有更多…](img/image00218.jpeg)
- en: Note
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you don't see the **Develop** menu in Safari, you need to navigate to **Preferences**
    > **Advanced** and check on **Show Develop menu in menu bar**
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你没有在 Safari 中看到 **Develop** 菜单，你需要导航到 **Preferences** > **Advanced** 并勾选 **Show
    Develop menu in menu bar**
- en: Safari will open a new console just for that specific device just as it's running
    within the computer's Safari.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 将为该特定设备打开一个新的控制台，就像它在计算机的 Safari 中运行时一样。
- en: Viewing the app using Genymotion for Android
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Genymotion for Android 查看应用
- en: While it's possible to install the Google Android simulator, many developers
    have an inconsistent experience on a Mac. There are many commercial and free alternatives
    that offer more convenience and a wide range of device support. **Genymotion**
    provides some unique advantages, such as allowing users to switch the Android
    model and version, supporting networking from within the app, and allowing SD
    card simulation.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然安装 Google Android 模拟器是可能的，但许多开发者在 Mac 上有不一致的体验。有许多商业和免费的替代品提供了更多便利和广泛的设备支持。**Genymotion**
    提供了一些独特的优势，例如允许用户切换 Android 模型和版本，支持从应用内部进行网络连接，并允许模拟 SD 卡。
- en: In this section, you will learn how to set up Android developer environment
    (on a Mac in this case) first. Then, you will install and configure Genymotion
    for mobile app development.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何首先设置 Android 开发环境（在本例中为 Mac）。然后，你将安装和配置 Genymotion 以进行移动应用开发。
- en: How to do it…
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The first step is to set up the Android environment properly for development.
    Download and install Android Studio from [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html).
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是正确设置 Android 开发环境。从 [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html)
    下载并安装 Android Studio。
- en: Note
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might be asked to install other libraries if your machine doesn't have the
    correct dependencies. If that is the case, you should run `sudo apt-get install
    lib32z1 lib32ncurses5 lib32bz2-1.0 lib32stdc++6` from the command line to install.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你的机器没有正确的依赖项，可能会要求你安装其他库。如果是这种情况，你应该在命令行中运行 `sudo apt-get install lib32z1
    lib32ncurses5 lib32bz2-1.0 lib32stdc++6` 来安装。
- en: Run Android Studio.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Android Studio。
- en: You need to install all the required packages, such as Android SDK. Just click
    **Next** twice at the setup wizard screen and click on the **Finish** button to
    start the packages' installation.![How to do it…](img/image00219.jpeg)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要安装所有必需的包，例如 Android SDK。只需在设置向导屏幕上点击 **Next** 两次，然后点击 **Finish** 按钮开始安装包。![如何操作…](img/image00219.jpeg)
- en: After the installation is completed, you need to install additional packages
    and other SDK versions. On the **Quick Start** screen, select **Configure**, as
    illustrated:![How to do it…](img/image00220.jpeg)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，你需要安装额外的包和其他 SDK 版本。在 **Quick Start** 屏幕上，选择 **Configure**，如图所示：![如何操作…](img/image00220.jpeg)
- en: After this, select **SDK** **Manager**, as shown:![How to do it…](img/image00221.jpeg)
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择 **SDK** **Manager**，如图所示：![如何操作…](img/image00221.jpeg)
- en: It's good practice to install the previous version, such as **Android** **5.0.1**
    and **5.1.1**. You may also want to install all `Tools` and `Extras` for later
    use:![How to do it…](img/image00222.jpeg)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装上一个版本，例如 **Android** **5.0.1** 和 **5.1.1** 是一个好习惯。你可能还希望安装所有 `Tools` 和 `Extras`
    以供以后使用：![如何操作…](img/image00222.jpeg)
- en: Click on the **Install packages…** button.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Install packages…** 按钮。
- en: Check the box on **Accept License** and select **Install**.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选 **Accept License** 复选框并选择 **Install**。
- en: The SDK Manager will give you an SDK Path on the top. Make a copy of this path
    because you need to modify the environment path.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SDK Manager 将在顶部显示一个 SDK 路径。复制此路径，因为你需要修改环境路径。
- en: 'Go to the terminal and type the following command:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往终端并输入以下命令：
- en: '[PRE11]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This will open a text editor to edit your `bash profile` file. Insert the following
    line where `/YOUR_PATH_TO/android-sdk` should be the SDK Path that you copied
    earlier:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个文本编辑器以编辑你的 `bash profile` 文件。在 `/YOUR_PATH_TO/android-sdk` 应该是之前复制的 SDK
    路径的位置插入以下行：
- en: '[PRE12]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save and close that text editor.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭该文本编辑器。
- en: Go back to terminal and type.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回终端并输入。
- en: '[PRE13]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You should see the output as your SDK Path. This verifies that you have correctly
    configured the Android developer environment.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到输出你的 SDK 路径。这验证了你已经正确配置了 Android 开发环境。
- en: The next step is to install and configure Genymotion. Download and install Genymotion
    and Genymotion Shell from [genymotion.com](http://genymotion.com).
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是安装和配置 Genymotion。从 [genymotion.com](http://genymotion.com) 下载并安装 Genymotion
    和 Genymotion Shell。
- en: Run Genymotion.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Genymotion。
- en: Click on the **Add** button to start adding a new Android device, as illustrated:![How
    to do it…](img/image00223.jpeg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮以开始添加新的Android设备，如图所示：![如何操作…](img/image00223.jpeg)
- en: Select a device that you want to simulate. In this case, let select **Samsung
    Galaxy S5**, as follows:![How to do it…](img/image00224.jpeg)
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要模拟的设备。在本例中，让我们选择**三星Galaxy S5**，如下所示：![如何操作…](img/image00224.jpeg)
- en: You will see the device being added to your virtual devices. Click on that device.![How
    to do it…](img/image00225.jpeg)
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到设备正在添加到您的虚拟设备中。点击该设备。![如何操作…](img/image00225.jpeg)
- en: Then click on **Start**:![How to do it…](img/image00226.jpeg)
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后点击**开始**：![如何操作…](img/image00226.jpeg)
- en: The simulator will take a few seconds to start and will show another window.
    This is just a blank simulator without your app running inside yet:![How to do
    it…](img/image00227.jpeg)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模拟器将花费几秒钟时间启动，并显示另一个窗口。这是一个还没有运行您的应用的空白模拟器：![如何操作…](img/image00227.jpeg)
- en: Run Genymotion Shell.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行Genymotion Shell。
- en: From Genymotion Shell, you need to get a device list and keep the IP address
    of the device attached, which is Samsung Galaxy S5\. Type `devices list:`![How
    to do it…](img/image00228.jpeg)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Genymotion Shell中，您需要获取设备列表并保留连接的设备的IP地址，即三星Galaxy S5。输入`devices list:`![如何操作…](img/image00228.jpeg)
- en: Type `adb connect 192.168.56.101` (or whatever the IP address was that you saw
    earlier from the `devices list` command line).
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`adb connect 192.168.56.101`（或从`设备列表`命令行中看到的任何IP地址）。
- en: Type `adb devices` to confirm that it is connected.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`adb devices`以确认它已连接。
- en: Type `ionic platform add android` to add Android as a platform for your app.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`ionic platform add android`以将Android添加为您的应用平台。
- en: Finally, type `ionic run android`.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，输入`ionic run android`。
- en: You should be able to see the Genymotion window showing your app.![How to do
    it…](img/image00229.jpeg)
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该能够看到显示您的应用的Genymotion窗口。![如何操作…](img/image00229.jpeg)
- en: Although there are many steps to get this working, it's a lot less likely that
    you have to go through the same process over. Once your environment is set up,
    all you need to do is to leave Genymotion running, while writing code. If there
    is a need to test the app in different Android devices, it's easy to add another
    virtual device in Genymotion and connect to it.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然要使此功能正常工作需要许多步骤，但您不必重复相同的过程的可能性要小得多。一旦您的环境设置完成，您需要做的就是保持Genymotion运行，同时编写代码。如果需要在不同Android设备上测试应用，很容易在Genymotion中添加另一个虚拟设备并连接到它。
- en: Viewing the app using Ionic View
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ionic View查看应用
- en: '**Ionic View** is an app viewer that you can download from the App Store or
    Google Play. When you are in the development process and the app is not completed,
    you don''t want to submit it to either Apple or Google right away but limit access
    to your testers. Ionic View can help load your own app inside Ionic View and make
    it behave like a real app with some access to native device features. Additionally,
    Ionic View lets you use your app on an iOS device without any certificate requirement.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ionic View**是一个可以从App Store或Google Play下载的应用查看器。在开发过程中，当应用尚未完成时，您不想立即将其提交给Apple或Google，但希望限制测试者的访问。Ionic
    View可以帮助在Ionic View中加载您的应用，并使其像真实应用一样运行，同时可以访问一些原生设备功能。此外，Ionic View还允许您在iOS设备上使用您的应用，而无需任何证书要求。'
- en: Since Ionic View uses Cordova **InAppBrowser** plugin to launch your app, all
    the device features have to be hacked to make it work. Currently, Ionic View only
    supports SQLite, battery, camera, device motion, device orientation, dialog/notification,
    geolocation, globalization, network information, vibration, keyboard, status bar,
    barcode scanner, and zip. It's a good idea to check the updated support list prior
    to using Ionic View to ensure that your app works properly.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Ionic View使用Cordova **InAppBrowser**插件来启动您的应用，因此必须对设备功能进行破解才能使其工作。目前，Ionic
    View仅支持SQLite、电池、摄像头、设备运动、设备方向、对话框/通知、地理位置、全球化、网络信息、振动、键盘、状态栏、条形码扫描器和zip。在使用Ionic
    View之前检查更新的支持列表是一个好主意，以确保您的应用能够正常运行。
- en: How to do it…
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'There are two ways to use Ionic View. You can either upload your own app or
    load someone else''s app ID. If you test your own app, follow these steps:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ionic View有两种方式。您可以选择上传自己的应用或加载他人的应用ID。如果您测试自己的应用，请按照以下步骤操作：
- en: Download Ionic View from either App Store or Google Play.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从App Store或Google Play下载Ionic View。
- en: Make sure to register an account on [ionic.io](http://ionic.io).
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在[ionic.io](http://ionic.io)上注册一个账户。
- en: Go to your app's `project` folder.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您应用的`项目`文件夹。
- en: Search for ionic upload.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索ionic upload。
- en: Enter your credentials.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的凭证。
- en: The CLI will upload the entire app and give you the app ID, which is `152909f7`
    in this case. You may want to keep this app ID to share with other testers later.![How
    to do it…](img/image00230.jpeg)
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CLI会上传整个应用并给你一个应用ID，在本例中为`152909f7`。你可能想保留这个应用ID以便稍后与其他测试人员分享。![如何操作…](img/image00230.jpeg)
- en: Open the Ionic View app on the mobile device and log in if you haven't done
    so already.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在移动设备上打开Ionic View应用，如果你还没有登录，请登录。
- en: Now you should be able to see the app name on your **MY APPS** page. Go ahead
    and select the app name (**myApp** in this case), as illustrated:![How to do it…](img/image00231.jpeg)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该能在你的**我的应用**页面上看到应用名称。请继续选择应用名称（在本例中为**myApp**），如图所示：![如何操作…](img/image00231.jpeg)
- en: Select **VIEW APP** to run the app, as shown:![How to do it…](img/image00232.jpeg)
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**查看应用**来运行应用，如图所示：![如何操作…](img/image00232.jpeg)
- en: You will see that the app interface appears with initial instructions on how
    to exit the app. Since your app will cover the full screen of Ionic View, you
    need to swipe down using three fingers, as illustrated, to exit back to Ionic
    View:![How to do it…](img/image00233.jpeg)
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到应用界面出现初始说明，说明如何退出应用。由于你的应用将覆盖Ionic View的全屏，你需要像图示那样用三根手指向下滑动，才能返回到Ionic
    View：![如何操作…](img/image00233.jpeg)
- en: If there is no code update, the process is the same except that you need to
    select **SYNC TO LATEST** from the menu.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有代码更新，过程相同，只是你需要从菜单中选择**同步到最新**。
- en: There's more…
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'To summarize, there are several benefits of using Ionic View, some of which
    are as follows:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，使用Ionic View有几个好处，以下是一些：
- en: It's convenient because there is only one command line to push the app
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这很方便，因为只有一个命令行可以推送应用
- en: Anyone can access your app by entering the app ID
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何人都可以通过输入应用ID来访问你的应用
- en: There is no need to even have iOS developer membership to start developing with
    Ionic. Apple has its own `TestFlight` app, in which the use case is very similar
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使没有iOS开发者会员资格，你也可以开始使用Ionic进行开发。苹果有自己的`TestFlight`应用，其用例非常相似
- en: You can stay agile in the developer process by having testers test the app as
    you develop it
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过在开发过程中让测试人员测试你的应用来保持开发过程的敏捷性
- en: Ionic View has a wide range of device feature support and continues to grow
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic View支持广泛的设备功能，并且还在不断增长
