- en: Chapter 8.  Creating a Blog with the Keystone CMS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。使用Keystone CMS创建博客
- en: In this chapter, we discuss the use of a CMS made entirely with Node.js, called
    **Keystone**.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了完全使用Node.js制作的CMS，称为**Keystone**的用法。
- en: The **KeystoneJS** describes itself as an open source platform to create database-driven
    websites. It already has a core engine to build web applications and a powerful
    blog, but it is much more than that. It is possible to build anything using the
    Keystone.js framework.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**KeystoneJS**自述为一个创建数据库驱动网站的开源平台。它已经有一个构建Web应用程序和强大博客的核心引擎，但它远不止于此。使用Keystone.js框架可以构建任何东西。'
- en: One of the main attractions of the Keystone CMS is that it uses the Express
    framework and Mongoose ODM, two tools that we have already used in this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone CMS的主要吸引力之一是它使用Express框架和Mongoose ODM，这两个工具我们在本书中已经使用过。
- en: Due to it being a very recent framework, it comes only with a simple default
    theme using the Bootstrap framework, but the team behind Keystone are planning
    to include options to customize new themes something about in the near feature.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是一个非常新的框架，它只有一个简单的默认主题，使用了Bootstrap框架，但是Keystone团队计划包括自定义新主题的选项，这将在不久的将来实现。
- en: Keystone uses the Model View Template pattern, very similar to patterns such
    as Model View Presentation.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone使用了模型视图模板模式，非常类似于模型视图演示等模式。
- en: In this chapter, we will see how to build a new theme using all the features
    of the framework and how to extend it with new features.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将看到如何使用框架的所有功能构建一个新主题，以及如何通过新功能扩展它。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将涵盖以下主题：
- en: Installing KeystoneJS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装KeystoneJS
- en: The KeystoneJS structure and features
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KeystoneJS的结构和特性
- en: How to customize using simple stylesheets
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用简单样式定制
- en: Dealing with themes and how to create new themes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理主题以及如何创建新主题
- en: Extending core functionality to create models and views.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展核心功能以创建模型和视图。
- en: What we are building
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们正在构建什么
- en: 'For this chapter, we will take as a base a simple blog. We''ll see how to extend
    it and create new pages that can be administered through a control panel, and
    we will have a very similar result to the following figure:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，我们将以一个简单的博客作为基础。我们将看到如何扩展它并创建可以通过控制面板管理的新页面，并且我们将得到一个与以下图像非常相似的结果：
- en: '![What we are building](img/image_08_001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![我们正在构建什么](img/image_08_001.jpg)'
- en: Keystone Blog Theme home page
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone博客主题首页
- en: Installing Keystone framework
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Keystone框架
- en: As we have done in previous chapters, we will use the official Keystone.js yeoman
    generator.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的章节一样，我们将使用官方的Keystone.js yeoman生成器。
- en: Tip
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can find more information about the KeystoneJS at this link: [http://keystonejs.com/](http://keystonejs.com/).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此链接找到有关KeystoneJS的更多信息：[http://keystonejs.com/](http://keystonejs.com/)。
- en: 'Let''s install the generator. Open your terminal/shell and type the following
    command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们安装生成器。打开您的终端/Shell并输入以下命令：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating the scaffold application
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建脚手架应用程序
- en: 'Now it is time to create a new folder and start to development our blog application:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候创建一个新文件夹并开始开发我们的博客应用程序了：
- en: Create a folder called chapter-08.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为chapter-08的文件夹。
- en: 'Open your terminal/shell at the chapter-08 folder and type the following command:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在chapter-08文件夹中打开您的终端/Shell，并输入以下命令：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After this command, the keystone.js will trigger a series of questions about
    the basic configurations of the application; you must answer them, as shown in
    the following screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在此命令之后，keystone.js将触发一系列关于应用程序基本配置的问题；您必须回答这些问题，如下截图所示：
- en: '![Creating the scaffold application](img/image_08_002.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![创建脚手架应用程序](img/image_08_002.jpg)'
- en: Prompt questions from Keystone generator
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone生成器的提示问题
- en: 'After the end of all generator tasks, we can see the following output on our
    terminal window:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有生成器任务结束后，我们可以在终端窗口上看到以下输出：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that before starting the application, we need to correct two small bugs.
    At the time of writing, the generator has this fault; however, when the book is
    released this should have been fixed. If not, here's the workaround for this issue.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在启动应用程序之前，我们需要纠正两个小错误。在撰写本文时，生成器存在此故障；但是，当书籍发布时，这个问题应该已经被修复。如果没有，这是解决此问题的方法。
- en: Fixing the lint error and admin object name
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复lint错误和admin对象名称
- en: 'Open gulpfile.js in the root project folder and remove line about lint task:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目根目录中打开gulpfile.js并删除有关lint任务的行：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Fixing admin user name, open the Keystone.js file in the root folder and replace
    the following code:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修复管理用户名，打开根文件夹中的Keystone.js文件并替换以下代码：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: That's all, we already have our blog. Let's check the result.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了，我们已经有了我们的博客。让我们来检查一下结果。
- en: Running the Keystone  blog
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行Keystone博客
- en: 'Open terminal/shell and type the following command:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端/Shell并输入以下命令：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Go to http://localhost:3000/; you should see the following result:![Running
    the Keystone  blog](img/image_08_003.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://localhost:3000/；您应该看到以下结果：![运行Keystone博客](img/image_08_003.jpg)
- en: Keystone home screen
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone主页
- en: As previously commented on, the interface is very simple. It can view the default
    information generated by the generator, including the information about the user
    and password.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，界面非常简单。它可以查看生成器生成的默认信息，包括有关用户和密码的信息。
- en: Click on the **Sign in** link in the top-right corner and fill in the login
    form with the user and password from the previous screenshot. The result will
    be the control panel, as shown in the following figure:![Running the Keystone 
    blog](img/image_08_004.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的**登录**链接，并使用上一个截图中的用户名和密码填写登录表单。结果将是控制面板，如下图所示：![运行Keystone博客](img/image_08_004.jpg)
- en: Keystone Control Panel
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone控制面板
- en: Each link has a form to insert data for the blog, but don't worry about this
    at this time; later in the chapter, we will see how to use the admin panel.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 每个链接都有一个表单，用于插入博客的数据，但现在不用担心这个；在本章后面，我们将看到如何使用管理面板。
- en: As we can see in the previous images, the layout is very simple. However, the
    highlight of this framework is not its visual appearance, but the power its core
    engine has to build robust applications.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在之前的图片中所看到的，布局非常简单。然而，这个框架的亮点不是它的视觉外观，而是它的核心引擎构建强大应用程序的能力。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can read more about Keystone on the official website at: [http://keystonejs.com/](http://keystonejs.com/).'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站[http://keystonejs.com/](http://keystonejs.com/)上了解更多关于Keystone的信息。
- en: Anatomy of the Keystone engine
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Keystone引擎的解剖
- en: Before we dive directly into the code, we will understand how the directories
    structure of Keystone works.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们直接进入代码之前，我们将了解Keystone的目录结构是如何工作的。
- en: 'After starting the application, we will have the following result:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 启动应用程序后，我们将得到以下结果：
- en: '![Anatomy of the Keystone engine](img/image_08_005.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Keystone引擎的解剖](img/image_08_005.jpg)'
- en: Keystone directories structure
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone目录结构
- en: 'Here''s a description of what makes each directory/folder:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是每个目录/文件夹的描述：
- en: '| **Folder Name** | **Folder Path** | **Description** |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **文件夹名称** | **文件夹路径** | **描述** |'
- en: '| Models | /models/ | Application database Models. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 模型 | /models/ | 应用程序数据库模型。'
- en: '| Public | /public/ | Images, JavaScript, Stylesheet, and fonts. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 公共 | /public/ | 图像、JavaScript、样式表和字体。'
- en: '| Routes | /routes//routes/views | View controllers (On Restful API we can
    use a folder called API). |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 路由 | /routes//routes/views | 视图控制器（在Restful API上，我们可以使用一个名为API的文件夹）。'
- en: '| Templates | /templates//templates/emails//templates/layouts//templates/mixins//templates/views
    | Application views templates. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 模板 | /templates//templates/emails//templates/layouts//templates/mixins//templates/views
    | 应用程序视图模板。'
- en: '| updates | /updates/ | Migration scripts and database population. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 更新 | /updates/ | 迁移脚本和数据库填充。'
- en: 'Also, we have in the root folder the following files:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们在根文件夹中有以下文件：
- en: '.editorconfig: Setting the editor''s indentation'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .editorconfig：设置编辑器的缩进
- en: '.env: Setting Cloudnary Cloud credentials'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .env：设置Cloudnary Cloud凭据
- en: '.gitignore: Ignore files for Git Source Control'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .gitignore：Git源控制的忽略文件
- en: 'gulpfile.js: Application tasks'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gulpfile.js：应用程序任务
- en: 'keystone.js: Bootstrap application'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: keystone.js：引导应用程序
- en: 'package.json: Project configurations and NPM modules'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: package.json：项目配置和NPM模块
- en: 'procfile: Configurations for **Heroku** deployment'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: procfile：**Heroku**部署的配置
- en: In the coming lines, we will see in depth what each of these parts performs.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的行中，我们将深入了解每个部分的功能。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The Routes folder has some files that we will not explain right now, but don't
    worry about that; we will see these files in the next topics.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 路由文件夹中有一些文件，我们现在不会解释，但不用担心；我们将在下一个主题中看到这些文件。
- en: Changing the default bootstrap theme
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改默认的bootstrap主题
- en: 'We will show two ways to customize our blog: one superficial, changing only
    the stylesheet, and a deeper one, changing all the page''s markup.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示两种自定义博客的方法：一种是表面的，只改变样式表，另一种是更深入的，改变整个页面的标记。
- en: For the stylesheet changes, we are using the [http://bootswatch.com/](http://bootswatch.com/)
    free Bootstrap themes.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于样式表的更改，我们正在使用[http://bootswatch.com/](http://bootswatch.com/)免费的Bootstrap主题。
- en: The bootstrap framework is very flexible for this; we will use a theme called
    the superhero.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: bootstrap框架非常灵活；我们将使用一个名为superhero的主题。
- en: Go to the [http://bootswatch.com/superhero/_variables.scss](http://bootswatch.com/superhero/_variables.scss)
    URL.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://bootswatch.com/superhero/_variables.scss](http://bootswatch.com/superhero/_variables.scss)
    URL。
- en: Copy the page content.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制页面内容。
- en: Inside public/styles/boostrap/bootstrap, create a new file called _theme_variables.scss
    and paste the code copied from the Bootswatch page.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在public/styles/boostrap/bootstrap中，创建一个名为_theme_variables.scss的新文件，并粘贴从Bootswatch页面复制的代码。
- en: 'Open public/styles/bootstrap/_bootstrap.scss and replace the following  lines:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开public/styles/bootstrap/_bootstrap.scss并替换以下行：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now we will repeat *steps 1* and *2*, but now with a different URL.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将重复*步骤1*和*2*，但现在使用不同的URL。
- en: Go to the [http://bootswatch.com/superhero/_bootswatch.scss](http://bootswatch.com/superhero/_bootswatch.scss)
    URL.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://bootswatch.com/superhero/_bootswatch.scss](http://bootswatch.com/superhero/_bootswatch.scss)
    URL。
- en: Copy the page content.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制页面内容。
- en: 'Create a file called _bootswatch.scss in: public/styles/bootstrap and paste
    the content.'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在public/styles/bootstrap中创建一个名为_bootswatch.scss的文件，并粘贴内容。
- en: 'Open public/styles/bootstrap/_bootstrap.scss and replace the following highlighted
    line:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开public/styles/bootstrap/_bootstrap.scss并替换以下突出显示的行：
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Done. Right now we have a different layout to the standard one adopted by keystone.js,
    so let''s see the result. Open your terminal/shell and type the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成。现在我们有了一个与keystone.js采用的标准布局不同的布局，让我们看看结果。打开您的终端/Shell并输入以下命令：
- en: '[PRE8]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Go to URL: http://localhost:3000/, and you should see the following result:![Changing
    the default bootstrap theme](img/image_08_006.jpg)'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到URL：http://localhost:3000/，您应该会看到以下结果：![更改默认的bootstrap主题](img/image_08_006.jpg)
- en: Keystone home screen
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone主屏幕
- en: With this small change, we can already see the results achieved. However, it
    is a very superficial customization, since we do not change any HTML markup files.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个小改变，我们已经可以看到所取得的结果。然而，这是一个非常表面的定制，因为我们没有改变任何HTML标记文件。
- en: In the preceding images, we can see that we just changed the colors of the page
    as it kept the markup intact, using only a bootstrap theme.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的图片中，我们可以看到我们只是改变了页面的颜色，因为它保持了标记不变，只使用了一个bootstrap主题。
- en: In the next example, we will see how to modify the whole structure of the application.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个示例中，我们将看到如何修改应用程序的整个结构。
- en: Modifying the KeystoneJS core template path
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改KeystoneJS核心模板路径
- en: Now let's do a little refactoring of the templates directory.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们对模板目录进行一些重构。
- en: Inside templates, create a folder called default.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板中，创建一个名为default的文件夹。
- en: Move all files in the templates folder to the new default folder.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模板文件夹中的所有文件移动到新的default文件夹中。
- en: Copy all the contents from the default folder and paste them in a new folder
    called newBlog.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制默认文件夹中的所有内容，并将它们粘贴到一个名为newBlog的新文件夹中。
- en: 'The result will be the following screenshot, but we need to change the keystone.js
    file to configure the new folder:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将是以下截图，但我们需要更改keystone.js文件以配置新文件夹：
- en: '![Modifying the KeystoneJS core template path](img/image_08_007.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![修改KeystoneJS核心模板路径](img/image_08_007.jpg)'
- en: Templates folder structure
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 模板文件夹结构
- en: 'Open the keystone.js file from the root folder and update the following lines:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从根文件夹打开keystone.js文件并更新以下行：
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Done. We have created a folder to hold all our themes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 完成。我们已经创建了一个文件夹来保存所有我们的主题。
- en: Building our own theme
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建我们自己的主题
- en: 'Now we will change the theme markup. This means that we will edit all the HTML
    files inside the newBlog theme. We are using as reference and source the following
    free template from [https://github.com/BlackrockDigital/startbootstrap-clean-blog](https://github.com/BlackrockDigital/startbootstrap-clean-blog).
    Our goal is to have a layout similar to the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将更改主题标记。这意味着我们将编辑newBlog主题内的所有HTML文件。我们使用[https://github.com/BlackrockDigital/startbootstrap-clean-blog](https://github.com/BlackrockDigital/startbootstrap-clean-blog)提供的免费模板作为参考和来源。我们的目标是拥有类似以下截图的布局：
- en: '![Building our own theme](img/image_08_008.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![构建我们自己的主题](img/image_08_008.jpg)'
- en: Keystone home screen
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone主屏幕
- en: 'Open templates/themes/newBlog/layouts/default.swig and add the following code
    to the <head> tag:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/layouts/default.swig并将以下代码添加到<head>标记中：
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Remove all lines between the {# HEADER #} and {# JAVASCRIPT #} comments.'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '删除{# HEADER #}和{# JAVASCRIPT #}注释之间的所有行。'
- en: Tip
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that this action will remove all the content after the body tag and the
    JavaScript links at the bottom of the default.swig file.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此操作将删除default.swig文件底部的body标记后的所有内容和JavaScript链接。
- en: 'Now place the following lines of code between the {# HEADER #} and {# JAVASCRIPT
    #} comments:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '现在将以下代码行放在{# HEADER #}和{# JAVASCRIPT #}注释之间：'
- en: '[PRE11]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Open templates/themes/newBlog/views/blog.swig and replace the code with the
    following code:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/views/blog.swig并用以下代码替换代码：
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Open templates/themes/newBlog/views/contact.swig and replace the code with
    the following code:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/views/contact.swig并用以下代码替换代码：
- en: '[PRE13]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Open templates/themes/newBlog/views/gallery.swig and replace the code with
    the following code:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/views/gallery.swig并用以下代码替换代码：
- en: '[PRE14]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Open templates/themes/newBlog/views/index.swig and replace the code with the
    following code:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/views/index.swig并用以下代码替换代码：
- en: '[PRE15]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note that here, in index.swig, we add some lines of code to show a list of posts
    on the index page, so we need to change the index.js controller.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在index.swig中，我们添加了一些代码行以在索引页面上显示帖子列表，因此我们需要更改index.js控制器。
- en: 'Open routes/views/index.js and add the following lines of code:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开routes/views/index.js并添加以下代码行：
- en: '[PRE16]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Open templates/themes/newBlog/views/post.swig and replace the code with the
    following code:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/views/post.swig并用以下代码替换代码：
- en: '[PRE17]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: With this block of code, we have finished the HTML markup changes. Now we need
    to apply the new stylesheet.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一段代码，我们已经完成了HTML标记的更改。现在我们需要应用新的样式表。
- en: Changing the stylesheet
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改样式表
- en: As we chose SASS to deal with stylesheets on the keystone.js setup, we already
    have everything to use the **SASS** features.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们选择了SASS来处理keystone.js设置中的样式表，我们已经拥有了使用**SASS**功能的一切。
- en: 'Open public/styles/site/_variables.scss and replace the code for the following
    lines of code:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 打开public/styles/site/_variables.scss并替换以下代码行：
- en: '[PRE18]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Remember that we used the http://blackrockdigital.github.io/startbootstrap-clean-blog/index.html
    as a reference and we just picked some blocks of code. Note that the template
    uses LESS instead **SASS,** but here we re-write all the code to fit SASS syntax.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，我们使用http://blackrockdigital.github.io/startbootstrap-clean-blog/index.html作为参考，我们只挑选了一些代码块。请注意，模板使用的是LESS而不是**SASS**，但在这里我们重新编写所有代码以适应SASS语法。
- en: For reasons of space, we do not put the entire stylesheet in this example. You
    can download the sample code from the Packt Publishing website ([www.packtpub.com](http://www.packtpub.com))
    or directly from the book repository on GitHub.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 由于空间原因，我们没有在此示例中放置整个样式表。您可以从Packt Publishing网站([www.packtpub.com](http://www.packtpub.com))或直接从GitHub书库下载示例代码。
- en: It is important to note that we have created the same stylesheet for our sample
    blog, but we convert the **LESS** syntax to **SASS.**
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，我们为示例博客创建了相同的样式表，但我们将**LESS**语法转换为**SASS**。
- en: Open public/styles/site/_layout.scss and use the code.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开public/styles/site/_layout.scss并使用代码。
- en: 'Create a new file called _mixins.scss inside public/styles/site/ and add the
    following lines of code:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在public/styles/site/中创建一个名为_mixins.scss的新文件，并添加以下代码行：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now we just need to edit the public/styles/site.scss to include the new mixins
    file.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需要编辑public/styles/site.scss以包含新的mixin文件。
- en: 'Open public/styles/site.scss and add the following lines of code:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开public/styles/site.scss并添加以下代码行：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Add the image header-bg-1290x1140.jpg from the sample-images folder (you can
    download all the examples files from Packt Publishing or on the GitHub official
    book page) to the public/images/ folder.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将样本图像header-bg-1290x1140.jpg从sample-images文件夹添加到public/images/文件夹中（您可以从Packt
    Publishing网站或GitHub官方书页下载所有示例文件）。
- en: Adding the Gallery script
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加画廊脚本
- en: As we can see, the default Keystone.js theme is very simple and uses only the
    Bootstrap framework. Now we will use a jQuery plugin called Fancybox to apply
    a new style in our gallery.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，默认的Keystone.js主题非常简单，只使用了Bootstrap框架。现在我们将使用一个名为Fancybox的jQuery插件来应用新的样式在我们的画廊中。
- en: Tip
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can get more information about **Fancybox** at the official website: [http://fancybox.net/](http://fancybox.net/).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站[http://fancybox.net/](http://fancybox.net/)上获取有关**Fancybox**的更多信息。
- en: 'Open templates/themes/newBlog/layouts/default.swig and add the following highlighted
    code inside the head tag:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开模板/主题/newBlog/layouts/default.swig并在<head>标记内添加以下突出显示的代码：
- en: '[PRE21]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now let''s add the following highlighted lines of code to scripts at the bottom
    of templates/themes/newBlog/layouts/default.swig:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们将以下代码行添加到模板/主题/newBlog/layouts/default.swig底部的脚本中：
- en: '[PRE22]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: As we already use jQuery in the project, since Bootstrap depends on it, we do
    not need to insert it again.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经在项目中使用了jQuery，因为Bootstrap依赖于它，所以我们不需要再次插入它。
- en: 'Open your terminal/shell and type the following command:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的终端/Shell并输入以下命令：
- en: '[PRE23]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Go to http://localhost:3000/gallery, and you can see the following result:![Adding
    the Gallery script](img/image_08_009.jpg)
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://localhost:3000/gallery，您可以看到以下结果：![添加Gallery脚本](img/image_08_009.jpg)
- en: Template image gallery
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 模板图库
- en: Note that we already include the sample content to our blog, but don't worry
    about this; later in this chapter we will see how to include content.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们已经将示例内容包含到我们的博客中，但不用担心；在本章的后面，我们将看到如何包含内容。
- en: Extending the keystone.js core
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展keystone.js核心
- en: Now we have the new theme almost ready.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们几乎准备好了新主题。
- en: 'We will now see how we can extend the core keystone.js and add another page
    on our blog, as the previous screenshot shows, we have an **ABOUT** menu item,
    so let''s create it:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到如何扩展核心keystone.js并在我们的博客上添加另一页，如上一个截图所示，我们有一个**关于**菜单项，所以让我们创建它：
- en: 'Create a new file called About.js inside models/folder and add the following
    lines of code:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在models/folder中创建一个名为About.js的新文件，并添加以下代码行：
- en: '[PRE24]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add the new module to admin navigation, open keystone.js in the root folder,
    and add the following highlighted lines of code:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新模块添加到管理导航中，打开根文件夹中的keystone.js，并添加以下突出显示的代码行：
- en: '[PRE25]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note that the word on the left will be displayed at the nav bar as an About
    menu item and the word on the right-hand side is the about.js collection.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，左侧的单词将显示在导航栏上作为关于菜单项，右侧的单词是about.js集合。
- en: 'Let''s customize the column display. Add the following lines of code, before
    the register() function on the About.js file:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们自定义列显示。在About.js文件的register()函数之前添加以下代码行：
- en: '[PRE26]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To add the route to the about page, open routes/index.js and add the following
    highlighted lines of code:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将路由添加到关于页面，打开routes/index.js并添加以下突出显示的代码行：
- en: '[PRE27]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Now let's create the controller for the routes.views.blog function.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为routes.views.blog函数创建控制器。
- en: 'Create a new file called about.js inside the routes/views/ folder and add the
    following code:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在routes/views/文件夹中创建一个名为about.js的新文件，并添加以下代码：
- en: '[PRE28]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the route on routes/middleware.js, as the following highlighted code:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在routes/middleware.js上添加路由，如下突出显示的代码：
- en: '[PRE29]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In this example, we see how it is possible to extend the functionality of the
    framework using the built-in functions.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们看到如何通过使用内置函数来扩展框架的功能。
- en: Tip
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can read more about the **Keystone API** at this link: [https://github.com/keystonejs/keystone/wiki/Keystone-API](https://github.com/keystonejs/keystone/wiki/Keystone-API).'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此链接中阅读有关**Keystone API**的更多信息：[https://github.com/keystonejs/keystone/wiki/Keystone-API](https://github.com/keystonejs/keystone/wiki/Keystone-API)。
- en: 'So, the final result for all these steps will be like the following screenshot:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，所有这些步骤的最终结果将如下截图所示：
- en: '![Extending the keystone.js core](img/image_08_010.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![扩展keystone.js核心](img/image_08_010.jpg)'
- en: Keystone Control Panel with Abouts menu item
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 带有关于菜单项的Keystone控制面板
- en: Note that we can see the **Abouts** menu on the previous screenshot.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们可以在上一个截图中看到**关于**菜单。
- en: Inserting content using control panel
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用控制面板插入内容
- en: 'After all these steps, we managed to create a fully customized layout for our
    blog; we will now enter content using the available images in the sample-images
    folder that you can find in the download of the book''s source code:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 经过所有这些步骤，我们成功为我们的博客创建了一个完全定制的布局；现在我们将使用书籍源代码下载中的sample-images文件夹中的可用图像输入内容：
- en: 'Go to http://localhost:3000/keystone, use the user: john@doe.com and password:
    123456 to access the control panel.'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://localhost:3000/keystone，使用用户：john@doe.com和密码：123456访问控制面板。
- en: Go to http://localhost:3000/keystone/post-categories, click on the **Post Categories**
    link.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://localhost:3000/keystone/post-categories，单击**帖子类别**链接。
- en: Click on the **Create Post Category** button, insert the **Old Cars** title
    into the input field, and click **Create** button.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**创建帖子类别**按钮，将**旧车**标题插入输入字段，并单击**创建**按钮。
- en: For the book example, we will use only one category, but in a real application
    you can create as many as you want.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于书籍示例，我们将只使用一个类别，但在实际应用中，您可以创建任意多个。
- en: Go to http://localhost:3000/keystone/posts, click on the **Create Post** button
    and add the content as shown in the following screenshot:![Inserting content using
    control panel](img/image_08_011.jpg)
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://localhost:3000/keystone/posts，单击**创建帖子**按钮，并按照以下截图中显示的内容添加内容：![使用控制面板插入内容](img/image_08_011.jpg)
- en: Sample content on create post screen
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 创建帖子屏幕上的示例内容
- en: Repeat the same process as for *step 4* for the second post entry and change
    the title to **Sample Post Example Without Image II**.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第二个帖子条目，重复*步骤4*的相同过程，并将标题更改为**不带图像的示例帖子示例II**。
- en: Repeat the same process as for *step 4* for the third post entry and change
    the title to **Sample Post Example With Image**, click on the **Upload Image**
    button, and use the file sample-blog-image.png from the sample-images folder.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第三个帖子条目，重复*步骤4*的相同过程，并将标题更改为**带图像的示例帖子示例**，单击**上传图像**按钮，并使用sample-images文件夹中的文件sample-blog-image.png。
- en: Tip
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that you can download the book source code and image samples at any time
    from the Packt Publishing website or directly from the GitHub book repository.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以随时从Packt Publishing网站或直接从GitHub书库下载书籍源代码和图像样本。
- en: 'At the end of *step 6*, our control panel will be as in the following screenshot:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤6*结束时，我们的控制面板将如下截图所示：
- en: '![Inserting content using control panel](img/image_08_012.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![使用控制面板插入内容](img/image_08_012.jpg)'
- en: Posts Control Panel
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 帖子控制面板
- en: As we can see, Keystone.js has a very simple and easy-to-use interface. We can
    extend all the features of the framework to create incredible things.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，Keystone.js具有非常简单和易于使用的界面。我们可以扩展框架的所有功能，以创建令人难以置信的东西。
- en: 'Our Posts page was as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的帖子页面如下：
- en: '![Inserting content using control panel](img/image_08_013.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![使用控制面板插入内容](img/image_08_013.jpg)'
- en: Screenshot of the Blog page
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 博客页面截图
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed some very important concepts about the Keystone
    framework to create applications and websites with a database.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了关于Keystone框架的一些非常重要的概念，以便使用数据库创建应用程序和网站。
- en: We saw how we can extend the framework by creating new models, views, and templates,
    using the internal Keystone API.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何通过使用内部Keystone API来创建新的模型、视图和模板来扩展框架。
- en: In addition, we showed two different ways to customize the CMS using only a
    stylesheet, as well as how to completely alter the page structure and how to insert
    new functionalities, such as the **Fancybox** plugin, to the Images Gallery.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们展示了使用样式表来自定义CMS的两种不同方式，以及如何完全改变页面结构以及如何插入新功能，比如**Fancybox**插件到图片库中。
- en: In the next chapter, we will see how to use Command-line Interface (CLI) for
    JSLint, Concat, Minify, and other tasks, using only the Node Package Manager (NPM)
    to build and deploy the application.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何使用命令行界面（CLI）来进行JSLint、Concat、Minify和其他任务，只使用Node Package Manager（NPM）来构建和部署应用程序。
