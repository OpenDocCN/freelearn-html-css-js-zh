- en: Chapter 11. Bootstrapping a One-Page Marketing Website
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章. 构建单页营销网站
- en: We've developed some significant skills with Bootstrap. Now it's time to bring
    an extra touch of beauty and creativity to helping our clients achieve their full
    online marketing potential. So, let's create a beautiful, one-page, upscale marketing
    site.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经掌握了Bootstrap的一些重要技能。现在是时候为帮助客户实现其全部在线营销潜力增添额外的美感和创意了。所以，让我们创建一个美丽、单页、高端的营销网站。
- en: 'We''ll cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: A large introductory carousel with a customized responsive welcome message
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个大型的定制响应式欢迎信息 introductory carousel
- en: A section for customer reviews with images and captions laid out in the masonry
    format
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包含图片和标题的客户评价部分，采用石砌格式
- en: A features list with large Font Awesome icons
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有大号Font Awesome图标的特性列表
- en: A signup section with custom-designed pricing tables
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有定制设计定价表的注册部分
- en: A ScrollSpy navbar with animated scrolling behavior
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有动画滚动行为的ScrollSpy导航栏
- en: Overview
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概览
- en: We've been approached by a new prospective client. She is stricken by the beauty
    of one-pagers websites that scroll vertically, providing a visually stimulating
    presentation of a product or message with a clear call to action at the end. She
    wants one of these.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遇到了一位新的潜在客户。她被单页滚动网站的美感所吸引，这些网站垂直滚动，以清晰的动作号召结束，提供视觉上令人兴奋的产品或信息展示。她想要这样的一个网站。
- en: 'This client is knowledgeable and discerning. She frequents [http://onepagelove.com](http://onepagelove.com)
    and has a list of her current favorites to hand. Her desired features include:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这位客户知识渊博且挑剔。她经常访问[http://onepagelove.com](http://onepagelove.com)，并随身携带她当前喜欢的列表。她希望的功能包括：
- en: A clean, modern, aesthetic website.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个干净、现代、美观的网站。
- en: An introductory welcome message with a visually intriguing background image.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有视觉上引人入胜的背景图像的 introductory welcome message
- en: An efficient presentation of the main features of her product, accentuated with
    visually appealing icons.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以视觉上吸引人的图标突出展示她产品的主要特性。
- en: Customer testimony presented in a visually stimulating way.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以视觉上吸引人的方式展示的客户证词。
- en: An easy-to-understand overview of three basic packages that a customer can choose
    from. These need to be presented clearly in a way that makes it easy to choose
    the right fit and then sign up!
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以直观易懂的方式概述三种基本套餐，客户可以从中选择。这些需要以清晰的方式展示，以便轻松选择合适的套餐并注册！
- en: Conversions! Everything should draw the user down the page, making it nearly
    impossible to avoid clicking on the Signup button at the end.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转化！一切都应该引导用户向下滚动页面，使得几乎不可能避开点击页面末尾的注册按钮。
- en: To protect the secrecy of her upcoming product launch, our client has chosen
    not to reveal the exact nature of her product or service to us. Rather, she has
    provided mock-ups of the design she would like us to create by using a dummy copy
    for placeholders.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护她即将推出的产品发布的机密性，我们的客户选择不向我们透露她产品或服务的确切性质。相反，她提供了她希望我们创建的设计的样图，并使用占位符的副本。
- en: 'The first section will open with an interesting full-width image, a large welcome
    message, and an invitation to scroll down the page to learn more, as shown in
    the following screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分将以一个有趣的满屏图片、一条大欢迎信息和邀请用户向下滚动页面以了解更多信息的方式开始，如以下截图所示：
- en: '![Overview](img/00225.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![概览](img/00225.jpeg)'
- en: 'The second section will list six key features of the product, which are laid
    out in a three-column grid, and illustrated by appropriate icons as shown in the
    following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分将列出产品的六个关键特性，这些特性以三列网格的形式排列，并如以下截图所示，由适当的图标说明：
- en: '![Overview](img/00226.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![概览](img/00226.jpeg)'
- en: 'The third section will feature client testimonies with photos and quotations
    laid out in the masonry style:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分将展示带有照片和引语的客户证词，采用石砌风格布局：
- en: '![Overview](img/00227.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![概览](img/00227.jpeg)'
- en: 'The fourth and final section will feature three available plans, each with
    a pricing table, and will have a visual emphasis on the center of the three tables,
    as shown in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第四和最后一部分将展示三个可用的计划，每个计划都有一个定价表，并将视觉重点放在三个表格的中心，如以下截图所示：
- en: '![Overview](img/00228.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![概览](img/00228.jpeg)'
- en: Savvy client that she is, she further demands that the design adapt beautifully
    to tablets and phones.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一位精明的客户，她还进一步要求设计能够完美适应平板电脑和手机。
- en: A great plan. No problem. Let's get to work.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一个伟大的计划。没问题。让我们开始工作。
- en: Surveying the starter files
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查起始文件
- en: Let's survey the initial files for this exercise. Create a new project by using
    Bootstrap CLI.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看这个练习的初始文件。通过使用 Bootstrap CLI 创建一个新项目。
- en: 'You can install Bootstrap CLI by running the following command in your console:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在控制台中运行以下命令来安装 Bootstrap CLI：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then you can set up your project by running the following command:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以通过运行以下命令来设置你的项目：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Again, choose the ****An empty new Bootstrap project. Powered by Panini, Sass
    and Gulp**** option when prompted.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，当提示时，选择 ****一个空的新 Bootstrap 项目。由 Panini、Sass 和 Gulp 驱动**** 选项。
- en: '![Surveying the starter files](img/00229.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![查看启动文件](img/00229.jpeg)'
- en: 'There are a few additions you will have to make now:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你需要做一些添加：
- en: Create a new `assets/images` folder.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `assets/images` 文件夹。
- en: 'Copy the files in the `images` folder to the new `assets/images` folder. It
    contains five images:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `images` 文件夹中的文件复制到新的 `assets/images` 文件夹。它包含五张图片：
- en: One logo image, named `logo.png`.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个名为 `logo.png` 的标志图片。
- en: Two background images for the intro section.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 介绍部分的两个背景图片。
- en: Seven images of happy people for the **Impact** section.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**影响**部分七张快乐的人像图片。'
- en: 'The images are automatically copied to the `_site` folder by the `copy` task
    in the `Gulpfile.js` file:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图片会自动通过 `Gulpfile.js` 文件中的 `copy` 任务复制到 `_site` 文件夹：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `html` folder, which contains your Panini HTML templates, should have the
    file and folder structure shown as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 包含你的 Panini HTML 模板的 `html` 文件夹，应该具有以下所示文件和文件夹结构：
- en: '![Surveying the starter files](img/00230.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![查看启动文件](img/00230.jpeg)'
- en: You can read more about Panini at [https://github.com/zurb/panini](https://github.com/zurb/panini).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/zurb/panini](https://github.com/zurb/panini) 上了解更多关于
    Panini 的信息。
- en: Instead of the modifications described above, you can also start with the files
    found in the `Lesson 11/start` folder. In this folder, run the `npm install` and
    `bower install` commands first. After running the `npm` and `bower` commands,
    you can run the `bootstrap watch` or `gulp` command to view the results in your
    browser.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上述修改外，你也可以从 `Lesson 11/start` 文件夹中找到的文件开始。在这个文件夹中，首先运行 `npm install` 和 `bower
    install` 命令。运行 `npm` 和 `bower` 命令后，你可以运行 `bootstrap watch` 或 `gulp` 命令来在浏览器中查看结果。
- en: Viewing the page content
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看页面内容
- en: 'Run the bootstrap watch command and watch the page in your browser at `http://localhost:8080/`.
    You''ll see the following major components in place. Each component got its own
    HTML partial. Of course, at present, they will be displayed with default Bootstrap
    styles, awaiting the customization that needs to be done:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 bootstrap watch 命令，并在浏览器中查看 `http://localhost:8080/` 上的页面。你会看到以下主要组件已经就位。每个组件都有自己的
    HTML 部分文件。当然，目前它们将使用默认的 Bootstrap 样式显示，等待进行必要的自定义：
- en: A fixed top navbar
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个固定的顶部导航栏
- en: A jumbotron with a big welcome message
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有欢迎信息的巨幕
- en: A features section with icons, headings, and text organized in three columns
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包含图标、标题和文本的三列组织的功能部分
- en: The **Impact** section with photos of six happy customers and placeholder content
    for their positive testimony
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**影响**部分包含六张快乐客户的照片和他们的积极证词的占位符内容'
- en: A **Sign up now!** section with three tables laying out the **Basic Plan**,
    **Premium Plan**, and **Pro Plan** packages, with a **Sign up now!** button under
    each
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有三个表格的 **立即注册** 部分，分别列出 **基础计划**、**高级计划** 和 **专业计划** 包，每个下面都有一个 **立即注册**
    按钮
- en: A footer logo
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页脚标志
- en: Photo credits (images are attribution-licensed)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 照片版权（图片是归属许可）
- en: To view the markup, open the corresponding Panini HTML partial in your editor.
    We will get very familiar with the markup in the steps that follow!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看标记，请打开编辑器中相应的 Panini HTML 部分文件。在接下来的步骤中，我们将非常熟悉这些标记！
- en: Adding Font Awesome to our project
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Font Awesome 添加到我们的项目中
- en: '**Font Awesome** gives you scalable vector icons that can instantly be customized:
    size, color, drop shadow, and anything that can be done with the power of CSS.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**Font Awesome** 提供可缩放的矢量图标，可以立即自定义：大小、颜色、阴影，以及任何可以用 CSS 实现的功能。'
- en: 'Here, we simply load Font Awesome''s CSS code from CDN by linking it in the
    `html/layouts/default.html` HTML template as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只是通过在 `html/layouts/default.html` HTML 模板中链接它来从 CDN 加载 Font Awesome 的
    CSS 代码：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Adjusting the navbar
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整导航栏
- en: This design calls for a fixed top navbar with a significant color shift for
    hovered and active links. I've already applied some of these styles by setting
    appropriate variables. Let me point those out, and then we'll move on to make
    some necessary adjustments to the markup.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计需要固定顶部的导航栏，悬停和活动链接有显著的颜色变化。我已经通过设置适当的变量应用了一些这些样式。让我指出这些，然后我们将继续对标记做一些必要的调整。
- en: The `scss/_variables.scss` file is based on Bootstrap's `variables.scss` file.
    I've customized the shades of gray in line with previous projects. You'll see
    these in the topmost section of the file.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`scss/_variables.scss` 文件基于 Bootstrap 的 `variables.scss` 文件。我已经根据以前的项目自定义了灰色阴影。您将在文件的最高部分看到这些。'
- en: 'I''ve further adjusted the following navbar variables, adjusting its height,
    margin, colors, and hover colors specifically for this design:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经进一步调整了以下导航栏变量，调整了其高度、边距、颜色以及悬停颜色，以适应此设计：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The HTML code for the navbar can be found in the `html/includes/page-header.html`
    file and looks like the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 导航栏的 HTML 代码位于 `html/includes/page-header.html` 文件中，如下所示：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see in the preceding code, the navbar also gets the `navbar-fixed-top`
    class, which fixes the navbar to the top of our page. The `navbar-fixed-top` class
    also sets the `border-radius property` to 0\. The `navbar-fixed-top` class is
    one of Bootstrap's navbar classes determining the placement of the navbar; classes
    are available for static or fixed navbars.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，导航栏也获得了 `navbar-fixed-top` 类，这会将导航栏固定在页面顶部。`navbar-fixed-top` 类还将 `border-radius
    属性` 设置为 0。`navbar-fixed-top` 类是 Bootstrap 导航栏类之一，用于确定导航栏的位置；有静态或固定导航栏的类可用。
- en: Along with the custom variables, I've made a few adjustments to the `_navbar.scss`
    file.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 除了自定义变量外，我还对 `_navbar.scss` 文件做了一些调整。
- en: 'I''ve customized the list items in the expanded navbar, adding padding, removing
    the spacing between the links, and transforming the text to uppercase:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经自定义了展开导航栏中的列表项，增加了填充，移除了链接之间的间距，并将文本转换为大写：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Bootstrap''s predefined CSS classes also contain some classes for text transformations.
    More information about these text capitalization classes can be found at the following
    URL: [http://getbootstrap.com/components/utilities/#text-transform](http://getbootstrap.com/components/utilities/#text-transform).'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 预定义的 CSS 类也包含一些用于文本转换的类。有关这些文本大小写转换类的更多信息，可以在以下网址找到：[http://getbootstrap.com/components/utilities/#text-transform](http://getbootstrap.com/components/utilities/#text-transform)。
- en: 'The original logo image file had these settings: width `900` pixels and height
    `259` pixels. We can use these values to calculate the height in Sass when we
    resize its width to `120` pixels as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 原始标志图像文件有这些设置：宽度 `900` 像素和高度 `259` 像素。我们可以使用这些值在将宽度调整为 `120` 像素时，在 Sass 中计算其高度，如下所示：
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: I use the `$brand-image-height` variable to set the line-height of the navbar
    links to ensure that the brand image and links are in line.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 `$brand-image-height` 变量来设置导航栏链接的行高，以确保品牌图像和链接对齐。
- en: Now the total height of the navbar becomes `$brand-image-height + 2 * ($spacer-y
    * 0.75)`. We'll use this value to set the `padding-top` of the HTML body element,
    because the fixed navbar will overlap the body.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，导航栏的总高度变为 `$brand-image-height + 2 * ($spacer-y * 0.75)`。我们将使用此值来设置 HTML
    body 元素的 `padding-top`，因为固定导航栏将覆盖 body。
- en: The `$brand-image-height` variable got pixel units, whilst the `$spacer-y` got
    rem units. Sass can't add up these values with different dimensions. You can remove
    the rem units by dividing with 1rem. Now the unitless value times `$font-size-root`
    will give you the value in pixels.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`$brand-image-height` 变量使用像素单位，而 `$spacer-y` 使用 rem 单位。Sass 无法将不同维度的值相加。您可以通过除以
    1rem 来移除 rem 单位。现在无单位的值乘以 `$font-size-root` 将给出像素值。'
- en: First, create a new `_page-contents.scss` in the main `scss/includes` folder.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在主 `scss/includes` 文件夹中创建一个新的 `_page-contents.scss`。
- en: 'Import it into `main.scss` just as shown in the following line:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下行所示将其导入到 `main.scss` 中：
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then calculating the padding-top value for the HTML body element in scss/app.scss
    will look like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 `scss/app.scss` 中计算 HTML body 元素的 `padding-top` 值如下所示：
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'When combined, the adjusted variables and navbar customizations yield these
    visual results:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当调整后的变量和导航栏自定义一起使用时，会产生以下视觉结果：
- en: '![Adjusting the navbar](img/00231.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![调整导航栏](img/00231.jpeg)'
- en: Let's move on to the jumbotron with its big welcome message.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续到带有大型欢迎信息的巨型轮播。
- en: Customizing the jumbotron
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义巨型轮播
- en: 'The jumbotron is a Bootstrap component highlighting the key message of your
    website. More information about the jumbotron and its HTML markup can be found
    at the following URL: [http://v4-alpha.getbootstrap.com/components/jumbotron](http://v4-alpha.getbootstrap.com/components/jumbotron)/.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: jumbotron 是一个 Bootstrap 组件，用于突出显示您网站的关键信息。有关 jumbotron 及其 HTML 标记的更多信息，可以在以下网址找到：[http://v4-alpha.getbootstrap.com/components/jumbotron](http://v4-alpha.getbootstrap.com/components/jumbotron)/。
- en: In this section, we'll customize the jumbotron to display our client's big welcome
    message with stylistic touches in line with her mockup. This will include adding
    a large background image, enlarging the welcome message text, and then adjusting
    its presentation for multiple viewports.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将自定义 jumbotron 以显示我们客户的欢迎信息，并使用与她原型一致的样式。这包括添加大背景图像、放大欢迎信息文本，然后调整其多视口展示。
- en: 'In `index.html`, find the following markup:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `index.html` 中，找到以下标记：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let''s start by expanding the height of our jumbotron and putting our desired
    background image in place:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先扩展 jumbotron 的高度，并将我们想要的背景图像放置到位：
- en: Open a new custom `Sass partial` file, `scss/includes/_jumbotron.scss`, in your
    editor. Don't forget to import it in the `scss/app.scss` file too.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的编辑器中打开一个新的自定义 `Sass 部分文件`，`scss/includes/_jumbotron.scss`。别忘了在 `scss/app.scss`
    文件中导入它。
- en: 'Now, let''s set the height, background color, and font color for the `#welcome`
    section. While we''re at it, we''ll add some top margin to the button:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们设置 `#welcome` 部分的身高、背景颜色和字体颜色。在此过程中，我们还将为按钮添加一些顶部边距：
- en: '[PRE11]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The background and font color of the jumbotron are set in the `scss/includes/_variable.scss`
    file as follows:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: jumbotron 的背景和字体颜色在 `scss/includes/_variable.scss` 文件中设置如下：
- en: '[PRE12]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `contrast()` Sass function can be found in the `scss/functions_contrast.scss`
    file. The `contrast()` function uses the built-in lightness function of Sass to
    return a light (white) or dark (black) color depending on the lightness of the
    input color.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`contrast()` Sass 函数可以在 `scss/functions_contrast.scss` 文件中找到。`contrast()` 函数使用
    Sass 内置的亮度函数来返回一个亮色（白色）或暗色（黑色），这取决于输入颜色的亮度。'
- en: Note
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`Using color contrasts in your design may improve the accessibility of your
    projects`. When your font colors depend on the background color and change automatically
    when you change the base colors of your design, the changes do not influence readability
    and accessibility. In this chapter, we''ll use a simple `contrast()` function.
    Sass libraries such as Compass have their own contrast function. Also read *Design
    Accessibly, See Differently: Color Contrast Tips And Tools by Cathy O'' Connor*
    at the following URL: [https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/](https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/).'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在设计中使用颜色对比可以提高您项目的可访问性`Using color contrasts in your design may improve the
    accessibility of your projects`。当您的字体颜色依赖于背景颜色，并且当您更改设计的基本颜色时自动更改，这些更改不会影响可读性和可访问性。在本章中，我们将使用简单的
    `contrast()` 函数。Sass 库，如 Compass，有自己的对比函数。还可以阅读以下网址上的 *Design Accessibly, See
    Differently: Color Contrast Tips And Tools by Cathy O'' Connor*：[https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/](https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/)。'
- en: Next, let's use a media query to place our background image for large screens
    and up (991px, according to the current default Bootstrap media query breakpoint
    values).
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们使用媒体查询来放置大屏幕及以上的背景图像（根据当前默认的 Bootstrap 媒体查询断点值，为 991px）。
- en: 'If you like, take a few minutes to open and read the documentation about Bootstrap''s
    responsive breakpoints again. The information can be found at the following URL:
    [getbootstrap.com/layout/overview/#responsive-breakpoints](http://getbootstrap.com/layout/overview/#responsive-breakpoints).
    All media queries are available via Sass mixins.'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您愿意，花几分钟时间再次打开并阅读有关 Bootstrap 响应式断点的文档。相关信息可以在以下网址找到：[getbootstrap.com/layout/overview/#responsive-breakpoints](http://getbootstrap.com/layout/overview/#responsive-breakpoints)。所有媒体查询都可通过
    Sass 混合器使用。
- en: 'We can use the power of Sass to nest a media query within the context of the
    jumbotron selector. Within this media query, we''ll specify the `subway-906x600.jpg`
    image for the background. This image is scaled to be large enough for this breakpoint
    while still loading relatively quickly:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用 Sass 的力量在 jumbotron 选择器的上下文中嵌套一个媒体查询。在这个媒体查询中，我们将指定 `subway-906x600.jpg`
    图像作为背景。此图像被缩放以足够大，同时仍然加载相对较快：
- en: '[PRE13]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Remember that the preceding SCSS code compiles into CSS code as follows:'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记住，前面的 SCSS 代码编译成 CSS 代码如下：
- en: '[PRE14]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Save the file, run the `bootstrap watch` command, and inspect the results in
    your browser. You should see the new background image appear - but only within
    a window width of `991px` or less.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，运行`bootstrap watch`命令，并在浏览器中检查结果。你应该看到新背景图像出现——但仅限于窗口宽度为`991px`或更小。
- en: 'Next, let''s expand the height of the jumbotron for tablet-sized viewports.
    We''ll write a media query only the medium grid, which increases the `jumbotron`
    element''s height to `480px` within this breakpoint:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们扩展全屏高度以适应平板尺寸的视口。我们将只对中等网格编写媒体查询，将`jumbotron`元素的内部高度增加到`480px`：
- en: '[PRE15]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Save the file, run the `bootstrap watch` command, and watch the results in your
    browser. You should see the jumbotron grow to `480px` in height for viewports
    between 768 px and `991px` in width.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，运行`bootstrap watch`命令，并在浏览器中查看结果。你应该看到全屏高度增长到`480px`，适用于宽度在768px到`991px`之间的视口。
- en: 'Now, for medium and larger (greater than 992px in width) viewports, we''ll
    increase the height of the jumbotron to 540px. At this width, we''ll use the larger
    version of the `subway-1600x1060.jpg` background image. While we''re at it, we''ll
    set the background size to `cover`:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，对于中等和更大的（宽度大于992px）视口，我们将全屏的高度增加到540px。在这个宽度上，我们将使用`subway-1600x1060.jpg`背景图像的较大版本。同时，我们将背景大小设置为`cover`：
- en: '[PRE16]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: With these style rules in place, large viewports will have a 1600px-wide background
    image.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这些样式规则到位后，大视口将有一个1600px宽的背景图像。
- en: Save the file, and test it in your browser. You should find that we have our
    major breakpoints nicely covered.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，并在浏览器中测试它。你应该发现我们已经很好地覆盖了主要的断点。
- en: 'After these steps, the Jumbotron should look as shown in the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成这些步骤后，全屏应该看起来像以下截图所示：
- en: '![Customizing the jumbotron](img/00232.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![自定义全屏](img/00232.jpeg)'
- en: 'Notice that we''ve set a max-width for the small background image by using
    the `@include media-breakpoint-down(md)` mixin call. The preceding may break the
    mobile-first approach of Bootstrap. Media queries can be used to conditional-load
    background images based on screen size and so reduce load time and bandwidth on
    mobile phones and tablets. Read Media Query & Asset Downloading Results by Tim
    Kadlec for more information about testing a browser''s file requests and media
    queries. You can find the test result at the following URL: [https://timkadlec.com/2012/04/media-query-asset-downloading-results/](https://timkadlec.com/2012/04/media-query-asset-downloading-results/).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们通过使用`@include media-breakpoint-down(md)`混合调用设置了小背景图像的最大宽度。这可能会破坏Bootstrap的移动优先方法。可以使用媒体查询根据屏幕大小有条件地加载背景图像，从而减少手机和平板电脑的加载时间和带宽。更多信息请参阅Tim
    Kadlec的《媒体查询与资产下载结果》一文，您可以在以下URL找到测试结果：[https://timkadlec.com/2012/04/media-query-asset-downloading-results/](https://timkadlec.com/2012/04/media-query-asset-downloading-results/)。
- en: Next, we can style our big marketing message for maximum impact.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以为我们的大型营销消息进行样式设计，以达到最大的影响。
- en: Refining the jumbotron message design
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼全屏消息设计
- en: Our client wants the welcome message in the jumbotron to be extra big. Bootstrap's
    display-3 styles in the jumbotron increase the font size by 350 % globally. We
    want to enhance the results further. We also want to constrain the width of the
    message on wide screens and put a dark translucent box behind it.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户希望全屏欢迎消息更大。Bootstrap的全屏显示-3样式在全屏中全局增加了350%的字体大小。我们希望进一步增强效果。我们还希望限制宽屏上消息的宽度，并在其后面放置一个深色半透明框。
- en: 'In our current results, we should reduce the font size for small and extra-small
    screens. We can, however, improve the contrast of our text by placing a translucent
    dark overlay behind the text. Let''s do that here by performing the following
    steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们当前的结果中，我们应该减小小屏幕和超小屏幕的字体大小。然而，我们可以通过在文本后面放置一个半透明的深色覆盖层来提高文本的对比度。让我们在这里执行以下步骤：
- en: 'In `index.html`, add a new `div` tag inside the jumbotron `container` class
    and above the `h1` heading and paragraph. Give this new `div` tag a class of `welcome-message`:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.html`中，在全屏`container`类和`h1`标题及段落上方添加一个新的`div`标签。给这个新的`div`标签一个`welcome-message`类：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, to create some styles for this new div, in the  `scss/includes/_jumbotron.sccs`
    file we will perform the following steps:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了为这个新的`div`创建一些样式，在`scss/includes/_jumbotron.scss`文件中我们将执行以下步骤：
- en: Give it a translucent dark background using HSLA
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用HSLA给它一个半透明的深色背景
- en: Stretch it to fill the full width and height of our jumbotron by positioning
    it as `absolute` and setting its top, bottom, left, and right values to `0`
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将其定位为`absolute`并设置其top、bottom、left和right值为`0`来将其拉伸以填充巨幕的整个宽度和高度
- en: Position the jumbotron itself as `relative` using the `container` selector inside
    the jumbotron so that it will anchor our absolute-positioned welcome message
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`container`选择器将`jumbotron`本身定位为`relative`，以便它将锚定我们的绝对定位欢迎信息
- en: Add internal padding to the welcome message
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向欢迎信息添加内部填充
- en: 'Use the provided `strong` tag to transform the word **Big** to uppercase and
    increase its font size:'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用提供的`strong`标签将单词**Big**转换为大写并增加其字体大小：
- en: '[PRE18]'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save the file, run the bootstrap watch command, and inspect the results in your
    browser. You should see the background darken and the text stand out more clearly
    against it, as shown in the following screenshot:![Refining the jumbotron message
    design](img/00233.jpeg)
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，运行bootstrap watch命令，并在浏览器中检查结果。你应该看到以下截图所示的背景变暗，文本与背景对比更加清晰：![精炼巨幕信息设计](img/00233.jpeg)
- en: 'Finally, let''s address the medium and large viewports. We''ll constrain the
    width a bit more. This can all be done under `with Sass` media query mixins again:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们处理中等和大型视口。我们将在`Sass`媒体查询混合中进一步限制宽度：
- en: '[PRE19]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Again, save the file, and take a look in your browser. You should see the following
    result in a large viewport:![Refining the jumbotron message design](img/00234.jpeg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，保存文件，并在浏览器中查看。你应该在大视口中看到以下结果：![精炼巨幕信息设计](img/00234.jpeg)
- en: Mission accomplished!
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 任务完成！
- en: Our customized jumbotron is finished, providing the large welcome message our
    client has asked for, including the ability to adapt to tablet- and phone-sized
    viewports, which we've accomplished efficiently with a mobile-first approach.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的定制巨幕已经完成，提供了客户要求的大欢迎信息，包括适应平板电脑和手机尺寸视口的能力，我们通过移动优先的方法高效地实现了这一点。
- en: Now we're ready to move on to the features list.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备进入功能列表。
- en: Beautifying the features list
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美化功能列表
- en: 'We need to enlarge the icons, align the text at the center, and iron out the
    grid layout. Let''s review the markup structure for the features list:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要放大图标，居中文本，并整理网格布局。让我们回顾功能列表的标记结构：
- en: '[PRE20]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Each feature with its icon, heading, and paragraph is wrapped in a `div` tag
    with two classes: `features-item` and `col-md-4`.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 每个功能及其图标、标题和段落都被包裹在一个带有两个类`features-item`和`col-md-4`的`div`标签中。
- en: 'With this in mind, let''s write the styles we need:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个想法的基础上，让我们编写我们需要的样式：
- en: 'Create `scss/includes/_features.scss`, a new Sass partial, and do not forget
    to import it in the scss/app.scss file:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`scss/includes/_features.scss`，一个新的Sass部分，并且不要忘记在`scss/app.scss`文件中导入它：
- en: '[PRE21]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'With `scss/includes/_features.scss` opened in your editor, add a new section
    with a comment for our `#features` section:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的编辑器中打开`scss/includes/_features.scss`，为我们的`#features`部分添加一个带有注释的新部分：
- en: '[PRE22]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now let''s focus on the `.features-item` section by aligning the text at the
    center, adding padding, providing a set height to keep the floating items from
    interfering with each other, and increasing the `.icon` font size to `90px`:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过居中文本、添加填充、提供一个固定高度以防止浮动元素相互干扰以及将`.icon`字体大小增加到`90px`来关注`.features-item`部分：
- en: '[PRE23]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Save the file, and test the results in your browser. Run the `bootstrap watch`
    command first, if you haven't already done so. You should see the following result
    in a medium viewport:![Beautifying the features list](img/00235.jpeg)
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，并在浏览器中测试结果。如果您还没有这样做，请先运行`bootstrap watch`命令。你应该在中等视口中看到以下结果：![美化功能列表](img/00235.jpeg)
- en: That's a great start! Now let's adapt our features section for small screens.
    Currently, our `.features-item` section includes a class of `col-md-4`. We can
    shift our small-screen layout to two columns, as shown in the following screenshot,
    by adding a class of `col-sm-6`:![Beautifying the features list](img/00236.jpeg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个很好的开始！现在让我们调整我们的功能部分以适应小屏幕。目前，我们的`.features-item`部分包含一个`col-md-4`类。我们可以通过添加一个`col-sm-6`类将我们的小屏幕布局改为两列，如下面的截图所示：![美化功能列表](img/00236.jpeg)
- en: And then, of course, they'll arrange themselves in a single column for extra-small
    screens.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，当然，它们将排列成单列以适应超小屏幕。
- en: Unfortunately, at the upper range of extra-small screens, 500px to 767px, the
    full-width layout allows the descriptive text to range too wide.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不幸的是，在超小屏幕的上限，500px到767px，全宽布局允许描述性文本范围太宽。
- en: 'We can fix this by adding a media query within which we set a maximum width
    on the `.features-item` section and center the content by setting the horizontal
    margins to auto:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过添加一个媒体查询来解决这个问题，在这个查询中我们为`.features-item`部分设置最大宽度，并通过设置水平边距为自动来居中内容：
- en: '[PRE24]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Bootstrap also includes a  `m-x-auto` class for horizontally centering fixed-width
    block level content. The  `m-x-auto` class replaces the center-block class and
    mixin from Bootstrap 3.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bootstrap还包括一个`m-x-auto`类，用于水平居中固定宽度的块级内容。`m-x-auto`类取代了Bootstrap 3中的center-block类和mixin。
- en: With these lines in place, our `.features-item` elements retain their desired
    dimensions across all viewports! On small viewports, our features will look like
    this:![Beautifying the features list](img/00237.jpeg)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这些行设置到位后，我们的`.features-item`元素在所有视口中都保留其所需的尺寸！在小视口中，我们的功能将看起来像这样：![美化功能列表](img/00237.jpeg)
- en: At this point, we have satisfied our client's demands for this section of her
    website! We're ready to move on to the customer reviews.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经满足了客户对她网站该部分的需求！我们准备继续进行客户评价。
- en: Tackling customer reviews
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应对客户评价
- en: Our next section, named **Impact**, presents reviews from happy customers. In
    this section, we see smiling faces of happy customers with excerpts from their
    commentary about our client's product.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下一个部分，命名为**影响**，展示了快乐客户的评价。在这个部分，我们看到了快乐客户的微笑面孔以及他们对我们客户产品的评论摘录。
- en: We'll use the **Card** module for this section again. The Card module is a flexible
    and extensible content container which replaces the panels, thumbnails, and wells
    used in earlier versions of Bootstrap.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次使用**卡片**模块来处理这个部分。卡片模块是一个灵活且可扩展的内容容器，它取代了Bootstrap早期版本中使用的面板、缩略图和井。
- en: The Card module to create the masonry grid layout. A masonry grid layout works
    by placing elements in optimal position based on available vertical space, sort
    of like a mason fitting stones in a wall. You'll create a Masonry grid layout
    for the Impact section again. The Bootstrap masonry solution uses CSS only. If
    you need a JavaScript solution which works in older browsers too, you can use
    a JavaScript masonry plugin available at [http://masonry.desandro.com](http://masonry.desandro.com).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用卡片模块创建网格布局。网格布局通过根据可用垂直空间放置元素来优化位置，有点像石匠在墙上放置石头。您将再次为影响部分创建一个Masonry网格布局。Bootstrap的网格解决方案仅使用CSS。如果您需要一个在旧浏览器中也工作的JavaScript解决方案，您可以使用一个可用的JavaScript
    masonry插件，该插件位于[http://masonry.desandro.com](http://masonry.desandro.com)。
- en: 'The Card columns use the CSS multi-column layout; you can read more about it
    at the following URL: [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts).'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 卡片列使用CSS多列布局；您可以在以下URL了解更多信息：[https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts)。
- en: The masonry grid layout is not available in IE9 and below as they have no support
    for the column-* CSS properties.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在IE9及以下版本中，无法使用网格布局，因为它们不支持`column-*` CSS属性。
- en: 'So the initial markup starts as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，初始标记开始如下：
- en: '[PRE25]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Each review is marked up as follows using the `hreview` microformat:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 每个评价都使用`hreview`微格式标记如下：
- en: Note
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Microformats are an extension of HTML to mark up things such as people, organizations,
    products, and reviews. Sites using microformats publish a standard API, which
    can be consumed by search engines, browsers, and other tools. **h-review** is
    a simple, open format for publishing reviews on the Web. More information can
    be found at the following URL: [http://microformats.org/](http://microformats.org/).'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 微格式是HTML的扩展，用于标记诸如人物、组织、产品和评价等事物。使用微格式的网站发布一个标准API，可以被搜索引擎、浏览器和其他工具消费。**h-review**是一个简单的、开放的格式，用于在网络上发布评价。更多信息可以在以下URL找到：[http://microformats.org/](http://microformats.org/)。
- en: '[PRE26]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Each card image gets the `img-fluid` class to make the image responsive and
    fit the cards.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 每张卡片图像都获得`img-fluid`类，以使图像响应式并适应卡片。
- en: The class turns an image into a card background and overlays the card's text
    by setting the position property of the image to absolute and the card's position
    property to relative.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 该类将图像转换为卡片背景，并通过将图像的位置属性设置为绝对和卡片的定位属性设置为相对来覆盖卡片的文本。
- en: Each card (having the card class) will be automatically arranged in the grid
    due to the card-columns class of the selector.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 每张卡片（具有卡片类）将自动排列在网格中，这是由于选择器的`card-columns`类。
- en: 'The card-columns class creates CSS columns for the small grid and up by default.
    On the extra-small grid, the grid item will stack. Use the following SCSS code
    in the scss/includes/_impact.scss file for two columns on the small grid:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`card-columns`类默认为小网格及以上创建CSS列。在超小网格上，网格项将堆叠。在`scss/includes/_impact.scss`文件中使用以下SCSS代码为小网格上的两列：'
- en: '[PRE27]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: You may read about the `hreview` microformat at [http://microformats.org/wiki/hreview-examples](http://microformats.org/wiki/hreview-examples).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://microformats.org/wiki/hreview-examples](http://microformats.org/wiki/hreview-examples)上了解关于`hreview`微格式的信息。
- en: 'Save your modifications and run the `bootstrap watch` command. You''ll find
    that the Impact section should now look like the following screenshot:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的修改并运行`bootstrap watch`命令。你会发现影响部分现在应该看起来像以下截图：
- en: '![Tackling customer reviews](img/00238.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![处理客户评价](img/00238.jpeg)'
- en: Both in terms of semantics and presentational starting points, we're off to
    a good start.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从语义和呈现起点来看，我们有一个良好的开端。
- en: Because we wanted to arrive at a masonry layout, our images are a mixture of
    portrait and landscape aspect ratios. We've made them all of equal width in order
    to provide enough room for bright faces and textual overlays with short laudatory
    statements.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们想要达到一个类似杂志的布局，我们的图片是肖像和横幅宽高比的混合。我们使它们都具有相同的宽度，以便为明亮的面孔和带有简短赞美语句的文本叠加提供足够的空间。
- en: Before addressing the layout for larger viewports, let's start by tackling captions.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理更大视口布局之前，让我们先解决标题问题。
- en: Positioning and styling captions
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定位和样式化标题
- en: 'Let''s begin by positioning our captions as overlays on top of their respective
    customer photos:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从将我们的标题定位为各自客户照片上的叠加层开始：
- en: 'While editing the `scss/includes/_impact.scss` file, add a new comment and
    selector for the `#impact` section:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑`scss/includes/_impact.scss`文件时，为`#impact`部分添加一个新的注释和选择器：
- en: '[PRE28]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, we can work on the captions. We''ll add a translucent background and position
    them as `absolute` at the bottom of each image:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以着手处理标题。我们将添加半透明背景，并将它们定位在每个图像的底部作为绝对位置：
- en: '[PRE29]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now we can focus on the review text and specify the margin, border, font family,
    font size, and color:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以专注于评价文本，并指定边距、边框、字体家族、字体大小和颜色：
- en: '[PRE30]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Next, specify styles for the reviewer''s name, which appears below the review
    text:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，指定出现在评价文本下方评论者名称的样式：
- en: '[PRE31]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Save the file, run the `bootstrap watch` command, and check your progress.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，运行`bootstrap watch`命令，并检查你的进度。
- en: You should end up with an **Impact** section like that shown in the following
    screenshot:![Positioning and styling captions](img/00239.jpeg)
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你最终应该得到一个像以下截图所示的**影响**部分：![定位和样式化标题](img/00239.jpeg)
- en: Not bad! However, we can do it one step better.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 还不错！然而，我们可以做得更好一步。
- en: Refining the caption position
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化标题位置
- en: Looking carefully at the available open space in the preceding screenshots and
    examining the overlap variations at various viewport widths in your responsive
    grid, you may want to position each caption in a way that works best for each
    customer's photo.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细观察前述截图中的可用开放空间，并检查响应式网格中各种视口宽度下的重叠变化，你可能希望以最适合每位客户照片的方式定位每个标题。
- en: This is where the `review-item-1`, `review-item-2`, and so on classes become
    relevant and helpful, as we may use these specific classes to position each caption
    in a way that fits best with its image.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`review-item-1`、`review-item-2`等类变得相关和有用的地方，因为我们可以使用这些特定的类以最适合其图像的方式定位每个标题。
- en: 'To demonstrate the positions of the caption, I''ve added the following lines
    in the `scss/includes/_impact.scss` file:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示标题的位置，我在`scss/includes/_impact.scss`文件中添加了以下行：
- en: '[PRE32]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The preceding markup adjusts the absolute positioning of each second and third
    caption, which yields the results shown in the following screenshot:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 前述标记调整了每个第二个和第三个标题的绝对定位，从而产生了以下截图所示的结果：
- en: '![Refining the caption position](img/00240.jpeg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![优化标题位置](img/00240.jpeg)'
- en: Instead of using the `:nth-child()` selectors in the above, you can also write
    your own SCSS to position each specific caption.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述内容中，除了使用`:nth-child()`选择器外，你也可以编写自己的SCSS来定位每个特定的标题。
- en: Adjusting for tiny screens
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整小屏幕
- en: On the extra-small grid, the reviews are stacked, and on the small grid we'll
    arrange them in two columns.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在超小网格上，评价是堆叠的，而在小网格上，我们将它们排列成两列。
- en: 'First, we''ll reduce the font size of the captions for the small grid. To reduce
    the font size, insert the following SCSS code into the `scss/includes/_impact.scss`
    file:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将减小小网格中标题的字体大小。要减小字体大小，请将以下 SCSS 代码插入到 `scss/includes/_impact.scss` 文件中：
- en: '[PRE33]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'On the small and extra-small grid, we''ll only show the first four reviews.
    Hide the last reviews by default by using the following SCSS code:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在小和超小网格中，我们只显示前四个评论。默认隐藏最后评论，可以使用以下 SCSS 代码：
- en: '[PRE34]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Save the file and then test the results in your browser.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，然后在浏览器中测试结果。
- en: Voilà! The customer reviews are now performing entirely in line with our client's
    desires.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！客户评论现在完全符合我们客户的期望。
- en: 'Now to take care of the last major item in our client''s desired home page
    design: the pricing tables.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 现在来处理我们客户希望主页设计中最后一个重要项目：定价表格。
- en: Creating attention-grabbing pricing tables
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建引人注目的定价表格
- en: 'Let''s revisit the mockup of how our client would like the pricing tables to
    look on desktop-sized screens:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下客户希望桌面屏幕大小的定价表格的布局：
- en: '![Creating attention-grabbing pricing tables](img/00241.jpeg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![创建引人注目的定价表格](img/00241.jpeg)'
- en: Let's see how close we can get to the desired result, and what we can work out
    for other viewport sizes.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们能否接近期望的结果，以及我们可以为其他视口大小做些什么。
- en: Setting up the variables, files, and markup
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置变量、文件和标记
- en: 'As shown in the preceding screenshot, there are a few tables in this design.
    We can begin by adjusting a few fundamental variables for all tables. These are
    found in Bootstrap''s `_variables.scss file`. Search for the tables section and
    adjust the variables for background, accented rows, and borders as desired. I''ve
    made these adjustments as shown in the following lines of code, and saved them
    in the local `scss/includes/_variables.scss` file:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一张截图所示，这个设计中包含几个表格。我们可以先调整所有表格的一些基本变量。这些变量可以在 Bootstrap 的 `_variables.scss`
    文件中找到。搜索表格部分，并根据需要调整背景、强调行和边框的变量。我已经按照以下代码行进行了调整，并将它们保存在本地的 `scss/includes/_variables.scss`
    文件中：
- en: '[PRE35]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Save the file, and run the `bootstrap watch` command to see the result as shown
    in the following screenshot:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，并运行 `bootstrap watch` 命令以查看以下截图所示的结果：
- en: '![Setting up the variables, files, and markup](img/00242.jpeg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![设置变量、文件和标记](img/00242.jpeg)'
- en: That's a start. Now we need to write more specific styles.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个开始。现在我们需要编写更具体的样式。
- en: 'To carry the custom styles, let''s create a new Sass file for these pricing
    tables:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了携带自定义样式，让我们为这些定价表格创建一个新的 Sass 文件：
- en: Create `_pricing-tables.scss` in the main `scss/includes` folder.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主 `scss/includes` 文件夹中创建 `_pricing-tables.scss`。
- en: 'Import it into `main.scss` just after `the import of the _impact.scss file`
    as shown in the following line:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下行中将其导入到 `main.scss` 中，紧接在 `_impact.scss 文件导入之后，如下所示：
- en: '[PRE36]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Open `_pricing-tables.less` in your editor and begin writing your new styles.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的编辑器中打开 `_pricing-tables.less` 文件并开始编写您的新样式。
- en: But before we begin writing styles, let's review the markup that we'll be working
    with.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写样式之前，让我们回顾一下我们将要处理的标记。
- en: 'We have the following special classes already provided in the markup on the
    parent element of each respective table:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在每个相应表格的父元素上提供了以下特殊类：
- en: '`package package-basic`'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package package-basic`'
- en: '`package package-premium`'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package package-premium`'
- en: '`package package-pro`'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package package-pro`'
- en: 'Thus, for the first table, you''ll see the following markup on its parent `div`:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于第一个表格，您将在其父 `div` 上看到以下标记：
- en: '[PRE37]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Notice that the `table` and `table-striped` classes in the above HTML code
    are part of Bootstrap''s styles to display content. You can use these styles by
    just adding the table base class to any `<table>` element, Extend the base class
    with custom styles or by including a modifier class such as the `table-striped`
    class. Read more about tables in Bootstrap at the following URL: [http://getbootstrap.com/content/tables/http://v4-alpha.getbootstrap.com/content/tables/](http://getbootstrap.com/content/tables/http://v4-alpha.getbootstrap.com/content/tables/).'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到上述 HTML 代码中的 `table` 和 `table-striped` 类是 Bootstrap 样式的一部分，用于显示内容。您可以通过仅向任何
    `<table>` 元素添加表格基本类来使用这些样式，通过扩展基本类添加自定义样式，或者通过包括修饰类（如 `table-striped` 类）来实现。有关
    Bootstrap 中的表格的更多信息，请参阅以下网址：[http://getbootstrap.com/content/tables/http://v4-alpha.getbootstrap.com/content/tables/](http://getbootstrap.com/content/tables/http://v4-alpha.getbootstrap.com/content/tables/)。
- en: Similarly, we'll use `package package-premium` and `package package-pro` for
    the second and third tables, respectively.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们将分别使用 `package package-premium` 和 `package package-pro` 为第二和第三个表格。
- en: These parent containers obviously also provide basic layout instructions using
    the `col-md-4` class to set up a three-column layout in medium viewports and up.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这些父容器显然也使用 `col-md-4` 类在中等视口及以上设置了一个三列布局的基本布局指令。
- en: 'Next, we will observe the markup for each table. We see that the basic `table`
    and `table-striped` classes have been applied:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将观察每个表格的标记。我们看到已经应用了基本的 `table` 和 `table-striped` 类：
- en: '[PRE38]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The table uses the `<thead>` element for its topmost block. Within this, there
    is `<th>` spanning two columns, with an `<h2>` heading for the package name and
    `<div class="price">` to mark up the dollar amount:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 表格使用 `<thead>` 元素作为其最顶部的块。在这个块中，有一个跨越两列的 `<th>` 元素，其中包含用于包名的 `<h2>` 标题和 `<div
    class="price">` 用于标记美元金额：
- en: '[PRE39]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Next is the `tfoot` tag with the **Sign up now!** button:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是包含“现在注册！”按钮的 `tfoot` 标签：
- en: '[PRE40]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Then there is the `tbody` tag with the list of features laid out in a straightforward
    manner in rows with two columns:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是包含特性列表的 `tbody` 标签，这些特性以两列的行以直接的方式排列：
- en: '[PRE41]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'And finally, of course, the closing tags for the `table` and parent `div` tags:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当然，`table` 和父 `div` 标签的闭合标签：
- en: '[PRE42]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Each table repeats this basic structure. This gives us what we need to start
    work!
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 每个表格都重复这种基本结构。这为我们开始工作提供了所需的内容！
- en: Beautifying the table head
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 美化表格标题
- en: 'To beautify the `thead` element of all of our tables, we''ll do the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 为了美化所有表格的 `thead` 元素，我们将执行以下操作：
- en: Align the text at the center
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 居中对齐文本
- en: Add a background color; for now, add a gray color that is approximately a midtone
    similar to the colors we'll apply to the final version
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加背景颜色；目前，添加一个灰色，它大约是中间色调，类似于我们将应用到最终版本中的颜色
- en: Turn the font color white
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将字体颜色改为白色
- en: Convert the `h2` heading to uppercase
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `h2` 标题转换为大写
- en: Increase the size of the price table
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加价格表的大小
- en: Add the necessary padding all around the tables
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在表格周围添加必要的填充
- en: 'We can apply many of these touches with the following lines of SCSS code. We''ll
    specify the `#signup` section as the context for these special table styles:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用以下 SCSS 代码应用许多这些细节。我们将指定 `#signup` 部分为这些特殊表格样式的上下文：
- en: '[PRE43]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'In short, we''ve accomplished everything except increasing the size of the
    price tables. We can get started on this by adding the following lines of code,
    which are still nested within our `#signup table` selector:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们已经完成了所有的事情，除了增加价格表的大小。我们可以通过添加以下代码行开始这项工作，这些代码仍然嵌套在 `#signup table` 选择器中：
- en: '[PRE44]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This yields the following result:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下结果：
- en: '![Beautifying the table head](img/00243.jpeg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![美化表格标题](img/00243.jpeg)'
- en: 'This is close to our desired result, but we need to decrease the size of the
    dollar sign. We can nest the first letter within our styles for `.price`:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这已经接近我们期望的结果，但我们需要减小美元符号的大小。我们可以在 `.price` 样式中嵌套第一个字母：
- en: '[PRE45]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '`::first-letter` is a pseudo element, which allows you to style the first letter
    in an element without needing to stick a `<span>` tag around that first letter
    in your HTML. You can read more about this pseudo element at the following URL:
    [https://css-tricks.com/almanac/selectors/f/first-letter/](https://css-tricks.com/almanac/selectors/f/first-letter/).'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`::first-letter` 是一个伪元素，它允许你在不需要在 HTML 中的第一个字母周围放置 `<span>` 标签的情况下，为元素中的第一个字母设置样式。你可以在以下网址了解更多关于这个伪元素的信息：[https://css-tricks.com/almanac/selectors/f/first-letter/](https://css-tricks.com/almanac/selectors/f/first-letter/).'
- en: 'These lines reduce the dollar sign to half its size and align it at the top.
    The following screenshot shows the result:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这些行将美元符号的大小减半并对其顶部对齐。以下截图显示了结果：
- en: '![Beautifying the table head](img/00244.jpeg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![美化表格标题](img/00244.jpeg)'
- en: Styling the table body and foot
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 样式化表格主体和页脚
- en: 'Continuing to focus on the styles that apply to all three pricing tables, let''s
    make the following adjustments:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 继续关注适用于所有三个定价表格的样式，让我们做出以下调整：
- en: Add left and right padding to the list of features
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为特性列表添加左右内边距
- en: Stretch the button to full width
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将按钮拉伸到全宽
- en: Increase the button size
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加按钮大小
- en: 'We can accomplish this by adding the following rules:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过添加以下规则来实现这一点：
- en: '[PRE46]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In the preceding SCSS code, the `@extend` feature of Sass has been used to extend
    the button with Bootstrap's styles for large buttons. Bootstrap itself avoids
    the `@extend` feature, but you can use it.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的 SCSS 代码中，Sass 的 `@extend` 功能已被用来扩展按钮以使用 Bootstrap 的大按钮样式。Bootstrap 本身避免使用
    `@extend` 功能，但你也可以使用它。
- en: Tip
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Alternatively, you can use Bootsstrap''s `button-size()` mixin to set the large
    button styles. Notice that I have set font-size: 1.25em; afterward. The button
    mixin sets the font size in rem units and we want the font size to scale with
    its parent.'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '或者，您可以使用 Bootstrap 的 `button-size()` 混合来设置大按钮样式。请注意，我在此之后设置了 font-size: 1.25em;。按钮混合使用
    rem 单位设置字体大小，而我们希望字体大小与其父元素成比例。'
- en: 'Save the file, run the `bootstrap watch` command, and you should see the following
    result:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，运行 `bootstrap watch` 命令，您应该看到以下结果：
- en: '![Styling the table body and foot](img/00245.jpeg)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![设置表格主体和页脚样式](img/00245.jpeg)'
- en: We're now ready to add styles to differentiate our three packages.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备好为我们的三个包装添加样式以区分它们。
- en: Differentiating the packages
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区分包装
- en: 'Let''s begin by giving each package the desired color for the table head and
    the **Sign up now!** button. Our provided mockup uses blue for the **Basic**,
    green for the **Premium**, and red for the **Pro** packages. Let''s prepare our
    color scheme by using the chosen color values in new variables for primary, secondary,
    and tertiary brand colors, as shown in the following lines of code:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先为每个包装指定表格头部和 **立即注册！** 按钮的所需颜色。我们的提供的原型使用蓝色为 **基础**，绿色为 **高级**，红色为 **专业**。让我们通过以下代码行中的所选颜色值来准备我们的颜色方案，为一级、二级和三级品牌颜色创建新的变量，如下所示：
- en: '[PRE47]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Having set up these colors, we can efficiently apply them to the appropriate
    `thead` and `button` elements. We''ll use the distinctive class that we applied
    earlier to each table''s parent element, that is, `package-basic`, `package-premium`,
    and `package-pro`:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置了这些颜色后，我们可以高效地将它们应用到适当的 `thead` 和 `button` 元素上。我们将使用之前应用到每个表格父元素上的独特类，即 `package-basic`、`package-premium`
    和 `package-pro`：
- en: 'In the `scss/includes/_pricing-tables.scss` file, begin a new section with
    a comment:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `scss/includes/_pricing-tables.scss` 文件中，以注释开始一个新的部分：
- en: '[PRE48]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'We''ll apply the primary brand color to the `.package-basic` table using the
    $`brand-primary` variable; we''ll try it first on the `thead th` element:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用 $`brand-primary` 变量将主品牌颜色应用到 `.package-basic` 表格上；我们首先尝试将其应用到 `thead th`
    元素上：
- en: '[PRE49]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Then, apply the primary brand color to the `thead th` element''s button. Here,
    we''ll use the `.button-variant()` mixin from the `bootstrap/mixins.less` file
    to efficiently apply styles to the `:hover` and `:active` states. The mixin takes
    three parameters: color, background color, and border color. We''ll define them
    as follows:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将主品牌颜色应用到 `thead th` 元素的按钮上。在这里，我们将使用来自 `bootstrap/mixins.less` 文件的 `.button-variant()`
    混合来高效地应用 `:hover` 和 `:active` 状态的样式。该混合函数接受三个参数：颜色、背景颜色和边框颜色。我们将如下定义它们：
- en: '[PRE50]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: When compiled, this concise mixin will generate styles for the button and its
    hover and active states!
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当编译时，这个简洁的混合将生成按钮及其悬停和活动状态的样式！
- en: Tip
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For a reminder of how the `button-variant()` mixin works, consult the `bootstrap/scss/mixins/_buttons.scss
    file`, where the mixin is defined, and then `bootstrap/scss/_buttons.scss`, where
    it is used to define the default Bootstrap button classes.
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了了解 `button-variant()` 混合的工作方式，请参考定义该混合的 `bootstrap/scss/mixins/_buttons.scss`
    文件，然后是使用该混合定义默认 Bootstrap 按钮类的 `bootstrap/scss/_buttons.scss` 文件。
- en: 'Now we need to repeat this for our `.package-premium` table; this time, however,
    use the $`brand-secondary` variable:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要为我们的 `.package-premium` 表格重复此操作；然而，这次使用 $`brand-secondary` 变量：
- en: '[PRE51]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Finally, we''ll apply the tertiary brand color to the `.package-pro` table
    using the $`brand-tertiary` variable:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将使用 $`brand-tertiary` 变量将三级品牌颜色应用到 `.package-pro` 表格上：
- en: '[PRE52]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: You might have noticed that the preceding steps and code are very repetitive.
    Sass can help you to code your CSS code DRY (**D**o not **R**epeat **Y**ourself).
    By wrapping the names in a Sass map and using an `@each` loop, you'll have to
    write the code only once.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能已经注意到，前面的步骤和代码非常重复。Sass 可以帮助您编写 CSS 代码 DRY（**D**o not **R**epeat **Y**ourself）。通过将名称包裹在
    Sass 映射中并使用 `@each` 循环，您只需编写一次代码。
- en: Note
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can also read my *Sass and Compass Designer''s Cookbook* to learn how to
    write efficient, maintainable, and reusable CSS code with Sass for your web development
    projects. You can find it at the following URL: [https://www.packtpub.com/web-development/sass-and-compass-designers-cookbook](https://www.packtpub.com/web-development/sass-and-compass-designers-cookbook).'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以阅读我的 *Sass 和 Compass 设计师食谱*，了解如何使用 Sass 为您的 Web 开发项目编写高效、可维护和可重用的 CSS 代码。您可以在以下网址找到它：[https://www.packtpub.com/web-development/sass-and-compass-designers-cookbook](https://www.packtpub.com/web-development/sass-and-compass-designers-cookbook)。
- en: Save the file, and run the `bootstrap watch` command if you have not already
    run it. You should see the new colors we applied to our tables:![Differentiating
    the packages](img/00246.jpeg)
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件，如果你还没有运行，请运行`bootstrap watch`命令。你应该能看到我们应用到表格中的新颜色：![区分不同的包](img/00246.jpeg)
- en: Nice!
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 很好！
- en: Now let's check how our tables respond to various viewport widths.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查我们的表格如何响应不同的视口宽度。
- en: Adjusting for small viewports
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调整小视口
- en: Thanks to the attention Bootstrap gives to responsive design, our tables perform
    quite well across viewport breakpoints. We've already seen how our tables fare
    in the medium breakpoint range. In large screens, the tables expand wider. In
    narrow viewports, the tables stack up vertically, quite nicely.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢Bootstrap对响应式设计的关注，我们的表格在视口断点处表现相当好。我们已经看到了表格在中断点范围内的表现。在大屏幕上，表格会扩展得更宽。在窄视口中，表格垂直堆叠，相当不错。
- en: However, there is an awkward range of width approximately between 480px and
    768px, where the tables expand to fill the full width of the screen. Clearly,
    they become too wide.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在约480px到768px的尴尬宽度范围内，表格会扩展以填充整个屏幕宽度。显然，它们变得太宽了。
- en: 'Because we have three tables, there is no benefit involved in having a two-column
    layout at this dimension. Instead, let''s constrain the width of our tables and
    align them at the center with `auto` left and right margins. We''ll use the media-breakpoint-down()
    media query mixin to set `400px` as our maximum width, and set the horizontal
    margins to auto to keep our tables at the center of the window:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有三个表格，在这个尺寸下有两个列布局没有好处。相反，让我们限制表格的宽度，并通过设置左右边距为`auto`来将它们居中对齐。我们将使用`media-breakpoint-down()`媒体查询混合器将最大宽度设置为`400px`，并将水平边距设置为自动，以保持表格在窗口中心：
- en: '[PRE53]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: You cannot center the tables by using the `@`extend feature of Sass to extend
    the `.m-x-auto` class, because you may not @extend an outer selector from within
    `@media`.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能使用Sass的`@extend`功能来通过扩展`.m-x-auto`类来居中表格，因为你不能在`@media`内部从外部选择器中@extend。
- en: 'On the medium grid, the tables are too wide for the grid columns, so we reduce
    the total font size for only the medium grid by using the following SCSS code:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在中等网格中，表格的宽度超过了网格列的宽度，因此我们通过以下SCSS代码仅减少中等网格的总字体大小：
- en: '[PRE54]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Save the file, and test the results in your browser. You should see nicely
    constrained tables aligned at the center within the window! The following screenshot
    shows our result:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，并在浏览器中测试结果。你应该看到在窗口中居中对齐的、很好地约束的表格！以下截图显示了我们的结果：
- en: At this point, our tables are differentiated by color and are responsive. However,
    one last step remains. In the medium and large viewport widths, we want the premium
    plan to stand out.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们的表格通过颜色区分，并且是响应式的。然而，还有一个最后的步骤。在中等和大型视口宽度下，我们希望高级计划脱颖而出。
- en: Providing a visual hierarchy to our tables
  id: totrans-313
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为我们的表格提供视觉层次
- en: If we look back at the mockup, we see that the design - at least for desktop-sized
    viewports - calls for visual emphasis on the central Premium plan by increasing
    its size and bringing it visually into the foreground.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回顾一下原型，我们会看到设计——至少对于桌面大小的视口——要求通过增加大小并将其视觉上带到前景来对中心的高级计划进行视觉强调。
- en: 'This can be accomplished with some adjustments to padding, margins, and font
    sizes. We''ll do this within a media query for medium viewports and up:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过调整填充、边距和字体大小来实现。我们将在中等视口及以上的媒体查询中完成这项工作：
- en: '[PRE55]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Our first aim is to bring the tables closer to one another. This can be done
    by removing the padding (the gutter of the grid) between the grid columns:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的首要目标是让表格彼此更靠近。这可以通过移除网格列之间的填充（网格的沟槽）来实现：
- en: '[PRE56]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Then we can enlarge the font size for the price information in the premium
    block as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以将高级块中的价格信息字体大小放大，如下所示：
- en: '[PRE57]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Nested within this media query, we can first reduce the widths of our basic
    and pro tables (the first and third) and add a little margin to the top to push
    them down a bit:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个媒体查询内部，我们可以首先减少基本表格和高级表格（第一和第三个）的宽度，并在顶部添加一点边距以稍微将其推下：
- en: '[PRE58]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Next, let''s enhance the font size of our premium table and add padding to
    its button:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们增强我们的高级表格的字体大小，并为其按钮添加填充：
- en: '[PRE59]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Save the file, and inspect the results in the browser. You should see the following
    result in large viewports of 1,200px and above:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件，并在浏览器中检查结果。你应该在大于或等于1,200px的大视口中看到以下结果：
- en: '![Providing a visual hierarchy to our tables](img/00247.jpeg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![为我们的表格提供视觉层次](img/00247.jpeg)'
- en: That's it! We've accomplished the last major challenge in our client's design.
    Now let's tidy things up by applying those little touches that hold it all together.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！我们已经完成了客户设计中最后一个主要挑战。现在让我们通过应用那些使其完整的小细节来整理一下。
- en: Adding the final touches
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加最终细节
- en: In this section, we will enhance the details that hold our design together.
    First, we'll enhance the `h1` headings for each of our major sections and add
    some needed top and bottom padding to each section. Then, we'll enhance the navigation
    experience by adding ScrollSpy to the navbar and using jQuery to animate the scrolling
    action when triggered by a click on the navbar item.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将增强保持我们设计一致性的细节。首先，我们将增强我们每个主要部分的`h1`标题，并为每个部分添加一些必要的顶部和底部填充。然后，我们将通过向navbar添加ScrollSpy和使用jQuery在点击navbar项时触发滚动动作来增强导航体验。
- en: Let's begin by enhancing the size and contrast of our major `h1` headings for
    each section and increasing the top and bottom padding. If you pause to look at
    these `h1` headings, you may note that they are rather lackluster.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先从增强每个部分的`h1`标题的大小和对比度开始，并增加顶部和底部填充。如果你停下来看看这些`h1`标题，你可能会注意到它们相当平淡。
- en: 'Enlarging these headings, bringing the contrast down a little, and providing
    extra padding will make a big difference. We only want these rules to apply to
    the **Features**, **Impact**, and **Sign up** sections. We will select these by
    ID:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 扩大这些标题，稍微降低对比度，并添加额外的填充，这将产生很大的影响。我们只想将这些规则应用于**功能**、**影响**和**注册**部分。我们将通过ID选择这些部分：
- en: Open the `scss/includes/_page-contents.scss` file again in your editor.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次在你的编辑器中打开`scss/includes/_page-contents.scss`文件。
- en: 'At the top of the file, after the rule applying top padding to the body, add
    the following lines:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件顶部，在应用顶部填充的规则之后，添加以下行：
- en: '[PRE60]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Here, we''ve done the following:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里，我们做了以下几件事：
- en: Added top and bottom padding to these sections
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为这些部分添加了顶部和底部填充
- en: Significantly increased the size of the `h1` heading
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显著增加了`h1`标题的大小
- en: Reduced the heavy contrast of that heading
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少了那个标题的强烈对比
- en: Ensured that the heading has room to breathe by setting the line height and
    bottom padding
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过设置行高和底部填充确保标题有足够的空间呼吸
- en: Save your work and notice the difference in your browser:![Adding the final
    touches](img/00248.jpeg)
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的工作，并在浏览器中注意差异：![添加最终细节](img/00248.jpeg)
- en: 'This yields a nice result across almost all viewport sizes. For small viewports,
    the `h1` font size is now a bit large. So, let''s adjust this. As we do not want
    these styles to flow up to larger viewports, we''ll wrap the styles we have already
    written in a query by limiting them to larger viewports. Finally, the refactored
    and mobile-first SCSS code should look like this:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 这几乎在所有视口大小上都会产生很好的结果。对于小视口，`h1`字体大小现在有点大。所以，让我们调整一下。由于我们不想这些样式流向更大的视口，我们将通过限制它们只适用于更大的视口来包裹我们已编写的样式。最后，重构的以移动优先的SCSS代码应该看起来像这样：
- en: '[PRE61]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The following screenshot shows our result:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们的结果：
- en: '![Adding the final touches](img/00249.jpeg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![添加最终细节](img/00249.jpeg)'
- en: This is a much improved result! Now we'll enhance the navigation experience.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个大幅改进的结果！现在我们将增强导航体验。
- en: Adding ScrollSpy to the navbar
  id: totrans-346
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向navbar添加ScrollSpy
- en: Let's configure our top navbar to indicate our location on the page. We'll add
    Bootstrap's ScrollSpy behavior to the navbar.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们配置我们的顶部navbar以指示我们在页面上的位置。我们将向navbar添加Bootstrap的ScrollSpy行为。
- en: Note
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Refer to Bootstrap's ScrollSpy plugin documentation at [http://getbootstrap.com/javascript/#scrollspy](http://getbootstrap.com/javascript/#scrollspy).
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 参考Bootstrap的ScrollSpy插件文档[http://getbootstrap.com/javascript/#scrollspy](http://getbootstrap.com/javascript/#scrollspy)。
- en: By default, the ScrollSpy plugin requires a Bootstrap nav component. Bootstrap's
    navbar contains a nav component already. The relative position is required too.
    You should set position:relative; in your CSS for the element you're spying on.
    In our situation, we'll have to set the relative position for the body element.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，ScrollSpy插件需要Bootstrap导航组件。Bootstrap的navbar已经包含了一个导航组件。还需要相对定位。你应该在你的CSS中为你要监视的元素设置`position:relative;`。在我们的情况下，我们将必须为body元素设置相对定位。
- en: You can easily initiate the ScrollSpy plugin by adding data-attributes in the
    HTML code. First add data-spy="scroll" to the element you want to spy and then
    add the data-target attribute with the ID or class of the parent element of any
    Bootstrap .nav component.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在HTML代码中添加data-attributes轻松启动ScrollSpy插件。首先，将data-spy="scroll"添加到您想要监视的元素，然后添加data-target属性，并指定任何Bootstrap
    .nav组件父元素的ID或class。
- en: Note
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Data-attributes in HTML5 allow use to store extra information into standard
    semantic HTML elements. Read more about data-attributes in HTML5 at the following
    URL: [https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes).'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5中的data-attributes允许我们在标准语义HTML元素中存储额外信息。有关HTML5中data-attributes的更多信息，请参阅以下网址：[https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes)。
- en: 'ScrollSpy requires a resolvable ID target in our HTML code. We''ve already
    added the target in the preceding steps. For instance, the Intro section had `id="welcome"`
    in the section element as follows:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: ScrollSpy在我们的HTML代码中需要一个可解析的ID目标。我们已经在前面步骤中添加了目标。例如，简介部分在元素中具有`id="welcome"`，如下所示：
- en: '[PRE62]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The above HTML code can be found in the `html/includes/intro.html` file. The
    `id="welcome"` declaration corresponds with the resolvable id targets in the navbar
    links, as can be seen in the `html/includes/page-header.html file`. The HTML code
    of the `Welcome` should look as follows now:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 上述HTML代码可以在`html/includes/intro.html`文件中找到。`id="welcome"`声明与navbar链接中的可解析id目标相对应，如`html/includes/page-header.html`文件中所示。现在`Welcome`的HTML代码应如下所示：
- en: '[PRE63]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Now perform the following steps to initiate the ScrollSpy plugin in our project:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行以下步骤以在我们的项目中启动ScrollSpy插件：
- en: 'Edit the `scss/app.scss` file to set the relative position of the body element.
    Add the following SCSS code at the end of this file:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`scss/app.scss`文件以设置body元素的相对位置。在文件末尾添加以下SCSS代码：
- en: '[PRE64]'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Then open `index.html` in your editor.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在您的编辑器中打开`index.html`。
- en: 'Add these ScrollSpy data-attributes to the `body` tag:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下ScrollSpy data-attributes添加到`body`标签中：
- en: '[PRE65]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Edit the file and set the resolvable ID targets in the navbar links. At the
    end, your HTML code should look like this:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑文件并设置navbar链接中的可解析ID目标。最后，您的HTML代码应如下所示：
- en: '[PRE66]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'With the resolvable id targets and the new data-attributes in place, save the
    file, refresh your browser, and scroll up and down the page. You should see your
    main navigation respond as it should, indicating your position on the page as
    shown in the following screenshot:'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在设置了可解析的id目标和新的data-attributes后，保存文件，刷新浏览器，并上下滚动页面。您应该看到主导航如预期的那样响应，显示您在页面上的位置，如下面的截图所示：
- en: '![Adding ScrollSpy to the navbar](img/00250.jpeg)'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将ScrollSpy添加到navbar](img/00250.jpeg)'
- en: 'In the preceding step, we used data-attributes to initiate Bootstrap ScrollSpy
    behavior. You can also initiate the plugin via JavaScript by performing the following
    steps:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们使用了data-attributes来启动Bootstrap ScrollSpy行为。您也可以通过执行以下步骤通过JavaScript启动插件：
- en: 'First add the `position: relative`; declaration for the body element in your
    CSS/SCSS:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '首先为body元素添加`position: relative`;声明到您的CSS/SCSS中：'
- en: '[PRE67]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Then call the ScrollSpy via JavaScript/jQuery as follows:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过以下方式通过JavaScript/jQuery调用ScrollSpy：
- en: '[PRE68]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Animating the scroll
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滚动动画
- en: Now let's animate the page scrolls that will be triggered by clicking on the
    navbar page anchors. We'll use jQuery to accomplish this.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们动画化由点击navbar页面锚点触发的页面滚动。我们将使用jQuery来完成此操作。
- en: Note
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'jQuery is a JavaScript library and provides you with an API for HTML document
    traversal and manipulation, event handling, and animations. The `jQuery animate()`
    API call lets you create custom animations of CSS properties. You can read more
    about jQuery''s animations at the following URL: [http://api.jquery.com/animate/](http://api.jquery.com/animate/).'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery是一个JavaScript库，它为您提供了HTML文档遍历和操作、事件处理和动画的API。`jQuery animate()` API调用允许您创建CSS属性的定制动画。有关jQuery动画的更多信息，请参阅以下网址：[http://api.jquery.com/animate/](http://api.jquery.com/animate/)。
- en: 'Animating the page scroll requires adding a few lines to our `main.js` file:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现页面滚动动画，需要在我们的`main.js`文件中添加几行代码：
- en: Open `js/main.js`.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`js/main.js`。
- en: 'Add the following lines within `$(document).ready(function() {`:'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`$(document).ready(function() {`内添加以下行：
- en: '[PRE69]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Save the file and refresh your browser.
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并刷新浏览器。
- en: '[PRE70]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Summary
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Take a moment to scroll back and forth through our page, appreciating its details
    and resizing it to see how it adjusts to viewport dimensions.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 请花点时间来回滚动我们的页面，欣赏其细节，并调整其大小以查看它如何适应视口尺寸。
- en: When we consider the variety of features packed into this page - and that they
    all work responsively across desktop-, tablet-, and phone-sized viewports - it's
    not a bad accomplishment!
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们考虑这个页面中包含的各种功能——并且它们都在桌面、平板和手机尺寸的视口中响应式工作——这真是一个不错的成就！
- en: To recap, we have given our client a beautiful, one-page marketing site with
    a large welcome section using Bootstrap's jumbotron styles, a bold background
    image, and responsive customizations, a features list making use of large-sized
    Font Awesome icons, a section of customer reviews with images and captions laid
    out in the masonry format, which adapts beautifully across viewports. We ended
    up with a signup section with custom-designed pricing tables built on Bootstrap
    styles and enhanced further to provide a visual hierarchy for medium and large
    viewports. As a finishing touch, we added a ScrollSpy-equipped navbar with animated
    scrolling behavior provided by a bit of extra jQuery. With this design, we have
    reached a point where there is nothing we can't do with Bootstrap.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾一下，我们为我们的客户提供了一个美丽的一页营销网站，其中包含使用Bootstrap的jumbotron样式的宽敞欢迎部分，一个醒目的背景图像和响应式定制，一个使用大号Font
    Awesome图标的特性列表，一个包含图像和标题的顾客评论部分，这些图像和标题以瀑布流格式排列，完美适应各种视口。我们最终得到了一个包含自定义设计的定价表和基于Bootstrap样式的注册部分，并进一步增强了它以提供中大型视口的视觉层次结构。作为最后的点缀，我们添加了一个带有动画滚动行为的ScrollSpy导航栏，这是通过一点额外的jQuery实现的。有了这个设计，我们已经达到了一个点，即我们几乎可以用Bootstrap做到任何事情。
- en: Across this and previous projects, we have accomplished a great deal. We have
    learned the ins and outs of Bootstrap, and folded Bootstrap Sass and JavaScript
    into our own custom set of project files. We then used the robust Font Awesome
    icons. We also tweaked, customized, and otherwise innovated on Bootstrap styles
    to arrive the exact results we were seeking.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个和之前的项目中，我们取得了巨大的成就。我们学习了Bootstrap的方方面面，并将Bootstrap Sass和JavaScript整合到我们自己的项目文件集中。然后我们使用了强大的Font
    Awesome图标。我们还调整、定制并创新了Bootstrap样式，以实现我们寻求的确切结果。
- en: With this, we've come to the end of this learning journey. I hope you'd a smooth
    journey and gained a lot of knowledge on Bootstrap.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们结束了这次学习之旅。我希望你有一个顺利的旅程，并在Bootstrap上获得了大量的知识。
- en: I wish you all the best for your future projects. Keep learning and exploring!
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 我祝愿你们在未来的项目中一切顺利。继续学习和探索！
- en: Assessments
  id: totrans-390
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Which of the following command is used to install Bootstrap CLI?
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个命令用于安装Bootstrap CLI？
- en: '`npm install -i bootstrap-cli`'
  id: totrans-392
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npm install -i bootstrap-cli`'
- en: '`npm install -g bootstrap-cli`'
  id: totrans-393
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npm install -g bootstrap-cli`'
- en: '`npm install -d bootstrap-cli`'
  id: totrans-394
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npm install -d bootstrap-cli`'
- en: '`npm install -w bootstrap-cli`'
  id: totrans-395
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`npm install -w bootstrap-cli`'
- en: Which of the following code is used to copy assets from source folder to destination
    folder?
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个代码用于将源文件夹中的资产复制到目标文件夹？
- en: '`gulp.task(''copy'', function() { gulp.src([''assets/*/**'']).pipe(gulp.dest(''_site''));
    });`'
  id: totrans-397
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gulp.task(''copy'', function() { gulp.src([''assets/*/**'']).pipe(gulp.dest(''_site''));
    });`'
- en: '`gulp.task(''copy'', function() { gulp.src(''assets/**/*'').pipe(gulp.dest(''_site''));
    });`'
  id: totrans-398
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gulp.task(''copy'', function() { gulp.src(''assets/**/*'').pipe(gulp.dest(''_site''));
    });`'
- en: '`gulp.task(''copy'', function() { gulp.src(''assets/*/**'').pipe(gulp.dest(''_site''));
    });`'
  id: totrans-399
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gulp.task(''copy'', function() { gulp.src(''assets/*/**'').pipe(gulp.dest(''_site''));
    });`'
- en: '`gulp.task(''copy'', function() { gulp.src([''assets/**/*'']).pipe(gulp.dest(''_site''));
    });`'
  id: totrans-400
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gulp.task(''copy'', function() { gulp.src([''assets/**/*'']).pipe(gulp.dest(''_site''));
    });`'
- en: Which of the following command is used to load Font Awesome's CSS code from
    CDN?
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个命令用于从CDN加载Font Awesome的CSS代码？
- en: '`<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
  id: totrans-402
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
- en: '`<a href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
  id: totrans-403
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<a href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
- en: '`<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
  id: totrans-404
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
- en: '`<a rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
  id: totrans-405
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<a rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">`'
- en: Which of the Bootstrap's navbar classes determines the placement of the navbar?
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个Bootstrap的导航栏类决定了导航栏的位置？
- en: '`navbar-fixed-bottom`'
  id: totrans-407
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`navbar-fixed-bottom`'
- en: '`navbar-fixed-left`'
  id: totrans-408
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`navbar-fixed-left`'
- en: '`navbar-fixed-top`'
  id: totrans-409
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`navbar-fixed-top`'
- en: '`navbar-fixed-right`'
  id: totrans-410
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`navbar-fixed-right`'
- en: Which of the following uses the built-in lightness function of Sass to return
    a light (white) or dark (black) color depending on the lightness of the input
    color?
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个使用了 Sass 内置的亮度函数来根据输入颜色的亮度返回浅色（白色）或深色（黑色）？
- en: '`contrast()`'
  id: totrans-412
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`contrast()`'
- en: '`lighten()`'
  id: totrans-413
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`lighten()`'
- en: '`darken()`'
  id: totrans-414
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`darken()`'
- en: '`saturate()`'
  id: totrans-415
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`saturate()`'
