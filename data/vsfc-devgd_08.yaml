- en: Chapter 8. Best Practices for Visualforce Developments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：Visualforce开发的最佳实践
- en: 'Visualforce pages are the replacement for Salesforce standard pages. When we
    use Visualforce pages, the delay experiences and unexpected behaviors must not
    be there. Therefore, we have to follow the best practices to improve the user
    experience and coding standards during the Visualforce developments, in order
    to improve the user experience. There are some situations and components where
    we can apply some best practices. This chapter will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce页面是Salesforce标准页面的替代品。当我们使用Visualforce页面时，不应存在延迟体验和意外行为。因此，我们必须遵循最佳实践，在Visualforce开发过程中提高用户体验和编码标准，以改善用户体验。在某些情况和组件中，我们可以应用一些最佳实践。本章将涵盖以下主题：
- en: Accessing component IDs
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问组件ID
- en: Page block components
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面块组件
- en: Controllers and controller extensions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制器和控制器扩展
- en: Improving Visualforce's performance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高Visualforce的性能
- en: Static resources
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态资源
- en: Rendering PDFs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渲染PDF
- en: Using component facets
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用组件面
- en: Let's build Visualforce pages with super performance…
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建具有超级性能的Visualforce页面…
- en: Accessing component IDs
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问组件ID
- en: 'When we refer Visualforce components in JavaScript, the ID attribute plays
    a major role. Every Visualforce component has an ID attribute. The ID attribute
    must be specified to a particular component in order to refer to it in JavaScript
    and it is used to bind the two components together. When the page is rendered,
    this ID attribute is a part of DOM ID of the particular component. The ID attribute
    must be unique as well. The following best practices are applied for accessing
    component IDs:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在JavaScript中引用Visualforce组件时，ID属性起着重要作用。每个Visualforce组件都有一个ID属性。为了在JavaScript中引用它，必须指定特定组件的ID属性，并且它用于将两个组件绑定在一起。当页面渲染时，这个ID属性是特定组件DOM
    ID的一部分。ID属性也必须是唯一的。以下是一些用于访问组件ID的最佳实践：
- en: Use the `$Component` global variable to simplify access. For an example, when
    we have an input field with `id="inputOne"` within a page block with `id="blockOne"`,
    we can access the input field with the `$Component.blockOne.inputOne` expression.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`$Component`全局变量来简化访问。例如，当我们有一个`id="inputOne"`的输入字段在`id="blockOne"`的页面块内时，我们可以使用`$Component.blockOne.inputOne`表达式来访问输入字段。
- en: No need to specify an ID for a component you want to access if it is an ancestor
    or sibling to the `$Component` variable in the Visualforce component's hierarchy.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要访问的组件是Visualforce组件层次结构中`$Component`变量的祖先或兄弟，则无需为该组件指定ID。
- en: Page block components
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面块组件
- en: 'The `<apex:pageBlockSectionItem>` component can have only two child components.
    With the customer requirements and the developing requirements, there can be more
    than two child elements inside `<apex:pageBlockSectionItem>`. Using `<apex:outputPanel>`
    we can add more than two elements in `<apex:pageBlockSectionItem>` as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`<apex:pageBlockSectionItem>`组件只能有两个子组件。根据客户需求和开发需求，`<apex:pageBlockSectionItem>`内部可以有超过两个子元素。使用`<apex:outputPanel>`，我们可以在`<apex:pageBlockSectionItem>`中添加超过两个元素，如下所示：'
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Controllers and controller extensions
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制器和控制器扩展
- en: 'When we are developing controllers and controller extensions that are associated
    to Visualforce pages, we need to adhere to the following best practices:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开发与Visualforce页面关联的控制器和控制器扩展时，我们需要遵守以下最佳实践：
- en: By using the `with sharing` keyword, we can enforce the sharing rules in controllers.
    Then the code will execute in the user mode instead of the system mode.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用`with sharing`关键字，我们可以在控制器中强制执行共享规则。然后代码将在用户模式下执行，而不是系统模式下。
- en: We must not depend on the setter method to be executed before the constructor.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不应依赖于在构造函数之前执行setter方法。
- en: We must not depend on the execution order or side effects while creating custom
    methods in a custom controller or a controller extension.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在自定义控制器或控制器扩展中创建自定义方法时，我们不应依赖于执行顺序或副作用。
- en: Do not use DML operations inside a loop.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在循环中使用DML操作。
- en: 'While performing record filtering, add filters in the following order:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在执行记录过滤时，按以下顺序添加过滤器：
- en: In SOQL
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在SOQL中
- en: In Apex
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Apex中
- en: In Visualforce
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Visualforce中
- en: If possible, calculations must be performed in SOQL instead of Apex.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，必须在SOQL中而不是Apex中进行计算。
- en: Improving Visualforce's performance
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高Visualforce的性能
- en: 'The performance of a Visualforce page is a key factor to consider in development
    because performance is a reason that effects the end user''s satisfaction of the
    application. The following are the best practices to improve Visualforce''s performance:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Visualforce 页面的性能是开发中需要考虑的关键因素，因为性能是影响最终用户对应用程序满意度的原因。以下是一些提高 Visualforce 性能的最佳实践：
- en: Use only one `<apex:form>` tag per Visualforce page because each `<apex:form>`
    tag adds a view state to the page. A Visualforce page has a limit for view state
    size that is 135 KB. We can decrease the loading time of a Visualforce page by
    reducing the view state size.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个 Visualforce 页面只使用一个 `<apex:form>` 标签，因为每个 `<apex:form>` 标签都会给页面添加一个视图状态。Visualforce
    页面的视图状态大小限制为 135 KB。我们可以通过减少视图状态的大小来缩短 Visualforce 页面的加载时间。
- en: Try to use the transient keyword in custom controller as much as possible. The
    state is not maintained for transient instance variables. If a particular instance
    is used only in the page request, then it must not be a part of view state. It
    will help to reduce the view state size.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能地在自定义控制器中使用 transient 关键字。transient 实例变量不维护状态。如果特定实例仅在页面请求中使用，则它不应是视图状态的一部分。这将有助于减少视图状态的大小。
- en: When using an SOQL query to refer data of a particular object, use only the
    relevant data in the SOQL query.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用 SOQL 查询引用特定对象的属性时，只使用 SOQL 查询中的相关数据。
- en: When designing the Visualforce page, do not overload the page with excessive
    functionality and more data. Overloaded pages will increase the view state, page
    size, heap size, and risk hitting the governor limits for the view state.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设计 Visualforce 页面时，不要让页面承载过多的功能和数据。过载的页面会增加视图状态、页面大小、堆大小，并可能导致视图状态达到限制器限制。
- en: 'To decrease the loading time of a Visualforce page:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了减少 Visualforce 页面的加载时间：
- en: Do not use SOQL queries in getter methods
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在 getter 方法中使用 SOQL 查询。
- en: Frequently-used or global data must be cached
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经常使用或全局数据必须进行缓存。
- en: Reduce the number of records displayed in the page by using the built-in pagination
    of `standardSetControllers` or limiting the data in SOQL queries
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用 `standardSetControllers` 的内置分页或限制 SOQL 查询中的数据来减少页面中显示的记录数。
- en: We can increase the time interval for calling the Apex controller by using the
    `<apex:actionPoller>` component to reduce the delays in multiple concurrent requests.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过使用 `<apex:actionPoller>` 组件来减少多个并发请求的延迟，从而增加调用 Apex 控制器的间隔时间。
- en: Use the SOQL `OFFSET` to implement the pagination of a specific subset of results
    within SOQL.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 SOQL 的 `OFFSET` 实现特定子集结果的分页。
- en: If we have large quantities of read-only data in an organization, then we must
    use a custom object or custom setting to store that data.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个组织中有大量只读数据，那么我们必须使用自定义对象或自定义设置来存储这些数据。
- en: Use `<apex:repeat>` to iterate over large collections.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `<apex:repeat>` 在大型集合上迭代。
- en: Do not hardcode pick list values in the Visualforce page, and use the controller
    to add them to a `selectOption` list.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在 Visualforce 页面中硬编码选择列表值，而是使用控制器将它们添加到 `selectOption` 列表中。
- en: 'Use the lazy loading approach to reduce or delay the loading of data according
    to the essentiality. In lazy loading, the essential features will be loaded first
    and others will be delayed until the user''s action. To lazy load, we can:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用延迟加载方法，根据必要性减少或延迟数据的加载。在延迟加载中，基本功能将首先加载，其他功能将延迟到用户操作时再加载。为了实现延迟加载，我们可以：
- en: Use the `rerender` attribute to perform a partial page load
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `rerender` 属性执行部分页面加载。
- en: Use JavaScript remoting to call actions in the controller
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JavaScript remoting 调用控制器中的操作。
- en: 'When using CSS in Visualforce pages, we have to be careful. The performance
    of Visualforce is directly affected by the optimization of the Visualforce. Here
    are some tips to increase the performance of CSS:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Visualforce 页面中使用 CSS 时，我们必须小心。Visualforce 的性能直接受到 Visualforce 优化的影响。以下是一些提高
    CSS 性能的技巧：
- en: Use separate CSS files and refer to them in the Visualforce page (instead of
    writing the CSS code in the page itself). This will reduce the file size.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单独的 CSS 文件，并在 Visualforce 页面中引用它们（而不是在页面本身中编写 CSS 代码）。这将减小文件大小。
- en: Use a single CSS file instead of using multiple CSS files. This will reduce
    the number of HTTP requests.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单个 CSS 文件而不是多个 CSS 文件。这将减少 HTTP 请求的数量。
- en: Refer to CSS files via static resources because it has a in-built caching mechanism.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过静态资源引用 CSS 文件，因为它具有内置的缓存机制。
- en: When creating pages that have totally customized CSS (not using Salesforce CSS),
    do not forget to set the attribute of `showHeaders` and `standardStylesheets`
    of the `<apex:page>` tag to `false`.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当创建完全自定义 CSS 的页面（不使用 Salesforce CSS）时，不要忘记将 `<apex:page>` 标签的 `showHeaders`
    和 `standardStylesheets` 属性设置为 `false`。
- en: 'When using JavaScript in Visualforce pages, we have to optimize them to increase
    the performance of Visualforce. Here are some tips to increase the performance
    of JavaScript:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在 Visualforce 页面中使用 JavaScript 时，我们必须优化它们以提高 Visualforce 的性能。以下是一些提高 JavaScript
    性能的提示：
- en: Use separate JavaScript files and refer to them in the Visualforce page (instead
    of writing JavaScript in the page itself). This will reduce the size of individual
    pages taking advantage of browser caching.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单独的 JavaScript 文件并在 Visualforce 页面中引用它们（而不是在页面本身中编写 JavaScript）。这将减少利用浏览器缓存的单个页面的大小。
- en: Use a single JavaScript file instead of using multiple JavaScript files. This
    will reduce the number of HTTP requests and remove duplicate functions.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单个 JavaScript 文件而不是使用多个 JavaScript 文件。这将减少 HTTP 请求的数量并移除重复的函数。
- en: Use customized versions of JavaScript libraries which include only the required
    functions. This will reduce the file size.
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用仅包含所需功能的自定义版本的 JavaScript 库。这将减少文件大小。
- en: If possible, use the `<script>` tag to include JavaScript in the Visualforce
    page and place it right before the `</apex:page>` closing tag. This will avoid
    loading of JavaScript before any other content in the Visualforce page.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，使用 `<script>` 标签在 Visualforce 页面中包含 JavaScript，并将其放置在 `</apex:page>` 关闭标签之前。这将避免在
    Visualforce 页面的任何其他内容之前加载 JavaScript。
- en: Eliminate unwanted comments and whitespaces to reduce the file size and for
    faster downloads.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除不必要的注释和空白，以减少文件大小并加快下载速度。
- en: Use the `escapeSingleQuotes` method to avoid SOQL and SOSL injection attacks.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `escapeSingleQuotes` 方法来避免 SOQL 和 SOSL 注入攻击。
- en: 'Images frequently play a major role in a Visualforce page. Therefore we have
    to optimize the usage of images in Visualforce pages using the following tips:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图片在 Visualforce 页面中经常扮演重要角色。因此，我们必须使用以下提示来优化 Visualforce 页面中图片的使用：
- en: Use the CSS sprites instead of individual images. Using sprites, we can combine
    images (similar sized) into a single file. This will reduce the number of images
    used in the page and reduce the number of HTTP requests.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CSS Sprites 而不是单个图片。使用 Sprites，我们可以将（相似大小的）图片合并成一个文件。这将减少页面中使用的图片数量并减少 HTTP
    请求的数量。
- en: If possible, try to reduce the use of images and motivate the use of CSS.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，尽量减少图片的使用并鼓励使用 CSS。
- en: Use static resources to refer to images in a Visualforce page.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用静态资源来引用 Visualforce 页面中的图片。
- en: Tip
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: View state cannot be viewed with tools such as Firebug because the view state
    data is encrypted.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于视图状态数据被加密，无法使用 Firebug 等工具查看视图状态。
- en: Static resources
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态资源
- en: 'Static resources have an in-built caching feature and use the content distribution
    network built into Salesforce. The following are the advantages of using static
    resources to refer to CSS files, images, and JavaScript:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 静态资源具有内置的缓存功能，并使用 Salesforce 内置的内容分发网络。使用静态资源引用 CSS 文件、图片和 JavaScript 的以下是一些优点：
- en: 'Use a static resource to display the content of another static resource with
    the action attribute of the `<apex:page>` tag. By doing this we can redirect from
    a Visualforce page to a static resource. Suppose we have a PDF as a static resource
    (named as `helpPdf`) and we use that static resource in the action attribute of
    the `<apex:page>` tag as follows:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用静态资源通过 `<apex:page>` 标签的动作属性显示另一个静态资源的内容。通过这样做，我们可以从 Visualforce 页面重定向到静态资源。假设我们有一个名为
    `helpPdf` 的 PDF 作为静态资源，我们将其用作 `<apex:page>` 标签的动作属性，如下所示：
- en: '[PRE1]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `URLFOR` function plays a major role here. The redirection will not work
    properly without the `URLFOR` function. This is not limited to PDF; we can use
    any static resource to redirect.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`URLFOR` 函数在这里起着重要作用。没有 `URLFOR` 函数，重定向将无法正常工作。这不仅仅限于 PDF；我们可以使用任何静态资源进行重定向。'
- en: '[PRE2]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Rendering PDFs
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 渲染 PDF
- en: When we use components in a Visualforce page and the page is rendered as a PDF,
    these components do not always work. We must not use components that depend on
    JavaScript actions and Salesforce standard stylesheets.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在 Visualforce 页面中使用组件并且页面被渲染为 PDF 时，这些组件并不总是工作。我们不得使用依赖于 JavaScript 动作和 Salesforce
    标准样式的组件。
- en: 'The following components are safe to use in PDF rendering:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下组件在 PDF 渲染中是安全的：
- en: '`<apex:composition>` (as long as the page contains PDF-safe components)'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:composition>`（只要页面包含安全的PDF组件）'
- en: '`<apex:facet>`'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:facet>`'
- en: '`<apex:dataList>`'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:dataList>`'
- en: '`<apex:define>`'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:define>`'
- en: '`<apex:include>` (as long as the page contains PDF-safe components)'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:include>`（只要页面包含安全的PDF组件）'
- en: '`<apex:insert>`'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:insert>`'
- en: '`<apex:image>`'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:image>`'
- en: '`<apex:repeat>`'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:repeat>`'
- en: '`<apex:outputLabel>`'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:outputLabel>`'
- en: '`<apex:outputLink>`'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:outputLink>`'
- en: '`<apex:outputPanel>`'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:outputPanel>`'
- en: '`<apex:outputText>`'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:outputText>`'
- en: '`<apex:page>`'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:page>`'
- en: '`<apex:panelGrid>`'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:panelGrid>`'
- en: '`<apex:panelGroup>`'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:panelGroup>`'
- en: '`<apex:param>`'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:param>`'
- en: '`<apex:stylesheet>` (as long as the URL isn''t directly referencing Salesforce
    stylesheets)'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:stylesheet>`（只要URL没有直接引用Salesforce样式表）'
- en: '`<apex:variable>`'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:variable>`'
- en: 'The following components can be used with caution in rendering PDF (others
    are not safe to be used in PDF rendering):'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下组件在渲染PDF时可以谨慎使用（其他组件在PDF渲染中不安全）：
- en: '`<apex:attribute>`'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:attribute>`'
- en: '`<apex:column>`'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:column>`'
- en: '`<apex:component>`'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:component>`'
- en: '`<apex:componentBody>`'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:componentBody>`'
- en: '`<apex:dataTable>`'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:dataTable>`'
- en: Using component facets
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用组件面
- en: 'The `<apex:facet>` component is used to specify content in an area of a Visualforce
    page and it provides information about the data in the parent component. For example,
    we can use a facet component in the header or footer of a `<apex:dataTable>`.
    We can override the default facet of a Visualforce component by using the `<apex:facet>`
    component. The advantages and disadvantages of the facet component are as follows
    with an example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`<apex:facet>`组件用于指定Visualforce页面区域的内容，并提供有关父组件中数据的信息。例如，我们可以在`<apex:dataTable>`的页眉或页脚中使用面组件。我们可以通过使用`<apex:facet>`组件来覆盖Visualforce组件的默认面。以下是一个关于面组件的优缺点示例：'
- en: The `<apex:facet>` component cannot be used directly in Apex; it must be a child
    component of another Visualforce component. We can use that in a dynamic component.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<apex:facet>`组件不能直接在Apex中使用；它必须是另一个Visualforce组件的子组件。我们可以在动态组件中使用它。'
- en: Facets only allow a single child within the start and close tags.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面仅允许在开始和结束标签内有一个子组件。
- en: 'The following is an example of the `<apex:facet>` component that is used with
    the `<apex:dataTable>` component:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是一个使用`<apex:facet>`组件与`<apex:dataTable>`组件一起使用的示例：
- en: '[PRE3]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can use the facet component with `<apex:actionSatus>`. It is used to extend
    the displaying status indicator. This is explained in the following example:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用面组件与`<apex:actionSatus>`一起使用。它用于扩展显示状态指示器。以下是一个示例：
- en: '[PRE4]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Summary
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter was dedicated for explaining the best practices of Visualforce
    developments. In this chapter we became familiar with the best practices to follow
    in order to avoid unexpected behaviors, reduce the delay experience for accessing
    component IDs, page block components, controllers and controller extensions, improving
    Visualforce performance, static resources, rendering PDFs, and using component
    facets. We have seen the way to improve user experience and coding standards.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在解释Visualforce开发的最佳实践。在本章中，我们熟悉了遵循的最佳实践，以避免意外行为，减少访问组件ID、页面块组件、控制器和控制器扩展、提高Visualforce性能、静态资源、渲染PDF和使用组件面的延迟体验。我们看到了提高用户体验和编码标准的方法。
