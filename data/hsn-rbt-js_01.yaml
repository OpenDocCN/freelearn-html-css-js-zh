- en: Setting Up Your Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置您的开发环境
- en: Welcome! This book is designed to get you started with writing robotics code
    in JavaScript using the Raspberry Pi, Node.js, and the Johnny-Five framework.
    This chapter will fill in the details of what the Raspberry Pi is and how we're
    going to use it, and will also help you get your development environment ready.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎您！本书旨在帮助您开始使用Raspberry Pi、Node.js和Johnny-Five框架用JavaScript编写机器人代码。本章将详细介绍Raspberry
    Pi是什么以及我们将如何使用它，并帮助您准备好开发环境。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: What is the Raspberry Pi
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是Raspberry Pi
- en: How we will use the Raspberry Pi
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将如何使用Raspberry Pi
- en: Installing the operating system
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装操作系统
- en: Setting up SSH and hardware interfaces
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置SSH和硬件接口
- en: Installing Node.js
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: Installing Johnny-Five and Raspi-IO
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Johnny-Five和Raspi-IO
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In order to get started, you''ll need the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始，您需要以下物品：
- en: '**A Raspberry Pi 3**: Either the original or model B is fine.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个Raspberry Pi 3**：原始型号或B型号都可以。'
- en: '**A power supply**: Plugging the Raspberry Pi into a USB port on your computer
    can cause serious issues because it cannot supply enough power to allow the Raspberry
    Pi to function properly, so you''ll need a proper wall wart power supply.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电源供应**：将Raspberry Pi插入电脑的USB端口可能会导致严重问题，因为它无法提供足够的电力以允许Raspberry Pi正常工作，因此您需要一个合适的墙壁电源适配器。'
- en: '**MicroSD card**: This needs to have at least 8 GB to hold the Raspbian OS
    and the code we''re going to write. You''ll also need a way to write to the SD
    card from your computer—either a full SD card adapter or a USB card reader.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MicroSD卡**：这至少需要8GB来存储Raspbian操作系统和我们将要编写的代码。您还需要一种从电脑写入SD卡的方法——要么是完整的SD卡适配器，要么是USB卡读卡器。'
- en: '**A PC9685 GPIO expansion board**: There are expansion boards that require
    assembly on Adafruit ([https://www.adafruit.com/product/815](https://www.adafruit.com/product/815)),
    but if you''re not confident in your soldering, then there are plenty of preassembled
    ones available on Amazon if you search for `PC9685`.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个PC9685 GPIO扩展板**：有一些需要组装的扩展板在Adafruit上（[https://www.adafruit.com/product/815](https://www.adafruit.com/product/815)），但如果您对焊接没有信心，那么在亚马逊上搜索`PC9685`可以找到许多预组装的。'
- en: '**Text editor**: Your code editor will be fine; we just need to edit a few
    files on the SD card once we''ve burned the OS image onto it.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本编辑器**：您的代码编辑器没问题；我们只需要在将操作系统镜像烧录到SD卡上后编辑几个文件。'
- en: 'If this is your first foray into a hardware project, I suggest getting a kit
    that contains at least the following items, as it will help you finish many of
    the projects in this book, and will provide you with the parts to create your
    own designs:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是您第一次涉足硬件项目，我建议您购买至少包含以下项目的套件，因为它将帮助您完成本书中的许多项目，并为您提供创建您自己的设计的部件：
- en: Pi Cobbler
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pi Cobbler
- en: Resistors
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电阻
- en: LEDs
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LED灯
- en: A servo
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个伺服电机
- en: A motor
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个电机
- en: Buttons
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮
- en: Other sensors and peripherals
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他传感器和外设
- en: 'The following are some good examples of these items (at the time of writing):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些这些物品的好例子（在撰写本文时）：
- en: '**The Raspberry Pi 3 B+ starter kit**: [https://www.sparkfun.com/products/14644](https://www.sparkfun.com/products/14644)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Raspberry Pi 3 B+入门套件**：[https://www.sparkfun.com/products/14644](https://www.sparkfun.com/products/14644)'
- en: '**The Adafruit Raspberry Pi 3 Model B Starter Pack**: [https://www.adafruit.com/product/2380](https://www.adafruit.com/product/2380)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Adafruit Raspberry Pi 3 Model B入门套件**：[https://www.adafruit.com/product/2380](https://www.adafruit.com/product/2380)'
- en: '**If you already have a Pi, they sell the kit without the Pi as well**: [https://www.adafruit.com/product/3241](https://www.adafruit.com/product/3241)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果您已经有了Pi，他们还出售不含Pi的套件**：[https://www.adafruit.com/product/3241](https://www.adafruit.com/product/3241)'
- en: What is the Raspberry Pi?
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Raspberry Pi？
- en: 'So, now you''ve got this green, credit-card-sized object with a bunch of ports
    that you recognize, and a bunch of pins, as shown in the following diagram. You
    can see some chips, and some parts you might not recognize. Before we talk about
    the power contained in this rather inconspicuous board, we need to clear up some
    vocabulary that we''ll be using throughout the book:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在您有了这个绿色、信用卡大小的物体，上面有一堆您认识的端口和一些引脚，如图所示。您可以看到一些芯片和一些您可能不认识的部件。在我们讨论这个相当不起眼的板上的电力之前，我们需要澄清一些我们将全书使用的词汇：
- en: '![](img/cc70eef4-da36-4b73-9d2a-796df9676467.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc70eef4-da36-4b73-9d2a-796df9676467.png)'
- en: Microcontrollers
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微控制器
- en: '**Microcontroller** is a term that encapsulates a bunch of devices. It''s a
    term used to describe a device that contains a processor, memory, and input/output
    peripherals (or ways to interact with those peripherals) that is meant for a particular
    type of task. One extremely common microcontroller is the Arduino Uno, and the
    Raspberry Pi technically falls into this category as well.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**微控制器**是一个包含一系列设备的术语。它用来描述一个包含处理器、内存和输入/输出外围设备（或与这些外围设备交互的方式）的设备，该设备旨在执行特定类型的任务。一个极其常见的微控制器是Arduino
    Uno，而树莓派在技术上也被归类为这一类别。'
- en: General-Purpose Input/Output (GPIO) pins
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通用输入/输出（GPIO）引脚
- en: Microcontrollers interface with devices such as sensors, LEDs, and buttons using
    electrical signals that are sent and received through pins designed for input
    and/or output signals. These pins can be broken into multiple subcategories, as
    we'll find out in subsequent chapters, but you can address them as GPIO pins as
    a whole. We'll use that abbreviation throughout the book.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 微控制器通过发送和接收通过为输入和/或输出信号设计的引脚发送的电信号与传感器、LED和按钮等设备进行接口。这些引脚可以分为多个子类别，正如我们在后续章节中将了解到的那样，但你可以将它们整体称为GPIO引脚。我们将在整本书中使用这个缩写。
- en: Debian and Raspbian
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Debian和Raspbian
- en: Debian is a distribution of Linux that is considered extremely user friendly
    for those new to using Linux. It contains many utilities that are commonly used
    while working with Linux preinstalled, and is compatible with a lot of the peripherals
    that you would use with a computer, such as Wi-Fi cards and USB devices.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Debian是一个针对Linux新手的非常用户友好的Linux发行版。它包含了许多在Linux预装时常用的实用程序，并且与许多你可能会用于计算机的外围设备兼容，例如Wi-Fi网卡和USB设备。
- en: Raspbian is a modified version of Debian specifically designed to run on Raspberry
    Pi devices. There are drivers for the GPIO pins, USB Wi-Fi devices, and expansion
    slots on the Pi that allow you to attach a specific display and camera.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Raspbian是专门为在树莓派设备上运行而修改的Debian版本。它为树莓派的GPIO引脚、USB Wi-Fi设备和扩展槽提供了驱动程序，这些驱动程序允许你连接特定的显示屏和摄像头。
- en: There are two flavors of Raspbian—Raspbian Full and Raspbian Lite. Full has
    a graphical desktop with programs aimed at educational programming and development.
    Lite (which we will be using for the projects in this book) only has a command-line
    interface, but still has full functionality when it comes to Raspberry Pi peripherals.
    As of the time of writing, the current version of Raspbian is 4.14, nicknamed
    **Stretch**.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Raspbian有两种版本——Raspbian Full和Raspbian Lite。Full版本包含图形桌面，有针对教育编程和开发的程序。Lite（我们将用于本书的项目）只有命令行界面，但在使用树莓派外围设备时仍然具有完整的功能。截至本书编写时，Raspbian的当前版本是4.14，昵称为**Stretch**。
- en: Johnny-Five and Raspi-IO
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Johnny-Five和Raspi-IO
- en: Back in 2012, Rick Waldron wrote a *node-serialport* program to operate an Arduino
    Uno with Node.js, and formed a library around it called Johnny-Five. Since then,
    the Johnny-Five library has grown to over 100 contributors, and can control over
    40 platforms, including the Raspberry Pi! It can also control many kinds of sensors
    and peripherals that you can use to create the robotics project you've been dreaming
    of in Node.js!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 回到2012年，Rick Waldron编写了一个名为*node-serialport*的程序来操作Arduino Uno，并围绕它创建了一个名为Johnny-Five的库。从那时起，Johnny-Five库已经发展到超过100位贡献者，可以控制超过40个平台，包括树莓派！它还可以控制许多类型的传感器和外围设备，你可以使用这些设备在Node.js中创建你梦寐以求的机器人项目！
- en: One of the ways the Johnny-Five library has grown to support so many platforms
    is by creating what are called IO plugins. You create an IO plugin for each type
    of board you wish to control. For example, we will be installing and using the
    Raspi-IO plugin to use Johnny-Five with the Raspberry Pi.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Johnny-Five库能够支持如此多的平台之一的方式是通过创建所谓的IO插件。你为希望控制的每种类型的板创建一个IO插件。例如，我们将安装并使用Raspi-IO插件来使用Johnny-Five与树莓派。
- en: What is great about this system is that the code you write in this book can
    be used on any other platform that Johnny-Five supports (you just need to change
    PIN numbers)! Writing code for Node.js botnets is much easier when you're using
    the same APIs for any devices you might use.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个系统的优点在于，你在本书中编写的代码可以在Johnny-Five支持的任何其他平台上使用（你只需要更改引脚号！）当你使用相同的API为任何可能使用的设备编写代码时，为Node.js机器人网络编写代码要容易得多。
- en: So, the Pi is technically a microcontroller...
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 因此，树莓派在技术上是一个微控制器...
- en: Let's get back to the question of what the Raspberry Pi is. In short, it is
    a microcontroller. It has dozens of GPIO pins and can be used to interface with
    many physical peripherals in order to achieve specialized tasks. The low cost
    and small size allows the Raspberry Pi to be a versatile device, but the power
    involved allows you to use it for tasks that other microcontrollers may not pack
    the punch for.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到树莓派是什么的问题。简而言之，它是一个微控制器。它拥有数十个GPIO引脚，可以用来与许多物理外围设备接口，以实现特定的任务。低成本和小尺寸使得树莓派成为一个多功能的设备，但它的功率允许你用它来完成其他微控制器可能无法胜任的任务。
- en: '...but it is also a computer!'
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '...但它也是一个计算机！'
- en: An interesting fact about the Raspberry Pi is that, while it is a microcontroller,
    it can also be used as a fully fledged computer! While it certainly isn't the
    most powerful hardware, with full Raspbian installed, a Raspberry Pi attached
    to a monitor, keyboard, and mouse creates a great machine for kids and adults
    to learn programming on! The original intent of the Raspberry Pi was to create
    a low-cost educational machine to teach programming, and it exceeded every expectation
    in that regard. The fact that it's also a great microcontroller for the world
    of makers is a great bonus!
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 关于树莓派的一个有趣的事实是，虽然它是一个微控制器，但它也可以用作一台完整的计算机！虽然它当然不是最强大的硬件，但安装了完整的Raspbian系统后，连接到显示器、键盘和鼠标的树莓派可以成为孩子们和成人学习编程的绝佳机器！树莓派最初的目的是创建一个低成本的教育机器来教授编程，它在这一点上远远超出了所有人的预期。它同时也是为创客世界提供的一款优秀的微控制器，这是一个巨大的额外优势！
- en: How we will use the Raspberry Pi
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们将如何使用树莓派
- en: So, we've established that the Raspberry Pi is a very versatile and powerful
    machine for its size, but with so many options, it can be hard to figure out where
    to get started. Luckily, we have a plan that will walk you through your first
    Raspberry Pi and Johnny-Five projects so that you can keep up, but which will
    also empower you to build your way into advanced robotics projects.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经确定树莓派（Raspberry Pi）对于其体积来说是一个非常灵活且强大的机器，但鉴于有如此多的选择，确定从哪里开始可能会有些困难。幸运的是，我们有一个计划，将引导你完成你的第一个树莓派和Johnny-Five项目，这样你就可以跟上进度，同时也会赋予你构建高级机器人项目的能力。
- en: Taking advantage of all that the Raspberry Pi has to offer!
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 充分利用树莓派所能提供的一切！
- en: The projects we will build will take advantage of the fact that the Raspberry
    Pi is both a microcontroller and a computer. We'll use the Linux operating system,
    via the Raspbian distribution, and leverage it to run our projects in Node.js.
    We'll also use Johnny-Five and Raspi-IO to leverage the GPIO of the Raspberry
    Pi in order to create robotics projects in a way that makes the code easy to understand
    and portable to many different hardware platforms.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要构建的项目将利用树莓派既是微控制器又是计算机的事实。我们将通过Raspbian发行版使用Linux操作系统，并利用它来在Node.js中运行我们的项目。我们还将使用Johnny-Five和Raspi-IO来利用树莓派的GPIO，以便以易于理解和可移植到许多不同硬件平台的方式创建机器人项目。
- en: Johnny-Five – letting us code hardware in Node.js
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Johnny-Five – 让我们能够在Node.js中编写硬件
- en: In the past, when you thought of robotics projects, it meant writing in C or
    C++, usually through the Arduino IDE and APIs. However, as microcontrollers have
    gotten more powerful, they are capable of running other programming languages,
    even scripting languages, such as subsets of Python and JavaScript.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，当你想到机器人项目时，意味着用C或C++编写代码，通常是通过Arduino IDE和API。然而，随着微控制器的变得更加强大，它们能够运行其他编程语言，甚至是脚本语言，如Python和JavaScript的子集。
- en: 'And, of course, with computer/microcontroller hybrids, such as the Raspberry
    Pi, you''re able to run stock Node.js, allowing you to create even advanced robotics
    projects without having to deal with any low-level languages. There are quite
    a few benefits to being able to code robotics projects in Node.js:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，有了像树莓派这样的计算机/微控制器混合体，你能够运行标准的Node.js，这样你就可以在不处理任何底层语言的情况下创建甚至高级的机器人项目。能够在Node.js中编写机器人项目有很多好处：
- en: '**Event-based systems**:In the Arduino and C/C++ level of robotics programming,
    you will need to check the state of everything through each iteration of a loop,
    and act accordingly. This can create monolithic functions and code paths. With
    Node.js and Johnny-Five, we can use event emitters and systems, which fit in surprisingly
    well as they can read sensors and interact with peripherals in the real world,
    where things take time. This will help you to organize code in a way that reflects
    the asynchronous way the world works.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于事件的系统**：在 Arduino 和 C/C++ 级别的机器人编程中，你需要通过循环的每次迭代检查每个事物的状态，并相应地采取行动。这可能会创建出庞大的函数和代码路径。使用
    Node.js 和 Johnny-Five，我们可以使用事件发射器和系统，它们与实际世界的传感器读取和外设交互非常契合，因为实际世界中的事物需要时间。这将帮助你以反映世界异步工作方式的方式组织代码。'
- en: '**Garbage collection/automatic memory management**:While Arduino and C++ handle
    most memory management for you, programming in microcontrollers that use C requires
    strict memory management. While you may need to bear the resource constraints
    of the Raspberry Pi in mind from time to time, it is much easier than the days
    of 20K SRAM.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**垃圾回收/自动内存管理**：虽然 Arduino 和 C++ 会为你处理大部分内存管理，但在使用 C 的微控制器编程中，需要严格的内存管理。虽然你有时需要考虑
    Raspberry Pi 的资源限制，但这比 20K SRAM 的时代要容易得多。'
- en: '**Using a language you already know**:Instead of trying to remember the way
    things work in a new language, it will accelerate your learning in the field of
    electronics and robotics if you focus on learning fewer things at once. Using
    Node.js can help you focus on learning the wide and varied world of electronics,
    instead of adding on the extra work of remembering whether it''s `uint8_t` or
    `uint16_t`.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用你已知的语言**：与其试图记住新语言中事物的工作方式，不如专注于一次学习少量内容，这将加速你在电子和机器人领域的学习。使用 Node.js 可以帮助你专注于学习电子的广泛而多样的世界，而不是额外的工作，即记住它是
    `uint8_t` 还是 `uint16_t`。'
- en: Installing the operating system
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装操作系统
- en: In order to get started with Johnny-Five and the Raspberry Pi, we will need
    to set up the Raspbian operating system by burning it to a microSD card. Then,
    we'll need to edit some files on the SD card in order for the Raspberry Pi to
    boot with Wi-Fi and the ability to SSH in. Lastly, we'll need to boot up the Raspberry
    Pi and get some settings in place before finally installing Node.js, Johnny-Five,
    and Raspi-IO.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始使用 Johnny-Five 和 Raspberry Pi，我们需要通过将其烧录到 microSD 卡上来设置 Raspbian 操作系统。然后，我们需要编辑
    SD 卡上的某些文件，以便 Raspberry Pi 能够带 Wi-Fi 和 SSH 功能启动。最后，在安装 Node.js、Johnny-Five 和 Raspi-IO
    之前，我们需要启动 Raspberry Pi 并设置一些设置。
- en: Downloading Raspbian Lite
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 Raspbian Lite
- en: 'The following steps will show you how to download Raspbian Lite:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将向您展示如何下载 Raspbian Lite：
- en: 'The first step is downloading the Raspbian Lite image so we can burn it to
    our microSD card. The best place to get the image from is [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/),
    as shown in the following screenshot:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是下载 Raspbian Lite 镜像，这样我们就可以将其烧录到我们的 microSD 卡上。获取镜像的最佳地点是 [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/)，如下面的截图所示：
- en: '![](img/ed6fe723-213e-4069-a77b-80979b1f2a7f.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ed6fe723-213e-4069-a77b-80979b1f2a7f.png)'
- en: A screenshot of the Raspbian download page, with both Full and Lite download
    links
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Raspbian 下载页面的截图，包含完整版和精简版下载链接
- en: Select RASPBIAN STRETCH LITE (or whichever version is the current one), which
    will replace the word STRETCH. Give yourself some time for this step to complete;
    although Raspbian Lite is much smaller than Raspbian Full, it is still several
    hundred megabytes, and can take time to download!
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 RASPBIAN STRETCH LITE（或当前版本），这将替换掉单词 STRETCH。给自己一些时间来完成这一步；虽然 Raspbian Lite
    比完整的 Raspbian 小得多，但它仍然有几百兆字节，下载可能需要一些时间！
- en: If you're preparing to run a class, hackathon, or some other event using the
    Raspberry Pi and Raspbian, it's best to predownload it and place it on a flash
    drive to hand around, as conference and event Wi-Fi can be a bit slower than normal,
    or even drop in and out, so be prepared!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在准备使用 Raspberry Pi 和 Raspbian 运行一个班级、黑客马拉松或其他活动，最好是预先下载并将其放置在闪存驱动器上，以便分发，因为会议和活动的
    Wi-Fi 可能比正常情况下慢，甚至可能断断续续，所以要做好准备！
- en: Burning the image to an SD card
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将镜像烧录到 SD 卡中
- en: 'Luckily, the tools for burning OS images to SD cards have evolved arcane command-line
    tools that can overwrite your computer''s hard drive as easily as it can the SD
    card. My current favorite is called **Etcher**, and it can be downloaded for any
    platform at [https://etcher.io/](https://etcher.io/), as shown in the following
    steps:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，将OS镜像烧录到SD卡的工具已经从复杂的命令行工具发展而来，这些工具可以像烧录SD卡一样轻松地覆盖您的电脑硬盘。我目前最喜欢的工具是**Etcher**，您可以在[https://etcher.io/](https://etcher.io/)下载，以下步骤所示：
- en: The free version is more than enough for our needs, so download and install
    it as you download Raspbian Lite.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 免费版已经足够满足我们的需求，因此下载并安装它，就像下载Raspbian Lite一样。
- en: 'Once they are both downloaded, you''ll want to place the micro SD card in your
    computer, either by placing it into a full-sized SD adapter and then into a slot
    on your computer, or by using a USB-to-micro-SD adapter. Whichever you use, make
    sure your computer can see the volume as a drive before continuing. Then, boot
    up Etcher. The following screenshot shows Etcher running on a Mac:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完两者后，您需要将micro SD卡放入您的电脑中，无论是将其放入全尺寸SD适配器然后插入电脑的插槽，还是使用USB-to-micro-SD适配器。无论您使用哪种方式，在继续之前，请确保您的电脑可以看到该卷作为驱动器。然后，启动Etcher。以下截图显示了Etcher在Mac上的运行情况：
- en: '![](img/1f67ea05-49b6-48e6-8d2b-b4aca898ffa6.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1f67ea05-49b6-48e6-8d2b-b4aca898ffa6.png)'
- en: A screenshot of the Etcher program running on a Mac
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Etcher程序在Mac上运行的截图
- en: Once you see a window similar to the preceding screenshot, you'll need to select
    the Raspbian Lite image you just downloaded. You don't even need to unzip the
    `.zip` file—Etcher can handle that outright! Once you've selected the image, Etcher
    should select your micro SD card drive, so long as your machine can see it! Once
    you've ensured that the image and micro SD card drive are properly selected, hit
    Flash! to begin the process.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您看到与前面截图类似的窗口，您需要选择您刚刚下载的Raspbian Lite镜像。您甚至不需要解压`.zip`文件——Etcher可以直接处理！选择镜像后，只要您的机器可以看到它，Etcher应该会自动选择您的micro
    SD卡驱动器！一旦您确认镜像和micro SD卡驱动器已正确选择，点击“Flash！”开始烧录过程。
- en: Sometimes, with larger micro SD cards, you'll get a warning from Etcher about
    the drive being very large (this happens to me when I use 64 GB cards). This is
    to prevent you from overwriting your computer's hard drive. You can bypass the
    warning by going through a confirmation window—just be absolutely sure that your
    micro SD card drive is selected first!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，对于较大的micro SD卡，Etcher会发出关于驱动器非常大的警告（当我使用64 GB卡时就会发生这种情况）。这是为了防止您覆盖您的电脑硬盘。您可以通过确认窗口绕过警告——但请务必确保首先选中您的micro
    SD卡驱动器！
- en: A few minutes will pass as Etcher burns the image to your micro SD card, then
    verifies that it is present on the card. Once this is done, **remove and reinsert** **the
    micro SD card so that your computer recognizes it as a drive again**; the drive
    should be named `boot`. We're not quite done editing the image files yet, so Etcher's
    polite attempt to eject the micro SD card drive needs to be ignored.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，烧录器会将镜像烧录到您的micro SD卡上，然后验证镜像是否已存在于卡上。完成此操作后，**拔出并重新插入** micro SD卡，以便您的电脑将其识别为驱动器；驱动器应命名为`boot`。我们还没有完全编辑完镜像文件，因此Etcher礼貌地尝试弹出micro
    SD卡驱动器时需要忽略。
- en: Editing files on the SD card
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑SD卡上的文件
- en: 'We need to edit and create some files on our Raspberry Pi''s image in order
    to be able to access it with SSH when we turn on the Raspberry Pi. First, we''ll
    set up the Wi-Fi using the following steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要编辑和创建一些文件在我们的Raspberry Pi镜像中，以便在打开Raspberry Pi时能够通过SSH访问它。首先，我们将使用以下步骤设置Wi-Fi：
- en: If you're using an Ethernet cable and port to connect the Raspberry Pi to the
    internet, you can skip this step. If this doesn't get the Wi-Fi to work, you'll
    want to look at the information box under the section *Booting up the Pi* for
    troubleshooting steps and an alternative (if clunkier) way to set this up.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用以太网线和端口将Raspberry Pi连接到互联网，您可以跳过此步骤。如果这不能使Wi-Fi工作，您需要查看“启动Pi”部分下的信息框以获取故障排除步骤和设置此设置的替代方法（如果更复杂）。
- en: 'In order to set up the Wi-Fi, you''ll want to create a file in the root of
    the micro SD card drive called `wpa_supplicant.conf` that contains the following
    text:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了设置Wi-Fi，您需要在micro SD卡驱动器的根目录下创建一个名为`wpa_supplicant.conf`的文件，其中包含以下文本：
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Replace `yourNetworkSSID` with the SSID of the Wi-Fi network you wish to connect
    to, and then replace `yourNetworkPasswd` with that Wi-Fi's network password.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`yourNetworkSSID`替换为您要连接的Wi-Fi网络的SSID，然后将`yourNetworkPasswd`替换为该Wi-Fi网络的密码。
- en: The Raspberry Pi's Wi-Fi chip can only connect to 2.4 GHz networks at the time
    of writing, so you need to make sure that you input a network that operates on
    that bandwidth or your Raspberry Pi will not be able to connect!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Raspberry Pi 的 Wi-Fi 芯片只能连接到 2.4 GHz 网络，所以你需要确保你输入一个在该带宽上运行的网络，否则你的 Raspberry
    Pi 将无法连接！
- en: 'After you''ve set up the Wi-Fi network, you''ll want to tell the Raspberry
    Pi to allow you to SSH into it. To do this, you''ll want to create a file called
    `ssh` in the same `root` folder as the `wpa_supplicant.conf` file. Make sure that
    the `ssh` file is empty and has no extension. When you''re all done, the `root`
    directory of the micro SD card drive will look similar to the following screenshot:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你设置好 Wi-Fi 网络后，你将想要告诉 Raspberry Pi 允许你通过 SSH 连接到它。为此，你需要在 `wpa_supplicant.conf`
    文件相同的 `root` 文件夹中创建一个名为 `ssh` 的文件。确保 `ssh` 文件为空且没有扩展名。完成所有操作后，micro SD 卡驱动器的 `root`
    目录将类似于以下截图：
- en: '![](img/877a3ed9-5770-40fc-bdd8-dc52681208fd.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/877a3ed9-5770-40fc-bdd8-dc52681208fd.png)'
- en: A list of files on the micro SD drive, once I've made my edits
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑后 micro SD 驱动器上的文件列表
- en: Once this is all done, fully eject the microSD drive, take the microSD card
    and insert it into the Raspberry Pi. We're now ready to boot up the Raspberry
    Pi and start installing software.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成所有这些，完全弹出 microSD 驱动器，取出 microSD 卡并将其插入 Raspberry Pi。我们现在可以启动 Raspberry
    Pi 并开始安装软件。
- en: Booting up the Pi
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 Pi
- en: Once the micro SD card is inserted, plug your power source into your Raspberry
    Pi. A red and green LED should light up. The red LED should be solid—this is the
    power indicator. The green light will flicker on and off—this is the LED that
    indicates activity. The Raspberry Pi should take a maximum of a minute or so to
    boot up once you've plugged it in. Next, we'll SSH in.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将 micro SD 卡插入后，将电源连接到 Raspberry Pi。一个红色和一个绿色的 LED 应该会亮起。红色 LED 应该是稳定的——这是电源指示灯。绿色灯会闪烁——这是指示活动的
    LED。Raspberry Pi 在插入电源后最多需要一分钟来启动。接下来，我们将 SSH 连入。
- en: SSHing from a Linux or Mac
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Linux 或 Mac 进行 SSH 连接
- en: 'If you''re on a Mac or Linux machine, you''ll open up a Terminal and type the
    following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一台 Mac 或 Linux 机器上，你将打开一个终端并输入以下内容：
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you''re successful, you''ll see a question appear, asking about the authenticity
    of the host. Respond by typing `yes` and hitting *Enter*. You''ll then be asked
    for a password, which is `raspberry`, as shown in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你成功，你会看到一个询问主机真实性的问题出现。通过输入 `yes` 并按 *Enter* 来回答。然后，你会被要求输入密码，密码是 `raspberry`，如以下截图所示：
- en: '![](img/9466d77e-c5e3-4b92-9928-2b0138d851e2.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9466d77e-c5e3-4b92-9928-2b0138d851e2.png)'
- en: Successful SSH into a Raspberry Pi from a Mac Terminal
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Mac 终端成功 SSH 进入 Raspberry Pi
- en: 'Once you''ve entered the password, you should see the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密码后，你应该会看到以下内容：
- en: '![](img/613e5e15-c251-4acd-9f0c-6b0375dc21c8.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/613e5e15-c251-4acd-9f0c-6b0375dc21c8.png)'
- en: Successful login to a Raspberry Pi via SSH from a Mac
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Mac 通过 SSH 成功登录 Raspberry Pi
- en: SSHing from Windows
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Windows 进行 SSH 连接
- en: 'In order to SSH from a Windows machine, you''ll need to use a program called
    PuTTY. You can get it on [https://putty.org/](https://putty.org/). But first,
    you''ll want your Raspberry Pi''s IP address. You''ll need a monitor, an HDMI
    cable, and a USB keyboard. Once you have these, go through the following steps:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从 Windows 机器上 SSH 连接，你需要使用一个名为 PuTTY 的程序。你可以在 [https://putty.org/](https://putty.org/)
    获取它。但首先，你需要 Raspberry Pi 的 IP 地址。你需要一个显示器、一根 HDMI 线和一个 USB 键盘。一旦你有了这些，请按照以下步骤操作：
- en: Plug the monitor, HDMI cable, and USB keyboard into the Raspberry Pi **before
    booting it up**. Then plug in the power supply.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在启动 Raspberry Pi 之前，将显示器、HDMI 线和 USB 键盘连接到 Raspberry Pi **。然后插入电源**。
- en: When it prompts you for a username, type `pi`. When it asks for a password,
    enter `raspberry`. Once you are logged in, type `ifconfig`. You should see a lot
    of information appear.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当它提示你输入用户名时，输入 `pi`。当它要求输入密码时，输入 `raspberry`。一旦你登录，输入 `ifconfig`。你应该会看到大量信息出现。
- en: 'Look for the `wlan0` section and the `inet` address under that heading. For
    the following output, the IP is `192.168.1.106`, as shown in the following screenshot.
    Write this IP down. Then, you can unplug the display and the keyboard—you won''t
    need them again:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `wlan0` 部分下方查找 `inet` 地址。对于以下输出，IP 地址是 `192.168.1.106`，如以下截图所示。将此 IP 地址记下来。然后，你可以拔掉显示器和键盘——你不会再需要它们了：
- en: '![](img/e84dc231-edd5-4697-97a4-440241f188fc.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e84dc231-edd5-4697-97a4-440241f188fc.png)'
- en: Getting the IP address from the Terminal
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 从终端获取 IP 地址
- en: 'Once you have the IP address for your Raspberry Pi, you can boot up PuTTY.
    The window that opens is the configuration window, as shown in the following screenshot:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你有了树莓派的IP地址，你就可以启动PuTTY。打开的窗口是配置窗口，如下面的截图所示：
- en: '![](img/322759a7-915e-4b72-be8b-a729faca8c2b.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/322759a7-915e-4b72-be8b-a729faca8c2b.png)'
- en: The PuTTY configuration window
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: PuTTY配置窗口
- en: 'Type the IP address that you obtained into the field labeled Host Name (or
    IP address) and click the Open button. You''ll be asked about the authenticity
    of the host (only the first time you connect). Select Yes. Then enter `Pi` as
    the username and `raspberry` as the password when prompted. Once that''s done,
    you should see the following:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你获得的IP地址输入到标记为“主机名（或IP地址）”的字段中，然后点击“打开”按钮。你将被询问关于主机真实性的问题（仅在你第一次连接时）。选择“是”。然后当提示时，输入`Pi`作为用户名，`raspberry`作为密码。完成这些后，你应该会看到以下内容：
- en: '![](img/5d5b4faa-4895-4b3b-bfd7-cf7bbbaab0e4.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5d5b4faa-4895-4b3b-bfd7-cf7bbbaab0e4.png)'
- en: Successful login to the Raspberry Pi with PuTTY
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PuTTY成功登录树莓派
- en: Now that everyone's logged in, let's set up our Raspberry Pi for our projects!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在每个人都已登录，让我们为我们的项目设置树莓派！
- en: Setting up your password and hardware interfaces
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置密码和硬件接口
- en: Now that we have our Raspberry Pi connected to the Wi-Fi and we're SSHed in,
    we need to make a few changes before we install Node.js and get started with our
    coding.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将树莓派连接到Wi-Fi并SSH登录，在安装Node.js和开始编码之前，我们需要做一些更改。
- en: First things first – change your password!
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 首先，更改你的密码！
- en: When you log in, your Raspberry Pi will warn you that having SSH enabled with
    the default username and password isn't very secure, and it's absolutely right!
    The first step is to change our password.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当你登录时，你的树莓派会警告你，使用默认用户名和密码启用SSH并不非常安全，这是绝对正确的！第一步是更改我们的密码。
- en: 'In order to do so, in your SSH window, type in `passwd` and hit *Enter*. You''ll
    be prompted for your current password (`raspberry`) and a new password. Type in
    whatever you like (just don''t forget it)! You''ll be asked to confirm it, and
    voila! The new password is set, as shown in the following screenshot. Your Raspberry
    Pi will be much more secure:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，在你的SSH窗口中，输入`passwd`并按*Enter*键。你将被提示输入当前密码（`raspberry`）和新密码。输入你喜欢的任何密码（只是不要忘记它！）然后你会被要求确认，哇！新密码已设置，如下面的截图所示。你的树莓派将更加安全：
- en: '![](img/3421257f-7ce8-4a96-afcb-90c2d33eb1f5.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3421257f-7ce8-4a96-afcb-90c2d33eb1f5.png)'
- en: Changing your Pi password
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 更改Pi密码
- en: Updating the Raspberry Pi
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新树莓派
- en: 'Next, you''ll make sure that the Raspberry Pi is updated and ready to go by
    running the following command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过运行以下命令确保树莓派已更新并准备好使用：
- en: '[PRE2]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will take a while, but it's worth it to make sure everything is properly
    updated.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这将花费一些时间，但确保一切正确更新是值得的。
- en: Turning on the hardware interfaces
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开硬件接口
- en: 'Next, we''ll set up the Raspberry Pi so that our hardware code can run. Run
    the following command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将设置树莓派，以便我们的硬件代码可以运行。运行以下命令：
- en: '[PRE3]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You''ll be greeted with a graphical menu with lots of different options, as
    shown in the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个带有许多不同选项的图形菜单，如下面的截图所示：
- en: '![](img/dc5aad01-edeb-4be9-9aa0-9bec59d417d8.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dc5aad01-edeb-4be9-9aa0-9bec59d417d8.png)'
- en: The raspi-config menu
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: raspi-config菜单
- en: You'll want to use the arrow keys to select `Interfacing Options`, and then
    select `I2C` and `Yes` to turn it on. Repeat for SPI, then use *Tab* to close
    the menu. When it prompts you to reboot, say `Yes`, then SSH back in, because
    you're ready to install Node.js, Johnny-Five, and Raspi-IO!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你将想要使用箭头键选择`接口选项`，然后选择`I2C`和`是`来打开它。重复SPI，然后使用*Tab*键关闭菜单。当它提示你重启时，说`是`，然后SSH重新登录，因为你要准备安装Node.js、Johnny-Five和Raspi-IO！
- en: Installing Node.js, Johnny-Five, and Raspi-IO
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js、Johnny-Five和Raspi-IO
- en: So, now that our Raspbian OS is installed and set up, it's time to install Node.js
    (which comes bundled with npm), Johnny-Five, and Raspi-IO!
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在我们的Raspbian操作系统已安装并设置好，是时候安装Node.js（它捆绑了npm）、Johnny-Five和Raspi-IO了！
- en: Installing Node.js and npm
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js和npm
- en: In days past, you would have to compile the Node.js source on your Pi, to varying
    degrees of success because of the nonexistence of binaries for the ARM processor
    that Raspberry Pi uses. Luckily now, because of a rousing amount of third-party
    support in the past few years, you can easily download the binary from the [https://nodejs.org/en/](https://nodejs.org/en/)
    website! But how are we going to do this from the command line of our Raspberry
    Pi?
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，你必须在 Pi 上编译 Node.js 源代码，由于 Raspberry Pi 使用的 ARM 处理器没有二进制文件，因此成功率各不相同。幸运的是，由于过去几年第三方的大力支持，你现在可以从
    [https://nodejs.org/en/](https://nodejs.org/en/) 网站轻松下载二进制文件！但我们如何从 Raspberry
    Pi 的命令行中完成这个操作呢？
- en: Detecting your version of ARM processor
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测你的 ARM 处理器版本
- en: 'If you''re using the Raspberry Pi 3 Model B recommended by this book, you''re
    most likely on ARM v8 (the Raspberry Pi 3 original is ARMv7, which is fine too!).
    But you should always double-check (doubly so if you''re using a different Raspberry
    Pi, such as the Pi Zero or Pi 2/1 series). To check the ARM version on your Raspberry
    Pi, run the following in your SSH Terminal:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是本书推荐的 Raspberry Pi 3 Model B，你很可能在 ARM v8（Raspberry Pi 3 原本是 ARMv7，这也很好！）上。但你应该始终检查（如果你使用的是不同的
    Raspberry Pi，如 Pi Zero 或 Pi 2/1 系列，则应加倍检查）。要在你的 Raspberry Pi 上检查 ARM 版本，请在 SSH
    终端中运行以下命令：
- en: '[PRE4]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You''ll see a return message that looks like `armv#`, where `#` is a number
    (possibly followed by a letter). That number is what is important, because that
    number tells us which Node.js binary we will need. Once you have your ARM version,
    go through the following steps:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个类似 `armv#` 的返回消息，其中 `#` 是一个数字（可能后跟一个字母）。这个数字很重要，因为它告诉我们需要哪个 Node.js 二进制文件。一旦你有了你的
    ARM 版本，请按照以下步骤操作：
- en: 'Head to the Node.js download page at [https://nodejs.org/en/download/](https://nodejs.org/en/download/),
    as shown in the following screenshot:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Node.js 下载页面 [https://nodejs.org/en/download/](https://nodejs.org/en/download/)，如下截图所示：
- en: '![](img/c387da8b-63cb-48e4-b65a-bb786db1bbf9.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c387da8b-63cb-48e4-b65a-bb786db1bbf9.png)'
- en: A snapshot of the Node.js binary download page
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js 二进制下载页面的快照
- en: 'Right-click on the ARM version link you need and copy the URL. Then, run the
    following in your Raspberry Pi''s SSH Terminal:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击你需要的 ARM 版本链接并复制 URL。然后，在你的 Raspberry Pi 的 SSH 终端中运行以下命令：
- en: '[PRE5]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Replace `<binary-download-url>` (carats, too!) with the URL you copied from
    the Node.js download website. Once it''s downloaded, we need to extract the archive
    using the following code:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `<binary-download-url>`（包括尖括号）替换为你从 Node.js 下载网站复制的 URL。下载完成后，我们需要使用以下代码提取存档：
- en: '[PRE6]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The asterisks will differ depending on the current LTS version of Node.js and
    your ARM version. The Raspberry Pi will spit out a lot of filenames to the console,
    then give you back your shell prompt. This means that the binaries have been extracted
    into your `home` folder. We need to place them into the `/usr/local` folder. To
    do that, run the following:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 星号将根据 Node.js 的当前 LTS 版本和你的 ARM 版本而有所不同。Raspberry Pi 将在控制台输出大量的文件名，然后返回你的 shell
    提示符。这意味着二进制文件已经被提取到你的 `home` 文件夹中。我们需要将它们放入 `/usr/local` 文件夹。为此，请运行以下命令：
- en: '[PRE7]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will move all of the precompiled binaries to their new homes on your Raspberry
    Pi. Once this is done, run the following:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将把所有预编译的二进制文件移动到你的 Raspberry Pi 上的新位置。一旦完成，运行以下命令：
- en: '[PRE8]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You should see something like the following:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下类似的内容：
- en: '![](img/57b83d29-8436-4d22-aa78-438b410727e8.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57b83d29-8436-4d22-aa78-438b410727e8.png)'
- en: Successful Node.js installation results
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的 Node.js 安装结果
- en: 'If that''s all well and good, you now have Node.js and npm installed! Let''s
    wrap this up with Johnny-Five and Raspi-IO! Note that you can absolutely clean
    up the binary downloads by running the following:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切顺利，你现在已经安装了 Node.js 和 npm！让我们用 Johnny-Five 和 Raspi-IO 来结束这个话题！请注意，你可以通过运行以下命令来完全清理二进制下载：
- en: '[PRE9]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Some of you with more Debian experience may be asking, *well, why can't we just
    use* *apt-get*? The short answer is that the package with the name `node` was
    taken a very long time ago, and because that is the case, and because `sudo apt-get
    install nodejs` is outdated (at the time of writing, using this command will install `v4` when
    we need `v8+`, if it installs Node.js at all), we need to download the binaries
    and move them ourselves.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有更多 Debian 经验的人可能会问，*为什么我们不能直接使用* *apt-get*？简短的回答是，名为 `node` 的软件包很久以前就被占用了，因此，由于这种情况，以及
    `sudo apt-get install nodejs` 已经过时（在撰写本文时，使用此命令将安装 `v4`，而不是我们需要的 `v8+`，如果它安装 Node.js
    的话），我们需要下载二进制文件并自己移动它们。
- en: Installing Johnny-Five and Raspi-IO
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Johnny-Five 和 Raspi-IO
- en: 'To install Johnny-Five, once you''ve made sure Node.js and npm are installed,
    run the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Johnny-Five，一旦你确认已经安装了Node.js和npm，运行以下命令：
- en: '[PRE10]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This installs the libraries globally; you won't have to reinstall it every new
    project. And that's it! You're ready to start developing Node.js robotics projects
    on the Raspberry Pi with Johnny-Five!
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这将全局安装库；你不需要在每个新项目中重新安装它。就这样！你现在可以开始使用Johnny-Five在树莓派上开发Node.js机器人项目了！
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: It feels like a lot, but you've now completed everything you need to have a
    fully-fledged development environment for the projects in this book, and you've
    taken your first steps toward building robots with JavaScript. You've learned
    more about what the Raspberry Pi is and why we're using it, and how to get the
    operating system image ready to go!
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 感觉好像有很多，但现在你已经完成了构建这本书中项目所需的完整开发环境，并且你已经迈出了用JavaScript构建机器人的第一步。你了解了更多关于树莓派是什么以及为什么我们使用它，以及如何准备操作系统镜像！
- en: Questions
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the common operating system for the Raspberry Pi that we'll be using
    in the projects in this book, and what Linux distribution is it based on?
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在本书的项目中使用哪种常见的树莓派操作系统，以及它是基于哪个Linux发行版的？
- en: What does GPIO stand for?
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GPIO代表什么？
- en: Who originally started the Johnny-Five project, and what did they use it to
    control?
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谁最初启动了Johnny-Five项目，他们用它来控制什么？
- en: What command do you run on the Raspberry Pi to find out what ARM architecture
    it uses?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在树莓派上运行什么命令来找出它使用的ARM架构？
- en: Why is changing the default Raspberry Pi password important?
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么更改树莓派的默认密码很重要？
- en: What are two benefits of using JavaScript and Node.js for robotics code?
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用JavaScript和Node.js进行机器人代码有哪些好处？
- en: Why do we have to download the Node.js binaries instead of using Raspbian's
    package manager?
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么我们必须下载Node.js的二进制文件而不是使用Raspbian的包管理器？
- en: Further reading
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You can use the following sources for further reading relating to the topics
    covered in this chapter:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下资源进一步阅读本章涉及的主题：
- en: '**Learn more about the Raspberry Pi from the website of the Raspberry Pi organization**:
    [https://www.raspberrypi.org/](https://www.raspberrypi.org/)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从树莓派组织的网站了解更多关于树莓派的信息**：[https://www.raspberrypi.org/](https://www.raspberrypi.org/)'
- en: '**Learn more about Johnny-Five from the main project page for Johnny-Five (we''ll
    be seeing a lot of this site as we use their documentation to complete many of
    the book''s projects)**: [http://johnny-five.io/](http://johnny-five.io/)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从Johnny-Five的主项目页面了解更多关于Johnny-Five的信息（随着我们使用他们的文档来完成本书的许多项目，我们将看到很多这个网站）**：[http://johnny-five.io/](http://johnny-five.io/)'
- en: '**Learn more about the Raspbian operating system from the Raspbian website**:
    [https://www.raspberrypi.org/documentation/raspbian](https://www.raspberrypi.org/documentation/raspbian/)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从Raspbian网站了解更多关于Raspbian操作系统的信息**：[https://www.raspberrypi.org/documentation/raspbian](https://www.raspberrypi.org/documentation/raspbian/)'
