- en: Chapter 7. Customizing the App
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章. 自定义应用
- en: In the previous chapter, we dug deeply into some more advanced features of Ionic
    like the popover and the modal features. In this chapter, we will be focusing
    on customizing an Ionic application. The Ionic SDK comes by default with some
    great tools that make it easy to customize your application to fit the design
    guides of your brand. This is thanks to its built-in integration of Gulp for your
    build process needs and SCSS for CSS preprocessing.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们深入探讨了 Ionic 的一些更高级的功能，如弹出和模态功能。在本章中，我们将专注于自定义 Ionic 应用。Ionic SDK 默认附带一些优秀的工具，这些工具使得自定义应用程序以适应您品牌的视觉指南变得容易。这得益于其内置的
    Gulp 集成，用于构建过程的需求，以及 SCSS 用于 CSS 预处理。
- en: Ionic also has a special Angular provider called `$ionicConfigProvider`. This
    provider can be used to do a lot of configuration and customization like specifying
    what type of animations your application should use or even more advanced stuff
    like specifying how many cache items you want in your cache. The `$ionicConfigProvider`
    also lets you specify these configurations on a global level, or on a platform-by-platform
    basis.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 还有一个特殊的 Angular 提供者，称为 `$ionicConfigProvider`。这个提供者可以用来进行大量的配置和自定义，例如指定应用程序应使用哪种类型的动画，甚至更高级的功能，如指定您想要在缓存中保留多少缓存项。`$ionicConfigProvider`
    还允许您在全局级别或按平台基础指定这些配置。
- en: Customizing the look and feel of your app
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义应用的视觉和感觉
- en: When you created an Ionic application using one of the Ionic templates, you
    would have noticed by now that it comes with some built-in default CSS styles.
    Many times you will want to know how you can add your own colors and styles while
    keeping some of the built-in Ionic styles.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用其中一个 Ionic 模板创建 Ionic 应用程序时，您现在应该已经注意到它附带了一些内置的默认 CSS 样式。很多时候，您会想知道如何在保留一些内置的
    Ionic 样式的同时添加您自己的颜色和样式。
- en: Ionic styles with SASS
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 SASS 的 Ionic 样式
- en: This is well thought out by the Ionic team and for this reason, they actually
    created all their CSS styles using SCSS. SCSS is an independent technology based
    on SASS that lets you write CSS in an object-oriented way which then gets compiled
    into CSS. SCSS is a really cool way to write CSS rules as it allows us to create
    variables and use them to create our style sheet. If you are completely new to
    SCSS and you want to see some brief information about SCSS, feel free to visit
    [http://sass-lang.com](http://sass-lang.com).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这是由 Ionic 团队深思熟虑的结果，因此他们实际上使用 SCSS 创建了所有他们的 CSS 样式。SCSS 是基于 SASS 的一个独立技术，它允许您以面向对象的方式编写
    CSS，然后将其编译成 CSS。SCSS 是编写 CSS 规则的一种非常酷的方式，因为它允许我们创建变量并使用它们来创建样式表。如果您对 SCSS 完全陌生，并且想了解一些关于
    SCSS 的简要信息，请随时访问 [http://sass-lang.com](http://sass-lang.com)。
- en: Now, let's have a look at the folder structure of an Ionic project once more
    with customization of our styles with SCSS in mind.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们再次查看 Ionic 项目的文件夹结构，同时考虑到使用 SCSS 自定义样式。
- en: Ionic SCSS overview
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic SCSS 概览
- en: 'To have an overview of the SCSS structure of Ionic, we are going to create
    a brand new application using the Ionic blank template. We are going to call this
    application `custom-app`. The following is the command to create this new application.
    Fire up a terminal window on your computer and CD into a directory of your choice
    and run the following command:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解 Ionic 的 SCSS 结构概览，我们将创建一个全新的应用程序，使用 Ionic 空模板。我们将把这个应用程序称为 `custom-app`。以下创建这个新应用程序的命令。在您的计算机上打开一个终端窗口，切换到您选择的目录，并运行以下命令：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After you have created your new `custom-app` application, open this new project
    in your favorite IDE to have an overview of the folder structure. You should see
    something close to what we have in the following screenshot:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在您创建了新的 `custom-app` 应用程序之后，在您最喜欢的 IDE 中打开这个新项目，以了解文件夹结构概览。您应该看到以下截图中的内容：
- en: '![Ionic SCSS overview](img/00050.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic SCSS 概览](img/00050.jpeg)'
- en: 'There are two folders that you should pay close attention to. The first folder
    is the `scss` folder found in the root directory of the project. This folder has
    a file called `ionic.app.scss` within it; we will take a look at this in more
    detail. The following is a screenshot of what this folder looks like:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个文件夹您应该特别注意。第一个文件夹是位于项目根目录中的 `scss` 文件夹。这个文件夹中有一个名为 `ionic.app.scss` 的文件；我们将更详细地查看这个文件。以下是这个文件夹的截图：
- en: '![Ionic SCSS overview](img/00051.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic SCSS 概览](img/00051.jpeg)'
- en: The second folder is also titled `scss`, but this folder can be found by navigating
    to the following path from the root folder `www/lib/ionic/scss`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个文件夹也命名为 `scss`，但您可以通过从根文件夹 `www/lib/ionic/scss` 导航到以下路径来找到此文件夹。
- en: 'The following screenshot shows this folder:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了此文件夹：
- en: '![Ionic SCSS overview](img/00052.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic SCSS 概览](img/00052.jpeg)'
- en: 'Now, if you look even further within this second `scss` folder, you should
    see something that closely resembles what we have in the following screenshot
    with a number of SCSS files within the `scss` folder:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您进一步查看这个第二个 `scss` 文件夹，您应该会看到一些与以下截图相似的内容，其中包含 `scss` 文件夹中的多个 SCSS 文件：
- en: '![Ionic SCSS overview](img/00053.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![Ionic SCSS 概览](img/00053.jpeg)'
- en: This `scss` folder contains a numerous amount of files and you might be wondering
    what these files are for. As a part of this book, you do not need to understand
    the entire process of what these files are doing, but you need to know that they
    are the files that contain the SCSS code for every Ionic element. The entire Ionic
    CSS style sheet is generated by compiling these SCSS files. It is possible to
    go into these files to make changes to any SCSS file, but this is probably not
    a good idea, as you will risk breaking any dependencies in the SCSS code. For
    this reason, Ionic provides a much simpler way to do this thanks to `ionic.app.scss`
    that we briefly looked at earlier and will be looking at closely now.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此 `scss` 文件夹包含大量文件，您可能会想知道这些文件是做什么用的。作为本书的一部分，您不需要理解这些文件整个过程的全部内容，但您需要知道它们是包含每个
    Ionic 元素 SCSS 代码的文件。整个 Ionic CSS 样式表是通过编译这些 SCSS 文件生成的。您可以选择进入这些文件以更改任何 SCSS 文件，但这可能不是一个好主意，因为您可能会破坏
    SCSS 代码中的任何依赖项。因此，Ionic 提供了一种更简单的方法来实现这一点，这得益于我们之前简要提到的 `ionic.app.scss`，现在我们将对其进行详细探讨。
- en: The ionic.app.scss file
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ionic.app.scss 文件
- en: 'The `ionic.app.scss` file can be found within a directory called `scss` in
    the project root directory, as shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`ionic.app.scss` 文件可以在项目根目录下的 `scss` 目录中找到，如下面的截图所示：'
- en: '![The ionic.app.scss file](img/00054.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![ionic.app.scss 文件](img/00054.jpeg)'
- en: 'This file is the most important file for customizing the styles of your Ionic
    app. Think of this file as an interface for overriding any SCSS style contained
    in any of the SCSS files we noted in the `www/lib/ionic/scss` path. If you look
    at this `ionic.app.scss` file currently, it should look like what we have in the
    following code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件是自定义您的 Ionic 应用样式最重要的文件。将此文件视为一个接口，可以覆盖 `www/lib/ionic/scss` 路径中包含的任何 SCSS
    文件中的任何 SCSS 样式。如果您现在查看此 `ionic.app.scss` 文件，它应该看起来像以下代码中的内容：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: From the preceding code, you can even see some comments that tell you how to
    use the file to override your SCSS styles. Now, before we start learning how to
    actually override these files, first let's learn how to set up our SCSS for our
    project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，您甚至可以看到一些注释，告诉您如何使用此文件来覆盖您的 SCSS 样式。现在，在我们开始学习如何实际覆盖这些文件之前，首先让我们学习如何为我们的项目设置
    SCSS。
- en: Setting up SCSS
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 SCSS
- en: Before we set up the SCSS, we will first have a brief look at how our CSS is
    currently integrated. When you create a new Ionic project, the project uses styles
    from two sources by default.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们设置 SCSS 之前，我们首先简要地看看我们的 CSS 目前是如何集成的。当您创建一个新的 Ionic 项目时，项目默认使用两个来源的样式。
- en: The first source is the `ionic.css` file which can be found in the path `lib/ionic/css/ionic.css`.
    This file contains already compiled CSS code for all the Ionic default styles.
    It is simply a CSS compilation of all the SCSS files found in the `www/lib/ionic/scss/ionic`
    directory relative to the root directory of your project.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个来源是位于路径 `lib/ionic/css/ionic.css` 的 `ionic.css` 文件。此文件包含所有 Ionic 默认样式的已编译
    CSS 代码。它只是对项目根目录相对路径 `www/lib/ionic/scss/ionic` 目录中找到的所有 SCSS 文件进行 CSS 编译。
- en: 'The second source is the `style.css` file found in the `css/style.css` path
    relative to the root directory of your project. This file is normally empty at
    the time you create your project and is a place where you can enter your own custom
    styles in CSS, if you do not want to use SCSS. A look at the `index.html` file
    as shown in the following screenshot shows how these two files are referenced
    as CSS style sheets by default:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个来源是位于项目根目录相对路径 `css/style.css` 的 `style.css` 文件。在您创建项目时，此文件通常是空的，并且是一个可以输入您自己的自定义
    CSS 的地方，如果您不想使用 SCSS。查看以下截图中的 `index.html` 文件显示了这两个文件如何默认作为 CSS 样式表被引用：
- en: '![Setting up SCSS](img/00055.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![设置 SCSS](img/00055.jpeg)'
- en: With this explained, we will go ahead and start setting up SCSS on our Ionic
    application.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 解释到这里，我们将继续在我们的Ionic应用程序上设置SCSS。
- en: Setting up SCSS can be quite challenging traditionally but Ionic comes built-in
    with some tools that make it easy. To begin the process of setting up the SCSS
    of your project, fire up a terminal window and simply navigate into your project's
    root directory by running the `cd custom-app` command.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的设置SCSS可能相当具有挑战性，但Ionic内置了一些工具，使得这个过程变得简单。要开始设置你项目中的SCSS，打开一个终端窗口，并简单地通过运行`cd
    custom-app`命令进入你项目的根目录。
- en: 'The next step is to install `bower` on your computer if you do not already
    have this installed. You can do so by running the following command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在你的电脑上安装`bower`，如果你还没有安装的话。你可以通过运行以下命令来完成：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might need to prefix the `sudo` command if you are on a Linux or Mac computer.
    This will be `sudo npm install bower –g`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是Linux或Mac电脑，你可能需要为`sudo`命令添加前缀。这将变为`sudo npm install bower –g`。
- en: 'After this, the final step to get SCSS setup is by running the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，设置SCSS的最后一步是通过运行以下命令来完成的：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This command will do all the necessary things behind the scenes that are needed
    to enable your project to work with SCSS. After this command is complete, you
    will notice a new folder called the `node-modules` folder in the root of your
    project. This is completely normal and is the folder that contains the packages
    necessary for your project to work with SCSS.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令会在幕后完成所有必要的操作，使你的项目能够与SCSS一起工作。完成这个命令后，你会在项目的根目录中注意到一个新的文件夹，名为`node-modules`文件夹。这是完全正常的，这个文件夹包含了使你的项目能够与SCSS一起工作的所有包。
- en: 'By now, we have successfully set up SCSS for our project. The first thing you
    should look at is your `index.html` file. Your `index.html` should resemble the
    following code block:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经成功地为我们的项目设置了SCSS。你应该首先查看你的`index.html`文件。你的`index.html`应该类似于以下代码块：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first thing you will notice in the header is that the reference to CSS files
    have changed in comparison to what we briefly discussed earlier. Now, you have
    only one CSS reference in the `<head>` part of `index.html` pointing to `css/ionic.app.css`.
    You might be wondering how this happened. Well, basically when you set up SCSS
    like we have done in this chapter so far, Ionic automatically sets up the SCSS
    to compile all the SCSS and output them into `ionic.app.css`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在页眉中，你首先会注意到与之前简短讨论的内容相比，对CSS文件的引用已经发生了变化。现在，在`index.html`的`<head>`部分只有一个CSS引用指向`css/ionic.app.css`。你可能想知道这是怎么发生的。好吧，基本上，当你像我们在本章中到目前为止所做的那样设置SCSS时，Ionic会自动设置SCSS来编译所有的SCSS并将它们输出到`ionic.app.css`。
- en: '![Setting up SCSS](img/00056.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![设置SCSS](img/00056.jpeg)'
- en: If you navigate to the `www/css` path, you will see that we have three files
    as opposed to one as we saw earlier. You will see an `ionic.app.css` file and
    an `ionic.app.min.css` file. These two files are the same with `ionic.app.min.css`
    being a minified version of the `ionic.app.css`. They are the output of all the
    SCSS files that we checked out earlier compiled into one file. There are a lot
    more things that happen behind the scenes to ensure that this SCSS compilation
    happens, but for the sake of simplicity we won't be going deep into that in this
    book.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你导航到`www/css`路径，你会看到我们现在有三个文件，而不是之前看到的那个。你会看到一个`ionic.app.css`文件和一个`ionic.app.min.css`文件。这两个文件是相同的，其中`ionic.app.min.css`是`ionic.app.css`的压缩版本。它们是我们之前检查出的所有SCSS文件的输出，编译成一个文件。在幕后还有许多其他事情发生以确保SCSS编译能够完成，但为了简单起见，我们不会在本章深入探讨这一点。
- en: Customizing the SCSS
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义SCSS
- en: 'To begin customizing our app, the first thing you want to do is to run your
    application using the `ionic serve` technique learned from previous chapters in
    this book, using the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始自定义我们的应用程序，你首先想要做的是使用本书前几章中学到的`ionic serve`技术运行你的应用程序，使用以下命令：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This should bring up your application running in the browser and you should
    see something that closely resembles what we have in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会弹出一个在浏览器中运行的应用程序，你应该看到的东西与我们以下截图中的非常相似：
- en: '![Customizing the SCSS](img/00057.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![自定义SCSS](img/00057.jpeg)'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you don't close your terminal or terminate the serve session from
    here on, in order to follow the instructions that come soon.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你从现在开始不要关闭你的终端或终止serve会话，以便遵循即将到来的说明。
- en: 'Now to explain what we will try to do, first let''s have a look at the code
    for the head of this app. The code block is the code for our app and you can find
    this in the `index.html` file in the `www` folder of your project:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在来解释我们将尝试做什么，首先让我们看看这个应用头部代码。代码块是应用的代码，你可以在项目的`www`文件夹中的`index.html`文件中找到这个代码块：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Pay close attention to the piece of code that represents the main view part
    of the preceding code block which is also represented in the following code block:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细注意代表前面代码块主要视图部分的代码片段，它也在以下代码块中表示：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you look at the opening `<ion-header>` tag, you will see that it has a class
    called `bar-stable`. This is an in-built class that Ionic comes with which gives
    the header a sort of light gray color, as seen from the screenshot we visited
    earlier.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看开头的`<ion-header>`标签，你会看到它有一个名为`bar-stable`的类。这是一个Ionic内置的类，它给标题带来了一种类似浅灰色的颜色，就像我们在之前查看的截图中所看到的那样。
- en: Let's say we want to customize this header to fit our brand color and let's
    say, for example, that our brand color and this brand happens to be my favorite
    accent of red which has the hex code of `#D71300`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想要自定义这个标题以适应我们的品牌颜色，比如说，我们的品牌颜色和这个品牌恰好是我的最喜欢的红色色调，其十六进制代码为`#D71300`。
- en: 'Now, you might be tempted to go into the `ionic.app.css` file to look for every
    occurrence of this in our CSS style sheet and change it. But remember that this
    `ionic.app.css` is generated based on our SCSS files. Ionic gives us a great way
    to override default styles with SCSS thanks to the `ionic.app.scss` file which
    can be found in the `scss` directory. We looked at this file earlier and we are
    going to look at it again:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能想进入`ionic.app.css`文件，查找CSS样式表中所有这个样式的出现，并更改它。但请记住，这个`ionic.app.css`是基于我们的SCSS文件生成的。Ionic通过`ionic.app.scss`文件为我们提供了一个很好的方法来用SCSS覆盖默认样式，这个文件可以在`scss`目录中找到。我们之前已经看过这个文件，现在我们再次查看它：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The preceding code block resembles what you currently have in your `ionic.app.scss`
    file. To override the color of the header, we will override the current color
    of the `$stable` variable of our SCSS.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码块类似于你目前在`ionic.app.scss`文件中拥有的内容。为了覆盖标题的颜色，我们将覆盖我们SCSS中的`$stable`变量的当前颜色。
- en: 'The code for this is as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码如下所示：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You are supposed to replicate the preceding code anywhere but just before the
    last line of the following code block:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在以下代码块的最后一行之前任何地方复制前面的代码：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, your final code should resemble the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你的最终代码应该类似于以下内容：
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Once this is done, save the `ionic.app.scss` file. By doing this, you have
    completed the process of overriding the app, and your header should now be red.
    Go back to your application on the browser or run your app with the `ionic serve`
    technique if you don''t have it running and you should see something that looks
    similar to what we have in the following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，保存`ionic.app.scss`文件。通过这样做，你就完成了覆盖应用的过程，现在你的标题应该是红色的。如果你没有在浏览器中打开你的应用，或者没有运行`ionic
    serve`命令，请回到你的应用，你应该会看到以下截图中的类似内容：
- en: '![Customizing the SCSS](img/00058.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![自定义SCSS](img/00058.jpeg)'
- en: You can see that header now takes the color of the hex code we provided in the
    `ionic.app.scss` file. We can override any default file with this file. All you
    need to do is have a glance through the `lib/ionic/scss` folder, identify the
    SCSS rule you want to override, and override in `ionic.app.scss`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以看到，标题现在采用了我们在`ionic.app.scss`文件中提供的十六进制代码的颜色。我们可以用这个文件覆盖任何默认文件。你所需做的只是浏览一下`lib/ionic/scss`文件夹，识别出你想要覆盖的SCSS规则，然后在`ionic.app.scss`中进行覆盖。
- en: With this done, we have completed the process of learning how to override and
    set up SCSS of our Ionic app. The next step is to learn about `$ionicConfigProvider`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，我们就完成了学习如何覆盖和设置我们的Ionic应用SCSS的过程。下一步是学习关于`$ionicConfigProvider`的内容。
- en: $ionicConfigProvider
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: $ionicConfigProvider
- en: '`$ionicConfigProvider` is a provider that Ionic exposes and which allows us
    to do some very powerful configurations. We will not be writing any code for this
    as it is an advanced feature but you should be well aware of its existence.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`$ionicConfigProvider`是一个Ionic公开的提供者，它允许我们进行一些非常强大的配置。我们不会为这个写任何代码，因为它是一个高级特性，但你应该对其存在有很好的了解。'
- en: 'Some of the features that `$ionicConfigProvider` lets you do, include the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`$ionicConfigProvider`允许你做的某些功能包括以下内容：'
- en: Specify the transition type for your app
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定你应用的过渡类型
- en: Set the maximum cache
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置最大缓存
- en: Disable/enable animations
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用/禁用动画
- en: Enable/enable native scrolling
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用/启用原生滚动
- en: Specify tabs positions
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定标签位置
- en: These and many more are some of the features that `$ionicConfigProvider` lets
    you fiddle with. Remember that this feature is a fairly advanced feature and it
    is very likely possible to completely design your app without it. Most apps most
    likely do not use its features but if you find yourself ever needing to use it,
    you can visit the official documentation for `$ionicConfigProvider` to see its
    full potential at [http://ionicframework.com/docs/api/provider/$ionicConfigProvider/](http://ionicframework.com/docs/api/provider/%24ionicConfigProvider/).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些以及更多功能都是 `$ionicConfigProvider` 允许你调整的。记住，这个功能是一个相当高级的功能，并且很可能在不使用它的情况下完全设计你的应用。大多数应用可能不会使用它的功能，但如果你发现自己需要使用它，你可以访问
    `$ionicConfigProvider` 的官方文档，查看其在 [http://ionicframework.com/docs/api/provider/$ionicConfigProvider/](http://ionicframework.com/docs/api/provider/%24ionicConfigProvider/)
    上的全部潜力。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to customize our application by setting up SCSS
    for our Ionic app. We also had a brief look at `$ionicConfigProvider` and saw
    some of its wonderful features. In the next chapter, we will get to learn how
    to create a new type of Ionic app based on the tabs template.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何通过为我们的 Ionic 应用设置 SCSS 来自定义我们的应用。我们还简要地了解了 `$ionicConfigProvider`
    并看到了它的一些精彩功能。在下一章中，我们将学习如何根据标签模板创建新的类型 Ionic 应用。
