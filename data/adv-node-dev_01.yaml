- en: Getting Set Up
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: In this chapter, you'll get your local environment set up for the rest of the
    book. Whether you're on macOS, Linux, or Windows, we'll install MongoDB and Robomongo.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将为本书的其余部分设置本地环境。无论您使用的是macOS、Linux还是Windows，我们都将安装MongoDB和Robomongo。
- en: 'More specifically, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地，我们将涵盖以下主题：
- en: MongoDB and Robomongo installation for Linux and macOS
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux和macOS上的MongoDB和Robomongo安装
- en: MongoDB and Robomongo installation for Windows
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的MongoDB和Robomongo安装
- en: Installing MongoDB and Robomongo for Linux and macOS
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Linux和macOS安装MongoDB和Robomongo
- en: This section is for macOS and Linux users. If you are on Windows, I have written
    a separate section for you.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分是为macOS和Linux用户准备的。如果你使用的是Windows，我已经为你写了一个单独的部分。
- en: The first thing we'll do is to download and set up MongoDB, as this will be
    the database we will use. We'll be using a third-party service to host our database
    when we eventually deploy it to Heroku, but on our local machine we'll need to
    download MongoDB so that we can start up a database server. This will let us connect
    to it via our Node applications to read and write data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先下载并设置MongoDB，因为这将是我们将使用的数据库。当我们最终将其部署到Heroku时，我们将使用第三方服务来托管我们的数据库，但在我们的本地机器上，我们需要下载MongoDB，以便我们可以启动数据库服务器。这将让我们通过我们的Node应用程序连接到它，以读取和写入数据。
- en: In order to grab the database, we'll head over to [mongodb.com](https://www.mongodb.com/).
    Then we can go to the Download page and download the appropriate version.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取数据库，我们将前往[mongodb.com](https://www.mongodb.com/)。然后我们可以转到下载页面并下载适当的版本。
- en: 'On this page, scroll down and select Community Server; this is the one we''ll
    be using. Also, there are options for different operating systems, whether it''s
    Windows, Linux, macOS, or Solaris. I''m on macOS, so I''ll use this download:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个页面上，向下滚动并选择Community Server；这是我们将要使用的。此外，还有不同操作系统的选项，无论是Windows、Linux、macOS还是Solaris。我使用的是macOS，所以我会使用这个下载：
- en: '![](img/a102bcde-1204-422d-a5f9-89241b83256a.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a102bcde-1204-422d-a5f9-89241b83256a.png)'
- en: If you're on Linux, click on Linux; then go to the Version drop down and select
    the appropriate version. For example, if you're on Ubuntu 14.04, you can download
    the correct one from the Linux tab. Then, you can simply click on the Download
    button and follow along.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在Linux上，点击Linux；然后转到版本下拉菜单并选择适当的版本。例如，如果你在Ubuntu 14.04上，你可以从Linux选项卡下载正确的版本。然后，你只需点击下载按钮并跟随操作。
- en: Next you can open it up. We'll just extract the directory, creating a brand
    new folder in the `Downloads` folder. If you're on Linux, you might need to manually
    extract the contents of that archive into the `Downloads` folder.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来你可以打开它。我们将只需提取目录，创建一个全新的文件夹在`Downloads`文件夹中。如果你在Linux上，你可能需要手动将该存档的内容解压到`Downloads`文件夹中。
- en: 'Now this folder contains a `bin` folder, and in there we have all of the executables
    that we need in order to do things such as connecting to the database and starting
    a database server:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个文件夹包含一个`bin`文件夹，在那里我们有所有需要的可执行文件，以便做一些事情，比如连接到数据库和启动数据库服务器：
- en: '![](img/cf592d91-c40c-4267-9e8c-d10d17441e55.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf592d91-c40c-4267-9e8c-d10d17441e55.png)'
- en: 'Before we go ahead and run any of them. We''ll rename this directory to `mongo`
    and then move it into the `user` directory. You can see that now in the `user`
    directory, I have the `mongo` folder. We''ll also create a brand new directory
    alongside of `mongo` called `mongo-data`, and this will store the actual data
    inside of the database:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续运行任何命令之前。我们将把这个目录重命名为`mongo`，然后将它移动到`user`目录中。你可以看到现在在`user`目录中，我有`mongo`文件夹。我们还将在`mongo`旁边创建一个全新的目录，名为`mongo-data`，这将存储数据库中的实际数据：
- en: '![](img/a5a2c607-ba1b-492f-ba54-8883c2181d75.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5a2c607-ba1b-492f-ba54-8883c2181d75.png)'
- en: 'So when we insert a new record into the `Todos` table, for example, that will
    live in the `mongo-data` folder. Once you have the `mongo` folder moved into the
    `user` directory and you have the new `mongo-data` folder, you are ready to actually
    run the database server from Terminal. I''ll go into Terminal and navigate into
    that brand new `mongo` folder that is in the `user` directory, where I currently
    am, so I can `cd` into `mongo`, then I''ll `cd` into the `bin` directory by tacking
    it on right there:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以当我们向`Todos`表中插入新记录时，例如，它将存储在`mongo-data`文件夹中。一旦你将`mongo`文件夹移动到`user`目录中，并且你有了新的`mongo-data`文件夹，你就可以准备从终端实际运行数据库服务器了。我将进入终端并导航到`user`目录中的全新`mongo`文件夹，我当前所在的位置，所以我可以`cd`到`mongo`，然后我将通过在那里添加`bin`目录来`cd`进入`bin`目录：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'From here, we have a bunch of executables that we can run:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们有一堆可执行文件可以运行：
- en: '![](img/b7f1e04d-e598-4cda-9f34-5567fcbfc0ef.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b7f1e04d-e598-4cda-9f34-5567fcbfc0ef.png)'
- en: 'We have things such as bisondump and mongodump. In this section, we''ll focus
    on: mongod, which will start up the database server, and mongo, which will let
    us connect to the server and run some commands. Just like when we type `node`
    we can run some JavaScript commands right in Terminal, when we type `mongo`, we''ll
    be able to run some Mongo commands to insert, fetch, or do anything we like with
    the data.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一些东西，比如bisondump和mongodump。在这一部分，我们将专注于：mongod，它将启动数据库服务器，以及mongo，它将让我们连接到服务器并运行一些命令。就像当我们输入`node`时，我们可以在终端中运行一些JavaScript命令一样，当我们输入`mongo`时，我们将能够运行一些Mongo命令来插入、获取或对数据进行任何我们喜欢的操作。
- en: 'First up though, let''s start up the database server. I''ll use `./` to run
    a file in the current directory. The file we''ll run is called `mongod`; also,
    we do need to provide one argument: the `dbpath` argument. The `dbpath` argument
    will get set equal to the path of the directory we just created, the `mongo-data`
    directory. I''ll use `~` (the tilde) to navigate to the user directory, and then
    to `/mongo-data`, as shown here:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 不过首先，让我们启动数据库服务器。我将使用`./`来运行当前目录中的文件。我们将要运行的文件名为`mongod`；此外，我们需要提供一个参数：`dbpath`参数。`dbpath`参数将被设置为刚刚创建的目录的路径，即`mongo-data`目录。我将使用`~`（波浪号）来导航到用户目录，然后到`/mongo-data`，如下所示：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Running this command will start up the server. This will create an active connection,
    which we can connect to for manipulating our data. The last line that you see
    when you run the command should be, waiting for connections on port 27017:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这个命令将启动服务器。这将创建一个活动连接，我们可以连接到这个连接来操作我们的数据。当你运行命令时，你看到的最后一行应该是，等待在端口27017上连接：
- en: '![](img/6ae32fca-e76e-440c-b799-8e0a4dc89e28.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6ae32fca-e76e-440c-b799-8e0a4dc89e28.png)'
- en: If you see this, it means that your server is up and running.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到这个，这意味着你的服务器已经启动了。
- en: 'Next up, let''s open a new tab, which starts in the exact same directory, and
    this time around, instead of running `mongod`, we''ll run the `mongo` file:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们打开一个新标签，它会在完全相同的目录中启动，这一次，不是运行`mongod`，而是运行`mongo`文件：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When we run `mongo`, we open up a console. It connects to the database server
    we just started, and from here, we can start running some commands. These commands
    are just to test that things are working as expected. We''ll be going over all
    of this in detail later in this section. For now though, we can access `db.Todos`,
    and then we''ll call `.insert` to create a brand new Todo record. I''ll call it
    like a function:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行`mongo`时，我们打开了一个控制台。它连接到我们刚刚启动的数据库服务器，从这里，我们可以开始运行一些命令。这些命令只是为了测试一切是否按预期工作。我们稍后将详细介绍所有这些内容。不过现在，我们可以访问`db.Todos`，然后我们将调用`.insert`来创建一个全新的Todo记录。我会像调用函数一样调用它：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, inside of `insert`, we''ll pass in our document. This will be the MongoDB
    document we want to create. For now, we''ll keep things really simple. On our
    object, we''ll specify one attribute, `text`, setting it equal to a string. Inside
    of quotes, type anything you want to do. I''ll say `Film new node course`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在`insert`里，我们将传入我们的文档。这将是我们想要创建的MongoDB文档。现在，我们将保持事情非常简单。在我们的对象上，我们将指定一个属性，`text`，将其设置为一个字符串。在引号内，输入任何你想做的事情。我会说`Film
    new node course`：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'With your command looking just like this, you can press *enter*, and you should
    get back a WriteResult object with an nInserted property, which is short for the
    number inserted: a value set to 1\. This means that one new record was created,
    and that is fantastic!'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 只要你的命令看起来像这样，你可以按*enter*，然后你应该得到一个带有nInserted属性的WriteResult对象，这个属性是插入的数量的缩写：一个值设置为1。这意味着创建了一个新的记录，这太棒了！
- en: '![](img/8386e144-0b90-406d-b53e-74d0b1a6fc5c.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8386e144-0b90-406d-b53e-74d0b1a6fc5c.png)'
- en: Now that we've inserted a record, let's fetch the record just to make sure that
    everything worked as expected.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经插入了一条记录，让我们获取一下记录，以确保一切都按预期工作。
- en: 'Instead of calling `insert`, we''ll call `find` without any arguments. We want
    to return every single item in the `Todos` collection:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将调用`find`而不带任何参数。我们想返回`Todos`集合中的每一个项目：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When I run this, what do we get? We get one object-looking thing back:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行这个时，我们会得到什么？我们得到一个看起来像对象的东西：
- en: '![](img/0010a250-81ef-4691-81e9-47bd8947a807.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0010a250-81ef-4691-81e9-47bd8947a807.png)'
- en: We have our `text` attribute set to the text that we provided, and we have an
    `_id` property. This is the unique identifier for each record, which we'll talk
    about later. As long as you're seeing the text property coming back to what you
    set, you are good to go.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`text`属性设置为我们提供的文本，我们有一个`_id`属性。这是每条记录的唯一标识符，我们稍后会讨论。只要你看到文本属性回到你设置的内容，你就可以放心了。
- en: We can shut down the `mongo` command. However, we will still leave the `mongod`
    command running because there's one more thing I want to install. It's called
    Robomongo, and it's a graphic user interface for managing your Mongo database.
    This will be really useful as you start playing around with Mongo. You'll be able
    to view the exact data saved in the database; you can manipulate it and do all
    sorts of stuff.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以关闭`mongo`命令。但是，我们仍然会让`mongod`命令继续运行，因为我还想安装一件东西。它叫做Robomongo，它是一个用于管理Mongo数据库的图形用户界面。当你开始玩Mongo时，这将非常有用。你将能够查看数据库中保存的确切数据；你可以操纵它并做各种各样的事情。
- en: 'Over in **Finder**, we have our `mongo-data` directory, and you can see that
    there is a ton of stuff in here. This means that our data was successfully saved.
    All of the data is in this `mongo-data` directory. To download and install Robomongo,
    which is available for Linux, Windows and macOS, we''ll head over to [robomongo.org](https://robomongo.org/)
    and grab the installer for our operating system:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Finder**中，我们有我们的`mongo-data`目录，你可以看到这里有很多东西。这意味着我们的数据已经成功保存。所有的数据都在这个`mongo-data`目录中。要下载和安装Robomongo，它适用于Linux、Windows和macOS，我们将前往[robomongo.org](https://robomongo.org/)并获取适合我们操作系统的安装程序：
- en: '![](img/2ae29fa9-116a-4c8e-958a-3e54f5af15ac.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ae29fa9-116a-4c8e-958a-3e54f5af15ac.png)'
- en: We can click on Download Robo 3T and download the most recent version; it should
    automatically detect your OS. Download the installer for either Linux or macOS.
    The one for macOS is really simple. It's one of those installers where you take
    the icon and drag it into the `Applications` folder. For Linux, you'll need to
    extract the archive and run the program in the `bin` directory. This will start
    up Robomongo on your Linux distribution.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击下载Robo 3T并下载最新版本；它应该会自动检测你的操作系统。下载适用于Linux或macOS的安装程序。macOS的安装程序非常简单。这是其中一种你将图标拖到`Applications`文件夹中的安装程序。对于Linux，你需要解压存档并在`bin`目录中运行程序。这将在你的Linux发行版上启动Robomongo。
- en: 'Since I''m using macOS, I''ll just quickly drag the icon over to Applications,
    and then we can play around with the program itself. Next, I''ll open it up inside
    the Finder. When you first open up Robomongo, you might get a warning like the
    following on macOS, since it''s a program that we downloaded and it''s not from
    an identified macOS developer:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我使用的是macOS，我只需快速将图标拖到Applications中，然后我们可以玩一下程序本身。接下来，我会在Finder中打开它。当你第一次打开Robomongo时，你可能会在macOS上收到如下警告，因为它是一个我们下载的程序，不是来自已识别的macOS开发者：
- en: '![](img/86211a5f-5bf6-4de6-ac3a-67ed46de358f.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86211a5f-5bf6-4de6-ac3a-67ed46de358f.png)'
- en: 'This is fine; most programs you download from the web will not be official
    since they did not come from the App Store. You can right-click on the downloaded
    package, select Open, and then click on Open again to run that program. When you
    first open it, you''ll see some screens like the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这没问题；大多数从网上下载的程序都不是官方的，因为它们不是来自应用商店。您可以右键单击下载的软件包，选择“打开”，然后再次点击“打开”来运行该程序。当您第一次打开它时，您会看到以下屏幕：
- en: '![](img/0373d4b1-8e34-40fd-b3e6-54fd39c9bd9c.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0373d4b1-8e34-40fd-b3e6-54fd39c9bd9c.png)'
- en: 'We have a little screen in the background and a list of connections; currently
    that list is empty. What we need to do is to create a connection for our local
    MongoDB database so that we can connect to it and manipulate that data. We have
    Create. I''ll click on this, and the only thing we''ll need to update is Name.
    I''ll give it a more descriptive name, such as `Local Mongo Database`. I''ll set
    Address to `localhost` and the `27017` port is correct; there''s no need to change
    these. So, I''ll click on Save:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个小屏幕在后台和一个连接列表；目前该列表为空。我们需要做的是为我们的本地MongoDB数据库创建一个连接，以便我们可以连接到它并操作那些数据。我们有创建。我会点击这个，我们唯一需要更新的是名称。我会给它一个更具描述性的名称，比如`本地Mongo数据库`。我会将地址设置为`localhost`，`27017`端口是正确的；没有必要更改这些。所以，我会点击“保存”：
- en: '![](img/81030b36-1414-4923-aa5d-4b4ff8eebef5.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/81030b36-1414-4923-aa5d-4b4ff8eebef5.png)'
- en: Next, I'll double-click on the database to connect to it. Inside the tiny window,
    we have our database. We are connected to it; we can do all sorts of things to
    manage it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我将双击数据库以连接到它。在小窗口内，我们有我们的数据库。我们已经连接到它；我们可以做各种事情来管理它。
- en: 'We can open up the `test` database, and in there, we should see one `Collections`
    folder. If we expand this folder, we have our `Todos` collection, and from there,
    we can right-click on the collection. Next, click on View Documents, and we should
    get our one Todo item, the one that we created over inside the Mongo console:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以打开`test`数据库，在那里，我们应该看到一个`Collections`文件夹。如果我们展开这个文件夹，我们有我们的`Todos`集合，然后，我们可以右键单击该集合。接下来，点击“查看文档”，我们应该会看到我们的一个Todo项目，就是我们在Mongo控制台中创建的那个：
- en: '![](img/b61e0458-1436-4e0a-8e5d-d7f9720297ee.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b61e0458-1436-4e0a-8e5d-d7f9720297ee.png)'
- en: 'I can expand it to view the text property. Film new node course shows up:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以展开它以查看文本属性。电影新节点课程出现了：
- en: '![](img/923fd0bf-e61a-4b96-ba04-23fce7844409.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/923fd0bf-e61a-4b96-ba04-23fce7844409.png)'
- en: If you're seeing this, then you are done.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到这个，那么您已经完成了。
- en: The next section is for Windows users.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节是给Windows用户的。
- en: Installing MongoDB and Robomongo for Windows
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Windows安装MongoDB和Robomongo
- en: If you're on Windows, this is the installation section for you. If you're on
    Linux or macOS, the previous section was for you; you can skip this one. Our goal
    here is to install MongoDB on our machines, which will let us create a local MongoDB
    database server. We'll be able to connect to that server with Node.js, and we'll
    be able to read and write data to the database. This will be fantastic for the
    Todo API, which will be responsible for reading and writing various Todo-related
    information.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Windows，这是适合您的安装部分。如果您使用的是Linux或macOS，前一节适合您；您可以跳过这一部分。我们的目标是在我们的计算机上安装MongoDB，这将让我们创建一个本地MongoDB数据库服务器。我们将能够使用Node.js连接到该服务器，并且我们将能够读取和写入数据库中的数据。这对于Todo
    API来说将是非常棒的，它将负责读取和写入各种与Todo相关的信息。
- en: 'To get started, we''ll grab the MongoDB installer by going over to [mongodb.com](https://www.mongodb.com/).
    Here we can click on the big green Download button; also, we can see several options
    on this page:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们将通过访问[mongodb.com](https://www.mongodb.com/)来获取MongoDB安装程序。在这里，我们可以点击大绿色的下载按钮；此外，我们还可以在此页面上看到几个选项：
- en: '![](img/f0efad4b-ffae-4687-8d4d-fc58c0b4dedb.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0efad4b-ffae-4687-8d4d-fc58c0b4dedb.png)'
- en: 'We''ll use Community Server and for Windows. If you go to the Version drop
    down, none of the versions there will look right for you. The top one is what
    we want: Windows Server 08 R2 64-bit and later with SSL support. Let''s start
    to download this. It is slightly big; just a tad over 100 MB, so it will take
    a moment for the download to begin.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Community Server和Windows。如果您转到版本下拉菜单，那里的版本都不适合您。顶部的是我们想要的：Windows Server
    08 R2 64位及更高版本，支持SSL。让我们开始下载这个。它稍微大一点；稍微超过100 MB，所以下载需要一些时间才能开始。
- en: 'I''ll start it up. It''s one of those basic installers, where you click on
    Next a few times and you agree to a license agreement. Click on the Custom option
    for a second, although we will be following through with the Complete option.
    When you click on Custom, it will show you where on your machine it''s going to
    be installed, and this is important. Here, you can see that for me it''s on `C:\Program
    Files\MongoDB\Server`, then in the `3.2` directory:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我会启动它。这是一个基本的安装程序，您需要点击几次“下一步”并同意许可协议。点击“自定义”选项一会儿，尽管我们将继续选择“完整”选项。当您点击“自定义”时，它会显示您的计算机上将安装在哪里，这很重要。在这里，您可以看到对我来说它在`C:\Program
    Files\MongoDB\Server`，然后在`3.2`目录中：
- en: '![](img/72c4a18a-cc75-4ca9-a154-4f86957e7b0a.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72c4a18a-cc75-4ca9-a154-4f86957e7b0a.jpg)'
- en: This is going to be important because we'll need to navigate into this directory
    in order to start up the MongoDB server. I will go back though, and I will be
    using the Complete option, which installs everything we need. Now we can actually
    start the installation process. Usually, you have to click on Yes, verifying that
    you want to install the software. I'll go ahead and do that, and then we are done.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将很重要，因为我们需要进入这个目录才能启动MongoDB服务器。我会返回，然后我将使用“完整”选项，这将安装我们需要的一切。现在我们实际上可以开始安装过程。通常，您需要点击“是”，以确认您要安装该软件。我会继续这样做，然后我们就完成了。
- en: 'Now once it''s installed, we''ll navigate into Command Prompt and boot up a
    server. The first thing we need to do is to navigate into that `Program Files`
    directory. I''m in Command Prompt. I recommend that you use Command Prompt and
    not Git Bash. Git Bash will not work for starting up the MongoDB server. I''ll
    navigate to the root of my machine using `cd/`, and then we can start navigating
    to that path using the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一旦它安装好了，我们将进入命令提示符并启动服务器。我们需要做的第一件事是进入`Program Files`目录。我在命令提示符中。我建议你使用命令提示符而不是Git
    Bash。Git Bash不能用来启动MongoDB服务器。我将使用`cd/`来导航到我的机器的根目录，然后我们可以使用以下命令来导航到那个路径：
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This is the directory where MongoDB was installed. I can use `dir` to print
    out the contents of this directory, and what we care about here is the `bin` directory:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是安装MongoDB的目录。我可以使用`dir`来打印出这个目录的内容，我们关心的是`bin`目录：
- en: '![](img/db65d9da-c05d-4a66-b6d0-daff0be8ad26.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db65d9da-c05d-4a66-b6d0-daff0be8ad26.jpg)'
- en: 'We can navigate into `bin` using `cd bin`, and print its contents out using
    `dir`. Also, this directory contains a whole bunch of executables that we''ll
    use to do things such as starting up our server and connecting to it:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`cd bin`进入`bin`，并使用`dir`打印出它的内容。此外，这个目录包含了一大堆我们将用来启动服务器和连接到服务器的可执行文件：
- en: '![](img/4b41a0e3-2ab4-4082-9f85-ec32f2e4008f.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b41a0e3-2ab4-4082-9f85-ec32f2e4008f.jpg)'
- en: The first executable we'll run is this mongod.exe file. This will start our
    local MongoDB database. Before we can go ahead and run this `EXE`, there is one
    more thing we need to do. Over in the generic File Explorer, we need to create
    a directory where all of our data can be stored. To do this, I'll put mine in
    my user directory by going to the `C:/Users/Andrew` directory. I'll make a new
    folder, and I'll call this folder `mongo-data`. Now, the `mongo-data` directory
    is where all of our data will actually be stored. This is the path that we need
    to specify when we run the `mongod.exe` command; we need to tell Mongo where to
    store the data.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将运行的第一个可执行文件是`mongod.exe`。这将启动我们的本地MongoDB数据库。在我们继续运行这个`EXE`之前，我们还需要做一件事。在通用文件资源管理器中，我们需要创建一个目录，用来存储我们所有的数据。为了做到这一点，我将把我的放在我的用户目录下，通过转到`C:/Users/Andrew`目录。我将创建一个新文件夹，我会把这个文件夹叫做`mongo-data`。现在，`mongo-data`目录是我们所有数据实际存储的地方。这就是我们在运行`mongod.exe`命令时需要指定的路径；我们需要告诉Mongo数据存储在哪里。
- en: 'Over in Command Prompt, we can now start this command. I''ll run `mongod.exe`,
    passing in as the `dbpath` argument, the path to that folder we just created.
    In my case, it''s `/Users/Andrew/mongo-data`. Now if your username is different,
    which it obviously is, or you put the folder in a different directory, you''ll
    need to specify the absolute path to the `mongo-data` folder. Once you have that
    though, you can start up the server by running the following command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令提示符中，我们现在可以启动这个命令。我将运行`mongod.exe`，作为`dbpath`参数传入，传入我们刚刚创建的文件夹的路径。在我的情况下，它是`/Users/Andrew/mongo-data`。现在如果你的用户名不同，显然是不同的，或者你把文件夹放在不同的目录中，你需要指定`mongo-data`文件夹的绝对路径。不过，一旦你有了这个，你就可以通过运行以下命令启动服务器：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You''ll get a long list of output:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你会得到一个很长的输出列表：
- en: '![](img/b4e63a72-9dca-452f-93d7-089f0c14db1a.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4e63a72-9dca-452f-93d7-089f0c14db1a.jpg)'
- en: The only thing you need to care about is that, at the very bottom, you should
    see waiting for connections on port 27017\. If you see this, then you are good
    to go. But now that the server is up, let's connect to it and issue some commands
    to create and read some data.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要关心的唯一一件事是，在最底部，你应该看到等待在端口27017上连接。如果你看到这个，那么你就可以开始了。但是现在服务器已经启动，让我们连接到它并发出一些命令来创建和读取一些数据。
- en: Creating and reading data
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和读取数据
- en: To do this, we'll open up a second Command Prompt window and navigate into that
    same `bin` directory using `cd/Program Files/MongoDB/Server/3.2/bin`. From here,
    we'll run `mongo.exe`. Note that we're not running the `mongod` command; we're
    running `mongo.exe`. This will connect to our local MongoDB database, and it will
    put us in sort of a Command Prompt view of our database. We'll be able to issue
    various Mongo commands to manipulate the data, kind of like we can run Node from
    Command Prompt to run various JavaScript statements right inside the console.
    When we run this, we're going to connect to the database. Over in the first console
    window, you can see that connection accepted shows up. We do have a new connection.
    In the first console window now, we can run some commands to create and read data.
    Now I don't expect you to take away anything from these commands. We'll not talk
    about the ins and outs of MongoDB just yet. All I want to do is to make sure that
    when you run them, it works as expected.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们将打开第二个命令提示符窗口，并使用`cd/Program Files/MongoDB/Server/3.2/bin`进入相同的`bin`目录。从这里，我们将运行`mongo.exe`。请注意，我们不是运行`mongod`命令；我们运行的是`mongo.exe`。这将连接到我们的本地MongoDB数据库，并且会让我们进入数据库的命令提示符视图。我们将能够发出各种Mongo命令来操作数据，有点像我们可以从命令提示符中运行Node来运行各种JavaScript语句一样。当我们运行这个命令时，我们将连接到数据库。在第一个控制台窗口中，你可以看到连接被接受的显示。我们确实有了一个新的连接。现在在第一个控制台窗口中，我们可以运行一些命令来创建和读取数据。现在我不指望你从这些命令中得到任何东西。我们暂时不讨论MongoDB的细节。我只是想确保当你运行它们时，它能按预期工作。
- en: 'To get started, let''s create a new Todo from the console. This can be done
    via `db.Todos`, and on this Todos collection, we''ll call the `.insert` method.
    Also, we''ll call `insert` with one argument, an object; this object can have
    any properties we want to add to the record. For example, I want to set a `text`
    property. This is the thing I actually need to do. Inside quotes, I can put something.
    I''ll go with `Create new Node course`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从控制台创建一个新的Todo。这可以通过`db.Todos`来完成，在这个Todos集合上，我们将调用`.insert`方法。此外，我们将使用一个参数调用`insert`，一个对象；这个对象可以有我们想要添加到记录中的任何属性。例如，我想设置一个`text`属性。这是我实际需要做的事情。在引号内，我可以放一些东西。我会选择`创建新的Node课程`。
- en: '[PRE8]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now when I run this command, it will actually make the insert into our database
    and we should get a `writeResult` object back, with an `nInserted` property set
    to `1`. This means that one record was inserted.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当我运行这个命令时，它将实际地将数据插入到我们的数据库中，我们应该会得到一个`writeResult`对象，其中`nInserted`属性设置为`1`。这意味着插入了一条记录。
- en: 'Now that we have one Todo in our database, we can try to fetch it using `db.Todos`
    once again. This time, instead of calling `insert` to add a record, we''ll call
    `find` with no arguments provided. This will return every single Todo inside of
    our database:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的数据库中有一个Todo，我们可以尝试再次使用`db.Todos`来获取它。这一次，我们不会调用`insert`来添加记录，而是调用`find`，不提供任何参数。这将返回我们数据库中的每一个Todo：
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When I run this command, We get an object-looking thing where we have a `text`
    property set to `Create new Node course`. We also have an `_id` property. The
    `_id` property is MongoDB's unique identifier, and this is the property that they
    use to give your document; in this case, a Todo, a unique identifier. We'll be
    talking more about `_id` and about all of the commands we just ran, a little later.
    For now, we can close this using *Ctrl* + *C*. We've successfully disconnected
    from Mongo, and now we can also close the second Command Prompt window.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行这个命令时，我们得到一个看起来像对象的东西，其中有一个`text`属性设置为`Create new Node course`。我们还有一个`_id`属性。`_id`属性是MongoDB的唯一标识符，这是他们用来给您的文档，比如说一个Todo，在这种情况下，一个唯一的标识符。稍后我们会更多地讨论`_id`和我们刚刚运行的所有命令。现在，我们可以使用*Ctrl*
    + *C*来关闭它。我们已经成功断开了与Mongo的连接，现在我们也可以关闭第二个命令提示窗口。
- en: Before we move on, there is one more thing I want to do. We'll be installing
    a program called Robomongo—a GUI for MongoDB. It will let you connect to your
    local database as well as real databases, which we'll be talking about later.
    Also, it'll let you view all the data, manipulate it and do anything you could
    do inside a database GUI. It's really useful; sometimes you just need to dive
    into a database to see exactly what the data looks like.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我还想做一件事。我们将安装一个名为Robomongo的程序——一个用于MongoDB的图形用户界面。它将让您连接到本地数据库以及真实数据库，我们稍后会详细介绍。此外，它还可以让您查看所有数据，操纵它，并执行数据库GUI中可以执行的任何操作。这非常有用；有时您只需要深入数据库，看看数据的确切样子。
- en: 'In order to get this started, we''ll head over to a new tab and go to [robomongo.org](https://robomongo.org/):'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始这个过程，我们将转到一个新的标签页，然后转到[robomongo.org](https://robomongo.org/)。
- en: '![](img/08f5d2c2-ca66-4850-94f6-57dd4171d0d6.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08f5d2c2-ca66-4850-94f6-57dd4171d0d6.jpg)'
- en: 'Here we can grab the installer by going to Download. We''ll download the latest
    version, and I''m on Windows. I want the installer, not the portable version,
    so I''ll click on the first link here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以通过转到下载来获取安装程序。我们将下载最新版本，我使用的是Windows。我需要安装程序，而不是便携式版本，所以我会点击这里的第一个链接：
- en: '![](img/1939e6e2-86d8-4f12-a51d-48178d002060.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1939e6e2-86d8-4f12-a51d-48178d002060.jpg)'
- en: This is going to start a really small download, just 17 MB, and we can click
    on Next a few times through this one to get Robomongo installed on our machines.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这将开始一个非常小的下载，只有17MB，我们可以通过点击“下一步”几次来在我们的机器上安装Robomongo。
- en: 'I''ll start the process, confirming installation and clicking on Next just
    a couple of times. There''s no need to do anything custom inside the settings.
    We''ll run the installer with all of the default settings applied. Now we can
    actually run the program by finishing all the steps in the installer. When you
    run Robomongo, you''ll be greeted with a MongoDB Connections screen:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我将开始这个过程，确认安装并点击“下一步”几次。在设置内没有必要进行任何自定义操作。我们将使用所有默认设置运行安装程序。现在我们可以通过完成安装程序中的所有步骤来实际运行程序。当您运行Robomongo时，您将会看到一个MongoDB连接屏幕：
- en: '![](img/d449e05c-b3da-4a11-8460-44fa1f27adc4.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d449e05c-b3da-4a11-8460-44fa1f27adc4.jpg)'
- en: This screen lets you configure all of the connections for Robomongo. You might
    have a local connection for your local database, and you might have a connection
    to a real URL where your actual production data is stored. We'll get into all
    that later.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这个屏幕让您配置Robomongo的所有连接。您可能有一个用于本地数据库的本地连接，也可能有一个连接到实际生产数据存储的真实URL。我们稍后会详细介绍这一切。
- en: 'For now, we''ll click on Create. By default, your `localhost` address and your
    `27017` port do not need to be changed:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将点击“创建”。默认情况下，您的`localhost`地址和`27017`端口不需要更改：
- en: '![](img/6a98e947-9493-464c-b5ac-f5480792bd9a.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a98e947-9493-464c-b5ac-f5480792bd9a.jpg)'
- en: 'All I''m going to do is to change the name so that it''s a little easier to
    identify. I''ll go with `Local Mongo Database`. Now, we can save our new connection
    and actually connect to the database by simply double-clicking on it. When we
    do that, we get a little tree view of our database. We have this `test` database;
    this is the one that''s created by default, which we can expand. Then we can expand
    our `Collections` folder and see the `Todos` collection. This is the collection
    we created inside the console. I''ll right-click on this and go to View Documents.
    When I view the documents, I actually get to view the individual records:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我要做的就是更改名称，使其更容易识别。我会选择`Local Mongo Database`。现在，我们可以保存我们的新连接，并通过双击连接到数据库。当我们这样做时，我们会得到一个数据库的树形视图。我们有这个`test`数据库；这是默认创建的一个，我们可以展开它。然后我们可以展开我们的`Collections`文件夹，看到`Todos`集合。这是我们在控制台内创建的集合。我会右键单击它，然后转到“查看文档”。当我查看文档时，我实际上可以查看到单独的记录：
- en: '![](img/cc419081-dcaf-4f7a-a631-4623a539008b.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc419081-dcaf-4f7a-a631-4623a539008b.jpg)'
- en: Here, I see my _id and text properties that have Create new Node course sitting
    in the above image.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我看到了我的_id和text属性，它们在上面的图像中显示为Create new Node course。
- en: If you are seeing this, then this means that you have a local Mongo server running,
    and it also means that you've successfully inserted data into it.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到这个，那么这意味着您有一个本地的Mongo服务器在运行，并且这也意味着您已经成功地向其中插入了数据。
- en: Summary
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you downloaded and ran the MongoDB database server. This means
    that we have a local database server we can connect to from our Node application.
    We also installed Robomongo, which lets us connect to our local database so that
    we can view and manipulate data. This comes in handy when you're debugging or
    managing data, or doing anything else with your Mongo database. We'll be using
    it throughout the book, and you'll begin to see why it's valuable in the later
    chapters. For now though, you are all set up. You are ready to continue on and
    start building the Todo API.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你下载并运行了MongoDB数据库服务器。这意味着我们有一个本地数据库服务器，可以从我们的Node应用程序连接到它。我们还安装了Robomongo，它让我们连接到本地数据库，这样我们就可以查看和操作数据。当你调试或管理数据，或者对你的Mongo数据库进行其他操作时，这将非常方便。我们将在整本书中使用它，你将在后面的章节中开始看到它为什么是有价值的。不过，现在你已经准备好了。你可以继续开始构建Todo
    API了。
