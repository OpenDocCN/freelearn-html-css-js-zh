- en: '*Chapter 6*: Implementing Node-RED in the Cloud'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第6章*：在云中实现Node-RED'
- en: In this chapter, we will learn how to utilize Node-RED, which can be used standalone
    on a cloud platform (mainly Platform as a Service). **Platform as a Service**
    (**PaaS**) provides an instance that acts as the execution environment for an
    application, and the application developers only focus on executing the application
    created by themselves without using their power to build the environment. Node-RED
    is actually a Node.js application, so you can run it wherever you have a runtime
    environment for Node.js.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何利用Node-RED，在云平台上（主要是作为服务的平台）独立使用。**作为服务的平台**（**PaaS**）提供了一个作为应用执行环境的实例，应用开发人员只需专注于执行自己创建的应用，而不用耗费精力构建环境。Node-RED实际上是一个Node.js应用，因此您可以在任何具有Node.js运行时环境的地方运行它。
- en: There are various major mega clouds such as Azure, AWS, and GCP, but Node-RED
    is prepared as a Starter App (a web application that can be launched on IBM Cloud
    is called a Starter App) by default in IBM Cloud, so we will use it in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种主要的大型云，如Azure、AWS和GCP，但Node-RED在IBM Cloud中默认准备了一个入门应用（在IBM Cloud上可以启动的Web应用称为入门应用），所以我们将在本章中使用它。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，我们将涵盖以下主题:'
- en: Running Node-RED on the cloud
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云上运行Node-RED
- en: What is the specific situation for using Node-RED in the cloud?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云中使用Node-RED的具体情况是什么？
- en: IoT case study spot on the server side
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器端的物联网案例研究
- en: Making a sample flow
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个示例流程
- en: By the end of this chapter, you will have mastered how to build a flow for handling
    sensor data on the cloud.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将掌握如何在云上构建处理传感器数据的流程。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The code that will be used in this chapter can be found in the `Chapter06` folder
    at [https://github.com/PacktPublishing/-Practical-Node-RED-Programming](https://github.com/PacktPublishing/-Practical-Node-RED-Programming).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的代码可以在[https://github.com/PacktPublishing/-Practical-Node-RED-Programming](https://github.com/PacktPublishing/-Practical-Node-RED-Programming)的`Chapter06`文件夹中找到。
- en: Running Node-RED on the cloud
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云上运行Node-RED
- en: This time, we will use IBM Cloud. The reason for this is that IBM Cloud has
    Node-RED Starter Kit on it. This is a kind of software boilerplate that includes
    services needed for Node-RED on the cloud, such as a database, CI/CD tools, and
    more.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我们将使用IBM Cloud。原因是IBM Cloud上有Node-RED Starter Kit。这是一种软件样板，包括Node-RED在云上所需的服务，如数据库、CI/CD工具等。
- en: If you have not used IBM Cloud yet, don't worry – IBM provides a free IBM Cloud
    account (Lite account) with no credit card registration needed. You can register
    for an IBM Cloud Lite account at [http://ibm.biz/packt-nodered](http://ibm.biz/packt-nodered).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有使用过IBM Cloud，不用担心 - IBM提供免费的IBM Cloud账户（Lite账户），无需注册信用卡。您可以在[http://ibm.biz/packt-nodered](http://ibm.biz/packt-nodered)注册IBM
    Cloud Lite账户。
- en: Before using Node-RED on IBM Cloud, you need to finish the registration process
    for your IBM Cloud Lite account.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在IBM Cloud上使用Node-RED之前，您需要完成IBM Cloud Lite账户的注册流程。
- en: Important Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In this book, we strongly recommend that you select a Lite account when using
    IBM Cloud. You can upgrade from a Lite account to a standard account (PAYG/Pay
    as you go) at your own will. This means you can automatically upgrade to PAYG
    by registering your credit card.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们强烈建议您在使用IBM Cloud时选择Lite账户。您可以随意从Lite账户升级到标准账户（PAYG/按使用付费），这意味着您可以通过注册信用卡自动升级到PAYG。
- en: Please note that services that can be used free of charge with a Lite account
    may be charged for with PAYG.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用Lite账户可以免费使用的服务，在PAYG中可能会收费。
- en: 'Now, let''s launch Node-RED on IBM Cloud by following these steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们按照以下步骤在IBM Cloud上启动Node-RED：
- en: Important Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The instructions/screenshots provided here are correct at the time of writing.
    The UI of IBM Cloud changes so often that it might be different from the current
    UI.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提供的说明/截图在撰写时是正确的。IBM Cloud的用户界面变化如此之快，可能与当前的用户界面不同。
- en: Log in to IBM Cloud ([https://cloud.ibm.com](https://cloud.ibm.com)) with the
    account you created previously:![Figure 6.1 – Logging in via your Lite account
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您之前创建的账户登录IBM Cloud ([https://cloud.ibm.com](https://cloud.ibm.com))：![图6.1
    - 通过您的Lite账户登录
- en: '](img/Figure_6.1_B16353.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.1_B16353.jpg)'
- en: Figure 6.1 – Logging in via your Lite account
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 - 通过您的Lite账户登录
- en: After logging into IBM Cloud, you will see your own dashboard on your screen.
    If this is your first time using IBM Cloud, no resources will be shown on the
    dashboard:![Figure 6.2 – IBM Cloud dashboard
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录IBM Cloud后，您将在屏幕上看到您自己的仪表板。如果这是您第一次使用IBM Cloud，在仪表板上将不会显示任何资源:![图6.2 - IBM
    Cloud仪表板
- en: '](img/Figure_6.2_B16353.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.2_B16353.jpg)'
- en: Figure 6.2 – IBM Cloud dashboard
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 - IBM Cloud仪表板
- en: Next, we will create Node-RED on this cloud platform.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在这个云平台上创建Node-RED。
- en: We will create Node-RED as a service on this cloud. Click **App Development**
    from the menu at the top left and click the **Get a Starter Kit** button. This
    lets you create a new application service:![Figure 6.3 – Get a Starter Kit button
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在云上创建Node-RED作为一个服务。从左上角的菜单中点击**应用开发**，然后点击**获取一个入门套件**按钮。这样可以创建一个新的应用服务:![图6.3
    - 获取入门套件按钮
- en: '](img/Figure_6.3_B16353.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.3_B16353.jpg)'
- en: Figure 6.3 – Get a Starter Kit button
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 - 获取入门套件按钮
- en: You can find Node-RED if you type `Node-RED` into the search text box. Once
    you've found it, click on the **Node-RED** panel:![Figure 6.4 – Node-RED Starter
    Kit
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在搜索框中输入`Node-RED`，就可以找到Node-RED。找到后，点击**Node-RED**面板:![图6.4 - Node-RED入门套件
- en: '](img/Figure_6.4_B16353.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.4_B16353.jpg)'
- en: Figure 6.4 – Node-RED Starter Kit
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 - Node-RED入门套件
- en: After clicking on the **Node-RED** panel, we need to set some items.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Node-RED**面板后，我们需要设置一些项目。
- en: You can freely change each item by providing your own values, but in this chapter,
    the values that have been set here will be used for explanation purposes.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过提供自己的值自由更改每个项目，但在本章中，这里设置的值将用于解释目的。
- en: See *Figure 6.5* for the settings and values to configure. Please note that
    once they are set, these items cannot be changed later.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅*图6.5*以进行配置的设置和值。请注意，一旦设置，这些项目将无法在以后更改。
- en: After setting all the items, click the **Create** button:![Figure 6.5 – Create
    Node-RED as a Node.js application
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置所有项目后，点击**创建**按钮：![图6.5 - 将Node-RED创建为Node.js应用程序
- en: '](img/Figure_6.5_B16353.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.5_B16353.jpg)'
- en: Figure 6.5 – Create Node-RED as a Node.js application
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 - 将Node-RED创建为Node.js应用程序
- en: You have now created the framework for the applications that make up Node-RED.
    After this, you will be redirected to the **App Details** screen automatically,
    where you will be able to see that the **Cloudant** instance of the linked service
    has also been provisioned.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经创建了Node-RED应用程序的框架。之后，您将被自动重定向到**应用程序详细信息**屏幕，在那里您将能够看到链接服务的**Cloudant**实例也已经被配置。
- en: However, only the application source code and the instance of the cooperation
    service are created, and they haven't been deployed to the Node.js execution environment
    on IBM Cloud yet. The actual deployment will be done when the CI/CD toolchain
    is enabled.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，只有应用程序源代码和合作服务的实例被创建，它们尚未部署到IBM Cloud上的Node.js执行环境中。实际部署将在启用CI/CD工具链时完成。
- en: When everything is ready, click on the **Deploy your app** button in the center
    of the screen to enable it:![Figure 6.6 – Deploying your Node-RED application
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一切准备就绪后，点击屏幕中央的**部署您的应用**按钮以启用它：![图6.6 - 部署您的Node-RED应用程序
- en: '](img/Figure_6.6_B16353.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.6_B16353.jpg)'
- en: Figure 6.6 – Deploying your Node-RED application
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 - 部署您的Node-RED应用程序
- en: After clicking the **Deploy your app** button, move to the application settings
    window.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**部署您的应用**按钮后，转到应用程序设置窗口。
- en: 'You will be asked to create an IBM Cloud API Key. Don''t worry about this,
    as one will be generated automatically. Click the **New** button to open a new
    popup window, and then the **OK** button on the popup window. Once you do this,
    an IBM Cloud API Key will be generated:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将被要求创建IBM Cloud API密钥。不用担心，因为它将自动生成。点击**新建**按钮打开一个新的弹出窗口，然后在弹出窗口上点击**确定**按钮。一旦您这样做，IBM
    Cloud API密钥将被生成：
- en: IBM Cloud API Key
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: IBM Cloud API密钥
- en: 'The IBM Cloud API Key is used to control your IBM Cloud account and various
    services (for example, it''s Cloud Foundry in this tutorial). You can use this
    to issue a token for external access to services on IBM Cloud, for example. You
    can find out more about the IBM Cloud API Key here: [https://cloud.ibm.com/docs/account?topic=account-manapikey](https://cloud.ibm.com/docs/account?topic=account-manapikey).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: IBM Cloud API密钥用于控制您的IBM Cloud帐户和各种服务（例如，在本教程中是Cloud Foundry）。您可以使用它来为IBM Cloud上的服务发行外部访问令牌，例如。您可以在这里了解有关IBM
    Cloud API密钥的更多信息：[https://cloud.ibm.com/docs/account?topic=account-manapikey](https://cloud.ibm.com/docs/account?topic=account-manapikey)。
- en: '![Figure 6.7 – Generating an IBM Cloud API Key'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.7 - 生成IBM Cloud API密钥'
- en: '](img/Figure_6.7_B16353.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.7_B16353.jpg)'
- en: Figure 6.7 – Generating an IBM Cloud API Key
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 - 生成IBM Cloud API密钥
- en: Select the resource spec on the window.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口中选择资源规范。
- en: 'This time, we are using IBM Cloud with a Lite account, so we have only 256
    MB of memory available for all our services on IBM Cloud. So, if we use 256 MB
    for the Cloud Foundry Node.js service, we won''t be able to use more memory for
    other services. But Node-RED needs 256 MB to run on IBM Cloud, so please use 256
    MB here. It is already allocated 256 MB for the instance by default, so click
    the **Next** button, with no parameters changed:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我们使用的是IBM Cloud的Lite帐户，因此我们在IBM Cloud上只有256 MB的内存可用于所有服务。因此，如果我们为Cloud Foundry
    Node.js服务使用256 MB，我们将无法为其他服务使用更多内存。但是Node-RED需要256 MB才能在IBM Cloud上运行，因此请在这里使用256
    MB。默认情况下已经为实例分配了256 MB，因此点击**下一步**按钮，不更改任何参数：
- en: '![Figure 6.8 – Node.js runtime instance details'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8 - Node.js运行时实例详细信息'
- en: '](img/Figure_6.8_B16353.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.8_B16353.jpg)'
- en: Figure 6.8 – Node.js runtime instance details
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 - Node.js运行时实例详细信息
- en: Once you've done this, a **DevOps toolchain** setting screen will be displayed.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，将显示**DevOps工具链**设置屏幕。
- en: Click the **Create** button, with the default values filled in.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮，填入默认值。
- en: 'You can change the DevOps toolchain name to any name you like. This is the
    name that identifies the toolchain you''ve created in IBM Cloud:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将DevOps工具链名称更改为任何您喜欢的名称。这是用于标识您在IBM Cloud中创建的工具链的名称：
- en: '![Figure 6.9 – Configure the DevOps toolchain window'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.9 - 配置DevOps工具链窗口'
- en: '](img/Figure_6.9_B16353.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.9_B16353.jpg)'
- en: Figure 6.9 – Configure the DevOps toolchain window
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 - 配置DevOps工具链窗口
- en: Now, you are ready to use the environment (Node.js runtime and DevOps toolchain)
    to run the Node-RED application you created in the previous step. The Node-RED
    application you created is automatically deployed on the Node.js runtime through
    the toolchain.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以使用环境（Node.js运行时和DevOps工具链）来运行您在上一步中创建的Node-RED应用程序。您创建的Node-RED应用程序会通过工具链自动部署在Node.js运行时上。
- en: Confirm that the **Status** that's displayed in the **Delivery Pipelines** (pipeline
    for executing each tool in the DevOps toolchain) area is **Success**, and click
    the toolchain's name (**Node-REDforPackt**, in this case) above it:![Figure 6.10
    – Checking the status of Node-RED and moving to the Pipeline tool
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认**交付管道**（DevOps工具链中执行每个工具的管道）区域中显示的**状态**为**成功**，然后点击其上方的工具链名称（在本例中为**Node-REDforPackt**）：![图6.10
    - 检查Node-RED的状态并转到Pipeline工具
- en: '](img/Figure_6.10_B16353.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.10_B16353.jpg)'
- en: Figure 6.10 – Checking the status of Node-RED and moving to the Pipeline tool
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 - 检查Node-RED的状态并转到Pipeline工具
- en: In **Delivery Pipelines**, check that the statuses of both the **BUILD** and
    **DEPLOY** panels are green and displaying **STAGE PASSED**.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在**交付管道**中，检查**构建**和**部署**面板的状态是否都是绿色并显示**阶段通过**。
- en: Click on **View console** under **LAST EXECUTION RESULT** on the **DEPLOY**
    panel:![Figure 6.11 – Checking the status of each stage and moving to App Console
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**DEPLOY**面板下的**LAST EXECUTION RESULT**下点击**查看控制台**：![图6.11 - 检查每个阶段的状态并转到应用程序控制台
- en: '](img/Figure_6.11_B16353.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.11_B16353.jpg)'
- en: Figure 6.11 – Checking the status of each stage and moving to App Console
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 - 检查每个阶段的状态并转到应用程序控制台
- en: On the console screen of the Node-RED application, confirm that the status is
    **Running**, and then click **View App URL**:![Figure 6.12 – Checking that Node-RED
    is running and opening Flow Editor
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Node-RED应用程序的控制台屏幕上，确认状态为**运行**，然后单击**查看应用URL**：![图6.12 - 检查Node-RED是否正在运行并打开Flow
    Editor
- en: '](img/Figure_6.12_B16353.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.12_B16353.jpg)'
- en: Figure 6.12 – Checking that Node-RED is running and opening Flow Editor
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 - 检查Node-RED是否正在运行并打开Flow Editor
- en: Great work! You opened the Node-RED flow editor on IBM Cloud. Next, we will
    start to use the Node-RED flow editor you just opened.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！您在IBM Cloud上打开了Node-RED流编辑器。接下来，我们将开始使用您刚刚打开的Node-RED流编辑器。
- en: If you got any errors while performing these steps, it would be best for you
    to delete Cloud Foundry App, Cloudant, and DevOps toolchain and recreate them
    by following the same steps mentioned previously.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在执行这些步骤时出现任何错误，最好删除Cloud Foundry App、Cloudant和DevOps工具链，并按照之前提到的相同步骤重新创建它们。
- en: Set up a **Username** and **Password** to access your flow editor on IBM Cloud.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置**用户名**和**密码**以访问您在IBM Cloud上的流编辑器。
- en: After clicking on **Visit App URL**, you will be redirected to the initial setup
    dialog so that you can use Node-RED flow editor on IBM Cloud.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**访问应用URL**后，您将被重定向到初始设置对话框，以便您可以在IBM Cloud上使用Node-RED流编辑器。
- en: 'You can proceed through this dialog by clicking each **Next** button, though
    please note that you should select **Secure your editor so only authorised users
    can access it** with **Username** and **Password** in order to log in to your
    own flow editor. This is because this flow editor is on IBM Cloud as a public
    web application. This means that anybody can access your flow editor if the URL
    is known. So, I strongly recommend that you select this option and set your own
    **Username** and **Password** values:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过单击每个**下一步**按钮来继续此对话框，但请注意，您应该选择**安全地设置编辑器，以便只有经过授权的用户才能访问它**，并使用**用户名**和**密码**登录以便登录到您自己的流编辑器。这是因为此流编辑器作为公共Web应用程序在IBM
    Cloud上。这意味着任何人都可以访问您的流编辑器，如果知道URL的话。因此，我强烈建议您选择此选项并设置您自己的**用户名**和**密码**值：
- en: '![Figure 6.13 – Setting a username and password to access flow editor'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.13 - 设置用户名和密码以访问流编辑器'
- en: '](img/Figure_6.13_B16353.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.13_B16353.jpg)'
- en: Figure 6.13 – Setting a username and password to access flow editor
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 - 设置用户名和密码以访问流编辑器
- en: We're almost done!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快要完成了！
- en: Click on the **Go to your Node-RED flow editor** button and then log in with
    the **Username** and **Password** details that you set in the previous step:![Figure
    6.14 – Logging into your Node-RED flow editor
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**转到您的Node-RED流编辑器**按钮，然后使用在上一步中设置的**用户名**和**密码**详细信息登录：![图6.14 - 登录到您的Node-RED流编辑器
- en: '](img/Figure_6.14_B16353.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.14_B16353.jpg)'
- en: Figure 6.14 – Logging into your Node-RED flow editor
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 - 登录到您的Node-RED流编辑器
- en: Next, we will check Node-RED flow editor on IBM Cloud and see if it is available.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将检查IBM Cloud上的Node-RED流编辑器，并查看它是否可用。
- en: 'Click the **inject** node and check the result:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**注入**节点并检查结果：
- en: '![Figure 6.15 – Default sample flow'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 - 默认示例流
- en: '](img/Figure_6.15_B16353.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.15_B16353.jpg)'
- en: Figure 6.15 – Default sample flow
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 - 默认示例流
- en: 'When you click the **inject** node, you will see the resulting value on the
    **debug** tab:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当您单击**注入**节点时，您将在**调试**选项卡上看到结果值：
- en: '![Figure 6.16 – Checking the result'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.16 - 检查结果'
- en: '](img/Figure_6.16_B16353.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.16_B16353.jpg)'
- en: Figure 6.16 – Checking the result
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 - 检查结果
- en: Now, you can create a flow in Node-RED on IBM Cloud. The Node-RED flow editor
    is always running as a Node.js application on IBM Cloud. This means that the Node.js
    runtime service (instance) is enabled on IBM Cloud. In other words, unlike Node-RED
    running on Raspberry Pi, this version of Node-RED accesses the flow editor via
    the internet.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以在IBM Cloud上的Node-RED中创建一个流。Node-RED流编辑器始终作为IBM Cloud上的Node.js应用程序运行。这意味着在IBM
    Cloud上启用了Node.js运行时服务（实例）。换句话说，与在树莓派上运行的Node-RED不同，此版本的Node-RED通过互联网访问流编辑器。
- en: In the next section, I will explain a little about situations where Node-RED
    is used on such a cloud.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我将简要解释一下在这样的云上使用Node-RED的情况。
- en: What is the specific situation for using Node-RED in the cloud?
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云中使用Node-RED的具体情况是什么？
- en: Let's revisit the situation where Node-RED is used in the cloud.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新审视Node-RED在云中的使用情况。
- en: As we mentioned in the previous chapter, Node-RED is both a tool and an execution
    environment for creating Node.js applications written in Node.js. As a reason
    to build an application with Node-RED, I explained that by black boxing individual
    units of data processing, the role of each process becomes very clear, and it
    is easy to build and maintain.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中提到的，Node-RED既是一个工具，也是一个用Node.js编写的Node.js应用程序的执行环境。作为使用Node-RED构建应用程序的原因，我解释了通过黑箱化数据处理的各个单元，每个过程的作用变得非常清晰，易于构建和维护。
- en: This is the same reason not only on the edge device, but also on the server
    side (cloud side), for persisting, analyzing, and visualizing the data that's
    collected by the edge device.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅是在边缘设备上的原因，也是在服务器端（云端），用于持久化、分析和可视化由边缘设备收集的数据。
- en: The biggest feature of Node-RED is that it connects the processing of Node.js
    in a sequential manner or in parallel with input/output data chunks in the form
    of messages. It can be said that this is very suitable for IoT data handling.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED最大的特点是以消息的形式将Node.js的处理以顺序或并行的方式连接到输入/输出数据块的处理。可以说这非常适合物联网数据处理。
- en: Again, as we discussed in the previous chapter, the standard architecture for
    IoT solutions is built on edge devices and cloud platforms. It sends the sensor
    data acquired by the edge device to the cloud, makes it persistent, and processes
    it for the desired processing chain.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，正如我们在上一章中讨论的那样，物联网解决方案的标准架构是建立在边缘设备和云平台上的。它将边缘设备获取的传感器数据发送到云端，使其持久化，并为所需的处理链进行处理。
- en: This chapter will focus on that part of the cloud.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点关注云的这一部分。
- en: The edge device and the cloud don't actually connect yet. Assuming that the
    data has been passed to the cloud, let's make the data persistent in the database
    and visualize it.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘设备和云实际上还没有连接。假设数据已传递到云端，让我们将数据持久化存储在数据库中并进行可视化。
- en: We're going to use a dashboard node that is popular with all developers for
    Node-RED on IBM Cloud.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在IBM Cloud上的Node-RED中所有开发人员都喜欢的仪表板节点。
- en: Before you use Node-RED on IBM Cloud, please install a new node; that is, **node-red-dashboard**.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在您在IBM Cloud上使用Node-RED之前，请安装一个新节点；即**node-red-dashboard**。
- en: Node-RED provides the **palette manager**, which is easy to install and is used
    to install extra nodes directly. This is very helpful when you're using lots of
    nodes. However, it might have issues due to the limited memory of the Node-RED
    application of an IBM Cloud Lite Account.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Node-RED提供了**调色板管理器**，它易于安装，用于直接安装额外的节点。当您使用大量节点时，这非常有帮助。但是，由于IBM Cloud Lite帐户的Node-RED应用内存有限，可能会出现问题。
- en: So, here, we need to get the `package.json` file and redeploy the Node-RED application
    on IBM Cloud.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这里，我们需要获取`package.json`文件并在IBM Cloud上重新部署Node-RED应用程序。
- en: You can read about this node at [https://flows.nodered.org/node/node-red-dashboard](https://flows.nodered.org/node/node-red-dashboard).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://flows.nodered.org/node/node-red-dashboard](https://flows.nodered.org/node/node-red-dashboard)了解有关此节点的信息。
- en: 'Follow these steps to make changes in the `package.json` file:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤对`package.json`文件进行更改：
- en: On the Node-RED **App details** page of IBM Cloud, click **source**. This will
    redirect you to a Git repository where you can edit the Node-RED application source
    code:![Figure 6.17 – Accessing your application source
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在IBM Cloud的Node-RED **应用详情**页面上，点击**源代码**。这将把您重定向到一个Git仓库，您可以在那里编辑Node-RED应用的源代码：![图6.17
    – 访问您的应用源代码
- en: '](img/Figure_6.17_B16353.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.17_B16353.jpg)'
- en: Figure 6.17 – Accessing your application source
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 – 访问您的应用源代码
- en: Click on `package.json` on the file list. This file defines the module dependencies
    of your application:![Figure 6.18 – Selecting package.json
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击文件列表上的`package.json`。这个文件定义了您的应用程序的模块依赖关系：![图6.18 – 选择package.json
- en: '](img/Figure_6.18_B16353.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.18_B16353.jpg)'
- en: Figure 6.18 – Selecting package.json
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.18 – 选择package.json
- en: 'Click the `dependencies` section:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`dependencies`部分：
- en: '[PRE0]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add any commit message and click on the **Commit changes** button:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加任何提交消息并点击**提交更改**按钮：
- en: '![Figure 6.19 – Editing package.json and adding node-red-dashboard'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.19 – 编辑package.json并添加node-red-dashboard'
- en: '](img/Figure_6.19_B16353.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.19_B16353.jpg)'
- en: Figure 6.19 – Editing package.json and adding node-red-dashboard
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.19 – 编辑package.json并添加node-red-dashboard
- en: 'After this, the Continuous Delivery Pipeline will automatically start to build
    and deploy the Node-RED application. You can check the status on the Delivery
    Pipeline at any time, just like you did while creating Node-RED Starter App:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，持续交付管道将自动开始构建和部署Node-RED应用程序。您可以随时在交付管道上检查状态，就像您在创建Node-RED Starter应用程序时所做的那样：
- en: '![Figure 6.20 – Rebuilding and redeploying your application automatically'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.20 – 重新构建并自动部署您的应用程序'
- en: '](img/Figure_6.20_B16353.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.20_B16353.jpg)'
- en: Figure 6.20 – Rebuilding and redeploying your application automatically
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.20 – 重新构建并自动部署您的应用程序
- en: 'When you get **Deploy Stage** failed with the memory limit error for lite account,
    please stop your Node-RED service on your IBM Cloud dashboard and after that run
    the **Deploy Stage**. You can stop your Node-RED service by accessing your IBM
    Cloud dashboard and clicking on **Cloud Foundry apps** under **Resource summary**:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在lite帐户上收到**部署阶段**失败的内存限制错误时，请在IBM Cloud仪表板上停止您的Node-RED服务，然后运行**部署阶段**。您可以通过访问IBM
    Cloud仪表板并在**资源摘要**下点击**Cloud Foundry应用**来停止Node-RED服务：
- en: '![Figure 6.21 Selecting Cloud Foundry apps'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.21 选择Cloud Foundry应用'
- en: '](img/Figure_6.21_B16353.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.21_B16353.jpg)'
- en: Figure 6.21 Selecting Cloud Foundry apps
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.21 选择Cloud Foundry应用
- en: After that, click on the **stop** option on the Node-RED record under the **Cloud
    Foundry apps**.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，在**Cloud Foundry应用**下的Node-RED记录上点击**停止**选项。
- en: '![Figure 6.22 Clicking the Stop option'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.22 点击停止选项'
- en: '](img/Figure_6.22_B16353.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.22_B16353.jpg)'
- en: Figure 6.22 Clicking the Stop option
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.22 点击停止选项
- en: 'That''s all. You can confirm that the dashboard node has been added by closing
    the **Palette management** screen and scrolling down the left-hand side of the
    flow editor, as shown in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。您可以通过关闭**调色板管理**屏幕并在流编辑器的左侧向下滚动来确认已添加仪表板节点，如下面的截图所示：
- en: '![Figure 6.23 – Checking that the dashboard node has been installed'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.23 – 检查仪表板节点是否已安装'
- en: '](img/Figure_6.23_B16353.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.23_B16353.jpg)'
- en: Figure 6.23 – Checking that the dashboard node has been installed
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.23 – 检查仪表板节点是否已安装
- en: 'There''s one more thing: we need to use a database, but IBM Cloud''s version
    of Node-RED has a Cloudant database by default. We will use Cloudant for the case
    study in the next section.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事：我们需要使用数据库，但IBM Cloud的Node-RED默认使用Cloudant数据库。我们将在下一节的案例研究中使用Cloudant。
- en: Now, you can use Node-RED on IBM Cloud for IoT server-side situations.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以在IBM Cloud上使用Node-RED进行物联网服务器端的情况。
- en: IoT case study spot on the server side
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网案例研究重点在服务器端
- en: Now, let's consider a server-side case study for IoT.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们考虑物联网的服务器端用例研究。
- en: It does not depend on the case of each edge device. It primarily serves to process
    data and store it in a database for visualization.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 它并不取决于每个边缘设备的情况。它主要用于处理数据并将其存储在数据库中以进行可视化。
- en: In this chapter, we'll consider the use case of IoT; that is, assuming that
    the sensor data that's received using the sensor module is received on the server
    side, and the subsequent processing part.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将考虑物联网的用例；也就是说，假设使用传感器模块接收的传感器数据在服务器端接收，并进行后续处理。
- en: The difference from the previous chapter is that in this server-side processing
    tutorial, the content of the data doesn't make much sense. The main purpose is
    to save the received data and visualize it as needed, so I would like to define
    the following two use cases.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一章不同的是，在这个服务器端处理教程中，数据的内容并不重要。主要目的是保存接收到的数据并根据需要进行可视化，因此我想定义以下两个用例。
- en: Use case 1 – Storing data
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用例1 - 存储数据
- en: 'The first case is to store data. Let''s create an application (flow) that stores
    data you receive from devices. In this section, we don''t use real data from devices;
    we just use the data generated by the inject node instead:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个用例是存储数据。让我们创建一个应用程序（流程），将您从设备接收到的数据存储起来。在本节中，我们不使用来自设备的真实数据；我们只使用由inject节点生成的数据：
- en: '![Figure 6.24 – Use case 1 overview'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.24 - 用例1概述'
- en: '](img/Figure_6.24_B16353.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.24_B16353.jpg)'
- en: Figure 6.24 – Use case 1 overview
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.24 - 用例1概述
- en: Now, let's look at the second use case.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看第二个用例。
- en: Use case 2 – Temperature/humidity sensor
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用例2 - 温度/湿度传感器
- en: 'The second case is to show data as graphs or charts. Let''s create an application
    (flow) that publishes data you received from devices, on the dashboard. We won''t
    be using real data from any devices, just the data that''s been generated by the
    inject node:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个用例是将数据显示为图表。让我们创建一个应用程序（流程），将您从设备接收到的数据发布到仪表板上。我们不会使用任何设备的真实数据，只使用由inject节点生成的数据：
- en: '![Figure 6.25 – Use case 2 overview'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.25 - 用例2概述'
- en: '](img/Figure_6.25_B16353.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.25_B16353.jpg)'
- en: Figure 6.25 – Use case 2 overview
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.25 - 用例2概述
- en: As we mentioned earlier, we will use Cloudant for the database for case 1 and
    the dashboard for the graph display for case 2\. These have already been prepared.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，我们将使用Cloudant作为用例1的数据库，使用仪表板作为用例2的图表显示。这些已经准备好了。
- en: Making a sample flow
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个示例流程
- en: Now, let's create these two server-side case flows on the Node-RED flow editor.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在Node-RED流编辑器上创建这两个服务器端用例流程。
- en: Please check again that the **Cloudant** node and the **Dashboard** node have
    already been installed on your flow editor. If you don't have them, please install
    these nodes by following the steps mentioned in the *What is the specific situation
    for using Node-RED on the cloud?* section of this chapter.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请再次检查**Cloudant**节点和**仪表板**节点是否已安装在您的流编辑器上。如果没有，请按照本章*在云上使用Node-RED的具体情况*中提到的步骤安装这些节点。
- en: 'Now, you need to prepare a specific database for this tutorial on **Cloudant**.
    Follow these steps:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您需要在**Cloudant**上为本教程准备一个特定的数据库。请按照以下步骤进行：
- en: Access your IBM Cloud dashboard and click **View all** from the **Resource summary**
    area:![Figure 6.26 – IBM Cloud dashboard view
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问您的IBM Cloud仪表板，并从**资源摘要**区域点击**查看全部**：![图6.26 - IBM Cloud仪表板视图
- en: '](img/Figure_6.26_B16353_.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.26_B16353_.jpg)'
- en: Figure 6.26 – IBM Cloud dashboard view
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.26 - IBM Cloud仪表板视图
- en: You will find the **Cloudant** service that you created using Node-RED. Please
    click the service's name:![ Figure 6.27 – Selecting the Cloudant service from
    the Resource list
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会发现使用Node-RED创建的**Cloudant**服务。请点击服务的名称：![图6.27 - 从资源列表中选择Cloudant服务
- en: '](img/Figure_6.27_B16353_.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.27_B16353_.jpg)'
- en: Figure 6.27 – Selecting the Cloudant service from the Resource list
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.27 - 从资源列表中选择Cloudant服务
- en: Click the **Launch Dashboard** button at the top left of **IBM Cloud**:![Figure
    6.28 – Launching the Cloudant dashboard
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**IBM Cloud**左上角的**启动仪表板**按钮：![图6.28 - 启动Cloudant仪表板
- en: '](img/Figure_6.28_B16353.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.28_B16353.jpg)'
- en: Figure 6.28 – Launching the Cloudant dashboard
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.28 - 启动Cloudant仪表板
- en: 'After launching the Cloudant dashboard, please click `packt_db`. After that,
    click the **Create** button:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Cloudant仪表板后，请点击`packt_db`。之后，点击**创建**按钮：
- en: '![Figure 6.29 – Creating a new database on Cloudant'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.29 - 在Cloudant上创建一个新数据库'
- en: '](img/Figure_6.29_B16353.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.29_B16353.jpg)'
- en: Figure 6.29 – Creating a new database on Cloudant
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.29 - 在Cloudant上创建一个新数据库
- en: Now that you have created the database for this tutorial, you can use it at
    any time!
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经为本教程创建了数据库，可以随时使用它！
- en: Making a flow for use case 1 – storing data
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为用例1创建一个流程 - 存储数据
- en: With IoT, server-side processing starts from the point where it is received
    from the edge device. However, as we mentioned earlier, we will focus on storing
    the data in the database, so we will be using dummy data that will be generated
    by the **inject** node. The chunk of data that's received as a message is persisted
    in the Cloudant database on Node-RED.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在IoT中，服务器端处理从边缘设备接收到的数据开始。然而，正如我们之前提到的，我们将专注于将数据存储在数据库中，因此我们将使用由**inject**节点生成的虚拟数据。作为消息接收的数据块将在Node-RED上持久存储在Cloudant数据库中。
- en: 'We can make the flow by following these steps:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下步骤制作流程：
- en: Place an **inject** node and a **cloudant out** node from the palette on the
    left-hand side of the flow editor by dragging and dropping them into the workspace:![Figure
    6.30 – Placing the Inject node and cloudant out node
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的调色板中将一个**inject**节点和一个**cloudant out**节点拖放到工作区中：![图6.30 - 放置Inject节点和cloudant
    out节点
- en: '](img/Figure_6.30_B16353.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.30_B16353.jpg)'
- en: Figure 6.30 – Placing the Inject node and cloudant out node
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.30 - 放置Inject节点和cloudant out节点
- en: The **inject** node generates dummy data, while the **cloudant out** node stores
    the input value as-is in the Cloudant database.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '**inject**节点生成虚拟数据，而**cloudant out**节点将输入值原样存储在Cloudant数据库中。'
- en: After that, we will also create a flow to retrieve data from Cloudant, but first,
    let's just create the flow for saving data. Wire these nodes:![Figure 6.31 – Wiring
    these two nodes
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们还将创建一个从Cloudant检索数据的流程，但首先，让我们只创建保存数据的流程。连接这些节点：![图6.31 - 连接这两个节点
- en: '](img/Figure_6.31_B16353.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.31_B16353.jpg)'
- en: Figure 6.31 – Wiring these two nodes
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.31 - 连接这两个节点
- en: Next, modify the settings of the **inject** node. Double-click the node to open
    the **Settings** panel.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，修改**inject**节点的设置。双击节点打开**设置**面板。
- en: Select **JSON** for the first parameter; that is, **msg.payload**, and click
    the right-hand side **[…]** button to open the JSON editor:![Figure 6.32 – JSON
    on the first parameter of the inject node
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**JSON**作为第一个参数；也就是**msg.payload**，然后点击右侧的**[…]**按钮打开JSON编辑器：![图6.32 - 在inject节点的第一个参数上的JSON
- en: '](img/Figure_6.32_B16353.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.32_B16353.jpg)'
- en: '[PRE1]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can switch between the Text editor and the Visual editor using tabs. Please
    refer to the following image:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用选项卡在文本编辑器和可视化编辑器之间切换。请参考以下图片：
- en: '![Figure 6.33 – Two types of JSON editor are available'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.33 - 有两种类型的JSON编辑器可用'
- en: '](img/Figure_6.33_B16353.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.33_B16353.jpg)'
- en: Figure 6.33 – Two types of JSON editor are available
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.33 - 有两种类型的JSON编辑器可用
- en: There's no need to edit **msg.topic**.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 无需编辑**msg.topic**。
- en: After setting the **JSON** data, click the **Done** button in the top-right
    corner to close the **Settings** panel.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置**JSON**数据后，点击右上角的**完成**按钮关闭**设置**面板。
- en: Then, edit the settings for the `packt_db` as the database name. This name is
    the database you named on the Cloudant dashboard.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，编辑`packt_db`的设置作为数据库名称。这个名称是您在Cloudant仪表板上命名的数据库。
- en: The first parameter, **Service**, is set automatically; it is your Cloudant
    service on IBM Cloud. The third parameter, **Operation**, does not need to be
    changed from its default value.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数**Service**会自动设置；它是IBM Cloud上的您的Cloudant服务。第三个参数**Operation**不需要从其默认值更改。
- en: After setting the database name, click the **Done** button in the top-right
    corner to close the **Settings** panel:![Figure 6.34 – Setting the database name
    on the cloudant out node
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置数据库名称后，点击右上角的**完成**按钮关闭**设置**面板：![图6.34 - 在cloudant输出节点上设置数据库名称
- en: '](img/Figure_6.34_B16353.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.34_B16353.jpg)'
- en: Figure 6.34 – Setting the database name on the cloudant out node
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.34 - 在cloudant输出节点上设置数据库名称
- en: That's it! Don't forget to click the **Deploy** button.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就是这样！不要忘记点击**部署**按钮。
- en: Click the button on the **inject** node to run the flow. The data will be stored
    on the Cloudant database when the button has been clicked.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**inject**节点上的按钮来运行流程。当按钮被点击时，数据将被存储在Cloudant数据库中。
- en: 'At this point, we can''t check the data on Cloudant via the Node-RED flow editor;
    we can only check it on the Cloudant dashboard:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们无法通过Node-RED流程编辑器检查Cloudant上的数据；我们只能在Cloudant仪表板上检查它：
- en: '![Figure 6.35 – Result on the Cloudant dashboard'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.35 - Cloudant仪表板上的结果'
- en: '](img/Figure_6.35_B16353.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.35_B16353.jpg)'
- en: Figure 6.35 – Result on the Cloudant dashboard
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.35 - Cloudant仪表板上的结果
- en: 'Now, let''s make a flow that gets the data from Cloudant by following these
    steps:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们按照以下步骤创建一个从Cloudant获取数据的流程：
- en: Place an **inject** node, a **cloudant in** node, and a **debug** node from
    the palette on the left-hand side of the flow editor by dragging and dropping
    them into the workspace from the previous flow.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的调色板中将一个**inject**节点、一个**cloudant in**节点和一个**debug**节点拖放到工作区中，以创建一个新的流程。
- en: The **inject** node just executes this flow as a trigger, so there's no need
    to change the parameters in it. The **cloudant in** node gets the data from your
    Cloudant database. The **debug** node outputs a log on the debug tab.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**inject**节点只是作为触发器执行这个流程，所以不需要更改其中的参数。**cloudant in**节点从您的Cloudant数据库获取数据。**debug**节点在调试选项卡上输出日志。'
- en: Wire these nodes:![Figure 6.36 – Placing new three nodes and wiring them to
    get data
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接这些节点：![图6.36 - 放置新的三个节点并将它们连接以获取数据
- en: '](img/Figure_6.36_B16353.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.36_B16353.jpg)'
- en: Figure 6.36 – Placing new three nodes and wiring them to get data
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.36 - 放置新的三个节点并将它们连接以获取数据
- en: Next, modify the settings of the **cloudant in** node by double-clicking the
    node to open its **Settings** panel.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过双击节点来修改**cloudant in**节点的设置，以打开其**设置**面板。
- en: Just like the `packt_db` as the database's name and select **all documents**
    for the third parameter' that is, **Search by**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像`packt_db`作为数据库的名称，并选择**所有文档**作为第三个参数，也就是**搜索方式**。
- en: The first parameter, **Service**, is set automatically; it is your Cloudant
    service on IBM Cloud.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数**Service**会自动设置；它是IBM Cloud上的您的Cloudant服务。
- en: After setting the database name and search target, click the **Done** button
    in the top-right corner to close the **Settings** panel:![Figure 6.37 – Setting
    the database name and searching for a target on cloudant in the node
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置数据库名称和搜索目标后，点击右上角的**完成**按钮关闭**设置**面板：![图6.37 - 在cloudant in节点上设置数据库名称并搜索目标
- en: '](img/Figure_6.37_B16353.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.37_B16353.jpg)'
- en: Figure 6.37 – Setting the database name and searching for a target on cloudant
    in the node
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.37 - 在cloudant in节点上设置数据库名称并搜索目标的结果
- en: That's it! Don't forget to click the **Deploy** button.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就是这样！不要忘记点击**部署**按钮。
- en: Click the button on the **inject** node to run the flow. You will get the data
    from the Cloudant database when you do so.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**inject**节点上的按钮来运行流程。这样做时，您将从Cloudant数据库中获取数据。
- en: 'You will see that the result was output to the **debug** window:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到结果被输出到**debug**窗口：
- en: '![Figure 6.38 – Result of getting the data from Cloudant'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.38 - 从Cloudant获取数据的结果'
- en: '](img/Figure_6.38_B16353.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.38_B16353.jpg)'
- en: Figure 6.38 – Result of getting the data from Cloudant
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.38 - 从Cloudant获取数据的结果
- en: Congratulations! With this, we have successfully created a basic flow (application)
    that stores sensor data on a database with Node-RED.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！通过这样，我们成功地创建了一个基本的流程（应用程序），它可以将传感器数据存储在Node-RED中的数据库中。
- en: 'You can also download this flow definition file here: [https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/cloudant-flows.json](https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/cloudant-flows.json)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在这里下载流程定义文件：[https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/cloudant-flows.json](https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/cloudant-flows.json)
- en: Important Note
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This flow has no values for the Cloudant service name in cloudant in/out flows.
    Please check if your service name is set on that automatically once this flow
    definition has been imported.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程在cloudant in/out流中没有Cloudant服务名称的值。请检查一旦导入了此流程定义，您的服务名称是否已自动设置在其中。
- en: You now understand how to handle data on Node-RED. We'll visualize that data
    in the next section.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了如何在Node-RED上处理数据。我们将在下一节中可视化这些数据。
- en: Making a flow for use case 2 – visualizing data
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建用例2的流程-可视化数据
- en: 'The first use case was for storing sensor data in a database, while the second
    one was for visualizing sensor data on Node-RED. In IoT, after acquiring sensor
    data, we must visualize it in some form. The focus here is on retrieving and visualizing
    the data stored in use case 1\. We will do this by following these steps:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个用例是将传感器数据存储在数据库中，而第二个用例是在Node-RED上可视化传感器数据。在IoT中，获取传感器数据后，我们必须以某种形式对其进行可视化。重点是检索和可视化用例1中存储的数据。我们将通过以下步骤来实现这一点：
- en: Place an **inject** node, a **function** node, and a **chart** node from the
    palette on the left-hand side of the flow editor by dragging and dropping them
    into the workspace. Then, wire these nodes:![Figure 6.39 – Placing the nodes and
    wiring them to show data
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧的调色板中将**inject**节点、**function**节点和**chart**节点放置在流程编辑器的工作区中，然后将这些节点连接起来：![图6.39
    - 放置节点并连接它们以显示数据
- en: '](img/Figure_6.39_B16353.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.39_B16353.jpg)'
- en: Figure 6.39 – Placing the nodes and wiring them to show data
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.39 - 放置节点并连接它们以显示数据
- en: The **Inject** node just executes this flow as a trigger, so there's no need
    to change the parameters in it. The **function** node generates numeric data to
    be shown on the Node-RED as a chart. Finally, the **chart** node makes it possible
    for the data to appear on the chart.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**Inject**节点只是作为触发器执行此流程，因此无需更改其中的参数。**function**节点生成要显示在Node-RED上的图表上的数字数据。最后，**chart**节点使数据能够出现在图表上。'
- en: Code in the **function** node to generate numeric data that can be passed to
    the chart node.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**function**节点中编写代码以生成可以传递给图表节点的数字数据。
- en: 'Double-click the node to open the settings panel. Then, add the following code
    to the **function** node you placed:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击节点以打开设置面板。然后，将以下代码添加到您放置的**function**节点中：
- en: '[PRE2]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is what it looks like:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样：
- en: '![Figure 6.40 – Code for generating a random number'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.40 - 用于生成随机数的代码'
- en: '](img/Figure_6.40_B16353.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.40_B16353.jpg)'
- en: Figure 6.40 – Code for generating a random number
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.40 - 用于生成随机数的代码
- en: After coding this script, click the **Done** button in the top-right corner
    to close the **Settings** panel.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写此脚本后，单击右上角的**Done**按钮关闭**Settings**面板。
- en: Then, edit the settings for the `Packt Chart` here.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在此处编辑`Packt Chart`的设置。
- en: After entering a name, click the `Packt Chart`. Now, click the **Done** button
    at the top right:![Figure 6.41 – Setting a parameter on the chart node
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入名称后，单击`Packt Chart`。现在，单击右上角的**Done**按钮：![图6.41 - 在图表节点上设置参数
- en: '](img/Figure_6.41_B16353.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.41_B16353.jpg)'
- en: Figure 6.41 – Setting a parameter on the chart node
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.41 - 在图表节点上设置参数
- en: That's it! Don't forget to click the **Deploy** button.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就是这样！不要忘记单击**Deploy**按钮。
- en: Click the left button on the **inject** node to run the flow. The data that
    is generated by the **function** node will be sent to the **chart** node when
    the button is clicked.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**inject**节点上的左按钮以运行流程。当单击按钮时，**function**节点生成的数据将被发送到**chart**节点。
- en: You can check the result on the dashboard window.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在仪表板窗口上查看结果。
- en: Click the **Dashboard** button at the top right of the flow editor and click
    the **Open window** button. These two buttons are icons, so please refer to the
    following screenshot to see which buttons you must click:![Figure 6.42 – Clicking
    the dashboard icon button and opening the window icon button
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击流程编辑器右上角的**Dashboard**按钮，然后单击**Open window**按钮。这两个按钮都是图标，因此请参考以下屏幕截图，以查看您必须单击哪些按钮：![图6.42
    - 单击仪表板图标按钮并打开窗口图标按钮
- en: '](img/Figure_6.42_B16353.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.42_B16353.jpg)'
- en: Figure 6.42 – Clicking the dashboard icon button and opening the window icon
    button
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.42 - 单击仪表板图标按钮并打开窗口图标按钮
- en: 'The line chart will be empty in the new window. Please click the switch of
    the **inject** node a few times. After that, you will see the line chart filled
    in with values:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新窗口中的折线图将为空。请多次单击**inject**节点的开关。之后，您将看到折线图中填充了值：
- en: '![Figure 6.43 – Line chart with values'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.43 - 具有值的折线图'
- en: '](img/Figure_6.43_B16353.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.43_B16353.jpg)'
- en: Figure 6.43 – Line chart with values
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.43 - 具有值的折线图
- en: Congratulations! With this, we have successfully created a basic flow (application)
    that shows sensor data as a chart with Node-RED.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！通过这样做，我们已成功创建了一个基本的流程（应用程序），用Node-RED显示传感器数据的图表。
- en: 'You can also download this flow definition file here: [https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/dashboard-flows.json](https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/dashboard-flows.json).'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在此处下载此流程定义文件：[https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/dashboard-flows.json](https://github.com/PacktPublishing/-Practical-Node-RED-Programming/blob/master/Chapter06/dashboard-flows.json)。
- en: Summary
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to create a server-side sample flow (application)
    by following a real IoT use case. These were simple tutorials, but I am sure it
    will be beneficial for you so that you understand how to make flows for IoT server-side
    applications.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学会了如何通过遵循真实的IoT用例创建服务器端示例流程（应用程序）。这些都是简单的教程，但我相信对您有益，这样您就能够为IoT服务器端应用程序制作流程。
- en: The flow steps we created here will help you create different flows for other
    server-side applications in the future.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里创建的流程步骤将帮助您为将来创建其他服务器端应用程序的不同流程。
- en: In the next chapter, we will use the same IoT use case we used in this chapter,
    but we will create a practical sample flow (application) that will call a web
    API.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用与本章相同的IoT用例，但我们将创建一个实际的示例流程（应用程序），该流程将调用Web API。
