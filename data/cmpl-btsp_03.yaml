- en: Chapter 4. Working with Content
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章：内容处理
- en: Content components in Bootstrap 4 are reserved for the most commonly used HTML
    elements such as images, tables, typography, and more. In this chapter, I'll teach
    you how to use all the building blocks of HTML that you'll need to build any type
    of website or web application. We'll start with a quick overview of each component
    and then we'll build it into our blog project. Bootstrap 4 comes with a brand
    new CSS reset called Reboot. It builds on top of `Normalize.css` to make your
    site look even better out of the box. Before we jump in, let's review some Reboot
    basics when dealing with content components in Bootstrap 4.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 中的内容组件是为最常用的 HTML 元素保留的，例如图片、表格、排版等。在本章中，我将教您如何使用构建任何类型网站或网络应用程序所需的全部
    HTML 构建块。我们将从每个组件的快速概述开始，然后将其构建到我们的博客项目中。Bootstrap 4 附带了一个全新的 CSS 重置，称为 Reboot。它建立在
    `Normalize.css` 之上，使您的网站在开箱即用的情况下看起来更好。在我们深入之前，让我们回顾一下在 Bootstrap 4 中处理内容组件时的
    Reboot 基础知识。
- en: Reboot defaults and basics
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Reboot 默认值和基础知识
- en: Let's start this chapter by reviewing the basics of Reboot when using content
    components in Bootstrap. One of the main changes for content components in Bootstrap
    4 is the switch from `em` to `rem` units of measure. `rem` is short for **root
    em** and is a little bit different from a regular `em` unit. `em` is a relative
    unit to the font-size of the parent element it is contained within. This can cause
    a compounding issue in your code that can be difficult to deal with when you have
    a highly nested set of selectors. The `rem` unit is not relative to its parent,
    it is relative to the root or HTML element. This makes it much easier to determine
    the actual size of text or other content components that will appear on the screen.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从回顾 Bootstrap 中使用内容组件时 Reboot 的基础知识开始这一章。Bootstrap 4 中内容组件的主要变化之一是从 `em`
    单位切换到 `rem` 单位。`rem` 是 `root em` 的缩写，与常规的 `em` 单位略有不同。`em` 是相对于其包含的父元素字体大小的相对单位。这可能导致代码中出现累积问题，当您有一组高度嵌套的选择器时，这些问题可能难以处理。`rem`
    单位不是相对于其父元素，而是相对于根或 HTML 元素。这使得确定将在屏幕上显示的实际文本或其他内容组件的大小变得容易得多。
- en: The `box-sizing` property is globally set to `border-box` on every element.
    This is good because it ensures that the declared width of an element doesn't
    exceed its size due to excess margins or padding.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`box-sizing` 属性在所有元素上全局设置为 `border-box`。这很好，因为它确保元素的声明宽度不会因为额外的边距或填充而超过其大小。'
- en: The base `font-size` for Bootstrap 4 is `16px` and it is declared on the `html`
    element. On the `body` element, the `font-size` is set to `1rem` for easy responsive
    type-scaling when using media queries.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 的基本 `font-size` 为 `16px`，并在 `html` 元素上声明。在 `body` 元素上，`font-size`
    被设置为 `1rem`，以便在使用媒体查询时轻松进行响应式类型缩放。
- en: There are also global `font-family` and `line-height` values set on the `body`
    tag for consistency through all components. By default, the `background-color`
    is set to `#fff` or white on the `body` selector.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `body` 标签上还设置了全局的 `font-family` 和 `line-height` 值，以确保所有组件的一致性。默认情况下，`background-color`
    在 `body` 选择器上设置为 `#fff` 或白色。
- en: Headings and paragraphs
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标题和段落
- en: There are no major changes to the styles for headings and paragraphs in Bootstrap
    4\. All heading elements have been reset to have their `top-margin` removed. Headings
    have a `margin-bottom` value of `0.5rem`, while paragraphs have a `margin-bottom`
    value of `1rem`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 4 中标题和段落的样式没有发生重大变化。所有标题元素都被重置，移除了 `top-margin`。标题的 `margin-bottom`
    值为 `0.5rem`，而段落的 `margin-bottom` 值为 `1rem`。
- en: Lists
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表
- en: 'The list component comes in three variations: `<ul>`, `<ol>`, and `<dl>`. Each
    list type has had its `top-margin` removed and has a `bottom-margin` of `1rem`.
    If you are nesting lists inside one another, there is no `bottom-margin` at all.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 列表组件有三种变体：`<ul>`、`<ol>` 和 `<dl>`。每种列表类型都移除了 `top-margin`，并具有 `1rem` 的 `bottom-margin`。如果您在列表内部嵌套列表，则完全没有
    `bottom-margin`。
