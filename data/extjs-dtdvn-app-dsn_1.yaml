- en: Chapter 1. Data Structure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 数据结构
- en: This book will take you step-by-step through the process of building a clear
    and user-friendly sales management database in Ext JS using information from an
    existing database.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将逐步引导您通过使用现有数据库中的信息，在Ext JS中构建一个清晰且用户友好的销售管理数据库的过程。
- en: This book is intended for intermediate Ext JS developers with operational knowledge
    of MySQL and who want to improve their programming skills and create a higher-level
    application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向具有MySQL操作知识的中级Ext JS开发者，他们希望提高编程技能并创建更高级的应用程序。
- en: The finished application will give you a working sales management database.
    However, the true value of this book is the hands-on process of creating the application,
    and the opportunity to easily transfer and incorporate features introduced in
    this book in your own future applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 完成的应用程序将为您提供可工作的销售管理数据库。然而，本书的真正价值在于创建应用程序的动手过程，以及将本书中介绍的功能轻松转移到您自己的未来应用程序中的机会。
- en: 'The standout features we will look at while building this application are as
    follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建此应用程序时，我们将关注的突出功能如下：
- en: '**History-supported back button functionality**: We will customize the Ext
    JS function to create a lighter method to scroll forwards and backwards while
    staying on a single page.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持历史记录的返回按钮功能**：我们将自定义Ext JS函数，创建一种更轻量级的方法，在单页面上滚动前后，同时保持页面不变。'
- en: '**More efficient screen management**: We''ll learn how simply registering a
    screen and naming conventions can help you cut down on the screen change processes;
    meaning you can focus more on the implementation behind each screen. Also, it
    will be easier to interact with the history just by conforming to this architecture.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更高效的屏幕管理**：我们将学习如何通过简单地注册屏幕和命名约定来帮助您减少屏幕切换过程；这意味着您可以更多地关注每个屏幕背后的实现。此外，只需遵循这种架构，与历史记录的交互也将变得更加容易。'
- en: '**Communication methods with Ext.Direct**: Ext.Direct has a close affinity
    with Ext applications which makes for easier connection, easier maintenance, and
    removes the need for the client side to change the URL. Also, if you use Ext.Direct,
    you can reduce the stress on the server side as it combines multiple server requests
    into just one request.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Ext.Direct的通信方法**：Ext.Direct与Ext应用程序有紧密的亲和力，这使得连接、维护更加容易，并且消除了客户端需要更改URL的需求。此外，如果您使用Ext.Direct，您还可以减少对服务器端的压力，因为它将多个服务器请求合并为一个请求。'
- en: '**Data display methods with charts**: In Ext JS, by simply adjusting the store
    and the data structure set to display in a grid, we can display the data graphically
    in a chart.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带有图表的数据显示方法**：在Ext JS中，通过简单地调整存储和设置在网格中显示的数据结构，我们可以在图表中以图形方式显示数据。'
- en: This chapter will give you the basic building blocks of your database. In this
    chapter of the book, you will write the SQL code and and create tables in MySQL.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将为您提供数据库的基本构建块。在本章中，您将编写SQL代码并在MySQL中创建表。
- en: The structure of the application – User, Customer, Quotation, Quotations, Bill,
    and Bills
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序的结构 – 用户、客户、报价、报价单、账单和账单
- en: First, let's look at the structure of the application we're about to build.
    This is a sales management application built for the user to register customers,
    send quotations for orders, and finally to invoice the customer with a bill.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看我们即将构建的应用程序的结构。这是一个为用户注册客户、发送订单报价以及最终向客户开具账单而构建的销售管理应用程序。
- en: The user can input data in to the `Customer` table. The customer can be an individual
    or a company, either way, each customer receives a unique ID.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以将数据输入到“客户”表中。客户可以是个人或公司，无论哪种方式，每个客户都会收到一个唯一的ID。
- en: The `Quotation` table represents the final quotation sent to the customer. The
    `Quotations` table contains the individual items being ordered in the quotation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: “报价”表代表发送给客户的最终报价。报价表包含报价中订购的个别项目。
- en: A bill is the final invoice sent to the customer. As with the `Quotations` table,
    the `Bills` table refers to the individual items ordered by the customer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 账单是发送给客户的最终发票。与“报价”表类似，“账单”表指的是客户订购的个别项目。
- en: The user
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户
- en: The user data is a simple structure that is used to log in to a system. It has
    an e-mail address, a password, and a name.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据是一个简单的结构，用于登录系统。它有一个电子邮件地址、密码和姓名。
- en: Do not delete the user data and physically manage it with a flag. It is connected
    to other data structures with joint ownership, recording the date and time when
    it was created along with the updated date and time.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 不要删除用户数据，并使用标志进行物理管理。它与其他数据结构通过联合所有权连接，记录创建日期和时间以及更新日期和时间。
- en: When we design a table with a model of MySQL, it looks similar to the following
    table. After having carried out MD5, we perform SHA1\. Then, we will have 40 characters
    and can store the password.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们设计一个基于MySQL的模型表时，它看起来类似于以下表格。在执行MD5之后，我们执行SHA1。然后，我们将有40个字符可以存储密码。
- en: '![The user](img/5446OS_01_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![用户](img/5446OS_01_01.jpg)'
- en: The customer
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户
- en: The customer data contains the name and address of the company or client. It
    lets the `Quotation` and `Bill` tables perform a relation of this data and use
    the data. Being the master data, adding to and deleting from the user interface
    is not available at this time. However, as you develop the application, you eventually
    should be able to edit this data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 客户数据包含公司或客户的名称和地址。它允许`引用`和`账单`表执行此数据的关联并使用这些数据。作为主数据，目前用户界面中不可用添加和删除。然而，随着您开发应用程序，您最终应该能够编辑这些数据。
- en: The following screenshot shows the input fields for registering a customer.
    The sections under the `Name` column are the fields that need to be filled in
    for each customer. The `Type` column refers to the type of data to be entered,
    such as words, numbers, and dates. The `Key` column allows data to be referenced
    between different tables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了注册客户的输入字段。`名称`列下的部分是需要为每个客户填写的字段。`类型`列指的是要输入的数据类型，如文字、数字和日期。`键`列允许在不同表之间引用数据。
- en: '![The customer](img/5446OS_01_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![客户](img/5446OS_01_02.jpg)'
- en: Quotation and Quotations
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用和引用
- en: The `Quotation` and `Quotations` tables have a 1-N relationship.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`引用`和`引用`表之间存在1-N关系。'
- en: In `Quotation`, you can save the basic information of the document, and in `Quotations`
    you can store each item being ordered.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在`引用`中，您可以保存文档的基本信息，而在`引用`中，您可以存储每个正在订购的项目。
- en: Quotation
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用
- en: This following screenshot shows the fields necessary for `Quotation`. The table
    headings are the same as in the `Customer` table explained previously, so let's
    fill this out accordingly.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了`引用`所需的字段。表格标题与之前解释的`客户`表中的相同，因此让我们相应地填写。
- en: '![Quotation](img/5446OS_01_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![引用](img/5446OS_01_03.jpg)'
- en: Quotations
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用
- en: This is the same as before, so let's go ahead and fill this out. The parent
    refers to the overall quotation that the `Quotations` (individual items) table
    belongs to.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这与之前相同，所以让我们继续填写。父级指的是`引用`（单个项目）表所属的整体报价。
- en: '![Quotations](img/5446OS_01_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![引用](img/5446OS_01_04.jpg)'
- en: Bill and Bills
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 账单和账单
- en: The `Bill` table is almost the same as the `Quotation` table. However, the `Bill`
    table can sometimes contain the ID of an associated `Quotation` table.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`账单`表几乎与`引用`表相同。然而，`账单`表有时可以包含相关联的`引用`表的ID。'
- en: Bill
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账单
- en: 'The following screenshot shows the `Bill` table:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了`账单`表：
- en: '![Bill](img/5446OS_01_05.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![账单](img/5446OS_01_05.jpg)'
- en: Bills
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账单
- en: 'Similar to `Quotations`, in `Bills` you can store each item that is ordered:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与`引用`类似，在`账单`中，您可以存储每个已订购的项目：
- en: '![Bills](img/5446OS_01_06.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![账单](img/5446OS_01_06.jpg)'
- en: Creating and dealing with the customer structure tables
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和处理客户结构表
- en: We will be using MySQL, and the database character is set to `utf8` and collation
    is set to `utf8_bin`. When SQL describes the details of what we defined previously,
    each of these components are as follows.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用MySQL，数据库字符集设置为`utf8`，校对设置为`utf8_bin`。当SQL描述我们之前定义的详细信息时，每个组件如下。
- en: The User table
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户表
- en: 'The `User` table we prepared earlier becomes operational when the following
    code is executed. It''s important to remember to include `AUTO_INCREMENT` in the
    `id` column; otherwise, you have to input it manually:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前准备的`用户`表在执行以下代码后即可投入使用。重要的是要记住在`id`列中包含`AUTO_INCREMENT`；否则，您必须手动输入：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Customer table
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户表
- en: 'Once the following code is executed, the `Customer` table becomes operational:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下代码后，`客户`表即可投入使用：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is the foundation of creating an initial set of tables that can later be
    populated with data.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是创建一组初始表的基石，这些表可以稍后填充数据。
- en: The Quotation table
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用表
- en: This is the corresponding code for the `Quotation` table. As with the `Customer`
    table, this code snippet will lay the foundation of our table.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `报价` 表的对应代码。与 `Customer` 表一样，此代码片段将为我们的表奠定基础。
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Bill table
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账单表
- en: As with the previous two code snippets, the following code for the `Bill` table
    is very similar to the `Quotation` table, so this can be found in the source file
    under `04_bill_table.sql`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 与前两个代码片段类似，以下 `Bill` 表的代码与 `报价` 表非常相似，因此可以在 `04_bill_table.sql` 下的源文件中找到。
- en: These are all the tables we need for this database. Now let's move on to testing
    after creating each operation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们数据库所需的所有表。现在，在每个操作创建后，让我们继续进行测试。
- en: Creating each operation and testing
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建每个操作并测试
- en: Because we will use PHP in later stages, let's prepare each operation now. Here,
    we will insert some temporary data.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们在后期阶段将使用 PHP，所以现在让我们为每个操作做好准备。在这里，我们将插入一些临时数据。
- en: Remember to check that the acquisition and update operations are working properly.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 记得检查获取和更新操作是否正常工作。
- en: User authentication
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户认证
- en: These are some SQL code you can use to develop your database.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些你可以用来开发数据库的 SQL 代码。
- en: You can look for a user by inputting an e-mail address and password. You can
    assume it was successful if the count is `1`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入电子邮件地址和密码来查找用户。如果计数为 `1`，则可以假设操作成功。
- en: For increased password security, after having carried out MD5 encryption, you
    should store the password as a character string of 40 characters after being put
    through SHA1.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高密码安全性，在执行 MD5 加密后，你应该将密码存储为经过 SHA1 处理后的 40 个字符的字符串。
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Selecting the user list
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择用户列表
- en: 'This is used when you want to collect data for use in a grid. Make note of
    the fact that we are not performing the limit operation with `PagingToolbar`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这用于当你想要收集用于网格中的数据时。请注意，我们不会使用 `PagingToolbar` 执行限制操作：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Adding users
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加用户
- en: 'To add a user, put the current time in `created` and `modified`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加用户，将当前时间放入 `created` 和 `modified`：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Updating the user information
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新用户信息
- en: Every time the `modified` file should be set to `NOW()` for it to be used as
    a time stamp. Other fields should be updated as needed.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 每次修改文件时，应将其设置为 `NOW()` 以用作时间戳。其他字段应根据需要更新。
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Deleting users
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除用户
- en: Deletion from this system is not a hard purge where the user data is permanently
    deleted. Instead we will use a soft purge, where the user data is not displayed
    after deletion but remains in the system. Therefore, note that we will use `UPDATE`,
    not `DELETE`. In the following code, `status=9` denotes that the user has been
    deleted but not displayed. (`status=1` will denote that the user is active).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 从此系统中删除不是永久删除用户数据的硬删除。相反，我们将使用软删除，即删除后用户数据不再显示但仍然保留在系统中。因此，请注意我们将使用 `UPDATE`
    而不是 `DELETE`。在以下代码中，`status=9` 表示用户已被删除但未显示。（`status=1` 将表示用户是活跃的）。
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The Customers table
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户表
- en: Although `Add`, `Update`, and `Delete` are necessary operations, we'll come
    to these in the later chapter, so we can leave it out at this time.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 `Add`、`Update` 和 `Delete` 是必要的操作，但我们将在后面的章节中介绍这些操作，所以现在我们可以省略它们。
- en: The customer information list
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户信息列表
- en: 'Here we are preparing the SQL code to pull information about customers later
    on:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们正在准备 SQL 代码，以便稍后提取有关客户的信息：
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Selecting the quotation list
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择报价列表
- en: Next comes the code for selecting the `Quotation` lists. This is similar to
    what we saw for the customer information list. For the code, please refer to the
    source file under `11_s` `electing_quotation_list.sql`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是选择 `报价` 列表的代码。这与我们看到的客户信息列表类似。对于代码，请参阅 `11_s_electing_quotation_list.sql`
    下的源文件。
- en: Items
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目
- en: 'The code for items will select the quotation items from the database. This
    will pick up items where `quotations.status` is `1` and `quotation.parent` is
    `1`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 项目代码将从数据库中选择报价项。这将选择 `quotations.status` 为 `1` 且 `quotation.parent` 为 `1` 的项：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As this is similar to `Customers`, you can again leave out `Add`, `Update`,
    and `Delete` for now.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这与 `Customers` 类似，你现在可以省略 `Add`、`Update` 和 `Delete`。
- en: The Bill table
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 账单表
- en: Again let's leave out `Add`, `Update` and `Delete` for now because the `Bill`
    table is similar to what preceded this.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，现在让我们省略 `Add`、`Update` 和 `Delete`，因为 `Bill` 表与之前的类似。
- en: It's straightforward to say that once a quotation has been accepted, a bill
    is produced. Therefore, in data structures such as ours, `Quotation` and `Bill`
    are related. The only difference is that `Bill` contains the extra `Quotation`
    ID to create the relationship between the two.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦引用被接受，就会产生账单，这一点说得简单明了。因此，在我们的数据结构中，`引用`和`账单`是相关的。唯一的区别是`账单`包含额外的`引用`ID，以在两者之间建立联系。
- en: Also, remember the customer information list is almost the same as the quotation
    list.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，记住客户信息列表几乎与报价列表相同。
- en: Summary
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have defined the structure of the database we will use in
    this book.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们定义了本书中将使用的数据库结构。
- en: You might have your own databases that you want to present in Ext JS. This is
    just a sample database that we can build on in the coming chapters.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能有自己的数据库，你希望在Ext JS中展示。这只是一个我们可以在接下来的章节中构建的示例数据库。
- en: In the next chapter we will begin the process of building the whole application.
    Don't worry, we'll explain each step.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始构建整个应用程序的过程。别担心，我们会解释每一步。
