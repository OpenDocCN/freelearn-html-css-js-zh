- en: Node Fundamentals – Part 1
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node基础-第一部分
- en: In this chapter, you'll learn a ton about building Node applications, and you'll
    actually build your first Node application. This is where all the really fun stuff
    is going to start.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学到很多关于构建Node应用的知识，你将实际上构建你的第一个Node应用程序。这将是真正有趣的开始。
- en: We'll kick things off by learning about all of the modules that come built in
    to Node. These are objects and functions that let you do stuff with JavaScript
    you've never been able to do before. We'll learn how to do things, such as reading
    and writing from the filesystem, which we'll use in the Node's application to
    persist our data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始学习所有内置到Node中的模块。这些是让你能够以前从未能够做到的JavaScript的对象和函数。我们将学习如何做一些事情，比如读写文件系统，这将在Node应用程序中用来持久化我们的数据。
- en: We'll also be looking at third-party npm modules; this is a big part of the
    reason that Node became so popular. The npm modules give you a great collection
    of third-party libraries you can use, and they also have really common problems.
    So you don't have to rewrite that boilerplate code over and over again. We'll
    be using a third-party module in this chapter to help with fetching input from
    the user.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将研究第三方npm模块；这是Node变得如此受欢迎的一个重要原因。npm模块为你提供了一个很好的第三方库集合，你可以使用它们，它们也有非常常见的问题。因此，你不必一遍又一遍地重写那些样板代码。在本章中，我们将使用第三方模块来帮助获取用户输入。
- en: 'The chapter will specifically cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将专门涵盖以下主题：
- en: Module basics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块基础
- en: Require own files
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入自己的文件
- en: Third-party modules
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三方模块
- en: Global modules
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全局模块
- en: Getting input
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取输入
- en: Module basics
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块基础
- en: In this section, you will finally learn some Node.js code, and we'll kick things
    off by talking about modules inside Node. Modules are units of functionality,
    so imagine I create a few functions that do something similar, such as a few functions
    that help with math problems, for example, add, subtract, and divide. I could
    bundle those up as a module, call it Andrew-math, and other people could take
    advantage of it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将最终学习一些Node.js代码，我们将以讨论Node中的模块开始。模块是功能单元，所以想象一下，我创建了一些做类似事情的函数，比如一些帮助解决数学问题的函数，例如加法、减法和除法。我可以将它们捆绑成一个模块，称之为Andrew-math，其他人可以利用它。
- en: 'Now, we''ll not be looking at how to make our own module; in fact, we will
    be looking at how we can use modules, and that will be done using a function in
    Node, called `require()`. The `require()` function will let us do three things:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们不会讨论如何制作我们自己的模块；事实上，我们将讨论如何使用模块，这将使用Node中的一个函数`require()`来实现。`require()`函数将让我们做三件事：
- en: First, it'll let us load in modules that come bundled with Node.js. These include
    the HTTP module, which lets us make a web server, and the `fs` module, which lets
    us access the filesystem for our machine.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，它让我们加载Node.js捆绑的模块。这些包括HTTP模块，它让我们创建一个Web服务器，以及`fs`模块，它让我们访问机器的文件系统。
- en: We will also be using `require()` in later sections to load in third-party libraries,
    such as Express and Sequelize, which will let us write less code.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将在后面的部分中使用`require()`来加载第三方库，比如Express和Sequelize，这将让我们编写更少的代码。
- en: We'll be able to use prewritten libraries to handle complex problems, and all
    we need to do is implement `require()` by calling a few methods.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将能够使用预先编写的库来处理复杂的问题，我们所需要做的就是通过调用一些方法来实现`require()`。
- en: We will use `require()` to require our very own files. It will let us break
    up our application into multiple, smaller files, which is essential for building
    real-world apps.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将使用`require()`来引入我们自己的文件。它将让我们将应用程序分解为多个较小的文件，这对于构建真实世界的应用程序至关重要。
- en: If you have all of your code in one file, it will be really hard to test, maintain,
    and update. Now, `require()` isn't that bad. In this section, we'll explore the
    first use case for `require()`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的所有代码都在一个文件中，测试、维护和更新将会非常困难。现在，`require()`并不那么糟糕。在本节中，我们将探讨`require()`的第一个用例。
- en: Using case for require()
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`require()`的情况
- en: We'll take a look at two built-in modules; we'll figure out how to require them
    and how to use them, and then we'll move on to starting the process of building
    that Node application.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下两个内置模块；我们将弄清楚如何引入它们和如何使用它们，然后我们将继续开始构建那个Node应用程序的过程。
- en: Initialization of an application
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序的初始化
- en: 'The first step we''ll take inside of the Terminal is that we''ll make a directory
    to store all of these files. We''ll navigate from our home directory to the desktop
    using the `cd Desktop` command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在终端中的第一步是创建一个目录来存储所有这些文件。我们将使用`cd Desktop`命令从我们的主目录导航到桌面：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then, we'll make a folder to store all of the lesson files for this project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将创建一个文件夹来存储这个项目的所有课程文件。
- en: Now, these lesson files will be available in the resources section for every
    section, so if you get stuck or your code just isn't working for some reason,
    you can download the lesson files, compare your files, and figure out where things
    went wrong.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些课程文件将在每个部分的资源部分中提供，因此如果你遇到困难，或者你的代码出了问题，你可以下载课程文件，比较你的文件，找出问题所在。
- en: 'Now, we''ll make that folder using the `mkdir` command, which is the short
    form for **make directory**. Let''s call the folder `notes-node`, as shown in
    the following code:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用`mkdir`命令来创建那个文件夹，这是**make directory**的缩写。让我们将文件夹命名为`notes-node`，如下所示：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We''ll make a note app in Node so that `notes-node` seems appropriate. Then
    we''ll `cd` into `notes-node`, and we can get started playing around with some
    of the built-in modules:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Node中制作一个笔记应用，所以`notes-node`似乎很合适。然后我们将`cd`进入`notes-node`，然后我们可以开始玩一些内置模块：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: These modules are built in, so there's no need to install anything in Terminal.
    We can simply require them right inside of our Node files.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块是内置的，所以不需要在终端中安装任何东西。我们可以直接在我们的Node文件中引入它们。
- en: 'The next step in the process is to open up that directory inside the Atom text
    editor. So open up the directory we just created on the Desktop, and you will
    find it there, as shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中的下一步是打开Atom文本编辑器中的那个目录。所以打开我们刚刚在桌面上创建的目录，你会在那里找到它，如下面的截图所示：
- en: '![](img/0c1f5e61-9318-4a46-8fb2-994408a8d2d1.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c1f5e61-9318-4a46-8fb2-994408a8d2d1.png)'
- en: 'Now, we will need to make a file, and we''ll put that file in the root of the
    project:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要创建一个文件，并将该文件放在项目的根目录中：
- en: '![](img/9ef115c8-64d7-428a-b25d-28f3441d2057.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ef115c8-64d7-428a-b25d-28f3441d2057.png)'
- en: 'We''ll call this file `app.js`, and this is where our application will start:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个文件命名为`app.js`，这是我们应用程序的起点：
- en: '![](img/9fdc5112-279d-4049-8f40-c7a820d516d2.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fdc5112-279d-4049-8f40-c7a820d516d2.png)'
- en: We will be writing other files that get used throughout the app, but this is
    the only file we'll ever be running from Terminal. This is the initialization
    file for our application.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写其他在整个应用程序中使用的文件，但这是我们唯一会从终端运行的文件。这是我们应用程序的初始化文件。
- en: The built-in module to use require()
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用require()的内置模块
- en: 'Now, to kick things off, the first thing I will do is to use `console.log`
    to print `Starting app`, as shown in the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了开始，我将首先使用`console.log`打印`Starting app`，如下面的代码所示：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The only reason we'll do this is to keep track of how our files are executing,
    and we'll do this only for the first project. Down the line, once you're comfortable
    with how files get loaded and how they run, we'll be able to remove these `console.log`
    statements, as they won't be necessary.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这样做的唯一原因是为了跟踪我们的文件如何执行，我们只会在第一个项目中这样做。在以后，一旦你熟悉了文件的加载和运行方式，我们就可以删除这些`console.log`语句，因为它们将不再必要。
- en: After we call the `console.log` starting app, we'll load in a built-in module
    using `require()`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用`console.log`开始应用程序之后，我们将使用`require()`加载一个内置模块。
- en: We can get a complete list of all of the built-in modules in the Node.js API
    docs.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在Node.js API文档中获得所有内置模块的完整列表。
- en: To view Node.js API docs, go to [nodejs.org/api](http://nodejs.org/api). When
    you go to this URL, you'll be greeted with a long list of built-in modules. Using
    the **File System** module we'll create a new file and the **OS** module. The
    OS module will let us fetch things such as the username for the currently logged-in
    user.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '要查看Node.js API文档，请转到[nodejs.org/api](http://nodejs.org/api)。当你访问这个URL时，你会看到一个很长的内置模块列表。使用**文件系统**模块，我们将创建一个新文件和**OS**模块。OS模块将让我们获取当前登录用户的用户名等信息。 '
- en: Creating and appending files in the File System module
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在文件系统模块中创建和追加文件
- en: 'To kick things off though, we will start with the File System module. We''ll
    go through the process of creating a file and appending to it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，首先我们将从文件系统模块开始。我们将逐步介绍如何创建文件并追加内容：
- en: '![](img/5b1f68c0-b22d-4a77-b215-07276083f00c.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b1f68c0-b22d-4a77-b215-07276083f00c.png)'
- en: When you view a docs page for a built-in module, whether it's File System or
    a different module, you'll see a long list of all the different functions and
    properties that you have available to you. The one we'll use in this section is
    `fs.appendFile`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看内置模块的文档页面时，无论是文件系统还是其他模块，你都会看到一个很长的列表，列出了你可以使用的所有不同函数和属性。在本节中，我们将使用的是`fs.appendFile`。
- en: 'If you click on it, it will take you to the specific documentation, and this
    is where we can figure out how to use `appendFile`, as shown in the following
    screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击它，它会带你到具体的文档页面，这是我们可以找出如何使用`appendFile`的地方，如下面的截图所示：
- en: '![](img/83a4ce04-2434-462b-a603-e6a46de862b6.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83a4ce04-2434-462b-a603-e6a46de862b6.png)'
- en: 'Now, `appendFile` is pretty simple. We''ll pass to it two string arguments
    (shown in the preceding screenshot):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`appendFile`非常简单。我们将向它传递两个字符串参数（如前面的截图所示）：
- en: One will be the file name
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个是文件名
- en: The other will be the data we want to append to the file
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个是我们想要追加到文件中的数据
- en: This is all we need to provide in order to call `fs.appendFile`. Before we can
    call `fs.appendFile`, we need to require it. The whole point of requiring is to
    let us load in other modules. In this case, we'll load in the `fs` module from
    `app.js`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们调用`fs.appendFile`所需要提供的全部内容。在我们调用`fs.appendFile`之前，我们需要先引入它。引入的整个目的是让我们加载其他模块。在这种情况下，我们将从`app.js`中加载`fs`模块。
- en: Let's create a variable that will be a constant, using `const`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个变量，使用`const`来定义它。
- en: Since we'll not be manipulating the code the module sends back, there's no need
    to use the `var` keyword; we will use the `const` keyword.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们不会操纵模块返回的代码，所以不需要使用`var`关键字；我们将使用`const`关键字。
- en: 'Then we''ll give it a name, `fs` and set it equal to `require()`, as shown
    in the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们会给它一个名字，`fs`，并将其设置为`require()`，如下面的代码所示：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, `require()` is a function that's available to you inside any of your Node.js
    files. You don't have to do anything special to call it, you simply call it as
    shown in the preceding code. Inside the argument list, we'll just pass one string.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`require()`是一个可以在任何Node.js文件中使用的函数。你不需要做任何特殊的事情来调用它，只需要像前面的代码中所示的那样调用它。在参数列表中，我们只需要传入一个字符串。
- en: Now, every time you call `require()`, whether you're loading a built-in module,
    a third-party module, or your own file, you just pass in one string.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每次调用`require()`时，无论是加载内置模块、第三方模块还是你自己的文件，你只需要传入一个字符串。
- en: 'In our case, we''ll pass in the module name, which is `fs` and toss in a semicolon
    at the end, as shown in the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们将传入模块名`fs`，并在末尾加上一个分号，如下面的代码所示：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will tell Node that you want to fetch all of the contents of the `fs` module
    and store them in the `fs` variable. At this point, we have access to all of the
    functions available on the `fs` module, which we explored over in the docs, including
    `fs.appendFile`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这将告诉Node，你想要获取`fs`模块的所有内容，并将它们存储在`fs`变量中。此时，我们可以访问`fs`模块上的所有可用函数，包括`fs.appendFile`，我们在文档中探索过。
- en: 'Back in Atom, we can call the `appendFile` by calling `fs.appendFile`, passing
    in the two arguments that we''ll use; the first one will be the filename, so we
    add `greetings.txt`, and the second one will be the text you want to append to
    the file. In our case, we''ll append `Hello world!`, as shown in the following
    code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 回到Atom，我们可以通过调用 `fs.appendFile` 来调用 `appendFile`，传入我们将使用的两个参数；第一个将是文件名，所以我们添加
    `greetings.txt`，第二个将是你想要追加到文件中的文本。在我们的例子中，我们将追加 `Hello world!`，如下面的代码所示：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Let's save the file, as shown in the preceding command, and run it from Terminal
    to see what happens.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存文件，如上面的命令所示，并从终端运行它，看看会发生什么。
- en: '**Warning when running the program on Node v7** If you''re running Node v7
    or greater, you''ll get a little warning when you run the program inside Terminal.
    Now, on v7, it''ll still work, it''s just a warning, but you can get rid of it
    using the following code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**在Node v7上运行程序时的警告** 如果你在Node v7或更高版本上运行，当你在终端内运行程序时会收到一个小警告。现在，在v7上，它仍然可以工作，只是一个警告，但你可以使用以下代码来摆脱它：'
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the preceding code, we have the original line that we have inside our program.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们有我们程序中的原始行。
- en: In `Option one` here is to add a callback as the third argument to the append
    file. This callback will get executed when either an error occurs or the file
    successfully gets written too. Inside option one, we have an `if` statement; if
    there is an error, we simply print a message to the screen, `Unable to write to
    file`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里的 `Option one` 是将回调添加为追加文件的第三个参数。当发生错误或文件成功写入时，此回调将被执行。在选项一中，我们有一个 `if` 语句；如果有错误，我们只是在屏幕上打印一条消息
    `Unable to write to file`。
- en: Now, our second option in the preceding code, `Option two`, is to call `appendFileSync`,
    which is a synchronous method (we'll talk more about that later); this function
    does not take the third argument. You can type it as shown in the preceding code
    and you won't get the warning.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在上面的代码中，我们的第二个选项 `Option two` 是调用 `appendFileSync`，这是一个同步方法（我们稍后会详细讨论）；这个函数不需要第三个参数。你可以像上面的代码中所示那样输入它，你就不会收到警告。
- en: So, pick one of these two options if you see the warning; both will work much
    the same.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你看到警告，选择其中一种选项，两者都可以工作得差不多。
- en: If you are on v6, you can stick with the the original line, shown at the top
    of the preceding code, although you might as well use one of the two options below
    that line to make your code a little more future proof.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是v6，你可以坚持使用上面代码中的原始行，尽管你可能会使用下面这两个选项之一来使你的代码更具未来性。
- en: Fear not, we'll be talking about asynchronous and synchronous functions, as
    well as callback functions, extensively throughout the book. What I'm giving you
    here in the code is just a template, something you can write in your file to get
    that error removed. In a few chapters, you will understand exactly what these
    two methods are and how they work.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心，我们将在整本书中广泛讨论异步和同步函数，以及回调函数。我在代码中给你的只是一个模板，你可以在你的文件中写下来以消除错误。在几章中，你将准确理解这两种方法是什么，以及它们是如何工作的。
- en: 'If we do the appending over in Terminal, `node app.js`, we''ll see something
    pretty cool:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在终端中进行追加，`node app.js`，我们会看到一些很酷的东西：
- en: '![](img/2ec51c4b-ece3-4ce3-bb59-73b569219a36.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ec51c4b-ece3-4ce3-bb59-73b569219a36.png)'
- en: 'As shown in the preceding code, we get our one `console.log` statement, `Starting
    app.`. So we know the app started correctly. Also, if we head over into Atom,
    we''ll actually see that there''s a brand new `greetings.txt` file, as shown in
    the following code. This is the text file that was created by `fs.appendFile`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的代码所示，我们得到了我们的一个 `console.log` 语句，`Starting app.`。所以我们知道应用程序已经正确启动了。此外，如果我们转到Atom，我们实际上会看到一个全新的
    `greetings.txt` 文件，如下面的代码所示。这是由 `fs.appendFile` 创建的文本文件：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, `fs.appendFile` tries to append `greetings.txt` to a file; if the file
    doesn''t exist, it simply creates it:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`fs.appendFile` 尝试将 `greetings.txt` 追加到一个文件中；如果文件不存在，它就会简单地创建它：
- en: '![](img/91fe0afc-82be-45e7-8cf1-71ab8ac7e2c8.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/91fe0afc-82be-45e7-8cf1-71ab8ac7e2c8.png)'
- en: You can see that we have our message, `Hello world!` in the `greetings.txt`
    file, printing to the screen. In just a few minutes, we were able to load in a
    built-in Node module and call a function that lets us create a brand new file.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们的消息 `Hello world!` 在 `greetings.txt` 文件中打印到屏幕上。在短短几分钟内，我们就能够加载一个内置的Node模块并调用一个函数，让我们创建一个全新的文件。
- en: 'If we call it again by rerunning the command using the up arrow key and the
    e*nter* key, and we head back into the contents of `greetings.txt`, you can see
    this time around that we have `Hello world!` twice, as shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次调用它，通过使用上箭头键和回车键重新运行命令，并回到 `greetings.txt` 的内容，你会看到这一次我们有两次 `Hello world!`，如下所示：
- en: '![](img/e87eb337-f0a8-4c89-b798-9b58b7a5739d.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e87eb337-f0a8-4c89-b798-9b58b7a5739d.png)'
- en: It appended `Hello world!` one time for each time we ran the program. We have
    an application that creates a brand new file on our filesystem, and if the file
    already exists, it simply adds to it.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 它每次运行程序都会追加 `Hello world!` 一次。我们有一个应用程序，在我们的文件系统上创建一个全新的文件，如果文件已经存在，它就会简单地添加到它。
- en: The OS module in require()
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在require()中的OS模块
- en: Once we have created and appended the `greetings.txt` file, we'll customize
    this `greeting.txt` file. To do this, we'll explore one more built-in module.
    We'll be using more than just `appendFile` in the future. We'll be exploring other
    methods. For this section, the real goal is to understand `require()`. The `require()`
    function lets us load in the module's functionality so that we can call it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们创建并追加了 `greetings.txt` 文件，我们将自定义这个 `greeting.txt` 文件。为了做到这一点，我们将探索另一个内置模块。我们将在未来使用不仅仅是
    `appendFile`。我们将探索其他方法。对于本节，真正的目标是理解 `require()`。`require()` 函数让我们加载模块的功能，以便我们可以调用它。
- en: 'The second module that we''ll be using is OS, and we can view it in the documentation.
    In the OS module, we''ll use the method defined at the very bottom, os.userInfo([options]):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的第二个模块是OS，我们可以在文档中查看它。在OS模块中，我们将使用在最底部定义的方法，os.userInfo([options])：
- en: '![](img/4701cb5a-ce45-40d1-8cbe-10c9dcdff9b4.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4701cb5a-ce45-40d1-8cbe-10c9dcdff9b4.png)'
- en: 'The os.userInfo([options]) method gets called and returns various information
    about the currently logged-in user, such as the username, and this is what we''ll
    pull off:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: os.userInfo([options])方法被调用并返回有关当前登录用户的各种信息，例如用户名，这就是我们要提取的信息：
- en: '![](img/dfff1585-133a-45cb-b109-74c1c8c9b000.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfff1585-133a-45cb-b109-74c1c8c9b000.png)'
- en: Using the username that comes from the OS, we can customize the `greeting.txt`
    file so that instead of `Hello world!` it can say `Hello Gary!`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用来自操作系统的用户名，我们可以自定义`greeting.txt`文件，以便它可以说`Hello Gary!`而不是`Hello world!`。
- en: 'To get started, we have to require OS. This means that we''ll go back inside
    Atom. Now, just below where I created my `fs` constant, I''ll create a new constant
    called `os`, setting it equal to `require()`; this gets called as a function and
    passes one argument, the module name, `os`, as shown here:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们必须要求OS。这意味着我们将回到Atom内部。现在，在我创建`fs`常量的下面，我将创建一个名为`os`的新常量，将其设置为`require()`;
    这作为一个函数调用，并传递一个参数，模块名称`os`，如下所示：
- en: '[PRE9]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: From here, we can start calling methods available on the OS module, such as
    os.userInfo([optional]).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，我们可以开始调用OS模块上可用的方法，例如os.userInfo([optional])。
- en: 'Let''s make a new variable called `user` to store the result. The variable
    user will get set equal to `os.userInfo`, and we can call `userInfo` without any
    arguments:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`user`的新变量来存储结果。变量user将被设置为`os.userInfo`，我们可以调用`userInfo`而不带任何参数：
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, before we do anything with the `fs.appendFile` line, I''ll comment it
    out and print the contents of the user variable using `console.log`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们对`fs.appendFile`行执行任何操作之前，我将对其进行注释，并使用`console.log`打印用户变量的内容：
- en: '[PRE11]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This will let us explore exactly what we get back. Over in Terminal, we can
    rerun our program using the up arrow key and e*nter* key, and right here in the
    following code, you see that we have an object with a few properties:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这将让我们准确地探究我们得到了什么。在终端中，我们可以使用上箭头键和回车键重新运行我们的程序，并且在下面的代码中，你可以看到我们有一个带有一些属性的对象：
- en: '![](img/e8e6025d-09b3-4c9e-9e0d-5d65e2a43a74.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8e6025d-09b3-4c9e-9e0d-5d65e2a43a74.png)'
- en: We have `uid`, `gid`, `username`, `homedir`, and `shell`. Depending on your
    OS, you'll not have all of these, but you should always have the `username` property.
    This is the one we care about.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有`uid`，`gid`，`username`，`homedir`和`shell`。根据您的操作系统，您可能不会拥有所有这些，但您应该始终拥有`username`属性。这是我们关心的。
- en: 'This means that back inside Atom, we can use `user.username` inside of `appendFile`.
    I''ll remove the `console.log` statement and uncomment our call to `fs.appendFile`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着回到Atom内部，我们可以在`appendFile`中使用`user.username`。我将删除`console.log`语句并取消注释我们对`fs.appendFile`的调用：
- en: '[PRE12]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Now, where we have `world` in the `fs.appendFile`, we'll swap it with `user.username`.
    There are two ways we can do this.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`fs.appendFile`中的`world`处，我们将其与`user.username`交换。我们可以以两种方式做到这一点。
- en: Concatenating user.username
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接用户.username
- en: 'The first way is to remove `world!` and concatenate `user.username`. Then we
    can concatenate another string using the `+` (plus) operator, as shown in the
    following code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是删除`world!`并连接`user.username`。然后我们可以使用`+`（加号）运算符连接另一个字符串，如下面的代码所示：
- en: '[PRE13]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now if we run this, everything is going to work as expected. Over in Terminal,
    we can rerun our app. It prints `Starting app`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们运行这个，一切都会按预期工作。在终端中，我们可以重新运行我们的应用程序。它会打印`Starting app`：
- en: '![](img/eeb699b5-0250-46f4-b4f4-45f16076b0c1.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eeb699b5-0250-46f4-b4f4-45f16076b0c1.png)'
- en: 'Over in the `greetings.txt` file, you should see something like `Hello Gary!`
    printing to the screen, as shown here:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在`greetings.txt`文件中，你应该看到类似`Hello Gary!`的东西打印到屏幕上，如下所示：
- en: '![](img/48ca995f-4076-461a-8e60-c817922f81d8.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48ca995f-4076-461a-8e60-c817922f81d8.png)'
- en: Using the `fs` module and the `os` module, we were able to grab the user's username,
    create a new file, and store it.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`fs`模块和`os`模块，我们能够获取用户的用户名，创建一个新文件并存储它。
- en: Using template strings
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模板字符串
- en: The second way to swap `world` with `user.username` in the `fs.appendFile` is,
    using an ES6 feature known as template strings. Template strings start and end
    with the [PRE14]
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是使用ES6功能模板字符串来交换`fs.appendFile`中的`world`与`user.username`。模板字符串以[PRE14]开头和结尾
- en: console.log('Starting app.');
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.');
- en: const fs = require('fs');
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: var user = os.userInfo();
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello !`);
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello !`);
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: console.log('Starting app.');
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.');
- en: const fs = require('fs');
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: var user = os.userInfo();
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: console.log('Starting notes.js');
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting notes.js');
- en: '[PRE17]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: console.log('Starting app.js');
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('');
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('');
- en: var user = os.userInfo();
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
- en: '[PRE18]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: console.log('Starting app.js');
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var user = os.userInfo();
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: console.log('Starting app.js');
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: // const notes = require('./notes.js');
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: // const notes = require('./notes.js');
- en: var user = os.userInfo();
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello ${user.username}!`);
- en: '[PRE20]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: console.log('Starting notes.js');
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting notes.js');
- en: console.log(module);
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(module);
- en: '[PRE21]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: console.log('Starting notes.js');
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting notes.js');
- en: module.exports.age = 25;
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.age = 25;
- en: '[PRE22]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: console.log('Starting app.js');
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var user = os.userInfo();
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: var user = os.userInfo();
- en: fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE23]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: console.log('Starting notes.js');
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = function () {
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = function () {
- en: '}'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE24]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: console.log('Starting notes.js');
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = () => {
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: '}'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE25]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: console.log('Starting notes.js');
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = () => {
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: console.log('addNote');
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('addNote');
- en: return 'New note';
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 '新笔记';
- en: '};'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE26]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: console.log('Starting app.js');
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: // var user = os.userInfo();
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE27]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: console.log('Starting app.js');
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var res = notes.addNote();
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: var res = notes.addNote();
- en: // var user = os.userInfo();
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE28]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: console.log('Starting app.js');
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var res = notes.addNote();
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: var res = notes.addNote();
- en: console.log(res);
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录(res);
- en: // var user = os.userInfo();
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE29]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: console.log('Starting notes.js');
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = () => {
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: console.log('addNote');
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('addNote');
- en: return 'New note';
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 '新笔记';
- en: '};'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: module.exports.add =
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.add =
- en: '[PRE30]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: console.log('Starting notes.js');
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = () => {
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: console.log('addNote');
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('addNote');
- en: return 'New note';
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 '新笔记';
- en: '};'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: module.exports.add = (a, b) => {
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.add = (a, b) => {
- en: '};'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE31]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: console.log('Starting notes.js');
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 notes.js');
- en: module.exports.addNote = () => {
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: console.log('addNote');
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('addNote');
- en: return 'New note';
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 '新笔记';
- en: '};'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: module.exports.add = (a, b) => {
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.add = (a, b) => {
- en: return a + b;
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 a + b;
- en: '};'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE32]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: console.log('Starting app.js');
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const notes = require('./notes.js');
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: console.log('Result:', notes.add(9, -2));
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('结果:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE33]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '{'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"name": "notes-node",'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '"名称": "notes-node",'
- en: '"version": "1.0.0",'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '"版本": "1.0.0",'
- en: '"description": "",'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '"描述": "",'
- en: '"main": "app.js",'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '"主要": "app.js",'
- en: '"scripts": {'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '"脚本": {'
- en: '"test": "echo \"Error: no test specified\" && exit 1"'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '"测试": "echo \"错误：未指定测试\" && 退出 1"'
- en: '},'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"author": "",'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '"作者": "",'
- en: '"license": "ISC"'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '"许可": "ISC"'
- en: '}'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE34]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: npm install loadsh --save
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: npm 安装 loadsh --save
- en: '[PRE35]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '{'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"name": "notes-node",'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '"名称": "notes-node",'
- en: '"version": "1.0.0",'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '"版本": "1.0.0",'
- en: '"description": "",'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '"描述": "",'
- en: '"main": "app.js",'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '"主要": "app.js",'
- en: '"scripts": {'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '"脚本": {'
- en: '"test": "echo \"Error: no test specified\" && exit 1"'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '"测试": "echo \"错误：未指定测试\" && 退出 1"'
- en: '},'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"author": "",'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '"作者": "",'
- en: '"license": "ISC",'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '"许可": "ISC",'
- en: '"dependencies": {'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '"依赖": {'
- en: '"lodash": "^4.17.4"'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '"lodash": "^4.17.4"'
- en: '}'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE36]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: console.log('Starting app.js');
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: console.log('Result:', notes.add(9, -2));
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('结果:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE37]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: console.log('Starting app.js');
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: console.log('Result:', notes.add(9, -2));
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('结果:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE38]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: console.log('Starting app.js');
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: console.log(_.isString(true));
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录(_.isString(true));
- en: console.log(_.isString('Gary'));
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录(_.isString('Gary'));
- en: // console.log('Result:', notes.add(9, -2));
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log('Result:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE39]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: console.log('Starting app.js');
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: // console.log(_.isString(true));
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString(true));
- en: // console.log(_.isString('Gary'));
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString('Gary'));
- en: var filteredArray = _.uniq(['Gary', 1, 'Gary', 1, 2, 3, 4]);
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: var filteredArray = _.uniq(['Gary', 1, 'Gary', 1, 2, 3, 4]);
- en: console.log();
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录();
- en: // console.log('Result:', notes.add(9, -2));
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log('Result:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE40]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: console.log('Starting app.js');
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录('启动 app.js');
- en: const fs = require('fs');
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: // console.log(_.isString(true));
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString(true));
- en: // console.log(_.isString('Gary'));
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString('Gary'));
- en: var filteredArray = _.uniq(['Gary', 1, 'Gary', 1, 2, 3, 4]);
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: var filteredArray = _.uniq(['Gary', 1, 'Gary', 1, 2, 3, 4]);
- en: console.log(filteredArray);
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台记录(filteredArray);
- en: // console.log('Result:', notes.add(9, -2));
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log('Result:', notes.add(9, -2));
- en: // var user = os.userInfo();
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: // var user = os.userInfo();
- en: //
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: //
- en: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: // fs.appendFile('greetings.txt', `Hello ${user.username}! You are ${notes.age}.`);
- en: '[PRE41]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '{'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"name": "notes-node",'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '"name": "notes-node",'
- en: '"version": "1.0.0",'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '"version": "1.0.0",'
- en: '"description": "",'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '"description": "",'
- en: '"main": "app.js",'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '"main": "app.js",'
- en: '"scripts": {'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '"scripts": {'
- en: '"test": "echo \"Error: no test specified\" && exit 1"'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '"test": "echo \"Error: no test specified\" && exit 1"'
- en: '},'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"author": "",'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '"author": "",'
- en: '"license": "ISC",'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '"license": "ISC",'
- en: '"dependencies": {'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '"dependencies": {'
- en: '"lodash": "^4.17.4"'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '"lodash": "^4.17.4"'
- en: '}'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE42]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '{'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"name": "notes-node",'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '"name": "notes-node",'
- en: '"version": "1.0.0",'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '"version": "1.0.0",'
- en: '"description": "",'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '"description": "",'
- en: '"main": "app.js",'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '"main": "app.js",'
- en: '"scripts": {'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '"scripts": {'
- en: '"test": "echo \"Error: no test specified\" && exit 1"'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '"test": "echo \"Error: no test specified\" && exit 1"'
- en: '},'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '"author": "",'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '"author": "",'
- en: '"license": "ISC",'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '"license": "ISC",'
- en: '"dependencies": {'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '"dependencies": {'
- en: '"lodash": "^4.17.4"'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '"lodash": "^4.17.4"'
- en: '}'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE43]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: npm install nodemon -g
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: npm install nodemon -g
- en: '[PRE44]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: console.log('Starting app.js');
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const os = require('os');
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: const os = require('os');
- en: const _ = require('lodash');
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: // console.log(_.isString(true));
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString(true));
- en: // console.log(_.isString('Gary'));
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: // console.log(_.isString('Gary'));
- en: var filteredArray = _.uniq(['Mike']);
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: var filteredArray = _.uniq(['Mike']);
- en: console.log(filteredArray);
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(filteredArray);
- en: '[PRE45]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: console.log('Starting app.js');
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: '[PRE46]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: console.log('Starting notes.js');
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting notes.js');
- en: module.exports.addNote = () => {
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.addNote = () => {
- en: console.log('addNote');
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('addNote');
- en: return 'New note';
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: return 'New note';
- en: '};'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: module.exports.add = (a, b) => {
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: module.exports.add = (a, b) => {
- en: return a + b;
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: return a + b;
- en: '};'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE47]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: node app.js add
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: node app.js add
- en: '[PRE48]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: node app.js remove
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: node app.js remove
- en: '[PRE49]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: node app.js list
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: node app.js list
- en: '[PRE50]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: console.log('Starting app.js');
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: console.log(process.argv);
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(process.argv);
- en: '[PRE51]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: var command = process.argv[2];
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: '[PRE52]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'console.log(''Command: '' , command);'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '' , command);'
- en: '[PRE53]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: console.log('Starting app.js');
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add')
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add')
- en: '[PRE54]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: console.log('Starting app.js');
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '}'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE55]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: console.log('Starting app.js');
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'')'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'')'
- en: '[PRE56]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: console.log('Starting app.js');
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Listing all notes');
- en: '} else {'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('Command not recognized');
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Command not recognized');
- en: '}'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE57]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: if (command === 'add') {
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Listing all notes');
- en: '} else {'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('Command not recognized');
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Command not recognized');
- en: '}'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE58]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: console.log('Starting app.js');
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Listing all notes');
- en: '} else if () {'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if () {'
- en: '} else {'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('Command not recognized');
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Command not recognized');
- en: '}'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE59]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: console.log('Starting app.js');
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Listing all notes');
- en: '} else if (command === ''read'') {'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''read'') {'
- en: '} else {'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('Command not recognized');
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Command not recognized');
- en: '}'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE60]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: console.log('Starting app.js');
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Starting app.js');
- en: const fs = require('fs');
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require('fs');
- en: const _ = require('lodash');
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require('lodash');
- en: const notes = require('./notes.js');
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require('./notes.js');
- en: var command = process.argv[2];
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv[2];
- en: 'console.log(''Command: '', command);'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 'console.log(''Command: '', command);'
- en: if (command === 'add') {
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Listing all notes');
- en: '} else if (command === ''read'') {'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''read'') {'
- en: console.log('Reading note');
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Reading note');
- en: '} else {'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('Command not recognized');
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Command not recognized');
- en: '}'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE61]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: if (command === 'add') {
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: if (command === 'add') {
- en: console.log('Adding new note');
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('Adding new note');
- en: '} else if (command === ''list'') {'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (command === ''list'') {'
- en: console.log('Listing all notes');
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'列出所有笔记'）;
- en: '} else if (command === ''read'') {'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 if（命令 === ''读取''）{'
- en: console.log('Reading note');
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'阅读笔记'）;
- en: '} else {'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 {'
- en: console.log('Command not recognized');
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'命令未被识别'）;
- en: '}'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE62]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: console.log('Starting app.js');
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'启动app.js'）;
- en: const fs = require('fs');
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: const fs = require（'fs'）;
- en: const _ = require('lodash');
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: const _ = require（'lodash'）;
- en: const notes = require('./notes.js');
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: const notes = require（'./notes.js'）;
- en: var command = process.argv[2];
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: var command = process.argv [2];
- en: 'console.log(''Command: '', command);'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'命令：'，命令）;
- en: if (command === 'add') {
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 如果（命令 === '添加'）{
- en: console.log('Adding new note');
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'添加新笔记'）;
- en: '} else if (command === ''list'') {'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 if（命令 === ''列表''）{'
- en: console.log('Listing all notes');
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'列出所有笔记'）;
- en: '} else if (command === ''read'') {'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 if（命令 === ''读取''）;'
- en: console.log('Reading note');
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'阅读笔记'）;
- en: '} else if (command == ''remove'') {'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 if（命令 == ''删除''）{'
- en: console.log('Removing note');
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'删除笔记'）;
- en: '} else {'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '} 否则 {'
- en: console.log('Command not recognized');
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（'命令未被识别'）;
- en: '}'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE63]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: console.log(process.argv);
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台日志（process.argv）;
- en: '[PRE64]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: node app.js remove --title
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 节点app.js删除--title
- en: '[PRE65]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: node app.js remove --title=secrets
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 节点app.js删除--title =秘密
- en: '[PRE66]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: node app.js remove --title="secrets 2"
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 节点app.js删除--title =“secrets 2”
- en: '[PRE67]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: node app.js remove --title="secrets 2"
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 节点app.js删除--title =“秘密2”
- en: '```'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'When I run the command, you can see in the following code output that we have
    our two arguments:'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行命令时，您可以在以下代码输出中看到我们有两个参数：
- en: '![](img/1cb82daa-4c24-4774-873c-9a3f6872e51d.png)'
  id: totrans-532
  prefs: []
  type: TYPE_IMG
  zh: ！[]（img/1cb82daa-4c24-4774-873c-9a3f6872e51d.png）
- en: These are the arguments that we don't need, then we have our `remove` command,
    which is the third one, and we now have a new fourth string, the title that is
    equal to `secrets 2`. And our argument was successfully passed into the application.
    The problem is that it's not very easy to use. In the fourth string, we have to
    parse out the key, which is `title`, and the value, which is `secrets 2`.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们不需要的参数，然后我们有我们的`删除`命令，这是第三个，现在我们有一个新的第四个字符串，标题等于`secrets 2`。我们的参数已成功传递到应用程序中。问题是它不太容易使用。在第四个字符串中，我们必须解析出键`title`和值`secrets
    2`。
- en: When we used the command, which was the third argument in the previous section,
    it was a lot easier to use inside our app. We simply pulled it out of the arguments
    array and we referenced it by using the command variable and checking whether
    it equaled `add`, `list`, `read`, or `remove`.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用命令时，它是前一节中的第三个参数，它在我们的应用程序内使用起来更容易。我们只需从参数数组中取出它，并通过使用命令变量引用它，并检查它是否等于`添加`，`列表`，`读取`或`删除`。
- en: 'Things get a lot more complex as we use different styles for passing in the
    arguments. If we rerun the last command with a space instead of an `=` (equals)
    sign, as shown in the following code, which is perfectly valid, our arguments
    array now looks completely different:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们使用不同的样式传递参数，事情变得更加复杂。如果我们使用空格而不是`=`（等号）重新运行上一个命令，如下面的代码所示，这是完全有效的，我们的参数数组现在看起来完全不同：
- en: '![](img/d2a28fa2-df33-4c71-a401-b391ddc66626.png)'
  id: totrans-536
  prefs: []
  type: TYPE_IMG
  zh: ！[]（img/d2a28fa2-df33-4c71-a401-b391ddc66626.png）
- en: In the preceding code output, you can see that we have the title as the fourth
    item, and we have the value, which is `secrets 2`, as the fifth, which means we
    have to add other conditions for parsing. And this turns into a pain really quickly,
    which is why we will not do it.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码输出中，您可以看到标题作为第四项，值作为第五项，这意味着我们必须添加其他条件来解析。这很快就会变得痛苦，这就是为什么我们不会这样做。
- en: We'll use a third-party module called yargs in the next chapter to make parsing
    the command-line arguments effortless. Instead of having strings, as shown in
    this one or the one we discussed earlier, we'll get an object where the title
    property equals the `secrets 2` string. That will make it super easy to implement
    the rest of the notes application.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用一个名为yargs的第三方模块来使解析命令行参数变得轻松。与我们之前展示的字符串不同，我们将得到一个对象，其中title属性等于`secrets
    2`字符串。这将使实现其余笔记应用程序变得非常容易。
- en: Now, parsing certain types of command-line arguments, such as key value pairs,
    becomes a lot more complex, which is why, in the next chapter, we'll be using
    yargs to do just that.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，解析某些类型的命令行参数，例如键值对，变得更加复杂，这就是为什么在下一章中，我们将使用yargs来做到这一点。
- en: Summary
  id: totrans-540
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to use require to load in modules that come
    with Node.js. We created our files for our notes application and required them
    inside `app.js`. We explored how to use built-in modules and we explored how to
    use modules we defined. We found out how to require other files that we created,
    and how to export things such as properties and functions from those files.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学会了如何使用require加载Node.js提供的模块。我们为笔记应用程序创建了我们的文件，并在`app.js`中引入它们。我们探索了如何使用内置模块，以及如何使用我们定义的模块。我们发现了如何要求我们创建的其他文件，并如何从这些文件中导出属性和函数等东西。
- en: We explored npm a little bit, how we can use `npm init` to generate a `package.json`
    file, and how we can install and use third-party modules. Next, we explored the
    `nodemon` module, using it to automatically restart our app as we make changes
    to a file. Last, we learned how to get input from the user, which is needed to
    create the notes application. We learned that we can use command-line arguments
    to pass data into our app.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍微探索了npm，我们如何使用`npm init`生成`package.json`文件，以及我们如何安装和使用第三方模块。接下来，我们探索了`nodemon`模块，使用它在我们对文件进行更改时自动重新启动我们的应用程序。最后，我们学会了如何从用户那里获取输入，这对创建笔记应用程序是必要的。我们了解到我们可以使用命令行参数将数据传递给我们的应用程序。
- en: In the next chapter, we'll explore some more interesting Node fundamental concepts,
    including yargs, JSON, and Refactor.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探索一些更有趣的Node基本概念，包括yargs，JSON和重构。
