- en: Chapter 1.  Building a Twitter-Like Application Using the MVC Design Pattern
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。使用MVC设计模式构建类似Twitter的应用程序
- en: The **Model** **View** **Controller** (**MVC**) design pattern was very popular
    in the eighties in the software industry. This pattern helped so many engineers
    and companies to build better software for a while and is still useful nowadays
    with the rise of Node.js and some Node frameworks as **Express.js** (more information
    about Express.js and its API can be found at [http://expressjs.com/](http://expressjs.com/)).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型** **视图** **控制器**（**MVC**）设计模式在八十年代在软件行业非常流行。这种模式帮助了许多工程师和公司一段时间内构建更好的软件，而且在Node.js的兴起和一些Node框架如**Express.js**（有关Express.js及其API的更多信息，请访问[http://expressjs.com/](http://expressjs.com/)）时仍然有用。'
- en: Note
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As the Express.js website says, it is "*Fast, unopinionated, minimalist web
    framework for Node.js.*"
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正如Express.js网站所说，它是“*快速、不偏见、极简的Node.js网络框架*”。
- en: Express.js is the most popular Node framework and many companies across the
    globe have adopted it. So in our first application, let's see how to apply the
    MVC pattern to create an application using only JavaScript at the backend.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Express.js是最受欢迎的Node框架，许多全球公司都采用了它。因此，在我们的第一个应用程序中，让我们看看如何应用MVC模式来创建一个仅使用JavaScript作为后端的应用程序。
- en: 'In this chapter, we will cover these topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Installing the Node and Express framework
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Node和Express框架
- en: MVC design pattern
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MVC设计模式
- en: Dealing with Yeoman generator
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理Yeoman生成器
- en: How to use Express generator
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Express生成器
- en: How to deal with Express template engine
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何处理Express模板引擎
- en: User authentication
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户认证
- en: MongoDB connection with Mongoose Schema
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Mongoose Schema连接MongoDB
- en: Installing Node.js
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: First off, we need to install the most up-to-date Node.js version. At the time
    of writing this book, Node.js's latest update is *v6.3.0*. You can go to the Node.js
    website at [https://nodejs.org/en/](https://nodejs.org/en/) and choose your platform.
    For this book, we are using Mac OS X, but the examples can be followed on any
    platform.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装最新的Node.js版本。在撰写本书时，Node.js的最新更新版本是*v6.3.0*。您可以访问Node.js网站[https://nodejs.org/en/](https://nodejs.org/en/)并选择您的平台。对于本书，我们使用的是Mac
    OS X，但示例可以在任何平台上进行跟踪。
- en: 'To check the Node and **Node Package Manager** (**NPM**) version, open your
    terminal/shell and type these:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查Node和**Node Package Manager** (**NPM**)版本，请打开您的终端/Shell并输入以下内容：
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The book uses Node version *6.3.0* and NPM version *3.10.3*
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该书使用Node版本*6.3.0*和NPM版本*3.10.3*
- en: Installing Yeoman
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Yeoman
- en: Throughout this book, we will use some tools that accelerate our development
    process. One of them is called **Yeoman** (more information can be found at [http://yeoman.io/](http://yeoman.io/)),
    a powerful web application generator.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用一些加速开发过程的工具。其中之一称为**Yeoman**（更多信息可以在[http://yeoman.io/](http://yeoman.io/)找到），一个强大的Web应用程序生成器。
- en: 'Now let''s install the generator. Open your terminal/shell and type the following
    code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装生成器。打开您的终端/Shell并输入以下代码：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Installing Express generator
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Express生成器
- en: For our first application, let's use the official Express generator. The generator
    helps us in creating the initial code of our application and we can modify it
    to fit into our application.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第一个应用程序，让我们使用官方的Express生成器。生成器可以帮助我们创建应用程序的初始代码，并且我们可以修改它以适应我们的应用程序。
- en: 'Simply type the following command in your terminal or shell:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 只需在您的终端或Shell中输入以下命令：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that the `-g` flag means installing globally on your machine so that you
    can use it on any project.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`-g`标志表示在您的计算机上全局安装，以便您可以在任何项目中使用它。
- en: Express is a powerful micro framework for Node.js; with it, it's possible to
    build web applications with ease.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Express是一个强大的Node.js微框架；借助它，可以轻松构建Web应用程序。
- en: Building the baseline
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建基线
- en: The project that will start now will be a fully server-side application. We
    will not use any interface framework such as AngularJS, Ember.js, and others;
    let's just concentrate on the express framework.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始的项目将是一个完全基于服务器端的应用程序。我们不会使用任何界面框架，如AngularJS，Ember.js等；让我们只专注于express框架。
- en: The purpose of this application is to use all the express resources and middleware
    to create an application following the MVC design pattern.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序的目的是利用所有的express资源和中间件来创建一个遵循MVC设计模式的应用程序。
- en: '**Middleware** is basically functions that are activated by the routing layer
    of express. The name refers to when a route is activated until its return (from
    start to end). Middleware is in the middle as the name suggests. It is important
    to remember that the functions are executed in the order in which they were added.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**中间件**基本上是由express的路由层激活的函数。名称指的是当路由被激活直到其返回（从开始到结束）。中间件就像名称所暗示的那样处于中间位置。重要的是要记住，函数是按照它们被添加的顺序执行的。'
- en: In the code examples, we will be using  middleware including `cookie-parser`,
    `body-parser`, and many others.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码示例中，我们将使用包括`cookie-parser`、`body-parser`等中间件。
- en: Note
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can download the code used in this book directly from the book page present
    at Packt Publishing Website and you can also download this chapter and all others
    directly from GitHub at:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接从Packt Publishing网站上的书页下载本书中使用的代码，也可以直接从GitHub上下载本章和其他所有章节：
- en: '[https://github.com/newaeonweb/nodejs-6-blueprints](https://github.com/newaeonweb/nodejs-6-blueprints).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/newaeonweb/nodejs-6-blueprints](https://github.com/newaeonweb/nodejs-6-blueprints)。'
- en: Each application is given the name of the relevant chapter, so let's dive into
    our code now.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用程序都被赋予了相关章节的名称，所以现在让我们深入到我们的代码中。
- en: First off, create a new folder called `chapter-01` on your machine. From now
    on, we will call this folder the root project folder. Before we move on and execute
    the command to start our project, we will see a few lines about the flags that
    we use with the `express` command.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在您的计算机上创建一个名为`chapter-01`的新文件夹。从现在开始，我们将称这个文件夹为根项目文件夹。在我们继续执行启动项目的命令之前，我们将看到一些关于我们在`express`命令中使用的标志的内容。
- en: 'The command we use is `express --ejs --css sass -git`, where:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的命令是`express --ejs --css sass -git`，其中：
- en: '`express` is the default command used to create an application'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`express`是用于创建应用程序的默认命令'
- en: '`--ejs` means to use the embedded JavaScript template engine, instead of **Jade**
    (default)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ejs`表示使用嵌入式JavaScript模板引擎，而不是**Jade**（默认）'
- en: '`--css sass` means use **SASS** instead of plain **CSS** (default)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--css sass`表示使用**SASS**而不是纯**CSS**（默认）'
- en: '`--git`: means to add a `.gitignore` file to the project'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--git`：表示向项目添加一个`.gitignore`文件'
- en: As I'm using git for version control, it will be useful to use the express option
    to add a `.gitignore` file to my application. But I'll skip all git commands in
    the book.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我正在使用git进行版本控制，使用express选项向我的应用程序添加一个`.gitignore`文件将非常有用。但我会在书中跳过所有git命令。
- en: 'To check all the options available from the `express` framework, you can type
    this into your terminal/shell:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看`express`框架提供的所有选项，可以在终端/Shell中输入以下内容：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And the framework gives us all the commands available to start a project:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 框架为我们提供了启动项目的所有可用命令：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, open your terminal/shell and type the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开你的终端/Shell并输入以下命令：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output in the terminal/shell will be as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 终端/Shell中的输出将如下所示：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'As you can see in the following screenshot, the generator is very flexible
    and only creates the minimum necessary structure to start a project:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在下面的截图中所看到的，生成器非常灵活，只创建了启动项目所需的最小结构：
- en: '![Building the baseline](img/image_01_001.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![构建基线](img/image_01_001.jpg)'
- en: However, we will make some changes before we proceed.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 但在继续之前，我们将进行一些更改。
- en: Adding changes to the package.json file
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向`package.json`文件添加更改
- en: 'Open `package.json` in the root project folder and add the following highlighted
    lines of code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在根项目文件夹中打开`package.json`并添加以下突出显示的代码行：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Even though it is not a high-priority alteration, it is considered a good practice
    to add this information to your project.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这不是一个高优先级的修改，但将这些信息添加到项目中被认为是一个良好的做法。
- en: Now we are ready to run the project; let's install the necessary dependencies
    that are already listed in the `package.json` file.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备运行项目；让我们安装在`package.json`文件中已列出的必要依赖。
- en: 'On the terminal/shell, type the following command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端/Shell中，输入以下命令：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: At the end, we are ready to go!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备好了！
- en: Running the application
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: 'To run the project and see the application in the browser, type the following
    command in your terminal/shell:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行项目并在浏览器中查看应用程序，请在你的终端/Shell中输入以下命令：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output in your terminal/shell will be as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你的终端/Shell中的输出将如下所示：
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can run just `npm start`, but you won't see the previous output with the
    port name; later in this chapter, we will fix it.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以只运行`npm start`，但你不会看到之前带有端口名称的输出；在本章的后面，我们会修复它。
- en: Now, just check out `http://localhost:3000`. You'll see the welcome message
    from express.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需查看`http://localhost:3000`。你将看到express的欢迎消息。
- en: Changing the application's structure
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改应用程序的结构
- en: Let's make some changes to the structure of directories in our application and
    prepare it to follow the Model-View-Controller design pattern.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对应用程序的目录结构进行一些更改，并准备好遵循模型-视图-控制器设计模式。
- en: 'I will list the necessary steps for this refactoring:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我将列出这次重构的必要步骤：
- en: 'Inside the `root` project folder:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`root`项目文件夹内：
- en: Create a new folder called `server`
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`server`的新文件夹
- en: 'Inside the `server` folder:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`server`文件夹内：
- en: Create a new folder called `config`
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`config`的新文件夹
- en: Create a new folder called `routes`
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`routes`的新文件夹
- en: Create a new folder called `views`.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`views`的新文件夹。
- en: Do not worry about the `config` folder at this point; we will insert its contents
    later.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时不要担心`config`文件夹；我们稍后会插入它的内容。
- en: Now we need to move the `error.js` and `index.js` files from the `chapter-01/views`
    folder to the `chapter-01/server/views` folder.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要将`chapter-01/views`文件夹中的`error.js`和`index.js`文件移动到`chapter-01/server/views`文件夹中。
- en: Move the `index.js` and `user.js` files from the `chapter-01/routes` folder
    to the `chapter-01/server/routes` folder.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`chapter-01/routes`文件夹中的`index.js`和`user.js`文件移动到`chapter-01/server/routes`文件夹中。
- en: A very simple change here, but during the development process, it will be very
    useful to better organize all the files of our application.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里只有一个非常简单的更改，但在开发过程中，更好地组织我们应用程序的所有文件将非常有用。
- en: 'We still need to change the path to this folder in the main application file,
    `app.js`. Open the `app.js` file from the project root folder and change the following
    highlighted lines:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍然需要在主应用程序文件`app.js`中更改到这个文件夹的路径。打开项目根文件夹中的`app.js`文件，并更改以下突出显示的行：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Before we proceed, let''s change the welcome message from the `routes/index.js`
    file to the following highlighted code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们将`routes/index.js`文件中的欢迎消息更改为以下突出显示的代码：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To run the project and see the application in your browser, follow these steps:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行项目并在浏览器中查看应用程序，请按照以下步骤操作：
- en: 'Type the following command in your terminal/shell:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的终端/Shell中输入以下命令：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Open your browser at `http://localhost:3000`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的浏览器中打开`http://localhost:3000`。
- en: The output in your browser will be as follows:![Changing the application's structure](img/image_01_002.jpg)
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的浏览器中的输出将如下所示：![更改应用程序的结构](img/image_01_002.jpg)
- en: Application home screen
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序主屏幕
- en: 'Now we can delete the folders and files from:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以删除以下文件夹和文件：
- en: '`chapter-01/routes`:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chapter-01/routes`：'
- en: '`index.js`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.js`'
- en: '`user.js`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user.js`'
- en: '`chapter-01/views`:'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chapter-01/views`：'
- en: '` error.js`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`error.js`'
- en: '`index.js`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.js`'
- en: Changing the default behavior to start the application
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改默认行为以启动应用程序
- en: 'As mentioned earlier, we will change the default initialization process of
    our application. To do this task, we will edit the `app.js` file and add a few
    lines of code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将更改应用程序的默认初始化过程。为了完成这个任务，我们将编辑`app.js`文件并添加几行代码：
- en: 'Open `app.js` and add the following code after the `app.use(''/users'', users);`
    function:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`app.js`，并在`app.use('/users', users);`函数之后添加以下代码：
- en: '[PRE15]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: It's a simple `middleware` to intercept *404* errors.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的拦截*404*错误的`middleware`。
- en: 'Now add the following code after the `module.exports = app;` function:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在`module.exports = app;`函数之后添加以下代码：
- en: '[PRE16]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Open the `package.js` file at the root project folder and change the following
    code:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开项目根目录下的`package.js`文件，并更改以下代码：
- en: '[PRE17]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The debug command is still available if necessary: `DEBUG=chapter-01:* npm
    start`.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，仍然可以使用调试命令：`DEBUG=chapter-01:* npm start`。
- en: The `package.json` file is a file of extreme importance in Node.js applications.
    It is possible to store all kinds of information for the project, such as dependencies,
    project description, authors, version, and many more.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`package.json`文件是Node.js应用程序中极其重要的文件。它可以存储项目的各种信息，如依赖关系、项目描述、作者、版本等等。'
- en: Furthermore, it is possible to set up scripts to minify, concatenate, test,
    build and deploy an application easily. We'll see more on how to create scripts
    in [Chapter 9](ch09.html "Chapter 9.  Building a Frontend Process with Node.js
    and NPM"), *Building a Frontend Process with Node.js and NPM*.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，还可以设置脚本来轻松地进行缩小、连接、测试、构建和部署应用程序。我们将在[第9章](ch09.html "第9章。使用Node.js和NPM构建前端流程")中看到如何创建脚本，*使用Node.js和NPM构建前端流程*。
- en: 'Let''s test the result; open your terminal/shell and type the following command:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们测试一下结果；打开你的终端/Shell并输入以下命令：
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We will see the same output on the console:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在控制台上看到相同的输出：
- en: '[PRE19]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Restructuring the views folder using partials
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用部分文件重构视图文件夹
- en: 'Now we will make a major change to the structure of directories in the `views`
    folder: we will add an important **Embedded JavaScript** (**EJS**) resource for
    the creation of reusable files in our templates.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将对`views`文件夹中的目录结构进行重大更改：我们将添加一个重要的**嵌入式JavaScript**（**EJS**）资源，用于在我们的模板中创建可重用的文件。
- en: They are known as partial files and will be included in our application using
    the `<% = include %>` tag.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 它们被称为部分文件，并将使用`<% = include %>`标签包含在我们的应用程序中。
- en: Tip
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can find more information about **EJS** on the official project page at:
    [http://ejs.co/](http://ejs.co/)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方项目页面[http://ejs.co/](http://ejs.co/)上找到有关**EJS**的更多信息。
- en: 'Inside the `views` folder, we will create two more folders, called `partials`
    and `pages`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在`views`文件夹中，我们将创建两个名为`partials`和`pages`的文件夹：
- en: 'The `pages` folder will be as follows at this point:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时`pages`文件夹将如下所示：
- en: Now let's move the files that were in the `views` folder to the `pages` folder.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们将在`views`文件夹中的文件移动到`pages`文件夹中。
- en: Create a `pages` folder inside the `views` folder.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`views`文件夹内创建一个`pages`文件夹。
- en: Create a `partials` folder inside the `views` folder.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`views`文件夹内创建一个`partials`文件夹。
- en: '`server/`'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`server/`'
- en: '`pages/`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pages/`'
- en: '`index.ejs`'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.ejs`'
- en: '`error.ejs`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`error.ejs`'
- en: '`partials/`'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`partials/`'
- en: 'Now we need to create the files that will be included in all templates. Note
    that we have just two templates: `index.js` and `error.js`.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要创建将包含在所有模板中的文件。请注意，我们只有两个模板：`index.js`和`error.js`。
- en: 'Create a file called `stylesheet.ejs` and add the following code:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`stylesheet.ejs`的文件，并添加以下代码：
- en: '[PRE20]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tip
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We will use the latest version of the **Twitter Bootstrap** UI framework, which
    at the time this book is being written is in version *4.0.0-alpha*.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用最新版本的**Twitter Bootstrap** UI框架，目前本书编写时的版本是*4.0.0-alpha*。
- en: We are using a **Content** **Delivery** **Network** (**CDN**) for *CSS* and
    *JS* files.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在使用**内容传送网络**（**CDN**）来获取*CSS*和*JS*文件。
- en: 'Create a file called `javascript.ejs` and add the following code to it:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`javascript.ejs`的文件，并添加以下代码：
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Then create a file called `header.ejs` and add the following code:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建一个名为`header.ejs`的文件，并添加以下代码：
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create a file called `footer.ejs` and add this code:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`footer.ejs`的文件，并添加以下代码：
- en: '[PRE23]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let''s adjust the path for the view templates in our `app.js` file; add the
    following lines of code:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在`app.js`文件中调整视图模板的路径；添加以下代码：
- en: '[PRE24]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Tip
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that we only added the `pages` folder path that already existed.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们只添加了已经存在的`pages`文件夹路径。
- en: 'Now we will replace the code in `pages/index.ejs` with the following code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将用以下代码替换`pages/index.ejs`中的代码：
- en: '[PRE25]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let''s do the same for the error view file at `pages/error.ejs`:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们对`pages/error.ejs`中的错误视图文件做同样的操作：
- en: '[PRE26]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We currently have the following structure in our `server` folder:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前在`server`文件夹中有以下结构：
- en: '`server/`'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`server/`'
- en: '`pages/`'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pages/`'
- en: '`index.ejs`'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.ejs`'
- en: '`error.ejs`'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`error.ejs`'
- en: '`partials/`'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`partials/`'
- en: '`footer.ejs`'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`footer.ejs`'
- en: '`header.ejs`'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header.ejs`'
- en: '`javascript.ejs`'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`javascript.ejs`'
- en: '`stylesheet.ejs2`'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stylesheet.ejs2`'
- en: Adding templates for login, sign-up, and profile
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为登录、注册和个人资料添加模板
- en: Now we have a solid basis to move forward with the project. At this time, we
    will add some template files for login, sign-up, and profile screens.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个坚实的基础，可以继续进行项目。此时，我们将为登录、注册和个人资料界面添加一些模板文件。
- en: 'The expected result for these pages will be as shown in the following screenshot:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这些页面的预期结果将如下截图所示：
- en: '![Adding templates for login, sign-up, and profile](img/image_01_003.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![为登录、注册和个人资料添加模板](img/image_01_003.jpg)'
- en: Login screen
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 登录界面
- en: '![Adding templates for login, sign-up, and profile](img/image_01_004.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![为登录、注册和个人资料添加模板](img/image_01_004.jpg)'
- en: Sign-up screen
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 注册界面
- en: '![Adding templates for login, sign-up, and profile](img/image_01_005.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![为登录、注册和个人资料添加模板](img/image_01_005.jpg)'
- en: Profile screen
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 个人资料界面
- en: 'Now let''s create the login template. Create a new file called `login.ejs`
    in the `views` folder and place the following code:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们创建登录模板。在`views`文件夹中创建一个名为`login.ejs`的新文件，并放入以下代码：
- en: '[PRE27]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Add the login route to `routes/index.js` after the index route:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`routes/index.js`中的索引路由后添加登录路由：
- en: '[PRE28]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Note
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the template, we are making use of the `connect-flash` middleware to display
    error messages. Later, we will show how to install this component; don't worry
    right now.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在模板中，我们正在使用`connect-flash`中间件来显示错误消息。稍后，我们将展示如何安装这个组件；现在不用担心。
- en: Let's add the `signup` template to the `views/pages` folder.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将`signup`模板添加到`views/pages`文件夹中。
- en: 'Create a new file in `views/pages` and save as `signup.ejs`; then add the following
    code:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`views/pages`中创建一个名为`signup.ejs`的新文件，并添加以下代码：
- en: '[PRE29]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now we need to add the route for the sign-up view. Open `routes/index.js` and
    add the following code right after `login route`:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要为注册视图添加路由。打开`routes/index.js`并在`登录路由`之后添加以下代码：
- en: '[PRE30]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Next, we will add the template to the `profile` page and the route to this
    page. Create a file called `profile.ejs` inside the `view/pages` folder and add
    this code:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在`profile`页面添加模板和路由到此页面。在`view/pages`文件夹内创建一个名为`profile.ejs`的文件，并添加以下代码：
- en: '[PRE31]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now we need to add the route for the profile view; open `routes/index.js` and
    add the following code right after the `signup` route:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要为profile视图添加路由；打开`routes/index.js`并在`signup`路由之后添加以下代码：
- en: '[PRE32]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Tip
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We are using another middleware called `gravatar`; later, we will show how to
    install it.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用另一个名为`gravatar`的中间件；稍后我们将展示如何安装它。
- en: Installing additional middleware
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装额外的中间件
- en: As you can see in the previous sections, we used some middleware to display
    messages and the user icon using the gravatar. In this section, we will see how
    to install some very important modules for our application.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的部分中所看到的，我们使用了一些中间件来显示消息和使用gravatar显示用户图标。在本节中，我们将看到如何安装一些非常重要的模块用于我们的应用程序。
- en: Since we created templates for the `signin`, `signup`, and `profile` pages,
    we will need to store the users with login and password.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们为`signin`、`signup`和`profile`页面创建了模板，我们需要存储具有登录和密码的用户。
- en: 'These are the middleware that we will use for this task, with the definition
    for each one:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们将用于此任务的中间件，每个中间件的定义如下：
- en: '| Component | Description | More details |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 组件 | 描述 | 更多细节 |'
- en: '| `connect-flash` | User-friendly messages | [https://www.npmjs.com/package/connect-flash](https://www.npmjs.com/package/connect-flash)
    |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `connect-flash` | 用户友好的消息 | [https://www.npmjs.com/package/connect-flash](https://www.npmjs.com/package/connect-flash)
    |'
- en: '| `connect-mongo` | Drive to connect with MongoDB | [https://www.npmjs.com/package/connect-mongo](https://www.npmjs.com/package/connect-mongo)
    |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `connect-mongo` | 用于连接MongoDB的驱动程序 | [https://www.npmjs.com/package/connect-mongo](https://www.npmjs.com/package/connect-mongo)
    |'
- en: '| `express-session` | Store user sessions in the DB | [https://www.npmjs.com/package/express-session](https://www.npmjs.com/package/express-session)
    |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `express-session` | 在数据库中存储用户会话 | [https://www.npmjs.com/package/express-session](https://www.npmjs.com/package/express-session)
    |'
- en: '| `Gravatar` | Show a random user picture | [https://www.npmjs.com/package/gravatar](https://www.npmjs.com/package/gravatar)
    |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `Gravatar` | 显示随机用户图片 | [https://www.npmjs.com/package/gravatar](https://www.npmjs.com/package/gravatar)
    |'
- en: '| `Passport` | Authentication middleware | [https://www.npmjs.com/package/passport](https://www.npmjs.com/package/passport)
    |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `Passport` | 身份验证中间件 | [https://www.npmjs.com/package/passport](https://www.npmjs.com/package/passport)
    |'
- en: '| `passport-local` | Local user/password authentication | [https://www.npmjs.com/package/passport-local](https://www.npmjs.com/package/passport-local)
    |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `passport-local` | 本地用户/密码验证 | [https://www.npmjs.com/package/passport-local](https://www.npmjs.com/package/passport-local)
    |'
- en: 'Open your terminal/shell and type:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 打开您的终端/Shell并键入：
- en: '[PRE33]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As we can see, we will use MongoDB to store user data; you can find more information
    about MongoDB at [https://www.mongodb.org/](https://www.mongodb.org/), and the
    installation process at [https://docs.mongodb.org/manual/installation/](https://docs.mongodb.org/manual/installation/)
    . We assume that you already have MongoDB installed on your machine and it is
    running.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，我们将使用MongoDB来存储用户数据；您可以在[https://www.mongodb.org/](https://www.mongodb.org/)找到有关MongoDB的更多信息，并在[https://docs.mongodb.org/manual/installation/](https://docs.mongodb.org/manual/installation/)找到安装过程。我们假设您已经在您的机器上安装了MongoDB并且它正在运行。
- en: Refactoring the app.js file with the new middleware
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用新中间件重构app.js文件
- en: At this time, we have to do a major restructuring of the `app.js` file to include
    the new middleware that we will use.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们需要对`app.js`文件进行重大重构，以包含我们将使用的新中间件。
- en: 'We will show you step by step how to include each middleware and at the end,
    we will see the complete file:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步向您展示如何包含每个中间件，最后我们将看到完整的文件：
- en: 'Open `app.js` and add the following lines before `var app = express()`:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`app.js`并在`var app = express()`之前添加以下行：
- en: '[PRE34]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This is a simple import process.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的导入过程。
- en: 'Add the following lines after `app.set(''view engine'', ''ejs'')`:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app.set('view engine', 'ejs')`之后添加以下行：
- en: '[PRE35]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Note that we are using a `config.js` file in the first line; later we will create
    this file.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，我们在第一行使用了一个`config.js`文件；稍后我们将创建这个文件。
- en: 'Add the following lines after `app.use(express.static(path.join(__dirname,
    ''public'')))`:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app.use(express.static(path.join(__dirname, 'public')))`之后添加以下行：
- en: '[PRE36]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Adding config and passport files
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加配置和护照文件
- en: 'As mentioned earlier, let''s create a `config` file:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，让我们创建一个`config`文件：
- en: 'Inside `server/config`, create a file called `config.js` and place the following
    code in it:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`server/config`内创建一个名为`config.js`的文件，并将以下代码放入其中：
- en: '[PRE37]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Create a new file on `server/config` and name it `passport.js`. Add the following
    content:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`server/config`上创建一个新文件并命名为`passport.js`。添加以下内容：
- en: '[PRE38]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Note that in the fourth line, we are importing a file called `models`; we will
    create this file using Mongoose.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在第四行，我们正在导入一个名为`models`的文件；我们将使用Mongoose创建这个文件。
- en: Creating a models folder and adding a user schema
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个models文件夹并添加一个用户模式
- en: 'Create a models folder inside `server/` and add the following code:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在`server/`内创建一个models文件夹，并添加以下代码：
- en: '[PRE39]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Protecting routes
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护路由
- en: 'At this point, we have enough code to configure secure access to our application.
    However, we still need to add a few more lines to the login and sign-up forms
    to make them work properly:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经有足够的代码来配置对我们应用程序的安全访问。但是，我们仍然需要添加一些行到登录和注册表单中，以使它们正常工作：
- en: 'Open `server/routes/index.js` and add the following lines after the `login
    GET` route:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`server/routes/index.js`并在`login GET`路由之后添加以下行：
- en: '[PRE40]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Add these lines after the `signup GET` route:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`signup GET`路由之后添加这些行：
- en: '[PRE41]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now let''s add a simple function to check whether the user is logged in; at
    the end of `server/routes/index.js`, add the following code:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们添加一个简单的函数来检查用户是否已登录；在`server/routes/index.js`的末尾添加以下代码：
- en: '[PRE42]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Let''s add a simple route to a logout function and add the following code after
    the `isLoggedIn()` function:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加一个简单的路由来检查用户是否已登录，并在`isLoggedIn()`函数之后添加以下代码：
- en: '[PRE43]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The last change is to add `isloggedin()` as a second parameter to the profile
    route. Add the following highlighted code:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后的更改是将`isloggedin()`作为profile路由的第二个参数。添加以下突出显示的代码：
- en: '[PRE44]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The final `index.js` file will look like this:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的`index.js`文件将如下所示：
- en: '[PRE45]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: We have almost everything set to finalize the application, but we still need
    to create a page for comments.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎已经设置好了应用程序的最终，但我们仍然需要创建一个评论页面。
- en: Creating the controllers folder
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建控制器文件夹
- en: 'Instead of using the `routes` folder to create the route and functions of the
    comments file, we will use another format and create the `controllers` folder,
    where we can separate the route and the controller function, thus having a better
    modularization:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`controllers`文件夹来创建评论文件的路由和函数，而不是使用`routes`文件夹，这样我们可以分离路由和控制器函数，从而实现更好的模块化：
- en: Create a folder called `controllers`.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`controllers`的文件夹。
- en: 'Create a file called `comments.js` and add the following code:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`comments.js`的文件，并添加以下代码：
- en: '[PRE46]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Let''s import the controllers on the `app.js` file; add the following lines
    after `var users = require(''./server/routes/users'')`:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在`app.js`文件中导入控制器；在`var users = require('./server/routes/users')`之后添加以下行：
- en: '[PRE47]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now add the comments route after `app.use(''/users'', users)`:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在`app.use('/users', users)`之后添加评论路由：
- en: '[PRE48]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Create a file called `comments.ejs` at `server/pages` and add the following
    lines:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`server/pages`下创建一个名为`comments.ejs`的文件，并添加以下行：
- en: '[PRE49]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Note that we are using a simple Modal component from Twitter-bootstrap for the
    addition of comments, as shown in the following screenshot:![Creating the controllers
    folder](img/image_01_006.jpg)
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，我们使用了Twitter-bootstrap的简单Modal组件来添加评论，如下截图所示：![创建控制器文件夹](img/image_01_006.jpg)
- en: Model for the create comments screen
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 创建评论屏幕的模型
- en: 'The last step is to create a model for the comments; let''s create a file named
    `comments.js` at `server/models/` and add the following code:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是为评论创建一个模型；让我们在`server/models/`下创建一个名为`comments.js`的文件，并添加以下代码：
- en: '[PRE50]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Running the application and adding comments
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行应用程序并添加评论
- en: 'Now it''s time to test whether everything is working properly:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候测试一切是否正常工作了：
- en: 'Open terminal/shell at the root project folder and type the following command:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目根目录打开终端/Shell，并输入以下命令：
- en: '[PRE51]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Check your browser at: `http://localhost:3000`.'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中检查：`http://localhost:3000`。
- en: Go to `http://localhost:3000/signup` and create a user called `John Doe` with
    the e-mail ID as `john@doe.com` and password as `123456`.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`http://localhost:3000/signup`，创建一个名为`John Doe`的用户，邮箱为`john@doe.com`，密码为`123456`。
- en: 'Go to `http://localhost:3000/comments`, click on the **create comment** button
    and add the following content:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`http://localhost:3000/comments`，点击**创建评论**按钮，并添加以下内容：
- en: '[PRE52]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The following screenshot illustrates the final result:![Running the application
    and adding comments](img/image_01_007.jpg)
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下截图展示了最终结果：![运行应用程序并添加评论](img/image_01_007.jpg)
- en: Comments screen
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 评论屏幕
- en: Checking the error messages
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查错误消息
- en: Now let's check the flash-connect messages. Go to `http://localhost:3000/login`
    and try to log in as a user; we will use `martin@tech.com` with password `123`.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们检查flash-connect消息。转到`http://localhost:3000/login`，尝试以用户身份登录；我们将使用`martin@tech.com`和密码`123`。
- en: 'The following screenshot illustrates the result:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了结果：
- en: '![Checking the error messages](img/image_01_008.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![检查错误消息](img/image_01_008.jpg)'
- en: Error message on the login screen
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 登录屏幕上的错误消息
- en: 'Now we try to sign up with an already registered user. Go to `http://localhost:3000/signup`
    and place the following content:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们尝试使用已注册的用户进行注册。转到`http://localhost:3000/signup`，并放置以下内容：
- en: '[PRE53]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'This screenshot illustrates the result:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了结果：
- en: '![Checking the error messages](img/image_01_009.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![检查错误消息](img/image_01_009.jpg)'
- en: Error message on signup screen
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 注册屏幕上的错误消息
- en: Summary
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed how to create MVC applications using Node.js and
    the express framework, with an application fully on the server side-something
    very similar to applications created with the **Rails** or **Django** framework.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们讨论了如何使用Node.js和express框架创建MVC应用程序，这是一个完全在服务器端的应用程序，与使用Rails或Django框架创建的应用程序非常相似。
- en: We also built safe routes and a very robust authentication with session control,
    storage of session cookies, and encrypted passwords.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还建立了安全路由和非常健壮的身份验证，包括会话控制、会话cookie存储和加密密码。
- en: We used MongoDB to store the data of users and comments.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用MongoDB来存储用户和评论的数据。
- en: In the next chapter, we will see how to use another database system with express
    and Node.js.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何在express和Node.js中使用另一个数据库系统。
