- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Creating the Example Project
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建示例项目
- en: In this chapter, I create the example project that is used throughout this part
    of the book, using the features described in *Part 1*. In later chapters, I’ll
    start to add new features, but this chapter is all about building the foundation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将使用*第1部分*中描述的功能创建整个本书本部分使用的示例项目。在后面的章节中，我将开始添加新功能，但本章完全是关于构建基础。
- en: '**Tip**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: You can download the example project for this chapter – and for all the other
    chapters in this book – from [https://github.com/PacktPublishing/Mastering-Node.js-Web-Development](https://github.com/PacktPublishing/Mastering-Node.js-Web-Development).
    See *Chapter 1* for how to get help if you have problems running the examples.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://github.com/PacktPublishing/Mastering-Node.js-Web-Development](https://github.com/PacktPublishing/Mastering-Node.js-Web-Development)下载本章的示例项目——以及本书中所有其他章节的示例项目。有关运行示例时遇到问题的帮助，请参阅*第1章*。
- en: Understanding the project
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解项目
- en: The example project will use the features and packages introduced in *Part 1*
    of this book. The backend server will be written in TypeScript and the code files
    will be in the `src/server` folder. The TypeScript compiler will write JavaScript
    files to the `dist/server` folder, where they will be executed by the Node.js
    runtime, which will listen for HTTP requests on port `5000`, as shown in *Figure
    9.1*.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 示例项目将使用本书*第1部分*中介绍的功能和包。后端服务器将使用TypeScript编写，代码文件将位于`src/server`文件夹中。TypeScript编译器将JavaScript文件写入`dist/server`文件夹，在那里它们将由Node.js运行时执行，该运行时将监听端口`5000`上的HTTP请求，如图*图9.1*所示。
- en: '![](img/B21959_09_01.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_09_01.png)'
- en: 'Figure 9.1: The backend server'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1：后端服务器
- en: The client-side part of the application will be simpler than the backend and
    used only to send requests and process responses to demonstrate server-side features.
    The client-side code will be written in JavaScript and packaged into a bundle
    using webpack. The bundle will be served by the webpack development server, which
    will listen for HTTP requests on port 5100, as shown in *Figure 9.2*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的客户端部分将比后端简单，仅用于发送请求并处理响应以演示服务器端功能。客户端代码将使用JavaScript编写，并使用webpack打包。该捆绑包将由webpack开发服务器提供，该服务器将监听端口5100上的HTTP请求，如图*图9.2*所示。
- en: '![](img/B21959_09_02.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_09_02.png)'
- en: 'Figure 9.2: Adding the client-side part of the project'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.2：添加项目的客户端部分
- en: The browser will make requests to the backend server on port 5000\. The Express
    router will be used to match requests to handler functions, starting with a single
    `/test` URL just to get started. Requests for static content, such as HTML files
    and images, will be served from the `static` folder, using the Express `static`
    middleware component.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器将向端口5000的后端服务器发出请求。Express路由器将用于将请求匹配到处理函数，从单个`/test` URL开始。对静态内容（如HTML文件和图片）的请求将从`static`文件夹提供，使用Express的`static`中间件组件。
- en: All other requests will be forwarded to the webpack server, which will allow
    the client-side bundle to be requested and allow the live reload feature to work,
    as shown in *Figure 9.3*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所有其他请求都将转发到webpack服务器，这将允许请求客户端捆绑包并允许实时重新加载功能工作，如图*图9.3*所示。
- en: '![](img/B21959_09_03.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_09_03.png)'
- en: 'Figure 9.3: Routing requests'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.3：路由请求
- en: Creating the project
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目
- en: Open a new command prompt, navigate to a convenient location, and create a folder
    named `part2app`. Navigate to the `part2app` folder and run the command shown
    in *Listing 9.1* to initialize the project and create the `package.json` file.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的命令提示符，导航到一个方便的位置，并创建一个名为`part2app`的文件夹。导航到`part2app`文件夹，并运行*列表9.1*中显示的命令以初始化项目并创建`package.json`文件。
- en: 'Listing 9.1: Initializing the project'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 列表9.1：初始化项目
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the sections that follow, I go through the process of creating the different
    parts of the project, starting with the backend server. I start by installing
    the JavaScript packages each part of the application requires, all of which were
    introduced in *Part 1* of this book.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我将介绍创建项目不同部分的过程，从后端服务器开始。我首先安装每个应用程序部分所需的JavaScript包，所有这些包都在本书*第1部分*中介绍过。
- en: Installing the application packages
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装应用程序包
- en: The application packages are those whose features are incorporated into either
    the backend server or the client-side code. *Table 9.1* describes the application
    packages used in this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序包是指其功能集成到后端服务器或客户端代码中的那些。*表9.1*描述了本章中使用的应用程序包。
- en: 'Table 9.1: The application packages used in this chapter'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 表 9.1：本章中使用的应用包
- en: '| Name | Description |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '|'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '| This package contains CSS styles and JavaScript code to style the client-side
    content. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含用于样式化客户端内容的 CSS 样式和 JavaScript 代码。|'
- en: '|'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '| This package contains enhancements to the Node.js API to simplify HTTP request
    handling. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含简化 HTTP 请求处理的 Node.js API 的增强功能。|'
- en: '|'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '| This package sets security-related headers in HTTP responses. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 此包在 HTTP 响应中设置与安全相关的头信息。|'
- en: '|'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '| This package forwards HTTP requests and will be used to connect the backend
    server to the webpack development server. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 此包转发 HTTP 请求，并将用于将后端服务器连接到 webpack 开发服务器。|'
- en: To install these packages, run the commands shown in *Listing 9.2* in the `part2app`
    folder.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这些包，请在 `part2app` 文件夹中运行 *列表 9.2* 中显示的命令。
- en: 'Listing 9.2: Installing the application packages'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 9.2：安装应用包
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Installing the development tool packages
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装开发工具包
- en: The development tool packages provide features that are used during development
    but are not included when the application is deployed. *Table 9.2* describes the
    tool packages used in this chapter.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 开发工具包提供在开发期间使用的功能，但在应用部署时不会被包含。*表 9.2* 描述了本章中使用的工具包。
- en: 'Table 9.2: The development tool packages used in this chapter'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 表 9.2：本章中使用的开发工具包
- en: '| Name | Description |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '|'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '| This file contains the TypeScript compiler configuration settings for working
    with Node.js. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 此文件包含与 Node.js 一起工作的 TypeScript 编译器配置设置。|'
- en: '|'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '| This package allows multiple commands to be started at once. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 此包允许同时启动多个命令。|'
- en: '|'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '| This package contains the watcher for TypeScript files. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 TypeScript 文件的监视器。|'
- en: '|'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '| This package contains the TypeScript compiler. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 TypeScript 编译器。|'
- en: '|'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '| This package contains the webpack bundler. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 webpack 打包器。|'
- en: '|'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '| This package contains the command-line interface for webpack. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 webpack 的命令行界面。|'
- en: '|'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '| This package contains the webpack development HTTP server. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 webpack 开发 HTTP 服务器。|'
- en: To install these packages, run the commands shown in *Listing 9.3* in the `part2app`
    folder.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这些包，请在 `part2app` 文件夹中运行 *列表 9.3* 中显示的命令。
- en: 'Listing 9.3: Installing the development tool packages'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 9.3：安装开发工具包
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Installing the type packages
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装类型包
- en: The final packages contain descriptions of the types used by two of the development
    packages, which makes them easier to use with TypeScript, as described in *Table
    9.3*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 最终包包含两个开发包使用的类型描述，这使得它们在使用 TypeScript 时更容易使用，如 *表 9.3* 所述。
- en: 'Table 9.3: The type description packages'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 表 9.3：类型描述包
- en: '| Name | Description |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '|'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '| This package contains the descriptions of the Express API |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 Express API 的描述 |'
- en: '|'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '| This package contains the descriptions of the Node.js API |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 此包包含 Node.js API 的描述 |'
- en: To install these packages, run the commands shown in *Listing 9.4* in the `part2app`
    folder.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装这些包，请在 `part2app` 文件夹中运行 *列表 9.4* 中显示的命令。
- en: 'Listing 9.4: Installing the type packages'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 9.4：安装类型包
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Creating the configuration files
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建配置文件
- en: To create the configuration for the TypeScript compiler, add a file named `tsconfig.json`
    to the `part2app` folder with the content shown in *Listing 9.5*.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 TypeScript 编译器的配置，请将一个名为 `tsconfig.json` 的文件添加到 `part2app` 文件夹中，其内容如 *列表
    9.5* 所示。
- en: Your code editor may report errors with the `tsconfig.json` file, but these
    will be resolved when you start the development tools in *Listing 9.12*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您的代码编辑器可能会报告 `tsconfig.json` 文件错误，但这些错误将在您启动 *列表 9.12* 中的开发工具时得到解决。
- en: 'Listing 9.5: The contents of the tsconfig.json file in the part2app folder'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 9.5：part2app 文件夹中 tsconfig.json 文件的内容
- en: '[PRE17]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This file builds on the configuration contained in the `@tsconfig/node20` package
    added to the project in *Listing 9.4*. The `rootDir` and `include` settings are
    used to tell the compiler to process files in the `src/server` folder. The `outDir`
    setting tells the compiler to write the processed JavaScript files into the `dist/server`
    folder.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件基于 *列表 9.4* 中添加到项目中的 `@tsconfig/node20` 包中的配置。`rootDir` 和 `include` 设置用于告诉编译器处理
    `src/server` 文件夹中的文件。`outDir` 设置告诉编译器将处理后的 JavaScript 文件写入 `dist/server` 文件夹。
- en: To create the configuration file for webpack, add a file named `webpack.config.mjs`
    to the `part2app` folder with the content shown in *Listing 9.6*.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 webpack 的配置文件，请将一个名为 `webpack.config.mjs` 的文件添加到 `part2app` 文件夹中，其内容如 *列表
    9.6* 所示。
- en: 'Listing 9.6: The contents of the webpack.config.mjs file in the part2app folder'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.6*：part2app文件夹中webpack.config.mjs文件的内容'
- en: '[PRE18]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This configuration file tells webpack to bundle the JavaScript files it finds
    in the `src/client` folder and to write the bundle that is created to the `dist/client`
    folder. (Although, as noted in *Part 1*, webpack will keep the bundle file in
    memory during development and only write the file to disk when the application
    is being prepared for deployment.)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置文件告诉webpack将它在`src/client`文件夹中找到的JavaScript文件打包，并将创建的包写入`dist/client`文件夹。（尽管，如*第1部分*中所述，webpack将在开发期间将包文件保留在内存中，并且只有在准备部署应用程序时才会将文件写入磁盘。）
- en: To define the commands that will be used to start the development tools, add
    the setting shown in *Listing 9.7* to the `package.json` file.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了定义启动开发工具将使用的命令，请将*清单9.7*中显示的设置添加到`package.json`文件中。
- en: Listing 9.7\. Defining scripts in the package.json file in the part2app folder
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.7*：part2app文件夹中package.json文件中定义的脚本'
- en: '[PRE19]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `server` command uses the `tsc-watch` package to compile the backend TypeScript
    code and execute the JavaScript that is produced. The `client` command starts
    the `webpack` development HTTP server. The `start` command uses the `npm-run-all`
    command so that both the `client` and `server` commands can be started together.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`server`命令使用`tsc-watch`包编译后端TypeScript代码并执行生成的JavaScript。`client`命令启动`webpack`开发HTTP服务器。`start`命令使用`npm-run-all`命令，以便可以同时启动`client`和`server`命令。'
- en: Creating the backend server
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建后端服务器
- en: Create the `src/server` folder and add to it a file named `server.ts` with the
    content shown in *Listing 9.8*.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`src/server`文件夹，并向其中添加一个名为`server.ts`的文件，其内容如*清单9.8*所示。
- en: 'Listing 9.8: The contents of the server.ts file in the src/server folder'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.8*：src/server文件夹中server.ts文件的内容'
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The code creates an HTTP server that listens for requests on port 5000\. The
    Express package is used to decode JSON request bodies, serve static content, and
    forward unhandled requests to the webpack HTTP server.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码创建了一个监听5000端口的HTTP服务器。Express包用于解码JSON请求体、提供静态内容并将未处理请求转发到webpack HTTP服务器。
- en: The Express router is used to match HTTP POST requests sent to the `/test` URL.
    To create the handler, add a file named `testHandler.ts` to the `src/server` folder
    with the content shown in *Listing 9.9*.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Express路由器用于匹配发送到`/test` URL的HTTP POST请求。为了创建处理器，请将一个名为`testHandler.ts`的文件添加到`src/server`文件夹中，其内容如*清单9.9*所示。
- en: 'Listing 9.9: The contents of the testHandler.ts file in the src/server folder'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.9*：src/server文件夹中testHandler.ts文件的内容'
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The handler sets the `Content-Type` header of the response and writes the request
    body to the response, which has the effect of echoing the data sent by the client.
    In *Part 1*, I used the `pipe` method to achieve a similar effect, but that won’t
    work in this example because the Express JSON middleware will read the request
    body and decode the JSON data it contains into a JavaScript object, which means
    there is no data in the request stream to read. For this reason, I create the
    response using the `Request.body` property, which is where the object created
    by the JSON middleware can be found.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 处理器设置响应的`Content-Type`头，并将请求体写入响应，这相当于回显客户端发送的数据。在*第1部分*中，我使用了`pipe`方法来实现类似的效果，但在这个例子中不会起作用，因为Express
    JSON中间件将读取请求体并解码包含在其中的JSON数据到JavaScript对象，这意味着请求流中没有数据可读。因此，我使用`Request.body`属性创建响应，这是JSON中间件创建的对象可以找到的地方。
- en: Creating the HTML and client-side JavaScript code
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建HTML和客户端JavaScript代码
- en: To define the HTML document that will be delivered to the browser, create the
    `static` folder and add to it a file named `index.html` with the content shown
    in *Listing 9.10*.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为了定义将发送到浏览器的HTML文档，创建一个名为`static`的文件夹，并在其中添加一个名为`index.html`的文件，其内容如*清单9.10*所示。
- en: 'Listing 9.10: The contents of the index.html file in the static folder'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.10*：static文件夹中index.html文件的内容'
- en: '[PRE22]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This file contains a button that will be used to send HTTP requests to the backend
    server and a table that will be used to display details of the response. To create
    the JavaScript code that will respond to the button and send the request, add
    a file named `client.js` to the `src/client` folder with the content shown in
    *Listing 9.11*.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件包含一个按钮，用于向后端服务器发送HTTP请求，以及一个用于显示响应详细信息的表格。为了创建响应按钮并发送请求的JavaScript代码，请将一个名为`client.js`的文件添加到`src/client`文件夹中，其内容如*清单9.11*所示。
- en: 'Listing 9.11: The contents of the client.js file in the src/client folder'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单9.11*：src/client文件夹中client.js文件的内容'
- en: '[PRE23]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The JavaScript code in this file uses the APIs provided by the browser to send
    an HTTP POST request to the `/test` URL and display details of the response received
    from the backend server.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件中的 JavaScript 代码使用浏览器提供的 API 向 `/test` URL 发送 HTTP POST 请求，并显示从后端服务器收到的响应详情。
- en: Running the example application
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行示例应用程序
- en: All that remains is to make sure the example application works as expected.
    Run the command shown in *Listing 9.12* in the `part2app` folder to start the
    development tools.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的就是确保示例应用程序按预期工作。在 `part2app` 文件夹中运行 *列表 9.12* 中显示的命令以启动开发工具。
- en: 'Listing 9.12: Starting the development tools'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 9.12：启动开发工具
- en: '[PRE24]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Give the tools a moment to start up and then use a web browser to request `http://localhost:5000`.
    The browser will receive the HTML document defined in *Listing 9.10*, which contains
    a link to the bundle that is provided by webpack. Click the **Send Request** button
    and the client-side JavaScript will send an HTTP request to the backend server,
    producing the response shown in *Figure 9.4*.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 给工具一点启动时间，然后使用网页浏览器请求 `http://localhost:5000`。浏览器将接收到定义在 *列表 9.10* 中的 HTML 文档，其中包含由
    webpack 提供的包的链接。点击 **发送请求** 按钮，客户端 JavaScript 将向后端服务器发送 HTTP 请求，产生如图 *9.4* 所示的响应。
- en: '![](img/B21959_09_04.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21959_09_04.png)'
- en: 'Figure 9.4: Running the example application'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4：运行示例应用程序
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, I created the example project that will be used throughout
    this part of the book, using the packages and features described in *Part 1*.
    In the next chapter, I will describe the key features required for web applications,
    starting with using templates to generate HTML content.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我创建了将在本书的这一部分中使用的示例项目，使用了 *第 1 部分* 中描述的包和功能。在下一章中，我将描述构建 Web 应用程序所需的关键特性，从使用模板生成
    HTML 内容开始。
