- en: Chapter 2. Creating Basic Elements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 创建基本元素
- en: In the previous chapter, you learned about **Google Apps Script** (**GAS**)
    and how to create a script project. In this chapter, you will learn how to create
    a clickable button, a custom menu, a message box, a sidebar and dialogs, as well
    as how to debug your script. We will use Sheets for the first two tasks and Docs
    for all the other tasks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了关于**Google Apps Script**（**GAS**）以及如何创建脚本项目。在本章中，你将学习如何创建可点击按钮、自定义菜单、消息框、侧边栏和对话框，以及如何调试你的脚本。我们将使用Sheets来完成前两个任务，而其他所有任务将使用Docs。
- en: Creating a clickable button
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建可点击按钮
- en: 'In the previous chapter, you learned how to open the script editor in Google
    Sheets. For this task, open the script editor in a newly created or any existing
    Google Sheet and follow these steps:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了如何在Google Sheets中打开脚本编辑器。对于这个任务，在新建或任何现有Google Sheet中打开脚本编辑器，并按照以下步骤操作：
- en: Select cell *B3* or any other cell. Click on **Insert** and select **Drawing...**,
    as shown in the following screenshot:![Creating a clickable button](img/B05010_02_01.jpg)
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择单元格*B3*或任何其他单元格。点击**插入**并选择**绘图…**，如下面的截图所示：![创建可点击按钮](img/B05010_02_01.jpg)
- en: A drawing editor window will open. Click on the **Text box** icon and then click
    anywhere within the canvas area. Type `Click Me`. Resize the object to enclose
    the text only, as shown in the following screenshot:![Creating a clickable button](img/B05010_02_02.jpg)
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会打开一个绘图编辑器窗口。点击**文本框**图标，然后在画布区域内点击任意位置。输入`Click Me`。调整对象大小以仅包含文本，如下面的截图所示：![创建可点击按钮](img/B05010_02_02.jpg)
- en: Click on **Save & Close** to exit the drawing editor. Now, the **Click Me**
    image will be inserted into the active cell (*B3*), as shown in the following
    screenshot:![Creating a clickable button](img/B05010_02_03.jpg)
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并关闭**以退出绘图编辑器。现在，**点击我**图片将被插入到活动单元格（*B3*），如下面的截图所示：![创建可点击按钮](img/B05010_02_03.jpg)
- en: You can drag this image anywhere around the spreadsheet except in the menu bar.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以将此图片拖动到工作表中的任何位置，除了菜单栏。
- en: Tip
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In Google Sheets, images are not anchored to a particular cell, and they can
    be dragged or moved around.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Google Sheets中，图片不会锚定到特定的单元格，并且可以被拖动或移动。
- en: 'If you click on the image, a drop-down arrow on the top-right corner will be
    visible:'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你点击图片，右上角将出现一个下拉箭头：
- en: '![Creating a clickable button](img/B05010_02_04.jpg)'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建可点击按钮](img/B05010_02_04.jpg)'
- en: Click on the **Assign script…** menu item. A script assignment window will open.
    Type `greeting` or any other name you like, but remember the name as the same
    name will be used to create a function in the next steps. Click on **OK**:![Creating
    a clickable button](img/B05010_02_05.jpg)
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**分配脚本…**菜单项。一个脚本分配窗口将会打开。输入`greeting`或任何你喜欢的名字，但请记住这个名称，因为在下一步中将会使用相同的名称来创建一个函数。点击**确定**：![创建可点击按钮](img/B05010_02_05.jpg)
- en: 'Now open the script editor in the same spreadsheet. When you open the script
    editor, a project selector dialog will open. You can close it or select **Blank
    Project**. A default function, `myFunction`, will be there in the editor. Delete
    everything in the editor and insert the following code:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在同一个工作表中打开脚本编辑器。当你打开脚本编辑器时，一个项目选择对话框将会打开。你可以关闭它或选择**空白项目**。编辑器中将会有一个默认函数`myFunction`。删除编辑器中的所有内容，并插入以下代码：
- en: '[PRE0]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When you type `.` next to `Browser`, the code completion hint will open as
    shown:'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你在“浏览器”旁边输入“.”时，代码补全提示将会打开，如下所示：
- en: '![Creating a clickable button](img/B05010_02_06.jpg)'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建可点击按钮](img/B05010_02_06.jpg)'
- en: If you click on `msgBox(String title, String prompt, ButtonSet buttons):String`,
    then `msgBox(title, prompt, buttons)` will be inserted automatically.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你点击`msgBox(String title, String prompt, ButtonSet buttons):String`，那么`msgBox(title,
    prompt, buttons)`将会自动插入。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In addition to the code hint feature, you can use the auto-indent feature. Ensure
    that the **Indent** icon, on the left side of the **Save** icon, is pressed. Select
    the few lines of code you would like to indent, then press the *Tab* key on your
    keyboard. Now you can see that these lines of code indented automatically.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了代码提示功能外，你还可以使用自动缩进功能。确保在**保存**图标左侧的**缩进**图标被按下。选择你想要缩进的几行代码，然后按下键盘上的*Tab*键。现在你可以看到这些代码行已经自动缩进了。
- en: In this code, `Browser` denotes that you are calling the `Browser` class from
    the `Base` (or basic) script services. `msgBox` is the `Browser` class's method
    with three parameters. The names of the parameters are self-explanatory. The `title`
    parameter denotes the title of the message box, `prompt` denotes your message
    to the user, and `buttons` denotes what category or sets of buttons you would
    like to include in your message box.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此代码中，`Browser`表示您正在从`Base`（或基本）脚本服务中调用`Browser`类。`msgBox`是`Browser`类的具有三个参数的方法。参数的名称是自解释的。`title`参数表示消息框的标题，`prompt`表示您对用户的消息，而`buttons`表示您希望在消息框中包含的按钮类别或按钮集。
- en: 'Now edit or replace the code with the following:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在编辑或替换以下代码：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Click on the **Save** icon and enter a project name if asked. You have completed
    the coding of your `greeting` function.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**图标，如果需要，请输入项目名称。您已完成了`greeting`函数的编码。
- en: Now, activate the spreadsheet tab/window and click on your **Click Me** button.
    An authorization window will open and you need to click **Continue**. In the successive
    **Request for Permission** window, click on **Allow**, as shown in the following
    screenshot:![Creating a clickable button](img/B05010_02_07.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，激活电子表格标签/窗口，并点击您的**点击我**按钮。将打开一个授权窗口，您需要点击**继续**。在随后的**请求权限**窗口中，点击**允许**，如图所示：![创建可点击按钮](img/B05010_02_07.jpg)
- en: You only need to do this once for this particular scope. The scopes will be
    shown in the concerned permission dialog/window. In this script, the scope is
    **View and manage your spreadsheets in Google Drive**. Above the scope, you can
    see the title **Chapter 2 would like to:**, which means your script project (project
    name **Chapter 2**) or application would like to get your permission for that
    particular scope.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您只需为此特定范围执行此操作一次。范围将在相关的权限对话框/窗口中显示。在此脚本中，范围是**在Google Drive中查看和管理您的电子表格**。在范围上方，您可以看到标题**第2章希望：**，这意味着您的脚本项目（项目名称**第2章**）或应用程序希望为此特定范围获取您的权限。
- en: 'As soon as you click **Allow**, the permission dialog will close, and your
    actual greeting message box will open as shown here:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦您点击**允许**，权限对话框将关闭，您的实际问候消息框将如以下所示打开：
- en: '![Creating a clickable button](img/B05010_02_08.jpg)'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建可点击按钮](img/B05010_02_08.jpg)'
- en: Click **Ok** to close the message box. Whenever you click on your button, this
    message box will open.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**确定**关闭消息框。每次您点击按钮时，此消息框都会打开。
- en: Congratulations! You have created a clickable button and associated a GAS function
    with it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已创建了一个可点击的按钮，并将其与GAS函数关联。
- en: Showing toast when a button is clicked
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点击按钮时显示提示
- en: 'Toast appears as a popup window in the lower-right corner of the active spreadsheet
    with a title and message. To create a toast dialog, edit or replace the `greeting`
    function as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 提示作为带有标题和消息的弹出窗口出现在活动电子表格的右下角。要创建提示对话框，编辑或替换`greeting`函数如下：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now if you click the button, then a toast dialog will appear as shown in the
    following screenshot, and it disappears within 5 seconds (the default):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果您点击该按钮，则会出现一个类似于以下截图的提示对话框，并在5秒内消失（默认）：
- en: '![Showing toast when a button is clicked](img/B05010_02_09.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![点击按钮时显示提示](img/B05010_02_09.jpg)'
- en: You can include a third argument, that is, timeout seconds, in the `toast` method.
    This means how long the toast will be visible for. Put a negative number if you
    want it to show up forever. For example, `toast("Hello World!", "Greeting", -1)`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`toast`方法中包含第三个参数，即超时秒数。这意味着提示将可见多长时间。如果您想让它永远显示，请输入一个负数。例如，`toast("Hello
    World!", "Greeting", -1)`。
- en: Tip
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Toast only works in Sheets.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 提示仅适用于表格。
- en: Creating a custom menu
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义菜单
- en: You might be wondering whether you can execute the `greeting` function without
    the help of the button. The answer is yes. In the script editor, there is a **Run**
    menu. If you click on **Run** | **greeting**, then the `greeting` function will
    be executed and the message box will open.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想知道是否可以在不使用按钮的情况下执行`greeting`函数。答案是肯定的。在脚本编辑器中，有一个**运行**菜单。如果您点击**运行** |
    **greeting**，则`greeting`函数将被执行，并打开消息框。
- en: Creating a button for every function may not be feasible. Although you cannot
    alter or add items to the application's standard menu (except the **Add-ons**
    menu) such as **File**, **Edit**, **View**, and so on, you can add custom menus
    and menu items.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个函数创建按钮可能不可行。尽管您无法更改或添加到应用程序的标准菜单（除了**附加组件**菜单）中的项目（如**文件**、**编辑**、**查看**等），但您可以添加自定义菜单和菜单项。
- en: 'For this task, create a new Google Docs document or open an existing document.
    Open the script editor and type these two functions:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个任务，创建一个新的 Google Docs 文档或打开一个现有的文档。打开脚本编辑器并输入以下两个函数：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the first function, you are using the `DocumentApp` class, invoking the `getUi`
    method, and consecutively invoking the `createMenu`, `addItem`, and `addToUi`
    methods by method chaining. The second function should be familiar to you, as
    you created it in the previous task, but this time with the `DocumentApp` class
    and associated methods.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个函数中，你正在使用 `DocumentApp` 类，调用 `getUi` 方法，然后通过方法链连续调用 `createMenu`、`addItem`
    和 `addToUi` 方法。第二个函数你应该很熟悉，因为你已经在之前的任务中创建了它，但这次使用的是 `DocumentApp` 类及其相关方法。
- en: Tip
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Do not copy-paste these functions or codes; create/edit them yourself line by
    line. This will help you become familiar with the script editor's code hinting
    and completion features.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 不要复制粘贴这些函数或代码；请一行一行地自己创建/编辑它们。这将帮助你熟悉脚本编辑器的代码提示和自动完成功能。
- en: Now run the `createMenu` function and flip to the document window/tab. You will
    see a new menu item called **PACKT** added next to the **Help** menu. You can
    see the custom menu **PACKT** with an item **Greeting** as shown in the following
    screenshot. The item label **Greeting** is associated with the function `greeting`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行 `createMenu` 函数并切换到文档窗口/标签页。你将看到在 **帮助** 菜单旁边新增了一个名为 **PACKT** 的菜单项。你可以看到自定义菜单
    **PACKT**，其中包含一个名为 **Greeting** 的项目，如以下截图所示。项目标签 **Greeting** 与函数 `greeting` 相关联。
- en: '![Creating a custom menu](img/B05010_02_10.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义菜单](img/B05010_02_10.jpg)'
- en: The menu item **Greeting** works the same way as the button created in the previous
    task. The drawback with this method of inserting the custom menu is that to get
    the custom menu to show up, you need to run `createMenu` every time within the
    script editor. Consider how your user would be able to use this `greeting` function
    if they didn't know about GAS and the script editor. Think about how your user
    may not be a programmer like you. To enable your users to execute selected GAS
    functions, you should create a custom menu and make it visible as soon as the
    document opens. To do so, rename the `createMenu` function `onOpen`, and that's
    all.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项 **Greeting** 与之前任务中创建的按钮工作方式相同。使用这种方法插入自定义菜单的缺点是，为了使自定义菜单显示出来，你需要在脚本编辑器中每次都运行
    `createMenu`。考虑一下，如果用户不知道 GAS 和脚本编辑器，他们将如何使用这个 `greeting` 函数。想想你的用户可能不像你一样是程序员。为了使用户能够执行选定的
    GAS 函数，你应该创建一个自定义菜单，并在文档打开时立即使其可见。要做到这一点，将 `createMenu` 函数重命名为 `onOpen`，这就足够了。
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `onOpen` function is a special function name. Whenever a user opens a document,
    the GAS interpreter executes this function first. Other similar function names
    are `onEdit`, `onInstall`, `doGet`, and `doPost`. The first two are spreadsheet
    event-related functions and the next two are published script service's `get`
    and `post` callback functions. You should not use these function names other than
    for the intended purposes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`onOpen` 函数是一个特殊函数名。每当用户打开文档时，GAS 解释器首先执行此函数。其他类似函数名有 `onEdit`、`onInstall`、`doGet`
    和 `doPost`。前两个是与电子表格事件相关的函数，后两个是发布脚本服务的 `get` 和 `post` 回调函数。你不应该将这些函数名用于除预期目的之外的其他目的。'
- en: Creating a sidebar
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建侧边栏
- en: 'A sidebar is a static dialog box and is included on the right-hand side of
    the document editor window. To create a sidebar, type the following code in the
    editor:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 侧边栏是一个静态对话框，包含在文档编辑窗口的右侧。要创建侧边栏，请在编辑器中输入以下代码：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding code, you are using `HtmlService` and invoking its method `createHtmlOutput`
    then consecutively invoking the `setTitle` method. To test this code, run the
    `onOpen` function or reload the document. The sidebar will open in the right-hand
    side of the document window as shown in the following screenshot. The sidebar
    layout size is a fixed one, which means you cannot change, alter, or resize it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，你正在使用 `HtmlService` 并调用其方法 `createHtmlOutput`，然后连续调用 `setTitle` 方法。要测试此代码，请运行
    `onOpen` 函数或重新加载文档。侧边栏将如以下截图所示在文档窗口的右侧打开。侧边栏布局大小是固定的，这意味着你不能更改、修改或调整它的大小。
- en: '![Creating a sidebar](img/B05010_02_11.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![创建侧边栏](img/B05010_02_11.jpg)'
- en: The button in the sidebar is an HTML element, not a GAS element, and if clicked,
    it opens the browser interface's alert box.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 侧边栏中的按钮是一个 HTML 元素，而不是 GAS 元素，如果点击，它将打开浏览器界面的警告框。
- en: Creating an Add-ons menu
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个扩展菜单
- en: In the previous task, you included the HTML code inline as a string argument
    to the `createHtmlOutput` method. Alternatively, you can put this HTML snippet
    in a separate HTML file.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个任务中，您将HTML代码作为字符串参数内联包含在`createHtmlOutput`方法中。作为替代，您可以将此HTML片段放入单独的HTML文件中。
- en: 'To create a new HTML file, in the script editor, go to **File** | **New** |
    **Html file**, as shown in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的HTML文件，在脚本编辑器中，前往**文件** | **新建** | **HTML文件**，如图所示：
- en: '![Creating an Add-ons menu](img/B05010_02_12.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![创建附加菜单](img/B05010_02_12.jpg)'
- en: Then in the **Create File** box, enter your preferred name for the new HTML
    file. For this task, enter `Index` and click on the **OK** button. The `.html`
    extension will be added automatically.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在**创建文件**框中，输入您为新HTML文件选择的名称。对于这个任务，输入`Index`并点击**确定**按钮。`.html`扩展名将自动添加。
- en: '![Creating an Add-ons menu](img/B05010_02_13.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![创建附加菜单](img/B05010_02_13.jpg)'
- en: 'A new `Index.html` file will be created with a few lines of default HTML code,
    as shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将创建一个包含几行默认HTML代码的新`Index.html`文件，如图所示：
- en: '![Creating an Add-ons menu](img/B05010_02_14.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![创建附加菜单](img/B05010_02_14.jpg)'
- en: 'Insert your `button` tags between the `body` tags as shown here:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的`button`标签插入到`body`标签之间，如图所示：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Insert the code shown here in the `Code.gs` file:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码插入到`Code.gs`文件中：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To test the code, run the `onOpen` function or reload the document. In the
    **Add-ons** menu, a new item, called **Chapter 2** (the project name), will be
    added, as shown here:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试代码，运行`onOpen`函数或重新加载文档。在**附加组件**菜单中，将添加一个新项目，称为**第2章**（项目名称），如图所示：
- en: '![Creating an Add-ons menu](img/B05010_02_15.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![创建附加菜单](img/B05010_02_15.jpg)'
- en: '**Show Sidebar** is the label for the `showSidebar` function; click on it to
    show your sidebar.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**显示侧边栏**是`showSidebar`函数的标签；点击它以显示您的侧边栏。'
- en: Creating a modal dialog
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建模态对话框
- en: 'To create a modal dialog, which prevents the user from updating anything in
    the spreadsheet or document, update the code in the `Code.gs` file as shown here:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个阻止用户在电子表格或文档中更新任何内容的模态对话框，请按照图示更新`Code.gs`文件中的代码：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Go to **Add-ons** | **Chapter 2** | **Show Dialog** and a modal dialog will
    pop up:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 前往**附加组件** | **第2章** | **显示对话框**，将弹出一个模态对话框：
- en: '![Creating a modal dialog](img/B05010_02_16.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![创建模态对话框](img/B05010_02_16.jpg)'
- en: Creating a modeless dialog
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建无模态对话框
- en: 'Now we will create a modeless dialog and see the difference between modal and
    modeless dialogs. Update the `showDialog` function as shown here:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将创建一个无模态对话框，并查看模态对话框和无模态对话框之间的区别。按照图示更新`showDialog`函数：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that the `showModalDialog` method has been changed to `showModelessDialog`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`showModalDialog`方法已更改为`showModelessDialog`。
- en: 'Modeless dialogs do not prevent you from doing other things, such as editing
    the document, and you can drag the dialog around as shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 无模态对话框不会阻止您做其他事情，例如编辑文档，并且您可以像图示中那样拖动对话框。
- en: '![Creating a modeless dialog](img/B05010_02_17.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![创建无模态对话框](img/B05010_02_17.jpg)'
- en: Debugging your script
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试脚本
- en: Logging the values of variables at a few points is essential when testing and
    debugging your code. The `Logger` class is a helpful tool to do this and has a
    few methods that are essential to debug your code.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试和调试代码时，在几个点上记录变量的值是至关重要的。`Logger`类是一个有用的工具来完成这项工作，并且有几个对调试代码至关重要的方法。
- en: 'Update the `showDialog` function as shown here:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 按照图示更新`showDialog`函数：
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Run the `showDialog` function as usual from the **Add-ons** menu. Do anything,
    for example, enter your name and click on **Yes** or **No** or close the dialog.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如常从**附加组件**菜单运行`showDialog`函数。做任何事，例如，输入您的名字并点击**是**或**否**或关闭对话框。
- en: '![Debugging your script](img/B05010_02_18.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![调试脚本](img/B05010_02_18.jpg)'
- en: 'Now within the script editor, press *Ctrl* + *Enter* (Windows) or Command +
    *Enter* (Mac) or from the **View** menu, select **Logs**, then you can see the
    logged text with a timestamp as shown here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在脚本编辑器中，按*Ctrl* + *Enter*（Windows）或Command + *Enter*（Mac），或从**视图**菜单中选择**日志**，然后您可以看到带有时间戳的已记录文本，如图所示：
- en: '![Debugging your script](img/B05010_02_19.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![调试脚本](img/B05010_02_19.jpg)'
- en: 'For a more detailed study of the `Logger` future, create the function `debug`
    as shown here:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要对`Logger`进行更详细的研究，创建一个名为`debug`的函数，如图所示：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Run the `debug` function and see the `Logger` result as shown here:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`debug`函数，查看如图所示的`Logger`结果：
- en: '![Debugging your script](img/B05010_02_20.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![调试脚本](img/B05010_02_20.jpg)'
- en: 'In addition to logging, you can use the `debug` feature of the editor. In the
    editor, you set break points at one or more lines. To do so, click once on the
    line number on which you want to set a break point. A red dot will be toggled
    just on the left-hand side of the line number, as shown here:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除了记录之外，你还可以使用编辑器的`debug`功能。在编辑器中，你在一行或多行设置断点。要这样做，点击你想要设置断点的行号。行号左侧将切换一个红色圆点，如图所示：
- en: '![Debugging your script](img/B05010_02_21.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![调试你的脚本](img/B05010_02_21.jpg)'
- en: 'Select the `debug` function that you want to debug in the **Select function**
    selector if it is not already selected. Click on the **Debug** button (shown as
    an insect) to the left of the function selector. The function is executed up to
    the break point and then pauses. The edit window is split horizontally and shows
    the object and its values in the bottom part of the window as shown here:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在**选择函数**选择器中，如果你还没有选择，请选择你想要调试的`debug`函数。点击函数选择器左侧的**调试**按钮（显示为昆虫形状）。函数执行到断点处然后暂停。编辑窗口水平分割，并在窗口的下半部分显示对象及其值，如图所示：
- en: '![Debugging your script](img/B05010_02_22.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![调试你的脚本](img/B05010_02_22.jpg)'
- en: Click on the **Continue debugging** button to see the values on every cycle
    of the `for` loop.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**继续调试**按钮，以查看`for`循环的每一轮的值。
- en: Tip
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can experiment with the other features such as step into, step over, and
    step out.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以尝试其他功能，如进入、跳过和退出。
- en: To exit the debugging session, click on the **Stop debugging** button and remember
    to remove (toggle) all the break points.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出调试会话，点击**停止调试**按钮，并记得移除（切换）所有断点。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about many type of dialog and how to create and
    display them, you found out how to use the `Logger` class to log values, and you
    also saw how to debug your script. In the next chapter, you will learn about Gmail
    and Contacts.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了多种对话框及其创建和显示方法，发现了如何使用`Logger`类记录值，还看到了如何调试你的脚本。在下一章，你将学习关于Gmail和联系人。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[http://www.packtpub.com](http://www.packtpub.com)的账户下载此书的示例代码文件。如果你在其他地方购买了此书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给你。
- en: 'You can download the code files by following these steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用你的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**标签上。
- en: Click on **Code Downloads & Errata**.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击**代码下载与勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书籍的名称。
- en: Select the book for which you're looking to download the code files.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择你想要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择你购买此书籍的来源。
- en: Click on **Code Download**.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保使用最新版本的以下软件解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for Mac
- en: 7-Zip / PeaZip for Linux
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
