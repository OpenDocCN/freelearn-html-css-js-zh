- en: Chapter 3. Creating Heatmaps and Choropleth Maps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 创建热力图和面状图
- en: 'In the first two chapters, you learned how to make a map and add points, lines,
    polygons, and even GeoJSON. Now, you will use these skills to create two types
    of thematic maps: heatmaps and choropleth maps. These maps show you concentrations
    of points or statistical variables using two different styles of representations.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两章中，你学习了如何制作地图并添加点、线、多边形，甚至是GeoJSON。现在，你将使用这些技能来创建两种类型的专题地图：热力图和面状图。这些地图使用两种不同的表示风格来展示点的集中或统计变量的分布。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What is a heatmap?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是热力图？
- en: How do I create a heatmap?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何创建一个热力图？
- en: What is a choropleth map?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是面状图？
- en: How do I create a choropleth map?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何创建一个面状图？
- en: What is a heatmap?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是热力图？
- en: 'A heatmap is a color-coded grid added to a map. The colors usually range from
    cool colors, such as blue, to hot colors, such as yellow, orange, and red. Heatmaps
    represent point data in one of two ways: density or intensity. In a density map,
    the grid is colored red when multiple points are in close proximity of each other
    and blue when dispersed. High concentrations of points create the heat. In an
    intensity map, points are assigned a value or an intensity score. The higher the
    score or intensity, the hotter the color in the grid at the location of the point;
    inversely, the lower the score, the cooler the grid color at the point location.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 热力图是在地图上添加的一个彩色网格。颜色通常从冷色调，如蓝色，到暖色调，如黄色、橙色和红色。热力图以两种方式之一表示点数据：密度或强度。在密度图中，当多个点彼此靠近时，网格被着色为红色，而当点分散时，则被着色为蓝色。高密度的点产生热量。在强度图中，点被分配一个值或强度分数。分数或强度越高，点所在位置的网格颜色越热；相反，分数越低，点所在位置的网格颜色越冷。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Heatmaps are created by placing a grid over the map and calculating the points
    within an area through a process called Multivariate Kernel Density Estimation.
    For a detailed explanation and the exact formulas used, you can visit [http://en.wikipedia.org/wiki/Multivariate_kernel_density_estimation](http://en.wikipedia.org/wiki/Multivariate_kernel_density_estimation).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 热力图是通过在地图上放置一个网格并通过对一个区域内的点进行多变量核密度估计的过程来创建的。对于详细解释和使用的确切公式，你可以访问[http://en.wikipedia.org/wiki/Multivariate_kernel_density_estimation](http://en.wikipedia.org/wiki/Multivariate_kernel_density_estimation)。
- en: Heatmaps with Leaflet.heat
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Leaflet.heat创建热力图
- en: 'The first heatmap you will make will be a density heatmap, using the `Leaflet.heat`
    plugin. You can download the JavaScript plugin at [https://github.com/Leaflet/Leaflet.heat](https://github.com/Leaflet/Leaflet.heat).
    The following steps will walk you through creating your first heatmap:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你将要制作的第一个热力图将是一个密度热力图，使用 `Leaflet.heat` 插件。你可以从 [https://github.com/Leaflet/Leaflet.heat](https://github.com/Leaflet/Leaflet.heat)
    下载JavaScript插件。以下步骤将指导你创建你的第一个热力图：
- en: 'Using `LeafletEssentials.html`, add a reference to `Leaflet.heat.js` with either
    a URL to a remote copy or the path to your local copy, as shown in the following
    code:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `LeafletEssentials.html`，通过以下代码添加对 `Leaflet.heat.js` 的引用，无论是远程副本的URL还是本地副本的路径：
- en: '[PRE0]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add an array of points. Your points can contain additional information but
    must have the latitude and longitude as the first two elements. The following
    code shows you three points from the code. The full code contains many more, which
    will allow you to create the heatmap:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个点数组。你的点可以包含其他信息，但必须包含纬度和经度作为前两个元素。以下代码显示了代码中的三个点。完整的代码包含更多点，这将允许你创建热力图：
- en: '[PRE1]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Lastly, create the heat layer and add it to the map:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建热层并将其添加到地图中：
- en: '[PRE2]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Your map should look like what is shown in the following screenshot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你的地图应该看起来像以下截图所示：
- en: '![Heatmaps with Leaflet.heat](img/4812OS_03_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![使用Leaflet.heat的热力图](img/4812OS_03_01.jpg)'
- en: The preceding screenshot is the default heatmap; it's not very stylish.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图是默认的热力图；它并不十分时尚。
- en: Using options to style your map
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用选项来设置地图样式
- en: '`Leaflet.heat` allows you to pass options to the constructor. The options are
    as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`Leaflet.heat` 允许你向构造函数传递选项。选项如下：'
- en: '`MaxZoom`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`最大缩放级别`'
- en: '`Max`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`最大值`'
- en: '`Radius`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`半径`'
- en: '`Blur`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`模糊度`'
- en: '`Gradient`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`渐变`'
- en: The most important options are `blur`, `maxZoom`, and `radius`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的选项是 `blur`、`maxZoom` 和 `radius`。
- en: Changing the blur value
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改变模糊值
- en: Blur merges the points the together, or not. A low blur value will create individual
    points, whereas a higher number will make the points merge with each other and
    look more fluid. Blur too much and you will wash out your points. The following
    screenshots show you different blur values.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 模糊将点合并在一起，或者不合并。低模糊值将创建单独的点，而高数值将使点相互合并并看起来更流畅。模糊过度会导致点变得模糊。以下截图显示了不同的模糊值。
- en: 'The following screenshot shows you the blur value set to `1`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了模糊值设置为 `1`：
- en: '![Changing the blur value](img/4812OS_03_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![更改模糊值](img/4812OS_03_03.jpg)'
- en: 'The following screenshot shows you the blur value set to `40`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了模糊值设置为 `40`：
- en: '![Changing the blur value](img/4812OS_03_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![更改模糊值](img/4812OS_03_04.jpg)'
- en: 'The following screenshot shows you the blur value set to `80`:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了模糊值设置为 `80`：
- en: '![Changing the blur value](img/4812OS_03_05.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![更改模糊值](img/4812OS_03_05.jpg)'
- en: Notice how at `80`, the blur takes away any hotspots on the map; it is washed
    out. It will take some to adjust to finding the perfect value. Starting with the
    default value of `15` is a good idea.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在 `80` 时，模糊消除了地图上的任何热点；它变得模糊。找到完美值需要一些时间。从默认值 `15` 开始是一个好主意。
- en: Changing the maxZoom value
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改最大缩放值
- en: The `maxZoom` option sets the points to their maximum intensity at the specified
    zoom. If you set the `maxZoom` option of the map, you can ignore this setting.
    You should set this to the zoom level where the map looks best. If you set it
    to too far out, the points will lose their heat as you zoom in, and if you make
    it too tight of a zoom, the user might not be able to see all the points on the
    map at once.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`maxZoom` 选项将点设置为指定缩放的最大强度。如果您设置了地图的 `maxZoom` 选项，则可以忽略此设置。您应该将其设置为地图看起来最好的缩放级别。如果您设置得太远，当您放大时，点会失去其热度，如果您设置得太紧，用户可能无法一次性看到地图上的所有点。'
- en: Changing the radius value
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改半径值
- en: This option should be obvious. It adjusts the radius of the points. A small
    number makes a small point and a large number makes a large point. The amount
    of data points can affect the proper radius of your points. The more points you
    have, the smaller you could make each point and still have a readable map. Making
    the radius too large will create a large blob of values that will be hard to interpret.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项应该是显而易见的。它调整点的半径。数字小则点小，数字大则点大。数据点的数量会影响点的适当半径。点越多，每个点可以越小，同时仍然可以读出地图。将半径设置得太大会创建一个难以解释的大值块。
- en: Setting the gradient option
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置渐变选项
- en: The `gradient` option allows you to specify the color at different levels. The
    default is set to `{.4:"blue",.6:"cyan",.7:"lime",.8:"yellow",1:"red"}`. You can
    specify ranges from `0` to `1`. The outermost color is `0` and the center is `1`.
    The default setting tends to be a common color range for heatmaps that most people
    understand. Leaving the default is the best option, but if you need to change
    the colors for some reason, you can.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`gradient` 选项允许您指定不同级别的颜色。默认设置为 `{.4:"blue",.6:"cyan",.7:"lime",.8:"yellow",1:"red"}`。您可以从
    `0` 到 `1` 指定范围。最外层的颜色是 `0`，中心是 `1`。默认设置通常是大多数人都理解的常见颜色范围。保留默认设置是最佳选择，但如果出于某种原因需要更改颜色，您也可以更改。'
- en: Note
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To create a color combination that is visually pleasing, you can use a tool
    such as Color Brewer 2\. This is available at [http://colorbrewer2.org/](http://colorbrewer2.org/).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个视觉上令人愉悦的颜色组合，您可以使用像 Color Brewer 2 这样的工具。它可在 [http://colorbrewer2.org/](http://colorbrewer2.org/)
    获取。
- en: Methods of Leaflet.heat
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Leaflet.heat 方法
- en: 'Along with the options to style your heatmap, `Leaflet.heat` has four methods
    as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 除了样式化热图选项外，`Leaflet.heat` 还提供了以下四种方法：
- en: '`setOptions(options)`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setOptions(options)`'
- en: '`addLatLng(latlng)`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addLatLng(latlng)`'
- en: '`setLatLngs(latlngs)`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setLatLngs(latlngs)`'
- en: '`redraw()`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`redraw()`'
- en: 'You can reset the style, add new data, load in all new data, and redraw the
    map. The method you will use most is the `addLatLng()` method. This method allows
    you to append data to your map. In the previous example, you can add the following
    code as the last line:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以重置样式、添加新数据、加载所有新数据并重新绘制地图。您将使用最多的方法是 `addLatLng()` 方法。此方法允许您将数据追加到地图中。在先前的示例中，您可以将以下代码作为最后一行添加：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding code uses the `addLatLng()` method to add the point (`35,-106`)
    to the map. There is an excellent example of using an event with `addLatLng()`
    at [http://Leaflet.github.io/Leaflet.heat/demo/draw.html](http://Leaflet.github.io/Leaflet.heat/demo/draw.html).
    As you move the mouse, points are added to the map in real time.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码使用`addLatLng()`方法将点（`35,-106`）添加到地图上。在[http://Leaflet.github.io/Leaflet.heat/demo/draw.html](http://Leaflet.github.io/Leaflet.heat/demo/draw.html)有一个使用`addLatLng()`与事件结合的出色示例。当你移动鼠标时，点会实时添加到地图上。
- en: Tip
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `redraw()` method is called by `setOptions()`, `addLatLng()`, and `setLatLngs()`
    so that you do not need to call it after executing any of these methods.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`redraw()`方法由`setOptions()`、`addLatLng()`和`setLatLngs()`调用，这样你就不需要在执行这些方法之后调用它。'
- en: 'If you want to show multiple datasets on a single map, you can write a custom
    function to add another set. The following code adds a dataset. You will need
    to populate the `newPoints` variable with your other dataset:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在单个地图上显示多个数据集，你可以编写一个自定义函数来添加另一个集。以下代码添加了一个数据集。你需要用你的其他数据集填充`newPoints`变量：
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the preceding code, a dataset named `newPoints` is added to the map and
    the old dataset points are removed. In your HTML, create a button to execute the
    function:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，添加了一个名为`newPoints`的数据集到地图，并移除了旧的数据集points。在你的HTML中，创建一个按钮来执行该函数：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The preceding code is the HTML that calls the `addNewPoints()`function when
    it is clicked on.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码是当点击时调用`addNewPoints()`函数的HTML。
- en: Adding markers to the heatmap
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将标记添加到热力图
- en: 'You need a series of points to create the heatmap, so why not use them to attach
    a pop up to the heat layer. In the data, there was a latitude, longitude, and
    a third field that contained a URL to an image. The following code shows you how
    to turn that data into a marker with a pop up:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一系列点来创建热力图，为什么不利用它们将弹出层附加到热层。在数据中，有一个纬度、经度和一个包含图像URL的第三个字段。以下代码展示了如何将数据转换为带有弹出层的标记：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The preceding code is a standard for a loop that starts with `0` and executes
    until you have iterated through all the points—`points.length`. This creates a
    marker by passing each point''s latitude and longitude, `points[i][0]` and `points[i][1]`,
    and converts them to a float value. Next, the `opacity` option is set to `0`.
    This makes the points invisible. The points are on the map, and they can be clicked
    on, but you cannot see them. This gives the appearance of the hotspot layer that
    contains the pop up. Lastly, the `bindPopup()` method is passed the URL to the
    image, `bindPopup(points[i][2])`, and is added to the map. The following screenshot
    shows you the pop up with the invisible markers and heat layer:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码是一个以`0`开始的循环标准，直到你迭代完所有点——`points.length`。通过传递每个点的纬度和经度，`points[i][0]`和`points[i][1]`，并将它们转换为浮点值来创建一个标记。接下来，将`opacity`选项设置为`0`。这使得点变得不可见。这些点位于地图上，可以点击，但你看不见它们。这给人一种包含弹出层的热点层的外观。最后，将`bindPopup()`方法传递给图像的URL，`bindPopup(points[i][2])`，并将其添加到地图上。以下截图显示了带有不可见标记和热层的弹出层：
- en: '![Adding markers to the heatmap](img/4812OS_03_06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![将标记添加到热力图](img/4812OS_03_06.jpg)'
- en: Creating heatmaps with heatmap.js
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用heatmap.js创建热力图
- en: 'Creating a heatmap that uses intensity can be accomplished in Leaflet using
    `heatmap.js`. You can get `heatmap.js` at [http://www.patrick-wied.at/static/heatmapjs/index.html](http://www.patrick-wied.at/static/heatmapjs/index.html).
    This includes the plugins for `leaflet.js` and other mapping packages. The process
    to create the heatmap is similar to the previous example. The following steps
    will walk you through creating a heatmap:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`heatmap.js`在Leaflet中创建使用强度的热力图是可行的。你可以在[http://www.patrick-wied.at/static/heatmapjs/index.html](http://www.patrick-wied.at/static/heatmapjs/index.html)获取`heatmap.js`。这包括`leaflet.js`和其他地图包的插件。创建热力图的过程与前面的例子类似。以下步骤将指导你创建热力图：
- en: 'Using `LeafletEssentials.html`, add a reference to `heatmap.js` and `heatmap-Leaflet`
    with either a URL to a remote copy or the path to your local copy, as shown in
    the following code:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`LeafletEssentials.html`，通过以下代码将`heatmap.js`和`heatmap-Leaflet`的引用添加到其中，无论是远程副本的URL还是本地副本的路径：
- en: '[PRE7]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add a JavaScript object with the `max` value of the intensity and an array
    of data:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个具有强度`max`值的JavaScript对象和一个数据数组：
- en: '[PRE8]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create the heat layer and set the options:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建热层并设置选项：
- en: '[PRE9]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Add the data to the map. Because the data is in an object, you use dot notation,
    referencing it as `objectname.data`; in this case, `myData.data`. You could also
    use `myData[''data'']`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据添加到地图中。因为数据在一个对象中，您使用点符号，将其引用为 `objectname.data`；在这种情况下，`myData.data`。您也可以使用
    `myData['data']`：
- en: '[PRE10]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Lastly, modify your `map` object to add the layers:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，修改您的 `map` 对象以添加图层：
- en: '[PRE11]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that currently, you might need to reference an older version of
    Leaflet. This will be updated in a future version of the plugin.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，目前您可能需要参考 Leaflet 的旧版本。这将在插件的未来版本中更新。
- en: 'Your map should look like what is shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您的地图应该看起来像以下截图所示：
- en: '![Creating heatmaps with heatmap.js](img/4812OS_03_07.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![使用 heatmap.js 创建热图](img/4812OS_03_07.jpg)'
- en: Modifying the heatmap options
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改热图选项
- en: 'The heatmap allows you to modify three settings: `radius`, `opacity`, and `gradient`.
    Like the previous example, `gradient` controls the size of each point in the map.
    The `opacity` option allows you to specify a value between `0` and `1`. `0` is
    completely transparent and the heatmap layer will not show up on the map. The
    value `1` will make the heatmap layer solid, and you will not be able to see what
    is underneath each point. Somewhere between `.70` and `.80` seems to be the perfect
    opacity to view the heat layer and the base layer underneath. Lastly, the gradient,
    while best left alone, can be modified by setting a value of `0` to `1` and assigning
    a color. Colors in the gradient can be RGB values, or you can use color names:
    red, yellow, blue, or lime.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 热图允许您修改三个设置：`radius`、`opacity` 和 `gradient`。与上一个示例一样，`gradient` 控制地图中每个点的大小。`opacity`
    选项允许您指定介于 `0` 和 `1` 之间的值。`0` 表示完全透明，热图层将不会显示在地图上。值 `1` 将使热图层变为实心，您将无法看到每个点下面的内容。介于
    `.70` 和 `.80` 之间的值似乎查看热层和下面的基础层是完美的透明度。最后，梯度，虽然最好保持不变，但可以通过设置值从 `0` 到 `1` 并分配颜色来修改。梯度中的颜色可以是
    RGB 值，或者您可以使用颜色名称：红色、黄色、蓝色或青色。
- en: Adding more data to the map
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向地图添加更多数据
- en: 'You will eventually need to add more data to the map after it has been drawn.
    To do this requires you to append values to the object and then add the object
    again. First, to add data to the JavaScript object, you can use the following
    code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在地图绘制完成后，您最终可能需要向地图添加更多数据。为此，您需要向对象中追加值，然后再次添加该对象。首先，要向 JavaScript 对象中添加数据，您可以使用以下代码：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `myData` object has a key data that is an array. You reference it by using
    `myData.data[index]`. You might not know how many items are in the array, so using
    the length of the array as the index, you will always get the next available index.
    This works because the length is the number of items, but the index starts at
    `0`. So, for a three-item array, the length is three but the last index is two.
    Using the length gives you the next empty index. Then, just assign a value to
    the index, and it will be appended to the object. Lastly, add the data to the
    map again:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`myData` 对象有一个键 `data`，它是一个数组。您可以通过使用 `myData.data[index]` 来引用它。您可能不知道数组中有多少项，因此使用数组的长度作为索引，您将始终获得下一个可用的索引。这是因为长度是项目数，但索引从
    `0` 开始。所以，对于有三个项目的数组，长度是三，但最后一个索引是二。使用长度为您提供下一个空索引。然后，只需将值分配给索引，它将被追加到对象中。最后，再次将数据添加到地图中：'
- en: '[PRE13]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not use an index, you will overwrite the data with the one item you
    were trying to add.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不使用索引，您将用要添加的一个项目覆盖数据。
- en: Creating an interactive heatmap
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建交互式热图
- en: 'A heatmap is an alternative visualization to a point map. A point map often
    becomes cluttered with large markers that make it hard to find hotspots. In an
    intensity heatmap, a single point could be a hotspot. The color coding of values
    in a heatmap makes it easy to see patterns in the data. Heatmaps can also be used
    to visualize other spatial data, such as tracking where a mouse moves on a web
    page or where a person''s eyes travel when reading something on the screen. In
    this example, you will learn how to create a heatmap that responds to user mouse
    clicks on the map:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 热图是点图的一种替代可视化方式。点图经常因为大标记而变得杂乱，难以找到热点。在强度热图中，单个点可能是一个热点。热图中值的颜色编码使得查看数据中的模式变得容易。热图还可以用于可视化其他空间数据，例如跟踪鼠标在网页上的移动或人们在屏幕上阅读时眼睛的移动。在这个例子中，您将学习如何创建一个对用户在地图上点击鼠标做出响应的热图：
- en: 'First, include a reference to `Leaflet.heat.js`:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，包含对 `Leaflet.heat.js` 的引用：
- en: '[PRE14]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, disable the `doubleClickZoom` option on the map. Since the user will
    be clicking on the map to make the heatmap, you need to do this so that when the
    user clicks too fast, which they will, the map does not zoom:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在地图上禁用`doubleClickZoom`选项。由于用户将点击地图来创建热力图，你需要这样做，以便当用户点击得太快时（他们会的），地图不会缩放：
- en: '[PRE15]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a blank dataset that can be added to the map. This allows the user to
    draw on a fresh canvas:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个空白的数据集，可以添加到地图中。这允许用户在新的画布上绘制：
- en: '[PRE16]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the data to the map:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据添加到地图中：
- en: '[PRE17]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create a function to handle the user clicks. This function will add points
    to the layer by catching the latitude and longitude of the mouse click. The `e`
    parameter is an event object that is automatically sent on the map click. The
    object contains information about the event and, in this example, you take the
    latitude and longitude, as shown in the following code:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个处理用户点击的函数。这个函数将通过捕捉鼠标点击的纬度和经度来向图层添加点。`e`参数是一个事件对象，它在地图点击时自动发送。该对象包含有关事件的信息，在这个例子中，你取纬度和经度，如下面的代码所示：
- en: '[PRE18]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Connect the function to an event, in this case, `click`:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将函数连接到事件，在这种情况下，是`click`事件：
- en: '[PRE19]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Your map, after clicking several times, should look like what is shown in the
    following screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你的地图在点击几次后，应该看起来像以下截图所示：
- en: '![Creating an interactive heatmap](img/4812OS_03_10.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![创建交互式热力图](img/4812OS_03_10.jpg)'
- en: Animating a heatmap
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动画热力图
- en: So far, you have created a heatmap that showed you the current density of points
    and intensities, but what if you wanted to show a heatmap that changed over time?
    In this last example, you will learn how to create a heatmap animation.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经创建了一个显示当前点密度和强度的热力图，但如果你想要显示随时间变化的热力图呢？在这个最后一个例子中，你将学习如何创建热力图动画。
- en: 'An animated heatmap is not as complicated as it might sound. Animation is nothing
    more than adding and removing data from the map, and you have covered these skills
    earlier in the chapter. The trick to this example is in the organization of your
    data and taking advantage of timing events in JavaScript. The following steps
    will walk you through making an animated heatmap:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 动画热力图并不像听起来那么复杂。动画不过是向地图添加和删除数据，你已经在本章的早期掌握了这些技能。这个例子中的技巧在于数据的组织和利用JavaScript中的时间事件。以下步骤将指导你制作一个动画热力图：
- en: 'Reference the heatmap plugin:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引用热力图插件：
- en: '[PRE20]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Next, separate your data into an array per time period. Name your data with
    the same name, plus a number that increments the number based on the time period.
    The following code can be used for this purpose:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将你的数据按时间周期分别放入一个数组中。用相同的名字命名你的数据，然后根据时间周期增加一个数字。以下代码可以用于此目的：
- en: '[PRE21]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Add a starting dataset to the map:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将起始数据集添加到地图中：
- en: '[PRE22]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, create a variable that will iterate through the datasets and a string
    that holds the name of the datasets. Note that the iterator starts at `2`. This
    is because you loaded `points1` before the loop:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建一个将遍历数据集的变量和一个包含数据集名称的字符串。请注意，迭代器从`2`开始。这是因为你在循环之前加载了`points1`：
- en: '[PRE23]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create an interval and pass a function and the time in milliseconds (1,000
    milliseconds are equal to one second):'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个区间，并传递一个函数以及以毫秒为单位的时间（1,000毫秒等于一秒）：
- en: '[PRE24]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Create the function that will perform the animation. The following code creates
    a `name` string, that is, the data name concatenated with the iteration number.
    The current layer is removed from the map and the next layer is added. You cannot
    call a variable using a string as its name, so we use `window[name]`. Lastly,
    the code increments the `x` iterator:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个执行动画的函数。以下代码创建了一个`name`字符串，即数据名称与迭代数字的连接。当前图层从地图中移除，下一个图层被添加。你不能使用字符串作为名称来调用变量，所以我们使用`window[name]`。最后，代码增加`x`迭代器：
- en: '[PRE25]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'When you load the map, you should see the first dataset:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 当你加载地图时，你应该看到第一个数据集：
- en: '![Animating a heatmap](img/4812OS_03_11.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![动画热力图](img/4812OS_03_11.jpg)'
- en: 'Then, the data will change every second. The following screenshot shows you
    what the map will look like after a few seconds:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，数据将每秒更新一次。以下截图显示了经过几秒后地图将看起来像什么：
- en: '![Animating a heatmap](img/4812OS_03_12.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![动画热力图](img/4812OS_03_12.jpg)'
- en: Creating a choropleth map with Leaflet
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Leaflet创建分级热力图
- en: In the previous examples, you used heatmaps to color code a map based on the
    density or intensity of points. A choropleth map also measures the intensity or
    density of a statistical variable but within polygons. A popular choropleth map
    is the population density by county. Choropleth maps do not require any plugins,
    as was the case with the heatmap examples. A choropleth map is usually created
    by styling GeoJSON based on a property.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，您使用了热图来根据点的密度或强度对地图进行着色编码。等值线图也测量统计变量的强度或密度，但是在多边形内。一个流行的等值线图是按县划分的人口密度。等值线图不需要任何插件，就像热图示例中那样。等值线图通常是通过根据属性对GeoJSON进行样式化来创建的。
- en: The GeoJSON data
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GeoJSON数据
- en: 'When adding a large amount of GeoJSON data to a map, it is easier to place
    the code in a separate JavaScript file. This clears your HTML file of hundreds
    of lines of code, which makes it hard to focus on building the map. When you place
    the GeoJSON code in a JavaScript file, you will declare it as a variable, as shown
    in the following code:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当将大量GeoJSON数据添加到地图中时，将代码放在单独的JavaScript文件中会更简单。这将清除您的HTML文件中的数百行代码，这使得很难专注于构建地图。当您将GeoJSON代码放在JavaScript文件中时，您将声明它为一个变量，如下面的代码所示：
- en: '[PRE26]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The preceding code is for a single feature. The complete file contains 153
    features. This would add over fifty 8.5" x 11" pages to your HTML file. Notice
    that the file is not GeoJSON but JavaScript. It is a variable declaration. When
    you reference this file in your HTML, you can call the `ct` variable in your script.
    Once you have your data as a variable in a JavaScript file, link to it in `LeafletEssentials.html`:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码是针对单个要素的。完整的文件包含153个要素。这将向您的HTML文件中添加超过五十页8.5" x 11"的页面。请注意，该文件不是GeoJSON，而是JavaScript。它是一个变量声明。当您在HTML中引用此文件时，您可以在脚本中调用`ct`变量。一旦您在JavaScript文件中将数据作为变量，就在`LeafletEssentials.html`中链接到它：
- en: '[PRE27]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The preceding code shows how you have referenced any included JavaScript file.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码显示了您如何引用任何包含的JavaScript文件。
- en: Setting the color with a function
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用函数设置颜色
- en: 'The next step in making a choropleth map is to give each feature a color based
    on the statistical variable you are mapping. Define a function to handle the ranges
    of values, as shown in the following code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 制作等值线图的下一步是为每个要素根据您要映射的统计变量分配颜色。定义一个函数来处理值的范围，如下面的代码所示：
- en: '[PRE28]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The preceding code takes a parameter and measures a value, returning the color.
    Darker colors are returned for higher values. It is always best to stick to a
    standard coloring progression. Using a single hue progression—a single color from
    light to dark—should serve you well. Using a tool such as Color Brewer will help
    ensure that you use a good color scheme. You can find it at [http://colorbrewer2.org/](http://colorbrewer2.org/).
    This will provide you with color values in RGB, CMYK, and HEX.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码接受一个参数并测量一个值，返回颜色。对于更高的值，返回更深的颜色。始终最好坚持标准的着色进度。使用从浅到深的单色进度——单一颜色——应该会对你大有裨益。使用Color
    Brewer这样的工具将帮助你确保使用一个好的配色方案。您可以在[http://colorbrewer2.org/](http://colorbrewer2.org/)找到它。这将为您提供RGB、CMYK和HEX格式的颜色值。
- en: Styling the GeoJSON data
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 样式化GeoJSON数据
- en: 'Next, you need to create a function to style the GeoJSON data. Using a function
    allows you to style each individual feature based on a property. The following
    code will style the features:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要创建一个函数来样式化GeoJSON数据。使用函数允许您根据属性样式化每个单独的要素。以下代码将样式化要素：
- en: '[PRE29]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The function takes the feature as a parameter and styles it using a few options.
    The important option is the `fillColor` option. This is where you call the `color()`function
    and pass the value of `AWATER10` for each feature. Lastly, add the `GeoJSONLayer`
    variable to the map and use the style function as a parameter, as shown in the
    following code:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数接受要素作为参数，并使用一些选项对其进行样式化。重要的选项是`fillColor`选项。这是您调用`color()`函数并传递每个要素的`AWATER10`值的地方。最后，将`GeoJSONLayer`变量添加到地图中，并使用样式函数作为参数，如下面的代码所示：
- en: '[PRE30]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The preceding code adds the layer to the map using the style function. The
    result will look like what is shown in the following screenshot:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码使用样式函数将图层添加到地图中。结果将类似于以下截图所示：
- en: '![Styling the GeoJSON data](img/4812OS_03_08.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![样式化GeoJSON数据](img/4812OS_03_08.jpg)'
- en: Using a total value, such as the area of water in a census tract, can be improved
    upon by normalizing your data using the land area. This is important because without
    normalization, values can be skewed. For example, assume two locations with a
    land area of 100 acres and 50 acres, respectively. If they both have a lake that
    is 10 acres, and you color code with normalization, they will be of the same color.
    When you normalize, the values will be `.1` and `.2`. The second location is 20
    percent water and the first is only 10 percent. This fact is lost without normalization.
    In the next example, you will build a map that shows the difference between total
    and normalized values.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用总值，例如人口普查区的水域面积，可以通过使用土地面积来标准化你的数据来改进。这一点很重要，因为没有标准化，值可能会偏斜。例如，假设有两个地点，土地面积分别为100英亩和50英亩。如果它们都有一片10英亩的湖，并且你使用标准化进行着色，它们将呈现相同的颜色。当你进行标准化时，值将是`.1`和`.2`。第二个地点是20%的水，而第一个地点只有10%。没有标准化，这个事实就会丢失。在下一个例子中，你将构建一个显示总值和标准化值的地图。
- en: Creating a normalized choropleth map
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建标准化的面状图
- en: 'In this example, you will create a choropleth map that displays both the total
    area and the total area divided by the total land area. The following steps will
    walk you through this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你将创建一个面状图，显示总面积和总面积除以总面积的值。以下步骤将指导你完成这个过程：
- en: 'Using the code from the previous example, add another color function with values
    for the new ranges. They will be much smaller values than values for the total:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用前一个示例中的代码，添加另一个具有新范围值的颜色函数。它们的值将比总值的要小得多：
- en: '[PRE31]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, define another style function. The key difference in this function is
    that the value passed to the color function will be `water`/`land`:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，定义另一个样式函数。这个函数的关键区别在于传递给颜色函数的值将是`水`/`土地`：
- en: '[PRE32]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create two buttons on the bottom of the map to select which choropleth map
    is to be displayed. Connect the buttons to a function:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地图底部创建两个按钮以选择要显示的哪一种面状图。将这些按钮连接到一个函数：
- en: '[PRE33]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Lastly, write the functions that display the layers. Remove the other layer
    after you display the correct layer:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，编写显示图层的函数。在显示正确的图层后，移除其他图层：
- en: '[PRE34]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Your completed map should be blank. You did not load a layer on the map. You
    can now select which layer you want to see by clicking on one of the buttons on
    the bottom of the map. Try clicking on the other button. Click on the button labeled
    **Water/Land**. Your map should look like what is shown in the following screenshot:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 你的地图现在应该是空的。你没有在地图上加载任何图层。你现在可以通过点击地图底部的按钮之一来选择你想要查看的图层。尝试点击另一个按钮。点击标有**水/土地**的按钮。你的地图应该看起来像以下截图所示：
- en: '![Creating a normalized choropleth map](img/4812OS_03_09.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![创建标准化的面状图](img/4812OS_03_09.jpg)'
- en: Notice that once you normalize the land area, the areas with the most water—darkest
    red—are the small tracts near the **Rio Grande** area. These large tracts of land
    have water, but this makes up a small percent of the total area.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一旦你将土地面积标准化，拥有最多水的区域——最深红色区域——是靠近**里奥格兰德**地区的小块土地。这些大面积的土地有水，但这只占总面积的一小部分。
- en: Summary
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have taken your map-making skills beyond points, lines,
    polygons, and GeoJSON to create map visualizations—heatmaps and choropleth maps.
    You have learned how to use two different plugins to make heatmaps and how to
    style them for maximum visual effect. You also learned how to make your heatmap
    interactive and create animations to show the time series data. Choropleth maps
    did not require plugins. You learned how to style GeoJSON data to make a choropleth
    map. Lastly, you learned the difference between totals and normalized data.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经将你的制图技能从点、线、多边形和GeoJSON扩展到创建地图可视化——热力图和面状图。你已经学习了如何使用两个不同的插件来制作热力图以及如何为最大视觉效果进行样式化。你还学习了如何使热力图交互式，并创建动画来显示时间序列数据。面状图不需要插件。你学习了如何样式化GeoJSON数据以创建面状图。最后，你学习了总数据与标准化数据之间的区别。
- en: In the next chapter, you will learn how to create your own markers. You will
    also learn about several plugins that animate and enhance the markers on your
    map.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何创建自己的标记。你还将了解几个插件，这些插件可以动画化和增强地图上的标记。
