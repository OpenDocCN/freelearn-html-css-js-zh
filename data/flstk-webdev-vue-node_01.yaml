- en: Introducing MEVN
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MEVN简介
- en: '**Mongo, Express, Vue.js, and Node.js **(**MEVN**) is a collection of JavaScript
    technologies just like **MongoDB**, **Express**, **Angular**, and **Node.js**
    (**MEAN**), and like**MongoDB**,** Express**,** React**, and **Node.js** (**MERN**).
    It is a full-stack solution for building web-based applications that use MongoDB
    as data storage, Express.js as the backend framework (which is built on top of
    Node.js), Vue.js as the JavaScript framework for the frontend, and Node.js as
    the main engine for the backend.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mongo, Express, Vue.js, and Node.js**（**MEVN**）是一组JavaScript技术，就像**MongoDB**、**Express**、**Angular**和**Node.js**（**MEAN**）一样，以及像**MongoDB**、**Express**、**React**和**Node.js**（**MERN**）一样。它是一个全栈解决方案，用于构建使用MongoDB作为数据存储、Express.js作为后端框架（该框架建立在Node.js之上）、Vue.js作为前端JavaScript框架以及Node.js作为后端主要引擎的基于Web的应用程序。'
- en: This book is for web developers who are interested in learning to build a full-stack
    JavaScript application using MongoDB, Express.js, Vue.js, and Node.js. It is suitable
    for beginners and intermediate developers with a basic knowledge of HTML, CSS,
    and JavaScript.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向对使用MongoDB、Express.js、Vue.js和Node.js构建全栈JavaScript应用程序感兴趣的Web开发者。它适合对HTML、CSS和JavaScript有基本知识的初学者和中级开发者。
- en: The term MEVN may be new, but the technologies used in it are not new. The only
    new technology that is being introduced here is Vue.js. Vue.js is an open source
    JavaScript framework, and its popularity is growing rapidly. There's not much
    of a learning curve with Vue.js and it is also a fierce competitor of other JavaScript
    frameworks such as AngularJS and ReactJS.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MEVN这个术语可能很新，但其中使用的技术并不新。这里介绍的唯一新技术是Vue.js。Vue.js是一个开源的JavaScript框架，其受欢迎程度正在迅速增长。Vue.js的学习曲线并不陡峭，它也是AngularJS和ReactJS等其他JavaScript框架的激烈竞争对手。
- en: Modern web applications need to be fast and easily scalable. In the past, JavaScript
    was used in web applications only when there was a need to add some visual effects
    or animations that normal HTML and CSS could not achieve. But today, JavaScript
    has changed. Today, JavaScript is used in almost every web-based application,
    from small- to large-scale apps. JavaScript is chosen when the application needs
    to be much faster and more interactive.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现代Web应用程序需要快速且易于扩展。在过去，JavaScript仅在需要添加一些正常HTML和CSS无法实现的视觉效果或动画时才用于Web应用程序。但今天，JavaScript已经改变了。今天，JavaScript几乎用于所有基于Web的应用程序，从小型到大型应用程序。当应用程序需要更快和更交互式时，会选择JavaScript。
- en: 'Building a full-stack application using JavaScript as the sole programming
    language has its own benefits:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用JavaScript作为唯一编程语言构建全栈应用程序有其自身的好处：
- en: 'If you are just starting out and learning how to program, you only have to
    master one language: JavaScript.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你刚开始学习编程，你只需要掌握一种语言：JavaScript。
- en: Full-stack engineers are high in demand. Becoming a full-stack developer means
    that you have an idea of how databases work, you know how to build both the backend
    and the frontend, and you also have the skills for UI/UX.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全栈工程师需求量大。成为一名全栈开发者意味着你了解数据库的工作原理，你知道如何构建后端和前端，并且你还具备UI/UX的技能。
- en: In this book, we will build the application using these technology stacks.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用这些技术栈来构建应用程序。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: An introduction to the MEVN technology stack
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MEVN技术栈简介
- en: An introduction to Node.js and its installation on Windows, Linux, and macOS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js及其在Windows、Linux和macOS上的安装简介
- en: An overview of `npm` and its installation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm`及其安装概述'
- en: An introduction to MongoDB and its installation and a few basic commands used
    in MongoDB
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB及其安装简介以及MongoDB中的一些基本命令
- en: An introduction to GitHub version control and how it helps software engineers
    in terms of easy access to code history and collaboration
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub版本控制简介及其如何帮助软件工程师轻松访问代码历史和协作
- en: Evolution of the technology stack in JavaScript
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript技术栈的演变
- en: JavaScript is one of the most important programming languages today. Founded
    by Brendan Eich in 1995, it has done superbly well, not only in maintaining its
    status, but also in rising above all other programming languages.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript是当今最重要的编程语言之一。由Brendan Eich于1995年创立，它做得非常出色，不仅保持了其地位，而且还在所有其他编程语言之上脱颖而出。
- en: The popularity of JavaScript is ever growing with no end in sight. Building
    web applications with JavaScript as the sole programming language has always been
    popular. And with this fast growing pace, the need for software engineers to have
    knowledge of JavaScript is only increasing. No matter what programming language
    you choose to excel at, JavaScript always crawls its way in to get involved with
    other programming languages as well, one way or the other.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 的流行度一直在增长，而且似乎没有尽头。以 JavaScript 作为唯一编程语言构建 Web 应用程序一直很受欢迎。随着这种快速的增长速度，软件工程师对
    JavaScript 的知识需求也在不断增加。无论你选择哪种编程语言来精通，JavaScript 总是以某种方式渗透进来，与其他编程语言一起参与，无论方式如何。
- en: There are a lot of technologies to choose from for the frontend and backend
    while developing an application. While this book uses Express.js for the backend,
    there are other frameworks as well, which you can learn if you want.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发应用程序时，前端和后端有很多技术可供选择。虽然这本书使用 Express.js 作为后端框架，但还有其他框架可供学习，如果你愿意的话。
- en: The other available backend frameworks are **Meteor.js**, **Sails.js**, **Hapi.js**,
    **Mojito**, **Koa.js**, and many others.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可用的后端框架包括 **Meteor.js**、**Sails.js**、**Hapi.js**、**Mojito**、**Koa.js** 以及更多。
- en: Similarly, for the frontend, the technologies include **Vue.js**, **React**,
    **Angular**, **Backbone**, and many more.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，对于前端，技术包括 **Vue.js**、**React**、**Angular**、**Backbone** 以及更多。
- en: For databases, the options, other than MongoDB, are **MySQL**, **PostgreSQL**,
    **Cassandra**, and others.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据库，除了 MongoDB 之外，还有 **MySQL**、**PostgreSQL**、**Cassandra** 以及其他选项。
- en: Introducing MEVN
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 MEVN
- en: JavaScript frameworks are rising day by day, both in terms of numbers and their
    usage. JavaScript used to be implemented only for the client-side logic but, over
    the years, it has seen significant growth and now it is used both on frontends
    and backends.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 框架正日益增多，无论是数量还是使用频率都在上升。JavaScript 最初仅用于客户端逻辑实现，但经过多年的发展，现在它既用于前端也用于后端。
- en: 'Express.js in the MEVN stack is used to manage all the backend-related stuff
    and Vue.js handles all the view-related stuff. The advantages of using an MEVN
    stack are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MEVN 堆栈中，Express.js 用于管理所有与后端相关的内容，Vue.js 处理所有与视图相关的内容。使用 MEVN 堆栈的优势如下：
- en: One language is used throughout the whole application, which means the only
    language you need to know is JavaScript
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个应用程序中只使用一种语言，这意味着你只需要了解 JavaScript。
- en: Understanding the client side and server side is very easy with one language
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用一种语言理解客户端和服务器端非常简单。
- en: Its very fast and reliable application with the non-blocking I/O of Node.js
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个非常快速且可靠的应用程序，具有 Node.js 的非阻塞 I/O。
- en: Its a great way to keep updated on the growing ecosystem of JavaScript
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一种很好的方式，可以保持对 JavaScript 不断增长的生态系统的了解。
- en: Installing Node.js
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Node.js
- en: To get started, we need to add all the dependencies that are required for an
    MEVN stack application. We can also refer to the documentation on the official
    website ([https://nodejs.org/](https://nodejs.org/)) for details on how to install
    Node.js in any operating system.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要添加 MEVN 堆栈应用程序所需的全部依赖项。我们还可以参考官方网站（[https://nodejs.org/](https://nodejs.org/)）上的文档，了解如何在任何操作系统上安装
    Node.js 的详细信息。
- en: Installing Node.js on macOS
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 macOS 上安装 Node.js
- en: 'There are two ways to install Node.js on macOS: using the installer or using
    the bash.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 上安装 Node.js 有两种方式：使用安装程序或使用 bash。
- en: Installing Node.js using the installer
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用安装程序安装 Node.js
- en: 'To install Node.js using the installer, perform the steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用安装程序安装 Node.js，请执行以下步骤：
- en: 'Install the installer: We can download the installer for macOS from the official
    website''s download page ([https://nodejs.org/en/#download](https://nodejs.org/en/#download)).
    We will be installing the latest `node` version, which is `10.0.0`. You can install
    any `node` version you want, but the application that we will be building in this
    book will require the `node` version `>= 6.0.0`. Run the installer and follow
    the instructions given. When we download and run the installer, we will be prompted
    with the following dialog box:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装安装程序：我们可以从官方网站的下载页面（[https://nodejs.org/en/#download](https://nodejs.org/en/#download)）下载
    macOS 的安装程序。我们将安装最新的 `node` 版本，即 `10.0.0`。你可以安装任何你想要的 `node` 版本，但我们在本书中构建的应用程序将需要
    `node` 版本 `>= 6.0.0`。运行安装程序并遵循给出的说明。当我们下载并运行安装程序时，我们将看到一个如下对话框：
- en: '![](img/a6868792-7dc7-4c0f-b1b6-2c5ae9bcf818.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a6868792-7dc7-4c0f-b1b6-2c5ae9bcf818.png)'
- en: 'Just hit Continue until the installation finishes. Once the installation is
    complete, we will be able to see the following dialog box:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击继续，直到安装完成。一旦安装完成，我们将能够看到以下对话框：
- en: '![](img/72da9af1-2959-4f12-93d2-cadf6a8edce8.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/72da9af1-2959-4f12-93d2-cadf6a8edce8.png)'
- en: Just hit Close and we will be done.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 只需点击关闭，我们就会完成。
- en: Installing Node.js using the bash
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用bash安装Node.js
- en: 'Node.js can be easily installed using Homebrew in macOS. Homebrew is a free
    and open source software package manager that is used to install software on macOS.
    I personally prefer Homebrew because it makes it very easy to install different
    software on Mac:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js可以很容易地使用macOS中的Homebrew安装。Homebrew是一个免费的开源软件包管理器，用于在macOS上安装软件。我个人更喜欢Homebrew，因为它使得在Mac上安装不同的软件变得非常容易：
- en: 'To install `Homebrew`, type the following command:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装`Homebrew`，请输入以下命令：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, use `Homebrew` to install Node.js with the following command:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用以下命令通过`Homebrew`安装Node.js：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installing Node.js on Linux
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上安装Node.js
- en: For Linux, we can either install the default distribution of Node.js or we can
    download it from NodeSource to use the latest version.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux，我们可以安装Node.js的默认发行版，或者我们可以从NodeSource下载它以使用最新版本。
- en: Installing Node.js from the default distribution
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从默认发行版安装Node.js
- en: 'To install from the default distribution, we can install Node.js on Linux by
    using this command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要从默认发行版安装，我们可以使用以下命令在Linux上安装Node.js：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Installing Node.js from NodeSource
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从NodeSource安装Node.js
- en: 'To install Node.js from NodeSource, perform the following steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要从NodeSource安装Node.js，请执行以下步骤：
- en: 'First download the latest version of Node.js from NodeSource:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先从NodeSource下载最新版本的Node.js：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, install Node.js with the command:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下命令安装Node.js：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `apt` is a short form of Advanced Package Tool that is used to install software
    on Debian and Linux distributions. Basically, this is equivalent to the Homebrew
    command in macOS.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`apt`是高级包工具的简称，用于在Debian和Linux发行版上安装软件。基本上，这相当于macOS中的Homebrew命令。'
- en: Installing Node.js on Windows
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上安装Node.js
- en: 'We can install Node.js on Windows by following these steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下步骤在Windows上安装Node.js：
- en: Download the Node.js installer from the official website ([https://nodejs.org/en/download/](https://nodejs.org/en/download/)).
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从官方网站下载Node.js安装程序（[https://nodejs.org/en/download/](https://nodejs.org/en/download/)）。
- en: Run the installer and follow the given instructions.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行安装程序并按照给定的说明操作。
- en: Click on the Close/Finish button.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击关闭/完成按钮。
- en: Installing Node.js for Windows via an installer is almost the same as on macOS.
    Once we download and run the installer, we will be prompted with a dialog box.
    Just click on Continue until the installation completes. When we finally see a
    dialog with a confirmation, we hit Close. Node.js will be installed!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 通过安装程序在Windows上安装Node.js几乎与在macOS上相同。一旦我们下载并运行安装程序，我们将看到一个对话框。只需点击继续，直到安装完成。当我们最终看到一个带有确认的对话框时，我们点击关闭。Node.js将被安装！
- en: Introducing NVM
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍NVM
- en: '**NVM** stands for **Node Version Manager**.NVM keeps track of all the `node`
    versions that we installed and also lets us switch between different versions.
    This is handy when the application that we built for one version of Node.js does
    not become compatible with the other versions, and we need that specific `node`
    version to make things work. NVM allows us to manage these versions easily. This
    is also very helpful when we need to upgrade or downgrade the `node` versions.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**NVM**代表**Node版本管理器**。NVM跟踪我们安装的所有`node`版本，并允许我们在不同版本之间切换。当我们为Node.js的一个版本构建的应用程序与另一个版本不兼容时，我们需要那个特定的`node`版本来使事情正常工作，这非常有用。NVM使我们能够轻松管理这些版本。当我们需要升级或降级`node`版本时，这也非常有帮助。'
- en: Installing Node.js from NVM
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从NVM安装Node.js
- en: 'To download NVM, use the following command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要下载NVM，请使用以下命令：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can also use the following command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们也可以使用以下命令：
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Check whether `nvm` has successfully installed using the following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查`nvm`是否已成功安装：
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, to install `node` via `nvm`, use this command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要使用`nvm`安装`node`，请使用以下命令：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Introducing npm
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍npm
- en: The npm is the acronym for **Node Package Manager**. Basically, it is a tool
    that takes care of all the packages that we install for Node.js. We can find all
    the existing packages on the official website ([https://www.npmjs.com/](https://www.npmjs.com/)).
    `npm` makes it easy for developers to keep their code updated and to reuse code
    shared by many other developers.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: npm 是 **Node Package Manager** 的缩写。基本上，它是一个负责我们为 Node.js 安装的所有包的工具。我们可以在官方网站
    ([https://www.npmjs.com/](https://www.npmjs.com/)) 上找到所有现有的包。`npm` 使开发者能够轻松地保持他们的代码更新，并重用许多其他开发者共享的代码。
- en: Developers are often confused by the terms package and modules. However, there
    is a clear distinction between these two.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者经常被包和模块这两个术语所困惑。然而，这两个术语之间有一个清晰的区分。
- en: Module
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块
- en: A module is something that can be loaded by Node.js with a `require` command
    and has a namespace. A module has a `package.json` file associated with it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 模块是可以通过 Node.js 的 `require` 命令加载并具有命名空间的东西。一个模块会关联一个 `package.json` 文件。
- en: Package
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包
- en: A `package` is just a file, or group of files, that is capable of functioning
    on its own. Every package also has a `package.json` file that contains all the
    metadata-related information that describes that package. A combination of modules
    makes up a `node` package.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 `package` 只是一个文件，或者一组文件，它能够独立运行。每个包也都有一个 `package.json` 文件，其中包含描述该包的所有相关元数据信息。模块的组合构成了一个
    `node` 包。
- en: Installing npm
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 npm
- en: 'When we install Node.js from the installer itself, `npm` is installed as a
    part of the `node`. We can check whether `npm` is installed or not by using the
    following command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们从安装程序本身安装 Node.js 时，`npm` 作为 `node` 的一部分被安装。我们可以通过使用以下命令来检查 `npm` 是否已安装：
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If `npm` is not installed, the command displays an error, whereas if installed,
    it just prints out the version of the installed `npm`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `npm` 未安装，命令会显示错误，而如果已安装，它只会打印出已安装的 `npm` 版本。
- en: Using npm
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 npm
- en: '`npm` is used to install different packages in our application. There are two
    ways to install packages: locally and globally. When we want to install a certain
    package specific to our application, we want to install that package locally.
    However, if we want to use a certain package as a command-line tool or be able
    to access it outside our application as well, we will want to install it as a
    global package.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`npm` 用于在我们的应用程序中安装不同的包。安装包有两种方式：本地和全局。当我们想要安装针对我们应用程序的特定包时，我们希望将其本地安装。然而，如果我们想要将某个包用作命令行工具或能够在我们应用程序外部访问它，我们则希望将其作为全局包安装。'
- en: Installing an npm package locally
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地安装 npm 包
- en: 'To install a package specific to our application only, we can use this command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅安装针对我们应用程序的特定包，我们可以使用以下命令：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Installing an npm package globally
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局安装 npm 包
- en: 'To install a package globally, we can use this command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要全局安装包，我们可以使用以下命令：
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Introducing package.json
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 `package.json`
- en: All the `node` packages and modules consist of a file called `package.json`.
    The main function of this file is to carry all the meta information associated
    with that package or module. A `package.json` file requires the content to be
    a JSON object.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的 `node` 包和模块都包含一个名为 `package.json` 的文件。这个文件的主要功能是携带与该包或模块相关的所有元信息。一个 `package.json`
    文件要求内容是一个 JSON 对象。
- en: 'As a minimum, a `package.json` file consists of the following things:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，一个 `package.json` 文件包含以下内容：
- en: '**name**:The name of the package. This is an important part of a `package.json`
    file as it is the main thing that distinguishes it from other packages and, hence,
    it is a required field.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**name**：包的名称。这是 `package.json` 文件的一个重要部分，因为它主要是区分其他包的东西，因此是一个必填字段。'
- en: '**version**:The version of the package. This is also a required field. To be
    able to install our package, the `name` and `version` fields need to be given.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**version**：包的版本。这也是一个必填字段。为了能够安装我们的包，需要提供 `name` 和 `version` 字段。'
- en: '**description**: A short summary of the package.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**description**：包的简要总结。'
- en: '**main**:This is the primary entry point used to look for the package. Basically,
    it is a file path, so when a user installs this package, it knows where to start
    looking for the modules.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**main**：这是用于查找包的主要入口点。基本上，它是一个文件路径，因此当用户安装此包时，它会知道从哪里开始查找模块。'
- en: '**scripts**:This field consists of commands that can be run for various states
    in the application. It has a key-value pair. The `key` is the event at which the
    command should be run and the `value` is the actual command.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脚本**：此字段包含可以在应用程序的各种状态下运行的命令。它由键值对组成。`key` 是命令应该运行的触发事件，而 `value` 是实际的命令。'
- en: '**author/contributors**: The author and contributors are the people. It contains
    an identifier of the person. An author is a single person, whereas contributors
    can be a group of people.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作者/贡献者**：作者和贡献者是人们。它包含一个个人标识符。作者是一个单独的人，而贡献者可以是一组人。'
- en: '**license**: The license field, when provided, makes it easy for the users
    to use our package. This helps in identifying the permissions and restrictions
    when using the package.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**许可协议**：当提供许可字段时，使用户能够轻松使用我们的包。这有助于在使用包时识别权限和限制。'
- en: Creating a package.json file
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 package.json 文件
- en: We can manually create a `package.json` file and specify the options ourselves,
    or we can use a command to create it interactively from the command prompt.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以手动创建一个 `package.json` 文件并自行指定选项，或者我们可以使用命令从命令提示符交互式地创建它。
- en: Let's go ahead and initialize a sample application with a `package.json` using
    `npm`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续使用 `npm` 初始化一个带有 `package.json` 的示例应用程序。
- en: 'First, create a folder in your projects directory using the command:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，使用以下命令在项目目录中创建一个文件夹：
- en: '[PRE12]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To create a `package.json` file, run the following command in the application
    that we created:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个 `package.json` 文件，请在我们创建的应用程序中运行以下命令：
- en: '[PRE13]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Running this command will ask us a bunch of questions that we can answer interactively
    from the command line:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令将向我们提出一系列问题，我们可以通过命令行交互式地回答这些问题：
- en: '![](img/9242cbf3-4880-4130-897e-cbd9b258a49b.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9242cbf3-4880-4130-897e-cbd9b258a49b.png)'
- en: 'In the end, it will create a `package.json` file, which will have the following
    content:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它将创建一个 `package.json` 文件，其中将包含以下内容：
- en: '![](img/703c36f8-ede0-4290-bd40-25d0788cd7d4.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/703c36f8-ede0-4290-bd40-25d0788cd7d4.png)'
- en: Installing MongoDB
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MongoDB
- en: MongoDB is the first part of the technology in the MEVN stack. MongoDB is a
    free and open source document-based database published under a GNU license. It
    is a NoSQL database, meaning it is a non-relational database. Unlike relational
    databases, which use tables and rows to represent data, MongoDB uses collections
    and documents. MongoDB represents the data as a collection of JSON documents. It
    provides us with the flexibility to add fields in whatever way we want. Each document
    in a single collection can have a totally different structure. Aside from adding
    fields, it also provides the flexibility to change the fields from document to
    document in whatever way we want, something that is a cumbersome task in relational
    databases.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 是 MEVN 技术栈中的第一个部分。MongoDB 是一个在 GNU 许可下发布的免费和开源文档型数据库。它是一个 NoSQL 数据库，这意味着它是一个非关系型数据库。与使用表和行来表示数据的关系型数据库不同，MongoDB
    使用集合和文档。MongoDB 将数据表示为 JSON 文档的集合。它为我们提供了以任何我们想要的方式添加字段的灵活性。单个集合中的每个文档都可以有完全不同的结构。除了添加字段外，它还提供了以任何我们想要的方式从文档到文档更改字段的灵活性，这在关系型数据库中是一个繁琐的任务。
- en: The benefits of MongoDB compared to Relational Database Management Systems (RDBMS)
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与关系型数据库管理系统（RDBMS）相比，MongoDB 的优势
- en: 'MongoDB offers a lot of benefits compared to Relational Database Management
    Systems:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 与关系型数据库管理系统（RDBMS）相比，MongoDB 提供了许多好处：
- en: 'Schema-less architecture: MongoDB does not require us to design a specific
    schema for its collections. A schema for one document can vary, with another document
    being totally different.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无模式架构：MongoDB 不要求我们为其集合设计特定的模式。一个文档的模式可以不同，另一个文档则可能完全不同。
- en: Each document is stored in a JSON-structured format.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个文档都存储在 JSON 结构化格式中。
- en: Querying and Indexing the MongoDB is very easy.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询和索引 MongoDB 非常容易。
- en: MongoDB is a free and open source program.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB 是一个免费和开源的程序。
- en: Installing MongoDB on macOS
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 macOS 上安装 MongoDB
- en: There are two ways to install MongoDB. We can either download it from the official
    MongoDB website ([https://www.mongodb.org/downloads#production](https://www.mongodb.org/downloads#production))
    or we can use Homebrew to install it.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 MongoDB 有两种方式。我们可以从官方 MongoDB 网站下载它（[https://www.mongodb.org/downloads#production](https://www.mongodb.org/downloads#production)），或者我们可以使用
    Homebrew 来安装它。
- en: Installing MongoDB by downloading
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过下载安装 MongoDB
- en: Download the version of MongoDB you want from [https://www.mongodb.com/download-center#production.](https://www.mongodb.com/download-center#production)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.mongodb.com/download-center#production](https://www.mongodb.com/download-center#production)
    下载您想要的 MongoDB 版本。
- en: 'Copy the downloaded gzipped to the root folder. Adding it to the root folder
    will allow us to use it globally:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的 gzipped 文件复制到根目录。将其添加到根目录将允许我们全局使用它：
- en: '[PRE14]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Unzip the gzipped file:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压 gzipped 文件：
- en: '[PRE15]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a directory that will be used by Mongo to save data:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录，该目录将由 Mongo 用于保存数据：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, to check if the installation was done successfully, start the Mongo server:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了检查安装是否成功，启动 Mongo 服务器：
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Here, we have successfully installed and started the `mongo` server.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经成功安装并启动了 `mongo` 服务器。
- en: Installing MongoDB via Homebrew
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 Homebrew 安装 MongoDB
- en: 'To install MongoDB in macOS from Homebrew, follow these steps:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 macOS 上使用 Homebrew 安装 MongoDB，请按照以下步骤操作：
- en: 'With Homebrew, we just need a single command to install MongoDB:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Homebrew，我们只需要一个命令来安装 MongoDB：
- en: '[PRE18]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create a directory that will be used by Mongo to save data:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录，该目录将由 Mongo 用于保存数据：
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Start the Mongo server:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Mongo 服务器：
- en: '[PRE20]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Hence, MongoDB is finally installed.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，MongoDB 最终已安装。
- en: Installing MongoDB on Linux
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Linux 上安装 MongoDB
- en: 'There are two ways to install MongoDB on Linux as well: we can either use the `apt-get`
    command or we can download the tarball and extract it.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上安装 MongoDB 也有两种方式：我们可以使用 `apt-get` 命令，或者我们可以下载 tarball 并解压它。
- en: Installing MongoDB using apt-get
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 apt-get 安装 MongoDB
- en: 'To install MongoDB using `apt-get`, perform the following steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `apt-get` 安装 MongoDB，请执行以下步骤：
- en: 'Run the following command to install the latest version of MongoDB:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以安装 MongoDB 的最新版本：
- en: '[PRE21]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Verify if `mongod` has been successfully installed by running the command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令来验证 `mongod` 是否已成功安装：
- en: '[PRE22]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To start the `mongod` process, execute the following command in the Terminal:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动 `mongod` 进程，请在终端中执行以下命令：
- en: '[PRE23]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'See if the log file has a line that denotes that the MongoDB connection was
    made successfully:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看日志文件是否有表示 MongoDB 连接成功建立的行：
- en: '[PRE24]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To stop the `mongod` process:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要停止 `mongod` 进程：
- en: '[PRE25]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To restart the `mongod` process:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要重新启动 `mongod` 进程：
- en: '[PRE26]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Installing MongoDB using tarball
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 tarball 安装 MongoDB
- en: 'Download the binary file from [https://www.mongodb.com/download-center?_ga=2.230171226.752000573.1511359743-2029118384.1508567417](https://www.mongodb.com/download-center?_ga=2.230171226.752000573.1511359743-2029118384.1508567417). Use
    this command:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.mongodb.com/download-center?_ga=2.230171226.752000573.1511359743-2029118384.1508567417](https://www.mongodb.com/download-center?_ga=2.230171226.752000573.1511359743-2029118384.1508567417)
    下载二进制文件。使用以下命令：
- en: '[PRE27]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Extract the downloaded files:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压下载的文件：
- en: '[PRE28]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Copy and extract to the target directory:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并解压到目标目录：
- en: '[PRE29]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Set the location of the binary in the PATH variable:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 PATH 变量中设置二进制文件的位置：
- en: '[PRE30]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create a directory to be used by Mongo to store all database-related data:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录，供 Mongo 用于存储所有数据库相关数据：
- en: '[PRE31]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To start the `mongod` process:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动 `mongod` 进程：
- en: '[PRE32]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Installing MongoDB on Windows
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 MongoDB
- en: Installing MongoDB from the installer is as easy as installing any other software
    on Windows. Just like we did for Node.js, we can download the MongoDB installer
    for Windows from the official website ([https://www.mongodb.com/download-center#atlas](https://www.mongodb.com/download-center#atlas)).
    This will download an executable file.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 从安装程序安装 MongoDB 与在 Windows 上安装任何其他软件一样简单。就像我们为 Node.js 所做的那样，我们可以从官方网站 ([https://www.mongodb.com/download-center#atlas](https://www.mongodb.com/download-center#atlas))
    下载 MongoDB 安装程序。这将下载一个可执行文件。
- en: Once the executable file is downloaded, run the installer and follow the instructions.
    Just go through the dialog box, reading the instructions carefully. When the installation
    is complete, just click on the Close button and you are done.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦可执行文件下载完成，运行安装程序并按照说明操作。只需浏览对话框，仔细阅读说明。安装完成后，只需点击“关闭”按钮即可完成。
- en: Using MongoDB
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MongoDB
- en: 'Let''s dive a little deeper into MongoDB. As mentioned earlier as well, Mongo
    consists of a database with collections (tables/groups of data) and documents
    (rows/entries/records). We will use a few commands provided by MongoDB to create,
    update, and delete the documents:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解 MongoDB。正如之前提到的，Mongo 包含一个数据库，其中包含集合（表格/数据组）和文档（行/条目/记录）。我们将使用 MongoDB
    提供的一些命令来创建、更新和删除文档：
- en: 'First, start the Mongo server with this command:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，使用以下命令启动 Mongo 服务器：
- en: '[PRE33]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Then, open the Mongo shell with this command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用以下命令打开 Mongo shell：
- en: '[PRE34]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Creating or using a MongoDB database
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建或使用 MongoDB 数据库
- en: This is the place where we can see all of our databases, collections, and documents.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们可以看到所有数据库、集合和文档的地方。
- en: 'To display the list of databases that we have, we can use the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示我们拥有的数据库列表，我们可以使用以下命令：
- en: '[PRE35]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, this command should list all the existing databases. To use the database
    that we want, we can simply run this command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，此命令应该列出所有现有数据库。要使用我们想要的数据库，我们可以简单地运行此命令：
- en: '[PRE36]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: But if there is no database listed, don't worry. MongoDB provides us with a
    functionality where, when we run the preceding command, even if that database
    does not exist, it will automatically create a database with the given name for
    us.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果没有列出数据库，请不要担心。MongoDB为我们提供了一个功能，当我们运行前面的命令时，即使该数据库不存在，它也会自动为我们创建一个具有给定名称的数据库。
- en: 'So, if we already have a database that we want to use, we simply run that command
    and, if there are no databases yet, we create one using this command:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们已经有一个想要使用的数据库，我们只需运行该命令，如果没有数据库，我们将使用此命令创建一个：
- en: '[PRE37]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: When we run this command, a database named `posts` will be created.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行此命令时，将创建一个名为`posts`的数据库。
- en: Creating documents
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建文档
- en: Now, let's quickly review the commands used in MongoDB. The `insert` command
    is used to create new documents in a collection in MongoDB. Let's add a new record
    to the database that we just created called `posts`.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速回顾一下在MongoDB中使用的命令。`insert`命令用于在MongoDB中的集合中创建新文档。让我们向刚刚创建的名为`posts`的数据库中添加一条新记录。
- en: Here as well, in order to add a document to a collection, we first need a collection,
    which we don't have yet. But MongoDB allows us to create a collection easily by
    running the `insert` command. Again, if the collection exists, it will add the
    document to the given collection and, if the collection does not exist, it will
    simply create a new collection.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里也是如此，为了向集合中添加文档，我们首先需要一个集合，我们还没有。但是MongoDB允许我们通过运行`insert`命令轻松创建集合。同样，如果集合存在，它将文档添加到指定的集合中，如果集合不存在，它将简单地创建一个新的集合。
- en: 'Now, in the Mongo shell, run the following command:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在Mongo shell中，运行以下命令：
- en: '[PRE38]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The command will create a new collection called `posts` in the `posts` database.
    The output of this command is:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将在`posts`数据库中创建一个名为`posts`的新集合。此命令的输出是：
- en: '![](img/b8a7bc64-056f-4843-ad70-fa136b03b44e.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8a7bc64-056f-4843-ad70-fa136b03b44e.png)'
- en: It will return a JSON object that has the ID of the document that we just created
    in the `insertedId` key and a flag that the event was received as `acknowledged`.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 它将返回一个JSON对象，其中包含我们在`insertedId`键中创建的文档的ID，以及事件被接收为`acknowledged`的标志。
- en: Fetching documents
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取文档
- en: This command is used when we want to fetch the records from a collection.  We
    can either fetch all the records or a specific document by passing parameters
    as well. We can add a few more documents to the `posts` database to better learn
    the command
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令用于当我们想要从一个集合中获取记录时。我们可以通过传递参数来获取所有记录或特定文档。我们可以向`posts`数据库添加一些更多文档，以便更好地学习该命令
- en: Fetching all documents
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取所有文档
- en: 'To fetch all the records from the `posts` collection, run the following command:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取`posts`集合中的所有记录，请运行以下命令：
- en: '[PRE39]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'This will return all the documents that we have in the `posts` collection:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回`posts`集合中我们拥有的所有文档：
- en: '![](img/ace2e83f-51d0-47e3-acb3-5fbdf1882add.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ace2e83f-51d0-47e3-acb3-5fbdf1882add.png)'
- en: Fetching a specific document
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取特定文档
- en: 'Let''s find a post where the title is `MEVN`. To do that, we can run:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们找到一个标题为`MEVN`的帖子。为此，我们可以运行：
- en: '[PRE40]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This command will return only those documents whose title is `MEVN`:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将只返回标题为`MEVN`的文档：
- en: '![](img/d46f10fd-7826-4822-94c0-7ca9dcd84c9c.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d46f10fd-7826-4822-94c0-7ca9dcd84c9c.png)'
- en: Updating documents
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新文档
- en: 'This command is used when we want to update a certain part of a collection.
    Let''s say we want to update the description of a post whose title is `Vue.js`;
    we can run the following command:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令用于当我们想要更新集合的某个部分时。比如说，我们想要更新标题为`Vue.js`的帖子的描述；我们可以运行以下命令：
- en: '[PRE41]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output for this command will be:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的输出将是：
- en: '![](img/c5873c55-7a64-47ee-9b04-999a1ba0b4f2.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5873c55-7a64-47ee-9b04-999a1ba0b4f2.png)'
- en: We can see here that the `matchedCount` is `1`, which means that as regards
    the parameter that we sent to update the record with the title `MEVN`, there was
    one document in the `posts` collection that matched the query.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这里`matchedCount`是`1`，这意味着在`posts`集合中有一个文档与我们要更新的标题`MEVN`的查询参数相匹配。
- en: The other key called `modifiedCount` gives us the count of the documents that
    got updated.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关键值`modifiedCount`给出了更新文档的数量。
- en: Deleting documents
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除文档
- en: The `delete` command is used to remove documents from a collection. There are
    several ways to delete a document from MongoDB.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`delete`命令用于从集合中删除文档。从MongoDB中删除文档有几种方法。'
- en: Deleting documents that match a given criteria
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除符合给定条件的文档
- en: 'To remove all the documents with certain conditions, we can run:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除具有特定条件的所有文档，我们可以运行：
- en: '[PRE42]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This command will remove all the documents from the `posts` collection whose
    titles are `MEVN`.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从`posts`集合中删除所有标题为`MEVN`的文档。
- en: Deleting a single document that matches the given criteria
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除符合给定条件的单个文档
- en: 'To delete only the first record that satisfies the given criteria, we can just
    use:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除仅满足给定条件的第一个记录，我们只需使用：
- en: '[PRE43]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Deleting all records
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除所有记录
- en: 'To delete all the records from a collection, we can use:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除集合中的所有记录，我们可以使用：
- en: '[PRE44]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Introducing Git
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Git
- en: Git is a version control system for tracking the code changes in our application.
    It is a free and open source software used to track and coordinate multiple users
    when building an application.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Git是我们应用程序中跟踪代码变更的版本控制系统。它是一个免费的开源软件，用于在构建应用程序时跟踪和协调多个用户。
- en: To start using this software, we need to install it first. There is a very easy
    way to install it on every OS.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用此软件，我们首先需要安装它。在每种操作系统上安装它都非常简单。
- en: Installing Git on Windows
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上安装Git
- en: We can find the installer for Git for Windows at [https://gitforwindows.org/.](https://gitforwindows.org/)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在[https://gitforwindows.org/](https://gitforwindows.org/)找到Git for Windows的安装程序。
- en: Download the executable installer file for Windows and follow the step-by-step
    instructions accordingly.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 下载Windows的可执行安装文件并按照相应的步骤进行操作。
- en: Installing Git on Mac
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Mac上安装Git
- en: 'We can easily install Git on Mac via Homebrew. Just type the following command
    in the command line to install Git on Mac:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松通过Homebrew在Mac上安装Git。只需在命令行中输入以下命令即可在Mac上安装Git：
- en: '[PRE45]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Installing Git on Linux
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上安装Git
- en: 'Installing Git in Linux is as easy as installing Git on macOS. Just type the
    following command and hit Enter to install Git on Linux:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上安装Git与在macOS上安装Git一样简单。只需在命令行中输入以下命令并按回车键即可在Linux上安装Git：
- en: '[PRE46]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Introducing GitHub
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍GitHub
- en: GitHub is a version control service. It is a source code management tool specifically
    designed to track changes to our code. GitHub also provides features of social
    networking, such as adding comments, and displaying feeds, which makes it even
    more powerful because multiple developers can collaborate at the same time in
    a single application.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub是一个版本控制系统。它是一个专门设计用来跟踪代码变更的源代码管理工具。GitHub还提供了社交网络功能，例如添加评论和显示动态，这使得它更加强大，因为多个开发者可以在单个应用程序中同时协作。
- en: Why GitHub?
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择GitHub？
- en: 'GitHub is a savior for software engineers. There are several advantages that
    GitHub provides that make it worthwhile to use. A few benefits that are provided
    by GitHub are listed here:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub是软件工程师的救星。GitHub提供了许多优势，使其值得使用。以下是GitHub提供的一些好处：
- en: '**Tracking code changes**: GitHub helps track changes to the code, which means
    it maintains a history of our code. This enables us to view revisions of our code
    base made during any time period.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跟踪代码变更**：GitHub帮助跟踪代码变更，这意味着它维护了我们代码的历史记录。这使得我们能够查看在任何时间段内对代码库进行的修订。'
- en: '**Documentation**: GitHub provides features for adding documentation, Wikis,
    and so on to our code bases, and these can be written using the simple markdown
    language.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：GitHub为我们提供了添加文档、维基等功能，这些可以使用简单的Markdown语言编写。'
- en: '**Graphs and reporting**: GitHub provides insight into various metrics, including
    how many additions and deletions were made to the code, who the top contributors
    were, and who has the most commits.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图表和报告**：GitHub提供了对各种指标的洞察，包括对代码进行了多少次添加和删除，谁是主要贡献者，以及谁提交最多。'
- en: '**Bug tracking**: Since GitHub tracks all the activities made at every point
    in time, when something breaks, we can easily backtrack to the point that broke
    the code. We can also integrate third-party tools such as Travis for continuous
    integration, which helps us to track and identify bugs easily.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误跟踪**：由于GitHub跟踪每个时间点的所有活动，当出现问题时，我们可以轻松回溯到导致代码中断的点。我们还可以集成第三方工具，如Travis进行持续集成，这有助于我们轻松跟踪和识别错误。'
- en: '**Collaboration is easy**: Github tracks every activity done by every collaborator
    working on the project and also sends email notifications about the same. It also
    provides social media features, such as feeds, comments, emojis, and mentions.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作简单**：GitHub跟踪项目中每个协作者的所有活动，并为此发送电子邮件通知。它还提供社交媒体功能，如动态、评论、表情符号和提及。'
- en: '**Hosting our own website**: We can also host our own website with GitHub using
    a feature called GitHub pages. We just need to create a repo for our own project
    and host it using Github pages, which will then make the website applicable to
    the URL: `https://<username>.github.io`.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管自己的网站**：我们还可以使用GitHub的GitHub Pages功能托管自己的网站。我们只需要为我们的项目创建一个仓库，并使用GitHub
    Pages托管它，这样网站就会适用于URL：`https://<username>.github.io`。'
- en: Using GitHub
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GitHub
- en: 'GitHub is very easy to use. However, to get started using GitHub, we need to least
    know about a few terminologies that are used in GitHub:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub非常易于使用。然而，要开始使用GitHub，我们至少需要了解一些在GitHub中使用的术语：
- en: '**Repository/Repo**:  A repository is a place where all of our code bases are
    stored. A repository can be either private or public.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仓库/Repo**：仓库是我们所有代码库存储的地方。仓库可以是私有的或公共的。'
- en: '**ssh-key**:  ssh-key is a way to authorize in GitHub. It stores our identities.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ssh-key**：ssh-key是GitHub中授权的一种方式。它存储我们的身份信息。'
- en: '**Branch**:  A branch can be defined as multiple states of a repository. The
    primary branch of any repository is the `master` branch. Multiple users can work in
    parallel on different branches.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分支**：分支可以被定义为仓库的多个状态。任何仓库的主要分支是`master`分支。多个用户可以在不同的分支上并行工作。'
- en: '**Commit**:  A commit makes it easy to distinguish between different states
    of a file at a given time. When we make a commit, a unique identifier is assigned
    to that commit so what it''s easy to check what changes were made in that commit.
    A commit takes a message as a parameter to describe the type of change that is
    being made.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提交**：提交使得在给定时间区分文件的不同状态变得容易。当我们提交时，会为该提交分配一个唯一的标识符，这样我们就可以轻松检查在该提交中做了哪些更改。提交以消息作为参数，描述正在进行的更改类型。'
- en: '**Push**:  A push sends the commit that we made back to our repository.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推送**：推送将我们做出的提交发送回我们的仓库。'
- en: '**Pull**:  As opposed to pushing, pulling fetches the commit from the remote
    repository to our local project.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拉取**：与推送相反，拉取是从远程仓库将提交拉取到我们的本地项目。'
- en: '**Merge**:  Merging is basically done between multiple branches. It is used
    to apply changes from one branch to another.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合并**：合并基本上是在多个分支之间进行的。它用于将一个分支的更改应用到另一个分支。'
- en: '**Pull requests**:  Creating a `pull request` is basically sending the changes
    that we made to our code base for the approval of other developers. We can start
    discussions on a `pull request` to check the quality of code and ensure that the
    changes don''t break anything.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拉取请求**：创建一个`pull request`基本上是将我们对我们代码库所做的更改发送给其他开发者的审批。我们可以在`pull request`上开始讨论，以检查代码质量并确保更改不会破坏任何东西。'
- en: To learn more about the vocabulary used in GitHub, visit [https://help.github.com/articles/github-glossary/](https://help.github.com/articles/github-glossary/).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于GitHub中使用的词汇，请访问[https://help.github.com/articles/github-glossary/](https://help.github.com/articles/github-glossary/)。
- en: Setting up a GitHub repository
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置GitHub仓库
- en: 'Now that we know the basics of GitHub, let''s get started creating a GitHub
    repository for the project we want to build:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '现在我们已经了解了GitHub的基础知识，让我们开始创建我们想要构建的项目GitHub仓库： '
- en: 'First, create a folder for the application in the root folder. Let''s name
    this application `blog`:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在根目录下为应用程序创建一个文件夹。让我们把这个应用程序命名为`blog`：
- en: '[PRE47]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Create an account on GitHub at [https://github.com/](https://github.com/).
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://github.com/](https://github.com/)上创建一个GitHub账户。
- en: 'Go to your profile. Under the Repositories tab, click New as follows:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您的个人资料。在“仓库”选项卡下，点击“新建”，如下所示：
- en: '![](img/a167a04d-7d3a-48e7-a0f0-c5cb1553e087.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a167a04d-7d3a-48e7-a0f0-c5cb1553e087.png)'
- en: Name this repository `blog`.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此仓库命名为`blog`。
- en: 'Now, on the Terminal, go to the location of this application and initialize
    an empty repository with this command:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在终端中，转到此应用程序的位置，并使用以下命令初始化一个空的仓库：
- en: '[PRE48]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Now, let''s create a file called `README.md` and write a description for the
    application and then save it:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个名为`README.md`的文件，为应用程序编写描述，然后保存它：
- en: '[PRE49]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Add this file to GitHub:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件添加到GitHub：
- en: '[PRE50]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Add a `commit` so that we have a history of this change of code:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个`提交`，以便我们有这个代码更改的历史记录：
- en: '[PRE51]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now, to link the local application with the `remote` repository in GitHub,
    use this command:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了将本地应用程序与GitHub中的`远程`仓库链接起来，请使用以下命令：
- en: '[PRE52]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Finally, we need to `push` this `commit` to GitHub:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要将这个`提交``push`到GitHub：
- en: '[PRE53]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'When it''s done, visit the GitHub repository where you will find a history
    of the commits made to our repository, as follows:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，访问GitHub仓库，在那里你可以找到对我们仓库所做的提交历史，如下所示：
- en: '![](img/95a1bce9-e60d-484a-a21c-f435eb23d0fb.png)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/95a1bce9-e60d-484a-a21c-f435eb23d0fb.png)'
- en: That's it. Now, when we want to write changes, we will first create a branch
    and push the changes to the branch.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。现在，当我们想要编写更改时，我们首先会创建一个分支，然后将更改`push`到该分支。
- en: Summary
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned what an MEVN stack is. We learned what Node.js,
    npm, and MongoDB, are as well as receiving a brief summary of GitHub and how it
    helps software engineers for easy access to code history and collaboration.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了MEVN栈是什么。我们还了解了Node.js、npm和MongoDB是什么，以及GitHub的简要概述，以及它是如何帮助软件工程师方便地访问代码历史和协作的。
- en: In the next chapter, we will learn more about Node.js and Node.js modules. We
    will learn about the MVC architecture and how to implement it by building an application
    with Express.js.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习更多关于Node.js和Node.js模块的知识。我们将了解MVC架构以及如何通过使用Express.js构建应用程序来实现它。
