- en: Chapter 3. Running Ionic Apps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：运行Ionic应用程序
- en: 'In this chapter, we are going to learn how to test and run our Ionic application
    using various methods. We will start by learning to test our application using
    the simplest Ionic technique: by serving our app to the Chrome browser using the
    `ionic serve` command. We will then go ahead and use the Ionic view mobile app
    for iOS/Android to see how we can test our application on a mobile device. Lastly,
    we will learn to run and deploy our Ionic application to a mobile device using
    the traditional build system of the native SDKs of our respective platforms.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用各种方法测试和运行我们的Ionic应用程序。我们将从学习使用最简单的Ionic技术开始：通过使用`ionic serve`命令将我们的应用程序部署到Chrome浏览器。然后，我们将继续使用Ionic
    view移动应用程序（iOS/Android）来了解我们如何在移动设备上测试我们的应用程序。最后，我们将学习如何使用我们各自平台的原生SDK的传统构建系统运行和部署我们的Ionic应用程序。
- en: Running our todo app
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行我们的待办事项应用程序
- en: In the last chapter, we created our first Ionic application using the Ionic
    blank template. We worked on the application further, and made a to-do list app.
    We wrote some Angular code and had some initial exposure to some Ionic code. However,
    we did not get to see our application in action. There are many ways by which
    we can run an Ionic app, and the first technique we will be learning is the `ionic
    serve` technique.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们使用Ionic空白模板创建了我们的第一个Ionic应用程序。我们进一步工作于该应用程序，并制作了一个待办事项列表应用程序。我们编写了一些Angular代码，并对一些Ionic代码有了一些初步的了解。然而，我们没有看到我们的应用程序在运行。我们可以通过许多方式运行Ionic应用程序，我们将学习的第一种技术是`ionic
    serve`技术。
- en: The ionic serve technique
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ionic serve技术
- en: The `ionic serve` technique is the simplest way to see your app in action. It
    requires no extra setup after the Ionic CLI, and only requires you to have a web
    browser. We are now going to test our `todo` application, which we created in
    the preceding chapter using the `ionic serve` technique. To test your application
    with this technique, simply open a new command-line window and follow the following
    steps.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`ionic serve`技术是查看您的应用程序运行情况的最简单方法。在安装Ionic CLI之后，不需要额外的设置，只需要您有一个网络浏览器。我们现在将使用`ionic
    serve`技术测试我们创建的`todo`应用程序，该应用程序是在上一章中创建的。要使用此技术测试您的应用程序，只需打开一个新的命令行窗口并按照以下步骤操作。'
- en: Tip
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Browser choice**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**浏览器选择**'
- en: 'It is advisable that you use Google Chrome as your default browser. Google
    Chrome has some very powerful development tools and all exercises in this book
    expect that you have Google Chrome installed as your default browser. You can
    download a copy of Google Chrome by visiting this URL: [http://www.google.com/chrome](http://www.google.com/chrome).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您使用Google Chrome作为默认浏览器。Google Chrome有一些非常强大的开发工具，并且本书中的所有练习都假设您已经安装了Google
    Chrome作为默认浏览器。您可以通过访问此URL下载Google Chrome的副本：[http://www.google.com/chrome](http://www.google.com/chrome)。
- en: From your terminal, navigate to the root directory of your Ionic `todo` application.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的终端导航到你的Ionic `todo`应用程序的根目录。
- en: 'Run the following command in your command-line window:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的命令行窗口中运行以下命令：
- en: '[PRE0]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In case you are prompted to select an IP address, you can select any one from
    the list prompted and press *Enter* to initiate.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您被提示选择一个IP地址，您可以从提示的列表中选择任何一个，然后按*Enter*键启动。
- en: If you followed the steps correctly, you should see a browser window come up
    with your app running in it. You will also notice that the command-line window
    where you typed the command has some things going on within it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正确地遵循了步骤，你应该会看到一个浏览器窗口弹出，其中运行着你的应用程序。你也会注意到，你输入命令的命令行窗口中正在进行一些操作。
- en: With this, we have successfully served our application to the browser and can
    test our Ionic application like any other web application on Chrome. The great
    thing about this technique is the fact that no extra setup is required, and all
    you need is just Ionic CLI and the Chrome browser installed on your machine.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们已经成功地将我们的应用程序部署到浏览器中，并且可以像测试其他任何Chrome上的Web应用程序一样测试我们的Ionic应用程序。这个技术的优点是，不需要额外的设置，你只需要在你的机器上安装Ionic
    CLI和Chrome浏览器。
- en: Emulating with Chrome
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Chrome进行模拟
- en: Even though our application is served on the Chrome browser, it is fullscreen
    and is served like a normal fullscreen web app. This is not ideal for us, as our
    application is a mobile application. Luckily, Chrome has a neat emulation tool
    that lets you emulate your application as if it were running on a normal mobile
    phone.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们的应用程序在Chrome浏览器上运行，但它全屏显示，就像一个普通的全屏Web应用程序。这对我们来说并不理想，因为我们的应用程序是一个移动应用程序。幸运的是，Chrome有一个很棒的模拟工具，它允许你模拟你的应用程序，就像它在普通手机上运行一样。
- en: To use Chrome's emulation feature, follow the following steps.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Chrome的模拟功能，请按照以下步骤操作。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: These steps assume that you already have your app served on the Chrome browser
    and you are currently on the tab that it is served on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤假设您已经将您的应用在Chrome浏览器上运行，并且您当前位于该应用运行的标签页上。
- en: Click the Chrome menu icon, as shown in the following screenshot:![Emulating
    with Chrome](img/00011.jpeg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击如图所示的Chrome菜单图标：![使用Chrome模拟](img/00011.jpeg)
- en: Scroll down to the **More Tools** options and select the **Developer Tools**
    option, as shown in the following screenshot:![Emulating with Chrome](img/00012.jpeg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**更多工具**选项并选择**开发者工具**选项，如图所示：![使用Chrome模拟](img/00012.jpeg)
- en: Click the **Device Mode** toggle icon, as shown in the following screenshot:![Emulating
    with Chrome](img/00013.jpeg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击如图所示的**设备模式**切换图标：![使用Chrome模拟](img/00013.jpeg)
- en: This should bring up the Chrome emulator window with your app running on it.
    You might need to refresh the page for it to render the app correctly. If you
    have a look at the window, you will see a dropdown menu on the upper-left corner
    that has a list of devices that you can emulate. I normally recommend using the
    Nexus 5 for testing Android and the iPhone 6 for iOS. The reason for this is that
    the resolution of the Nexus 5 eclipses many of the Android phones available today
    so using it as a basis makes a lot of sense. The same goes for the iPhone 6 as
    well; since it is Apple's flagship device at the time of writing, it makes sense
    to use it for emulation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会弹出一个包含您应用运行的Chrome模拟器窗口。您可能需要刷新页面以正确渲染应用。如果您查看窗口，您将看到一个位于左上角的下拉菜单，其中列出了您可以模拟的设备。我通常推荐使用Nexus
    5来测试Android，以及使用iPhone 6来测试iOS。这是因为Nexus 5的分辨率超过了今天许多可用的Android手机，因此将其作为基础是非常有意义的。同样，对于iPhone
    6也是如此；由于它是撰写本文时的苹果旗舰设备，因此用于模拟也是合理的。
- en: '![Emulating with Chrome](img/00014.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用Chrome模拟](img/00014.jpeg)'
- en: You can fully interact with your app as if it were running in an emulator. You
    also have the full power of the Chrome developer tools to inspect elements and
    see how the code of your application is represented. Why don't you have a go with
    your app and try and add some to-do list items and see them populating.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以像在模拟器中运行一样完全与您的应用交互。您还拥有Chrome开发者工具的全部功能，可以检查元素并查看您的应用程序代码是如何表示的。为什么不尝试使用您的应用并添加一些待办事项列表项，看看它们是如何填充的呢。
- en: Ionic serve labs
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ionic serve labs
- en: There is another flavor in the `ionic serve` technique that lets us see our
    app the way it looks on both iOS and Android simultaneously. This technique is
    called the Ionic labs technique.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`ionic serve`技术中还有一种风味，让我们能够同时看到我们的应用在iOS和Android上的样子。这种技术被称为Ionic labs技术。'
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This technique should only be used to view your app and is not intended to be
    used for debugging.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术应仅用于查看应用，并不打算用于调试。
- en: To view your app using the Ionic labs technique, simply follow the following
    steps.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Ionic labs技术查看您的应用，请按照以下步骤操作。
- en: Tip
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you are already viewing your app using the `ionic serve` technique, simply
    press *Q* to quit the current session or close the command-line window and open
    a new one.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经使用`ionic serve`技术查看您的应用，只需按*Q*键退出当前会话或关闭命令行窗口，然后打开一个新的窗口。
- en: Make sure you are in the root folder of your project.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您位于项目的根目录中。
- en: 'Enter the following command in your terminal:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的终端中输入以下命令：
- en: '[PRE1]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Ionic serve labs](img/00015.jpeg)'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Ionic serve labs](img/00015.jpeg)'
- en: Running this should bring up a new browser window the same way as it did the
    first time when we ran the `ionic serve` command; only that this time, you will
    see two emulations for your app, one for iOS and one for Android, as shown in
    the preceding screenshot. This is a really nice way to see your app running in
    action on both platforms simultaneously. Ionic has a term called **Continuum**
    which you will see in action in later chapters. This phenomenon refers to the
    fact that certain elements look different on different platforms. For example,
    tabs on iOS are normally placed on the bottom, while on Android, they are traditionally
    positioned on the top. Ionic offers us these features out of the box with a further
    way to override these behaviors. The `ionic serve` technique is a great way to
    see the features like the tab positioned differently on different platforms simultaneously.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令应该会像第一次运行 `ionic serve` 命令时一样弹出一个新的浏览器窗口；只是这次，你会看到两个针对你的应用的模拟，一个用于 iOS，一个用于
    Android，如前一张截图所示。这是同时查看你的应用在两个平台上运行的一个非常好的方式。Ionic 有一个术语叫做 **Continuum**，你将在后面的章节中看到它的实际应用。这种现象指的是某些元素在不同平台上看起来不同。例如，iOS
    上的标签通常放在底部，而 Android 上则传统地放在顶部。Ionic 提供了这些功能，并提供了一种进一步覆盖这些行为的方式。`ionic serve`
    技巧是同时查看像在不同平台上标签位置不同的功能的一个很好的方法。
- en: The Ionic view
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: The Ionic view
- en: Another technique to view an Ionic app is by using the Ionic view application.
    The Ionic view app is a mobile application created by Ionic with Ionic framework
    available on iOS and Android. The application is used to view any Ionic application
    you are developing and works hand-in-hand with the Ionic IO platform. The Ionic
    IO platform is a suite of tools that Ionic provides for some extra services like
    push notifications, analytics, and so on.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种查看 Ionic 应用程序的技术是使用 Ionic view 应用程序。Ionic view 应用程序是由 Ionic 创建的一个移动应用程序，它提供了在
    iOS 和 Android 上的 Ionic 框架。该应用程序用于查看你正在开发的任何 Ionic 应用程序，并与 Ionic IO 平台紧密协作。Ionic
    IO 平台是 Ionic 提供的一套工具，用于提供一些额外服务，如推送通知、分析等。
- en: Testing todo app with the Ionic view
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Ionic view 测试 todo 应用程序
- en: In order to use the Ionic view app, you must have an iOS or Android device.
    You must also possess an Ionic IO account. Navigate to [http://apps.ionic.io](http://apps.ionic.io)
    to create your Ionic IO account. Go ahead and download the Ionic view app by visiting
    [http://view.ionic.io](http://view.ionic.io) on your mobile device and downloading
    the correct version for your mobile device.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 Ionic view 应用程序，你必须拥有一个 iOS 或 Android 设备。你还需要一个 Ionic IO 账户。导航到 [http://apps.ionic.io](http://apps.ionic.io)
    创建你的 Ionic IO 账户。然后访问你的移动设备上的 [http://view.ionic.io](http://view.ionic.io) 并下载适用于你的移动设备的正确版本。
- en: 'In order to test our `todo` application, follow the following steps to test
    it with the Ionic view app:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试我们的 `todo` 应用程序，请按照以下步骤使用 Ionic view 应用程序进行测试：
- en: Open a terminal window and navigate to the root folder of your `todo` application
    from `Chapter 2`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端窗口，并从 `第二章` 导航到你的 `todo` 应用程序的根目录。
- en: 'Simply enter the following command on your terminal:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简单地在你的终端中输入以下命令：
- en: '[PRE2]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will request the e-mail and password details of your Ionic IO account.
    Enter these details when prompted and if the app uploaded correctly, you should
    see a message saying `Successfully Uploaded (APP_ID)`, where `APP_ID` is an auto-generated
    identifier for you app.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将请求你的 Ionic IO 账户的电子邮件和密码详细信息。当提示时输入这些详细信息，如果应用程序上传正确，你应该会看到一个消息说 `成功上传 (APP_ID)`，其中
    `APP_ID` 是为你应用自动生成的标识符。
- en: 'Now you are ready to view the app on your mobile device. To do this, simply
    open your Ionic view app on your phone and login with the same Ionic IO account
    you uploaded your app to. You should see your application in a similar fashion
    to the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已准备好在移动设备上查看应用程序。为此，只需在你的手机上打开你的 Ionic view 应用程序，并使用你上传应用程序的相同 Ionic IO
    账户登录。你应该以类似以下截图的方式看到你的应用程序。
- en: '![Testing todo app with the Ionic view](img/00016.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Ionic view 测试 todo 应用程序](img/00016.jpeg)'
- en: From here, you simply tap the `todo` app and a prompt will come up with a number
    of options. You should select the **download files** option. After this has finished,
    you can simply click the **View App** option. If you followed the instructions
    correctly, the `todo` app should replace your current view and you should see
    it running within the Ionic view app.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，你只需轻触 `todo` 应用程序，就会弹出一个包含多个选项的提示。你应该选择 **下载文件** 选项。完成此操作后，你可以简单地点击 **查看应用程序**
    选项。如果你正确地遵循了说明，`todo` 应用程序应该会替换你的当前视图，你应该在 Ionic view 应用程序中看到它正在运行。
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can simply tap the screen with three fingers to go back to the Ionic view
    menu at any time.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以简单地用三根手指轻触屏幕，在任何时候返回到 Ionic 视图菜单。
- en: The Ionic view is a good way to view your application, and is extremely useful
    when you want to share progress with your friends, clients, or your boss about
    an app. It has a feature that lets you share to people's e-mails and you can find
    these documented in the Ionic official documentation. You can also manage the
    apps you upload to Ionic view from within the app or online via the Ionic IO website
    at [http://apps.ionic.io](http://apps.ionic.io).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic view 是查看你的应用程序的好方法，当你想要与朋友、客户或老板分享应用程序的进度时，它非常有用。它有一个功能允许你通过电子邮件分享，你可以在
    Ionic 官方文档中找到这些功能的文档。你还可以通过应用程序内部或通过 Ionic IO 网站 [http://apps.ionic.io](http://apps.ionic.io)
    在线管理你上传到 Ionic view 的应用程序。
- en: Device
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设备
- en: You can also test your Ionic application by running it on a physical device.
    To do this, however, you must have the native SDK for each platform installed
    on your computer. Let's take a brief look at how you can run an Ionic app on your
    device.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过在物理设备上运行你的 Ionic 应用来测试你的 Ionic 应用程序。但是，为了这样做，你必须在你电脑上安装每个平台的本地 SDK。让我们简要看看如何在你的设备上运行一个
    Ionic 应用。
- en: Android
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android
- en: To run an Ionic app on a physical device, first you simply ensure that you have
    your Android device plugged in via USB. You also need to ensure that you have
    developer mode enabled in your computer with USB debugging on.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要在物理设备上运行 Ionic 应用，首先你需要确保你的 Android 设备已经通过 USB 连接到电脑。同时，你还需要确保在电脑上开启了开发者模式，并且启用了
    USB 调试。
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This step assumes that you have already set up the Android SDK on your computer
    and you also have Cordova and Ionic set up on your machine.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这一假设你已经在你电脑上设置了 Android SDK，并且你也在你的机器上设置了 Cordova 和 Ionic。
- en: 'Ensure that you are in the root folder of your project in a terminal window
    and run the following command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你在终端窗口中处于项目的根目录，并运行以下命令：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you have everything set up correctly, this command will build your app and
    run it on the device plugged into the computer automatically.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经正确设置了所有配置，这个命令将会自动构建你的应用并在连接到电脑的设备上运行。
- en: iOS
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: iOS
- en: To run an Ionic app on an iOS device, first you need to ensure that you have
    the `iOS-deploy` package installed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 iOS 设备上运行 Ionic 应用，首先你需要确保你已经安装了 `iOS-deploy` 包。
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can only deploy your app to an iOS device using a Mac computer. This step
    also assumes that you have the iOS SDK set up correctly alongside X-Code on your
    Mac computer.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你只能使用 Mac 电脑将你的应用部署到 iOS 设备上。这一步还假设你已经正确地在你的 Mac 电脑上设置了 iOS SDK 和 X-Code。
- en: 'If you do not have the `iOS-deploy` package installed, you can install it via
    NPM by running the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有安装 `iOS-deploy` 包，你可以通过运行以下命令使用 NPM 安装它：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Plug in your device to your Mac computer and ensure that it does not have the
    lock screen enabled. Simply run the following command to deploy your Ionic app
    to your device:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的设备连接到你的 Mac 电脑，并确保它没有启用锁屏。只需运行以下命令即可将你的 Ionic 应用部署到设备上：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This command should build and run your application automatically on your plugged
    iOS device.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令应该在你的连接的 iOS 设备上自动构建和运行你的应用程序。
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned the various ways to test and deploy our app. We
    started off by using the `ionic serve` command to deploy our app to the browser
    using Chrome. We then had a look at how we can also serve our application using
    Ionic labs. We then went ahead to use the Ionic view application to see how we
    can run our app on an iOS and Android device with the Ionic view app installed
    in it. Lastly, we touched on how we can actually run our Ionic application on
    a real Android or iOS device.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了测试和部署我们应用的各种方法。我们首先使用 `ionic serve` 命令将我们的应用部署到浏览器上，使用 Chrome 浏览器。然后我们查看如何使用
    Ionic labs 来提供我们的应用程序。接着我们使用 Ionic view 应用程序来查看如何在安装了 Ionic view 应用的 iOS 和 Android
    设备上运行我们的应用。最后，我们简要介绍了如何在真实的 Android 或 iOS 设备上运行我们的 Ionic 应用程序。
- en: In the next chapter, we are going to dive into some more complex Ionic controls,
    and we will get to use Angular's `$http` service to see how we can make Ajax calls
    and retrieve data within our Ionic application.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨一些更复杂的 Ionic 控件，我们将使用 Angular 的 `$http` 服务来了解如何在 Ionic 应用程序中执行
    Ajax 调用并检索数据。
