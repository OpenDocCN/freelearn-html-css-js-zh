- en: Getting Up and Running
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动和运行
- en: 'In this chapter, we will cover the necessary steps to set up your development
    environment. These will include the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍设置开发环境所需的必要步骤。这些步骤包括以下内容：
- en: Installing Node.js on your machine
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的计算机上安装Node.js
- en: Installing MongoDB on your machine
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的计算机上安装MongoDB
- en: Verifying that everything is set up properly
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证一切是否设置正确
- en: Follow these sections carefully, as we need the development environment to be
    up and running before we jump into the chapters where we dive into actual coding.
    For the remainder of this book, it's going to be assumed that you are using either
    a Mac with OS X, Linux, or Windows 7/Windows 8\. You will also need super user
    and/or administrator privileges on the computer, as you will be installing the
    Node and MongoDB server. The code and examples after this chapter will all be
    OS agnostic and should work in any environment, assuming you have taken the steps
    I outlined earlier to be prepared ahead of time.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细遵循这些部分，因为我们需要在跳转到实际编码的章节之前，开发环境已经准备就绪。在本书的其余部分中，我们将假定您使用的是Mac OS X、Linux或Windows
    7/Windows 8。您还需要在计算机上拥有超级用户和/或管理员权限，因为您将安装Node和MongoDB服务器。本章之后的代码和示例将是与操作系统无关的，并且应该在任何环境中工作，只要您提前采取了我概述的准备步骤。
- en: You will need a proper text editor to write and edit the code. While any text
    editor you choose will serve this purpose, choosing a better text editor will
    hugely improve your productivity. Sublime Text 3 appears to be the most popular
    text editor, regardless of the platform, at this moment. It is a simple, lightweight
    editor with unlimited plugins made available by developers around the world. If
    you are on a Windows machine, then *Notepad++* is also a good candidate. Also,
    there are JavaScript-based open source editors such as Atom and Brackets, which
    are also worth a try.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个合适的文本编辑器来编写和编辑代码。虽然您选择的任何文本编辑器都可以满足此目的，但选择一个更好的文本编辑器将极大地提高您的生产力。Sublime
    Text 3似乎是目前最受欢迎的文本编辑器，无论在哪个平台上。这是一个简单、轻量级的编辑器，由全球开发人员提供了无限的插件。如果您使用的是Windows机器，那么*Notepad++*也是一个不错的选择。此外，还有基于JavaScript的开源编辑器，如Atom和Brackets，也值得一试。
- en: Finally, you're going to need access to the command line. Linux and Mac have
    access to the command line via the terminal program. A great alternative on the
    Mac is iTerm2 ([http://iterm2.com](http://iterm2.com)). For Windows, the default
    command-line program works but isn't the best. A great alternative there is ConEmu
    ([http://conemu.codeplex.com](http://conemu.codeplex.com)).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您需要访问命令行。Linux和Mac可以通过终端程序访问命令行。Mac上一个很好的替代品是iTerm2 ([http://iterm2.com](http://iterm2.com))。对于Windows，默认的命令行程序可以工作，但不是最好的。那里一个很好的替代品是ConEmu
    ([http://conemu.codeplex.com](http://conemu.codeplex.com))。
- en: 'For the remainder of this book, any time I reference a command line or command
    prompt, it will look like the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，每当我提到命令行或命令提示符时，它看起来像下面这样：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing Node.js
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: The Node.js installer can be easily obtained by visiting the official Node website
    and accessing the downloads section. Once there, be sure to download the correct
    version depending on your OS and CPU (32-bit or 64-bit). As an alternative, you
    can also use OS-specific package managers to install this. Depending on the OS
    you are using, just jump into the specific subsection to get more details on the
    steps to be followed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过访问官方Node网站并访问下载部分轻松获取Node.js安装程序。一旦进入那里，请确保根据您的操作系统和CPU（32位或64位）下载正确的版本。作为替代方案，您还可以使用特定于操作系统的软件包管理器进行安装。根据您使用的操作系统，只需跳转到特定的子部分，以获取有关要遵循的步骤的更多详细信息。
- en: 'You can jump into the Node.js download sections by following this link: [https://nodejs.org/en/download](https://nodejs.org/en/download).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下链接跳转到Node.js下载部分：[https://nodejs.org/en/download](https://nodejs.org/en/download)。
- en: Mac OS X
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac OS X
- en: There is a universal installer available from the Node website specifically
    for OS X.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Node网站上有一个专门为OS X设计的通用安装程序。
- en: 'We need to follow these steps to install Node.js on a Mac:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要按照以下步骤在Mac上安装Node.js：
- en: Visit the download page of the Node.js official website as mentioned earlier
    and click on the Mac OS X installer, which is independent of the processor type
    (32 or 64-bit).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Node.js官方网站的下载页面，如前所述，单击Mac OS X安装程序，这与处理器类型（32位或64位）无关。
- en: Once the download is complete, double-click on the `.pkg` file, which will launch
    the Node installer.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，双击`.pkg`文件，这将启动Node安装程序。
- en: Proceed through each step of the wizard, which should be fairly self-explanatory.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导的每一步进行操作，这应该是相当简单易懂的。
- en: Also, if you have any of the OS X package managers installed, then you don't
    need to manually download the installer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您已安装了OS X软件包管理器之一，则无需手动下载安装程序。
- en: You may install Node.js via the respective package manager.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过各自的软件包管理器安装Node.js。
- en: 'Installation using Homebrew:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Homebrew进行安装：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Installation using Mac ports:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Mac ports进行安装：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The installation of Node.js via either an installer or via the package managers
    will include npm alongside. So, we don't need to install it separately.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通过安装程序或软件包管理器安装Node.js时，将包括npm。因此，我们不需要单独安装它。
- en: Windows
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows
- en: 'To install Node.js on Windows, we will follow these steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Node.js，我们将按照以下步骤进行：
- en: 'We need to determine your processor type, 32-bit or 64-bit. You can do this
    by executing the following command at the command prompt:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要确定您的处理器类型，32位还是64位。您可以通过在命令提示符下执行以下命令来执行此操作：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output is as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Download the installer depending on the result of this command.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据此命令的结果下载安装程序。
- en: Once the download is complete, double-click on the `.msi` file, which will launch
    the Node installer.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，双击`.msi`文件，这将启动Node安装程序。
- en: Proceed through each step of the wizard.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照向导的每一步进行操作。
- en: When you get to the custom setup screen, you should notice that the installation
    wizard will install not only the Node.js runtime, but also the npm package manager,
    and configure a path variable.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您到达自定义设置屏幕时，您应该注意安装向导不仅会安装Node.js运行时，还会安装npm软件包管理器，并配置路径变量。
- en: So once the installation is done, Node and npm can be executed from any folder
    via the command line.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，一旦安装完成，Node和npm可以在任何文件夹中通过命令行执行。
- en: 'Also, if you have any of the Windows package managers installed, then you don''t
    need to manually download the installer. You may install Node.js via the respective
    package manager:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您安装了任何Windows软件包管理器，则无需手动下载安装程序。您可以通过相应的软件包管理器安装Node.js：
- en: 'Using chocolatey:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用chocolatey：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Using `scoop`:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`scoop`：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Linux
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux
- en: Because there are so many different flavors and distributions of Linux available,
    installing Node isn't quite as straightforward. However, if you're running Linux
    to begin with, then you are more than aware of this and probably comfortable with
    a few extra steps.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Linux有许多不同的版本和发行版，安装Node并不那么简单。但是，如果您一开始就在运行Linux，那么您很清楚这一点，并且可能对一些额外的步骤感到满意。
- en: Joyent has an excellent wiki on how to install Node on Linux using the many
    different package manager options available. This covers almost all the popular
    `deb` and `rpm`-based package managers. You can read that wiki by visiting [https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Joyent在如何使用许多不同的软件包管理器选项在Linux上安装Node的出色wiki。这涵盖了几乎所有流行的`deb`和`rpm`-based软件包管理器。您可以通过访问[https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager)阅读该wiki。
- en: 'For Ubuntu 14.04 and preceding as an example, the steps to install Node would
    be as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以Ubuntu 14.04和之前版本为例，安装Node的步骤如下：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once these steps have been completed, both Node and npm should be installed
    on your system.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，Node和npm应该已安装在您的系统上。
- en: Testing that Node.js is installed properly
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试Node.js是否正确安装
- en: Now that Node has been installed on your system, let's run a quick test to ensure
    everything is working properly.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Node已经安装在您的系统上，让我们运行一个快速测试，以确保一切正常运行。
- en: 'Access a command line via your terminal program and execute the following command:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过终端程序访问命令行并执行以下命令：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Assuming that your Node installation was successful, you should see the version
    number that was installed as an output on the screen, right under the command
    you executed.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的Node安装成功，您应该在屏幕上看到安装的版本号作为输出，就在您执行的命令下面。
- en: Your version numbers will most likely be more recent than those printed earlier.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您的版本号很可能比之前打印的要新。
- en: 'You can also launch the Node `repl`, a command-line shell that lets you execute
    JavaScript directly:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以启动Node `repl`，这是一个命令行shell，可以让您直接执行JavaScript：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Online documentation
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线文档
- en: You'll want to be sure to point your browser to the online documentation for
    Node and bookmark it, as it will undoubtedly become a resource that you will want
    to access on a regular basis. It is not mandatory that you should go through each
    and every section of it, but once you start writing code in Node.js, you will
    need to refer to this document frequently to understand more on the APIs exposed
    by Node.js. The document is available at [http://nodejs.org/api/](http://nodejs.org/api/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保将浏览器指向Node的在线文档并将其加为书签，因为它无疑会成为您经常访问的资源。您不一定要逐个阅读每个部分，但一旦开始在Node.js中编写代码，您将需要经常参考此文档，以更多地了解Node.js公开的API。该文档可在[http://nodejs.org/api/](http://nodejs.org/api/)上找到。
- en: Also, check out the npm registry available at [http://npmjs.com](http://npmjs.com),
    where you can find tens of thousands of modules available for Node developers.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以查看npm注册表，网址为[http://npmjs.com](http://npmjs.com)，在那里您可以找到数以万计的Node开发人员可用的模块。
- en: Installing MongoDB
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装MongoDB
- en: MongoDB can also be easily downloaded by visiting the official MongoDB website
    and accessing the downloads section from [http://www.MongoDB.org/downloads](http://www.mongodb.org/downloads).
    Once there, be sure to download the correct version depending on your OS and CPU
    (32-bit or 64-bit).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB也可以通过访问官方MongoDB网站并从[http://www.MongoDB.org/downloads](http://www.mongodb.org/downloads)访问下载部分轻松下载。在那里，请务必根据您的操作系统和CPU（32位或64位）下载正确的版本。
- en: For Windows users, you can opt to download the MSI installer file, which will
    make the installation much simpler.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows用户，您可以选择下载MSI安装程序文件，这将使安装更简单。
- en: Depending on the version of MongoDB you downloaded, you will want to replace
    `<version>` in the following sections with the appropriate version number that
    matches your file.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您下载的MongoDB版本，您将需要在以下部分中用适当的版本号替换`<version>`。
- en: Mac OS X installation instructions
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac OS X安装说明
- en: 'If you are using the Homebrew package manager, MongoDB can be installed using
    the following two commands:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用Homebrew软件包管理器，可以使用以下两个命令安装MongoDB：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The remainder of this chapter assumes you are not using Homebrew and need to
    install MongoDB manually. If you are installing MongoDB via Homebrew, you can
    proceed directly to the *Confirming successful MongoDB installation* section.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分假设您没有使用Homebrew，并且需要手动安装MongoDB。如果您通过Homebrew安装MongoDB，可以直接转到*确认成功安装MongoDB*部分。
- en: 'After completing the download, open and extract the contents of the `.tgz`
    file. You will want to move the extracted contents to a destination folder, `/MongoDB`.
    You can do this either via the finder or the command line, whichever you prefer,
    as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，打开并提取`.tgz`文件的内容。您需要将提取的内容移动到目标文件夹`/MongoDB`。您可以通过查找器或命令行执行此操作，具体取决于您的喜好，如下所示：
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You will want to ensure that the locations of the MongoDB binaries are configured
    in your environment path so that you can execute `MongoDB` and Mongo from any
    working directory. To do this, edit the `.profile` file in your home folder (`~/`)
    and append the location for MongoDB to it. Your `.profile` file should look something
    like the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保MongoDB二进制文件的位置已配置在您的环境路径中，以便您可以从任何工作目录执行`MongoDB`和Mongo。要做到这一点，编辑您家目录（`~/`）中的`.profile`文件，并将MongoDB的位置追加到其中。您的`.profile`文件应该看起来像以下内容：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If you don''t have this line or are missing `.bash_profile` completely, you
    can create one easily by executing the following command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有这行或完全缺少`.bash_profile`，您可以通过执行以下命令轻松创建一个：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You will more than likely have a lot more than what I have in the preceding
    lines of code. The important thing is that you append `:/MongoDB/bin` before the
    `$PATH` at the end. The `:` is a delimiter between different paths (so it's likely
    that you will be adding your path to the end of an existing list, but before the
    trailing `$PATH`).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您很可能在前面的代码行中有比我更多的内容。重要的是在最后的`$PATH`之前添加`:/MongoDB/bin`。`:`是不同路径之间的分隔符（因此您可能会将您的路径添加到现有列表的末尾，但在结尾的`$PATH`之前）。
- en: Here, `mongod` refers to the MongoDB server instance that you need to invoke,
    and `mongo` refers to the Mongo shell, which will be the console through which
    you will be interacting with the database.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`mongod`指的是您需要调用的MongoDB服务器实例，`mongo`指的是Mongo shell，它将是您与数据库交互的控制台。
- en: 'Next, you need to create a default `data` folder, which MongoDB will use to
    store all data documents. From the command line, execute the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要创建一个默认的`data`文件夹，MongoDB将用它来存储所有数据文档。从命令行执行以下操作：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once the files have been properly extracted to the `/MongoDB` folder and the
    data folders created, you can then start the MongoDB database server by executing
    the following command from the command line:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦文件已经正确解压到`/MongoDB`文件夹并且数据文件夹已创建，您可以通过从命令行执行以下命令来启动MongoDB数据库服务器：
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This should dump a bunch of log statements while the server starts up, but
    ultimately ends with:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会在服务器启动时输出一大堆日志语句，但最终会以以下结束：
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: That's it! Your MongoDB server is up and running. You can type *Ctrl-C* to cancel
    and shut down the server.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！您的MongoDB服务器已经启动并运行。您可以输入*Ctrl-C*来取消并关闭服务器。
- en: Windows 7/Windows 8 installation instructions
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 7/Windows 8安装说明
- en: 'After completing the download, the MongoDB website will automatically redirect
    you to a landing page with a link to a Windows *Quick Start* guide at:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 完成下载后，MongoDB网站将自动将您重定向到一个带有Windows *快速入门*指南链接的页面：
- en: '[http://docs.MongoDB.org/manual/tutorial/install-MongoDB-on-windows/](http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.MongoDB.org/manual/tutorial/install-MongoDB-on-windows/](http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/)。'
- en: It is highly recommended that you follow that guide, as it will be the most
    up-to-date and will generally be more detailed than what I can provide here.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您遵循该指南，因为它将是最新的，并且通常会比我在这里提供的更详细。
- en: Extract the ZIP file that was downloaded to the root `c:\` destination. By default,
    this should extract a folder named `MongoDB-osx-x86_64-2.4.9`. Depending on the
    tool you are using for extraction, you can leave this as it is or change the destination
    folder to simply `MongoDB`. If you don't change the destination during extraction,
    you should rename the folder once it is complete. Either way, be sure that the
    files that are extracted reside in a folder named `c:\MongoDB`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 解压已下载的ZIP文件到根目录`c:\`。默认情况下，这应该会解压一个名为`MongoDB-osx-x86_64-2.4.9`的文件夹。根据您用于解压的工具，您可以保持原样，也可以将目标文件夹更改为`MongoDB`。如果在解压过程中没有更改目标文件夹，完成后应该将文件夹重命名。无论哪种方式，确保解压出的文件位于名为`c:\MongoDB`的文件夹中。
- en: 'Next, you need to create a default `data` folder, which MongoDB will use to
    store all the data documents. Using Windows Explorer or Command Prompt, whichever
    you are most comfortable with, create the `c:\data` folder and then `c:\data\db`
    by using the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要创建一个默认的`data`文件夹，MongoDB将用它来存储所有数据文档。使用Windows资源管理器或命令提示符，您最熟悉的方式创建`c:\data`文件夹，然后使用以下命令创建`c:\data\db`：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the files have been properly extracted to the `c:\MongoDB` folder and
    both the data folders subsequently created, you can then start the MongoDB database
    server by executing the following command from a prompt:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦文件已经正确解压到`c:\MongoDB`文件夹，并且数据文件夹随后创建，您可以通过从提示符执行以下命令来启动MongoDB数据库服务器：
- en: '[PRE18]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This should dump a bunch of log statements while the server starts up, but
    will ultimately end with:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会在服务器启动时输出一大堆日志语句，但最终会以以下结束：
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: That's it! Your MongoDB server is up and running. You can type *Ctrl*-*C* to
    cancel and shut down the server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！您的MongoDB服务器已经启动并运行。您可以输入*Ctrl*-*C*来取消并关闭服务器。
- en: Linux installation instructions
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux安装说明
- en: Once again, we will face a slightly more challenging installation process with
    Linux versus Windows or Mac. The official website [http://docs.MongoDB.org/manual/administration/install-on-linux/](http://docs.mongodb.org/manual/administration/install-on-linux/)
    has great instructions on how to install MongoDB on a number of different Linux
    distributions.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，与Windows或Mac相比，我们将面临稍微更具挑战性的Linux安装过程。官方网站[http://docs.MongoDB.org/manual/administration/install-on-linux/](http://docs.mongodb.org/manual/administration/install-on-linux/)上有关于如何在许多不同的Linux发行版上安装MongoDB的详细说明。
- en: 'We will continue to use Ubuntu as our flavor of choice and use the APT package
    manager for the installation:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续使用Ubuntu作为我们的首选版本，并使用APT软件包管理器进行安装：
- en: '[PRE20]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Once these steps are completed, MongoDB should be installed and ready to run
    on your system. Execute the following command in the terminal to be sure. This
    gets the MongoDB daemon up and running, listening for connections:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，MongoDB应该已经安装并准备在您的系统上运行。在终端中执行以下命令以确保。这会启动MongoDB守护程序，并监听连接：
- en: '[PRE21]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Success! Your MongoDB server is up and running. You can type *Ctrl*-*C* to cancel
    and shut down the server.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 成功！您的MongoDB服务器已经运行。您可以输入*Ctrl*-*C*来取消并关闭服务器。
- en: As you are performing local development on your development machine and not
    a production server, you don't need the MongoDB server to always be up and running.
    This will be an unnecessary strain on your machine for the majority of the time
    you're not developing against the server. Because of this, throughout the remainder
    of this book, it will always be a requirement that you manually launch the server
    every time you launch code that expects to connect to a MongoDB server. If you
    want, you can certainly configure MongoDB to run locally as a service and always
    be up, but the instructions to do so are beyond the scope of this chapter.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您正在开发本地开发机器而不是生产服务器，您不需要MongoDB服务器始终运行。这将是对您的机器不必要的负担，因为大部分时间您不会与服务器进行开发。因此，在本书的其余部分，每次启动期望连接到MongoDB服务器的代码时，您都需要手动启动服务器。如果您愿意，您当然可以配置MongoDB在本地作为服务运行并始终运行，但是如何配置超出了本章的范围。
- en: Confirming successful MongoDB installation
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确认MongoDB安装成功
- en: Now that MongoDB has been installed on your system, let's run a quick test to
    ensure everything is working properly.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在MongoDB已经安装在您的系统上，让我们运行一个快速测试，确保一切正常运行。
- en: 'Access a command line via your terminal program and execute the following command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过终端程序访问命令行并执行以下命令：
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Assuming that your MongoDB installation was successful, you should see the version
    number that was installed as an output on the screen, right under the command
    you executed.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的MongoDB安装成功，您应该在屏幕上看到安装的版本号作为输出。
- en: Your version numbers will most likely be more recent than those printed earlier.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您的版本号很可能比之前打印的要更新。
- en: Bookmarking the online documentation
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将在线文档加为书签
- en: You'll want to be sure to point your browser to the online documentation for
    MongoDB available at [http://docs.MongoDB.org/manual/](http://docs.mongodb.org/manual/)
    and bookmark it, as it will undoubtedly become a resource that you will want to
    access on a regular basis.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保将浏览器指向MongoDB的在线文档，网址为[http://docs.MongoDB.org/manual/](http://docs.mongodb.org/manual/)，并将其加为书签，因为它无疑将成为您经常访问的资源。
- en: Writing your first app
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写您的第一个应用程序
- en: Now that you have everything installed and confirmed that it's all working,
    you can write your first quick app that will use both Node and MongoDB. This will
    prove that your environment is good to go, and that you're ready to get started.
    In addition, it will give you a brief taste of the world of Node and MongoDB development!
    Don't worry if a lot of the following is confusing or just doesn't make sense
    to you, it will all be made clear throughout the rest of the book!
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经安装了所有内容并确认一切正常运行，您可以编写您的第一个快速应用程序，该应用程序将同时使用Node和MongoDB。这将证明您的环境已经准备就绪，并且您已经准备好开始。此外，这将让您简单了解Node和MongoDB开发的世界！如果以下内容让您感到困惑或不合理，不要担心，本书的其余部分将会澄清一切！
- en: 'To begin with, we need to create a folder for our application where this application''s
    specific code will reside, as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为我们的应用程序创建一个文件夹，该文件夹将包含此应用程序的特定代码，如下所示：
- en: '[PRE23]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Creating the sample application
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建示例应用程序
- en: 'The `testapp` folder that we just created will be the root of our sample Node
    application. Even though it''s not necessary, it''s important and also best practice
    that we should create the `package.json` file for our Node app, which will hold
    the necessary data regarding the application such as its version, name, description,
    development, and runtime dependencies. This can be done by issuing the following
    command from the `testapp` folder root:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚创建的`testapp`文件夹将是我们示例Node应用程序的根目录。虽然这不是必需的，但是创建`package.json`文件对我们的Node应用程序非常重要，这将包含有关应用程序的必要数据，如版本、名称、描述、开发和运行时依赖项。可以通过从`testapp`文件夹根目录发出以下命令来完成：
- en: '[PRE24]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This command will follow up by asking you a few questions, such as the name
    and version number of your newly created application. It is not necessary that
    you fill in all the details in one go, and you can skip the steps by pressing
    *Enter* and the default values will be entered, which you may update later.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将会询问您一些问题，比如您新创建的应用的名称和版本号。您不需要一次填写所有细节，可以通过按下*Enter*跳过步骤，系统将使用默认值，稍后您可以更新。
- en: Getting the dependent modules in place
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备依赖模块
- en: 'Before we start to write any Node.js code, we need to get our dependencies
    in place by using `npm`. Since this is a basic app, we will be using it to test
    our Node.js connectivity with the MongoDB server. So, the only dependent module
    that we need is the native MongoDB client for Node.js. We can easily install that
    by executing the following command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写任何Node.js代码之前，我们需要使用`npm`安装我们的依赖项。由于这是一个基本应用程序，我们将使用它来测试我们的Node.js与MongoDB服务器的连接。因此，我们唯一需要的依赖模块是Node.js的原生MongoDB客户端。我们可以通过执行以下命令轻松安装：
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: After `npm` installs the MongoDB driver, you can list the contents of the directory
    and you will notice that a new folder was created, `node_modules`. This is where,
    surprisingly enough, all Node modules are stored whenever you install them from
    `npm`. Inside the `node_modules` folder, there should be a single folder named
    `MongoDB`. Also, you will notice that the `package.json` file of our sample application
    will be updated by this new dependency entry.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在`npm`安装MongoDB驱动程序后，您可以列出目录的内容，您会注意到一个新文件夹被创建，名为`node_modules`。这是所有Node模块的存储位置，当您从`npm`安装它们时，它们会存储在这里。在`node_modules`文件夹中，应该有一个名为`MongoDB`的单个文件夹。此外，您会注意到我们示例应用程序的`package.json`文件将被此新依赖项条目更新。
- en: Adding the application code
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加应用程序代码
- en: 'Now, let''s write the simple application code to test things out. This app
    is going to basically connect to our locally running MongoDB server, insert a
    few records as seed data, and then provide the output on whether or not the data
    was inserted properly into MongoDB. You can download a Gist of the code via this
    URL: [http://bit.ly/1JpT8QL](http://bit.ly/1JpT8QL).'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写简单的应用程序代码来测试一下。这个应用程序基本上会连接到我们本地运行的MongoDB服务器，插入一些记录作为种子数据，然后提供输出，告诉我们数据是否被正确插入到MongoDB中。你可以通过以下URL下载代码的Gist：[http://bit.ly/1JpT8QL](http://bit.ly/1JpT8QL)。
- en: Using your editor of choice, create a new file named `app.js` and save it to
    the application root, which is the `testapp` folder. Just copy the content of
    the preceding Gist on to the `app.js` file.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你喜欢的编辑器，创建一个名为`app.js`的新文件，并将其保存到应用程序根目录，即`testapp`文件夹。只需将上面Gist的内容复制到`app.js`文件中。
- en: Understanding the code
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解代码
- en: Now, let's go through and explain what each section of the code is doing.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们逐个解释代码的每个部分在做什么。
- en: '[PRE26]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The preceding line requires the MongoDB Node driver that we installed via `npm`.
    This is the required convention used in Node.js for bringing in external file
    dependencies to the current file in context.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的一行需要我们通过`npm`安装的MongoDB Node驱动程序。这是Node.js中用于将外部文件依赖项引入当前上下文文件的必需约定。
- en: We will explain more about this in the coming chapters.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中更详细地解释这一点。
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: In the preceding code, we declare the variables for the database server information
    and collection we want to work with. Here, `myproject` is the database we want
    to use and `chapters` is the collection. In MongoDB, if you reference and try
    to use a collection that doesn't exist, it will automatically be created.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们声明了要使用的数据库服务器信息和集合的变量。在这里，`myproject`是我们想要使用的数据库，`chapters`是集合。在MongoDB中，如果你引用并尝试使用一个不存在的集合，它将自动被创建。
- en: 'The next step would be to define some data that we can insert into MongoDB
    to verify that everything is fine. So, we create an array of chapters here, which
    can be inserted into the database and collections we set up in the previous steps:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步将是定义一些数据，我们可以将其插入到MongoDB中以验证一切是否正常。因此，我们在这里创建了一个章节的数组，可以将其插入到我们在前面步骤中设置的数据库和集合中：
- en: '[PRE28]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, we can take a look at the rest of the code where we insert this data into
    the MongoDB database:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看一下其余的代码，我们将这些数据插入到MongoDB数据库中：
- en: '[PRE29]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here, we initiate a connection with the MongoDB server, and if the connection
    was proper, the `db` variable will have the `connection` object that we can use
    for further operations:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们与MongoDB服务器建立连接，如果连接正常，`db`变量将拥有我们可以用于进一步操作的`connection`对象：
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Look at the preceding code closely - do you remember something that we learned
    in [Chapter 1](7af048ea-93a4-4290-a37b-c530857e55d9.xhtml), *Welcome to JavaScript
    in the Full Stack*? We are using a `callback` for the `connection` call that we
    are making here. As discussed in the first chapter, this function will be registered
    as a `callback` to trigger once the connection attempt is completed. Upon connection
    completion, this will be triggered by either an `error` or a `db` object, depending
    on whether we were able to make proper connectivity or not. So, if you look at
    the code in the `callback` function, we are not checking whether any error was
    raised in the connection attempt before logging connected correctly to the server.
    Now, that''s your task to add and check while we try to run this app! Take a look
    at the following code block in this section:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细看一下上面的代码-你还记得我们在[第1章](7af048ea-93a4-4290-a37b-c530857e55d9.xhtml)中学到的内容吗？我们在这里为我们进行的`connection`调用使用了一个`callback`。正如在第一章中讨论的，这个函数将被注册为一个`callback`，一旦连接尝试完成，就会被触发。连接完成后，这将由`error`或`db`对象触发，具体取决于我们是否能够建立正确的连接。因此，如果你看一下`callback`函数中的代码，我们在记录正确连接到服务器之前并没有检查是否有任何错误。现在，这就是你要在我们尝试运行这个应用程序时添加和检查的任务！看一下本节中以下代码块：
- en: '[PRE31]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This does nothing but use the `db` object we got in the connection call and
    get the `collection` named `chapters`. Remember, we set that value to `sampleCollection`
    at the beginning of the code. Once we get the `collection`, we make an `insert`
    call to put the chapters we have defined in the array `chapters`. As you can see,
    this `insert` call is also done via an asynchronous call by attaching the `callback`
    function. This `callback` function will be triggered once the `insert` operation
    is completed by the code residing inside the MongoDB native client, which we required
    as a dependency.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是使用我们在连接调用中得到的`db`对象，并获取名为`chapters`的`collection`。记住，我们在代码开头将该值设置为`sampleCollection`。一旦我们获得了`collection`，我们就会进行`insert`调用，将我们在数组`chapters`中定义的章节放入其中。正如你所看到的，这个`insert`调用也是通过附加`callback`函数来进行的，这是一个异步调用。一旦MongoDB原生客户端中的代码完成了`insert`操作，这个`callback`函数就会被触发，而我们将其作为一个依赖项来使用。
- en: 'Next, we will take a look at the code inside the `callback` function, which
    we passed to the `insert` function call:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看一下我们传递给`insert`函数调用的`callback`函数中的代码：
- en: '[PRE32]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here, we process the values passed via the `callback` to find out whether the
    `insert` operation succeeded or not and if the data related to the records that
    have been inserted. So, we check whether there was an error, and, if not, proceed
    to print the number of records that got inserted. Here, the result array will
    contain the records that we inserted into MongoDB if the operation was a success.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们处理通过`callback`传递的值，以找出`insert`操作是否成功，以及已插入记录相关的数据。因此，我们检查是否有错误，如果没有，就继续打印插入的记录数。在这里，如果操作成功，结果数组将包含我们插入到MongoDB中的记录。
- en: Now we can go ahead and try to run this code, as we have understood what it
    does.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以继续尝试运行这段代码，因为我们已经理解了它的作用。
- en: Launching the sample app
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动示例应用程序
- en: 'Once you have the complete code saved to `app.js`, it''s time to execute it
    and see what happens. However, before you can launch an app that clearly relies
    on a connection to MongoDB, you need to first boot up the MongoDB daemon instance:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将完整的代码保存到`app.js`中，就可以执行它并查看发生了什么。但是，在启动明显依赖于与MongoDB的连接的应用程序之前，您需要首先启动MongoDB守护程序实例：
- en: '[PRE33]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In Windows, if you haven't set a `PATH` variable for `mongod`, you may need
    to use the full path while executing MongoDB, which is `c:\MongoDB\bin\mongod.exe`.
    For your needs, the remainder of this book will refer to the `mongod` command,
    but you may always need to execute the full path in each instance.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows中，如果您尚未为`mongod`设置`PATH`变量，则在执行MongoDB时可能需要使用完整路径，即`c:\MongoDB\bin\mongod.exe`。对于您的需求，本书的其余部分将引用`mongod`命令，但您可能始终需要在每个实例中执行完整路径。
- en: 'Now, to launch the app itself, execute the following command after moving to
    the `root` folder where `app.js` is located:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要启动应用程序本身，请在`app.js`所在的`root`文件夹中执行以下命令：
- en: '[PRE34]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'When the app first executes, you should see the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序首次执行时，您应该会看到以下内容：
- en: '[PRE35]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Checking the actual database
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查实际数据库
- en: 'Let''s take a quick look at the database itself to see what happened during
    the execution of the app. Since the server is currently up and running, we can
    connect to it using the Mongo shell-a command line interface to the MongoDB server.
    Execute the following commands to connect to the server using Mongo and run a
    query against the chapter''s collection. As you can see in the upcoming code,
    Mongo shell connects to a default database named `test` initially. We need to
    manually specify the database name to switch to if it''s something other than
    `test`:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速查看一下数据库本身，看看在应用程序执行过程中发生了什么。由于服务器目前正在运行，我们可以使用Mongo shell连接到它-这是MongoDB服务器的命令行界面。执行以下命令以使用Mongo连接到服务器并针对章节集合运行查询。正如您在即将看到的代码中，Mongo
    shell最初连接到名为`test`的默认数据库。如果要切换到其他数据库，我们需要手动指定数据库名称：
- en: '[PRE36]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Here, `pretty` is used as part of the command to format the result from the
    `find` command. This is used only in a shell context. It does more of a prettification
    task for the JSON.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`pretty`被用作命令的一部分，用于格式化`find`命令的结果。这仅在shell上下文中使用。它对JSON执行更多的美化任务。
- en: 'You should see something similar to the following output:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到类似以下输出的内容：
- en: '[PRE37]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: If you run the Node app again, the records will be inserted into the Mongo server
    again. So, if you repeat the command multiple times, the result will have more
    records in the output. We are not handling this case in this chapter as we intend
    to have only specific code, that will be simple enough to understand.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果再次运行Node应用程序，记录将再次插入Mongo服务器。因此，如果重复执行命令多次，输出中将有更多的记录。在本章中，我们没有处理这种情况，因为我们打算只有特定的代码，这将足够简单易懂。
- en: Summary
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we took time to make sure your development environment was
    properly configured with both the Node runtime environment and the MongoDB server.
    After making sure both were properly installed, we wrote a basic app that utilized
    both technologies. The app connected to a locally running MongoDB server, and
    inserted sample records.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们花时间确保您的开发环境正确配置了Node运行环境和MongoDB服务器。在确保两者都正确安装后，我们编写了一个利用了这两种技术的基本应用程序。该应用程序连接到本地运行的MongoDB服务器，并插入了示例记录。
- en: Now that the tedious but necessary tasks of setup and installation are out of
    the way, we can move on to some fun and start learning!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，繁琐但必要的设置和安装任务已经完成，我们可以继续一些有趣的事情并开始学习了！
- en: In the next chapter, we will review a primer on the JavaScript language and
    understand the basics of Node. Then, we will review the basic **CRUD** (`create`,
    `read`, `update`, `delete`) operations with MongoDB using the Mongo shell.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将回顾JavaScript语言的入门知识，并了解Node的基础知识。然后，我们将使用Mongo shell回顾MongoDB的基本**CRUD**（`create`，`read`，`update`，`delete`）操作。
