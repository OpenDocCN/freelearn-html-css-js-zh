- en: Appendix A. Adding Custom Styles to a Rails Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A. 向Rails应用程序添加自定义样式
- en: Finally, we have reached the last chapter of this book, where we will talk about
    how to add a custom styles to a Rails application, which is powered by Bootstrap
    framework. Throughout the book, we have gone through various Bootstrap CSS and
    JavaScript components that come ready to use out of the box.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们到达了这本书的最后一章，我们将讨论如何向由Bootstrap框架支持的Rails应用程序添加自定义样式。在整个书中，我们探讨了各种Bootstrap
    CSS和JavaScript组件，它们可以直接使用。
- en: In this chapter, we will see how to extend Bootstrap framework and add our own
    style to it. There are still many important components that are missing from the
    Bootstrap framework. We will check out some of the popular Bootstrap plugins that
    are available for free.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将看到如何扩展Bootstrap框架并添加我们自己的样式。Bootstrap框架中仍然缺少许多重要组件。我们将检查一些免费提供的流行Bootstrap插件。
- en: 'The topics that we will cover are:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要涵盖的主题包括：
- en: Adding Bootstrap-sass to a Rails Application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Bootstrap-sass添加到Rails应用程序
- en: Customizing Bootstrap through variables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过变量自定义Bootstrap
- en: Adding Bootstrap-sass to a Rails application
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Bootstrap-sass添加到Rails应用程序
- en: 'In the *Installing Bootstrap in the Rails project*, section in [chapter 2](ch02.html
    "Chapter 2. Introducing Bootstrap 3"), *Introducing Bootstrap 3* we saw how to
    include Bootstrap into our Rails application through three different ways:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。介绍Bootstrap 3")的*在Rails项目中安装Bootstrap*部分中，*介绍Bootstrap
    3*，我们看到了如何通过三种不同的方式将Bootstrap包含到我们的Rails应用程序中：
- en: The CDN method
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDN方法
- en: Bootstrap-sass gem
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap-sass gem
- en: By downloading Bootstrap files
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过下载Bootstrap文件
- en: 'To quicken things up, we had opted for the CDN method. Well, in this chapter,
    we are going to use Bootstrap through Bootstrap-sass gem. This will enable us
    to completely customize the Bootstrap''s default styles. So, let''s proceed and
    install `Bootstrap-sass gem` in our application:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快速度，我们选择了CDN方法。嗯，在这一章中，我们将通过Bootstrap-sass gem使用Bootstrap。这将使我们能够完全自定义Bootstrap的默认样式。所以，让我们继续，并在我们的应用程序中安装`Bootstrap-sass
    gem`：
- en: 'Go to the `application` folder and edit the file `Gemfile` using a text editor.
    Add the following two lines of code at the end of this file:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`application`文件夹，并使用文本编辑器编辑`Gemfile`文件。将以下两行代码添加到文件末尾：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The above two lines will install `bootstrap-sass` and `autoprefixer-rails gems`
    into your application. The `autoprefixer-rails` is needed to automatically append
    browser vendor prefixes in the CSS `stylesheets`.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述两行将安装`bootstrap-sass`和`autoprefixer-rails gems`到您的应用程序中。`autoprefixer-rails`是自动在CSS
    `stylesheets`中添加浏览器供应商前缀所必需的。
- en: Let's bundle the application, so that the above gems are actually downloaded
    and installed in our application.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们捆绑应用程序，以便上述gem实际上被下载并安装到我们的应用程序中。
- en: '[PRE1]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once the execution of the above command is complete, navigate to the `app` |
    `assets` | `stylesheets` folder. Rename the `application.css` file to the `application.css.scss`
    file. Next, remove the imported CDN link from the file, which was included by
    us earlier.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦上述命令执行完成，导航到`app` | `assets` | `stylesheets`文件夹。将`application.css`文件重命名为`application.css.scss`文件。接下来，从文件中移除我们之前包含的CDN链接。
- en: 'Now, we need to include Bootstrap files that are downloaded through gem inside
    the `application.css.scss` file. To do that, include the following 2 lines:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要在`application.css.scss`文件中包含通过gem下载的Bootstrap文件。为此，包含以下2行：
- en: '[PRE2]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `bootstrap-sprockets` value is needed to correctly link the font files with
    the Bootstrap's CSS files.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`bootstrap-sprockets`值是正确链接字体文件与Bootstrap的CSS文件所必需的。'
- en: 'It''s time to link the Bootstrap''s JavaScript files using the recently gem:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候使用最近安装的gem链接Bootstrap的JavaScript文件了：
- en: 'First, we need to remove the hardcoded Bootstrap''s JavaScript CDN link from
    the `application.html.erb` file, present in the `layouts` folder by navigating
    to `app` | `views` | `layouts` folder. Remove the following line from this file:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要从`application.html.erb`文件中移除硬编码的Bootstrap的JavaScript CDN链接，该文件位于`layouts`文件夹中，通过导航到`app`
    | `views` | `layouts`文件夹。从该文件中移除以下行：
- en: '[PRE3]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, go to the JavaScript folder by navigating to `app` | `assets` | `javascript`
    folder and edit the `application.js` file. Add the following line immediately
    after the jQuery line:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过导航到`app` | `assets` | `javascript`文件夹，前往JavaScript文件夹并编辑`application.js`文件。在jQuery行后立即添加以下行：
- en: '[PRE4]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Finally, we are done. If you reopen your application in the browser, you can
    see that everything is working, just like before.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们完成了。如果您在浏览器中重新打开应用程序，您会看到一切正常，就像之前一样。
- en: Customizing Bootstrap through variables
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过变量定制 Bootstrap
- en: Most of the visible Bootstrap styles can be overridden simply by using pre-defined
    Bootstrap variables. Before proceeding, you should understand that Bootstrap was
    initially compatible with LESS only. They have later ported it to the Sass version.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数可见的 Bootstrap 样式都可以通过使用预定义的 Bootstrap 变量简单地覆盖。在继续之前，你应该了解 Bootstrap 最初只与
    LESS 兼容。他们后来将其移植到了 Sass 版本。
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: LESS and Sass are CSS preprocessors that help us to organize and write scalable
    CSS styles. Both of them are very similar to each other in syntax and differ only
    by the additional features that one has and the other doesn't.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: LESS 和 Sass 是帮助我们组织和编写可扩展 CSS 样式的 CSS 预处理器。在语法上，它们非常相似，只是在附加功能上有所不同，一个有而另一个没有。
- en: Hence, all the variables present in the LESS version remain the same in the
    Sass version, as well. Bootstrap hasn't provided a dedicated page for the list
    of variables present in Sass, however, you can find the list of variables in the
    LESS version on their official website ([http://getbootstrap.com/customize/#less-variables](http://getbootstrap.com/customize/#less-variables)).
    Let's proceed and change some of the default Bootstrap styles.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，LESS 版本中存在的所有变量在 Sass 版本中也保持不变。虽然 Bootstrap 没有提供专门列出 Sass 中变量列表的页面，但你可以在他们的官方网站上找到
    LESS 版本中变量的列表（[http://getbootstrap.com/customize/#less-variables](http://getbootstrap.com/customize/#less-variables)）。让我们继续并更改一些默认的
    Bootstrap 样式。
- en: 'In our application, we have used `.btn-success` at various places. So, let''s
    change some of the CSS styles in it. Re-open the `application.css.scss` file,
    and add the following lines before the Bootstrap''s import line:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的应用中，我们在多个地方使用了 `.btn-success`。因此，让我们更改其中的一些 CSS 样式。重新打开 `application.css.scss`
    文件，在 Bootstrap 的导入行之前添加以下行：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We can change the style of the `.btn-success` class completely through the `$btn-success-color`,
    `$btn-success-bg`, and `$btn-success-border` Bootstrap Sass variables. In the
    above code, I have changed the text color of the button to `#333`. I have also
    lightened the background color to a new HEX color, and finally changed the border
    color using the darken color function in Sass.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 `$btn-success-color`、`$btn-success-bg` 和 `$btn-success-border` 这些 Bootstrap
    Sass 变量完全更改 `.btn-success` 类的样式。在上面的代码中，我已经将按钮的文本颜色更改为 `#333`。我还将背景颜色变亮为新的十六进制颜色，并最终使用
    Sass 中的深色颜色函数更改了边框颜色。
- en: 'You can go through the whole list of available variables and make the customizations
    accordingly. You can also include the available Bootstrap theme by adding the
    following line in the `application.css.scss` file:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过查看所有可用的变量并根据需要进行定制。你还可以通过在 `application.css.scss` 文件中添加以下行来包含可用的 Bootstrap
    主题：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `bootstrap/theme` is the official Bootstrap's default style customized from
    Bootstrap's theme. It comes with some cool styles and you should try using it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`bootstrap/theme` 是从 Bootstrap 主题定制而来的官方 Bootstrap 默认样式。它包含了一些酷炫的样式，你应该尝试使用它。'
- en: Summary
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Bootstrap customization can help you create a visually different looking website.
    If you are a designer in the Rails application development team, this is the field
    you must master. In this chapter, we saw how to include Bootstrap-sass gem in
    a Rails application. We also understood what it takes to override the default
    Bootstrap styles through pre-defined variables. I hope you found this useful.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 定制化可以帮助你创建外观不同的网站。如果你是 Rails 应用开发团队中的设计师，这是你必须掌握的领域。在本章中，我们看到了如何在
    Rails 应用中包含 Bootstrap-sass 钩子。我们还了解了通过预定义变量覆盖默认 Bootstrap 样式的步骤。希望这对你有所帮助。
- en: In the end, if you still have questions related to using Bootstrap in Rails
    applications shoot me a tweet `@fazlerocks`, I will be happy to help you!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你在使用 Bootstrap 的 Rails 应用中还有相关问题，请给我发条推文 `@fazlerocks`，我会很乐意帮助你！
